OBJECT Report 50076 Adjust Exchange Rates SQL
{
  OBJECT-PROPERTIES
  {
    Date=27.03.17;
    Time=14:18:09;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    Permissions=TableData 21=rimd,
                TableData 25=rimd,
                TableData 86=rimd,
                TableData 254=rimd,
                TableData 379=rimd,
                TableData 380=rimd;
    CaptionML=[ENU=Adjust Exchange Rates;
               RUS=Коррекция Курс. Разниц];
    OnInitReport=BEGIN
                   //NC M1 > DP

                   StandParam.RESET;
                   StandParam.SETRANGE("Report ID",REPORT::"Adjust Exchange Rates SQL");
                   IF StandParam.FINDFIRST THEN BEGIN
                     IF (StandParam."Posting Date"<>'') AND CurrReport.USEREQUESTPAGE THEN
                       PostingDate:=CALCDATE(StandParam."Posting Date",WORKDATE);
                       IF StandParam."Gen. Journal Template"<>'' THEN
                       Template:=StandParam."Gen. Journal Template";
                     IF StandParam."Gen. Journal Batch"<>'' THEN
                       Batch:=StandParam."Gen. Journal Batch";
                     IF StandParam."Prefix Numbers"<>'' THEN
                       PostingDocNo:=StandParam."Prefix Numbers";
                     IF PostingDate <> 0D THEN
                       PostingDocNo:=PostingDocNo+FORMAT(PostingDate,0,'<Year><Month,2><Day,2>');
                      IF StandParam."Posting Description"<>'' THEN
                       PostingDescription:=StandParam."Posting Description";
                     TestMode:=NOT StandParam.Post;
                   END
                   ELSE
                     ERROR(Text50002+StandParam.TABLECAPTION);

                   MovingDataSetup.GET;
                   //NC M1 > DP
                 END;

    OnPreReport=BEGIN
                  {ERROR(STRSUBSTNO('%1 %2\%3 %4\%5 %6\%7 %8\%9 %10',
                        'Переоценка Фин. Счетов -', FORMAT(AdjGLAcc),
                        'Переоценка Клиентов -', FORMAT(AdjCust),
                        'Переоценка Поставщиков -', FORMAT(AdjVend),
                        'Переоценка Банка -', FORMAT(AdjBank),
                        'Тестовый режим -', FORMAT(TestMode)));
                  }

                  IF EndDateReq = 0D THEN
                    EndDate := 31129999D
                  ELSE
                    EndDate := EndDateReq;
                  IF (NOT AdjCust) AND (NOT AdjVend) AND (NOT AdjBank) AND AdjGLAcc THEN
                    IF NOT CONFIRM(Text001 + Text004,FALSE) THEN
                      ERROR(Text005);

                  SourceCodeSetup.GET;

                  IF ExchRateAdjReg.FIND('+') THEN
                    ExchRateAdjReg.INIT;

                  GLSetup.GET;

                  IF AdjGLAcc THEN BEGIN
                    GLSetup.TESTFIELD("Additional Reporting Currency");

                    Currency3.GET(GLSetup."Additional Reporting Currency");
                    Currency3.TESTFIELD("Realized G/L Gains Account");
                    "G/L Account".GET(Currency3."Realized G/L Gains Account");
                    "G/L Account".TESTFIELD(
                      "Exchange Rate Adjustment",
                      "G/L Account"."Exchange Rate Adjustment"::"No Adjustment");

                    Currency3.TESTFIELD("Realized G/L Losses Account");
                    "G/L Account".GET(Currency3."Realized G/L Losses Account");
                    "G/L Account".TESTFIELD(
                      "Exchange Rate Adjustment",
                      "G/L Account"."Exchange Rate Adjustment"::"No Adjustment");

                    WITH VATPostingSetup2 DO
                      IF FIND('-') THEN
                        REPEAT
                          IF "VAT Calculation Type" <> "VAT Calculation Type"::"Sales Tax" THEN BEGIN
                            CheckExchRateAdjustment(
                              "Purchase VAT Account",TABLECAPTION,FIELDCAPTION("Purchase VAT Account"));
                            CheckExchRateAdjustment(
                              "Reverse Chrg. VAT Acc.",TABLECAPTION,FIELDCAPTION("Reverse Chrg. VAT Acc."));
                            CheckExchRateAdjustment(
                              "Purch. VAT Unreal. Account",TABLECAPTION,FIELDCAPTION("Purch. VAT Unreal. Account"));
                            CheckExchRateAdjustment(
                              "Reverse Chrg. VAT Unreal. Acc.",TABLECAPTION,FIELDCAPTION("Reverse Chrg. VAT Unreal. Acc."));
                            CheckExchRateAdjustment(
                              "Sales VAT Account",TABLECAPTION,FIELDCAPTION("Sales VAT Account"));
                            CheckExchRateAdjustment(
                              "Sales VAT Unreal. Account",TABLECAPTION,FIELDCAPTION("Sales VAT Unreal. Account"));
                          END;
                        UNTIL NEXT = 0;

                    WITH TaxJurisdiction2 DO
                      IF FIND('-') THEN
                        REPEAT
                          CheckExchRateAdjustment(
                            "Tax Account (Purchases)",TABLECAPTION,FIELDCAPTION("Tax Account (Purchases)"));
                          CheckExchRateAdjustment(
                            "Reverse Charge (Purchases)",TABLECAPTION,FIELDCAPTION("Reverse Charge (Purchases)"));
                          CheckExchRateAdjustment(
                            "Unreal. Tax Acc. (Purchases)",TABLECAPTION,FIELDCAPTION("Unreal. Tax Acc. (Purchases)"));
                          CheckExchRateAdjustment(
                            "Unreal. Rev. Charge (Purch.)",TABLECAPTION,FIELDCAPTION("Unreal. Rev. Charge (Purch.)"));
                          CheckExchRateAdjustment(
                            "Tax Account (Sales)",TABLECAPTION,FIELDCAPTION("Tax Account (Sales)"));
                          CheckExchRateAdjustment(
                            "Unreal. Tax Acc. (Sales)",TABLECAPTION,FIELDCAPTION("Unreal. Tax Acc. (Sales)"));
                        UNTIL NEXT = 0;

                    AddCurrCurrencyFactor :=
                      CurrExchRate2.ExchangeRateAdjmt(PostingDate,GLSetup."Additional Reporting Currency");
                  END;
                END;

    OnPostReport=BEGIN
                   UpdateAnalysisView.UpdateAll(0,TRUE);
                 END;

  }
  DATASET
  {
    { 7745;    ;DataItem;Header              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 1210001;1;Column  ;USERID              ;
               SourceExpr=USERID }

    { 1210002;1;Column  ;COMPANYNAME         ;
               SourceExpr=COMPANYNAME }

    { 1210003;1;Column  ;CurrReport_PAGENO   ;
               SourceExpr=CurrReport.PAGENO }

    { 1210005;1;Column  ;FORMAT_TODAY_0_4_   ;
               SourceExpr=FORMAT(TODAY,0,4) }

    { 1210000;1;Column  ;Adjust_Exchange_RatesCaption;
               SourceExpr=Adjust_Exchange_RatesCaptionLbl }

    { 1210004;1;Column  ;CurrReport_PAGENOCaption;
               SourceExpr=CurrReport_PAGENOCaptionLbl }

    { 7855;1   ;Column  ;Header_Number       ;
               SourceExpr=Number }

    { 3267;    ;DataItem;BankAccountFilter   ;
               DataItemTable=Table270;
               DataItemTableView=SORTING(Bank Acc. Posting Group);
               OnPreDataItem=BEGIN
                               IF NOT AdjBank THEN
                                 CurrReport.BREAK;
                             END;

               ReqFilterFields=No. }

    { 4146;    ;DataItem;                    ;
               DataItemTable=Table4;
               DataItemTableView=SORTING(Code)
                                 WHERE(Currency Type=CONST(Currency));
               PrintOnlyIfDetail=Yes;
               OnPreDataItem=BEGIN
                               CheckPostingDate;
                               IF (EndDate = 0D) THEN
                                 ERROR(Text12401);
                               IF (NOT AdjCust) AND (NOT AdjVend) AND (NOT AdjBank) THEN
                                 CurrReport.BREAK;

                               GetSelectedDims;
                               //NC M1 > DP
                               IF GUIALLOWED THEN BEGIN
                               //NC M1 < DP
                               Window.OPEN(
                                 Text006 +
                                 Text007 +
                                 Text008 +
                                 Text009 +
                                 //NC M2 > DP
                                 {
                                 Text010 );
                                 }
                                 Text010 +
                                 Text50003);
                                 //NC M2 > DP

                               //NC M1 > DP
                               END;

                               {
                               CustNoTotal := Customer.COUNT;
                               VendNoTotal := Vendor.COUNT;
                               }
                               //NC M1 < DP
                               {
                               Currency.COPYFILTER(Code,"Bank Account"."Currency Code");
                               FILTERGROUP(2);
                               "Bank Account".SETFILTER("Currency Code",'<>%1','');
                               FILTERGROUP(0);
                               BankAccNoTotal := "Bank Account".COUNT;
                               "Bank Account".RESET;
                               }
                               TotalAmount := 0;

                               //NC M1 > DP
                               //получение набора данных из хранимой процедуры GetFXRevalCombinations
                               tmpBankAccount.DELETEALL;
                               cuAdo.GetConnectionString(COMPANYNAME,FX_Type::"Bank Account",lRecSet);

                               lcount:=lRecSet.RecordCount();
                               IF lcount>0 THEN BEGIN
                                 lRecSet.MoveFirst;
                                 WHILE NOT lRecSet.EOF() DO BEGIN
                                   lKeyCode := cuAdo.VarToText(lRecSet.Fields().Item('Code').Value);
                                   lKeyCurrency := cuAdo.VarToText(lRecSet.Fields().Item('CurrencyCode').Value);
                                   lKeyPG := cuAdo.VarToText(lRecSet.Fields().Item('PostingGroup').Value);

                                   tmpBankAccountPG.INIT;
                                   tmpBankAccountPG."Customer No." := lKeyCode;
                                   tmpBankAccountPG.Code :=lKeyPG;
                                   tmpBankAccountPG."Currency Code" := lKeyCurrency;

                                   IF tmpBankAccountPG.INSERT THEN;

                                   lRecSet.MoveNext;
                                 END;
                               END;
                               CLEAR(lRecSet);
                               //NC M1 < DP
                             END;

               OnAfterGetRecord=VAR
                                  CstLE@1101495000 : Record 21;
                                  VndLE@1101495001 : Record 25;
                                  BALE@1101495002 : Record 271;
                                  IsCurrencyInLE@1101495003 : Boolean;
                                BEGIN
                                  "Last Date Adjusted" := PostingDate;
                                  {
                                  IF NOT TestMode THEN
                                    MODIFY;
                                  }
                                  //NC MLN30 > DP
                                  IsCurrencyInLE := FALSE;

                                  IF NOT IsCurrencyInLE AND AdjCust THEN BEGIN
                                    CstLE.RESET;
                                    CstLE.SETCURRENTKEY("Customer No.","Posting Date","Currency Code","Agreement No.");

                                    //NC NCS-758 > DP
                                    CstLE.SETFILTER("Posting Date",'..%1',EndDate);
                                    //NC NCS-758 < DP

                                    CstLE.SETRANGE("Currency Code",Currency.Code);
                                    IF CstLE.FINDFIRST THEN
                                      IsCurrencyInLE := TRUE;
                                  END;

                                  IF NOT IsCurrencyInLE AND AdjVend THEN BEGIN
                                    VndLE.RESET;
                                    VndLE.SETCURRENTKEY("Vendor No.","Posting Date","Currency Code","Agreement No.");

                                    //NC NCS-758 > DP
                                    VndLE.SETFILTER("Posting Date",'..%1',EndDate);
                                    //NC NCS-758 < DP

                                    VndLE.SETRANGE("Currency Code",Currency.Code);
                                    IF VndLE.FINDFIRST THEN
                                      IsCurrencyInLE := TRUE;
                                  END;

                                  IF NOT IsCurrencyInLE AND AdjBank THEN BEGIN
                                    BALE.RESET;
                                    BALE.SETCURRENTKEY("Currency Code");

                                    //NC NCS-758 > DP
                                    BALE.SETFILTER("Posting Date",'..%1',EndDate);
                                    //NC NCS-758 < DP

                                    BALE.SETRANGE("Currency Code",Currency.Code);
                                    IF BALE.FINDFIRST THEN
                                      IsCurrencyInLE := TRUE;
                                  END;

                                  IF NOT IsCurrencyInLE THEN
                                    "Currency Factor" := 1
                                  ELSE
                                  //NC MLN30 < DP

                                  "Currency Factor" :=
                                    CurrExchRate.ExchangeRateAdjmt(PostingDate,Code);

                                  Currency2 := Currency;
                                  Currency2.INSERT;
                                  IF Currency2.Conventional THEN
                                    CurrReport.SKIP;
                                END;

               OnPostDataItem=BEGIN
                                IF (Code = '') AND (AdjCust OR AdjVend OR AdjBank) THEN

                                  //NC M1 > DP
                                  IF GUIALLOWED THEN
                                  //NC M1 < DP

                                  ERROR(Text011);
                              END;

               ReqFilterFields=Code }

    { 1210018;1;Column  ;BankAccount_TABLECAPTION;
               SourceExpr=BankAccount.TABLECAPTION }

    { 1210024;1;Column  ;V1__Currency_Factor_;
               SourceExpr=1/"Currency Factor" }

    { 1210025;1;Column  ;STRSUBSTNO_Text12403_PostingDate_;
               SourceExpr=STRSUBSTNO(Text12403,PostingDate) }

    { 1210026;1;Column  ;Currency_Description;
               SourceExpr=Description }

    { 1210027;1;Column  ;Currency_Code       ;
               SourceExpr=Code }

    { 1210053;1;Column  ;TotalAmount         ;
               SourceExpr=TotalAmount }

    { 1210056;1;Column  ;Text12404           ;
               SourceExpr=Text12404 }

    { 1210006;1;Column  ;Adj__AmountCaption  ;
               SourceExpr=Adj__AmountCaptionLbl }

    { 1210009;1;Column  ;Adj__Balance_at_Date__LCY_Caption;
               SourceExpr=Adj__Balance_at_Date__LCY_CaptionLbl }

    { 1210011;1;Column  ;BankAccount__Balance_at_Date__LCY__Caption;
               SourceExpr=BankAccount__Balance_at_Date__LCY__CaptionLbl }

    { 1210013;1;Column  ;BankAccount__Balance_at_Date_Caption;
               SourceExpr=BankAccount__Balance_at_Date_CaptionLbl }

    { 1210015;1;Column  ;NameCaption         ;
               SourceExpr=NameCaptionLbl }

    { 1210019;1;Column  ;BankAccount__No__Caption;
               SourceExpr=BankAccount__No__CaptionLbl }

    { 1210042;1;Column  ;Exchange_RateCaption;
               SourceExpr=Exchange_RateCaptionLbl }

    { 7100;1   ;DataItem;BankLoop            ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 ORDER(Ascending);
               OnPreDataItem=BEGIN
                               IF NOT AdjBank THEN
                                 CurrReport.BREAK;
                               CurrReport.CREATETOTALS(AdjBalance,BalanceAtDateLCY);
                               CurrReport.CREATETOTALS(AdjBase,AdjBaseLCY,AdjAmount);
                               TempEntryNoAmountBuf.DELETEALL;

                               BankAccount.SETRANGE("Date Filter",StartDate,EndDate);
                               IF BankAccountFilter.GETFILTER("No.")<>'' THEN
                                 tmpBankAccountPG.SETFILTER("Customer No.",BankAccountFilter.GETFILTER("No."));

                               tmpBankAccountPG.SETFILTER("Currency Code", Currency.Code);
                               IF NOT tmpBankAccountPG.FIND('-') THEN
                                 CurrReport.BREAK;
                               FirstEntry := TRUE;
                               BankAccNoTotal := tmpBankAccountPG.COUNT;
                             END;

               OnAfterGetRecord=VAR
                                  GADefDim@1101495000 : Record 352;
                                  BAPostingGroup@1101495001 : Record 277;
                                  BADefDim@1101495002 : Record 352;
                                BEGIN
                                  //NC M1 > DP
                                  IF FirstEntry THEN BEGIN
                                    tmpBankAccountPG.FIND('-');
                                    FirstEntry := FALSE
                                  END ELSE
                                    IF tmpBankAccountPG.NEXT = 0 THEN
                                      CurrReport.BREAK;
                                  BankAccount.GET(tmpBankAccountPG."Customer No.");
                                  //NC M1 > DP

                                  BankAccNo := BankAccNo + 1;


                                  //NC M1 > DP
                                  IF GUIALLOWED THEN
                                  //NC M1 < DP

                                  Window.UPDATE(1,ROUND(BankAccNo / BankAccNoTotal * 10000,1));

                                  IF (tmpBankAccountPG.Code<>'') AND (tmpBankAccountPG.Code<>BankAccount."Bank Acc. Posting Group") THEN
                                    BankAccount.SETFILTER("Bank Acc. Posting Group Filter", '%1', tmpBankAccountPG.Code)
                                  ELSE
                                    IF (tmpBankAccountPG.Code<>'') AND (tmpBankAccountPG.Code=BankAccount."Bank Acc. Posting Group") THEN
                                      BankAccount.SETFILTER("Bank Acc. Posting Group Filter", '%1|%2', tmpBankAccountPG.Code,'')
                                    ELSE
                                      IF tmpBankAccountPG.Code='' THEN
                                        BankAccount.SETFILTER("Bank Acc. Posting Group Filter", '');

                                  TempJnlLineDim.RESET;
                                  TempJnlLineDim.DELETEALL;
                                  TempDimBuf.RESET;
                                  TempDimBuf.DELETEALL;

                                  BankAccount.CALCFIELDS("Balance at Date","Balance at Date (LCY)");
                                  BalanceAtDateLCY := BankAccount."Balance at Date (LCY)";
                                  AdjBase := BankAccount."Balance at Date";
                                  AdjBaseLCY := BankAccount."Balance at Date (LCY)";

                                  //NCS-758.2 > DP
                                  IF (AdjBase=0) AND (AdjBaseLCY=0) THEN
                                    CurrReport.SKIP;
                                  //NCS-758.2 < DP

                                  AdjAmount :=
                                    ROUND(
                                      CurrExchRate.ExchangeAmtFCYToLCYAdjmt(
                                        PostingDate,Currency.Code,BankAccount."Balance at Date",Currency."Currency Factor")) -
                                    BankAccount."Balance at Date (LCY)";

                                  AdjBalance := AdjAmount + BankAccount."Balance at Date (LCY)";
                                  TotalAmount += AdjAmount;
                                  IF AdjAmount > 0 THEN
                                    TotalAmountPos += AdjAmount
                                  ELSE
                                    TotalAmountNeg += AdjAmount;

                                  IF AdjAmount = 0 THEN
                                    CurrReport.SKIP;

                                  IF AdjAmount <> 0 THEN BEGIN
                                    GenJnlLine.INIT;
                                    GenJnlLine.VALIDATE("Posting Date",PostingDate);
                                    GenJnlLine."Document No." := PostingDocNo;
                                    GenJnlLine."Account Type" := GenJnlLine."Account Type"::"Bank Account";
                                    GenJnlLine.VALIDATE("Account No.",BankAccount."No.");
                                    GenJnlLine.Description := STRSUBSTNO(PostingDescription,Currency.Code,AdjBase);
                                    //NC APCOC-104 > RD
                                    GenJnlLine."Not Translate" := StandParam."Not Translate";
                                    //NC APCOC-104 < RD
                                    //NC APCOC-117 > RD
                                    GenJnlLine."Not Translate IFRS" := StandParam."Not Translate IFRS";
                                    //NC APCOC-117 < RD

                                    IF tmpBankAccountPG.Code<>'' THEN
                                      GenJnlLine."Posting Group" := tmpBankAccountPG.Code
                                    ELSE
                                      GenJnlLine."Posting Group" := BankAccount."Bank Acc. Posting Group";

                                    GenJnlLine.VALIDATE(Amount,0);
                                    GenJnlLine."Amount (LCY)" := AdjAmount;
                                    GenJnlLine."Source Currency Code" := Currency.Code;

                                    IF Currency.Code = GLSetup."Additional Reporting Currency" THEN
                                    //NC OAM44 > DP
                                    {
                                    IF Currency.Code = GLSetup."Additional Reporting Currency" THEN
                                    }
                                    IF (Currency.Code = GLSetup."Additional Reporting Currency") AND NOT GLSetup."Calc. FX Add. Curr. Amount" THEN
                                    //NC OAM44 < DP

                                      GenJnlLine."Source Currency Amount" := 0;
                                    GenJnlLine."Source Code" := SourceCodeSetup."Exchange Rate Adjmt.";
                                    GenJnlLine."System-Created Entry" := TRUE;

                                    GenJnlLine."Currency Index Entry" := TRUE;
                                    GenJnlLine."Currency Index" := tmpBankAccountPG."Currency Code";
                                    GetJnlLineDefDim(GenJnlLine,TempJnlLineDim);
                                    //NC OBM003 > EB
                                    GLSetup.TESTFIELD("Taxable Dimension Code");
                                    GLSetup.TESTFIELD("Mixed Taxable Dimension Value");
                                    TempJnlLineDim.INIT;
                                    TempJnlLineDim."Table ID" := DATABASE::"Gen. Journal Line";
                                    TempJnlLineDim."Journal Template Name" := GenJnlLine."Journal Template Name";
                                    TempJnlLineDim."Journal Batch Name" := GenJnlLine."Journal Batch Name";
                                    TempJnlLineDim.VALIDATE("Dimension Code", GLSetup."Taxable Dimension Code");
                                    TempJnlLineDim.VALIDATE("Dimension Value Code", GLSetup."Mixed Taxable Dimension Value");
                                    IF NOT TempJnlLineDim.INSERT(TRUE) THEN
                                      TempJnlLineDim.MODIFY(TRUE);

                                    //NC OBM003 < EB
                                    MovingDataSetup.GET;
                                    IF BAPostingGroup.GET(tmpBankAccountPG.Code) THEN
                                      IF GADefDim.GET(15,BAPostingGroup."G/L Bank Account No.",MovingDataSetup."Customer Dimension Code") AND
                                        NOT BADefDim.GET(270,BankAccount."No.",MovingDataSetup."Customer Dimension Code") THEN BEGIN
                                        BankAccount.TESTFIELD("Customer No.");
                                        TempJnlLineDim.INIT;
                                        TempJnlLineDim."Table ID" := DATABASE::"Gen. Journal Line";
                                        TempJnlLineDim."Journal Template Name" := GenJnlLine."Journal Template Name";
                                        TempJnlLineDim."Journal Batch Name" := GenJnlLine."Journal Batch Name";
                                        TempJnlLineDim.VALIDATE("Dimension Code", MovingDataSetup."Customer Dimension Code");
                                        TempJnlLineDim.VALIDATE("Dimension Value Code", BankAccount."Customer No.");
                                        IF NOT TempJnlLineDim.INSERT(TRUE) THEN
                                          TempJnlLineDim.MODIFY(TRUE);
                                      END;

                                    CopyJnlLineDimToDimBuf(TempJnlLineDim,TempDimBuf);
                                    GenJnlLine."Source Type" := GenJnlLine."Source Type"::"Bank Account";
                                    GenJnlLine."Source No." := BankAccount."No.";
                                    IF NOT TestMode THEN BEGIN
                                      GetTempJnlLineDim(TempJnlLineDim,GenJnlLine,BalAccType::Real,Currency.Code,AdjAmount > 0);
                                      PostGenJnlLine(GenJnlLine,TempJnlLineDim);
                                    END;
                                    WITH TempEntryNoAmountBuf DO BEGIN
                                      INIT;
                                      "Business Unit Code" := '';
                                      "Entry No." := GetDimCombID(TempDimBuf);
                                      IF NOT FIND THEN
                                        INSERT;
                                      Amount := Amount + AdjAmount;
                                      Amount2 := Amount2 + AdjBase;
                                      MODIFY;
                                    END;
                                    TotalAdjAmount := TotalAdjAmount + AdjAmount;

                                    //NC M1 > DP
                                    IF GUIALLOWED THEN
                                    //NC M1 < DP

                                    Window.UPDATE(4,TotalAdjAmount);
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                IF FALSE THEN
                                IF TempEntryNoAmountBuf.FIND('-') THEN
                                  REPEAT
                                    IF TempEntryNoAmountBuf.Amount <> 0 THEN BEGIN
                                      TempJnlLineDim.RESET;
                                      TempJnlLineDim.DELETEALL;
                                      TempDimBuf.RESET;
                                      TempDimBuf.DELETEALL;
                                      DimBufMgt.GetDimensions(TempEntryNoAmountBuf."Entry No.",TempDimBuf);
                                      DimMgt.CopyDimBufToDimSetEntry(
                                        TempDimBuf,TempJnlLineDim,GenJnlLine."Journal Template Name",
                                        GenJnlLine."Journal Batch Name",GenJnlLine."Line No.");
                                      IF TempEntryNoAmountBuf.Amount > 0 THEN BEGIN
                                        Currency.TESTFIELD("Realized Gains Acc.");
                                        //PostAdjmt(
                                        //  Currency."Realized Gains Acc.",-TempEntryNoAmountBuf.Amount,TempEntryNoAmountBuf.Amount2,
                                        //  "Currency Code",TempJnlLineDim,PostingDate);
                                      END ELSE BEGIN
                                        Currency.TESTFIELD("Realized Losses Acc.");
                                        //PostAdjmt(
                                        //  Currency."Realized Losses Acc.",-TempEntryNoAmountBuf.Amount,TempEntryNoAmountBuf.Amount2,
                                        //  "Currency Code",TempJnlLineDim,PostingDate);
                                      END;
                                    END;
                                  UNTIL TempEntryNoAmountBuf.NEXT = 0;
                                TempEntryNoAmountBuf.DELETEALL;
                              END;
                               }

    { 1210030;2;Column  ;BankAccount_Name    ;
               SourceExpr=BankAccount.Name }

    { 1210031;2;Column  ;BankAccount__Balance_at_Date_;
               SourceExpr=BankAccount."Balance at Date" }

    { 1210032;2;Column  ;BankAccount__Balance_at_Date__LCY__;
               SourceExpr=BankAccount."Balance at Date (LCY)" }

    { 1210033;2;Column  ;AdjBalance          ;
               SourceExpr=AdjBalance }

    { 1210034;2;Column  ;AdjBalance___BankAccount__Balance_at_Date__LCY__;
               SourceExpr=AdjBalance - BankAccount."Balance at Date (LCY)" }

    { 1210041;2;Column  ;BankAccount__No__   ;
               SourceExpr=BankAccount."No." }

    { 1101495000;2;Column;tmpBankAccountPG_Code;
               SourceExpr=tmpBankAccountPG.Code }

    { 1210051;2;Column  ;Currency_Code_Control1210051;
               SourceExpr=Currency.Code }

    { 1210050;2;Column  ;Currency_Description_Control1210050;
               SourceExpr=Currency.Description }

    { 1210048;2;Column  ;Text12404_Control1210048;
               SourceExpr=Text12404 }

    { 1210045;2;Column  ;AdjBalance___BalanceAtDateLCY;
               SourceExpr=AdjBalance - BalanceAtDateLCY }

    { 3370;2   ;Column  ;BankLoop_Number     ;
               SourceExpr=Number }

    { 9740;    ;DataItem;CustomerFilter      ;
               DataItemTable=Table18;
               DataItemTableView=SORTING(No.)
                                 ORDER(Ascending);
               OnPreDataItem=BEGIN
                               IF NOT AdjCust THEN
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  CurrReport.BREAK;
                                END;

               ReqFilterFields=No.,Agreement Filter }

    { 6753;    ;DataItem;CustLoop            ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 ORDER(Ascending);
               PrintOnlyIfDetail=Yes;
               OnPreDataItem=BEGIN
                               IF NOT AdjCust THEN
                                 CurrReport.BREAK;

                               DtldCustLedgEntry.LOCKTABLE;
                               CustLedgerEntry.LOCKTABLE;

                               CustNo := 0;

                               IF DtldCustLedgEntry.FIND('+') THEN
                                 NewEntryNo := DtldCustLedgEntry."Entry No." + 1
                               ELSE
                                 NewEntryNo := 1;

                               TotalAmount := 0;
                               CLEAR(DimMgt);
                               TempEntryNoAmountBuf.DELETEALL;


                               //NC M1 > DP
                               CLEAR(DimBufMgt);
                               //получение набора данных из хранимой процедуры GetFXRevalCombinations
                               tmpCustomer.DELETEALL;

                               //NC M2 > DP
                               IF GUIALLOWED THEN
                               Window.UPDATE(5,Text50004);
                               //NC M2 < DP


                               cuAdo.GetConnectionString(COMPANYNAME,FX_Type::Customer,lRecSet);

                               //NC M2 > DP
                               IF GUIALLOWED THEN
                               Window.UPDATE(5,Text50005);
                               //NC M2 < DP


                               lcount:=lRecSet.RecordCount();
                               IF lcount>0 THEN BEGIN
                                 lRecSet.MoveFirst;
                                 WHILE NOT lRecSet.EOF() DO BEGIN
                                   lKeyCode := cuAdo.VarToText(lRecSet.Fields().Item('Code').Value);
                                   lKeyCurrency := cuAdo.VarToText(lRecSet.Fields().Item('CurrencyCode').Value);
                                   IF Customer.GET(lKeyCode) THEN BEGIN
                                     tmpCustomer.INIT;
                                     tmpCustomer.TRANSFERFIELDS(Customer);
                                     tmpCustomer."Currency Code" := lKeyCurrency;
                                     IF tmpCustomer.INSERT THEN;
                                   END;

                                   lRecSet.MoveNext;
                                 END;
                               END;
                               CLEAR(lRecSet);

                               //NC M2 > DP
                               IF GUIALLOWED THEN
                               Window.UPDATE(5,'');
                               //NC M2 < DP

                               tmpCustomer.COPYFILTERS(CustomerFilter);
                               IF NOT tmpCustomer.FIND('-') THEN
                                 CurrReport.BREAK;
                               FirstEntry := TRUE;
                               CustNoTotal := tmpCustomer.COUNT;
                               //NC M1 < DP

                               //NCS-995 AT>>
                               CLE.RESET;
                               CLE.SETCURRENTKEY("Customer No.",Open);
                               CLE.SETRANGE(Open,TRUE);
                               CLE.SETRANGE("Posting Date",0D,EndDate);
                               CLE.SETFILTER("Agreement No.",CustomerFilter.GETFILTER("Agreement Filter"));

                               Currency.COPYFILTER(Code,CLE."Currency Code");
                               CLE.FILTERGROUP(2);
                               CLE.SETFILTER("Currency Code",'<>%1','');
                               CLE.FILTERGROUP(0);

                               Currency.COPYFILTER(Code,CustLedgerEntry."Currency Code");
                               CustLedgerEntry.FILTERGROUP(2);
                               CustLedgerEntry.SETFILTER("Currency Code",'<>%1','');
                               CustLedgerEntry.FILTERGROUP(0);

                               DCLE.RESET;
                               DCLE.SETCURRENTKEY("Customer No.","Posting Date","Entry Type");
                               DCLE.SETRANGE("Posting Date",CALCDATE('<+1D>',EndDate),31129999D);
                               DCLE.SETRANGE("Entry Type",DCLE."Entry Type"::Application);
                               DCLE.SETFILTER("Agreement No.",CustomerFilter.GETFILTER("Agreement Filter"));
                               //NCS-995 AT<<
                             END;

               OnAfterGetRecord=BEGIN
                                  //NC M1 > DP
                                  IF FirstEntry THEN BEGIN
                                    tmpCustomer.FIND('-');
                                    FirstEntry := FALSE
                                  END ELSE
                                    IF tmpCustomer.NEXT = 0 THEN
                                      CurrReport.BREAK;
                                  Customer.GET(tmpCustomer."No.");
                                  //NC M1 > DP

                                  CustNo := CustNo + 1;


                                  //NC M1 > DP
                                  IF GUIALLOWED THEN
                                  //NC M1 < DP

                                  Window.UPDATE(2,ROUND(CustNo / CustNoTotal * 10000,1));


                                  TempCustLedgerEntry.DELETEALL;

                                  Currency.COPYFILTER(Code,CustLedgerEntry."Currency Code");
                                  //NCS-995 AT NCS-1083
                                  CustLedgerEntry.FILTERGROUP(2);
                                  CustLedgerEntry.SETFILTER("Currency Code",'<>%1','');
                                  CustLedgerEntry.FILTERGROUP(0);

                                  {NCS-995 AT>>
                                  DtldCustLedgEntry.RESET;
                                  DtldCustLedgEntry.SETCURRENTKEY("Customer No.","Posting Date","Entry Type");
                                  DtldCustLedgEntry.SETRANGE("Customer No.",Customer."No.");
                                  DtldCustLedgEntry.SETRANGE("Posting Date",CALCDATE('<+1D>',EndDate),31129999D);
                                  DtldCustLedgEntry.SETRANGE("Entry Type",DtldCustLedgEntry."Entry Type"::Application);
                                  DtldCustLedgEntry.SETFILTER("Agreement No.",CustomerFilter.GETFILTER("Agreement Filter"));
                                  IF DtldCustLedgEntry.FIND('-') THEN
                                    REPEAT
                                      CustLedgerEntry."Entry No." := DtldCustLedgEntry."Cust. Ledger Entry No.";
                                      IF CustLedgerEntry.FIND('=') THEN
                                        IF (CustLedgerEntry."Posting Date" >= StartDate) AND
                                          (CustLedgerEntry."Posting Date" <= EndDate)
                                        THEN BEGIN
                                          TempCustLedgerEntry."Entry No." := CustLedgerEntry."Entry No.";
                                          IF TempCustLedgerEntry.INSERT THEN;
                                        END;
                                    UNTIL DtldCustLedgEntry.NEXT = 0;
                                  NCS-995 AT<<}

                                  //NCS-995 AT>>
                                  DCLE.SETRANGE("Customer No.",Customer."No.");
                                  IF DCLE.FIND('-') THEN
                                    REPEAT
                                      CustLedgerEntry."Entry No." := DCLE."Cust. Ledger Entry No.";
                                      IF CustLedgerEntry.FIND('=') THEN
                                        IF (CustLedgerEntry."Posting Date" >= StartDate) AND
                                          (CustLedgerEntry."Posting Date" <= EndDate)
                                        THEN BEGIN
                                          TempCustLedgerEntry."Entry No." := CustLedgerEntry."Entry No.";
                                          IF TempCustLedgerEntry.INSERT THEN;
                                        END;
                                    UNTIL DCLE.NEXT = 0;
                                  //NCS-995 AT<<

                                  {NCS-995 AT>>
                                  CustLedgerEntry.SETCURRENTKEY("Customer No.",Open);
                                  CustLedgerEntry.SETRANGE("Customer No.",Customer."No.");
                                  CustLedgerEntry.SETRANGE(Open,TRUE);
                                  CustLedgerEntry.SETRANGE("Posting Date",0D,EndDate);
                                  CustLedgerEntry.SETFILTER("Agreement No.",CustomerFilter.GETFILTER("Agreement Filter"));
                                  IF CustLedgerEntry.FIND('-') THEN
                                    REPEAT
                                      TempCustLedgerEntry."Entry No." := CustLedgerEntry."Entry No.";
                                      IF TempCustLedgerEntry.INSERT THEN;
                                    UNTIL CustLedgerEntry.NEXT = 0;
                                  NCS-995 AT<<}

                                  //NCS-995 AT>>
                                  CLE.SETRANGE("Customer No.",Customer."No.");
                                  IF CLE.FIND('-') THEN
                                    REPEAT
                                      TempCustLedgerEntry."Entry No." := CLE."Entry No.";
                                      IF TempCustLedgerEntry.INSERT THEN;
                                    UNTIL CLE.NEXT = 0;
                                  //NCS-995 AT<<

                                  CustLedgerEntry.RESET;

                                  //IF NOT TempCustLedgerEntry.FINDFIRST THEN CurrReport.BREAK;
                                END;

               OnPostDataItem=BEGIN
                                IF (CustNo <> 0) THEN
                                  HandlePostAdjmt(1); // Customer
                              END;
                               }

    { 1210069;1;Column  ;STRSUBSTNO_Text12403_PostingDate__Control1210069;
               SourceExpr=STRSUBSTNO(Text12403,PostingDate) }

    { 1210077;1;Column  ;CustLedgerEntry_TABLECAPTION;
               SourceExpr=CustLedgerEntry.TABLECAPTION }

    { 1210087;1;Column  ;Customer_Name___Customer__Name_2_;
               SourceExpr=Customer.Name + Customer."Name 2" }

    { 1210088;1;Column  ;Customer__No__      ;
               SourceExpr=Customer."No." }

    { 1210123;1;Column  ;TotalAmount_Control1210123;
               SourceExpr=TotalAmount }

    { 1210126;1;Column  ;Итого__             ;
               SourceExpr='Итого:' }

    { 1210060;1;Column  ;Adj__AmountCaption_Control1210060;
               SourceExpr=Adj__AmountCaption_Control1210060Lbl }

    { 1210062;1;Column  ;Adj__Remaining_Amt___LCY_Caption;
               SourceExpr=Adj__Remaining_Amt___LCY_CaptionLbl }

    { 1210064;1;Column  ;CustLedgerEntry__Remaining_Amt___LCY__Caption;
               SourceExpr=CustLedgerEntry__Remaining_Amt___LCY__CaptionLbl }

    { 1210066;1;Column  ;CustLedgerEntry__Remaining_Amount_Caption;
               SourceExpr=CustLedgerEntry__Remaining_Amount_CaptionLbl }

    { 1210070;1;Column  ;Entry_Exch__RateCaption;
               SourceExpr=Entry_Exch__RateCaptionLbl }

    { 1210073;1;Column  ;CustLedgerEntry__Currency_Code_Caption;
               SourceExpr=CustLedgerEntry__Currency_Code_CaptionLbl }

    { 1210075;1;Column  ;CustLedgerEntry_DescriptionCaption;
               SourceExpr=CustLedgerEntry_DescriptionCaptionLbl }

    { 1210078;1;Column  ;CustLedgerEntry__Posting_Date_Caption;
               SourceExpr=CustLedgerEntry__Posting_Date_CaptionLbl }

    { 1210080;1;Column  ;CustLedgerEntry__Document_No__Caption;
               SourceExpr=CustLedgerEntry__Document_No__CaptionLbl }

    { 1210083;1;Column  ;DocumentTypeCaption ;
               SourceExpr=DocumentTypeCaptionLbl }

    { 1210106;1;Column  ;Agreement_No_Caption;
               SourceExpr=Agreement_No_CaptionLbl }

    { 2959;1   ;Column  ;CustLoop_Number     ;
               SourceExpr=Number }

    { 3687;1   ;DataItem;CustomerLedgerEntryLoop;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=VAR
                               DtldCustLedgEntry@1000 : Record 379;
                             BEGIN
                               IF NOT TempCustLedgerEntry.FIND('-') THEN
                                 CurrReport.BREAK;
                               FirstEntry := TRUE;
                               CurrReport.CREATETOTALS(AdjBalance,CustLedgerEntry."Remaining Amt. (LCY)");
                             END;

               OnAfterGetRecord=BEGIN
                                  IF FirstEntry THEN BEGIN
                                    TempCustLedgerEntry.FIND('-');
                                    FirstEntry := FALSE
                                  END ELSE
                                    IF TempCustLedgerEntry.NEXT = 0 THEN
                                      CurrReport.BREAK;
                                  CustLedgerEntry.GET(TempCustLedgerEntry."Entry No.");
                                  IF CustLedgerEntry.Prepayment THEN
                                    DocumentType := CustLedgerEntry.FIELDCAPTION(Prepayment)
                                  ELSE
                                    DocumentType := FORMAT(CustLedgerEntry."Document Type");
                                  CustLedgerEntry.CALCFIELDS("Remaining Amount","Remaining Amt. (LCY)");
                                  AdjustCustomerLedgerEntry(CustLedgerEntry,PostingDate);
                                END;
                                 }

    { 1210091;2;Column  ;CustLedgerEntry__Posting_Date_;
               SourceExpr=CustLedgerEntry."Posting Date" }

    { 1210092;2;Column  ;DocumentType        ;
               SourceExpr=DocumentType }

    { 1210093;2;Column  ;CustLedgerEntry__Document_No__;
               SourceExpr=CustLedgerEntry."Document No." }

    { 1210094;2;Column  ;CustLedgerEntry_Description;
               SourceExpr=CustLedgerEntry.Description }

    { 1210095;2;Column  ;CustLedgerEntry__Currency_Code_;
               DecimalPlaces=2:4;
               SourceExpr=CustLedgerEntry."Currency Code" }

    { 1210096;2;Column  ;CustLedgerEntry__Remaining_Amount_;
               SourceExpr=CustLedgerEntry."Remaining Amount" }

    { 1210097;2;Column  ;CustLedgerEntry__Remaining_Amt___LCY__;
               SourceExpr=CustLedgerEntry."Remaining Amt. (LCY)" }

    { 1210098;2;Column  ;AdjBalance_Control1210098;
               SourceExpr=AdjBalance }

    { 1210099;2;Column  ;AdjBalance___CustLedgerEntry__Remaining_Amt___LCY__;
               SourceExpr=AdjBalance - CustLedgerEntry."Remaining Amt. (LCY)" }

    { 1210111;2;Column  ;V1_Currency2__Currency_Factor_;
               DecimalPlaces=2:4;
               SourceExpr=1/Currency2."Currency Factor" }

    { 1210112;2;Column  ;ROUND_1_CustLedgerEntry__Original_Currency_Factor__0_0001_;
               SourceExpr=ROUND(1/CustLedgerEntry."Original Currency Factor",0.0001) }

    { 1210022;2;Column  ;CustLedgerEntry__Agreement_No__;
               SourceExpr=CustLedgerEntry."Agreement No." }

    { 1210117;2;Column  ;AdjBalance___CustLedgerEntry__Remaining_Amt___LCY___Control1210117;
               SourceExpr=AdjBalance - CustLedgerEntry."Remaining Amt. (LCY)" }

    { 1210119;2;Column  ;Text12404_Control1210119;
               SourceExpr=Text12404 }

    { 8252;2   ;Column  ;CustomerLedgerEntryLoop_Number;
               SourceExpr=Number }

    { 6942;2   ;DataItem;                    ;
               DataItemTable=Table379;
               DataItemTableView=SORTING(Cust. Ledger Entry No.,Posting Date);
               OnPreDataItem=BEGIN
                               SETCURRENTKEY("Cust. Ledger Entry No.");
                               SETRANGE("Cust. Ledger Entry No.",CustLedgerEntry."Entry No.");
                               SETFILTER("Posting Date",'%1..',CALCDATE('<+1D>',PostingDate));
                               SETRANGE("Entry Type","Entry Type"::Application);
                               SETRANGE("Agreement No.",CustLedgerEntry."Agreement No.");
                             END;

               OnAfterGetRecord=BEGIN
                                  AdjustCustomerLedgerEntry(CustLedgerEntry,"Posting Date");
                                END;
                                 }

    { 9714;    ;DataItem;VendorFilter        ;
               DataItemTable=Table23;
               DataItemTableView=SORTING(No.)
                                 ORDER(Ascending);
               OnPreDataItem=BEGIN
                               IF NOT AdjVend THEN
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  CurrReport.BREAK;
                                END;

               ReqFilterFields=No.,Agreement Filter }

    { 5210;    ;DataItem;VendLoop            ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 ORDER(Ascending);
               PrintOnlyIfDetail=Yes;
               OnPreDataItem=BEGIN
                               IF NOT AdjVend THEN
                                 CurrReport.BREAK;

                               DtldVendLedgEntry.LOCKTABLE;
                               VendorLedgerEntry.LOCKTABLE;

                               VendNo := 0;
                               IF DtldVendLedgEntry.FIND('+') THEN
                                 NewEntryNo := DtldVendLedgEntry."Entry No." + 1
                               ELSE
                                 NewEntryNo := 1;
                               TotalAmount := 0;
                               CLEAR(DimMgt);
                               TempEntryNoAmountBuf.DELETEALL;

                               //NC M1 > DP
                               CLEAR(DimBufMgt);
                               //получение набора данных из хранимой процедуры GetFXRevalCombinations
                               tmpVendor.DELETEALL;

                               //NC M2 > DP
                               IF GUIALLOWED THEN
                               Window.UPDATE(5,Text50004);
                               //NC M2 < DP

                               cuAdo.GetConnectionString(COMPANYNAME,FX_Type::Vendor,lRecSet);

                               //NC M2 > DP
                               IF GUIALLOWED THEN
                               Window.UPDATE(5,Text50005);
                               //NC M2 < DP

                               lcount:=lRecSet.RecordCount();
                               IF lcount>0 THEN BEGIN
                                 lRecSet.MoveFirst;
                                 WHILE NOT lRecSet.EOF() DO BEGIN
                                   lKeyCode := cuAdo.VarToText(lRecSet.Fields().Item('Code').Value);
                                   lKeyCurrency := cuAdo.VarToText(lRecSet.Fields().Item('CurrencyCode').Value);
                                   IF Vendor.GET(lKeyCode) THEN BEGIN
                                     tmpVendor.INIT;
                                     tmpVendor.TRANSFERFIELDS(Vendor);
                                     tmpVendor."Currency Code" := lKeyCurrency;
                                     IF tmpVendor.INSERT THEN;
                                   END;
                                   lRecSet.MoveNext;
                                 END;
                               END;

                               //NC M2 > DP
                               IF GUIALLOWED THEN
                               Window.UPDATE(5,'');
                               //NC M2 < DP

                               CLEAR(lRecSet);

                               tmpVendor.COPYFILTERS(VendorFilter);
                               IF NOT tmpVendor.FIND('-') THEN
                                 CurrReport.BREAK;
                               FirstEntry := TRUE;
                               VendNoTotal := tmpVendor.COUNT;
                               //NC M1 < DP

                               //NCS-995 AT>>
                               VLE.RESET;
                               VLE.SETCURRENTKEY("Vendor No.",Open);
                               VLE.SETRANGE(Open,TRUE);
                               VLE.SETRANGE("Posting Date",0D,EndDate);
                               VLE.SETFILTER("Agreement No.",VendorFilter.GETFILTER("Agreement Filter"));

                               Currency.COPYFILTER(Code,VLE."Currency Code");
                               VLE.FILTERGROUP(2);
                               VLE.SETFILTER("Currency Code",'<>%1','');
                               VLE.FILTERGROUP(0);

                               Currency.COPYFILTER(Code,VendorLedgerEntry."Currency Code");
                               VendorLedgerEntry.FILTERGROUP(2);
                               VendorLedgerEntry.SETFILTER("Currency Code",'<>%1','');
                               VendorLedgerEntry.FILTERGROUP(0);

                               DVLE.RESET;
                               DVLE.SETCURRENTKEY("Vendor No.","Posting Date","Entry Type");
                               DVLE.SETRANGE("Posting Date",CALCDATE('<+1D>',EndDate),31129999D);
                               DVLE.SETRANGE("Entry Type",DVLE."Entry Type"::Application);
                               DVLE.SETFILTER("Agreement No.",VendorFilter.GETFILTER("Agreement Filter"));
                               //NCS-995 AT<<
                             END;

               OnAfterGetRecord=BEGIN
                                  //NC M1 > DP
                                  IF FirstEntry THEN BEGIN
                                    tmpVendor.FIND('-');
                                    FirstEntry := FALSE
                                  END ELSE
                                    IF tmpVendor.NEXT = 0 THEN
                                      CurrReport.BREAK;
                                  Vendor.GET(tmpVendor."No.");
                                  //NC M1 > DP

                                  VendNo := VendNo + 1;

                                  //NC M1 > DP
                                  IF GUIALLOWED THEN
                                  //NC M1 < DP

                                  Window.UPDATE(3,ROUND(VendNo / VendNoTotal * 10000,1));

                                  TempVendorLedgerEntry.DELETEALL;

                                  Currency.COPYFILTER(Code,VendorLedgerEntry."Currency Code");
                                  //NCS-995 AT NCS-1083
                                  VendorLedgerEntry.FILTERGROUP(2);
                                  VendorLedgerEntry.SETFILTER("Currency Code",'<>%1','');
                                  VendorLedgerEntry.FILTERGROUP(0);

                                  {NCS-995 AT>>
                                  DtldVendLedgEntry.RESET;
                                  DtldVendLedgEntry.SETCURRENTKEY("Vendor No.","Posting Date","Entry Type");
                                  DtldVendLedgEntry.SETRANGE("Vendor No.",Vendor."No.");
                                  DtldVendLedgEntry.SETRANGE("Posting Date",CALCDATE('<+1D>',EndDate),31129999D);
                                  DtldVendLedgEntry.SETRANGE("Entry Type",DtldVendLedgEntry."Entry Type"::Application);
                                  DtldVendLedgEntry.SETFILTER("Agreement No.",VendorFilter.GETFILTER("Agreement Filter"));
                                  IF DtldVendLedgEntry.FIND('-') THEN
                                    REPEAT
                                      VendorLedgerEntry."Entry No." := DtldVendLedgEntry."Vendor Ledger Entry No.";
                                      IF VendorLedgerEntry.FIND('=') THEN
                                        IF (VendorLedgerEntry."Posting Date" >= StartDate) AND
                                          (VendorLedgerEntry."Posting Date" <= EndDate)
                                        THEN BEGIN
                                          TempVendorLedgerEntry."Entry No." := VendorLedgerEntry."Entry No.";
                                          IF TempVendorLedgerEntry.INSERT THEN;
                                        END;
                                    UNTIL DtldVendLedgEntry.NEXT = 0;
                                  NCS-995 AT<<}

                                  //NCS-995 AT>>
                                  DVLE.SETRANGE("Vendor No.",Vendor."No.");
                                  IF DVLE.FIND('-') THEN
                                    REPEAT
                                      VendorLedgerEntry."Entry No." := DVLE."Vendor Ledger Entry No.";
                                      IF VendorLedgerEntry.FIND('=') THEN
                                        IF (VendorLedgerEntry."Posting Date" >= StartDate) AND
                                          (VendorLedgerEntry."Posting Date" <= EndDate)
                                        THEN BEGIN
                                          TempVendorLedgerEntry."Entry No." := VendorLedgerEntry."Entry No.";
                                          IF TempVendorLedgerEntry.INSERT THEN;
                                        END;
                                    UNTIL DVLE.NEXT = 0;
                                  //NCS-995 AT<<

                                  {NCS-995 AT>>
                                  VendorLedgerEntry.SETCURRENTKEY("Vendor No.",Open);
                                  VendorLedgerEntry.SETRANGE("Vendor No.",Vendor."No.");
                                  VendorLedgerEntry.SETRANGE(Open,TRUE);
                                  VendorLedgerEntry.SETRANGE("Posting Date",0D,EndDate);
                                  VendorLedgerEntry.SETFILTER("Agreement No.",VendorFilter.GETFILTER("Agreement Filter"));
                                  IF VendorLedgerEntry.FIND('-') THEN
                                    REPEAT
                                      TempVendorLedgerEntry."Entry No." := VendorLedgerEntry."Entry No.";
                                      IF TempVendorLedgerEntry.INSERT THEN;
                                    UNTIL VendorLedgerEntry.NEXT = 0;
                                  NCS-995 AT<<}

                                  //NCS-995 AT>>
                                  VLE.SETRANGE("Vendor No.",Vendor."No.");
                                  IF VLE.FIND('-') THEN
                                    REPEAT
                                      TempVendorLedgerEntry."Entry No." := VLE."Entry No.";
                                      IF TempVendorLedgerEntry.INSERT THEN;
                                    UNTIL VLE.NEXT = 0;
                                  //NCS-995 AT<<

                                  VendorLedgerEntry.RESET;

                                  //IF NOT TempVendorLedgerEntry.FINDFIRST THEN CurrReport.BREAK;
                                END;

               OnPostDataItem=BEGIN
                                IF (VendNo <> 0) THEN
                                  HandlePostAdjmt(2); // Vendor
                              END;
                               }

    { 1210140;1;Column  ;STRSUBSTNO_Text12403_PostingDate__Control1210140;
               SourceExpr=STRSUBSTNO(Text12403,PostingDate) }

    { 1210153;1;Column  ;VendorLedgerEntry_TABLECAPTION;
               SourceExpr=VendorLedgerEntry.TABLECAPTION }

    { 1210156;1;Column  ;Vendor_Name___Vendor__Name_2_;
               SourceExpr=Vendor.Name + Vendor."Name 2" }

    { 1210157;1;Column  ;Vendor__No__        ;
               SourceExpr=Vendor."No." }

    { 1210191;1;Column  ;TotalAmount_Control1210191;
               SourceExpr=TotalAmount }

    { 1210194;1;Column  ;Text12404_Control1210194;
               SourceExpr=Text12404 }

    { 1210129;1;Column  ;VendorLedgerEntry__Remaining_Amt___LCY__Caption;
               SourceExpr=VendorLedgerEntry__Remaining_Amt___LCY__CaptionLbl }

    { 1210130;1;Column  ;Adj__Remaining_Amt___LCY_Caption_Control1210130;
               SourceExpr=Adj__Remaining_Amt___LCY_Caption_Control1210130Lbl }

    { 1210131;1;Column  ;Adj__AmountCaption_Control1210131;
               SourceExpr=Adj__AmountCaption_Control1210131Lbl }

    { 1210135;1;Column  ;VendorLedgerEntry__Remaining_Amount_Caption;
               SourceExpr=VendorLedgerEntry__Remaining_Amount_CaptionLbl }

    { 1210138;1;Column  ;Entry_Exch__RateCaption_Control1210138;
               SourceExpr=Entry_Exch__RateCaption_Control1210138Lbl }

    { 1210142;1;Column  ;VendorLedgerEntry__Currency_Code_Caption;
               SourceExpr=VendorLedgerEntry__Currency_Code_CaptionLbl }

    { 1210143;1;Column  ;VendorLedgerEntry_DescriptionCaption;
               SourceExpr=VendorLedgerEntry_DescriptionCaptionLbl }

    { 1210145;1;Column  ;VendorLedgerEntry__Posting_Date_Caption;
               SourceExpr=VendorLedgerEntry__Posting_Date_CaptionLbl }

    { 1210148;1;Column  ;VendorLedgerEntry__Document_No__Caption;
               SourceExpr=VendorLedgerEntry__Document_No__CaptionLbl }

    { 1210151;1;Column  ;DocumentType_Control1470021Caption;
               SourceExpr=DocumentType_Control1470021CaptionLbl }

    { 1210159;1;Column  ;Agreement_No_Caption_Control1210159;
               SourceExpr=Agreement_No_Caption_Control1210159Lbl }

    { 2281;1   ;Column  ;VendLoop_Number     ;
               SourceExpr=Number }

    { 1221;1   ;DataItem;VendorLedgerEntryLoop;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF NOT TempVendorLedgerEntry.FIND('-') THEN
                                 CurrReport.BREAK;
                               FirstEntry := TRUE;
                               CurrReport.CREATETOTALS(AdjBalance,VendorLedgerEntry."Remaining Amt. (LCY)");
                             END;

               OnAfterGetRecord=BEGIN
                                  IF FirstEntry THEN BEGIN
                                    TempVendorLedgerEntry.FIND('-');
                                    FirstEntry := FALSE
                                  END ELSE
                                    IF TempVendorLedgerEntry.NEXT = 0 THEN
                                      CurrReport.BREAK;
                                  VendorLedgerEntry.GET(TempVendorLedgerEntry."Entry No.");
                                  IF VendorLedgerEntry.Prepayment THEN
                                    DocumentType := VendorLedgerEntry.FIELDCAPTION(Prepayment)
                                  ELSE
                                    DocumentType := FORMAT(VendorLedgerEntry."Document Type");
                                  VendorLedgerEntry.CALCFIELDS("Remaining Amount","Remaining Amt. (LCY)");
                                  AdjustVendorLedgerEntry(VendorLedgerEntry,PostingDate);
                                END;
                                 }

    { 1470000;2;Column  ;AdjBalance___VendorLedgerEntry__Remaining_Amt___LCY__;
               SourceExpr=AdjBalance - VendorLedgerEntry."Remaining Amt. (LCY)" }

    { 1470002;2;Column  ;AdjBalance_Control1470002;
               SourceExpr=AdjBalance }

    { 1470005;2;Column  ;VendorLedgerEntry__Remaining_Amt___LCY__;
               SourceExpr=VendorLedgerEntry."Remaining Amt. (LCY)" }

    { 1470006;2;Column  ;VendorLedgerEntry__Remaining_Amount_;
               SourceExpr=VendorLedgerEntry."Remaining Amount" }

    { 1470009;2;Column  ;ROUND_1_VendorLedgerEntry__Original_Currency_Factor__0_0001_;
               SourceExpr=ROUND(1/VendorLedgerEntry."Original Currency Factor",0.0001) }

    { 1470011;2;Column  ;V1_Currency2__Currency_Factor__Control1470011;
               DecimalPlaces=2:4;
               SourceExpr=1/Currency2."Currency Factor" }

    { 1470012;2;Column  ;VendorLedgerEntry__Currency_Code_;
               DecimalPlaces=2:4;
               SourceExpr=VendorLedgerEntry."Currency Code" }

    { 1470014;2;Column  ;VendorLedgerEntry_Description;
               SourceExpr=VendorLedgerEntry.Description }

    { 1470016;2;Column  ;VendorLedgerEntry__Posting_Date_;
               SourceExpr=VendorLedgerEntry."Posting Date" }

    { 1470018;2;Column  ;VendorLedgerEntry__Document_No__;
               SourceExpr=VendorLedgerEntry."Document No." }

    { 1470021;2;Column  ;DocumentType_Control1470021;
               SourceExpr=DocumentType }

    { 1210175;2;Column  ;VendorLedgerEntry__Agreement_No__;
               SourceExpr=VendorLedgerEntry."Agreement No." }

    { 1470027;2;Column  ;AdjBalance___VendorLedgerEntry__Remaining_Amt___LCY___Control1470027;
               SourceExpr=AdjBalance - VendorLedgerEntry."Remaining Amt. (LCY)" }

    { 1470029;2;Column  ;Text12404_Control1470029;
               SourceExpr=Text12404 }

    { 5306;2   ;Column  ;VendorLedgerEntryLoop_Number;
               SourceExpr=Number }

    { 2149;2   ;DataItem;                    ;
               DataItemTable=Table380;
               DataItemTableView=SORTING(Vendor Ledger Entry No.,Posting Date);
               OnPreDataItem=BEGIN
                               SETCURRENTKEY("Vendor Ledger Entry No.");
                               SETRANGE("Vendor Ledger Entry No.",VendorLedgerEntry."Entry No.");
                               SETFILTER("Posting Date",'%1..',CALCDATE('<+1D>',PostingDate));
                               SETRANGE("Entry Type","Entry Type"::Application);
                               SETRANGE("Agreement No.",VendorLedgerEntry."Agreement No.");
                             END;

               OnAfterGetRecord=BEGIN
                                  AdjustVendorLedgerEntry(VendorLedgerEntry,"Posting Date");
                                END;
                                 }

    { 5444;    ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 1210198;1;Column  ;TotalAmountPos___TotalAmountNeg;
               SourceExpr=TotalAmountPos + TotalAmountNeg }

    { 1210201;1;Column  ;Text12404_Control1210201;
               SourceExpr=Text12404 }

    { 1210203;1;Column  ;TotalAmountNeg      ;
               SourceExpr=TotalAmountNeg }

    { 1210206;1;Column  ;Text12406           ;
               SourceExpr=Text12406 }

    { 1210208;1;Column  ;TotalAmountPos      ;
               SourceExpr=TotalAmountPos }

    { 1210211;1;Column  ;Text12405           ;
               SourceExpr=Text12405 }

    { 7272;1   ;Column  ;Integer_Number      ;
               SourceExpr=Number }

    { 1756;    ;DataItem;                    ;
               DataItemTable=Table325;
               DataItemTableView=SORTING(VAT Bus. Posting Group,VAT Prod. Posting Group);
               OnPreDataItem=BEGIN
                               IF TestMode THEN
                                 CurrReport.BREAK;

                               IF NOT AdjGLAcc OR
                                  (GLSetup."VAT Exchange Rate Adjustment" = GLSetup."VAT Exchange Rate Adjustment"::"No Adjustment")
                               THEN
                                 CurrReport.BREAK;

                               //NC M1 > DP
                               IF GUIALLOWED THEN
                               //NC M1 < DP

                               Window.OPEN(
                                 Text012 +
                                 Text013);

                               VATEntryNoTotal := VATEntry.COUNT;
                               IF NOT
                                 VATEntry.SETCURRENTKEY(
                                   Type,Closed,"VAT Bus. Posting Group","VAT Prod. Posting Group","Posting Date")
                               THEN
                                 VATEntry.SETCURRENTKEY(
                                   Type,Closed,"Tax Jurisdiction Code","Use Tax","Posting Date");
                               VATEntry.SETRANGE(Closed,FALSE);
                               VATEntry.SETRANGE("Posting Date",StartDate,EndDate);
                             END;

               OnAfterGetRecord=BEGIN
                                  VATEntryNo := VATEntryNo + 1;

                                  //NC M1 > DP
                                  IF GUIALLOWED THEN
                                  //NC M1 < DP

                                  Window.UPDATE(1,ROUND(VATEntryNo / VATEntryNoTotal * 10000,1));

                                  VATEntry.SETRANGE("VAT Bus. Posting Group","VAT Bus. Posting Group");
                                  VATEntry.SETRANGE("VAT Prod. Posting Group","VAT Prod. Posting Group");

                                  IF "VAT Calculation Type" <> "VAT Calculation Type"::"Sales Tax" THEN BEGIN
                                    AdjustVATEntries(VATEntry.Type::Purchase,FALSE);
                                    IF (VATEntry2.Amount <> 0) OR (VATEntry2."Additional-Currency Amount" <> 0) THEN BEGIN
                                      TESTFIELD("Purchase VAT Account");
                                      AdjustVATAccount(
                                        "Purchase VAT Account",
                                        VATEntry2.Amount,VATEntry2."Additional-Currency Amount",
                                        VATEntryTotalBase.Amount,VATEntryTotalBase."Additional-Currency Amount");
                                      IF "VAT Calculation Type" = "VAT Calculation Type"::"Reverse Charge VAT" THEN BEGIN
                                        TESTFIELD("Reverse Chrg. VAT Acc.");
                                        AdjustVATAccount(
                                          "Reverse Chrg. VAT Acc.",
                                          -VATEntry2.Amount,-VATEntry2."Additional-Currency Amount",
                                          -VATEntryTotalBase.Amount,-VATEntryTotalBase."Additional-Currency Amount");
                                      END;
                                    END;
                                    IF (VATEntry2."Remaining Unrealized Amount" <> 0) OR
                                       (VATEntry2."Add.-Curr. Rem. Unreal. Amount" <> 0)
                                    THEN BEGIN
                                      TESTFIELD("Unrealized VAT Type");
                                      TESTFIELD("Purch. VAT Unreal. Account");
                                      AdjustVATAccount(
                                        "Purch. VAT Unreal. Account",
                                        VATEntry2."Remaining Unrealized Amount",
                                        VATEntry2."Add.-Curr. Rem. Unreal. Amount",
                                        VATEntryTotalBase."Remaining Unrealized Amount",
                                        VATEntryTotalBase."Add.-Curr. Rem. Unreal. Amount");
                                      IF "VAT Calculation Type" = "VAT Calculation Type"::"Reverse Charge VAT" THEN BEGIN
                                        TESTFIELD("Reverse Chrg. VAT Unreal. Acc.");
                                        AdjustVATAccount(
                                          "Reverse Chrg. VAT Unreal. Acc.",
                                          -VATEntry2."Remaining Unrealized Amount",
                                          -VATEntry2."Add.-Curr. Rem. Unreal. Amount",
                                          -VATEntryTotalBase."Remaining Unrealized Amount",
                                          -VATEntryTotalBase."Add.-Curr. Rem. Unreal. Amount");

                                      END;
                                    END;

                                    AdjustVATEntries(VATEntry.Type::Sale,FALSE);
                                    IF (VATEntry2.Amount <> 0) OR (VATEntry2."Additional-Currency Amount" <> 0) THEN BEGIN
                                      TESTFIELD("Sales VAT Account");
                                      AdjustVATAccount(
                                        "Sales VAT Account",
                                        VATEntry2.Amount,VATEntry2."Additional-Currency Amount",
                                        VATEntryTotalBase.Amount,VATEntryTotalBase."Additional-Currency Amount");
                                    END;
                                    IF (VATEntry2."Remaining Unrealized Amount" <> 0) OR
                                       (VATEntry2."Add.-Curr. Rem. Unreal. Amount" <> 0)
                                    THEN BEGIN
                                      TESTFIELD("Unrealized VAT Type");
                                      TESTFIELD("Sales VAT Unreal. Account");
                                      AdjustVATAccount(
                                        "Sales VAT Unreal. Account",
                                        VATEntry2."Remaining Unrealized Amount",
                                        VATEntry2."Add.-Curr. Rem. Unreal. Amount",
                                        VATEntryTotalBase."Remaining Unrealized Amount",
                                        VATEntryTotalBase."Add.-Curr. Rem. Unreal. Amount");
                                    END;
                                  END ELSE BEGIN
                                    IF TaxJurisdiction.FIND('-') THEN
                                      REPEAT
                                        VATEntry.SETRANGE("Tax Jurisdiction Code",TaxJurisdiction.Code);
                                        AdjustVATEntries(VATEntry.Type::Purchase,FALSE);
                                        AdjustPurchTax(FALSE);
                                        AdjustVATEntries(VATEntry.Type::Purchase,TRUE);
                                        AdjustPurchTax(TRUE);
                                        AdjustVATEntries(VATEntry.Type::Sale,FALSE);
                                        AdjustSalesTax;
                                      UNTIL TaxJurisdiction.NEXT = 0;
                                  END;
                                END;
                                 }

    { 6710;    ;DataItem;                    ;
               DataItemTable=Table15;
               DataItemTableView=SORTING(No.)
                                 WHERE(Exchange Rate Adjustment=FILTER(Adjust Amount..Adjust Additional-Currency Amount));
               OnPreDataItem=BEGIN
                               IF TestMode THEN
                                 CurrReport.BREAK;

                               IF NOT AdjGLAcc THEN
                                 CurrReport.BREAK;

                               //NC M1 > DP
                               IF GUIALLOWED THEN
                               //NC M1 < DP

                               Window.OPEN(
                                 Text014 +
                                 Text015);

                               GLAccNoTotal := "G/L Account".COUNT;
                               SETRANGE("Date Filter",StartDate,EndDate);
                             END;

               OnAfterGetRecord=BEGIN
                                  GLAccNo := GLAccNo + 1;

                                  //NC M1 > DP
                                  IF GUIALLOWED THEN
                                  //NC M1 < DP

                                  Window.UPDATE(1,ROUND(GLAccNo / GLAccNoTotal * 10000,1));
                                  IF "Exchange Rate Adjustment" = "Exchange Rate Adjustment"::"No Adjustment" THEN
                                    CurrReport.SKIP;

                                  CALCFIELDS("Balance at Date","Add.-Currency Balance at Date");
                                  CASE "Exchange Rate Adjustment" OF
                                    "Exchange Rate Adjustment"::"Adjust Amount":
                                      PostGLAccAdjmt(
                                        "No.","Exchange Rate Adjustment"::"Adjust Amount",
                                        ROUND(
                                          CurrExchRate2.ExchangeAmtFCYToLCYAdjmt(
                                            PostingDate,GLSetup."Additional Reporting Currency",
                                            "Add.-Currency Balance at Date",AddCurrCurrencyFactor) -
                                          "Balance at Date"),
                                        "Balance at Date",
                                        "Add.-Currency Balance at Date");
                                    "Exchange Rate Adjustment"::"Adjust Additional-Currency Amount":
                                      PostGLAccAdjmt(
                                        "No.","Exchange Rate Adjustment"::"Adjust Additional-Currency Amount",
                                        ROUND(
                                          CurrExchRate2.ExchangeAmtLCYToFCY(
                                            PostingDate,GLSetup."Additional Reporting Currency",
                                            "Balance at Date",AddCurrCurrencyFactor) -
                                          "Add.-Currency Balance at Date",
                                          Currency3."Amount Rounding Precision"),
                                        "Balance at Date",
                                        "Add.-Currency Balance at Date");
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                IF AdjGLAcc THEN BEGIN
                                  GenJnlLine."Document No." := PostingDocNo;
                                  GenJnlLine."Account Type" := GenJnlLine."Account Type"::"G/L Account";
                                  GenJnlLine."Posting Date" := PostingDate;
                                  GenJnlLine."Source Code" := SourceCodeSetup."Exchange Rate Adjmt.";
                                  //NC TR237 > EB
                                  GenJnlLine."Not Consolidate" := GLSetup."Not Consolidate Revaluation";
                                  //NC TR237 < EB
                                  //NC APCOC-104 > RD
                                  GenJnlLine."Not Translate" := StandParam."Not Translate";
                                  //NC APCOC-104 < RD
                                  //NC APCOC-117 > RD
                                  GenJnlLine."Not Translate IFRS" := StandParam."Not Translate IFRS";
                                  //NC APCOC-117 < RD


                                  IF GLAmtTotal <> 0 THEN BEGIN
                                    IF GLAmtTotal < 0 THEN
                                      GenJnlLine."Account No." := Currency3."Realized G/L Losses Account"
                                    ELSE
                                      GenJnlLine."Account No." := Currency3."Realized G/L Gains Account";
                                    GenJnlLine.Description :=
                                      STRSUBSTNO(
                                        PostingDescription,
                                        GLSetup."Additional Reporting Currency",
                                        GLAddCurrBalAtDateTotal);
                                    GenJnlLine."Additional-Currency Posting" := GenJnlLine."Additional-Currency Posting"::"Amount Only";
                                    GenJnlLine."Currency Code" := '';
                                    GenJnlLine.Amount := -GLAmtTotal;
                                    GenJnlLine."Amount (LCY)" := -GLAmtTotal;
                                    GetJnlLineDefDim(GenJnlLine,TempJnlLineDim);
                                    PostGenJnlLine(GenJnlLine,TempJnlLineDim);
                                  END;
                                  IF GLAddCurrAmtTotal <> 0 THEN BEGIN
                                    IF GLAddCurrAmtTotal > 0 THEN
                                      GenJnlLine."Account No." := Currency3."Realized G/L Losses Account"
                                    ELSE
                                      GenJnlLine."Account No." := Currency3."Realized G/L Gains Account";
                                    GenJnlLine.Description :=
                                      STRSUBSTNO(
                                        PostingDescription,'',
                                        GLBalAtDateTotal);
                                    GenJnlLine."Additional-Currency Posting" := GenJnlLine."Additional-Currency Posting"::"Additional-Currency Amount Only";
                                    GenJnlLine."Currency Code" := GLSetup."Additional Reporting Currency";
                                    GenJnlLine.Amount := -GLAddCurrAmtTotal;
                                    GenJnlLine."Amount (LCY)" := 0;
                                    GetJnlLineDefDim(GenJnlLine,TempJnlLineDim);
                                    PostGenJnlLine(GenJnlLine,TempJnlLineDim);
                                  END;

                                  WITH ExchRateAdjReg DO BEGIN
                                    "No." := "No." + 1;
                                    "Creation Date" := PostingDate;
                                    "Account Type" := "Account Type"::"G/L Account";
                                    "Posting Group" := '';
                                    "Currency Code" := GLSetup."Additional Reporting Currency";
                                    "Currency Factor" := CurrExchRate2."Adjustment Exch. Rate Amount";
                                    "Adjusted Base" := 0;
                                    "Adjusted Base (LCY)" := GLBalAtDateBase;
                                    "Adjusted Amt. (LCY)" := GLAmtTotal;
                                    "Adjusted Base (Add.-Curr.)" := GLAddCurrBalAtDateBase;
                                    "Adjusted Amt. (Add.-Curr.)" := GLAddCurrAmtTotal;
                                    INSERT;
                                  END;
                                END;
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 must be entered.;RUS=%1 должно быть введено.';
      Text001@1001 : TextConst 'ENU="Do you want to adjust general ledger entries for currency fluctuations without adjusting customer, vendor and bank ledger entries? This may result in incorrect currency adjustments to payables, receivables and bank accounts.\\ ";RUS="Вы хотите скорректировать финансовые операции на суммы курсовых эффектов без коррекции операций клиентов, поставщиков и банковских счетов? Это может привести к некорректным результатам.\\ "';
      Text004@1004 : TextConst 'ENU=Do you wish to continue?;RUS=Вы хотите продолжить?';
      Text005@1005 : TextConst 'ENU=The adjustment of exchange rates has been canceled.;RUS=Коррекция курсовых разниц отменена.';
      Text006@1006 : TextConst 'ENU=Adjusting exchange rates...\\;RUS=Коррекция курсовых разниц...\\';
      Text007@1007 : TextConst 'ENU=Bank Account    @1@@@@@@@@@@@@@\\;RUS=Банк. Счет      @1@@@@@@@@@@@@@\\';
      Text008@1008 : TextConst 'ENU=Customer        @2@@@@@@@@@@@@@\;RUS=Клиент          @2@@@@@@@@@@@@@\';
      Text009@1009 : TextConst 'ENU=Vendor          @3@@@@@@@@@@@@@\;RUS=Поставщик       @3@@@@@@@@@@@@@\';
      Text010@1010 : TextConst 'ENU=Adjustment      #4#############;RUS=Коррекция       #4#############\';
      Text011@1011 : TextConst 'ENU=No currencies have been found.;RUS=Валюты не найдены.';
      Text012@1012 : TextConst 'ENU=Adjusting VAT Entries...\\;RUS=Коррекция НДС Операций...\\';
      Text013@1013 : TextConst 'ENU=VAT Entry    @1@@@@@@@@@@@@@;RUS=НДС Операция @1@@@@@@@@@@@@@';
      Text014@1014 : TextConst 'ENU=Adjusting general ledger...\\;RUS=Коррекция финансовых операций...\\';
      Text015@1015 : TextConst 'ENU=G/L Account    @1@@@@@@@@@@@@@;RUS=Фин. Счет      @1@@@@@@@@@@@@@';
      Text016@1016 : TextConst 'ENU=Exchange Rate Adjmt. of %1 %2;RUS=Корр. Курс. Разницы для %1 %2';
      Text017@1017 : TextConst 'ENU="%1 on %2 %3 must be %4. When this %2 is used in %5, the exchange rate adjustment is defined in the %6 field in the %7. %2 %3 is used in the %8 field in the %5. ";RUS="%1 в %2 %3 должно быть %4. Когда это %2 используется в %5, курс обмена определяется в поле %6 в %7. %2 %3 используется в поле %8 в %5. "';
      DtldCustLedgEntry@1019 : Record 379;
      TempDtldCustLedgEntry@1003 : TEMPORARY Record 379;
      DtldVendLedgEntry@1020 : Record 380;
      TempDtldVendLedgEntry@1018 : TEMPORARY Record 380;
      ExchRateAdjReg@1021 : Record 86;
      CustPostingGr@1022 : Record 92;
      VendPostingGr@1023 : Record 93;
      GenJnlLine@1024 : Record 81;
      SourceCodeSetup@1025 : Record 242;
      AdjExchRateBuffer@1026 : TEMPORARY Record 331;
      AdjExchRateBuffer2@1027 : TEMPORARY Record 331;
      Currency2@1028 : TEMPORARY Record 4;
      Currency3@1029 : Record 4;
      CurrExchRate@1030 : Record 330;
      CurrExchRate2@1031 : Record 330;
      GLSetup@1032 : Record 98;
      VATEntry@1033 : Record 254;
      VATEntry2@1034 : Record 254;
      VATEntryTotalBase@1035 : Record 254;
      TaxJurisdiction@1036 : Record 320;
      VATPostingSetup2@1037 : Record 325;
      TaxJurisdiction2@1038 : Record 320;
      TempDimBuf@1049 : TEMPORARY Record 360;
      TempJnlLineDim@1050 : TEMPORARY Record 356;
      TempEntryNoAmountBuf@1079 : TEMPORARY Record 386;
      CustLedgerEntry@1083 : Record 21;
      TempCustLedgerEntry@1082 : TEMPORARY Record 21;
      VendorLedgerEntry@1081 : Record 25;
      TempVendorLedgerEntry@1085 : TEMPORARY Record 25;
      GenJnlPostLine@1039 : Codeunit 12;
      UpdateAnalysisView@1002 : Codeunit 410;
      DimMgt@1077 : Codeunit 408;
      DimBufMgt@1078 : Codeunit 411;
      Window@1040 : Dialog;
      TotalAdjAmount@1041 : Decimal;
      GainsAmount@1042 : Decimal;
      LossesAmount@1043 : Decimal;
      PostingDate@1044 : Date;
      PostingDescription@1045 : Text[50];
      AdjBase@1046 : Decimal;
      AdjBaseLCY@1047 : Decimal;
      AdjAmount@1048 : Decimal;
      CustNo@1051 : Decimal;
      CustNoTotal@1052 : Decimal;
      VendNo@1053 : Decimal;
      VendNoTotal@1054 : Decimal;
      BankAccNo@1055 : Decimal;
      BankAccNoTotal@1056 : Decimal;
      GLAccNo@1057 : Decimal;
      GLAccNoTotal@1058 : Decimal;
      GLAmtTotal@1059 : Decimal;
      GLAddCurrAmtTotal@1060 : Decimal;
      GLBalAtDateTotal@1061 : Decimal;
      GLAddCurrBalAtDateTotal@1062 : Decimal;
      GLBalAtDateBase@1063 : Decimal;
      GLAddCurrBalAtDateBase@1064 : Decimal;
      PostingDocNo@1065 : Code[20];
      StartDate@1066 : Date;
      EndDate@1067 : Date;
      EndDateReq@1068 : Date;
      Correction@1069 : Boolean;
      OK@1070 : Boolean;
      AdjCustVendBank@1071 : Boolean;
      AdjGLAcc@1072 : Boolean;
      AddCurrCurrencyFactor@1073 : Decimal;
      VATEntryNoTotal@1074 : Decimal;
      VATEntryNo@1075 : Decimal;
      NewEntryNo@1076 : Integer;
      Text018@1080 : TextConst 'ENU=This posting date cannot be entered because it does not occur within the adjustment period. Reenter the posting date.;RUS=Эту дату учета установить нельзя, поскольку она не входит в период корректировки. Введите другую дату.';
      FirstEntry@1084 : Boolean;
      AdjCust@1210002 : Boolean;
      AdjVend@1210001 : Boolean;
      AdjBank@1210000 : Boolean;
      Text12401@1210003 : TextConst 'ENU=You must determine period;RUS=Определите период расчета.';
      AdjBalance@1210006 : Decimal;
      TestMode@1210007 : Boolean;
      TotalAmount@1210010 : Decimal;
      TotalAmountPos@1210009 : Decimal;
      TotalAmountNeg@1210008 : Decimal;
      ColumnDimPos@1000000003 : Text[250];
      Text12402@1000000004 : TextConst 'ENU=Dimensions;RUS=Измерения';
      ColumnDimNeg@1000000006 : Text[250];
      DimSelectionBuf@1210015 : Record 368;
      SelectedDim@1210014 : Record 369;
      TempSelectedDimPos@1210013 : TEMPORARY Record 369;
      TempSelectedDimNeg@1210012 : TEMPORARY Record 369;
      BalAccType@1210016 : 'None,Real,Unreal';
      PrepmtAdjmt@1210004 : Boolean;
      DocumentType@1210005 : Text[30];
      Text12403@1210011 : TextConst 'ENU=Exch. Rate on %1;RUS=Курс на %1';
      Text12404@1210017 : TextConst 'ENU=Total:;RUS=Итого:';
      Text12405@1210018 : TextConst 'ENU=Total Positive:;RUS=Итого положительных:';
      Text12406@1210019 : TextConst 'ENU=Total Negative:;RUS=Итого отрицательных:';
      "NCV>"@1101495000 : Integer;
      Template@1101495002 : Code[10];
      Batch@1101495001 : Code[10];
      Text50001@1101495005 : TextConst 'ENU=<1M>;RUS=<1M>';
      Text50002@1101495003 : TextConst 'ENU=Please set in;RUS="Не заполнены настройки в "';
      StandParam@1101495008 : Record 50076;
      GenJnlBatch@1101495007 : Record 232;
      GenJnlTemplate@1101495006 : Record 80;
      FX_Type@1101495004 : ' ,Customer,Vendor,Bank Account';
      lRecSet@1101495010 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000535-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'.Recordset";
      lcount@1101495009 : Integer;
      tmpBankAccount@1101495011 : TEMPORARY Record 270;
      tmpCustomer@1101495012 : TEMPORARY Record 18;
      tmpVendor@1101495013 : TEMPORARY Record 23;
      lKeyCode@1101495014 : Code[20];
      lKeyCurrency@1101495015 : Code[10];
      cuAdo@1101495019 : Codeunit 50024;
      Customer@1101495020 : Record 18;
      Vendor@1101495021 : Record 23;
      MovingDataSetup@1101495016 : Record 50064;
      Text50003@1101495017 : TextConst 'ENU=Status          #5#############;RUS=Статус          #5#############';
      Text50004@1101495022 : TextConst 'ENU=Counterpaty list receiving;RUS=Получение списка контрагентов';
      Text50005@1101495018 : TextConst 'ENU=Counterpaty list saving;RUS=Сохранение списка контрагентов';
      tmpBankAccountPG@1101495023 : TEMPORARY Record 287;
      lKeyPG@1101495024 : Code[10];
      BalanceAtDateLCY@1101495025 : Decimal;
      BankAccount@1101495026 : Record 270;
      CLE@1000000005 : Record 21;
      DCLE@1000000002 : Record 379;
      VLE@1000000001 : Record 25;
      DVLE@1000000000 : Record 380;
      Adjust_Exchange_RatesCaptionLbl@1215270 : TextConst 'ENU=Adjust Exchange Rates;RUS=Коррекция Курс. Разниц';
      CurrReport_PAGENOCaptionLbl@1213005 : TextConst 'ENU=Page;RUS=Стр.';
      Adj__AmountCaptionLbl@1214039 : TextConst 'ENU=Adj. Amount;RUS=Корр. Сумма';
      Adj__Balance_at_Date__LCY_CaptionLbl@1215722 : TextConst 'ENU=Adj. Balance at Date (LCY);RUS=Корр. Баланс на Дату (РУБ)';
      BankAccount__Balance_at_Date__LCY__CaptionLbl@1217136 : TextConst 'ENU=Balance at Date (LCY);RUS=Баланс на Дату (ВУЧ)';
      BankAccount__Balance_at_Date_CaptionLbl@1210579 : TextConst 'ENU=Balance at Date;RUS=Баланс на Дату';
      NameCaptionLbl@1211417 : TextConst 'ENU=Name;RUS=Наименование';
      BankAccount__No__CaptionLbl@1215376 : TextConst 'ENU=No.;RUS=Но.';
      Exchange_RateCaptionLbl@1218715 : TextConst 'ENU=Exchange Rate;RUS=Курс';
      Adj__AmountCaption_Control1210060Lbl@1212442 : TextConst 'ENU=Adj. Amount;RUS=Корр. Сумма';
      Adj__Remaining_Amt___LCY_CaptionLbl@1215294 : TextConst 'ENU=Adj. Remaining Amt. (LCY);RUS=Корр. Сумма Остатка (РУБ)';
      CustLedgerEntry__Remaining_Amt___LCY__CaptionLbl@1212575 : TextConst 'ENU=Remaining Amt. (LCY);RUS=Сумма Остатка (РУБ)';
      CustLedgerEntry__Remaining_Amount_CaptionLbl@1215566 : TextConst 'ENU=Remaining Amount;RUS=Сумма Остатка';
      Entry_Exch__RateCaptionLbl@1218215 : TextConst 'ENU=Entry Exch. Rate;RUS=Курс Операции';
      CustLedgerEntry__Currency_Code_CaptionLbl@1212388 : TextConst 'ENU=Currency Code;RUS=Код Валюты';
      CustLedgerEntry_DescriptionCaptionLbl@1211911 : TextConst 'ENU=Description;RUS=Описание';
      CustLedgerEntry__Posting_Date_CaptionLbl@1216518 : TextConst 'ENU=Posting Date;RUS=Дата Учета';
      CustLedgerEntry__Document_No__CaptionLbl@1212570 : TextConst 'ENU=Document No.;RUS=Документ Но.';
      DocumentTypeCaptionLbl@1213125 : TextConst 'ENU=Document Type;RUS=Тип Документа';
      Agreement_No_CaptionLbl@1213267 : TextConst 'ENU=Agreement No.;RUS=Договор Но.';
      VendorLedgerEntry__Remaining_Amt___LCY__CaptionLbl@1218863 : TextConst 'ENU=Remaining Amt. (LCY);RUS=Сумма Остатка (РУБ)';
      Adj__Remaining_Amt___LCY_Caption_Control1210130Lbl@1217978 : TextConst 'ENU=Adj. Remaining Amt. (LCY);RUS=Корр. Сумма Остатка (РУБ)';
      Adj__AmountCaption_Control1210131Lbl@1219748 : TextConst 'ENU=Adj. Amount;RUS=Корр. Сумма';
      VendorLedgerEntry__Remaining_Amount_CaptionLbl@1217112 : TextConst 'ENU=Remaining Amount;RUS=Сумма Остатка';
      Entry_Exch__RateCaption_Control1210138Lbl@1217654 : TextConst 'ENU=Entry Exch. Rate;RUS=Курс Операции';
      VendorLedgerEntry__Currency_Code_CaptionLbl@1215649 : TextConst 'ENU=Currency Code;RUS=Код Валюты';
      VendorLedgerEntry_DescriptionCaptionLbl@1214893 : TextConst 'ENU=Description;RUS=Описание';
      VendorLedgerEntry__Posting_Date_CaptionLbl@1219328 : TextConst 'ENU=Posting Date;RUS=Дата Учета';
      VendorLedgerEntry__Document_No__CaptionLbl@1215380 : TextConst 'ENU=Document No.;RUS=Документ Но.';
      DocumentType_Control1470021CaptionLbl@1214755 : TextConst 'ENU=Document Type;RUS=Тип Документа';
      Agreement_No_Caption_Control1210159Lbl@1215074 : TextConst 'ENU=Agreement No.;RUS=Договор Но.';

    LOCAL PROCEDURE PostAdjmt@1(VAR GLAccNo@1000 : Code[20];PostingAmount@1001 : Decimal;AdjBase2@1002 : Decimal;CurrencyCode2@1003 : Code[10];VAR JnlLineDim@1004 : Record 356;PostingDate2@1005 : Date;ICCode@1006 : Code[20];CVLedgEntry@1210005 : Record 382;Gains@1210006 : Boolean);
    BEGIN
      WITH GenJnlLine DO BEGIN
        IF PostingAmount <> 0 THEN BEGIN
          INIT;
          VALIDATE("Posting Date",PostingDate2);
          "Document No." :=  CVLedgEntry."Document No.";
          "Document Type" := CVLedgEntry."Document Type";
          Correction := CVLedgEntry.Positive;
          "Account Type" := "Account Type"::"G/L Account";
          VALIDATE("Account No.",GLAccNo);
          "Gen. Posting Type" := 0;
          "Gen. Bus. Posting Group" := '';
          "Gen. Prod. Posting Group" := '';
          "VAT Bus. Posting Group" := '';
          "VAT Prod. Posting Group" := '';
          Description := STRSUBSTNO(PostingDescription,CurrencyCode2,AdjBase2);
          VALIDATE(Amount,PostingAmount);
          "Source Currency Code" := CurrencyCode2;
          GenJnlLine."IC Partner Code" := ICCode;

          //NC OAM44 > DP
          {
          IF CurrencyCode2 = GLSetup."Additional Reporting Currency" THEN
          }
          IF (CurrencyCode2 = GLSetup."Additional Reporting Currency") AND NOT GLSetup."Calc. FX Add. Curr. Amount" THEN
          //NC OAM44 < DP

            "Source Currency Amount" := 0;

          "Source Code" := SourceCodeSetup."Exchange Rate Adjmt.";
          "System-Created Entry" := TRUE;
          "Source Type" := CVLedgEntry."Bal. Account Type";
          "Source No." := CVLedgEntry."Bal. Account No.";
          CASE "Source Type" OF
            "Source Type"::Customer:
              PrepmtAdjmt := GLSetup."Cancel Curr. Prepmt. Adjmt." AND CVLedgEntry.Prepayment;
            "Source Type"::Vendor:
              PrepmtAdjmt := GLSetup."Cancel Curr. Prepmt. Adjmt." AND CVLedgEntry.Prepayment;
          END;
          GenJnlLine."Agreement No." := CVLedgEntry."Agreement No.";
          GetTempJnlLineDim(JnlLineDim,GenJnlLine,BalAccType::Unreal,CurrencyCode2,Gains);
          //NC TR237 > EB
          GenJnlLine."Not Consolidate" := GLSetup."Not Consolidate Revaluation";
          //NC TR237 < EB
          //NC APCOC-104 > RD
          GenJnlLine."Not Translate" := StandParam."Not Translate";
          //NC APCOC-104 < RD
          //NC APCOC-117 > RD
          GenJnlLine."Not Translate IFRS" := StandParam."Not Translate IFRS";
          //NC APCOC-117 < RD

          //NC TR237.1 > DP
          GenJnlLine."Currency Index Entry" := TRUE;
          GenJnlLine."Currency Index" := CurrencyCode2;
          //NC TR237.1 < DP

          PostGenJnlLine(GenJnlLine,JnlLineDim);
        END;
      END;
    END;

    LOCAL PROCEDURE InsertExchRateAdjmtReg@2(AdjustAccType@1000 : Integer;PostingGrCode@1001 : Code[10];CurrencyCode@1002 : Code[10]);
    BEGIN
      IF TestMode THEN
        EXIT;

      IF Currency2.Code <> CurrencyCode THEN
        Currency2.GET(CurrencyCode);

      WITH ExchRateAdjReg DO BEGIN
        "No." := "No." + 1;
        "Creation Date" := PostingDate;
        "Account Type" := AdjustAccType;
        "Posting Group" := PostingGrCode;
        "Currency Code" := Currency2.Code;
        "Currency Factor" := Currency2."Currency Factor";
        "Adjusted Base" := AdjExchRateBuffer.AdjBase;
        "Adjusted Base (LCY)" := AdjExchRateBuffer.AdjBaseLCY;
        "Adjusted Amt. (LCY)" := AdjExchRateBuffer.AdjAmount;
        INSERT;
      END;
    END;

    PROCEDURE InitializeRequest@3(NewStartDate@1000 : Date;NewEndDate@1001 : Date;NewPostingDescription@1002 : Text[50];NewPostingDate@1003 : Date;NewDocNo@1470000 : Code[20];NewAdjBank@1470001 : Boolean;NewAdjCust@1470002 : Boolean;NewAdjVend@1470003 : Boolean;NewAdjGLAcc@1470004 : Boolean;NewTestMode@1470005 : Boolean);
    BEGIN
      CLEARALL;
      StartDate := NewStartDate;
      EndDateReq := NewEndDate;
      PostingDate := NewPostingDate;
      PostingDescription := NewPostingDescription;
      IF PostingDescription = '' THEN
        PostingDescription := Text016;
      PostingDocNo := NewDocNo;
      AdjBank := NewAdjBank;
      AdjCust := NewAdjCust;
      AdjVend := NewAdjVend;
      AdjGLAcc := NewAdjGLAcc;
      TestMode := NewTestMode;
    END;

    LOCAL PROCEDURE AdjExchRateBufferUpdate@15(CurrencyCode2@1000 : Code[10];PostingGroup2@1001 : Code[10];AdjBase2@1002 : Decimal;AdjBaseLCY2@1003 : Decimal;AdjAmount2@1004 : Decimal;GainsAmount2@1005 : Decimal;LossesAmount2@1006 : Decimal;DimEntryNo@1007 : Integer;Postingdate2@1008 : Date;ICCode@1009 : Code[20];EntryNo@1210004 : Integer);
    BEGIN
      AdjExchRateBuffer.INIT;
      OK := AdjExchRateBuffer.GET(CurrencyCode2,PostingGroup2,DimEntryNo,Postingdate2,ICCode,EntryNo);

      AdjExchRateBuffer.AdjBase := AdjExchRateBuffer.AdjBase + AdjBase2;
      AdjExchRateBuffer.AdjBaseLCY := AdjExchRateBuffer.AdjBaseLCY + AdjBaseLCY2;
      AdjExchRateBuffer.AdjAmount := AdjExchRateBuffer.AdjAmount + AdjAmount2;
      AdjExchRateBuffer.TotalGainsAmount := AdjExchRateBuffer.TotalGainsAmount + GainsAmount2;
      AdjExchRateBuffer.TotalLossesAmount := AdjExchRateBuffer.TotalLossesAmount + LossesAmount2;

      IF NOT OK THEN BEGIN
        AdjExchRateBuffer."Currency Code" := CurrencyCode2;
        AdjExchRateBuffer."Posting Group" := PostingGroup2;
        AdjExchRateBuffer."Dimension Entry No." := DimEntryNo;
        AdjExchRateBuffer."Posting Date" := Postingdate2;
        AdjExchRateBuffer."IC Partner Code" := ICCode;
        AdjExchRateBuffer."Entry No." := EntryNo;
        AdjExchRateBuffer.INSERT;
      END ELSE
        AdjExchRateBuffer.MODIFY;
    END;

    LOCAL PROCEDURE HandlePostAdjmt@7(AdjustAccType@1000 : Integer);
    VAR
      GLEntry@1001 : Record 17;
      PostAccount@1210000 : Code[20];
      CVLedgEntry@1210001 : TEMPORARY Record 382;
      Gains@1210002 : Boolean;
    BEGIN
      IF AdjExchRateBuffer.FIND('-') THEN BEGIN
        // Summarize per currency and dimension combination
        REPEAT
          AdjExchRateBuffer2.INIT;
          OK :=
            AdjExchRateBuffer2.GET(
              AdjExchRateBuffer."Currency Code",
              '',
              AdjExchRateBuffer."Dimension Entry No.",
              AdjExchRateBuffer."Posting Date",
              AdjExchRateBuffer."IC Partner Code",
              AdjExchRateBuffer."Entry No.");
          AdjExchRateBuffer2.AdjBase := AdjExchRateBuffer2.AdjBase + AdjExchRateBuffer.AdjBase;
          AdjExchRateBuffer2.TotalGainsAmount := AdjExchRateBuffer2.TotalGainsAmount + AdjExchRateBuffer.TotalGainsAmount;
          AdjExchRateBuffer2.TotalLossesAmount := AdjExchRateBuffer2.TotalLossesAmount + AdjExchRateBuffer.TotalLossesAmount;
          IF NOT OK THEN BEGIN
            AdjExchRateBuffer2."Currency Code" := AdjExchRateBuffer."Currency Code";
            AdjExchRateBuffer2."Dimension Entry No." := AdjExchRateBuffer."Dimension Entry No.";
            AdjExchRateBuffer2."Posting Date" := AdjExchRateBuffer."Posting Date";
            AdjExchRateBuffer2."IC Partner Code" := AdjExchRateBuffer."IC Partner Code";
            AdjExchRateBuffer2."Entry No." := AdjExchRateBuffer."Entry No.";
            AdjExchRateBuffer2.INSERT;
          END ELSE
            AdjExchRateBuffer2.MODIFY;
        UNTIL AdjExchRateBuffer.NEXT = 0;

        // Post per posting group and per currency
        IF NOT TestMode THEN
        IF AdjExchRateBuffer2.FIND('-') THEN
          REPEAT
            WITH AdjExchRateBuffer DO BEGIN
              SETRANGE("Currency Code",AdjExchRateBuffer2."Currency Code");
              SETRANGE("Dimension Entry No.",AdjExchRateBuffer2."Dimension Entry No.");
              SETRANGE("Posting Date",AdjExchRateBuffer2."Posting Date");
              SETRANGE("IC Partner Code",AdjExchRateBuffer2."IC Partner Code");
              SETRANGE("Entry No.",AdjExchRateBuffer2."Entry No.");
              TempDimBuf.RESET;
              TempDimBuf.DELETEALL;
              TempJnlLineDim.RESET;
              TempJnlLineDim.DELETEALL;
              FIND('-');
              DimBufMgt.GetDimensions("Dimension Entry No.",TempDimBuf);
              DimMgt.CopyDimBufToDimSetEntry(TempDimBuf,TempJnlLineDim,'','',0);
              REPEAT
                IF AdjAmount <> 0 THEN BEGIN
                  CASE AdjustAccType OF
                    1: // Customer
                      BEGIN
                        CustPostingGr.GET("Posting Group");
                        CustLedgEntryToCVLedgEntry("Entry No.",CVLedgEntry,AdjAmount);
                        IF CVLedgEntry.Prepayment THEN BEGIN
                          IF GLSetup."Cancel Curr. Prepmt. Adjmt." THEN BEGIN
                            Currency.GET(AdjExchRateBuffer."Currency Code");
                            Currency.TESTFIELD("PD Bal. Gain/Loss Acc. (TA)");
                            PostAccount := Currency."PD Bal. Gain/Loss Acc. (TA)";
                          END ELSE BEGIN
                            CustPostingGr.TESTFIELD("Prepayment Account");
                            PostAccount := CustPostingGr."Prepayment Account";
                          END;
                        END ELSE BEGIN
                          CustPostingGr.TESTFIELD("Receivables Account");
                          PostAccount := CustPostingGr."Receivables Account";
                        END;
                        //PostAdjmt(
                        //  PostAccount,AdjAmount,AdjBase,"Currency Code",TempJnlLineDim,
                        //  AdjExchRateBuffer2."Posting Date",CVLedgEntry);
                        InsertExchRateAdjmtReg(1,"Posting Group","Currency Code");
                      END;
                    2: // Vendor
                      BEGIN
                        VendPostingGr.GET("Posting Group");
                        VendLedgEntryToCVLedgEntry("Entry No.",CVLedgEntry,AdjAmount);
                        IF CVLedgEntry.Prepayment THEN BEGIN
                          IF GLSetup."Cancel Curr. Prepmt. Adjmt." THEN BEGIN
                            Currency.GET(AdjExchRateBuffer."Currency Code");
                            Currency.TESTFIELD("PD Bal. Gain/Loss Acc. (TA)");
                            PostAccount := Currency."PD Bal. Gain/Loss Acc. (TA)";
                          END ELSE BEGIN
                            VendPostingGr.TESTFIELD("Prepayment Account");
                            PostAccount := VendPostingGr."Prepayment Account";
                          END;
                        END ELSE BEGIN
                          VendPostingGr.TESTFIELD("Payables Account");
                          PostAccount := VendPostingGr."Payables Account";
                        END;
                        //PostAdjmt(
                        //  PostAccount,AdjAmount,AdjBase,"Currency Code",TempJnlLineDim,
                        //  AdjExchRateBuffer2."Posting Date",CVLedgEntry);
                        InsertExchRateAdjmtReg(2,"Posting Group","Currency Code");
                      END;
                  END;
                  IF GLSetup."Summarize Gains/Losses" THEN
                    IF (TotalGainsAmount <> 0) AND (TotalLossesAmount <> 0) THEN
                      CASE TRUE OF
                        TotalGainsAmount < 0:
                          BEGIN
                            TotalLossesAmount := TotalLossesAmount + TotalGainsAmount;
                            TotalGainsAmount := 0;
                          END;
                        TotalLossesAmount > 0:
                          BEGIN
                            TotalGainsAmount := TotalLossesAmount + TotalGainsAmount;
                            TotalLossesAmount := 0;
                          END;
                      END;
                  IF TotalGainsAmount <> 0 THEN BEGIN
                    IF GLSetup."Currency Adjmt with Correction" THEN BEGIN
                      CVLedgEntry.Positive := TotalGainsAmount < 0;
                      Gains := TRUE;
                    END ELSE
                      Gains := TotalGainsAmount > 0;

                    //NC MIO-28 > DP
                    IF NOT (("Posting Date">=GLSetup."Not Post FX G/L from Date") AND
                      (GLSetup."Not Post FX G/L from Date"<>0D))
                    THEN
                    //NC MIO-28 < DP

                    PostAdjmt(
                      PostAccount,TotalGainsAmount,AdjBase,"Currency Code",TempJnlLineDim,
                      "Posting Date","IC Partner Code",CVLedgEntry,Gains);
                  END;
                  IF TotalLossesAmount <> 0 THEN BEGIN
                    IF GLSetup."Currency Adjmt with Correction" THEN BEGIN
                      CVLedgEntry.Positive := TotalLossesAmount > 0;
                      Gains := FALSE;
                    END ELSE
                      Gains := TotalLossesAmount > 0;

                    //NC MIO-28 > DP
                    IF NOT (("Posting Date">=GLSetup."Not Post FX G/L from Date") AND
                      (GLSetup."Not Post FX G/L from Date"<>0D))
                    THEN
                    //NC MIO-28 < DP

                    PostAdjmt(
                      PostAccount,TotalLossesAmount,AdjBase,"Currency Code",TempJnlLineDim,
                      "Posting Date","IC Partner Code",CVLedgEntry,Gains);
                  END;
                  IF (TotalGainsAmount <> 0) OR (TotalLossesAmount <> 0) THEN
                    UpdateTransactionNo(AdjustAccType,AdjExchRateBuffer."Entry No.");
                END;
              UNTIL AdjExchRateBuffer.NEXT = 0;
            END;
          UNTIL AdjExchRateBuffer2.NEXT = 0;

        AdjExchRateBuffer.RESET;
        AdjExchRateBuffer.DELETEALL;
        AdjExchRateBuffer2.RESET;
        AdjExchRateBuffer2.DELETEALL;
        TempDtldCustLedgEntry.RESET;
        TempDtldCustLedgEntry.DELETEALL;
        TempDtldVendLedgEntry.RESET;
        TempDtldVendLedgEntry.DELETEALL;
      END;
    END;

    LOCAL PROCEDURE AdjustVATEntries@12(VATType@1000 : Integer;UseTax@1001 : Boolean);
    BEGIN
      CLEAR(VATEntry2);
      WITH VATEntry DO BEGIN
        SETRANGE(Type,VATType);
        SETRANGE("Use Tax",UseTax);
        IF FIND('-') THEN
          REPEAT
            Accumulate(VATEntry2.Base,Base);
            Accumulate(VATEntry2.Amount,Amount);
            Accumulate(VATEntry2."Unrealized Amount","Unrealized Amount");
            Accumulate(VATEntry2."Unrealized Base","Unrealized Base");
            Accumulate(VATEntry2."Remaining Unrealized Amount","Remaining Unrealized Amount");
            Accumulate(VATEntry2."Remaining Unrealized Base","Remaining Unrealized Base");
            Accumulate(VATEntry2."Additional-Currency Amount","Additional-Currency Amount");
            Accumulate(VATEntry2."Additional-Currency Base","Additional-Currency Base");
            Accumulate(VATEntry2."Add.-Currency Unrealized Amt.","Add.-Currency Unrealized Amt.");
            Accumulate(VATEntry2."Add.-Currency Unrealized Base","Add.-Currency Unrealized Base");
            Accumulate(VATEntry2."Add.-Curr. Rem. Unreal. Amount","Add.-Curr. Rem. Unreal. Amount");
            Accumulate(VATEntry2."Add.-Curr. Rem. Unreal. Base","Add.-Curr. Rem. Unreal. Base");

            Accumulate(VATEntryTotalBase.Base,Base);
            Accumulate(VATEntryTotalBase.Amount,Amount);
            Accumulate(VATEntryTotalBase."Unrealized Amount","Unrealized Amount");
            Accumulate(VATEntryTotalBase."Unrealized Base","Unrealized Base");
            Accumulate(VATEntryTotalBase."Remaining Unrealized Amount","Remaining Unrealized Amount");
            Accumulate(VATEntryTotalBase."Remaining Unrealized Base","Remaining Unrealized Base");
            Accumulate(VATEntryTotalBase."Additional-Currency Amount","Additional-Currency Amount");
            Accumulate(VATEntryTotalBase."Additional-Currency Base","Additional-Currency Base");
            Accumulate(VATEntryTotalBase."Add.-Currency Unrealized Amt.","Add.-Currency Unrealized Amt.");
            Accumulate(VATEntryTotalBase."Add.-Currency Unrealized Base","Add.-Currency Unrealized Base");
            Accumulate(
              VATEntryTotalBase."Add.-Curr. Rem. Unreal. Amount","Add.-Curr. Rem. Unreal. Amount");
            Accumulate(VATEntryTotalBase."Add.-Curr. Rem. Unreal. Base","Add.-Curr. Rem. Unreal. Base");

            AdjustVATAmount(Base,"Additional-Currency Base");
            AdjustVATAmount(Amount,"Additional-Currency Amount");
            AdjustVATAmount("Unrealized Amount","Add.-Currency Unrealized Amt.");
            AdjustVATAmount("Unrealized Base","Add.-Currency Unrealized Base");
            AdjustVATAmount("Remaining Unrealized Amount","Add.-Curr. Rem. Unreal. Amount");
            AdjustVATAmount("Remaining Unrealized Base","Add.-Curr. Rem. Unreal. Base");
            MODIFY;

            Accumulate(VATEntry2.Base,-Base);
            Accumulate(VATEntry2.Amount,-Amount);
            Accumulate(VATEntry2."Unrealized Amount",-"Unrealized Amount");
            Accumulate(VATEntry2."Unrealized Base",-"Unrealized Base");
            Accumulate(VATEntry2."Remaining Unrealized Amount",-"Remaining Unrealized Amount");
            Accumulate(VATEntry2."Remaining Unrealized Base",-"Remaining Unrealized Base");
            Accumulate(VATEntry2."Additional-Currency Amount",-"Additional-Currency Amount");
            Accumulate(VATEntry2."Additional-Currency Base",-"Additional-Currency Base");
            Accumulate(VATEntry2."Add.-Currency Unrealized Amt.",-"Add.-Currency Unrealized Amt.");
            Accumulate(VATEntry2."Add.-Currency Unrealized Base",-"Add.-Currency Unrealized Base");
            Accumulate(VATEntry2."Add.-Curr. Rem. Unreal. Amount",-"Add.-Curr. Rem. Unreal. Amount");
            Accumulate(VATEntry2."Add.-Curr. Rem. Unreal. Base",-"Add.-Curr. Rem. Unreal. Base");
          UNTIL NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE AdjustVATAmount@4(VAR AmountLCY@1000 : Decimal;VAR AmountAddCurr@1001 : Decimal);
    BEGIN
      CASE GLSetup."VAT Exchange Rate Adjustment" OF
        GLSetup."VAT Exchange Rate Adjustment"::"Adjust Amount":
          BEGIN
            AmountLCY :=
              ROUND(
                CurrExchRate2.ExchangeAmtFCYToLCYAdjmt(
                  PostingDate,GLSetup."Additional Reporting Currency",
                  AmountAddCurr,AddCurrCurrencyFactor));
          END;
        GLSetup."VAT Exchange Rate Adjustment"::"Adjust Additional-Currency Amount":
          BEGIN
            AmountAddCurr :=
              ROUND(
                CurrExchRate2.ExchangeAmtLCYToFCY(
                  PostingDate,GLSetup."Additional Reporting Currency",
                  AmountLCY,AddCurrCurrencyFactor));
          END;
      END;
    END;

    LOCAL PROCEDURE AdjustVATAccount@13(AccNo@1000 : Code[20];AmountLCY@1001 : Decimal;AmountAddCurr@1002 : Decimal;BaseLCY@1003 : Decimal;BaseAddCurr@1004 : Decimal);
    BEGIN
      "G/L Account".GET(AccNo);
      "G/L Account".SETRANGE("Date Filter",StartDate,EndDate);
      CASE GLSetup."VAT Exchange Rate Adjustment" OF
        GLSetup."VAT Exchange Rate Adjustment"::"Adjust Amount":
          PostGLAccAdjmt(
            AccNo,GLSetup."VAT Exchange Rate Adjustment"::"Adjust Amount",
            -AmountLCY,BaseLCY,BaseAddCurr);
        GLSetup."VAT Exchange Rate Adjustment"::"Adjust Additional-Currency Amount":
          PostGLAccAdjmt(
            AccNo,GLSetup."VAT Exchange Rate Adjustment"::"Adjust Additional-Currency Amount",
            -AmountAddCurr,BaseLCY,BaseAddCurr);
      END;
    END;

    LOCAL PROCEDURE AdjustPurchTax@5(UseTax@1000 : Boolean);
    BEGIN
      IF (VATEntry2.Amount <> 0) OR (VATEntry2."Additional-Currency Amount" <> 0) THEN BEGIN
        TaxJurisdiction.TESTFIELD("Tax Account (Purchases)");
        AdjustVATAccount(
          TaxJurisdiction."Tax Account (Purchases)",
          VATEntry2.Amount,VATEntry2."Additional-Currency Amount",
          VATEntryTotalBase.Amount,VATEntryTotalBase."Additional-Currency Amount");
        IF UseTax THEN BEGIN
          TaxJurisdiction.TESTFIELD("Reverse Charge (Purchases)");
          AdjustVATAccount(
            TaxJurisdiction."Reverse Charge (Purchases)",
            -VATEntry2.Amount,-VATEntry2."Additional-Currency Amount",
            -VATEntryTotalBase.Amount,-VATEntryTotalBase."Additional-Currency Amount");
        END;
      END;
      IF (VATEntry2."Remaining Unrealized Amount" <> 0) OR
         (VATEntry2."Add.-Curr. Rem. Unreal. Amount" <> 0)
      THEN BEGIN
        TaxJurisdiction.TESTFIELD("Unrealized VAT Type");
        TaxJurisdiction.TESTFIELD("Unreal. Tax Acc. (Purchases)");
        AdjustVATAccount(
          TaxJurisdiction."Unreal. Tax Acc. (Purchases)",
          VATEntry2."Remaining Unrealized Amount",VATEntry2."Add.-Curr. Rem. Unreal. Amount",
          VATEntryTotalBase."Remaining Unrealized Amount",VATEntry2."Add.-Curr. Rem. Unreal. Amount");

        IF UseTax THEN BEGIN
          TaxJurisdiction.TESTFIELD("Unreal. Rev. Charge (Purch.)");
          AdjustVATAccount(
            TaxJurisdiction."Unreal. Rev. Charge (Purch.)",
            -VATEntry2."Remaining Unrealized Amount",
            -VATEntry2."Add.-Curr. Rem. Unreal. Amount",
            -VATEntryTotalBase."Remaining Unrealized Amount",
            -VATEntryTotalBase."Add.-Curr. Rem. Unreal. Amount");
        END;
      END;
    END;

    LOCAL PROCEDURE AdjustSalesTax@10();
    BEGIN
      TaxJurisdiction.TESTFIELD("Tax Account (Sales)");
      AdjustVATAccount(
        TaxJurisdiction."Tax Account (Sales)",
        VATEntry2.Amount,VATEntry2."Additional-Currency Amount",
        VATEntryTotalBase.Amount,VATEntryTotalBase."Additional-Currency Amount");
      IF (VATEntry2."Remaining Unrealized Amount" <> 0) OR
         (VATEntry2."Add.-Curr. Rem. Unreal. Amount" <> 0)
      THEN BEGIN
        TaxJurisdiction.TESTFIELD("Unrealized VAT Type");
        TaxJurisdiction.TESTFIELD("Unreal. Tax Acc. (Sales)");
        AdjustVATAccount(
          TaxJurisdiction."Unreal. Tax Acc. (Sales)",
          VATEntry2."Remaining Unrealized Amount",
          VATEntry2."Add.-Curr. Rem. Unreal. Amount",
          VATEntryTotalBase."Remaining Unrealized Amount",
          VATEntryTotalBase."Add.-Curr. Rem. Unreal. Amount");
      END;
    END;

    LOCAL PROCEDURE Accumulate@9(VAR TotalAmount@1000 : Decimal;AmountToAdd@1001 : Decimal);
    BEGIN
      TotalAmount := TotalAmount + AmountToAdd;
    END;

    LOCAL PROCEDURE PostGLAccAdjmt@23(GLAccNo@1000 : Code[20];ExchRateAdjmt@1001 : Integer;Amount@1002 : Decimal;BalanceAtDate@1003 : Decimal;AddCurrBalanceAtDate@1004 : Decimal);
    BEGIN
      GenJnlLine.INIT;
      CASE ExchRateAdjmt OF
        "G/L Account"."Exchange Rate Adjustment"::"Adjust Amount":
          BEGIN
            GenJnlLine."Additional-Currency Posting" := GenJnlLine."Additional-Currency Posting"::"Amount Only";
            GenJnlLine."Currency Code" := '';
            GenJnlLine.Amount := Amount;
            GenJnlLine."Amount (LCY)" := GenJnlLine.Amount;
            GLAmtTotal := GLAmtTotal + GenJnlLine.Amount;
            GLAddCurrBalAtDateTotal := GLAddCurrBalAtDateTotal + AddCurrBalanceAtDate;
            GLBalAtDateBase := GLBalAtDateBase + BalanceAtDate;
          END;
        "G/L Account"."Exchange Rate Adjustment"::"Adjust Additional-Currency Amount":
          BEGIN
            GenJnlLine."Additional-Currency Posting" := GenJnlLine."Additional-Currency Posting"::"Additional-Currency Amount Only";
            GenJnlLine."Currency Code" := GLSetup."Additional Reporting Currency";
            GenJnlLine.Amount := Amount;
            GenJnlLine."Amount (LCY)" := 0;
            GLAddCurrAmtTotal := GLAddCurrAmtTotal + GenJnlLine.Amount;
            GLBalAtDateTotal := GLBalAtDateTotal + BalanceAtDate;
            GLAddCurrBalAtDateBase := GLAddCurrBalAtDateBase + AddCurrBalanceAtDate;
          END;
      END;
      IF GenJnlLine.Amount <> 0 THEN BEGIN
        GenJnlLine."Document No." := PostingDocNo;
        GenJnlLine."Account Type" := GenJnlLine."Account Type"::"G/L Account";
        GenJnlLine."Account No." := GLAccNo;
        GenJnlLine."Posting Date" := PostingDate;
        CASE GenJnlLine."Additional-Currency Posting" OF
          GenJnlLine."Additional-Currency Posting"::"Amount Only":
            BEGIN
              GenJnlLine.Description :=
                STRSUBSTNO(
                  PostingDescription,
                  GLSetup."Additional Reporting Currency",
                  AddCurrBalanceAtDate);
            END;
          GenJnlLine."Additional-Currency Posting"::"Additional-Currency Amount Only":
            BEGIN
              GenJnlLine.Description :=
                STRSUBSTNO(
                  PostingDescription,
                  '',
                  BalanceAtDate);
            END;
        END;
        GenJnlLine."System-Created Entry" := TRUE;
        GenJnlLine."Source Code" := SourceCodeSetup."Exchange Rate Adjmt.";
        //NC TR237 > EB
        GenJnlLine."Not Consolidate" := GLSetup."Not Consolidate Revaluation";
        //NC TR237 < EB
        //NC APCOC-104 > RD
        GenJnlLine."Not Translate" := StandParam."Not Translate";
        //NC APCOC-104 < RD
        //NC APCOC-117 > RD
        GenJnlLine."Not Translate IFRS" := StandParam."Not Translate IFRS";
        //NC APCOC-117 < RD

        GetJnlLineDefDim(GenJnlLine,TempJnlLineDim);
        GetTempJnlLineDim(TempJnlLineDim,GenJnlLine,BalAccType::None,'',Amount > 0);
        PostGenJnlLine(GenJnlLine,TempJnlLineDim);
      END;
    END;

    LOCAL PROCEDURE CheckExchRateAdjustment@6(AccNo@1000 : Code[10];SetupTableName@1001 : Text[100];SetupFieldName@1002 : Text[100]);
    VAR
      GLAcc@1003 : Record 15;
      GLSetup@1004 : Record 98;
    BEGIN
      IF AccNo = '' THEN
        EXIT;
      GLAcc.GET(AccNo);
      IF GLAcc."Exchange Rate Adjustment" <> GLAcc."Exchange Rate Adjustment"::"No Adjustment" THEN BEGIN
        GLAcc."Exchange Rate Adjustment" := GLAcc."Exchange Rate Adjustment"::"No Adjustment";

        ERROR(
          Text017,
          GLAcc.FIELDCAPTION("Exchange Rate Adjustment"),GLAcc.TABLECAPTION,
          GLAcc."No.",GLAcc."Exchange Rate Adjustment",
          SetupTableName,GLSetup.FIELDCAPTION("VAT Exchange Rate Adjustment"),
          GLSetup.TABLECAPTION,SetupFieldName);
      END;
    END;

    LOCAL PROCEDURE HandleCustDebitCredit@17(Amount@1000 : Decimal;"Amount (LCY)"@1001 : Decimal;Correction@1002 : Boolean;AdjAmount@1003 : Decimal);
    BEGIN
      IF ((Amount > 0) OR ("Amount (LCY)" > 0)) AND (NOT Correction) OR
         ((Amount < 0) OR ("Amount (LCY)" < 0)) AND Correction
      THEN BEGIN
        TempDtldCustLedgEntry."Debit Amount (LCY)" := AdjAmount;
        TempDtldCustLedgEntry."Credit Amount (LCY)" := 0;
      END ELSE BEGIN
        TempDtldCustLedgEntry."Debit Amount (LCY)" := 0;
        TempDtldCustLedgEntry."Credit Amount (LCY)" := -AdjAmount;
      END;
    END;

    LOCAL PROCEDURE HandleVendDebitCredit@14(Amount@1000 : Decimal;"Amount (LCY)"@1001 : Decimal;Correction@1002 : Boolean;AdjAmount@1003 : Decimal);
    BEGIN
      IF ((Amount > 0) OR ("Amount (LCY)" > 0)) AND (NOT Correction) OR
         ((Amount < 0) OR ("Amount (LCY)" < 0)) AND Correction
      THEN BEGIN
        TempDtldVendLedgEntry."Debit Amount (LCY)" := AdjAmount;
        TempDtldVendLedgEntry."Credit Amount (LCY)" := 0;
      END ELSE BEGIN
        TempDtldVendLedgEntry."Debit Amount (LCY)" := 0;
        TempDtldVendLedgEntry."Credit Amount (LCY)" := -AdjAmount;
      END;
    END;

    LOCAL PROCEDURE GetJnlLineDefDim@11(VAR GenJnlLine@1000 : Record 81;VAR TempJnlLineDim@1001 : Record 356);
    VAR
      TableID@1002 : ARRAY [10] OF Integer;
      No@1003 : ARRAY [10] OF Code[20];
    BEGIN
      WITH GenJnlLine DO BEGIN
        CASE "Account Type" OF
          "Account Type"::"G/L Account": TableID[1] := DATABASE::"G/L Account";
          "Account Type"::"Bank Account": TableID[1] := DATABASE::"Bank Account";
        END;
        No[1] := "Account No.";
        DimMgt.GetDefaultDimID(TableID,No,"Source Code","Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
      END;
      DimMgt.GetJnlLineDefaultDim(TempJnlLineDim);
    END;

    LOCAL PROCEDURE CopyJnlLineDimToDimBuf@18(VAR JnlLineDim@1000 : Record 356;VAR DimBuf@1001 : Record 360);
    BEGIN
      IF JnlLineDim.FIND('-') THEN
        REPEAT
          DimBuf."Table ID" := JnlLineDim."Table ID";
          DimBuf."Entry No." := 0;
          DimBuf."Dimension Code" := JnlLineDim."Dimension Code";
          DimBuf."Dimension Value Code" := JnlLineDim."Dimension Value Code";
          DimBuf."Line No." := JnlLineDim."Journal Line No.";
          IF DimBuf.INSERT THEN;
        UNTIL JnlLineDim.NEXT = 0;
    END;

    LOCAL PROCEDURE GetDimCombID@21(VAR DimBuf@1000 : Record 360) : Integer;
    VAR
      DimEntryNo@1001 : Integer;
    BEGIN
      DimEntryNo := DimBufMgt.FindDimensions(DimBuf);
      IF DimEntryNo = 0 THEN
        DimEntryNo := DimBufMgt.InsertDimensions(DimBuf);
      EXIT(DimEntryNo);
    END;

    LOCAL PROCEDURE PostGenJnlLine@8(VAR GenJnlLine@1000 : Record 81;VAR JnlLineDim@1001 : Record 356);
    BEGIN
      GenJnlLine."Shortcut Dimension 1 Code" := GetGlobalDimVal(GLSetup."Global Dimension 1 Code",JnlLineDim);
      GenJnlLine."Shortcut Dimension 2 Code" := GetGlobalDimVal(GLSetup."Global Dimension 2 Code",JnlLineDim);
      GenJnlPostLine.RunWithCheck(GenJnlLine,TempJnlLineDim);
    END;

    LOCAL PROCEDURE GetGlobalDimVal@16(GlobalDimCode@1000 : Code[20];VAR JnlLineDim@1001 : Record 356) : Code[20];
    VAR
      DimVal@1002 : Code[20];
    BEGIN
      IF GlobalDimCode = '' THEN
        DimVal := ''
      ELSE BEGIN
        JnlLineDim.SETRANGE("Dimension Code",GlobalDimCode);
        IF JnlLineDim.FIND('-') THEN
          DimVal := JnlLineDim."Dimension Value Code"
        ELSE
          DimVal := '';
        JnlLineDim.SETRANGE("Dimension Code");
      END;
      EXIT(DimVal);
    END;

    PROCEDURE CheckPostingDate@19();
    BEGIN
      IF PostingDate < StartDate THEN
        ERROR(Text018);
      IF PostingDate > EndDateReq THEN
        ERROR(Text018);
    END;

    PROCEDURE AdjustCustomerLedgerEntry@20(CusLedgerEntry@1001 : Record 21;PostingDate2@1000 : Date);
    VAR
      LedgerEntryDim@1005 : Record 355;
      DimEntryNo@1004 : Integer;
      OldAdjAmount@1003 : Decimal;
      Adjust@1002 : Boolean;
    BEGIN
      WITH CusLedgerEntry DO BEGIN
        SETRANGE("Date Filter",0D,PostingDate2);
        Currency2.GET("Currency Code");
        IF Currency2.Conventional THEN
          CurrReport.SKIP;
        GainsAmount := 0;
        LossesAmount := 0;
        OldAdjAmount := 0;
        Adjust := FALSE;

        TempJnlLineDim.RESET;
        TempJnlLineDim.DELETEALL;
        TempDimBuf.RESET;
        TempDimBuf.DELETEALL;
        LedgerEntryDim.SETRANGE("Table ID",DATABASE::"Cust. Ledger Entry");
        LedgerEntryDim.SETRANGE("Entry No.","Entry No.");
        DimMgt.CopyLedgEntryDimToJnlLineDim(LedgerEntryDim,TempJnlLineDim);
        CopyJnlLineDimToDimBuf(TempJnlLineDim,TempDimBuf);
        DimEntryNo := GetDimCombID(TempDimBuf);

        CALCFIELDS(
          Amount,"Amount (LCY)","Remaining Amount","Remaining Amt. (LCY)","Original Amt. (LCY)",
          "Debit Amount","Credit Amount","Debit Amount (LCY)","Credit Amount (LCY)");

        // Calculate Old Unrealized GainLoss
        DtldCustLedgEntry.RESET;
        DtldCustLedgEntry.SETCURRENTKEY("Cust. Ledger Entry No.","Entry Type");
        DtldCustLedgEntry.SETRANGE("Cust. Ledger Entry No.","Entry No.");
        DtldCustLedgEntry.SETRANGE(
          "Prepmt. Diff. in TA",GLSetup."Cancel Curr. Prepmt. Adjmt." AND Prepayment);
        DtldCustLedgEntry.SETRANGE(
          "Entry Type",
          DtldCustLedgEntry."Entry Type"::"Unrealized Loss",
          DtldCustLedgEntry."Entry Type"::"Unrealized Gain");
        DtldCustLedgEntry.CALCSUMS("Amount (LCY)");

        TempDtldCustLedgEntry.RESET;
        TempDtldCustLedgEntry.SETCURRENTKEY("Cust. Ledger Entry No.","Entry Type");
        TempDtldCustLedgEntry.SETRANGE("Cust. Ledger Entry No.","Entry No.");
        TempDtldCustLedgEntry.SETRANGE(
          "Prepmt. Diff. in TA",GLSetup."Cancel Curr. Prepmt. Adjmt." AND Prepayment);
        TempDtldCustLedgEntry.SETRANGE(
          "Entry Type",
          TempDtldCustLedgEntry."Entry Type"::"Unrealized Loss",
          TempDtldCustLedgEntry."Entry Type"::"Unrealized Gain");
        TempDtldCustLedgEntry.CALCSUMS("Amount (LCY)","Debit Amount (LCY)","Credit Amount (LCY)");
        OldAdjAmount := DtldCustLedgEntry."Amount (LCY)" + TempDtldCustLedgEntry."Amount (LCY)";
        "Remaining Amt. (LCY)" := "Remaining Amt. (LCY)" + TempDtldCustLedgEntry."Amount (LCY)";
        IF GLSetup."Cancel Curr. Prepmt. Adjmt." AND Prepayment THEN
          "Remaining Amt. (LCY)" := "Remaining Amt. (LCY)" + DtldCustLedgEntry."Amount (LCY)";
        "Debit Amount (LCY)" := "Debit Amount (LCY)" + TempDtldCustLedgEntry."Amount (LCY)";
        "Credit Amount (LCY)" := "Credit Amount (LCY)" + TempDtldCustLedgEntry."Amount (LCY)";
        TempDtldCustLedgEntry.RESET;

        // Modify Currency factor on Customer Ledger Entry

        // Calculate New Unrealized GainLoss
        AdjAmount :=
          ROUND(
            CurrExchRate.ExchangeAmtFCYToLCYAdjmt(
              PostingDate2,Currency2.Code,"Remaining Amount",Currency2."Currency Factor")) -
          "Remaining Amt. (LCY)";

        AdjBalance := AdjAmount + "Remaining Amt. (LCY)";
        TotalAmount += AdjAmount;
        IF AdjAmount > 0 THEN
          TotalAmountPos += AdjAmount
        ELSE
          TotalAmountNeg += AdjAmount;

        IF AdjAmount = 0 THEN
          CurrReport.SKIP;

        IF AdjAmount <> 0 THEN BEGIN
          IF "Adjusted Currency Factor" <> Currency2."Currency Factor" THEN BEGIN
            "Adjusted Currency Factor" := Currency2."Currency Factor";
            IF NOT TestMode THEN
              MODIFY;
          END;
          TempDtldCustLedgEntry.INIT;
          TempDtldCustLedgEntry."Entry No." := NewEntryNo;
          TempDtldCustLedgEntry."Cust. Ledger Entry No." := "Entry No.";
          TempDtldCustLedgEntry."Posting Date" := PostingDate2;
          TempDtldCustLedgEntry."Document No." := "Document No.";
          TempDtldCustLedgEntry."Document Type" := "Document Type";
          TempDtldCustLedgEntry.Prepayment := Prepayment;
          TempDtldCustLedgEntry.Amount := 0;
          TempDtldCustLedgEntry."Customer No." := "Customer No.";
          TempDtldCustLedgEntry."Currency Code" := "Currency Code";
          TempDtldCustLedgEntry."User ID" := USERID;
          TempDtldCustLedgEntry."Source Code" := SourceCodeSetup."Exchange Rate Adjmt.";
          TempDtldCustLedgEntry."Journal Batch Name" := "Journal Batch Name";
          TempDtldCustLedgEntry."Reason Code" := "Reason Code";
          TempDtldCustLedgEntry."Initial Entry Due Date" := "Due Date";
          TempDtldCustLedgEntry."Initial Entry Global Dim. 1" := "Global Dimension 1 Code";
          TempDtldCustLedgEntry."Initial Entry Global Dim. 2" := "Global Dimension 2 Code";
          TempDtldCustLedgEntry."Initial Document Type" := "Document Type";
          TempDtldCustLedgEntry."Prepmt. Diff. in TA" := GLSetup."Cancel Curr. Prepmt. Adjmt." AND Prepayment;
          TempDtldCustLedgEntry."Agreement No." := "Agreement No.";
          //NC MLN14 > DP
          TempDtldCustLedgEntry."Agreement Condition No." := "Agreement Condition No.";
          TempDtldCustLedgEntry."Amount Type" := "Amount Type";
          //NC MLN14 < DP
          TempDtldCustLedgEntry."Customer Posting Group" := "Customer Posting Group";
          TempDtldCustLedgEntry."Initial Entry Posting Date" := "Posting Date";
          TempDtldCustLedgEntry."Initial Entry Positive" := (Amount >= 0);

          Correction :=
            ("Debit Amount" < 0) OR
            ("Credit Amount" < 0) OR
            ("Debit Amount (LCY)" < 0) OR
            ("Credit Amount (LCY)" < 0);

          IF OldAdjAmount > 0 THEN BEGIN
            CASE TRUE OF
              (AdjAmount > 0):
                BEGIN
                  TempDtldCustLedgEntry."Amount (LCY)" := AdjAmount;
                  TempDtldCustLedgEntry."Entry Type" := TempDtldCustLedgEntry."Entry Type"::"Unrealized Gain";
                  HandleCustDebitCredit(
                    Amount,"Amount (LCY)",Correction,TempDtldCustLedgEntry."Amount (LCY)");
                  TempDtldCustLedgEntry.INSERT;
                  NewEntryNo := NewEntryNo + 1;
                  GainsAmount := AdjAmount;
                  Adjust := TRUE;
                END;
              (AdjAmount < 0):
                BEGIN
                  IF -AdjAmount <= OldAdjAmount THEN BEGIN
                    TempDtldCustLedgEntry."Amount (LCY)" := AdjAmount;
                    TempDtldCustLedgEntry."Entry Type" := TempDtldCustLedgEntry."Entry Type"::"Unrealized Gain";
                    HandleCustDebitCredit(
                      Amount,"Amount (LCY)",Correction,TempDtldCustLedgEntry."Amount (LCY)");
                    TempDtldCustLedgEntry.INSERT;
                    NewEntryNo := NewEntryNo + 1;
                    GainsAmount := AdjAmount;
                    Adjust := TRUE;
                  END ELSE BEGIN
                    AdjAmount := AdjAmount + OldAdjAmount;
                    TempDtldCustLedgEntry."Amount (LCY)" := -OldAdjAmount;
                    TempDtldCustLedgEntry."Entry Type" := TempDtldCustLedgEntry."Entry Type"::"Unrealized Gain";
                    HandleCustDebitCredit(
                      Amount,"Amount (LCY)",Correction,TempDtldCustLedgEntry."Amount (LCY)");
                    TempDtldCustLedgEntry.INSERT;
                    NewEntryNo := NewEntryNo + 1;
                    AdjExchRateBufferUpdate(
                      "Currency Code",TempDtldCustLedgEntry."Customer Posting Group",
                      0,0,-OldAdjAmount,-OldAdjAmount,0,DimEntryNo,PostingDate2,Customer."IC Partner Code","Entry No.");
                    Adjust := FALSE;
                  END;
                END;
            END;
          END;
          IF OldAdjAmount < 0 THEN BEGIN
            CASE TRUE OF
              (AdjAmount < 0):
                BEGIN
                  TempDtldCustLedgEntry."Amount (LCY)" := AdjAmount;
                  TempDtldCustLedgEntry."Entry Type" := TempDtldCustLedgEntry."Entry Type"::"Unrealized Loss";
                  HandleCustDebitCredit(
                    Amount,"Amount (LCY)",Correction,TempDtldCustLedgEntry."Amount (LCY)");
                  TempDtldCustLedgEntry.INSERT;
                  NewEntryNo := NewEntryNo + 1;
                  LossesAmount := AdjAmount;
                  Adjust := TRUE;
                END;
              (AdjAmount > 0):
                BEGIN
                  IF AdjAmount <= -OldAdjAmount THEN BEGIN
                    TempDtldCustLedgEntry."Amount (LCY)" := AdjAmount;
                    TempDtldCustLedgEntry."Entry Type" := TempDtldCustLedgEntry."Entry Type"::"Unrealized Loss";
                    HandleCustDebitCredit(
                      Amount,"Amount (LCY)",Correction,TempDtldCustLedgEntry."Amount (LCY)");
                    TempDtldCustLedgEntry.INSERT;
                    NewEntryNo := NewEntryNo + 1;
                    LossesAmount := AdjAmount;
                    Adjust := TRUE;
                  END ELSE BEGIN
                    AdjAmount := OldAdjAmount + AdjAmount;
                    TempDtldCustLedgEntry."Amount (LCY)" := -OldAdjAmount;
                    TempDtldCustLedgEntry."Entry Type" := TempDtldCustLedgEntry."Entry Type"::"Unrealized Loss";
                    HandleCustDebitCredit(
                      Amount,"Amount (LCY)",Correction,TempDtldCustLedgEntry."Amount (LCY)");
                    TempDtldCustLedgEntry.INSERT;
                    NewEntryNo := NewEntryNo + 1;
                    AdjExchRateBufferUpdate(
                      "Currency Code",TempDtldCustLedgEntry."Customer Posting Group",
                      0,0,-OldAdjAmount,0,-OldAdjAmount,DimEntryNo,PostingDate2,Customer."IC Partner Code","Entry No.");
                    Adjust := FALSE;
                  END;
                END;
            END;
          END;
          IF NOT Adjust THEN BEGIN
            TempDtldCustLedgEntry."Amount (LCY)" := AdjAmount;
            HandleCustDebitCredit(Amount,"Amount (LCY)",Correction,TempDtldCustLedgEntry."Amount (LCY)");
            TempDtldCustLedgEntry."Entry No." := NewEntryNo;
            IF AdjAmount < 0 THEN BEGIN
              TempDtldCustLedgEntry."Entry Type" := TempDtldCustLedgEntry."Entry Type"::"Unrealized Loss";
              GainsAmount := 0;
              LossesAmount := AdjAmount;
            END ELSE BEGIN
              IF AdjAmount > 0 THEN BEGIN
                TempDtldCustLedgEntry."Entry Type" := TempDtldCustLedgEntry."Entry Type"::"Unrealized Gain";
                GainsAmount := AdjAmount;
                LossesAmount := 0;
              END;
            END;
            TempDtldCustLedgEntry.INSERT;
            NewEntryNo := NewEntryNo + 1;
          END;

        TotalAdjAmount := TotalAdjAmount + AdjAmount;

        //NC M2 > DP
        IF GUIALLOWED THEN
        //NC M2 < DP

        Window.UPDATE(4,TotalAdjAmount);
        AdjExchRateBufferUpdate(
          "Currency Code",TempDtldCustLedgEntry."Customer Posting Group",
          "Remaining Amount","Remaining Amt. (LCY)",TempDtldCustLedgEntry."Amount (LCY)",
          GainsAmount,LossesAmount,DimEntryNo,PostingDate2,Customer."IC Partner Code","Entry No.");
        END;
      END;
    END;

    PROCEDURE AdjustVendorLedgerEntry@24(VendLedgerEntry@1001 : Record 25;PostingDate2@1000 : Date);
    VAR
      LedgerEntryDim@1006 : Record 355;
      DimEntryNo@1005 : Integer;
      OldAdjAmount@1004 : Decimal;
      Adjust@1003 : Boolean;
    BEGIN
      WITH VendLedgerEntry DO BEGIN
        SETRANGE("Date Filter",0D,PostingDate2);
        Currency2.GET("Currency Code");
        IF Currency2.Conventional THEN
          CurrReport.SKIP;
        GainsAmount := 0;
        LossesAmount := 0;
        OldAdjAmount := 0;
        Adjust := FALSE;

        TempJnlLineDim.RESET;
        TempJnlLineDim.DELETEALL;
        TempDimBuf.RESET;
        TempDimBuf.DELETEALL;
        LedgerEntryDim.SETRANGE("Table ID",DATABASE::"Vendor Ledger Entry");
        LedgerEntryDim.SETRANGE("Entry No.","Entry No.");
        DimMgt.CopyLedgEntryDimToJnlLineDim(LedgerEntryDim,TempJnlLineDim);
        CopyJnlLineDimToDimBuf(TempJnlLineDim,TempDimBuf);
        DimEntryNo := GetDimCombID(TempDimBuf);

        CALCFIELDS(
          Amount,"Amount (LCY)","Remaining Amount","Remaining Amt. (LCY)","Original Amt. (LCY)",
          "Debit Amount","Credit Amount","Debit Amount (LCY)","Credit Amount (LCY)");

        // Calculate Old Unrealized GainLoss
        DtldVendLedgEntry.RESET;
        DtldVendLedgEntry.SETCURRENTKEY("Vendor Ledger Entry No.","Entry Type");
        DtldVendLedgEntry.SETRANGE("Vendor Ledger Entry No.","Entry No.");
        DtldVendLedgEntry.SETRANGE(
          "Prepmt. Diff. in TA",GLSetup."Cancel Curr. Prepmt. Adjmt." AND Prepayment);
        DtldVendLedgEntry.SETRANGE(
          "Entry Type",
          DtldVendLedgEntry."Entry Type"::"Unrealized Loss",
          DtldVendLedgEntry."Entry Type"::"Unrealized Gain");
        DtldVendLedgEntry.CALCSUMS("Amount (LCY)");
        OldAdjAmount := DtldVendLedgEntry."Amount (LCY)";

        TempDtldVendLedgEntry.RESET;
        TempDtldVendLedgEntry.SETCURRENTKEY("Vendor Ledger Entry No.","Entry Type");
        TempDtldVendLedgEntry.SETRANGE("Vendor Ledger Entry No.","Entry No.");
        TempDtldVendLedgEntry.SETRANGE(
          "Prepmt. Diff. in TA",GLSetup."Cancel Curr. Prepmt. Adjmt." AND Prepayment);
        TempDtldVendLedgEntry.SETRANGE(
          "Entry Type",
          TempDtldVendLedgEntry."Entry Type"::"Unrealized Loss",
          TempDtldVendLedgEntry."Entry Type"::"Unrealized Gain");
        TempDtldVendLedgEntry.CALCSUMS("Amount (LCY)","Debit Amount (LCY)","Credit Amount (LCY)");
        OldAdjAmount := DtldVendLedgEntry."Amount (LCY)" + TempDtldVendLedgEntry."Amount (LCY)";
        "Remaining Amt. (LCY)" := "Remaining Amt. (LCY)" + TempDtldVendLedgEntry."Amount (LCY)";
        IF GLSetup."Cancel Curr. Prepmt. Adjmt." AND Prepayment THEN
          "Remaining Amt. (LCY)" := "Remaining Amt. (LCY)" + DtldVendLedgEntry."Amount (LCY)";
        "Debit Amount (LCY)" := "Debit Amount (LCY)" + TempDtldVendLedgEntry."Amount (LCY)";
        "Credit Amount (LCY)" := "Credit Amount (LCY)" + TempDtldVendLedgEntry."Amount (LCY)";
        TempDtldVendLedgEntry.RESET;

        // Modify Currency factor on Vendor Ledger Entry

        // Calculate New Unrealized GainLoss
        AdjAmount :=
          ROUND(
            CurrExchRate.ExchangeAmtFCYToLCYAdjmt(
              PostingDate2,Currency2.Code,"Remaining Amount",Currency2."Currency Factor")) -
          "Remaining Amt. (LCY)";

        AdjBalance := AdjAmount + "Remaining Amt. (LCY)";
        TotalAmount += AdjAmount;
        IF AdjAmount > 0 THEN
          TotalAmountPos += AdjAmount
        ELSE
          TotalAmountNeg += AdjAmount;

        IF AdjAmount = 0 THEN
          CurrReport.SKIP;

        IF AdjAmount <> 0 THEN BEGIN
          IF "Adjusted Currency Factor" <> Currency2."Currency Factor" THEN BEGIN
            "Adjusted Currency Factor" := Currency2."Currency Factor";
            IF NOT TestMode THEN
              MODIFY;
          END;
          TempDtldVendLedgEntry.INIT;
          TempDtldVendLedgEntry."Entry No." := NewEntryNo;
          TempDtldVendLedgEntry."Vendor Ledger Entry No." := "Entry No.";
          TempDtldVendLedgEntry."Posting Date" := PostingDate2;
          TempDtldVendLedgEntry."Document No." := "Document No.";
          TempDtldVendLedgEntry."Document Type" := "Document Type";
          TempDtldVendLedgEntry.Amount := 0;
          TempDtldVendLedgEntry."Vendor No." := "Vendor No.";
          TempDtldVendLedgEntry."Currency Code" := "Currency Code";
          TempDtldVendLedgEntry."User ID" := USERID;
          TempDtldVendLedgEntry."Source Code" := SourceCodeSetup."Exchange Rate Adjmt.";
          TempDtldVendLedgEntry."Journal Batch Name" := "Journal Batch Name";
          TempDtldVendLedgEntry."Reason Code" := "Reason Code";
          TempDtldVendLedgEntry."Initial Entry Due Date" := "Due Date";
          TempDtldVendLedgEntry."Initial Entry Global Dim. 1" := "Global Dimension 1 Code";
          TempDtldVendLedgEntry."Initial Entry Global Dim. 2" := "Global Dimension 2 Code";
          TempDtldVendLedgEntry."Initial Document Type" := "Document Type";
          TempDtldVendLedgEntry."Prepmt. Diff. in TA" := GLSetup."Cancel Curr. Prepmt. Adjmt." AND Prepayment;
          TempDtldVendLedgEntry."Agreement No." := "Agreement No.";

          //NC MLN14 > DP
          TempDtldVendLedgEntry."Agreement Condition No." := "Agreement Condition No.";
          TempDtldVendLedgEntry."Amount Type" := "Amount Type";
          //NC MLN14 < DP

          TempDtldVendLedgEntry."Vendor Posting Group" := "Vendor Posting Group";
          TempDtldVendLedgEntry."Initial Entry Posting Date" := "Posting Date";
          TempDtldVendLedgEntry."Initial Entry Positive" := (Amount >= 0);

          Correction :=
            ("Debit Amount" < 0) OR
            ("Credit Amount" < 0) OR
            ("Debit Amount (LCY)" < 0) OR
            ("Credit Amount (LCY)" < 0);

          IF OldAdjAmount > 0 THEN BEGIN
            CASE TRUE OF
              (AdjAmount > 0):
                BEGIN
                  TempDtldVendLedgEntry."Amount (LCY)" := AdjAmount;
                  TempDtldVendLedgEntry."Entry Type" := TempDtldVendLedgEntry."Entry Type"::"Unrealized Gain";
                  HandleVendDebitCredit(Amount,"Amount (LCY)",Correction,TempDtldVendLedgEntry."Amount (LCY)");
                  TempDtldVendLedgEntry.INSERT;
                  NewEntryNo := NewEntryNo + 1;
                  GainsAmount := AdjAmount;
                  Adjust := TRUE;
                END;
              (AdjAmount < 0):
                BEGIN
                  IF -AdjAmount <= OldAdjAmount THEN BEGIN
                    TempDtldVendLedgEntry."Amount (LCY)" := AdjAmount;
                    TempDtldVendLedgEntry."Entry Type" := TempDtldVendLedgEntry."Entry Type"::"Unrealized Gain";
                    HandleVendDebitCredit(
                      Amount,"Amount (LCY)",Correction,TempDtldVendLedgEntry."Amount (LCY)");
                    TempDtldVendLedgEntry.INSERT;
                    NewEntryNo := NewEntryNo + 1;
                    GainsAmount := AdjAmount;
                    Adjust := TRUE;
                  END ELSE BEGIN
                    AdjAmount := AdjAmount + OldAdjAmount;
                    TempDtldVendLedgEntry."Amount (LCY)" := -OldAdjAmount;
                    TempDtldVendLedgEntry."Entry Type" := TempDtldVendLedgEntry."Entry Type"::"Unrealized Gain";
                    HandleVendDebitCredit(
                      Amount,"Amount (LCY)",Correction,TempDtldVendLedgEntry."Amount (LCY)");
                    TempDtldVendLedgEntry.INSERT;
                    NewEntryNo := NewEntryNo + 1;
                    AdjExchRateBufferUpdate(
                      "Currency Code",TempDtldVendLedgEntry."Vendor Posting Group",
                      0,0,-OldAdjAmount,-OldAdjAmount,0,DimEntryNo,PostingDate2,Vendor."IC Partner Code","Entry No.");
                    Adjust := FALSE;
                  END;
                END;
            END;
          END;
          IF OldAdjAmount < 0 THEN BEGIN
            CASE TRUE OF
              (AdjAmount < 0):
                BEGIN
                  TempDtldVendLedgEntry."Amount (LCY)" := AdjAmount;
                  TempDtldVendLedgEntry."Entry Type" := TempDtldVendLedgEntry."Entry Type"::"Unrealized Loss";
                  HandleVendDebitCredit(Amount,"Amount (LCY)",Correction,TempDtldVendLedgEntry."Amount (LCY)");
                  TempDtldVendLedgEntry.INSERT;
                  NewEntryNo := NewEntryNo + 1;
                  LossesAmount := AdjAmount;
                  Adjust := TRUE;
                END;
              (AdjAmount > 0):
                BEGIN
                  IF AdjAmount <= -OldAdjAmount THEN BEGIN
                    TempDtldVendLedgEntry."Amount (LCY)" := AdjAmount;
                    TempDtldVendLedgEntry."Entry Type" := TempDtldVendLedgEntry."Entry Type"::"Unrealized Loss";
                    HandleVendDebitCredit(
                      Amount,"Amount (LCY)",Correction,TempDtldVendLedgEntry."Amount (LCY)");
                    TempDtldVendLedgEntry.INSERT;
                    NewEntryNo := NewEntryNo + 1;
                    LossesAmount := AdjAmount;
                    Adjust := TRUE;
                  END ELSE BEGIN
                    AdjAmount := OldAdjAmount + AdjAmount;
                    TempDtldVendLedgEntry."Amount (LCY)" := -OldAdjAmount;
                    TempDtldVendLedgEntry."Entry Type" := TempDtldVendLedgEntry."Entry Type"::"Unrealized Loss";
                    HandleVendDebitCredit(
                      Amount,"Amount (LCY)",Correction,TempDtldVendLedgEntry."Amount (LCY)");
                    TempDtldVendLedgEntry.INSERT;
                    NewEntryNo := NewEntryNo + 1;
                    AdjExchRateBufferUpdate(
                      "Currency Code",TempDtldVendLedgEntry."Vendor Posting Group",
                      0,0,-OldAdjAmount,0,-OldAdjAmount,DimEntryNo,PostingDate2,Vendor."IC Partner Code","Entry No.");
                    Adjust := FALSE;
                  END;
                END;
            END;
          END;

          IF NOT Adjust THEN BEGIN
            TempDtldVendLedgEntry."Amount (LCY)" := AdjAmount;
            HandleVendDebitCredit(Amount,"Amount (LCY)",Correction,TempDtldVendLedgEntry."Amount (LCY)");
            TempDtldVendLedgEntry."Entry No." := NewEntryNo;
            IF AdjAmount < 0 THEN BEGIN
              TempDtldVendLedgEntry."Entry Type" := TempDtldVendLedgEntry."Entry Type"::"Unrealized Loss";
              GainsAmount := 0;
              LossesAmount := AdjAmount;
            END ELSE BEGIN
              IF AdjAmount > 0 THEN BEGIN
                TempDtldVendLedgEntry."Entry Type" := TempDtldVendLedgEntry."Entry Type"::"Unrealized Gain";
                GainsAmount := AdjAmount;
                LossesAmount := 0;
              END;
            END;
            TempDtldVendLedgEntry.INSERT;
            NewEntryNo := NewEntryNo + 1;
          END;

          TotalAdjAmount := TotalAdjAmount + AdjAmount;

          //NC M2 > DP
          IF GUIALLOWED THEN
          //NC M2 < DP

          Window.UPDATE(4,TotalAdjAmount);
          AdjExchRateBufferUpdate(
            "Currency Code",TempDtldVendLedgEntry."Vendor Posting Group",
            "Remaining Amount","Remaining Amt. (LCY)",
            TempDtldVendLedgEntry."Amount (LCY)",GainsAmount,LossesAmount,DimEntryNo,PostingDate2,Vendor."IC Partner Code","Entry No.");
        END;

      END;
    END;

    PROCEDURE GetTempJnlLineDim@1210000(VAR TempJnlLineDim@1210000 : Record 356;VAR GenJnlLine@1210002 : Record 81;BalAccType@1210009 : 'None,Real,Unreal';CurrencyCode@1470000 : Code[10];Gains@1470001 : Boolean);
    VAR
      LedgEntryDim@1210008 : Record 355;
      DimMgt@1210007 : Codeunit 408;
      AdjCurrency@1470002 : Record 4;
    BEGIN
      IF (GenJnlLine."Amount (LCY)" = 0) AND (GenJnlLine.Amount = 0) THEN
        EXIT;

      IF BalAccType <> BalAccType::None THEN BEGIN
        GenJnlLine."Bal. Account Type" := GenJnlLine."Bal. Account Type"::"G/L Account";
        AdjCurrency.GET(CurrencyCode);
      END;

      IF Gains THEN
        CASE BalAccType OF
          BalAccType::Real:BEGIN
            AdjCurrency.TESTFIELD("Realized Gains Acc.");
            GenJnlLine."Bal. Account No." := AdjCurrency."Realized Gains Acc.";
          END;
          BalAccType::Unreal:BEGIN
            IF PrepmtAdjmt THEN
              CASE GenJnlLine."Source Type" OF
                GenJnlLine."Source Type"::Customer:
                  BEGIN
                    AdjCurrency.TESTFIELD("Sales PD Gains Acc. (TA)");
                    GenJnlLine."Bal. Account No." := AdjCurrency."Sales PD Gains Acc. (TA)";
                  END;
                GenJnlLine."Source Type"::Vendor:
                  BEGIN
                    AdjCurrency.TESTFIELD("Purch. PD Gains Acc. (TA)");
                    GenJnlLine."Bal. Account No." := AdjCurrency."Purch. PD Gains Acc. (TA)";
                  END;
              END
            ELSE BEGIN
              AdjCurrency.TESTFIELD("Unrealized Gains Acc.");
              GenJnlLine."Bal. Account No." := AdjCurrency."Unrealized Gains Acc.";
            END;
          END;
          BalAccType::None:;
        END
      ELSE
        CASE BalAccType OF
          BalAccType::Real:BEGIN
            AdjCurrency.TESTFIELD("Realized Losses Acc.");
            GenJnlLine."Bal. Account No." := AdjCurrency."Realized Losses Acc.";
          END;
          BalAccType::Unreal:BEGIN
            IF PrepmtAdjmt THEN
              CASE GenJnlLine."Source Type" OF
                GenJnlLine."Source Type"::Customer:
                  BEGIN
                    AdjCurrency.TESTFIELD("Sales PD Losses Acc. (TA)");
                    GenJnlLine."Bal. Account No." := AdjCurrency."Sales PD Losses Acc. (TA)";
                  END;
                GenJnlLine."Source Type"::Vendor:
                  BEGIN
                    AdjCurrency.TESTFIELD("Purch. PD Losses Acc. (TA)");
                    GenJnlLine."Bal. Account No." := AdjCurrency."Purch. PD Losses Acc. (TA)";
                  END;
              END
            ELSE BEGIN
              AdjCurrency.TESTFIELD("Unrealized Losses Acc.");
              GenJnlLine."Bal. Account No." := AdjCurrency."Unrealized Losses Acc.";
            END;
          END;
          BalAccType::None:;
        END;


      IF Gains THEN
        CopySelectedDimToJnlLineDim(TempSelectedDimPos,TempJnlLineDim,GenJnlLine)
      ELSE
        CopySelectedDimToJnlLineDim(TempSelectedDimNeg,TempJnlLineDim,GenJnlLine);

      //NC M1 > DP
      CASE GenJnlLine."Source Type" OF
        GenJnlLine."Source Type"::Customer:
          BEGIN
           IF TempJnlLineDim.GET(21,GenJnlLine."Journal Template Name",GenJnlLine."Journal Batch Name",GenJnlLine."Line No.",0,
             MovingDataSetup."FI Dimension Code") THEN
             GenJnlLine."Financial Instrument No." := TempJnlLineDim."Dimension Value Code";
           END;
        GenJnlLine."Source Type"::Vendor:
          BEGIN
           IF TempJnlLineDim.GET(25,GenJnlLine."Journal Template Name",GenJnlLine."Journal Batch Name",GenJnlLine."Line No.",0,
             MovingDataSetup."FI Dimension Code") THEN
             GenJnlLine."Financial Instrument No." := TempJnlLineDim."Dimension Value Code";
          END;
      END;
      //NC M1 < DP
    END;

    PROCEDURE CopySelectedDimToJnlLineDim@1210002(VAR SelectedDim@1210000 : Record 369;VAR JnlLineDim@1210001 : Record 356;VAR GenJnlLine@1210002 : Record 81);
    VAR
      DefDim@1101495000 : Record 352;
    BEGIN
      IF SelectedDim.FIND('-') THEN
        REPEAT
          JnlLineDim."Dimension Code" := SelectedDim."Dimension Code";
          JnlLineDim."Dimension Value Code" := SelectedDim."New Dimension Value Code";
          IF NOT JnlLineDim.INSERT THEN
            JnlLineDim.MODIFY;
        UNTIL SelectedDim.NEXT = 0;

      //NC NCS-977 > DP
      StandParam.RESET;
      StandParam.SETRANGE("Report ID",REPORT::"Adjust Exchange Rates SQL");
      IF StandParam.FINDFIRST THEN BEGIN

        DefDim.RESET;
        DefDim.SETRANGE("Table ID",DATABASE::"Period. Activities Stand. Par.");
        DefDim.SETRANGE("No.",StandParam.Code);
        DefDim.SETFILTER("Dimension Value Code",'<>%1','');
        DefDim.SETRANGE("Value Posting", DefDim."Value Posting"::"Code Mandatory", DefDim."Value Posting"::"Same Code");
        IF DefDim.FINDFIRST THEN
        REPEAT
          JnlLineDim."Dimension Code" := DefDim."Dimension Code";
          JnlLineDim."Dimension Value Code" :=DefDim."Dimension Value Code";
          IF NOT JnlLineDim.INSERT THEN
            JnlLineDim.MODIFY;
        UNTIL DefDim.NEXT = 0;
      END;
      //NC NCS-977 < DP
    END;

    PROCEDURE GetSelectedDims@1210001();
    BEGIN
      IF ColumnDimPos <> '' THEN
        DimSelectionBuf.CompareDimText(3,REPORT::"Adjust Exchange Rates",'',ColumnDimPos,Text12402);
      IF ColumnDimNeg <> '' THEN
        DimSelectionBuf.CompareDimText(3,-REPORT::"Adjust Exchange Rates",'',ColumnDimNeg,Text12402);
      SelectedDim.GetSelectedDim(USERID,3,REPORT::"Adjust Exchange Rates",'',TempSelectedDimPos);
      SelectedDim.GetSelectedDim(USERID,3,-REPORT::"Adjust Exchange Rates",'',TempSelectedDimNeg);
      TempSelectedDimPos.SETFILTER("New Dimension Value Code",'<>%1','');
      TempSelectedDimNeg.SETFILTER("New Dimension Value Code",'<>%1','');
    END;

    LOCAL PROCEDURE CustLedgEntryToCVLedgEntry@1470000(EntryNo@1470001 : Integer;VAR CVLedgEntry@1470002 : Record 382;AdjmtAmount@1470003 : Decimal);
    VAR
      CustLedgEntry@1470000 : Record 21;
    BEGIN
      WITH CustLedgEntry DO BEGIN
        GET(EntryNo);
        CVLedgEntry."Document No." := "Document No.";
        CVLedgEntry."Document Type" := "Document Type";
        CVLedgEntry."Bal. Account Type" := 1;
        CVLedgEntry."Bal. Account No." := "Customer No.";
        CVLedgEntry.Prepayment := Prepayment;
        CVLedgEntry."Agreement No." := "Agreement No.";
      END;
    END;

    PROCEDURE VendLedgEntryToCVLedgEntry@1470001(EntryNo@1470002 : Integer;VAR CVLedgEntry@1470000 : Record 382;AdjmtAmount@1470003 : Decimal);
    VAR
      VendLedgEntry@1470001 : Record 25;
    BEGIN
      WITH VendLedgEntry DO BEGIN
        GET(EntryNo);
        CVLedgEntry."Document No." := "Document No.";
        CVLedgEntry."Document Type" := "Document Type";
        CVLedgEntry."Bal. Account Type" := 2;
        CVLedgEntry."Bal. Account No." := "Vendor No.";
        CVLedgEntry.Prepayment := Prepayment;
        CVLedgEntry."Agreement No." := "Agreement No.";
      END;
    END;

    PROCEDURE UpdateTransactionNo@1470002(AdjustAccType@1470001 : Integer;EntryNo@1470002 : Integer);
    VAR
      GLEntry@1470000 : Record 17;
    BEGIN
      GLEntry.FIND('+');
      IF NOT TestMode THEN
        CASE AdjustAccType OF
          1: BEGIN // Customer
            //NC NCS-809 > DP
            TempDtldCustLedgEntry.SETCURRENTKEY("Cust. Ledger Entry No.","Posting Date");
            //NC NCS-809 < DP
            TempDtldCustLedgEntry.SETRANGE("Cust. Ledger Entry No.",EntryNo);
            IF TempDtldCustLedgEntry.FIND('-') THEN
              REPEAT
                TempDtldCustLedgEntry."Transaction No." := GLEntry."Transaction No.";
                DtldCustLedgEntry := TempDtldCustLedgEntry;
                IF DtldCustLedgEntry.INSERT THEN;
              UNTIL TempDtldCustLedgEntry.NEXT = 0;
          END;
          2: BEGIN // Vendor
            //NC NCS-809 > DP
            TempDtldVendLedgEntry.SETCURRENTKEY("Vendor Ledger Entry No.","Posting Date");
            //NC NCS-809 < DP
            TempDtldVendLedgEntry.SETRANGE("Vendor Ledger Entry No.",EntryNo);
            IF TempDtldVendLedgEntry.FIND('-') THEN
              REPEAT
                TempDtldVendLedgEntry."Transaction No." := GLEntry."Transaction No.";
                DtldVendLedgEntry := TempDtldVendLedgEntry;
                IF DtldVendLedgEntry.INSERT THEN;
              UNTIL TempDtldVendLedgEntry.NEXT = 0;
         END;
        END;
    END;

    PROCEDURE SetParameters@1000000000(NewDate@1000000000 : Date);
    BEGIN
      EndDateReq := NewDate;
      EndDate := NewDate;
      PostingDate := NewDate;
      IF NewDate=310110D THEN
       StartDate := CALCDATE('<-CM-1D>', NewDate)
      ELSE
        StartDate := CALCDATE('<-CM>', NewDate);
      AdjCust := TRUE;
      AdjVend := TRUE;
      AdjBank := TRUE;
      AdjGLAcc := FALSE;

      TestMode := FALSE;
      StandParam.RESET;
      StandParam.SETRANGE("Report ID",REPORT::"Adjust Exchange Rates SQL");
      IF StandParam.FINDFIRST THEN BEGIN
        IF StandParam."Prefix Numbers"<>'' THEN
          PostingDocNo:=StandParam."Prefix Numbers";
        IF PostingDate <> 0D THEN
          PostingDocNo:=PostingDocNo+FORMAT(PostingDate,0,'<Year><Month,2><Day,2>');
      END
    END;

    EVENT lRecSet@1101495010::WillChangeField@9(cFields@1101495003 : Integer;Fields@1101495002 : Variant;adStatus@1101495001 : Integer;pRecordset@1101495000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000556-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Recordset");
    BEGIN
    END;

    EVENT lRecSet@1101495010::FieldChangeComplete@10(cFields@1101495004 : Integer;Fields@1101495003 : Variant;pError@1101495002 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000500-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'.Error";adStatus@1101495001 : Integer;pRecordset@1101495000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000556-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Recordset");
    BEGIN
    END;

    EVENT lRecSet@1101495010::WillChangeRecord@11(adReason@1101495003 : Integer;cRecords@1101495002 : Integer;adStatus@1101495001 : Integer;pRecordset@1101495000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000556-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Recordset");
    BEGIN
    END;

    EVENT lRecSet@1101495010::RecordChangeComplete@12(adReason@1101495004 : Integer;cRecords@1101495003 : Integer;pError@1101495002 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000500-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'.Error";adStatus@1101495001 : Integer;pRecordset@1101495000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000556-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Recordset");
    BEGIN
    END;

    EVENT lRecSet@1101495010::WillChangeRecordset@13(adReason@1101495002 : Integer;adStatus@1101495001 : Integer;pRecordset@1101495000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000556-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Recordset");
    BEGIN
    END;

    EVENT lRecSet@1101495010::RecordsetChangeComplete@14(adReason@1101495003 : Integer;pError@1101495002 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000500-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'.Error";adStatus@1101495001 : Integer;pRecordset@1101495000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000556-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Recordset");
    BEGIN
    END;

    EVENT lRecSet@1101495010::WillMove@15(adReason@1101495002 : Integer;adStatus@1101495001 : Integer;pRecordset@1101495000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000556-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Recordset");
    BEGIN
    END;

    EVENT lRecSet@1101495010::MoveComplete@16(adReason@1101495003 : Integer;pError@1101495002 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000500-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'.Error";adStatus@1101495001 : Integer;pRecordset@1101495000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000556-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Recordset");
    BEGIN
    END;

    EVENT lRecSet@1101495010::EndOfRecordset@17(VAR fMoreData@1101495002 : Boolean;adStatus@1101495001 : Integer;pRecordset@1101495000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000556-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Recordset");
    BEGIN
    END;

    EVENT lRecSet@1101495010::FetchProgress@18(Progress@1101495003 : Integer;MaxProgress@1101495002 : Integer;adStatus@1101495001 : Integer;pRecordset@1101495000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000556-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Recordset");
    BEGIN
    END;

    EVENT lRecSet@1101495010::FetchComplete@19(pError@1101495002 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000500-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'.Error";adStatus@1101495001 : Integer;pRecordset@1101495000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000556-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Recordset");
    BEGIN
    END;

    BEGIN
    {
      NC TR237 EB Изменен код PostAdjmt,PostGLAccAdjmt,"G/L Account"-OnPostdataItem
      NC M1 DP Изменен фильтр для DataItem Currency
      NC MLN14 DP Протягивание условий договора
      NC OFA25 DP Разработка нового отчета
      NC OFA25.1 DP Скрыт признак переоценки ДОВ
      NC RD Добавлена функция SetParameters, снят комментарий с секции OnInitReport()
      NC OAM44 DP Формирование ДОВ суммы для переоцениваемой валюты=ДОВ
      NC APCOC-104 Установка признака NotTranslate
      NC APCOC-104 Установка признака NotTranslateIFRS
      NC BLD01 Создан билд. Доработки: NCTR237,OFA25.1,NCTR237.1,OAM38,OAM44,APCOC-117
      NC NCS-758 DP Контроль наличия операций для переоценки только в периоде до даты переоценки
      NC NCS-758.2 DP Если нет операций по банку до даты переоценки - выход
      NC NCS-977 DP Доопредление измерений с параметров задания
      NC NCS-809 DP Оптимизация переоценки
      TD NCS-995 AT Оптимизация набора данных
      TD NCS-1083 AT Исправление фильтра
      NC MIO-28 DP Переоценка по модулям Клиент/Поставщик отключается с даты из Финансы Настройка
                   (изменена функция HandlePostAdjmt)
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>a1129aaf-366d-4d61-9b0d-c2e32a9d99f2</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <Fields>
        <Field Name="USERID">
          <DataField>USERID</DataField>
        </Field>
        <Field Name="COMPANYNAME">
          <DataField>COMPANYNAME</DataField>
        </Field>
        <Field Name="CurrReport_PAGENO">
          <DataField>CurrReport_PAGENO</DataField>
        </Field>
        <Field Name="FORMAT_TODAY_0_4_">
          <DataField>FORMAT_TODAY_0_4_</DataField>
        </Field>
        <Field Name="Adjust_Exchange_RatesCaption">
          <DataField>Adjust_Exchange_RatesCaption</DataField>
        </Field>
        <Field Name="CurrReport_PAGENOCaption">
          <DataField>CurrReport_PAGENOCaption</DataField>
        </Field>
        <Field Name="Header_Number">
          <DataField>Header_Number</DataField>
        </Field>
        <Field Name="BankAccount_TABLECAPTION">
          <DataField>BankAccount_TABLECAPTION</DataField>
        </Field>
        <Field Name="V1__Currency_Factor_">
          <DataField>V1__Currency_Factor_</DataField>
        </Field>
        <Field Name="V1__Currency_Factor_Format">
          <DataField>V1__Currency_Factor_Format</DataField>
        </Field>
        <Field Name="STRSUBSTNO_Text12403_PostingDate_">
          <DataField>STRSUBSTNO_Text12403_PostingDate_</DataField>
        </Field>
        <Field Name="Currency_Description">
          <DataField>Currency_Description</DataField>
        </Field>
        <Field Name="Currency_Code">
          <DataField>Currency_Code</DataField>
        </Field>
        <Field Name="TotalAmount">
          <DataField>TotalAmount</DataField>
        </Field>
        <Field Name="TotalAmountFormat">
          <DataField>TotalAmountFormat</DataField>
        </Field>
        <Field Name="Text12404">
          <DataField>Text12404</DataField>
        </Field>
        <Field Name="Adj__AmountCaption">
          <DataField>Adj__AmountCaption</DataField>
        </Field>
        <Field Name="Adj__Balance_at_Date__LCY_Caption">
          <DataField>Adj__Balance_at_Date__LCY_Caption</DataField>
        </Field>
        <Field Name="BankAccount__Balance_at_Date__LCY__Caption">
          <DataField>BankAccount__Balance_at_Date__LCY__Caption</DataField>
        </Field>
        <Field Name="BankAccount__Balance_at_Date_Caption">
          <DataField>BankAccount__Balance_at_Date_Caption</DataField>
        </Field>
        <Field Name="NameCaption">
          <DataField>NameCaption</DataField>
        </Field>
        <Field Name="BankAccount__No__Caption">
          <DataField>BankAccount__No__Caption</DataField>
        </Field>
        <Field Name="Exchange_RateCaption">
          <DataField>Exchange_RateCaption</DataField>
        </Field>
        <Field Name="BankAccount_Name">
          <DataField>BankAccount_Name</DataField>
        </Field>
        <Field Name="BankAccount__Balance_at_Date_">
          <DataField>BankAccount__Balance_at_Date_</DataField>
        </Field>
        <Field Name="BankAccount__Balance_at_Date_Format">
          <DataField>BankAccount__Balance_at_Date_Format</DataField>
        </Field>
        <Field Name="BankAccount__Balance_at_Date__LCY__">
          <DataField>BankAccount__Balance_at_Date__LCY__</DataField>
        </Field>
        <Field Name="BankAccount__Balance_at_Date__LCY__Format">
          <DataField>BankAccount__Balance_at_Date__LCY__Format</DataField>
        </Field>
        <Field Name="AdjBalance">
          <DataField>AdjBalance</DataField>
        </Field>
        <Field Name="AdjBalanceFormat">
          <DataField>AdjBalanceFormat</DataField>
        </Field>
        <Field Name="AdjBalance___BankAccount__Balance_at_Date__LCY__">
          <DataField>AdjBalance___BankAccount__Balance_at_Date__LCY__</DataField>
        </Field>
        <Field Name="AdjBalance___BankAccount__Balance_at_Date__LCY__Format">
          <DataField>AdjBalance___BankAccount__Balance_at_Date__LCY__Format</DataField>
        </Field>
        <Field Name="BankAccount__No__">
          <DataField>BankAccount__No__</DataField>
        </Field>
        <Field Name="tmpBankAccountPG_Code">
          <DataField>tmpBankAccountPG_Code</DataField>
        </Field>
        <Field Name="Currency_Code_Control1210051">
          <DataField>Currency_Code_Control1210051</DataField>
        </Field>
        <Field Name="Currency_Description_Control1210050">
          <DataField>Currency_Description_Control1210050</DataField>
        </Field>
        <Field Name="Text12404_Control1210048">
          <DataField>Text12404_Control1210048</DataField>
        </Field>
        <Field Name="AdjBalance___BalanceAtDateLCY">
          <DataField>AdjBalance___BalanceAtDateLCY</DataField>
        </Field>
        <Field Name="AdjBalance___BalanceAtDateLCYFormat">
          <DataField>AdjBalance___BalanceAtDateLCYFormat</DataField>
        </Field>
        <Field Name="BankLoop_Number">
          <DataField>BankLoop_Number</DataField>
        </Field>
        <Field Name="STRSUBSTNO_Text12403_PostingDate__Control1210069">
          <DataField>STRSUBSTNO_Text12403_PostingDate__Control1210069</DataField>
        </Field>
        <Field Name="CustLedgerEntry_TABLECAPTION">
          <DataField>CustLedgerEntry_TABLECAPTION</DataField>
        </Field>
        <Field Name="Customer_Name___Customer__Name_2_">
          <DataField>Customer_Name___Customer__Name_2_</DataField>
        </Field>
        <Field Name="Customer__No__">
          <DataField>Customer__No__</DataField>
        </Field>
        <Field Name="TotalAmount_Control1210123">
          <DataField>TotalAmount_Control1210123</DataField>
        </Field>
        <Field Name="TotalAmount_Control1210123Format">
          <DataField>TotalAmount_Control1210123Format</DataField>
        </Field>
        <Field Name="Итого__">
          <DataField>Итого__</DataField>
        </Field>
        <Field Name="Adj__AmountCaption_Control1210060">
          <DataField>Adj__AmountCaption_Control1210060</DataField>
        </Field>
        <Field Name="Adj__Remaining_Amt___LCY_Caption">
          <DataField>Adj__Remaining_Amt___LCY_Caption</DataField>
        </Field>
        <Field Name="CustLedgerEntry__Remaining_Amt___LCY__Caption">
          <DataField>CustLedgerEntry__Remaining_Amt___LCY__Caption</DataField>
        </Field>
        <Field Name="CustLedgerEntry__Remaining_Amount_Caption">
          <DataField>CustLedgerEntry__Remaining_Amount_Caption</DataField>
        </Field>
        <Field Name="Entry_Exch__RateCaption">
          <DataField>Entry_Exch__RateCaption</DataField>
        </Field>
        <Field Name="CustLedgerEntry__Currency_Code_Caption">
          <DataField>CustLedgerEntry__Currency_Code_Caption</DataField>
        </Field>
        <Field Name="CustLedgerEntry_DescriptionCaption">
          <DataField>CustLedgerEntry_DescriptionCaption</DataField>
        </Field>
        <Field Name="CustLedgerEntry__Posting_Date_Caption">
          <DataField>CustLedgerEntry__Posting_Date_Caption</DataField>
        </Field>
        <Field Name="CustLedgerEntry__Document_No__Caption">
          <DataField>CustLedgerEntry__Document_No__Caption</DataField>
        </Field>
        <Field Name="DocumentTypeCaption">
          <DataField>DocumentTypeCaption</DataField>
        </Field>
        <Field Name="Agreement_No_Caption">
          <DataField>Agreement_No_Caption</DataField>
        </Field>
        <Field Name="CustLoop_Number">
          <DataField>CustLoop_Number</DataField>
        </Field>
        <Field Name="CustLedgerEntry__Posting_Date_">
          <DataField>CustLedgerEntry__Posting_Date_</DataField>
        </Field>
        <Field Name="DocumentType">
          <DataField>DocumentType</DataField>
        </Field>
        <Field Name="CustLedgerEntry__Document_No__">
          <DataField>CustLedgerEntry__Document_No__</DataField>
        </Field>
        <Field Name="CustLedgerEntry_Description">
          <DataField>CustLedgerEntry_Description</DataField>
        </Field>
        <Field Name="CustLedgerEntry__Currency_Code_">
          <DataField>CustLedgerEntry__Currency_Code_</DataField>
        </Field>
        <Field Name="CustLedgerEntry__Remaining_Amount_">
          <DataField>CustLedgerEntry__Remaining_Amount_</DataField>
        </Field>
        <Field Name="CustLedgerEntry__Remaining_Amount_Format">
          <DataField>CustLedgerEntry__Remaining_Amount_Format</DataField>
        </Field>
        <Field Name="CustLedgerEntry__Remaining_Amt___LCY__">
          <DataField>CustLedgerEntry__Remaining_Amt___LCY__</DataField>
        </Field>
        <Field Name="CustLedgerEntry__Remaining_Amt___LCY__Format">
          <DataField>CustLedgerEntry__Remaining_Amt___LCY__Format</DataField>
        </Field>
        <Field Name="AdjBalance_Control1210098">
          <DataField>AdjBalance_Control1210098</DataField>
        </Field>
        <Field Name="AdjBalance_Control1210098Format">
          <DataField>AdjBalance_Control1210098Format</DataField>
        </Field>
        <Field Name="AdjBalance___CustLedgerEntry__Remaining_Amt___LCY__">
          <DataField>AdjBalance___CustLedgerEntry__Remaining_Amt___LCY__</DataField>
        </Field>
        <Field Name="AdjBalance___CustLedgerEntry__Remaining_Amt___LCY__Format">
          <DataField>AdjBalance___CustLedgerEntry__Remaining_Amt___LCY__Format</DataField>
        </Field>
        <Field Name="V1_Currency2__Currency_Factor_">
          <DataField>V1_Currency2__Currency_Factor_</DataField>
        </Field>
        <Field Name="V1_Currency2__Currency_Factor_Format">
          <DataField>V1_Currency2__Currency_Factor_Format</DataField>
        </Field>
        <Field Name="ROUND_1_CustLedgerEntry__Original_Currency_Factor__0_0001_">
          <DataField>ROUND_1_CustLedgerEntry__Original_Currency_Factor__0_0001_</DataField>
        </Field>
        <Field Name="ROUND_1_CustLedgerEntry__Original_Currency_Factor__0_0001_Format">
          <DataField>ROUND_1_CustLedgerEntry__Original_Currency_Factor__0_0001_Format</DataField>
        </Field>
        <Field Name="CustLedgerEntry__Agreement_No__">
          <DataField>CustLedgerEntry__Agreement_No__</DataField>
        </Field>
        <Field Name="AdjBalance___CustLedgerEntry__Remaining_Amt___LCY___Control1210117">
          <DataField>AdjBalance___CustLedgerEntry__Remaining_Amt___LCY___Control1210117</DataField>
        </Field>
        <Field Name="AdjBalance___CustLedgerEntry__Remaining_Amt___LCY___Control1210117Format">
          <DataField>AdjBalance___CustLedgerEntry__Remaining_Amt___LCY___Control1210117Format</DataField>
        </Field>
        <Field Name="Text12404_Control1210119">
          <DataField>Text12404_Control1210119</DataField>
        </Field>
        <Field Name="CustomerLedgerEntryLoop_Number">
          <DataField>CustomerLedgerEntryLoop_Number</DataField>
        </Field>
        <Field Name="STRSUBSTNO_Text12403_PostingDate__Control1210140">
          <DataField>STRSUBSTNO_Text12403_PostingDate__Control1210140</DataField>
        </Field>
        <Field Name="VendorLedgerEntry_TABLECAPTION">
          <DataField>VendorLedgerEntry_TABLECAPTION</DataField>
        </Field>
        <Field Name="Vendor_Name___Vendor__Name_2_">
          <DataField>Vendor_Name___Vendor__Name_2_</DataField>
        </Field>
        <Field Name="Vendor__No__">
          <DataField>Vendor__No__</DataField>
        </Field>
        <Field Name="TotalAmount_Control1210191">
          <DataField>TotalAmount_Control1210191</DataField>
        </Field>
        <Field Name="TotalAmount_Control1210191Format">
          <DataField>TotalAmount_Control1210191Format</DataField>
        </Field>
        <Field Name="Text12404_Control1210194">
          <DataField>Text12404_Control1210194</DataField>
        </Field>
        <Field Name="VendorLedgerEntry__Remaining_Amt___LCY__Caption">
          <DataField>VendorLedgerEntry__Remaining_Amt___LCY__Caption</DataField>
        </Field>
        <Field Name="Adj__Remaining_Amt___LCY_Caption_Control1210130">
          <DataField>Adj__Remaining_Amt___LCY_Caption_Control1210130</DataField>
        </Field>
        <Field Name="Adj__AmountCaption_Control1210131">
          <DataField>Adj__AmountCaption_Control1210131</DataField>
        </Field>
        <Field Name="VendorLedgerEntry__Remaining_Amount_Caption">
          <DataField>VendorLedgerEntry__Remaining_Amount_Caption</DataField>
        </Field>
        <Field Name="Entry_Exch__RateCaption_Control1210138">
          <DataField>Entry_Exch__RateCaption_Control1210138</DataField>
        </Field>
        <Field Name="VendorLedgerEntry__Currency_Code_Caption">
          <DataField>VendorLedgerEntry__Currency_Code_Caption</DataField>
        </Field>
        <Field Name="VendorLedgerEntry_DescriptionCaption">
          <DataField>VendorLedgerEntry_DescriptionCaption</DataField>
        </Field>
        <Field Name="VendorLedgerEntry__Posting_Date_Caption">
          <DataField>VendorLedgerEntry__Posting_Date_Caption</DataField>
        </Field>
        <Field Name="VendorLedgerEntry__Document_No__Caption">
          <DataField>VendorLedgerEntry__Document_No__Caption</DataField>
        </Field>
        <Field Name="DocumentType_Control1470021Caption">
          <DataField>DocumentType_Control1470021Caption</DataField>
        </Field>
        <Field Name="Agreement_No_Caption_Control1210159">
          <DataField>Agreement_No_Caption_Control1210159</DataField>
        </Field>
        <Field Name="VendLoop_Number">
          <DataField>VendLoop_Number</DataField>
        </Field>
        <Field Name="AdjBalance___VendorLedgerEntry__Remaining_Amt___LCY__">
          <DataField>AdjBalance___VendorLedgerEntry__Remaining_Amt___LCY__</DataField>
        </Field>
        <Field Name="AdjBalance___VendorLedgerEntry__Remaining_Amt___LCY__Format">
          <DataField>AdjBalance___VendorLedgerEntry__Remaining_Amt___LCY__Format</DataField>
        </Field>
        <Field Name="AdjBalance_Control1470002">
          <DataField>AdjBalance_Control1470002</DataField>
        </Field>
        <Field Name="AdjBalance_Control1470002Format">
          <DataField>AdjBalance_Control1470002Format</DataField>
        </Field>
        <Field Name="VendorLedgerEntry__Remaining_Amt___LCY__">
          <DataField>VendorLedgerEntry__Remaining_Amt___LCY__</DataField>
        </Field>
        <Field Name="VendorLedgerEntry__Remaining_Amt___LCY__Format">
          <DataField>VendorLedgerEntry__Remaining_Amt___LCY__Format</DataField>
        </Field>
        <Field Name="VendorLedgerEntry__Remaining_Amount_">
          <DataField>VendorLedgerEntry__Remaining_Amount_</DataField>
        </Field>
        <Field Name="VendorLedgerEntry__Remaining_Amount_Format">
          <DataField>VendorLedgerEntry__Remaining_Amount_Format</DataField>
        </Field>
        <Field Name="ROUND_1_VendorLedgerEntry__Original_Currency_Factor__0_0001_">
          <DataField>ROUND_1_VendorLedgerEntry__Original_Currency_Factor__0_0001_</DataField>
        </Field>
        <Field Name="ROUND_1_VendorLedgerEntry__Original_Currency_Factor__0_0001_Format">
          <DataField>ROUND_1_VendorLedgerEntry__Original_Currency_Factor__0_0001_Format</DataField>
        </Field>
        <Field Name="V1_Currency2__Currency_Factor__Control1470011">
          <DataField>V1_Currency2__Currency_Factor__Control1470011</DataField>
        </Field>
        <Field Name="V1_Currency2__Currency_Factor__Control1470011Format">
          <DataField>V1_Currency2__Currency_Factor__Control1470011Format</DataField>
        </Field>
        <Field Name="VendorLedgerEntry__Currency_Code_">
          <DataField>VendorLedgerEntry__Currency_Code_</DataField>
        </Field>
        <Field Name="VendorLedgerEntry_Description">
          <DataField>VendorLedgerEntry_Description</DataField>
        </Field>
        <Field Name="VendorLedgerEntry__Posting_Date_">
          <DataField>VendorLedgerEntry__Posting_Date_</DataField>
        </Field>
        <Field Name="VendorLedgerEntry__Document_No__">
          <DataField>VendorLedgerEntry__Document_No__</DataField>
        </Field>
        <Field Name="DocumentType_Control1470021">
          <DataField>DocumentType_Control1470021</DataField>
        </Field>
        <Field Name="VendorLedgerEntry__Agreement_No__">
          <DataField>VendorLedgerEntry__Agreement_No__</DataField>
        </Field>
        <Field Name="AdjBalance___VendorLedgerEntry__Remaining_Amt___LCY___Control1470027">
          <DataField>AdjBalance___VendorLedgerEntry__Remaining_Amt___LCY___Control1470027</DataField>
        </Field>
        <Field Name="AdjBalance___VendorLedgerEntry__Remaining_Amt___LCY___Control1470027Format">
          <DataField>AdjBalance___VendorLedgerEntry__Remaining_Amt___LCY___Control1470027Format</DataField>
        </Field>
        <Field Name="Text12404_Control1470029">
          <DataField>Text12404_Control1470029</DataField>
        </Field>
        <Field Name="VendorLedgerEntryLoop_Number">
          <DataField>VendorLedgerEntryLoop_Number</DataField>
        </Field>
        <Field Name="TotalAmountPos___TotalAmountNeg">
          <DataField>TotalAmountPos___TotalAmountNeg</DataField>
        </Field>
        <Field Name="TotalAmountPos___TotalAmountNegFormat">
          <DataField>TotalAmountPos___TotalAmountNegFormat</DataField>
        </Field>
        <Field Name="Text12404_Control1210201">
          <DataField>Text12404_Control1210201</DataField>
        </Field>
        <Field Name="TotalAmountNeg">
          <DataField>TotalAmountNeg</DataField>
        </Field>
        <Field Name="TotalAmountNegFormat">
          <DataField>TotalAmountNegFormat</DataField>
        </Field>
        <Field Name="Text12406">
          <DataField>Text12406</DataField>
        </Field>
        <Field Name="TotalAmountPos">
          <DataField>TotalAmountPos</DataField>
        </Field>
        <Field Name="TotalAmountPosFormat">
          <DataField>TotalAmountPosFormat</DataField>
        </Field>
        <Field Name="Text12405">
          <DataField>Text12405</DataField>
        </Field>
        <Field Name="Integer_Number">
          <DataField>Integer_Number</DataField>
        </Field>
      </Fields>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
  <ReportSections>
    <ReportSection>
      <Body>
        <ReportItems>
          <Tablix Name="Table1">
            <TablixBody>
              <TablixColumns>
                <TablixColumn>
                  <Width>2.85cm</Width>
                </TablixColumn>
                <TablixColumn>
                  <Width>1.2cm</Width>
                </TablixColumn>
                <TablixColumn>
                  <Width>1.65cm</Width>
                </TablixColumn>
                <TablixColumn>
                  <Width>1.5cm</Width>
                </TablixColumn>
                <TablixColumn>
                  <Width>3.15cm</Width>
                </TablixColumn>
                <TablixColumn>
                  <Width>3.45cm</Width>
                </TablixColumn>
                <TablixColumn>
                  <Width>1.35cm</Width>
                </TablixColumn>
                <TablixColumn>
                  <Width>1.65cm</Width>
                </TablixColumn>
                <TablixColumn>
                  <Width>1.5cm</Width>
                </TablixColumn>
                <TablixColumn>
                  <Width>2.25cm</Width>
                </TablixColumn>
                <TablixColumn>
                  <Width>2.25cm</Width>
                </TablixColumn>
                <TablixColumn>
                  <Width>2.25cm</Width>
                </TablixColumn>
                <TablixColumn>
                  <Width>2.1cm</Width>
                </TablixColumn>
                <TablixColumn>
                  <Width>0.2cm</Width>
                </TablixColumn>
                <TablixColumn>
                  <Width>0.2cm</Width>
                </TablixColumn>
                <TablixColumn>
                  <Width>0.2cm</Width>
                </TablixColumn>
              </TablixColumns>
              <TablixRows>
                <TablixRow>
                  <Height>0.423cm</Height>
                  <TablixCells>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox11">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox12">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox13">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="VendorLedgerEntry_TABLECAPTION">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=First(Fields!VendorLedgerEntry_TABLECAPTION.Value)</Value>
                                  <Style>
                                    <FontSize>8pt</FontSize>
                                    <FontWeight>Bold</FontWeight>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0cm</Top>
                          <Left>0cm</Left>
                          <Height>0.423cm</Height>
                          <Width>7.5cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>0.15cm</PaddingLeft>
                            <PaddingRight>0.15cm</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox14">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox15">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox16">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox17">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox18">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox19">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox110">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox111">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox112">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox125">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                        <ColSpan>3</ColSpan>
                      </CellContents>
                    </TablixCell>
                    <TablixCell />
                    <TablixCell />
                  </TablixCells>
                </TablixRow>
                <TablixRow>
                  <Height>0.846cm</Height>
                  <TablixCells>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox113">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="DocumentType_Control1470021Caption">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=First(Fields!DocumentType_Control1470021Caption.Value)</Value>
                                  <Style>
                                    <FontSize>7pt</FontSize>
                                    <FontWeight>Bold</FontWeight>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                              <Style>
                                <TextAlign>Center</TextAlign>
                              </Style>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0.846cm</Top>
                          <Left>0.15cm</Left>
                          <Height>0.846cm</Height>
                          <Width>1.05cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>0.15cm</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="VendorLedgerEntry__Document_No__Caption">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=First(Fields!VendorLedgerEntry__Document_No__Caption.Value)</Value>
                                  <Style>
                                    <FontSize>7pt</FontSize>
                                    <FontWeight>Bold</FontWeight>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                              <Style>
                                <TextAlign>Center</TextAlign>
                              </Style>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0.846cm</Top>
                          <Left>1.5cm</Left>
                          <Height>0.846cm</Height>
                          <Width>1.35cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>0.15cm</PaddingLeft>
                            <PaddingRight>0.15cm</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="VendorLedgerEntry__Posting_Date_Caption">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=First(Fields!VendorLedgerEntry__Posting_Date_Caption.Value)</Value>
                                  <Style>
                                    <FontSize>7pt</FontSize>
                                    <FontWeight>Bold</FontWeight>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                              <Style>
                                <TextAlign>Center</TextAlign>
                              </Style>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0.846cm</Top>
                          <Left>3.15cm</Left>
                          <Height>0.846cm</Height>
                          <Width>1.2cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>0.15cm</PaddingLeft>
                            <PaddingRight>0.15cm</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="VendorLedgerEntry_DescriptionCaption">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=First(Fields!VendorLedgerEntry_DescriptionCaption.Value)</Value>
                                  <Style>
                                    <FontSize>7pt</FontSize>
                                    <FontWeight>Bold</FontWeight>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                              <Style>
                                <TextAlign>Center</TextAlign>
                              </Style>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0.846cm</Top>
                          <Left>4.65cm</Left>
                          <Height>0.846cm</Height>
                          <Width>2.85cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>0.15cm</PaddingLeft>
                            <PaddingRight>0.15cm</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="Agreement_No_Caption_Control1210159">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=First(Fields!Agreement_No_Caption_Control1210159.Value)</Value>
                                  <Style>
                                    <FontSize>7pt</FontSize>
                                    <FontWeight>Bold</FontWeight>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                              <Style>
                                <TextAlign>Center</TextAlign>
                              </Style>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0.846cm</Top>
                          <Left>7.8cm</Left>
                          <Height>0.846cm</Height>
                          <Width>3.15cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>0.15cm</PaddingLeft>
                            <PaddingRight>0.15cm</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="VendorLedgerEntry__Currency_Code_Caption">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=First(Fields!VendorLedgerEntry__Currency_Code_Caption.Value)</Value>
                                  <Style>
                                    <FontSize>7pt</FontSize>
                                    <FontWeight>Bold</FontWeight>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                              <Style>
                                <TextAlign>Center</TextAlign>
                              </Style>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0.846cm</Top>
                          <Left>11.25cm</Left>
                          <Height>0.846cm</Height>
                          <Width>1.05cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>0.15cm</PaddingLeft>
                            <PaddingRight>0.15cm</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="STRSUBSTNO_Text12403_PostingDate__Control1210140">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=First(Fields!STRSUBSTNO_Text12403_PostingDate__Control1210140.Value)</Value>
                                  <Style>
                                    <FontSize>6pt</FontSize>
                                    <FontWeight>Bold</FontWeight>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                              <Style>
                                <TextAlign>Center</TextAlign>
                              </Style>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0.846cm</Top>
                          <Left>12.6cm</Left>
                          <Height>0.846cm</Height>
                          <Width>1.35cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>0.15cm</PaddingLeft>
                            <PaddingRight>0.15cm</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="Entry_Exch__RateCaption_Control1210138">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=First(Fields!Entry_Exch__RateCaption_Control1210138.Value)</Value>
                                  <Style>
                                    <FontSize>6pt</FontSize>
                                    <FontWeight>Bold</FontWeight>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                              <Style>
                                <TextAlign>Center</TextAlign>
                              </Style>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0.846cm</Top>
                          <Left>14.25cm</Left>
                          <Height>0.846cm</Height>
                          <Width>1.2cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>0.15cm</PaddingLeft>
                            <PaddingRight>0.15cm</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="VendorLedgerEntry__Remaining_Amount_Caption">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=First(Fields!VendorLedgerEntry__Remaining_Amount_Caption.Value)</Value>
                                  <Style>
                                    <FontSize>7pt</FontSize>
                                    <FontWeight>Bold</FontWeight>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                              <Style>
                                <TextAlign>Center</TextAlign>
                              </Style>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0.846cm</Top>
                          <Left>15.75cm</Left>
                          <Height>0.846cm</Height>
                          <Width>1.95cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>0.15cm</PaddingLeft>
                            <PaddingRight>0.15cm</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="VendorLedgerEntry__Remaining_Amt___LCY__Caption">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=First(Fields!VendorLedgerEntry__Remaining_Amt___LCY__Caption.Value)</Value>
                                  <Style>
                                    <FontSize>7pt</FontSize>
                                    <FontWeight>Bold</FontWeight>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                              <Style>
                                <TextAlign>Center</TextAlign>
                              </Style>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0.846cm</Top>
                          <Left>18cm</Left>
                          <Height>0.846cm</Height>
                          <Width>1.95cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>0.15cm</PaddingLeft>
                            <PaddingRight>0.15cm</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="Adj__Remaining_Amt___LCY_Caption_Control1210130">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=First(Fields!Adj__Remaining_Amt___LCY_Caption_Control1210130.Value)</Value>
                                  <Style>
                                    <FontSize>7pt</FontSize>
                                    <FontWeight>Bold</FontWeight>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                              <Style>
                                <TextAlign>Center</TextAlign>
                              </Style>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0.846cm</Top>
                          <Left>20.25cm</Left>
                          <Height>0.846cm</Height>
                          <Width>1.95cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>0.15cm</PaddingLeft>
                            <PaddingRight>0.15cm</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="Adj__AmountCaption_Control1210131">
                          <CanGrow>true</CanGrow>
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=First(Fields!Adj__AmountCaption_Control1210131.Value)</Value>
                                  <Style>
                                    <FontSize>7pt</FontSize>
                                    <FontWeight>Bold</FontWeight>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                              <Style>
                                <TextAlign>Center</TextAlign>
                              </Style>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0.846cm</Top>
                          <Left>22.5cm</Left>
                          <Height>0.846cm</Height>
                          <Width>1.95cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>0.15cm</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox126">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                        <ColSpan>3</ColSpan>
                      </CellContents>
                    </TablixCell>
                    <TablixCell />
                    <TablixCell />
                  </TablixCells>
                </TablixRow>
                <TablixRow>
                  <Height>0.423cm</Height>
                  <TablixCells>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox1">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="DocumentType_Control1470021">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Fields!DocumentType_Control1470021.Value</Value>
                                  <Style>
                                    <FontSize>6pt</FontSize>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0cm</Top>
                          <Left>0.15cm</Left>
                          <Height>0.423cm</Height>
                          <Width>1.05cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>0.15cm</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="VendorLedgerEntry__Document_No__">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Fields!VendorLedgerEntry__Document_No__.Value</Value>
                                  <Style>
                                    <FontSize>6pt</FontSize>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0cm</Top>
                          <Left>1.5cm</Left>
                          <Height>0.423cm</Height>
                          <Width>1.35cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>0.15cm</PaddingLeft>
                            <PaddingRight>0.15cm</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="VendorLedgerEntry__Posting_Date_">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Fields!VendorLedgerEntry__Posting_Date_.Value</Value>
                                  <Style>
                                    <FontSize>6pt</FontSize>
                                    <Format>d</Format>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0cm</Top>
                          <Left>3.15cm</Left>
                          <Height>0.423cm</Height>
                          <Width>1.2cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>0.15cm</PaddingLeft>
                            <PaddingRight>0.15cm</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="VendorLedgerEntry_Description">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Fields!VendorLedgerEntry_Description.Value</Value>
                                  <Style>
                                    <FontSize>6pt</FontSize>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0cm</Top>
                          <Left>4.65cm</Left>
                          <Height>0.423cm</Height>
                          <Width>2.85cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>0.15cm</PaddingLeft>
                            <PaddingRight>0.15cm</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="VendorLedgerEntry__Agreement_No__">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Fields!VendorLedgerEntry__Agreement_No__.Value</Value>
                                  <Style>
                                    <FontSize>6pt</FontSize>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0cm</Top>
                          <Left>7.8cm</Left>
                          <Height>0.423cm</Height>
                          <Width>3.15cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>0.15cm</PaddingLeft>
                            <PaddingRight>0.15cm</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="VendorLedgerEntry__Currency_Code_">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Fields!VendorLedgerEntry__Currency_Code_.Value</Value>
                                  <Style>
                                    <FontSize>6pt</FontSize>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0cm</Top>
                          <Left>11.25cm</Left>
                          <Height>0.423cm</Height>
                          <Width>1.05cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>0.15cm</PaddingLeft>
                            <PaddingRight>0.15cm</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="V1_Currency2__Currency_Factor__Control1470011">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Fields!V1_Currency2__Currency_Factor__Control1470011.Value</Value>
                                  <Style>
                                    <FontSize>6pt</FontSize>
                                    <Format>=Fields!V1_Currency2__Currency_Factor__Control1470011Format.Value</Format>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0cm</Top>
                          <Left>12.6cm</Left>
                          <Height>0.423cm</Height>
                          <Width>1.35cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>0.15cm</PaddingLeft>
                            <PaddingRight>0.15cm</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="ROUND_1_VendorLedgerEntry__Original_Currency_Factor__0_0001_">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Fields!ROUND_1_VendorLedgerEntry__Original_Currency_Factor__0_0001_.Value</Value>
                                  <Style>
                                    <FontSize>6pt</FontSize>
                                    <Format>=Fields!ROUND_1_VendorLedgerEntry__Original_Currency_Factor__0_0001_Format.Value</Format>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0cm</Top>
                          <Left>14.25cm</Left>
                          <Height>0.423cm</Height>
                          <Width>1.2cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>0.15cm</PaddingLeft>
                            <PaddingRight>0.15cm</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="VendorLedgerEntry__Remaining_Amount_">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Fields!VendorLedgerEntry__Remaining_Amount_.Value</Value>
                                  <Style>
                                    <FontSize>6pt</FontSize>
                                    <Format>=Fields!VendorLedgerEntry__Remaining_Amount_Format.Value</Format>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0cm</Top>
                          <Left>15.75cm</Left>
                          <Height>0.423cm</Height>
                          <Width>1.95cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>0.15cm</PaddingLeft>
                            <PaddingRight>0.15cm</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="VendorLedgerEntry__Remaining_Amt___LCY__">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Fields!VendorLedgerEntry__Remaining_Amt___LCY__.Value</Value>
                                  <Style>
                                    <FontSize>6pt</FontSize>
                                    <Format>=Fields!VendorLedgerEntry__Remaining_Amt___LCY__Format.Value</Format>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0cm</Top>
                          <Left>18cm</Left>
                          <Height>0.423cm</Height>
                          <Width>1.95cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>0.15cm</PaddingLeft>
                            <PaddingRight>0.15cm</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="AdjBalance_Control1470002">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Fields!AdjBalance_Control1470002.Value</Value>
                                  <Style>
                                    <FontSize>6pt</FontSize>
                                    <Format>=Fields!AdjBalance_Control1470002Format.Value</Format>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0cm</Top>
                          <Left>20.25cm</Left>
                          <Height>0.423cm</Height>
                          <Width>1.95cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>0.15cm</PaddingLeft>
                            <PaddingRight>0.15cm</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="AdjBalance___VendorLedgerEntry__Remaining_Amt___LCY__">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Fields!AdjBalance___VendorLedgerEntry__Remaining_Amt___LCY__.Value</Value>
                                  <Style>
                                    <FontSize>6pt</FontSize>
                                    <Format>=Fields!AdjBalance___VendorLedgerEntry__Remaining_Amt___LCY__Format.Value</Format>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0cm</Top>
                          <Left>22.5cm</Left>
                          <Height>0.423cm</Height>
                          <Width>1.95cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>0.15cm</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="COMPANYNAME">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Fields!COMPANYNAME.Value</Value>
                                  <Style>
                                    <Color>#ff0000</Color>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Visibility>
                            <Hidden>true</Hidden>
                          </Visibility>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="Adjust_Exchange_RatesCaption">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Fields!Adjust_Exchange_RatesCaption.Value</Value>
                                  <Style>
                                    <Color>#ff0000</Color>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Visibility>
                            <Hidden>true</Hidden>
                          </Visibility>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="CurrReport_PAGENOCaption">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Fields!CurrReport_PAGENOCaption.Value</Value>
                                  <Style>
                                    <Color>#ff0000</Color>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Visibility>
                            <Hidden>true</Hidden>
                          </Visibility>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                  </TablixCells>
                </TablixRow>
                <TablixRow>
                  <Height>0.423cm</Height>
                  <TablixCells>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox114">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox115">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox116">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox117">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox118">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox119">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox120">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox121">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox122">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox123">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox124">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="Text12404_Control1210194">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=First(Fields!Text12404_Control1210194.Value)</Value>
                                  <Style>
                                    <FontSize>7pt</FontSize>
                                    <FontWeight>Bold</FontWeight>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                              <Style>
                                <TextAlign>Right</TextAlign>
                              </Style>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0cm</Top>
                          <Left>20.25cm</Left>
                          <Height>0.423cm</Height>
                          <Width>1.95cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>0.15cm</PaddingLeft>
                            <PaddingRight>0.15cm</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TotalAmount_Control1210191">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value>=Sum(Fields!TotalAmount_Control1210191.Value)</Value>
                                  <Style>
                                    <FontSize>7pt</FontSize>
                                    <FontWeight>Bold</FontWeight>
                                    <Format>=First(Fields!TotalAmount_Control1210191Format.Value)</Format>
                                  </Style>
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Top>0cm</Top>
                          <Left>22.5cm</Left>
                          <Height>0.423cm</Height>
                          <Width>1.95cm</Width>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>0.15cm</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                      </CellContents>
                    </TablixCell>
                    <TablixCell>
                      <CellContents>
                        <Textbox Name="TextBox127">
                          <KeepTogether>true</KeepTogether>
                          <Paragraphs>
                            <Paragraph>
                              <TextRuns>
                                <TextRun>
                                  <Value />
                                  <Style />
                                </TextRun>
                              </TextRuns>
                            </Paragraph>
                          </Paragraphs>
                          <Style>
                            <VerticalAlign>Middle</VerticalAlign>
                            <PaddingLeft>2pt</PaddingLeft>
                            <PaddingRight>2pt</PaddingRight>
                            <PaddingTop>2pt</PaddingTop>
                            <PaddingBottom>2pt</PaddingBottom>
                          </Style>
                        </Textbox>
                        <ColSpan>3</ColSpan>
                      </CellContents>
                    </TablixCell>
                    <TablixCell />
                    <TablixCell />
                  </TablixCells>
                </TablixRow>
              </TablixRows>
            </TablixBody>
            <TablixColumnHierarchy>
              <TablixMembers>
                <TablixMember />
                <TablixMember />
                <TablixMember />
                <TablixMember />
                <TablixMember />
                <TablixMember />
                <TablixMember />
                <TablixMember />
                <TablixMember />
                <TablixMember />
                <TablixMember />
                <TablixMember />
                <TablixMember />
                <TablixMember />
                <TablixMember />
                <TablixMember />
              </TablixMembers>
            </TablixColumnHierarchy>
            <TablixRowHierarchy>
              <TablixMembers>
                <TablixMember>
                  <KeepWithGroup>After</KeepWithGroup>
                  <KeepTogether>true</KeepTogether>
                </TablixMember>
                <TablixMember>
                  <KeepWithGroup>After</KeepWithGroup>
                  <KeepTogether>true</KeepTogether>
                </TablixMember>
                <TablixMember>
                  <Group Name="Table1_Details_Group">
                    <DataElementName>Detail</DataElementName>
                  </Group>
                  <TablixMembers>
                    <TablixMember />
                  </TablixMembers>
                  <DataElementName>Detail_Collection</DataElementName>
                  <DataElementOutput>Output</DataElementOutput>
                  <KeepTogether>true</KeepTogether>
                </TablixMember>
                <TablixMember>
                  <KeepWithGroup>Before</KeepWithGroup>
                  <KeepTogether>true</KeepTogether>
                </TablixMember>
              </TablixMembers>
            </TablixRowHierarchy>
            <DataSetName>DataSet_Result</DataSetName>
            <Top>0cm</Top>
            <Height>2.115cm</Height>
          </Tablix>
        </ReportItems>
        <Height>2.115cm</Height>
      </Body>
      <Width>27.75cm</Width>
      <Page>
        <PageHeader>
          <Height>1.269cm</Height>
          <PrintOnFirstPage>true</PrintOnFirstPage>
          <PrintOnLastPage>true</PrintOnLastPage>
          <ReportItems>
            <Textbox Name="PageNumberTextBox">
              <KeepTogether>true</KeepTogether>
              <Paragraphs>
                <Paragraph>
                  <TextRuns>
                    <TextRun>
                      <Value>=Globals!PageNumber</Value>
                      <Style>
                        <FontSize>7pt</FontSize>
                      </Style>
                    </TextRun>
                  </TextRuns>
                  <Style>
                    <TextAlign>Right</TextAlign>
                  </Style>
                </Paragraph>
              </Paragraphs>
              <Top>0.423cm</Top>
              <Left>24.15cm</Left>
              <Height>0.423cm</Height>
              <Width>0.45cm</Width>
              <Style>
                <VerticalAlign>Middle</VerticalAlign>
              </Style>
            </Textbox>
            <Textbox Name="UserIdTextBox">
              <KeepTogether>true</KeepTogether>
              <Paragraphs>
                <Paragraph>
                  <TextRuns>
                    <TextRun>
                      <Value>=User!UserID</Value>
                      <Style>
                        <FontSize>7pt</FontSize>
                      </Style>
                    </TextRun>
                  </TextRuns>
                  <Style>
                    <TextAlign>Right</TextAlign>
                  </Style>
                </Paragraph>
              </Paragraphs>
              <Top>0.846cm</Top>
              <Left>21.35cm</Left>
              <Height>0.423cm</Height>
              <Width>3.25cm</Width>
              <Style>
                <VerticalAlign>Middle</VerticalAlign>
              </Style>
            </Textbox>
            <Textbox Name="ExecutionTimeTextBox">
              <KeepTogether>true</KeepTogether>
              <Paragraphs>
                <Paragraph>
                  <TextRuns>
                    <TextRun>
                      <Value>=Globals!ExecutionTime</Value>
                      <Style>
                        <FontSize>7pt</FontSize>
                        <Format>g</Format>
                      </Style>
                    </TextRun>
                  </TextRuns>
                  <Style>
                    <TextAlign>Right</TextAlign>
                  </Style>
                </Paragraph>
              </Paragraphs>
              <Top>0cm</Top>
              <Left>21.45cm</Left>
              <Height>0.423cm</Height>
              <Width>3.15cm</Width>
              <Style>
                <VerticalAlign>Middle</VerticalAlign>
              </Style>
            </Textbox>
            <Textbox Name="COMPANYNAME1">
              <KeepTogether>true</KeepTogether>
              <Paragraphs>
                <Paragraph>
                  <TextRuns>
                    <TextRun>
                      <Value>=ReportItems!COMPANYNAME.Value</Value>
                      <Style>
                        <FontSize>7pt</FontSize>
                      </Style>
                    </TextRun>
                  </TextRuns>
                </Paragraph>
              </Paragraphs>
              <Top>0.423cm</Top>
              <Left>0cm</Left>
              <Height>0.423cm</Height>
              <Width>7.5cm</Width>
              <Style>
                <VerticalAlign>Middle</VerticalAlign>
              </Style>
            </Textbox>
            <Textbox Name="Adjust_Exchange_RatesCaption1">
              <KeepTogether>true</KeepTogether>
              <Paragraphs>
                <Paragraph>
                  <TextRuns>
                    <TextRun>
                      <Value>=ReportItems!Adjust_Exchange_RatesCaption.Value</Value>
                      <Style>
                        <FontSize>8pt</FontSize>
                        <FontWeight>Bold</FontWeight>
                      </Style>
                    </TextRun>
                  </TextRuns>
                </Paragraph>
              </Paragraphs>
              <Top>0cm</Top>
              <Left>0cm</Left>
              <Height>0.423cm</Height>
              <Width>7.5cm</Width>
              <Style>
                <VerticalAlign>Middle</VerticalAlign>
              </Style>
            </Textbox>
            <Textbox Name="CurrReport_PAGENOCaption1">
              <KeepTogether>true</KeepTogether>
              <Paragraphs>
                <Paragraph>
                  <TextRuns>
                    <TextRun>
                      <Value>=ReportItems!CurrReport_PAGENOCaption.Value</Value>
                      <Style>
                        <FontSize>7pt</FontSize>
                      </Style>
                    </TextRun>
                  </TextRuns>
                </Paragraph>
              </Paragraphs>
              <Top>0.423cm</Top>
              <Left>23.4cm</Left>
              <Height>0.423cm</Height>
              <Width>0.75cm</Width>
              <Style>
                <VerticalAlign>Middle</VerticalAlign>
              </Style>
            </Textbox>
          </ReportItems>
        </PageHeader>
        <PageHeight>29.7cm</PageHeight>
        <PageWidth>30.55cm</PageWidth>
        <LeftMargin>2.1cm</LeftMargin>
        <RightMargin>0cm</RightMargin>
        <TopMargin>2cm</TopMargin>
        <BottomMargin>2cm</BottomMargin>
      </Page>
    </ReportSection>
  </ReportSections>
  <Code>Public Function BlankZero(ByVal Value As Decimal)
    if Value = 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankPos(ByVal Value As Decimal)
    if Value &gt; 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankZeroAndPos(ByVal Value As Decimal)
    if Value &gt;= 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankNeg(ByVal Value As Decimal)
    if Value &lt; 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankNegAndZero(ByVal Value As Decimal)
    if Value &lt;= 0 then
        Return ""
    end if
    Return Value
End Function
</Code>
  <Language>=User!Language</Language>
  <ConsumeContainerWhitespace>true</ConsumeContainerWhitespace>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>272165c2-ef60-4557-a62d-fe9272e4e054</rd:ReportID>
</Report>
    END_OF_RDLDATA
  }
}

