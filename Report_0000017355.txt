OBJECT Report 17355 Statistic Form P-4
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Statistic Form P-4;
               RUS=Статистическая форма П-4];
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  ExcelTemplate@1210000 : Record 14919;
                BEGIN
                  IF StartDate = 0D THEN
                    ERROR(Text14700);
                  IF EndDate = 0D THEN
                    ERROR(Text14701);
                  Period := FORMAT(StartDate,0,'<Month Text>') + ' ' + FORMAT(DATE2DMY(StartDate,3)) + Text14703;

                  HumResSetup.GET;
                  HumResSetup.TESTFIELD("P-4 Template Code");

                  FileName := ExcelTemplate.OpenTemplate(HumResSetup."P-4 Template Code");

                  CompanyInfo.GET;
                END;

    OnPostReport=BEGIN
                   ExcelMgt.GiveUserControl;
                 END;

  }
  DATASET
  {
    { 5375;    ;DataItem;                    ;
               DataItemTable=Table79;
               DataItemTableView=SORTING(Primary Key);
               OnPreDataItem=VAR
                               EmployeeQty@1210000 : ARRAY [3] OF Decimal;
                               GroundsOfTermination@1210001 : Record 5217;
                               LaborContract@1210002 : Record 17360;
                               Employee@1210003 : Record 5200;
                               LocMgt@1210004 : Codeunit 12400;
                               SalaryStartDate@1210005 : Date;
                               SalaryEndDate@1210006 : Date;
                               LocRepMgt@1210007 : Codeunit 12401;
                               PrimarySalary@1210008 : Decimal;
                               ExternalSalary@1210009 : Decimal;
                               CivilSalary@1210010 : Decimal;
                               AllBonuses@1210011 : Decimal;
                             BEGIN
                               ExcelMgt.OpenBook(FileName);
                               ExcelMgt.OpenSheet('Sheet1');

                               ExcelMgt.FillCell('BQ10',LocMgt.GetMonthName(StartDate,FALSE));
                               ExcelMgt.FillCell('CI10',FORMAT(DATE2DMY(StartDate,3) MOD 100));

                               ExcelMgt.FillCell('AV26',CompanyInfo.Name + CompanyInfo."Name 2");
                               ExcelMgt.FillCell('S29',LocRepMgt.GetCompanyAddress);
                               ExcelMgt.FillCell('AC34',CompanyInfo."OKPO Code");

                               ExcelMgt.OpenSheet('Sheet2_3');
                               // ExcelMgt.FillCell('AN9',CompanyInfo."OKVED Code");
                               ExcelMgt.FillCell('AN10',CompanyInfo."OKVED Code");

                               CalcAverageEmployeeQty(EmployeeQty);
                               ExcelMgt.FillCell('BD9',FORMAT(EmployeeQty[1] + EmployeeQty[2] + EmployeeQty[3]));
                               ExcelMgt.FillCell('CB9',FORMAT(EmployeeQty[1]));
                               ExcelMgt.FillCell('CY9',FORMAT(EmployeeQty[2]));
                               ExcelMgt.FillCell('DV9',FORMAT(EmployeeQty[3]));

                               ExcelMgt.FillCell('BD10',FORMAT(EmployeeQty[1] + EmployeeQty[2] + EmployeeQty[3]));
                               ExcelMgt.FillCell('CB10',FORMAT(EmployeeQty[1]));
                               ExcelMgt.FillCell('CY10',FORMAT(EmployeeQty[2]));
                               ExcelMgt.FillCell('DV10',FORMAT(EmployeeQty[3]));

                               ExcelMgt.FillCell('T31',FORMAT(CalcWorkHours(StartDate,EndDate,FALSE)));
                               ExcelMgt.FillCell('AI31',FORMAT(CalcWorkHours(StartDate,EndDate,TRUE)));

                               SalaryEndDate := EndDate;
                               IF CalcMode = CalcMode::YTD THEN
                                 SalaryStartDate := CALCDATE('<-CY>',StartDate)
                               ELSE
                                 SalaryStartDate := StartDate;

                               PrimarySalary := CalcSalaryAmount(SalaryStartDate,SalaryEndDate,LaborContract."Work Mode"::"Primary Job",FALSE) +
                                 CalcSalaryAmount(SalaryStartDate,SalaryEndDate,LaborContract."Work Mode"::"Internal Co-work",FALSE);
                               ExternalSalary := CalcSalaryAmount(SalaryStartDate,SalaryEndDate,LaborContract."Work Mode"::"External Co-work",FALSE);
                               CivilSalary := CalcSalaryAmount(SalaryStartDate,SalaryEndDate,-1,TRUE);
                               ExcelMgt.FillCell('AY31',FormatToThousands(PrimarySalary + ExternalSalary + CivilSalary));
                               ExcelMgt.FillCell('BQ31',FormatToThousands(PrimarySalary));
                               ExcelMgt.FillCell('CH31',FormatToThousands(ExternalSalary));
                               ExcelMgt.FillCell('CW31',FormatToThousands(CivilSalary));

                               AllBonuses := CalcBonusAmount(SalaryStartDate,SalaryEndDate);
                               ExcelMgt.FillCell('DW31',FormatToThousands(AllBonuses));

                               ExcelMgt.OpenSheet('Sheet4');
                               ExcelMgt.FillCell('CW8',FORMAT(GetHiresCount(DMY2DATE(1,1,DATE2DMY(StartDate,3)),EndDate,FALSE)));
                               ExcelMgt.FillCell('CW10',FORMAT(GetHiresCount(DMY2DATE(1,1,DATE2DMY(StartDate,3)),EndDate,TRUE)));
                               ExcelMgt.FillCell('CW11',FORMAT(GetDismissalCount(DMY2DATE(1,1,DATE2DMY(StartDate,3)),EndDate,-1)));
                               ExcelMgt.FillCell('CW12',FORMAT(GetDismissalCount(DMY2DATE(1,1,DATE2DMY(StartDate,3)),EndDate,
                                     GroundsOfTermination."Reporting Type"::"Staff Reduction")));
                               ExcelMgt.FillCell('CW14',FORMAT(GetDismissalCount(DMY2DATE(1,1,DATE2DMY(StartDate,3)),EndDate,
                                     GroundsOfTermination."Reporting Type"::"Employee Decision")));

                               ExcelMgt.FillCell('CW15',FORMAT(GetPrimaryJobsCount(DMY2DATE(1,1,DATE2DMY(StartDate,3) + 1))));
                               ExcelMgt.FillCell('CW17',FORMAT(GetOpenPositions(DMY2DATE(1,1,DATE2DMY(StartDate,3) + 1))));

                               IF Employee.GET(RespEmployeeNo) THEN BEGIN
                                 ExcelMgt.FillCell('AV26',Employee.GetJobTitleName);
                                 ExcelMgt.FillCell('CE26',Employee.GetFullName);
                                 ExcelMgt.FillCell('AV29',Employee."Phone No.");
                               END;

                               IF CreationDate <> 0D THEN BEGIN
                                 ExcelMgt.FillCell('CG29',FORMAT(DATE2DMY(CreationDate,1)));
                                 ExcelMgt.FillCell('CN29',LocMgt.Month2Text(CreationDate));
                                 ExcelMgt.FillCell('DD29',FORMAT(DATE2DMY(CreationDate,3) MOD 100));
                               END;
                             END;
                              }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   StartDate := CALCDATE('<-CM>',TODAY);
                   EndDate := CALCDATE('<CM>',TODAY);

                   CreationDate := TODAY;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             RUS=Параметры] }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Period Starting Date;
                             RUS=Дата начала периода];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=StartDate }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Period Ending Date;
                             RUS=Дата окончания периода];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=EndDate;
                  Enabled=TRUE }

      { 1470000;2;Field     ;
                  CaptionML=[ENU=Calc Mode;
                             RUS=Режим расчета];
                  OptionCaptionML=[ENU=Period,YTD;
                                   RUS=Период,С начала года];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=CalcMode }

      { 1210000;2;Field     ;
                  CaptionML=[ENU=Responsible Employee;
                             RUS=Материально ответственное лицо];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=RespEmployeeNo;
                  TableRelation=Employee.No.;
                  Enabled=TRUE }

      { 1210002;2;Field     ;
                  CaptionML=[ENU=Creation Date;
                             RUS=Дата создания];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=CreationDate }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CompanyInfo@1210003 : Record 79;
      HumResSetup@1210002 : Record 5218;
      ExcelMgt@1210012 : Codeunit 12416;
      Period@1210006 : Text[100];
      StartDate@1210007 : Date;
      EndDate@1210008 : Date;
      Text14700@1210080 : TextConst 'ENU=Please enter Period Start Date;RUS=Введите дату начала периода';
      Text14701@1210081 : TextConst 'ENU=Please enter Period End Date;RUS=Введите дату окончания периода';
      Text14703@1210083 : TextConst 'ENU=" year";RUS=" год"';
      CalcMode@1470001 : 'Period,YTD';
      FileName@1210004 : Text[1024];
      RespEmployeeNo@1210005 : Code[20];
      CreationDate@1210009 : Date;

    PROCEDURE CalcAverageEmployeeQty@1210001(VAR AvgEmplCount@1210001 : ARRAY [3] OF Decimal);
    VAR
      AverageHeadcountCalculation@1210000 : Codeunit 17351;
      Employee@1210002 : Record 5200;
      LaborContract@1210003 : Record 17360;
    BEGIN
      Employee.SETRANGE("Skip for Avg. HC Calculation",FALSE);
      IF Employee.FINDSET THEN
        REPEAT
          IF LaborContract.GET(Employee."Contract No.") THEN
            IF LaborContract."Contract Type" = LaborContract."Contract Type"::"Civil Contract" THEN
              AvgEmplCount[3] += AverageHeadcountCalculation.CalcAvgCount(Employee."No.",EndDate)
            ELSE
              CASE LaborContract."Work Mode" OF
                LaborContract."Work Mode"::"Primary Job":
                  AvgEmplCount[1] += AverageHeadcountCalculation.CalcAvgCount(Employee."No.",EndDate);
                LaborContract."Work Mode"::"External Co-work":
                  AvgEmplCount[2] += AverageHeadcountCalculation.CalcAvgCount(Employee."No.",EndDate);
              END;
        UNTIL Employee.NEXT = 0;
    END;

    PROCEDURE GetHiresCount@1210000(StartingDate@1210000 : Date;EndingDate@1210001 : Date;IsCurrentYear@1210002 : Boolean) : Integer;
    VAR
      LaborContract@1210004 : Record 17360;
    BEGIN
      WITH LaborContract DO BEGIN
        SETRANGE("Starting Date",StartingDate,EndingDate);
        IF IsCurrentYear THEN
          SETRANGE("Ending Date",0D,DMY2DATE(31,12,DATE2DMY(StartDate,3)));

        SETFILTER(Status,'<>%1',Status::Open);
        SETRANGE("Contract Type","Contract Type"::"Labor Contract");
        SETFILTER("Work Mode",'<>%1',"Work Mode"::"External Co-work");

        EXIT(COUNT);
      END;
    END;

    PROCEDURE GetDismissalCount@1210002(StartingDate@1210002 : Date;EndingDate@1210001 : Date;DismissalType@1210000 : Integer) Count : Integer;
    VAR
      LaborContractLines@1210003 : Record 17361;
      GroundsOfTermination@1210004 : Record 5217;
      LaborContract@1210005 : Record 17360;
    BEGIN
      LaborContractLines.SETRANGE("Operation Type",LaborContractLines."Operation Type"::Dismissal);
      LaborContractLines.SETRANGE("Starting Date",StartingDate,EndingDate);

      IF LaborContractLines.FINDSET THEN
        REPEAT
          IF LaborContract.GET(LaborContractLines."Contract No.") THEN
            IF (LaborContract."Contract Type" <> LaborContract."Contract Type"::"Labor Contract") AND
               (LaborContract."Work Mode" <> LaborContract."Work Mode"::"External Co-work")
            THEN
              IF DismissalType <> -1 THEN BEGIN
                IF GroundsOfTermination.GET(LaborContractLines."Dismissal Reason") THEN
                  IF GroundsOfTermination."Reporting Type" = DismissalType THEN
                    Count += 1;
              END ELSE
                Count += 1;
        UNTIL LaborContractLines.NEXT = 0;

      EXIT(Count);
    END;

    PROCEDURE GetPrimaryJobsCount@1210015(StartingDate@1210001 : Date) : Integer;
    VAR
      LaborContracts@1210000 : Record 17360;
    BEGIN
      LaborContracts.SETFILTER("Ending Date",'%1|>%2',0D,StartingDate);
      LaborContracts.SETFILTER(Status,'<>%1',LaborContracts.Status::Open);
      LaborContracts.SETRANGE("Contract Type",LaborContracts."Contract Type"::"Labor Contract");
      LaborContracts.SETFILTER("Work Mode",'<>%1',LaborContracts."Work Mode"::"External Co-work");

      EXIT(LaborContracts.COUNT);
    END;

    PROCEDURE GetOpenPositions@1210020(StartingDate@1210000 : Date) : Integer;
    VAR
      Position@1210001 : Record 17370;
    BEGIN
      Position.SETRANGE(Status,Position.Status::Approved);
      Position.SETRANGE("Filled Rate",0);
      Position.SETFILTER("Ending Date",'%1|>%2',0D,StartingDate);

      EXIT(Position.COUNT);
    END;

    PROCEDURE CalcWorkHours@1210003(StartingDate@1210000 : Date;EndingDate@1210001 : Date;IsExternal@1210002 : Boolean) Hours : Decimal;
    VAR
      LaborContracts@1210003 : Record 17360;
      HumResSetup@1210005 : Record 5218;
      TimesheetMgt@1210007 : Codeunit 17440;
    BEGIN
      HumResSetup.GET;

      WITH LaborContracts DO BEGIN
        SETFILTER(Status,'<>%1',Status::Open);
        SETRANGE("Contract Type","Contract Type"::"Labor Contract");
        IF IsExternal THEN
          SETRANGE("Work Mode","Work Mode"::"External Co-work")
        ELSE
          SETFILTER("Work Mode",'<>%1',"Work Mode"::"External Co-work");

        IF FINDSET THEN
          REPEAT
            Hours += TimesheetMgt.GetTimesheetInfo("Employee No.",HumResSetup."P-4 Work Time Group Code",
                StartingDate,EndingDate,4);
          UNTIL NEXT = 0;
      END;

      EXIT(Hours);
    END;

    PROCEDURE CalcSalaryAmount@1210026(StartingDate@1210003 : Date;EndingDate@1210002 : Date;WorkMode@1210001 : Integer;IsCivilContract@1210006 : Boolean) Salary : Decimal;
    VAR
      PayrollDocCalc@1210000 : Codeunit 17404;
      LaborContracts@1210005 : Record 17360;
      HumResSetup@1210004 : Record 5218;
    BEGIN
      HumResSetup.GET;

      WITH LaborContracts DO BEGIN
        SETFILTER(Status,'<>%1',Status::Open);

        IF IsCivilContract THEN
          SETRANGE("Contract Type","Contract Type"::"Civil Contract")
        ELSE
          SETRANGE("Contract Type","Contract Type"::"Labor Contract");

        IF WorkMode >= 0 THEN
          SETRANGE("Work Mode",WorkMode);

        IF FINDSET THEN
          REPEAT
            Salary += PayrollDocCalc.CalcElementByPostedEntries(HumResSetup."P-4 Salary Element Code","Employee No.",
                StartingDate,EndingDate,'');
            Salary += PayrollDocCalc.CalcElementByPostedEntries(HumResSetup."P-4 Benefits Element Code","Employee No.",
                StartingDate,EndingDate,'');
          UNTIL NEXT = 0;
      END;

      EXIT(Salary);
    END;

    PROCEDURE CalcBonusAmount@1210005(StartingDate@1210003 : Date;EndingDate@1210002 : Date) Salary : Decimal;
    VAR
      PayrollDocCalc@1210000 : Codeunit 17404;
      LaborContracts@1210005 : Record 17360;
      HumResSetup@1210004 : Record 5218;
    BEGIN
      HumResSetup.GET;

      WITH LaborContracts DO BEGIN
        SETFILTER(Status,'<>%1',Status::Open);

        IF FINDSET THEN
          REPEAT
            Salary += PayrollDocCalc.CalcElementByPostedEntries(HumResSetup."P-4 Benefits Element Code","Employee No.",
                StartingDate,EndingDate,'');
          UNTIL NEXT = 0;
      END;

      EXIT(Salary);
    END;

    PROCEDURE FormatToThousands@1210012(Value@1210000 : Decimal) : Text[1024];
    BEGIN
      EXIT(FORMAT(ROUND(Value,100) / 1000));
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

