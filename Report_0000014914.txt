OBJECT Report 14914 Invent. Act INV-17
{
  OBJECT-PROPERTIES
  {
    Date=09.09.14;
    Time=12:00:00;
    Version List=NAVRU8.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Invent. Act INV-17;
               RUS=Акт инвентаризации ИНВ-17];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  INV17Helper.InitReportTemplate(REPORT::"Invent. Act INV-17");
                END;

    OnPostReport=BEGIN
                   IF FileName = '' THEN
                     INV17Helper.ExportData
                   ELSE
                     INV17Helper.ExportDataFile(FileName);
                 END;

  }
  DATASET
  {
    { 7663;    ;DataItem;                    ;
               DataItemTable=Table14908;
               PrintOnlyIfDetail=Yes;
               OnPreDataItem=BEGIN
                               CompanyInformation.GET;
                             END;

               OnAfterGetRecord=BEGIN
                                  INV17Helper.CheckSignature(Chairman,"No.",Chairman."Employee Type"::Chairman);
                                  INV17Helper.CheckSignature(Member1,"No.",Member1."Employee Type"::Member1);
                                  INV17Helper.CheckSignature(Member2,"No.",Member2."Employee Type"::Member2);

                                  INV17Helper.FillHeader(
                                    "No.",FORMAT("Act Date"),"Reason Document No.",FORMAT("Reason Document Date"),"Inventory Date");
                                END;

               OnPostDataItem=BEGIN
                                INV17Helper.FillFooter(
                                  StdRepMgt.GetEmpPosition(Chairman."Employee No."),
                                  StdRepMgt.GetEmpName(Chairman."Employee No."),
                                  StdRepMgt.GetEmpPosition(Member1."Employee No."),
                                  StdRepMgt.GetEmpName(Member1."Employee No."),
                                  StdRepMgt.GetEmpPosition(Member2."Employee No."),
                                  StdRepMgt.GetEmpName(Member2."Employee No."));
                              END;
                               }

    { 7053;1   ;DataItem;DebtsInventActLine  ;
               DataItemTable=Table14909;
               DataItemTableView=SORTING(Act No.,Contractor Type,Contractor No.,G/L Account No.,Category)
                                 WHERE(Category=CONST(Debts));
               OnPreDataItem=BEGIN
                               INV17Helper.FillPartHeader(Category::Debts);
                             END;

               OnAfterGetRecord=BEGIN
                                  SummarizeTotal(LastTotal,DebtsInventActLine);
                                  FillLine(DebtsInventActLine,FALSE);

                                  SummarizeTotal(PageTotal,DebtsInventActLine);
                                END;

               OnPostDataItem=BEGIN
                                FillLine(DebtsInventActLine,TRUE);
                                INV17Helper.FillPageFooter(LastTotal);
                              END;

               DataItemLink=Act No.=FIELD(No.) }

    { 9601;1   ;DataItem;LiabilitiesInventActLine;
               DataItemTable=Table14909;
               DataItemTableView=SORTING(Act No.,Contractor Type,Contractor No.,G/L Account No.,Category)
                                 WHERE(Category=CONST(Liabilities));
               OnPreDataItem=BEGIN
                               CLEAR(PageTotal);
                               CLEAR(LastTotal);
                               CLEAR(LastInvActLine);
                               INV17Helper.FillPartHeader(Category::Liabilities);
                             END;

               OnAfterGetRecord=BEGIN
                                  SummarizeTotal(LastTotal,LiabilitiesInventActLine);
                                  FillLine(LiabilitiesInventActLine,FALSE);

                                  SummarizeTotal(PageTotal,LiabilitiesInventActLine);
                                END;

               OnPostDataItem=BEGIN
                                FillLine(LiabilitiesInventActLine,TRUE);
                                INV17Helper.FillPageFooter(LastTotal);
                              END;

               DataItemLink=Act No.=FIELD(No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CompanyInformation@1210000 : Record 79;
      Chairman@1210004 : Record 12420;
      Member1@1210003 : Record 12420;
      Member2@1210002 : Record 12420;
      LastInvActLine@1210014 : Record 14909;
      DocSignMgt@1210007 : Codeunit 12420;
      StdRepMgt@1210012 : Codeunit 12401;
      INV17Helper@1210006 : Codeunit 14943;
      PageTotal@1210009 : ARRAY [4] OF Decimal;
      LastTotal@1210010 : ARRAY [4] OF Decimal;
      FileName@1210001 : Text;

    LOCAL PROCEDURE FillLine@1210002(InvActLine@1210000 : Record 14909;Finalize@1210001 : Boolean);
    BEGIN
      WITH InvActLine DO
        IF LastInvActLine."Act No." <> '' THEN
          IF IsGroupChanged(InvActLine) OR Finalize THEN BEGIN
            INV17Helper.FillLine(LastInvActLine."Contractor Name",LastInvActLine."G/L Account No.",PageTotal,LastTotal,Category);
            CLEAR(PageTotal);
          END;
      LastInvActLine := InvActLine;
    END;

    LOCAL PROCEDURE IsGroupChanged@1210003(InvActLine@1210000 : Record 14909) : Boolean;
    BEGIN
      WITH InvActLine DO
        EXIT(
          (LastInvActLine."Contractor Type" <> "Contractor Type") OR
          (LastInvActLine."Contractor No." <> "Contractor No.") OR
          (LastInvActLine."G/L Account No." <> "G/L Account No.") OR
          (LastInvActLine.Category <> Category));
    END;

    LOCAL PROCEDURE SummarizeTotal@1210004(VAR TotalAmount@1210000 : ARRAY [4] OF Decimal;InvActLine@1210001 : Record 14909);
    BEGIN
      WITH InvActLine DO BEGIN
        TotalAmount[1] += "Total Amount";
        TotalAmount[2] += "Confirmed Amount";
        TotalAmount[3] += "Not Confirmed Amount";
        TotalAmount[4] += "Overdue Amount";
      END;
    END;

    PROCEDURE SetFileNameSilent@1210005(NewFileName@1210000 : Text);
    BEGIN
      FileName := NewFileName;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

