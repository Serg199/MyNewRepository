OBJECT Table 14926 Default VAT Allocation Line
{
  OBJECT-PROPERTIES
  {
    Date=18.05.17;
    Time=18:35:32;
    Modified=Yes;
    Version List=NAVRU7.10,NOS-26;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               VALIDATE(Type);
               VALIDATE(Base);

               ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
               ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
             END;

    CaptionML=[ENU=Default VAT Allocation Line;
               RUS=Станд. строка распределения НДС];
    LookupPageID=Page14927;
    DrillDownPageID=Page14927;
  }
  FIELDS
  {
    { 1   ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              RUS=НДС бизнес-группа] }
    { 2   ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              RUS=НДС товарная группа] }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              RUS=Номер строки] }
    { 4   ;   ;Type                ;Option        ;OnValidate=VAR
                                                                VATPostingSetup@1210000 : Record 325;
                                                              BEGIN
                                                                HandleType;
                                                                IF VATPostingSetup.GET("VAT Bus. Posting Group","VAT Prod. Posting Group") THEN
                                                                  CASE Type OF
                                                                    Type::VAT:
                                                                      IF VATPostingSetup."Purchase VAT Account" <> '' THEN
                                                                        VALIDATE("Account No.",VATPostingSetup."Purchase VAT Account")
                                                                      ELSE
                                                                        IF VATPostingSetup."Sales VAT Account" <> '' THEN
                                                                          VALIDATE("Account No.",VATPostingSetup."Sales VAT Account");
                                                                    Type::WriteOff:
                                                                      BEGIN
                                                                        VATPostingSetup.TESTFIELD("Write-Off VAT Account");
                                                                        VALIDATE("Account No.",VATPostingSetup."Write-Off VAT Account")
                                                                      END;
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              RUS=Тип];
                                                   OptionCaptionML=[ENU=VAT,Write-Off,Charge;
                                                                    RUS=НДС,Списание,Расходы];
                                                   OptionString=VAT,WriteOff,Charge }
    { 5   ;   ;Account No.         ;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=VAR
                                                                GLAcc@1210000 : Record 15;
                                                              BEGIN
                                                                IF "Account No." = '' THEN
                                                                  GLAcc.INIT
                                                                ELSE BEGIN
                                                                  GLAcc.GET("Account No.");
                                                                  GLAcc.CheckGLAcc;
                                                                END;
                                                                Description := GLAcc.Name;

                                                                CreateDim(DATABASE::"G/L Account","Account No.");
                                                              END;

                                                   CaptionML=[ENU=Account No.;
                                                              RUS=Номер счета];
                                                   NotBlank=Yes }
    { 7   ;   ;Allocation %        ;Decimal       ;OnValidate=BEGIN
                                                                Amount := 0;
                                                                CheckVATAllocation;
                                                              END;

                                                   CaptionML=[ENU=Allocation %;
                                                              RUS=Распределение (%)];
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 8   ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                "Allocation %" := 0;
                                                              END;

                                                   CaptionML=[ENU=Amount;
                                                              RUS=Сумма] }
    { 9   ;   ;VAT Unreal. Account No.;Code20     ;CaptionML=[ENU=VAT Unreal. Account No.;
                                                              RUS=Номер счета по нереализ. НДС];
                                                   Editable=No }
    { 10  ;   ;Base                ;Option        ;OnValidate=VAR
                                                                CommonBase@1210000 : Option;
                                                              BEGIN
                                                                IF FindCommonBase(CommonBase) THEN
                                                                  Base := CommonBase;
                                                              END;

                                                   CaptionML=[ENU=Base;
                                                              RUS=База];
                                                   OptionCaptionML=[ENU=Remaining,Full,Depreciation;
                                                                    RUS=Остаток,Полная,Амортизация];
                                                   OptionString=Remaining,Full,Depreciation }
    { 11  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              RUS=Код ярлыка измерения 1];
                                                   CaptionClass='1,2,1' }
    { 12  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              RUS=Код ярлыка измерения 2];
                                                   CaptionClass='1,2,2' }
    { 13  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 14  ;   ;Recurring Frequency ;DateFormula   ;OnValidate=BEGIN
                                                                IF WORKDATE > CALCDATE("Recurring Frequency",WORKDATE) THEN
                                                                  FIELDERROR("Recurring Frequency");
                                                              END;

                                                   CaptionML=[ENU=Recurring Frequency;
                                                              RUS=Частота повторения] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              RUS=Код набора измерений];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;VAT Bus. Posting Group,VAT Prod. Posting Group,Line No.;
                                                   SumIndexFields=Allocation %;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      DimMgt@1470000 : Codeunit 408;
      Text001@1210000 : TextConst 'ENU=The maximum permitted value for total %1 is 100.;RUS=Максимальное допустимое значение для суммы %1 равно 100.';

    PROCEDURE CreateDim@26(Type1@1000 : Integer;No1@1001 : Code[20]);
    VAR
      SourceCodeSetup@1006 : Record 242;
      TableID@1007 : ARRAY [10] OF Integer;
      No@1008 : ARRAY [10] OF Code[20];
    BEGIN
      SourceCodeSetup.GET;
      TableID[1] := Type1;
      No[1] := No1;
      "Shortcut Dimension 1 Code" := '';
      "Shortcut Dimension 2 Code" := '';
      "Dimension Set ID" :=
        DimMgt.GetDefaultDimID(
          TableID,No,SourceCodeSetup."VAT Settlement",
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code",0,0);
    END;

    PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    PROCEDURE LookupShortcutDimCode@28(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
      ValidateShortcutDimCode(FieldNumber,ShortcutDimCode);
    END;

    PROCEDURE ShowShortcutDimCode@27(VAR ShortcutDimCode@1000 : ARRAY [20] OF Code[20]);
    BEGIN
      DimMgt.GetShortcutDimensions("Dimension Set ID",ShortcutDimCode);
    END;

    PROCEDURE ShowDimensions@25();
    BEGIN
      DimMgt.SetObjectFrom(Rec); // NC NOS-26 SPA
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet(
          "Dimension Set ID",STRSUBSTNO('%1 %2 %3',"VAT Bus. Posting Group","VAT Prod. Posting Group","Line No."));
      DimMgt.UpdateGlobalDimFromDimSetID("Dimension Set ID","Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    PROCEDURE HandleType@1210004();
    VAR
      DefaultVATAllocationLine@1210001 : Record 14926;
    BEGIN
      IF Type = Type::VAT THEN BEGIN
        DefaultVATAllocationLine := Rec;
        SETRANGE("VAT Bus. Posting Group","VAT Bus. Posting Group");
        SETRANGE("VAT Prod. Posting Group","VAT Prod. Posting Group");
        SETFILTER("Line No.",'<>%1',"Line No.");
        SETRANGE(Type,Type::VAT);
        IF NOT ISEMPTY THEN BEGIN
          Rec := DefaultVATAllocationLine;
          Type := Type::WriteOff;
        END ELSE
          Rec := DefaultVATAllocationLine;
        SETRANGE("Line No.");
        SETRANGE(Type);
      END;
    END;

    PROCEDURE FindCommonBase@1210008(VAR NewBase@1210001 : Option) Result : Boolean;
    VAR
      DefaultVATAllocationLine@1210002 : Record 14926;
    BEGIN
      DefaultVATAllocationLine := Rec;
      Result := FALSE;
      SETRANGE("VAT Bus. Posting Group","VAT Bus. Posting Group");
      SETRANGE("VAT Prod. Posting Group","VAT Prod. Posting Group");
      SETFILTER("Line No.",'<>%1',"Line No.");
      IF FINDFIRST THEN BEGIN
        NewBase := Base;
        Result := TRUE;
      END;
      SETRANGE("Line No.");
      Rec := DefaultVATAllocationLine;
    END;

    PROCEDURE CheckVATAllocation@1210000();
    VAR
      DefaultVATAllocationLine@1210001 : Record 14926;
      TotalAllocPercent@1210000 : Decimal;
    BEGIN
      DefaultVATAllocationLine := Rec;
      TotalAllocPercent := "Allocation %";
      SETRANGE("VAT Bus. Posting Group","VAT Bus. Posting Group");
      SETRANGE("VAT Prod. Posting Group","VAT Prod. Posting Group");
      SETFILTER("Line No.",'<>%1',"Line No.");
      CALCSUMS("Allocation %");
      TotalAllocPercent := TotalAllocPercent + "Allocation %";
      SETRANGE("Line No.");
      Rec := DefaultVATAllocationLine;
      IF TotalAllocPercent > 100 THEN
        ERROR(Text001,FIELDCAPTION("Allocation %"));
    END;

    BEGIN
    {
      NC NCS-2356 DP Changed dimension of array ShortcutDimCode 8->10 function ShowShortcutDimCode
      ----------------------
      NC NOS-26 SPA Changed the dimension array ShortcutDimCode 10->20 function ShowShortcutDimCode
    }
    END.
  }
}

