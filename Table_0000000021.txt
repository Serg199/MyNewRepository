OBJECT Table 21 Cust. Ledger Entry
{
  OBJECT-PROPERTIES
  {
    Date=09.08.17;
    Time=17:35:31;
    Modified=Yes;
    Version List=NAVW110.00,NAVRU10.00,NOS-26;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               //NC NOS-26 SPA Кастомизация в CU50085 в коде события OnAfterDeleteEvent
             END;

    CaptionML=[ENU=Cust. Ledger Entry;
               RUS=Книга операций клиентов];
    LookupPageID=Page25;
    DrillDownPageID=Page25;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              RUS=Номер операции] }
    { 3   ;   ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Customer No.;
                                                              RUS=Код клиента] }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              RUS=Дата учета] }
    { 5   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              RUS=Тип документа];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    RUS=" ,Платеж,Счет,Кредит-нота,Процент-нота,Напоминание,Возмещение"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 6   ;   ;Document No.        ;Code20        ;OnLookup=VAR
                                                              IncomingDocument@1000 : Record 130;
                                                            BEGIN
                                                              IncomingDocument.HyperlinkToDocument("Document No.","Posting Date");
                                                            END;

                                                   CaptionML=[ENU=Document No.;
                                                              RUS=Номер документа] }
    { 7   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 11  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              RUS=Код валюты] }
    { 13  ;   ;Amount              ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Ledger Entry Amount=CONST(Yes),
                                                                                                              Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                              Posting Date=FIELD(Date Filter),
                                                                                                              Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Amount;
                                                              RUS=Сумма];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 14  ;   ;Remaining Amount    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                              Posting Date=FIELD(Date Filter),
                                                                                                              Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Remaining Amount;
                                                              RUS=Сумма остатка];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 15  ;   ;Original Amt. (LCY) ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                                      Entry Type=FILTER(Initial Entry),
                                                                                                                      Posting Date=FIELD(Date Filter),
                                                                                                                      Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Original Amt. (LCY);
                                                              RUS=Исходная сумма (руб.)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,21,15' }
    { 16  ;   ;Remaining Amt. (LCY);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                                      Posting Date=FIELD(Date Filter),
                                                                                                                      Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Remaining Amt. (LCY);
                                                              RUS=Сумма остатка (руб.)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,21,16' }
    { 17  ;   ;Amount (LCY)        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Ledger Entry Amount=CONST(Yes),
                                                                                                                      Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                                      Posting Date=FIELD(Date Filter),
                                                                                                                      Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Amount (LCY);
                                                              RUS=Сумма (руб.)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,21,17' }
    { 18  ;   ;Sales (LCY)         ;Decimal       ;CaptionML=[ENU=Sales (LCY);
                                                              RUS=Продажи (руб.)];
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,21,18' }
    { 19  ;   ;Profit (LCY)        ;Decimal       ;CaptionML=[ENU=Profit (LCY);
                                                              RUS=Прибыль (руб.)];
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,21,19' }
    { 20  ;   ;Inv. Discount (LCY) ;Decimal       ;CaptionML=[ENU=Inv. Discount (LCY);
                                                              RUS=Скидка счета (руб.)];
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,21,20' }
    { 21  ;   ;Sell-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Sell-to Customer No.;
                                                              RUS=Код клиента (покупателя)] }
    { 22  ;   ;Customer Posting Group;Code10      ;TableRelation="Customer Posting Group";
                                                   CaptionML=[ENU=Customer Posting Group;
                                                              RUS=Учетная группа клиента] }
    { 23  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              RUS=Код глобального измерения 1];
                                                   CaptionClass='1,1,1' }
    { 24  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              RUS=Код глобального измерения 2];
                                                   CaptionClass='1,1,2' }
    { 25  ;   ;Salesperson Code    ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=[ENU=Salesperson Code;
                                                              RUS=Код менеджера по продажам] }
    { 27  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              RUS=Код пользователя] }
    { 28  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              RUS=Код источника] }
    { 33  ;   ;On Hold             ;Code3         ;CaptionML=[ENU=On Hold;
                                                              RUS=На удержании] }
    { 34  ;   ;Applies-to Doc. Type;Option        ;CaptionML=[ENU=Applies-to Doc. Type;
                                                              RUS=Примен. к док. - тип];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    RUS=" ,Платеж,Счет,Кредит-нота,Процент-нота,Напоминание,Возмещение"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 35  ;   ;Applies-to Doc. No. ;Code20        ;CaptionML=[ENU=Applies-to Doc. No.;
                                                              RUS=Примен. к док. - номер] }
    { 36  ;   ;Open                ;Boolean       ;CaptionML=[ENU=Open;
                                                              RUS=Открыто] }
    { 37  ;   ;Due Date            ;Date          ;OnValidate=VAR
                                                                ReminderEntry@1000 : Record 300;
                                                                ReminderIssue@1102601000 : Codeunit 393;
                                                              BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                                IF "Due Date" <> xRec."Due Date" THEN BEGIN
                                                                  ReminderEntry.SETCURRENTKEY("Customer Entry No.",Type);
                                                                  ReminderEntry.SETRANGE("Customer Entry No.","Entry No.");
                                                                  ReminderEntry.SETRANGE(Type,ReminderEntry.Type::Reminder);
                                                                  ReminderEntry.SETRANGE("Reminder Level","Last Issued Reminder Level");
                                                                  IF ReminderEntry.FINDLAST THEN
                                                                    ReminderIssue.ChangeDueDate(ReminderEntry,"Due Date",xRec."Due Date");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Due Date;
                                                              RUS=Срок оплаты] }
    { 38  ;   ;Pmt. Discount Date  ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=[ENU=Pmt. Discount Date;
                                                              RUS=Дата скидки оплаты] }
    { 39  ;   ;Original Pmt. Disc. Possible;Decimal;
                                                   CaptionML=[ENU=Original Pmt. Disc. Possible;
                                                              RUS=Первоначальная возможная скидка оплаты];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 40  ;   ;Pmt. Disc. Given (LCY);Decimal     ;CaptionML=[ENU=Pmt. Disc. Given (LCY);
                                                              RUS=Предоставленная скидка оплаты (руб.)];
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,21,40' }
    { 43  ;   ;Positive            ;Boolean       ;CaptionML=[ENU=Positive;
                                                              RUS=Положит.] }
    { 44  ;   ;Closed by Entry No. ;Integer       ;TableRelation="Cust. Ledger Entry";
                                                   CaptionML=[ENU=Closed by Entry No.;
                                                              RUS=Номер закрывающей операции] }
    { 45  ;   ;Closed at Date      ;Date          ;CaptionML=[ENU=Closed at Date;
                                                              RUS=Закрыто на дату] }
    { 46  ;   ;Closed by Amount    ;Decimal       ;CaptionML=[ENU=Closed by Amount;
                                                              RUS=Закрыто суммой];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 47  ;   ;Applies-to ID       ;Code50        ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=[ENU=Applies-to ID;
                                                              RUS=Код применения] }
    { 49  ;   ;Journal Batch Name  ;Code10        ;CaptionML=[ENU=Journal Batch Name;
                                                              RUS=Код раздела журнала] }
    { 50  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              RUS=Код причины] }
    { 51  ;   ;Bal. Account Type   ;Option        ;CaptionML=[ENU=Bal. Account Type;
                                                              RUS=Тип баланс. счета];
                                                   OptionCaptionML=[ENU=G/L Account,Customer,Vendor,Bank Account,Fixed Asset;
                                                                    RUS=Счет ГК,Клиент,Поставщик,Банк. счет,ОС];
                                                   OptionString=G/L Account,Customer,Vendor,Bank Account,Fixed Asset }
    { 52  ;   ;Bal. Account No.    ;Code20        ;TableRelation=IF (Bal. Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Customer)) Customer
                                                                 ELSE IF (Bal. Account Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Bal. Account Type=CONST(Bank Account)) "Bank Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Fixed Asset)) "Fixed Asset";
                                                   CaptionML=[ENU=Bal. Account No.;
                                                              RUS=Номер баланс. счета] }
    { 53  ;   ;Transaction No.     ;Integer       ;CaptionML=[ENU=Transaction No.;
                                                              RUS=Номер транзакции] }
    { 54  ;   ;Closed by Amount (LCY);Decimal     ;CaptionML=[ENU=Closed by Amount (LCY);
                                                              RUS=Закрыто суммой (руб.)];
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,21,54' }
    { 58  ;   ;Debit Amount        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Debit Amount" WHERE (Ledger Entry Amount=CONST(Yes),
                                                                                                                      Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                                      Posting Date=FIELD(Date Filter),
                                                                                                                      Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Debit Amount;
                                                              RUS=Сумма по дебету];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 59  ;   ;Credit Amount       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Credit Amount" WHERE (Ledger Entry Amount=CONST(Yes),
                                                                                                                       Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                                       Posting Date=FIELD(Date Filter),
                                                                                                                       Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Credit Amount;
                                                              RUS=Сумма по кредиту];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 60  ;   ;Debit Amount (LCY)  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Debit Amount (LCY)" WHERE (Ledger Entry Amount=CONST(Yes),
                                                                                                                            Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                                            Posting Date=FIELD(Date Filter),
                                                                                                                            Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Debit Amount (LCY);
                                                              RUS=Сумма по дебету (руб.)];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,21,60' }
    { 61  ;   ;Credit Amount (LCY) ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Credit Amount (LCY)" WHERE (Ledger Entry Amount=CONST(Yes),
                                                                                                                             Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                                             Posting Date=FIELD(Date Filter),
                                                                                                                             Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Credit Amount (LCY);
                                                              RUS=Сумма по кредиту (руб.)];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,21,61' }
    { 62  ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              RUS=Дата документа] }
    { 63  ;   ;External Document No.;Code35       ;CaptionML=[ENU=External Document No.;
                                                              RUS=Номер внешнего документа] }
    { 64  ;   ;Calculate Interest  ;Boolean       ;CaptionML=[ENU=Calculate Interest;
                                                              RUS=Вычислить процент] }
    { 65  ;   ;Closing Interest Calculated;Boolean;CaptionML=[ENU=Closing Interest Calculated;
                                                              RUS=Закрывающий процент вычислен] }
    { 66  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              RUS=Серия номеров] }
    { 67  ;   ;Closed by Currency Code;Code10     ;TableRelation=Currency;
                                                   CaptionML=[ENU=Closed by Currency Code;
                                                              RUS=Закрыто кодом валюты] }
    { 68  ;   ;Closed by Currency Amount;Decimal  ;AccessByPermission=TableData 4=R;
                                                   CaptionML=[ENU=Closed by Currency Amount;
                                                              RUS=Закрыто суммой в валюте];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Closed by Currency Code" }
    { 73  ;   ;Adjusted Currency Factor;Decimal   ;CaptionML=[ENU=Adjusted Currency Factor;
                                                              RUS=Скоррект. коэффициент курса валюты];
                                                   DecimalPlaces=0:15 }
    { 74  ;   ;Original Currency Factor;Decimal   ;CaptionML=[ENU=Original Currency Factor;
                                                              RUS=Исходный коэффициент курса валюты];
                                                   DecimalPlaces=0:15 }
    { 75  ;   ;Original Amount     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Cust. Ledger Entry No.=FIELD(Entry No.),
                                                                                                              Entry Type=FILTER(Initial Entry),
                                                                                                              Posting Date=FIELD(Date Filter),
                                                                                                              Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Original Amount;
                                                              RUS=Исходная сумма];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 76  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              RUS=Фильтр по дате] }
    { 77  ;   ;Remaining Pmt. Disc. Possible;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                                CALCFIELDS(Amount,"Original Amount");

                                                                IF "Remaining Pmt. Disc. Possible" * Amount < 0 THEN
                                                                  FIELDERROR("Remaining Pmt. Disc. Possible",STRSUBSTNO(Text000,FIELDCAPTION(Amount)));

                                                                IF ABS("Remaining Pmt. Disc. Possible") > ABS("Original Amount") THEN
                                                                  FIELDERROR("Remaining Pmt. Disc. Possible",STRSUBSTNO(Text001,FIELDCAPTION("Original Amount")));
                                                              END;

                                                   CaptionML=[ENU=Remaining Pmt. Disc. Possible;
                                                              RUS=Возможный остаток скидки оплаты];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 78  ;   ;Pmt. Disc. Tolerance Date;Date     ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=[ENU=Pmt. Disc. Tolerance Date;
                                                              RUS=Дата отклонения скидки оплаты] }
    { 79  ;   ;Max. Payment Tolerance;Decimal     ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                                CALCFIELDS(Amount,"Remaining Amount");

                                                                IF "Max. Payment Tolerance" * Amount < 0 THEN
                                                                  FIELDERROR("Max. Payment Tolerance",STRSUBSTNO(Text000,FIELDCAPTION(Amount)));

                                                                IF ABS("Max. Payment Tolerance") > ABS("Remaining Amount") THEN
                                                                  FIELDERROR("Max. Payment Tolerance",STRSUBSTNO(Text001,FIELDCAPTION("Remaining Amount")));
                                                              END;

                                                   CaptionML=[ENU=Max. Payment Tolerance;
                                                              RUS=Макс. отклонение в оплате];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 80  ;   ;Last Issued Reminder Level;Integer ;CaptionML=[ENU=Last Issued Reminder Level;
                                                              RUS=Уровень последнего учтенного напоминания] }
    { 81  ;   ;Accepted Payment Tolerance;Decimal ;CaptionML=[ENU=Accepted Payment Tolerance;
                                                              RUS=Принятое отклонение в оплате];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 82  ;   ;Accepted Pmt. Disc. Tolerance;Boolean;
                                                   CaptionML=[ENU=Accepted Pmt. Disc. Tolerance;
                                                              RUS=Принятое отклонение в скидках оплаты] }
    { 83  ;   ;Pmt. Tolerance (LCY);Decimal       ;CaptionML=[ENU=Pmt. Tolerance (LCY);
                                                              RUS=Отклонение в оплате (руб.)];
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,21,83' }
    { 84  ;   ;Amount to Apply     ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                                CALCFIELDS("Remaining Amount");

                                                                IF "Amount to Apply" * "Remaining Amount" < 0 THEN
                                                                  FIELDERROR("Amount to Apply",STRSUBSTNO(Text000,FIELDCAPTION("Remaining Amount")));

                                                                IF ABS("Amount to Apply") > ABS("Remaining Amount") THEN
                                                                  FIELDERROR("Amount to Apply",STRSUBSTNO(Text001,FIELDCAPTION("Remaining Amount")));
                                                              END;

                                                   CaptionML=[ENU=Amount to Apply;
                                                              RUS=Сумма для применения];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 85  ;   ;IC Partner Code     ;Code20        ;TableRelation="IC Partner";
                                                   CaptionML=[ENU=IC Partner Code;
                                                              RUS=Код МФ-партнера] }
    { 86  ;   ;Applying Entry      ;Boolean       ;CaptionML=[ENU=Applying Entry;
                                                              RUS=Применение операции] }
    { 87  ;   ;Reversed            ;Boolean       ;CaptionML=[ENU=Reversed;
                                                              RUS=Сторнировано];
                                                   BlankZero=Yes }
    { 88  ;   ;Reversed by Entry No.;Integer      ;TableRelation="Cust. Ledger Entry";
                                                   CaptionML=[ENU=Reversed by Entry No.;
                                                              RUS=Номер сторнирующей операции];
                                                   BlankZero=Yes }
    { 89  ;   ;Reversed Entry No.  ;Integer       ;TableRelation="Cust. Ledger Entry";
                                                   CaptionML=[ENU=Reversed Entry No.;
                                                              RUS=Номер сторнированной операции];
                                                   BlankZero=Yes }
    { 90  ;   ;Prepayment          ;Boolean       ;CaptionML=[ENU=Prepayment;
                                                              RUS=Предоплата] }
    { 172 ;   ;Payment Method Code ;Code10        ;TableRelation="Payment Method";
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=[ENU=Payment Method Code;
                                                              RUS=Код способа оплаты] }
    { 173 ;   ;Applies-to Ext. Doc. No.;Code35    ;CaptionML=[ENU=Applies-to Ext. Doc. No.;
                                                              RUS=Применяемый внешний номер документа] }
    { 288 ;   ;Recipient Bank Account;Code10      ;TableRelation="Customer Bank Account".Code WHERE (Customer No.=FIELD(Customer No.));
                                                   CaptionML=[ENU=Recipient Bank Account;
                                                              RUS=Банковский счет получателя] }
    { 289 ;   ;Message to Recipient;Text140       ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=[ENU=Message to Recipient;
                                                              RUS=Сообщение получателю] }
    { 290 ;   ;Exported to Payment File;Boolean   ;CaptionML=[ENU=Exported to Payment File;
                                                              RUS=Экспортировано в файл платежей];
                                                   Editable=No }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              RUS=Код набора измерений];
                                                   Editable=No }
    { 1200;   ;Direct Debit Mandate ID;Code35     ;TableRelation="SEPA Direct Debit Mandate" WHERE (Customer No.=FIELD(Customer No.));
                                                   CaptionML=[ENU=Direct Debit Mandate ID;
                                                              RUS=Идентификатор поручения на прямое дебетование] }
    { 12401;  ;Prepmt. Diff. Appln. Entry No.;Integer;
                                                   OnValidate=VAR
                                                                DtldCustLedgEntry@1210000 : Record 379;
                                                              BEGIN
                                                                IF "Prepmt. Diff. Appln. Entry No." > 0 THEN
                                                                  IF DtldCustLedgEntry.GET("Prepmt. Diff. Appln. Entry No.") THEN
                                                                    "Prepmt. Diff. Cust. Entry No." := DtldCustLedgEntry."Cust. Ledger Entry No.";
                                                              END;

                                                   CaptionML=[ENU=Prepmt. Diff. Appln. Entry No.;
                                                              RUS=Ном. операции примен. для предоплаты разн.];
                                                   Editable=No }
    { 12402;  ;Prepmt. Diff. Cust. Entry No.;Integer;
                                                   CaptionML=[ENU=Prepmt. Diff. Cust. Entry No.;
                                                              RUS=Ном. опер. предоп. разн. клиента] }
    { 12425;  ;Prepayment Document No.;Code20     ;CaptionML=[ENU=Prepayment Document No.;
                                                              RUS=Номер документа предоплаты] }
    { 12426;  ;Prepayment Status   ;Option        ;CaptionML=[ENU=Prepayment Status;
                                                              RUS=Статус предоплаты];
                                                   OptionCaptionML=[ENU=" ,Set,Reset";
                                                                    RUS=" ,Постановка,Снятие"];
                                                   OptionString=[ ,Set,Reset] }
    { 12445;  ;VAT Entry Type      ;Code15        ;OnValidate=VAR
                                                                VATEntryType@1210000 : Record 14949;
                                                              BEGIN
                                                                VATEntryType.UpdateSalesVATEntryType(Rec);
                                                              END;

                                                   OnLookup=VAR
                                                              VATEntryType@1210000 : Record 14949;
                                                            BEGIN
                                                              VATEntryType.LookupSetOfVATEntryCodes("VAT Entry Type");
                                                            END;

                                                   CaptionML=[ENU=VAT Entry Type;
                                                              RUS=Тип операции НДС] }
    { 12485;  ;VAT Adjusted        ;Boolean       ;CaptionML=[ENU=VAT Adjusted;
                                                              RUS=НДС скорректирован];
                                                   Editable=No }
    { 12490;  ;Agreement No.       ;Code20        ;TableRelation="Customer Agreement".No. WHERE (Customer No.=FIELD(Customer No.));
                                                   CaptionML=[ENU=Agreement No.;
                                                              RUS=Номер договора] }
    { 50001;  ;Agreement Condition No.;Integer    ;TableRelation="Agreement Detail"."Condition No." WHERE (Source Type=CONST(Customer),
                                                                                                           Source No.=FIELD(Customer No.),
                                                                                                           Agreement No.=FIELD(Agreement No.));
                                                   CaptionML=[ENU=Agreement Condition No.;
                                                              RUS=Договор Условие Но.];
                                                   Description=NC MLN03 EB }
    { 50002;  ;Amount Type         ;Option        ;CaptionML=[ENU=Amount Type;
                                                              RUS=Тип Суммы];
                                                   OptionCaptionML=[ENU=" ,Principal,Interest,Reserve,Reserve%";
                                                                    RUS=" ,Основная сумма,Проценты,Резерв,Резерв%"];
                                                   OptionString=[ ,Principal,Interest,Reserve,Reserve%];
                                                   Description=NC MLN03 EB,NCS-1268 }
    { 50003;  ;External System ID  ;Code2         ;TableRelation="External System";
                                                   CaptionML=[ENU=External System ID;
                                                              RUS=Внешняя Система ID];
                                                   Description=NC MTD02 AIG }
    { 50004;  ;Interest Calc. No. of Days;Integer ;CaptionML=[ENU=Interest Calc. No. of Days;
                                                              RUS=Расчет Проценты Кол. Дней];
                                                   Description=NC MLN09 DP }
    { 50005;  ;Change Condition Block Status;Boolean;
                                                   CaptionML=[ENU=Change Condition Block Status;
                                                              RUS=Изменить Блокировка Условие Статус];
                                                   Description=NC MLN09.3 DP }
    { 50007;  ;Interest Accrual    ;Boolean       ;CaptionML=[ENU=Interest Accrual;
                                                              RUS=Проценты Начисление];
                                                   Description=NC APCOC56 }
    { 50010;  ;Local G/L Account   ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("G/L Entry"."Local G/L Account" WHERE (Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=Local G/L Account;
                                                              RUS=Локальный Фин. Счет Но.];
                                                   Description=NC OAM39 DP;
                                                   Editable=No }
    { 50015;  ;Business Unit Code  ;Code20        ;TableRelation="Business Unit";
                                                   CaptionML=[ENU=Business Unit Code;
                                                              RUS=Код Филиала];
                                                   Description=NCS-1893 PCH }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Customer No.,Posting Date,Currency Code,Agreement No.;
                                                   SumIndexFields=Sales (LCY),Profit (LCY),Inv. Discount (LCY) }
    { No ;Customer No.,Currency Code,Posting Date  }
    {    ;Document No.,Document Type,Customer No.  }
    {    ;External Document No.                    }
    {    ;Customer No.,Open,Positive,Due Date,Currency Code }
    {    ;Open,Due Date                            }
    {    ;Document Type,Customer No.,Posting Date,Currency Code;
                                                   SumIndexFields=Sales (LCY),Profit (LCY),Inv. Discount (LCY);
                                                   MaintainSQLIndex=No;
                                                   MaintainSIFTIndex=No }
    {    ;Salesperson Code,Posting Date            }
    {    ;Closed by Entry No.                      }
    {    ;Transaction No.                          }
    { No ;Customer No.,Open,Positive,Calculate Interest,Due Date }
    { No ;Customer No.,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date,Currency Code,Agreement No.;
                                                   SumIndexFields=Sales (LCY),Profit (LCY),Inv. Discount (LCY) }
    { No ;Customer No.,Open,Global Dimension 1 Code,Global Dimension 2 Code,Positive,Due Date,Currency Code }
    { No ;Open,Global Dimension 1 Code,Global Dimension 2 Code,Due Date }
    { No ;Document Type,Customer No.,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date,Currency Code }
    {    ;Customer No.,Applies-to ID,Open,Positive,Due Date }
    {    ;Prepmt. Diff. Cust. Entry No.,Prepmt. Diff. Appln. Entry No. }
    {    ;Document Type,Posting Date              ;SumIndexFields=Sales (LCY) }
    {    ;Customer No.,Agreement No.,Posting Date  }
    {    ;Customer No.,Agreement No.,Agreement Condition No.,Amount Type,Posting Date,Positive,Currency Code,Customer Posting Group,Open }
    {    ;Customer No.,Customer Posting Group,Global Dimension 1 Code,Global Dimension 2 Code,Agreement No.,Prepayment }
    {    ;Customer No.,Posting Date,Currency Code,Agreement No.,Open,Customer Posting Group,Positive,Agreement Condition No. }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Entry No.,Description,Customer No.,Posting Date,Document Type,Document No. }
    { 2   ;Brick               ;Document No.,Description,Remaining Amt. (LCY),Due Date }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=must have the same sign as %1;RUS=должно иметь такой же знак, как %1';
      Text001@1001 : TextConst 'ENU=must not be larger than %1;RUS=не должно быть больше %1';

    PROCEDURE ShowDoc@7() : Boolean;
    VAR
      SalesInvoiceHdr@1003 : Record 112;
      SalesCrMemoHdr@1002 : Record 114;
      ServiceInvoiceHeader@1000 : Record 5992;
      ServiceCrMemoHeader@1001 : Record 5994;
    BEGIN
      CASE "Document Type" OF
        "Document Type"::Invoice:
          BEGIN
            IF SalesInvoiceHdr.GET("Document No.") THEN BEGIN
              PAGE.RUN(PAGE::"Posted Sales Invoice",SalesInvoiceHdr);
              EXIT(TRUE);
            END;
            IF ServiceInvoiceHeader.GET("Document No.") THEN BEGIN
              PAGE.RUN(PAGE::"Posted Service Invoice",ServiceInvoiceHeader);
              EXIT(TRUE);
            END;
          END;
        "Document Type"::"Credit Memo":
          BEGIN
            IF SalesCrMemoHdr.GET("Document No.") THEN BEGIN
              PAGE.RUN(PAGE::"Posted Sales Credit Memo",SalesCrMemoHdr);
              EXIT(TRUE);
            END;
            IF ServiceCrMemoHeader.GET("Document No.") THEN BEGIN
              PAGE.RUN(PAGE::"Posted Service Credit Memo",ServiceCrMemoHeader);
              EXIT(TRUE);
            END;
          END;
      END;
    END;

    PROCEDURE DrillDownOnEntries@1(VAR DtldCustLedgEntry@1000 : Record 379);
    VAR
      CustLedgEntry@1001 : Record 21;
    BEGIN
      CustLedgEntry.RESET;
      DtldCustLedgEntry.COPYFILTER("Customer No.",CustLedgEntry."Customer No.");
      DtldCustLedgEntry.COPYFILTER("Currency Code",CustLedgEntry."Currency Code");
      DtldCustLedgEntry.COPYFILTER("Initial Entry Global Dim. 1",CustLedgEntry."Global Dimension 1 Code");
      DtldCustLedgEntry.COPYFILTER("Initial Entry Global Dim. 2",CustLedgEntry."Global Dimension 2 Code");
      DtldCustLedgEntry.COPYFILTER("Agreement No.",CustLedgEntry."Agreement No.");
      CustLedgEntry.SETCURRENTKEY("Customer No.","Posting Date");
      CustLedgEntry.SETRANGE(Open,TRUE);
      PAGE.RUN(0,CustLedgEntry);
    END;

    PROCEDURE DrillDownOnOverdueEntries@4(VAR DtldCustLedgEntry@1000 : Record 379);
    VAR
      CustLedgEntry@1001 : Record 21;
    BEGIN
      CustLedgEntry.RESET;
      DtldCustLedgEntry.COPYFILTER("Customer No.",CustLedgEntry."Customer No.");
      DtldCustLedgEntry.COPYFILTER("Currency Code",CustLedgEntry."Currency Code");
      DtldCustLedgEntry.COPYFILTER("Initial Entry Global Dim. 1",CustLedgEntry."Global Dimension 1 Code");
      DtldCustLedgEntry.COPYFILTER("Initial Entry Global Dim. 2",CustLedgEntry."Global Dimension 2 Code");
      DtldCustLedgEntry.COPYFILTER("Agreement No.",CustLedgEntry."Agreement No.");
      CustLedgEntry.SETCURRENTKEY("Customer No.","Posting Date");
      CustLedgEntry.SETFILTER("Date Filter",'..%1',WORKDATE);
      CustLedgEntry.SETFILTER("Due Date",'<%1',WORKDATE);
      CustLedgEntry.SETFILTER("Remaining Amount",'<>%1',0);
      PAGE.RUN(0,CustLedgEntry);
    END;

    PROCEDURE GetOriginalCurrencyFactor@2() : Decimal;
    BEGIN
      IF "Original Currency Factor" = 0 THEN
        EXIT(1);
      EXIT("Original Currency Factor");
    END;

    PROCEDURE ShowDimensions@3();
    VAR
      DimMgt@1000 : Codeunit 408;
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"Entry No."));
    END;

    PROCEDURE SetStyle@5() : Text;
    BEGIN
      IF Open THEN BEGIN
        IF WORKDATE > "Due Date" THEN
          EXIT('Unfavorable')
      END ELSE
        IF "Closed at Date" > "Due Date" THEN
          EXIT('Attention');
      EXIT('');
    END;

    PROCEDURE CopyFromGenJnlLine@6(GenJnlLine@1000 : Record 81);
    BEGIN
      "Customer No." := GenJnlLine."Account No.";
      "Posting Date" := GenJnlLine."Posting Date";
      "Document Date" := GenJnlLine."Document Date";
      "Document Type" := GenJnlLine."Document Type";
      "Document No." := GenJnlLine."Document No.";
      "External Document No." := GenJnlLine."External Document No.";
      Description := GenJnlLine.Description;
      "Currency Code" := GenJnlLine."Currency Code";
      "Sales (LCY)" := GenJnlLine."Sales/Purch. (LCY)";
      "Profit (LCY)" := GenJnlLine."Profit (LCY)";
      "Inv. Discount (LCY)" := GenJnlLine."Inv. Discount (LCY)";
      "Sell-to Customer No." := GenJnlLine."Sell-to/Buy-from No.";
      "Customer Posting Group" := GenJnlLine."Posting Group";
      "Global Dimension 1 Code" := GenJnlLine."Shortcut Dimension 1 Code";
      "Global Dimension 2 Code" := GenJnlLine."Shortcut Dimension 2 Code";
      "Dimension Set ID" := GenJnlLine."Dimension Set ID";
      "Salesperson Code" := GenJnlLine."Salespers./Purch. Code";
      "Source Code" := GenJnlLine."Source Code";
      "On Hold" := GenJnlLine."On Hold";
      "Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type";
      "Applies-to Doc. No." := GenJnlLine."Applies-to Doc. No.";
      "Due Date" := GenJnlLine."Due Date";
      "Pmt. Discount Date" := GenJnlLine."Pmt. Discount Date";
      "Applies-to ID" := GenJnlLine."Applies-to ID";
      "Journal Batch Name" := GenJnlLine."Journal Batch Name";
      "Reason Code" := GenJnlLine."Reason Code";
      "Direct Debit Mandate ID" := GenJnlLine."Direct Debit Mandate ID";
      "User ID" := USERID;
      "Bal. Account Type" := GenJnlLine."Bal. Account Type";
      "Bal. Account No." := GenJnlLine."Bal. Account No.";
      "No. Series" := GenJnlLine."Posting No. Series";
      "IC Partner Code" := GenJnlLine."IC Partner Code";
      Prepayment := GenJnlLine.Prepayment;
      "Recipient Bank Account" := GenJnlLine."Recipient Bank Account";
      "Message to Recipient" := GenJnlLine."Message to Recipient";
      "Applies-to Ext. Doc. No." := GenJnlLine."Applies-to Ext. Doc. No.";
      "Payment Method Code" := GenJnlLine."Payment Method Code";
      "Exported to Payment File" := GenJnlLine."Exported to Payment File";
      "Prepayment Status" := GenJnlLine."Prepayment Status";
      "Agreement No." := GenJnlLine."Agreement No.";
      "VAT Entry Type" := GenJnlLine."VAT Entry Type";

      OnAfterCopyCustLedgerEntryFromGenJnlLine(Rec,GenJnlLine);
    END;

    PROCEDURE CopyFromCVLedgEntryBuffer@10(VAR CVLedgerEntryBuffer@1000 : Record 382);
    BEGIN
      TRANSFERFIELDS(CVLedgerEntryBuffer);
      Amount := CVLedgerEntryBuffer.Amount;
      "Amount (LCY)" := CVLedgerEntryBuffer."Amount (LCY)";
      "Remaining Amount" := CVLedgerEntryBuffer."Remaining Amount";
      "Remaining Amt. (LCY)" := CVLedgerEntryBuffer."Remaining Amt. (LCY)";
      "Original Amount" := CVLedgerEntryBuffer."Original Amount";
      "Original Amt. (LCY)" := CVLedgerEntryBuffer."Original Amt. (LCY)";
      VALIDATE("Prepmt. Diff. Appln. Entry No.",CVLedgerEntryBuffer."Prepmt. Diff. Appln. Entry No.");
    END;

    PROCEDURE RecalculateAmounts@26(FromCurrencyCode@1001 : Code[10];ToCurrencyCode@1002 : Code[10];PostingDate@1003 : Date);
    VAR
      CurrExchRate@1004 : Record 330;
    BEGIN
      IF ToCurrencyCode = FromCurrencyCode THEN
        EXIT;

      "Remaining Amount" :=
        CurrExchRate.ExchangeAmount("Remaining Amount",FromCurrencyCode,ToCurrencyCode,PostingDate);
      "Remaining Pmt. Disc. Possible" :=
        CurrExchRate.ExchangeAmount("Remaining Pmt. Disc. Possible",FromCurrencyCode,ToCurrencyCode,PostingDate);
      "Accepted Payment Tolerance" :=
        CurrExchRate.ExchangeAmount("Accepted Payment Tolerance",FromCurrencyCode,ToCurrencyCode,PostingDate);
      "Amount to Apply" :=
        CurrExchRate.ExchangeAmount("Amount to Apply",FromCurrencyCode,ToCurrencyCode,PostingDate);
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterCopyCustLedgerEntryFromGenJnlLine@8(VAR CustLedgerEntry@1000 : Record 21;VAR GenJournalLine@1001 : Record 81);
    BEGIN
    END;

    PROCEDURE SetAgreementNo@1000000003(VAR CLE@1000000010 : Record 21);
    VAR
      GJTemplate@1000000004 : Record 80;
      GJBatch@1000000003 : Record 232;
      GJLine@1000000000 : Record 81;
      GJLineForm@1000000001 : Page 39;
      AgreeDetailForm@1101495003 : Page 50167;
      StandardParam@1000000002 : Record 50076;
      LineNo@1000000005 : Integer;
      CustAgree@1000000006 : Record 14902;
      AgreeDetail@1000000007 : Record 50096;
      CustAgreeForm@1000000008 : Page 14900;
      Selected@1000000013 : Integer;
      SelectedCustNo@1000000014 : Code[20];
      DimMgt@1101495000 : Codeunit 408;
      TempDimSetEntry@1101495001 : TEMPORARY Record 480;
      TempDimSetEntry2@1101495002 : TEMPORARY Record 480;
    BEGIN
      // BMN 17.09.2010 Изменение номера договора в учтенных операциях путем создания и учета в финжурнале
      // обратной операции и операции с новым кодом договора.

      // Пишем в финжурнал:
      // 1. Обратная операция
      // 2. Новая операция
      // 3. Копируем измерения из старой операции в новую

      //Selected := STRMENU('Привязать и открыть журнал,Привязать и учесть автоматически', 1);
      Selected := STRMENU('Привязать,Привязать и учесть автоматически', 1);
      IF Selected = 0 THEN
        EXIT;

      IF CLE.ISEMPTY THEN
        ERROR('Выберите записи!');

      CLE.SETRANGE(Open, TRUE);
      IF CLE.ISEMPTY THEN
        ERROR('Изменение договора возможно только в открытых операциях!');

      CLE.FIND('+');
      SelectedCustNo := CLE."Customer No.";
      REPEAT
        IF CLE."Customer No." <> SelectedCustNo THEN
          ERROR('Выберите операции для одного клиента!');
      UNTIL CLE.NEXT(-1) = 0;

      IF NOT GJTemplate.GET('GENJL') THEN BEGIN
        GJTemplate.INIT;
        GJTemplate.Name := 'GENJL';
        GJTemplate.Description := 'Общий шаблон';
        GJTemplate."Source Code" := 'ФИНЖУР';
        GJTemplate."Force Doc. Balance" := TRUE;
        GJTemplate.INSERT(TRUE);
        COMMIT;
      END;

      IF NOT GJBatch.GET('GENJL', 'SETAGREE') THEN BEGIN
        GJBatch."Journal Template Name" := 'GENJL';
        GJBatch.Name := 'SETAGREE';
        GJBatch.Description := 'Журнал для привязки операций к договору';
        GJBatch.INSERT(TRUE);
        COMMIT;
      END;

      GJLine.RESET;
      GJLine.SETRANGE("Journal Template Name", 'GENJL');
      GJLine.SETRANGE("Journal Batch Name", 'SETAGREE');

      LineNo := 0;
      IF GJLine.FINDLAST THEN
        LineNo := GJLine."Line No.";

      CustAgree.RESET;
      CustAgree.SETRANGE("Customer No.", CLE."Customer No.");
      CustAgree.SETRANGE("Agreement Type", CustAgree."Agreement Type"::Loans);
      CustAgreeForm.SETTABLEVIEW(CustAgree);
      CustAgreeForm.LOOKUPMODE(TRUE);
      IF CustAgreeForm.RUNMODAL = ACTION::LookupOK THEN
        CustAgreeForm.GETRECORD(CustAgree)
      ELSE
        EXIT;

      AgreeDetail.RESET;
      AgreeDetail.SETRANGE("Source Type", AgreeDetail."Source Type"::Customer);
      AgreeDetail.SETRANGE("Source No.", CustAgree."Customer No.");
      AgreeDetail.SETRANGE("Agreement No.", CustAgree."No.");
      AgreeDetail.SETRANGE("Agreement Type", AgreeDetail."Agreement Type"::Loans);
      IF AgreeDetail.FINDFIRST THEN BEGIN
        AgreeDetailForm.SETTABLEVIEW(AgreeDetail);
        AgreeDetailForm.LOOKUPMODE(TRUE);
        IF AgreeDetailForm.RUNMODAL = ACTION::LookupOK THEN
          AgreeDetailForm.GETRECORD(AgreeDetail)
        ELSE
          EXIT;
      END ELSE
        AgreeDetail.INIT;

      REPEAT
        CLE.CALCFIELDS(Amount, "Amount (LCY)");

        LineNo += 1000;                 // Обратная операция
        GJLine.INIT;
        GJLine."Journal Template Name" := GJBatch."Journal Template Name";
        GJLine."Journal Batch Name" := GJBatch.Name;
        GJLine."Line No." := LineNo;
        GJLine."Account Type" := GJLine."Account Type"::Customer;
        GJLine."Account No." := CLE."Customer No.";
        GJLine."Posting Date" := CLE."Posting Date";
        GJLine."Document Type" := 0;
        GJLine."Document No." := CLE."Document No.";
        GJLine."Document Date" := CLE."Document Date";
        GJLine."External Document No." := CLE."External Document No.";
        GJLine.Description := 'Обратная операция';
        GJLine."Currency Code" := CLE."Currency Code";

        GJLine."Currency Factor" := CLE."Original Currency Factor";  // ???  или Adjusted Curr Factor?
        GJLine.VALIDATE(Amount, - CLE.Amount);
        GJLine.VALIDATE("Amount (LCY)", - CLE."Amount (LCY)");

        GJLine."Amount Type" := CLE."Amount Type";      // TD BMN 28.08.2012

        GJLine."Posting Group" := CLE."Customer Posting Group";
        GJLine."Shortcut Dimension 1 Code" := CLE."Global Dimension 1 Code";
        GJLine."Shortcut Dimension 2 Code" := CLE."Global Dimension 2 Code";
        GJLine."Salespers./Purch. Code" := CLE."Salesperson Code";
        GJLine."Source Code" := CLE."Source Code";
        GJLine.Quantity := 1;
        GJLine."Agreement No." := CLE."Agreement No.";
        GJLine."Agreement Condition No." := CLE."Agreement Condition No.";
        GJLine."Applies-to Doc. No." := CLE."Document No.";
        //NC NOS-26 > SPA
        DimMgt.UpdateGenJnlLineDim(GJLine, CLE."Dimension Set ID");
        //NC NOS-26 < SPA
        GJLine.INSERT(TRUE);

        LineNo += 1000;                 //  Новая операция
        GJLine.INIT;
        GJLine."Journal Template Name" := GJBatch."Journal Template Name";
        GJLine."Journal Batch Name" := GJBatch.Name;
        GJLine."Line No." := LineNo;
        GJLine."Account Type" := GJLine."Account Type"::Customer;
        GJLine."Account No." := CLE."Customer No.";
        GJLine."Posting Date" := CLE."Posting Date";
        GJLine."Document Type" := 0;
        GJLine."Document No." := CLE."Document No.";
        GJLine."Document Date" := CLE."Document Date";
        GJLine."External Document No." := CLE."External Document No.";
        GJLine.Description := CLE.Description;
        GJLine."Currency Code" := CLE."Currency Code";

        GJLine."Currency Factor" := CLE."Original Currency Factor";
        GJLine.VALIDATE(Amount, CLE.Amount);
        GJLine.VALIDATE("Amount (LCY)", CLE."Amount (LCY)");

        GJLine."Amount Type" := CLE."Amount Type";      // TD BMN 28.08.2012

        GJLine."Posting Group" := CLE."Customer Posting Group";
        GJLine."Shortcut Dimension 1 Code" := CLE."Global Dimension 1 Code";
        GJLine."Shortcut Dimension 2 Code" := CLE."Global Dimension 2 Code";
        GJLine."Salespers./Purch. Code" := CLE."Salesperson Code";
        GJLine."Source Code" := CLE."Source Code";
        GJLine.Quantity := 1;

        GJLine."Agreement No." := CustAgree."No.";
        GJLine."Agreement Condition No." := AgreeDetail."Condition No.";
        //NC NOS-26 > SPA
        DimMgt.GetDimensionSet(TempDimSetEntry, CLE."Dimension Set ID");
        DimMgt.GetDimensionSet(TempDimSetEntry2, 0);
        IF TempDimSetEntry.FINDSET THEN
          REPEAT
            TempDimSetEntry2.VALIDATE("Dimension Code", TempDimSetEntry."Dimension Code");
            IF TempDimSetEntry2.FIND THEN
              TempDimSetEntry2.DELETE;
            IF TempDimSetEntry."Dimension Code" = 'DEAL' THEN
              TempDimSetEntry2.VALIDATE("Dimension Value Code", CustAgree."No.")
            ELSE
              TempDimSetEntry2.VALIDATE("Dimension Value Code", TempDimSetEntry."Dimension Value Code");
            TempDimSetEntry2.SetObject(GJLine);
            TempDimSetEntry2.INSERT(TRUE);
          UNTIL TempDimSetEntry.NEXT = 0;
        DimMgt.UpdateGenJnlLineDim(GJLine,DimMgt.GetDimensionSetID(TempDimSetEntry2));
        //NC NOS-26 < SPA
        GJLine.INSERT(TRUE);
      UNTIL CLE.NEXT = 0;

      COMMIT;

      CASE Selected OF
       1:
          MESSAGE('Сформирован фин. журнал в разделе "SETAGREE"!');

       2: BEGIN
            CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post", GJLine);
            IF GJLine.FINDFIRST THEN BEGIN
              GJLineForm.SETTABLEVIEW(GJLine);
              GJLineForm.RUN;
            END;
          END;
      END;
    END;

    BEGIN
    {
      NC OT Добавлен ключ Customer No.,Agreement No.,Posting Date
      NC MLN03 EB добавлены поля "Agreement Condition No.", "Amount Type"
      NC MTD02 AIG Добавлено новое поле
      NC MLN09 DP Добавлено поле "Interest Calc. No. of Days"
      NC MLN09.03 DP Добавлено поле "Change Condition Block Status"
      NC OAM22 DP Изменено свойство Caption Class полей ..(LCY)
      NC OAM39 DP Добавлено поле-ссылка "Local G/L Account"
      NC OAM38 DP Изменен триггер OnDelete
      NC S1055 PCH дополнен ключ: Customer No.,Agreement No.,Agreement Condition No.,Amount Type,Posting Date,
                   полями: Positive,Currency Code,Customer Posting Group,Open
      -----------------------------
      NC BLD01 DP Создан билд по модификациям MTD02,MLN09.3,OAM22,OAM39,OAM38,APCOC56
      NC NCS-1108 DP Изменен CaptionClass для полей "Sales (LCY)", "Profit (LCY)"
      NC NCS-1268 DP Изменен OptionString поля "Amount Type"
      NC S-1893 PCH добавлено поле "Business Unit Code"
      -----------------------------
      NC MR2017 SPA Доработка кода при переносе на NAV2017
                    Кастомизации триггеров таблицы перенесены в CU 50085
                    Функция SetAgreementNo перенесена из страницы 25
    }
    END.
  }
}

