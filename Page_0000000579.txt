OBJECT Page 579 Post Application
{
  OBJECT-PROPERTIES
  {
    Date=31.05.17;
    Time=17:59:47;
    Modified=Yes;
    Version List=NAVW110.00,NAVRU10.00,NOS-26;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Post Application;
               RUS=Учет применения];
    PageType=StandardDialog;
    OnInit=BEGIN
             //NC TR269 > EB
             CommonPosNegDim := TRUE;
             //NC TR269 < EB
           END;

    OnOpenPage=BEGIN
                 //NC TR269 > EB
                 IF KontractorType = KontractorType::Customer THEN BEGIN
                   ColumnDimPos := DimSelectionBuf.GetDimSelectionText(2,PAGE::"Post Customer Application",'');
                   ColumnDimNeg := DimSelectionBuf.GetDimSelectionText(2,-PAGE::"Post Customer Application",'');
                 END;
                 IF KontractorType = KontractorType::Vendor THEN BEGIN
                   ColumnDimPos := DimSelectionBuf.GetDimSelectionText(2,PAGE::"Post Vendor Application",'');
                   ColumnDimNeg := DimSelectionBuf.GetDimSelectionText(2,-PAGE::"Post Vendor Application",'');
                 END;
                 //NC TR269 < EB
               END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 3   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           RUS=Общее] }

    { 4   ;2   ;Field     ;
                CaptionML=[ENU=Document No.;
                           RUS=Номер документа];
                ToolTipML=[ENU=Specifies the document number of the entry to be applied.;
                           RUS=Определяет номер документа применяемой операции.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DocNo }

    { 1210000;2;Field     ;
                CaptionML=[ENU=External Document No.;
                           RUS=Номер внешнего документа];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ExternalNo }

    { 7   ;2   ;Field     ;
                CaptionML=[ENU=Posting Date;
                           RUS=Дата учета];
                ToolTipML=[ENU=Specifies the posting date of the entry to be applied.;
                           RUS=Определяет дату учета применяемой операции.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PostingDate }

    { 1101495000;2;Field  ;
                CaptionML=[ENU=Common Dimensions for Pos&Neg;
                           RUS=Общие измерения для Полож. и Отриц. Разн.];
                SourceExpr=CommonPosNegDim }

    { 1101495001;2;Field  ;
                CaptionML=[ENU=Dimensions for Positive;
                           RUS=Измерения для Положительных];
                SourceExpr=ColumnDimPos;
                Editable=FALSE;
                OnAssistEdit=VAR
                               varCopySelectedFlag@1101495000 : Boolean;
                             BEGIN
                               //NC TR269 > EB
                               varCopySelectedFlag := DimSelectionBuf.GetCopySelected;
                               DimSelectionBuf.SetCopySelected(CommonPosNegDim);

                               IF KontractorType = KontractorType::Customer THEN
                                 DimSelectionBuf.SetDimSelectionChange(2,PAGE::"Post Customer Application",ColumnDimPos);
                               IF KontractorType = KontractorType::Vendor THEN
                                 DimSelectionBuf.SetDimSelectionChange(2,PAGE::"Post Vendor Application",ColumnDimPos);

                               IF CommonPosNegDim THEN BEGIN
                                 ColumnDimNeg := ColumnDimPos;
                                 CurrPage.UPDATE(FALSE);
                               END;
                               DimSelectionBuf.SetCopySelected(varCopySelectedFlag);
                               //NC TR269 < EB
                             END;
                              }

    { 1101495002;2;Field  ;
                CaptionML=[ENU=Dimensions for Negative;
                           RUS=Измерения для Отрицательных];
                SourceExpr=ColumnDimNeg;
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               //NC TR269 > EB
                               IF KontractorType = KontractorType::Customer THEN
                                 DimSelectionBuf.SetDimSelectionChange(2,-1 * PAGE::"Post Customer Application",ColumnDimNeg);
                               IF KontractorType = KontractorType::Vendor THEN
                                 DimSelectionBuf.SetDimSelectionChange(2,-1 * PAGE::"Post Vendor Application",ColumnDimNeg);
                               //NC TR269 < EB
                             END;
                              }

  }
  CODE
  {
    VAR
      DocNo@1000 : Code[20];
      PostingDate@1001 : Date;
      ExternalNo@1210001 : Code[20];
      "//ncv"@1101495000 : Integer;
      CommonPosNegDim@1101495001 : Boolean;
      IsClearDim@1101495004 : Boolean;
      ColumnDimPos@1101495002 : Text[250];
      ColumnDimNeg@1101495003 : Text[250];
      KontractorType@1101495005 : ' ,Customer,Vendor';
      DimSelectionBuf@1101495006 : Record 368;
      SelectedDim@1101495007 : Record 369;
      SalesSetup@1101495008 : Record 311;
      PurchSetup@1101495009 : Record 312;
      Text55000@1101495010 : TextConst 'ENU=Do You want to delete Dimension of previous operation?;RUS=Удалить измерения прошлой операции?';

    PROCEDURE SetValues@1(NewDocNo@1000 : Code[20];NewPostingDate@1001 : Date;NewExternalDocNo@1210000 : Code[20]);
    BEGIN
      DocNo := NewDocNo;
      PostingDate := NewPostingDate;
      ExternalNo := NewExternalDocNo;
    END;

    PROCEDURE GetValues@2(VAR NewDocNo@1000 : Code[20];VAR NewPostingDate@1001 : Date;VAR NewExternalDocNo@1210000 : Code[20]);
    BEGIN
      NewDocNo := DocNo;
      NewPostingDate := PostingDate;
      NewExternalDocNo := ExternalNo;
    END;

    LOCAL PROCEDURE "//NCF"@1101495011();
    BEGIN
    END;

    PROCEDURE GetValues2@1000000000(VAR ColumnDimPosNew@1000000001 : Text[250];VAR ColumnDimNegNew@1000000000 : Text[250]);
    BEGIN
      //NC TR269 > EB
      ColumnDimPosNew := ColumnDimPos;
      ColumnDimNegNew := ColumnDimNeg;
      //NC TR269 < EB
    END;

    PROCEDURE SetValues2@1000000008(KontractorType2@1000000000 : ' ,Customer,Vendor');
    BEGIN
      //NC TR269 > EB
      KontractorType := KontractorType2;
      //NC TR269 < EB
    END;

    PROCEDURE ClearOldSelectedDim@1101495000(Covenantor@1101495000 : ' ,Customer,Vendor');
    BEGIN
      //NC TR269 > EB  Clearing of all dimensions selected last time by current user in this form

      //NC OFA26 > DP
      IsClearDim := FALSE;
      CASE Covenantor OF
        Covenantor::Customer:
          BEGIN
            SalesSetup.GET;
            IsClearDim := SalesSetup."Clear Dim. Values for Appl.";
          END;
        Covenantor::Vendor:
          BEGIN
            PurchSetup.GET;
            IsClearDim := PurchSetup."Clear Dim. Values for Appl.";
          END;
      END;

      IF NOT IsClearDim THEN
        IsClearDim := CONFIRM(Text55000);

      IF IsClearDim THEN BEGIN
        SelectedDim.SETRANGE("User ID", USERID);
        SelectedDim.SETRANGE("Object Type", 2);

        CASE Covenantor OF
          Covenantor::Customer:
            SelectedDim.SETFILTER("Object ID", '%1|%2', PAGE::"Post Customer Application",(-1)*PAGE::"Post Customer Application");
          Covenantor::Vendor:
            SelectedDim.SETFILTER("Object ID", '%1|%2', PAGE::"Post Vendor Application",(-1)*PAGE::"Post Vendor Application");
        END;

        SelectedDim.SETRANGE("Analysis View Code",'');
        IF NOT SelectedDim.ISEMPTY THEN
          SelectedDim.DELETEALL;
      END;
      //NC TR269 < EB
    END;

    BEGIN
    END.
  }
}

