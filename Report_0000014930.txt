OBJECT Report 14930 Item Write-off act TORG-16
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Item Write-off act TORG-16;
               RUS=Акт о списании товаров ТОРГ-16];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  Torg16DocHelper.InitReportTemplate;
                END;

    OnPostReport=BEGIN
                   IF FileName <> '' THEN
                     Torg16DocHelper.ExportDataFile(FileName)
                   ELSE
                     Torg16DocHelper.ExportData
                 END;

  }
  DATASET
  {
    { 9926;    ;DataItem;ItemDocHeader       ;
               DataItemTable=Table12450;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=CONST(Shipment));
               OnAfterGetRecord=BEGIN
                                  FillHeader(ItemDocHeader);
                                  FillHeaderSignatures("No.");
                                END;

               ReqFilterFields=Document Type,No. }

    { 1587;1   ;DataItem;ItemDocLine1        ;
               DataItemTable=Table12453;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.);
               OnPreDataItem=BEGIN
                               Torg16DocHelper.FillPageHeader;
                             END;

               OnAfterGetRecord=BEGIN
                                  Torg16DocHelper.FillWriteOffReasonBody("Applies-to Entry","Reason Code",ItemDocHeader."Posting Date");
                                END;

               OnPostDataItem=BEGIN
                                Torg16DocHelper.FillPageFooter;
                                Torg16DocHelper.InitSecondSheet;
                              END;

               DataItemLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.) }

    { 6496;1   ;DataItem;ItemDocLine2        ;
               DataItemTable=Table12453;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.);
               OnPreDataItem=BEGIN
                               Torg16DocHelper.FillPageHeader2;
                             END;

               OnAfterGetRecord=BEGIN
                                  Torg16DocHelper.FillItemLedgerLine("Item No.","Unit of Measure Code",ItemDocLine2);
                                END;

               OnPostDataItem=BEGIN
                                Torg16DocHelper.FillFooter(WriteOffSource,Member);
                              END;

               DataItemLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             RUS=Параметры] }

      { 1210000;2;Field     ;
                  CaptionML=[ENU=Operation Type;
                             RUS=Тип операции];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=OperationType }

      { 1210002;2;Field     ;
                  CaptionML=[ENU=Order No.;
                             RUS=Номер заказа];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=OrderNo }

      { 1210004;2;Field     ;
                  CaptionML=[ENU=Order Date;
                             RUS=Дата приказа];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=OrderDate }

      { 1210006;2;Field     ;
                  CaptionML=[ENU=Write-off Source;
                             RUS=Источник списания];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=WriteOffSource }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      DocSignature@1210008 : Record 12420;
      Torg16DocHelper@1210010 : Codeunit 14939;
      Member@1210009 : ARRAY [5,2] OF Text[100];
      OperationType@1210012 : Text;
      OrderNo@1210015 : Text;
      OrderDate@1210016 : Date;
      WriteOffSource@1210017 : Text;
      FileName@1210007 : Text;

    PROCEDURE InitializeRequest@1210000(NewOperationType@1210001 : Text;NewOrderNo@1210002 : Text;NewOrderDate@1210003 : Date;NewWriteOffSource@1210000 : Text);
    BEGIN
      OperationType := NewOperationType;
      OrderNo := NewOrderNo;
      OrderDate := NewOrderDate;
      WriteOffSource := NewWriteOffSource;
    END;

    LOCAL PROCEDURE FillHeader@1210006(ItemDocHeader@1210004 : Record 12450);
    BEGIN
      Torg16DocHelper.FillHeader(
        ItemDocHeader."No.",ItemDocHeader."Document Date",ItemDocHeader."Location Code",
        OrderNo,OrderDate,OperationType);
    END;

    LOCAL PROCEDURE FillHeaderSignatures@1210001(ItemDocNo@1210000 : Code[20]);
    BEGIN
      ProcessSignatures(ItemDocNo);
      Torg16DocHelper.FillHeaderSignatures(Member);
    END;

    LOCAL PROCEDURE ProcessSignatures@1210009(ItemDocNo@1210000 : Code[20]);
    VAR
      Employee@1210001 : Record 5200;
      CompanyInfo@1210002 : Record 79;
    BEGIN
      CompanyInfo.GET;
      IF DocSignature.GET(12450,1,ItemDocNo,DocSignature."Employee Type"::Chairman) THEN BEGIN
        Member[1,1] := DocSignature."Employee Job Title";
        Member[1,2] := DocSignature."Employee Name";
      END;
      IF DocSignature.GET(12450,1,ItemDocNo,DocSignature."Employee Type"::Member1) THEN BEGIN
        Member[2,1] := DocSignature."Employee Job Title";
        Member[2,2] := DocSignature."Employee Name";
      END;
      IF DocSignature.GET(12450,1,ItemDocNo,DocSignature."Employee Type"::Member2) THEN BEGIN
        Member[3,1] := DocSignature."Employee Job Title";
        Member[3,2] := DocSignature."Employee Name";
      END;
      IF DocSignature.GET(12450,1,ItemDocNo,DocSignature."Employee Type"::StoredBy) THEN BEGIN
        Member[4,1] := DocSignature."Employee Job Title";
        Member[4,2] := DocSignature."Employee Name";
      END;
      IF Employee.GET(CompanyInfo."Director No.") THEN BEGIN
        Member[5,1] := Employee.GetJobTitleName;
        Member[5,2] := CompanyInfo."Director Name";
      END;
    END;

    PROCEDURE SetFileNameSilent@1210004(NewFileName@1210001 : Text);
    BEGIN
      FileName := NewFileName;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

