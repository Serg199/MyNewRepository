OBJECT Codeunit 14941 GLCorrAnViewEntrToGLCorrEntr
{
  OBJECT-PROPERTIES
  {
    Date=18.12.13;
    Time=12:00:00;
    Version List=NAVRU7.10;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      GLCorrAnalysisView@1000 : Record 14940;
      GLSetup@1001 : Record 98;
      UpdateGLCorrAnalysisView@1210000 : Codeunit 14940;

    PROCEDURE GetGLCorrEntries@1(VAR GLCorrAnalysisViewEntry@1000 : Record 14942;VAR TempGLCorrEntry@1001 : Record 12401);
    VAR
      GLCorrEntry@1002 : Record 12401;
      GLCorrAnalysisViewFilter@1004 : Record 14941;
      AccountingPeriod@1013 : Record 50;
      GlobalDimValue@1009 : Code[20];
      StartDate@1210000 : Date;
      EndDate@1210001 : Date;
    BEGIN
      GLCorrAnalysisView.GET(GLCorrAnalysisViewEntry."G/L Corr. Analysis View Code");

      GLSetup.GET;

      StartDate := GLCorrAnalysisViewEntry."Posting Date";
      EndDate := StartDate;

      WITH GLCorrAnalysisView DO
        IF StartDate < "Starting Date" THEN
          StartDate := 0D
        ELSE
          IF (GLCorrAnalysisViewEntry."Posting Date" = NORMALDATE(GLCorrAnalysisViewEntry."Posting Date")) AND
             NOT ("Date Compression" IN ["Date Compression"::None,"Date Compression"::Day])
          THEN
            CASE "Date Compression" OF
              "Date Compression"::Week:
                EndDate := CALCDATE('<-CW+6D>',StartDate);
              "Date Compression"::Month:
                EndDate := CALCDATE('<+1M-1D>',StartDate);
              "Date Compression"::Quarter:
                EndDate := CALCDATE('<+3M-1D>',StartDate);
              "Date Compression"::Year:
                EndDate := CALCDATE('<+1Y-1D>',StartDate);
              "Date Compression"::Period:
                BEGIN
                  AccountingPeriod."Starting Date" := StartDate;
                  IF AccountingPeriod.NEXT <> 0 THEN
                    EndDate := CALCDATE('<-1D>',AccountingPeriod."Starting Date")
                  ELSE
                    EndDate := 31129999D
                END;
            END;

      WITH GLCorrEntry DO BEGIN
        SETCURRENTKEY("Debit Account No.","Credit Account No.","Posting Date");
        SETRANGE("Debit Account No.",GLCorrAnalysisViewEntry."Debit Account No.");
        SETRANGE("Credit Account No.",GLCorrAnalysisViewEntry."Credit Account No.");
        SETRANGE("Posting Date",StartDate,EndDate);
        SETRANGE("Entry No.",0,GLCorrAnalysisView."Last Entry No.");

        IF GetDebitGlobalDimValue(GLSetup."Global Dimension 1 Code",GLCorrAnalysisViewEntry,GlobalDimValue) THEN
          SETRANGE("Debit Global Dimension 1 Code",GlobalDimValue)
        ELSE
          IF GLCorrAnalysisViewFilter.GET(GLCorrAnalysisViewEntry."G/L Corr. Analysis View Code",0,GLSetup."Global Dimension 1 Code")
          THEN
            SETFILTER("Debit Global Dimension 1 Code",GLCorrAnalysisViewFilter."Dimension Value Filter");

        IF GetDebitGlobalDimValue(GLSetup."Global Dimension 2 Code",GLCorrAnalysisViewEntry,GlobalDimValue) THEN
          SETRANGE("Debit Global Dimension 2 Code",GlobalDimValue)
        ELSE
          IF GLCorrAnalysisViewFilter.GET(GLCorrAnalysisViewEntry."G/L Corr. Analysis View Code",0,GLSetup."Global Dimension 2 Code")
          THEN
            SETFILTER("Debit Global Dimension 2 Code",GLCorrAnalysisViewFilter."Dimension Value Filter");

        IF GetCreditGlobalDimValue(GLSetup."Global Dimension 1 Code",GLCorrAnalysisViewEntry,GlobalDimValue) THEN
          SETRANGE("Credit Global Dimension 1 Code",GlobalDimValue)
        ELSE
          IF GLCorrAnalysisViewFilter.GET(GLCorrAnalysisViewEntry."G/L Corr. Analysis View Code",1,GLSetup."Global Dimension 1 Code")
          THEN
            SETFILTER("Credit Global Dimension 1 Code",GLCorrAnalysisViewFilter."Dimension Value Filter");

        IF GetCreditGlobalDimValue(GLSetup."Global Dimension 2 Code",GLCorrAnalysisViewEntry,GlobalDimValue) THEN
          SETRANGE("Credit Global Dimension 2 Code",GlobalDimValue)
        ELSE
          IF GLCorrAnalysisViewFilter.GET(GLCorrAnalysisViewEntry."G/L Corr. Analysis View Code",1,GLSetup."Global Dimension 2 Code")
          THEN
            SETFILTER("Credit Global Dimension 2 Code",GLCorrAnalysisViewFilter."Dimension Value Filter");

        IF FINDSET THEN
          REPEAT
            IF DimEntryOK("Debit Dimension Set ID",GLCorrAnalysisView."Debit Dimension 1 Code",
                 GLCorrAnalysisViewEntry."Debit Dimension 1 Value Code") AND
               DimEntryOK("Debit Dimension Set ID",GLCorrAnalysisView."Debit Dimension 2 Code",
                 GLCorrAnalysisViewEntry."Debit Dimension 2 Value Code") AND
               DimEntryOK("Debit Dimension Set ID",GLCorrAnalysisView."Debit Dimension 3 Code",
                 GLCorrAnalysisViewEntry."Debit Dimension 3 Value Code") AND
               DimEntryOK("Credit Dimension Set ID",GLCorrAnalysisView."Credit Dimension 1 Code",
                 GLCorrAnalysisViewEntry."Credit Dimension 1 Value Code") AND
               DimEntryOK("Credit Dimension Set ID",GLCorrAnalysisView."Credit Dimension 2 Code",
                 GLCorrAnalysisViewEntry."Credit Dimension 2 Value Code") AND
               DimEntryOK("Credit Dimension Set ID",GLCorrAnalysisView."Credit Dimension 3 Code",
                 GLCorrAnalysisViewEntry."Credit Dimension 3 Value Code") AND
               UpdateGLCorrAnalysisView.DimSetIDInFilter("Debit Dimension Set ID",GLCorrAnalysisView) AND
               UpdateGLCorrAnalysisView.DimSetIDInFilter("Credit Dimension Set ID",GLCorrAnalysisView)
            THEN BEGIN
              TempGLCorrEntry := GLCorrEntry;
              IF TempGLCorrEntry.INSERT THEN;
            END;
          UNTIL NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE DimEntryOK@10(DimSetID@1000 : Integer;Dim@1001 : Code[20];DimValue@1002 : Code[20]) : Boolean;
    VAR
      DimSetEntry@1210000 : Record 480;
    BEGIN
      IF Dim = '' THEN
        EXIT(TRUE);

      IF DimSetEntry.GET(DimSetID,Dim) THEN
        EXIT(DimSetEntry."Dimension Value Code" = DimValue);

      EXIT(DimValue = '');
    END;

    LOCAL PROCEDURE GetDebitGlobalDimValue@2(GlobalDim@1000 : Code[20];VAR GLCorrAnalysisViewEntry@1001 : Record 14942;VAR GlobalDimValue@1002 : Code[20]) : Boolean;
    VAR
      IsGlobalDim@1003 : Boolean;
    BEGIN
      CASE GlobalDim OF
        GLCorrAnalysisView."Debit Dimension 1 Code":
          BEGIN
            IsGlobalDim := TRUE;
            GlobalDimValue := GLCorrAnalysisViewEntry."Debit Dimension 1 Value Code";
          END;
        GLCorrAnalysisView."Debit Dimension 2 Code":
          BEGIN
            IsGlobalDim := TRUE;
            GlobalDimValue := GLCorrAnalysisViewEntry."Debit Dimension 2 Value Code";
          END;
        GLCorrAnalysisView."Debit Dimension 3 Code":
          BEGIN
            IsGlobalDim := TRUE;
            GlobalDimValue := GLCorrAnalysisViewEntry."Debit Dimension 3 Value Code";
          END;
      END;
      EXIT(IsGlobalDim);
    END;

    LOCAL PROCEDURE GetCreditGlobalDimValue@1210001(GlobalDim@1000 : Code[20];VAR GLCorrAnalysisViewEntry@1001 : Record 14942;VAR GlobalDimValue@1002 : Code[20]) : Boolean;
    VAR
      IsGlobalDim@1003 : Boolean;
    BEGIN
      CASE GlobalDim OF
        GLCorrAnalysisView."Credit Dimension 1 Code":
          BEGIN
            IsGlobalDim := TRUE;
            GlobalDimValue := GLCorrAnalysisViewEntry."Credit Dimension 1 Value Code";
          END;
        GLCorrAnalysisView."Credit Dimension 2 Code":
          BEGIN
            IsGlobalDim := TRUE;
            GlobalDimValue := GLCorrAnalysisViewEntry."Credit Dimension 2 Value Code";
          END;
        GLCorrAnalysisView."Credit Dimension 3 Code":
          BEGIN
            IsGlobalDim := TRUE;
            GlobalDimValue := GLCorrAnalysisViewEntry."Credit Dimension 3 Value Code";
          END;
      END;
      EXIT(IsGlobalDim);
    END;

    BEGIN
    END.
  }
}

