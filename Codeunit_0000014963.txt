OBJECT Codeunit 14963 Insert Payroll Analysis Line
{
  OBJECT-PROPERTIES
  {
    Date=18.12.13;
    Time=12:00:00;
    Version List=NAVRU7.10;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {

    PROCEDURE InsertPayrollElements@12(VAR PayrollAnalysisLine@1000 : Record 14962);
    VAR
      PayrollElement@1001 : Record 17400;
      PayrollElementList@1002 : Page 17401;
      PayrollElementCount@1003 : Integer;
      AnalysisLineNo@1004 : Integer;
    BEGIN
      PayrollElementList.LOOKUPMODE(TRUE);
      IF PayrollElementList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        PayrollElementList.SetSelection(PayrollElement);
        PayrollElementCount := PayrollElement.COUNT;
        IF PayrollElementCount > 0 THEN BEGIN
          MoveAnalysisLines(PayrollAnalysisLine,AnalysisLineNo,PayrollElementCount);

          IF PayrollElement.FINDSET THEN
            REPEAT
              InsertAnalysisLine(
                PayrollAnalysisLine,AnalysisLineNo,
                PayrollElement.Description,PayrollElement.Code,PayrollAnalysisLine.Type::"Payroll Element",FALSE,0);
            UNTIL PayrollElement.NEXT = 0;
        END;
      END;
    END;

    PROCEDURE InsertPayrollElementGroups@1210000(VAR PayrollAnalysisLine@1000 : Record 14962);
    VAR
      PayrollElementGroup@1001 : Record 17412;
      PayrollElementGroups@1002 : Page 17448;
      Count@1003 : Integer;
      AnalysisLineNo@1004 : Integer;
    BEGIN
      PayrollElementGroups.LOOKUPMODE(TRUE);
      IF PayrollElementGroups.RUNMODAL = ACTION::LookupOK THEN BEGIN
        PayrollElementGroups.SetSelection(PayrollElementGroup);
        Count := PayrollElementGroup.COUNT;
        IF Count > 0 THEN BEGIN
          MoveAnalysisLines(PayrollAnalysisLine,AnalysisLineNo,Count);

          IF PayrollElementGroup.FINDSET THEN
            REPEAT
              InsertAnalysisLine(
                PayrollAnalysisLine,AnalysisLineNo,
                PayrollElementGroup.Name,PayrollElementGroup.Code,PayrollAnalysisLine.Type::"Payroll Element Group",FALSE,0);
            UNTIL PayrollElementGroup.NEXT = 0;
        END;
      END;
    END;

    PROCEDURE InsertEmployees@1210001(VAR PayrollAnalysisLine@1000 : Record 14962);
    VAR
      Employee@1001 : Record 5200;
      EmployeeList@1002 : Page 5201;
      Count@1003 : Integer;
      AnalysisLineNo@1004 : Integer;
    BEGIN
      EmployeeList.LOOKUPMODE(TRUE);
      IF EmployeeList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        EmployeeList.SetSelection(Employee);
        Count := Employee.COUNT;
        IF Count > 0 THEN BEGIN
          MoveAnalysisLines(PayrollAnalysisLine,AnalysisLineNo,Count);

          IF Employee.FINDSET THEN
            REPEAT
              InsertAnalysisLine(
                PayrollAnalysisLine,AnalysisLineNo,
                Employee."Short Name",Employee."No.",PayrollAnalysisLine.Type::Employee,FALSE,0);
            UNTIL Employee.NEXT = 0;
        END;
      END;
    END;

    PROCEDURE InsertOrgUnits@1210004(VAR PayrollAnalysisLine@1000 : Record 14962);
    VAR
      OrgUnit@1001 : Record 12422;
      OrgUnits@1002 : Page 12491;
      Count@1003 : Integer;
      AnalysisLineNo@1004 : Integer;
    BEGIN
      OrgUnits.LOOKUPMODE(TRUE);
      IF OrgUnits.RUNMODAL = ACTION::LookupOK THEN BEGIN
        OrgUnits.SetSelection(OrgUnit);
        Count := OrgUnit.COUNT;
        IF Count > 0 THEN BEGIN
          MoveAnalysisLines(PayrollAnalysisLine,AnalysisLineNo,Count);

          IF OrgUnit.FINDSET THEN
            REPEAT
              InsertAnalysisLine(
                PayrollAnalysisLine,AnalysisLineNo,
                OrgUnit.Name,OrgUnit.Code,PayrollAnalysisLine.Type::"Org. Unit",FALSE,0);
            UNTIL OrgUnit.NEXT = 0;
        END;
      END;
    END;

    LOCAL PROCEDURE MoveAnalysisLines@1(VAR PayrollAnalysisLine@1210000 : Record 14962;VAR AnalysisLineNo@1002 : Integer;NewLineCount@1003 : Integer);
    VAR
      i@1001 : Integer;
    BEGIN
      WITH PayrollAnalysisLine DO BEGIN
        AnalysisLineNo := "Line No.";
        SETRANGE("Analysis Line Template Name","Analysis Line Template Name");
        IF FINDLAST THEN
          REPEAT
            i := "Line No.";
            IF i >= AnalysisLineNo THEN BEGIN
              DELETE;
              "Line No." := i + 10000 * NewLineCount;
              INSERT(TRUE);
            END;
          UNTIL (i <= AnalysisLineNo) OR (NEXT(-1) = 0);

        IF AnalysisLineNo = 0 THEN
          AnalysisLineNo := 10000;
      END;
    END;

    LOCAL PROCEDURE InsertAnalysisLine@2(VAR PayrollAnalysisLine@1210006 : Record 14962;VAR AnalysisLineNo@1210005 : Integer;Text@1210004 : Text[50];No@1210003 : Code[20];Type2@1210002 : Integer;Bold2@1210001 : Boolean;Indent@1210000 : Integer);
    VAR
      RecRef@1007 : RecordRef;
      ChangeLogMgt@1005 : Codeunit 423;
    BEGIN
      WITH PayrollAnalysisLine DO BEGIN
        INIT;
        "Line No." := AnalysisLineNo;
        AnalysisLineNo := AnalysisLineNo + 10000;
        Description := Text;
        Expression := No;
        "Row No." := COPYSTR(No,1,MAXSTRLEN("Row No."));
        Type := Type2;
        Bold := Bold2;
        Indentation := Indent;
        INSERT(TRUE);
        RecRef.GETTABLE(PayrollAnalysisLine);
        ChangeLogMgt.LogInsertion(RecRef);
      END;
    END;

    BEGIN
    END.
  }
}

