OBJECT Codeunit 50038 Make FI Ledger Entry
{
  OBJECT-PROPERTIES
  {
    Date=27.06.17;
    Time=14:11:36;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      CurrencyDate@1210004 : Date;
      CurrencyFactor@1210003 : Decimal;
      GLSetup@1210002 : Record 98;
      AddCurrency@1210001 : Record 4;
      CurrExchRate@1210000 : Record 330;

    PROCEDURE CopyFromFAJnlLine_@1(VAR FALedgEntry@1000 : Record 5601;VAR FAJnlLine@1001 : Record 5621);
    VAR
      DepreciationBook@1210000 : Record 5611;
    BEGIN
      {
      WITH FALedgEntry DO BEGIN
        INIT;
        "User ID" := USERID;
        "Entry No." := FAJnlLine."FA Error Entry No.";
        "G/L Entry No." := 0;
        "Depreciation Book Code" := FAJnlLine."Depreciation Book Code";
        "FA No." := FAJnlLine."FA No.";
        "FA Posting Date" := FAJnlLine."FA Posting Date";
        "Posting Date" := FAJnlLine."Posting Date";
        "Document Date" := FAJnlLine."Document Date";
        IF "Document Date" = 0D THEN
          "Document Date" := "Posting Date";
        "Document Type" := FAJnlLine."Document Type";
        "Document No." := FAJnlLine."Document No.";
        "External Document No." := FAJnlLine."External Document No.";
        Description := FAJnlLine.Description;
        Amount := FAJnlLine.Amount;
        Quantity := FAJnlLine.Quantity;
        Correction := FAJnlLine.Correction;
        "Reclassification Entry" := FAJnlLine."FA Reclassification Entry";
        "Index Entry" := FAJnlLine."Index Entry";
        "No. of Depreciation Days" := FAJnlLine."No. of Depreciation Days";
        "FA Posting Group" := FAJnlLine."FA Posting Group";
        "Global Dimension 1 Code" := FAJnlLine."Shortcut Dimension 1 Code";
        "Global Dimension 2 Code" := FAJnlLine."Shortcut Dimension 2 Code";
        "Reason Code" := FAJnlLine."Reason Code";
        "Source Code" := FAJnlLine."Source Code";
        "Journal Batch Name" := FAJnlLine."Journal Batch Name";
        "FA Posting Type" := FAJnlLine.ConvertToLedgEntry(FAJnlLine);
        "No. Series" := FAJnlLine."Posting No. Series";
        "Employee No." := FAJnlLine."Employee No.";
        "FA Location Code" := FAJnlLine."Location Code";
        "Amt. Diff. Appln. Entry No." := FAJnlLine."Amt. Diff. Appln. Entry No.";
        "Depr. Bonus" := FAJnlLine."Depr. Bonus";
        "Depr. Group Elimination" := FAJnlLine."Depr. Group Elimination";
        DepreciationBook.GET(FAJnlLine."Depreciation Book Code");

        IF DepreciationBook."Insert Add-Curr. Amount to FAL" THEN BEGIN
        IF ("FA Posting Category" = "FA Posting Category"::" ") AND
           ("FA Posting Type" = "FA Posting Type"::"Acquisition Cost") AND
           (NOT "Reclassification Entry")
        THEN BEGIN
          GLSetup.GET;
          IF GLSetup."Additional Reporting Currency" <> '' THEN BEGIN
            AddCurrency.GET(GLSetup."Additional Reporting Currency");
            CurrencyDate := FAJnlLine."FA Posting Date";
            CurrencyFactor :=
              CurrExchRate.ExchangeRate(CurrencyDate,GLSetup."Additional Reporting Currency");
            "Additional-Currency Amount" := ExchangeAmtLCYToACY(FAJnlLine.Amount);
          END;
        END;
        END;
          "Buffer Entry No." := FAJnlLine."Buffer Entry No.";
          "Cons. Source Code" := FAJnlLine."Cons. Source Code";
          "OVA No." := FAJnlLine."OVA No.";
           FALedgEntry."Cons. Register Error Entry No." := FAJnlLine."Cons. Register Error Entry No.";

        "FA Vendor No." := FAJnlLine."FA Vendor No.";

      END;
      }
    END;

    PROCEDURE CopyFromGenJnlLine@2(VAR FILedgEntry@1000 : Record 50106;VAR GenJnlLine@1001 : Record 81;VAR FIAmount@1000000001 : Decimal;VAR FIValueEntry@1000000002 : Record 50107);
    VAR
      FAJnlLine_@1002 : Record 5621;
      FI@1000000000 : Record 50021;
      AmountCFI@1000000003 : Decimal;
    BEGIN
      WITH FILedgEntry DO BEGIN
        INIT;
        "Entry No." := GenJnlLine."FA Error Entry No.";   // поле переопределяется в Cd50035 - InsertFI
        //"G/L Entry No." := 1;
        "FI No." := GenJnlLine."Account No.";
        "Posting Date" := GenJnlLine."Posting Date";
        "FI EntryType" := GenJnlLine."FI EntryType";
        Quantity := GenJnlLine.Quantity;
      {
        IF "FI EntryType" IN ["FI EntryType"::Purchase,"FI EntryType"::Sale,
                              "FI EntryType"::"Positive Adjmt.","FI EntryType"::"Negative Adjmt."] THEN
          "Cupon Quantity" := GenJnlLine.Quantity;
      }
        IF GenJnlLine."Amount Type" = GenJnlLine."Amount Type"::Interest THEN BEGIN
          Quantity := 0;
          "Cupon Quantity" := GenJnlLine.Quantity;
        END;


        IF FIAmount >= 0 THEN
          Positive := TRUE
        ELSE
          Positive := FALSE;

        Description := GenJnlLine.Description;
        FI.GET(GenJnlLine."Account No.");
        "FI Posting Book" := GenJnlLine."FI Posting Book";
        "FI Portfolio" := GenJnlLine."FI Portfolio";
        "FI Posting Group" := GenJnlLine."FI Posting Group";
        "Amount Type" := GenJnlLine."Amount Type";
        Conversation := GenJnlLine.Conversation;
        "Conversation ID" := GenJnlLine."Conversation ID";
        "Short Position" := GenJnlLine."Short Position";
        "Global Dimension 1 Code" := GenJnlLine."Shortcut Dimension 1 Code";
        "Global Dimension 2 Code" := GenJnlLine."Shortcut Dimension 2 Code";

        "Document No." := GenJnlLine."Document No.";
        "External Document No." := GenJnlLine."External Document No.";
        "Source Code" := GenJnlLine."Source Code";
        "Journal Batch Name" := GenJnlLine."Journal Batch Name";
        "Gen. Bus. Posting Group" := GenJnlLine."Gen. Bus. Posting Group";
        "Gen. Prod. Posting Group" := GenJnlLine."Gen. Prod. Posting Group";
        "FI Currency Code" := GenJnlLine."Currency Code";

      //   Amount := FIAmount;
        Amount := FIAmount;
      //GenJnlLine."Amount (LCY)" - GenJnlLine."VAT Amount (LCY)"; // техническое поле. служит для передачи значения
        "Dimension Set ID" := GenJnlLine."Dimension Set ID"; // NC NOS-26 SPA
      END;

      AmountCFI := GenJnlLine.Amount - GenJnlLine."VAT Amount";

      WITH FIValueEntry DO BEGIN
        INIT;
        "Entry No." := GenJnlLine."FA Error Entry No.";   // поле переопределяется в Cd50035 - InsertFI
        "FI No." := GenJnlLine."Account No.";
        "Posting Date" := GenJnlLine."Posting Date";
        "Document No." := GenJnlLine."Document No.";
        "FI Ledger Entry No." := 1;                      // поле переопределяется в Cd50035 - InsertFI
        "FI Currency Code" := GenJnlLine."Currency Code";
        {
        "Sales Amount"
        "Cost Amount"
        "Cost Amount (CFI)"
        "Cost Posted to G/L (CFI)"
        "Cost per Unit"
        "Cost per Unit (CFI)"
        "Valued Quantity"
        }
        "FI Ledger Entry Quantity" := FILedgEntry.Quantity;
        FIValueEntry.Amount := FIAmount;
        FIValueEntry."Amount (CFI)" := AmountCFI;
        CASE GenJnlLine."FI EntryType" OF
          GenJnlLine."FI EntryType"::Purchase:
            BEGIN
              IF NOT GenJnlLine."Short Position" THEN BEGIN
                IF FILedgEntry."Amount Type" = FILedgEntry."Amount Type"::Principal THEN BEGIN
                  "Cost Amount" := FILedgEntry.Amount;
                  "Cost Amount (CFI)" := AmountCFI;
                END;
              END ELSE BEGIN
                "Sales Amount" := -FILedgEntry.Amount;
                "Sales Amount (CFI)" := -AmountCFI;
              END;
            END;
          GenJnlLine."FI EntryType"::Sale:
            BEGIN
              IF GenJnlLine."Short Position" THEN BEGIN
                IF FILedgEntry."Amount Type" = FILedgEntry."Amount Type"::Principal THEN BEGIN
                  "Cost Amount" := FILedgEntry.Amount;
                  "Cost Amount (CFI)" := AmountCFI;
                END;
              END ELSE BEGIN
                "Sales Amount" := -FILedgEntry.Amount;
                "Sales Amount (CFI)" := -AmountCFI;
              END
            END;
          GenJnlLine."FI EntryType"::"Positive Adjmt.", GenJnlLine."FI EntryType"::"Negative Adjmt.":
            BEGIN
              IF FILedgEntry."Amount Type" = FILedgEntry."Amount Type"::Principal THEN BEGIN
                "Cost Amount" := FILedgEntry.Amount;
                "Cost Amount (CFI)" := AmountCFI;
              END;
            END;
        END;
        IF FILedgEntry."Amount Type" = FILedgEntry."Amount Type"::Interest THEN BEGIN
          "Cupon Amount" := FILedgEntry.Amount;
          "Cupon Amount (CFI)" := AmountCFI;
        END;

        "FI Entry Type" := GenJnlLine."FI EntryType";
        "FI Posting Book" := GenJnlLine."FI Posting Book";
        "FI Portfolio" := GenJnlLine."FI Portfolio";
        "Amount Type" := GenJnlLine."Amount Type";
        Conversation := GenJnlLine.Conversation;
        "Short Position" := GenJnlLine."Short Position";
        Positive := FILedgEntry.Positive;
        "Global Dimension 1 Code" := GenJnlLine."Shortcut Dimension 1 Code";
        "Global Dimension 2 Code" := GenJnlLine."Shortcut Dimension 2 Code";

      END;
    END;

    PROCEDURE CopyFromFICard@3(VAR FILedgEntry@1000 : Record 50106;VAR FI@1001 : Record 50021;VAR FADeprBook@1002 : Record 5612);
    BEGIN
      WITH FILedgEntry DO BEGIN
      {
        "FA Class Code" := FA."FA Class Code";
        "FA Subclass Code" := FA."FA Subclass Code";
        IF "FA Location Code" = '' THEN
          "FA Location Code" := FA."FA Location Code";
        IF "Employee No." = '' THEN
          "Employee No." := FA."Responsible Employee";
        "Location Code" := FA."Location Code";
        "FA Exchange Rate" := FADeprBook.GetExchangeRate;
        "Depreciation Method" := FADeprBook."Depreciation Method";
        "Depreciation Starting Date" := FADeprBook."Depreciation Starting Date";
        "Depreciation Ending Date" := FADeprBook."Depreciation Ending Date";
        "Straight-Line %" := FADeprBook."Straight-Line %";
        "No. of Depreciation Years" := FADeprBook."No. of Depreciation Years";
        "Fixed Depr. Amount" := FADeprBook."Fixed Depr. Amount";
        "Declining-Balance %" := FADeprBook."Declining-Balance %";
        "Depreciation Table Code" := FADeprBook."Depreciation Table Code";
        "Use FA Ledger Check" := FADeprBook."Use FA Ledger Check";
        "Depr. Starting Date (Custom 1)" := FADeprBook."Depr. Starting Date (Custom 1)";
        "Depr. Ending Date (Custom 1)" := FADeprBook."Depr. Ending Date (Custom 1)";
        "Accum. Depr. % (Custom 1)" := FADeprBook."Accum. Depr. % (Custom 1)";
        "Depr. % this year (Custom 1)" := FADeprBook."Depr. This Year % (Custom 1)";
        "Property Class (Custom 1)" := FADeprBook."Property Class (Custom 1)";
      }
      END;
    END;

    PROCEDURE CopyFromFADocLine_@1470000(VAR FALedgEntry@1000 : Record 5601;VAR FADocLine@1001 : Record 12477);
    BEGIN
      {
      WITH FALedgEntry DO BEGIN
        INIT;
        "User ID" := USERID;
        "G/L Entry No." := 0;
        "Depreciation Book Code" := FADocLine."Depreciation Book Code";
        "FA No." := FADocLine."FA No.";
        "FA Posting Date" := FADocLine."FA Posting Date";
        "Posting Date" := FADocLine."Posting Date";
        "Document Date" := "Posting Date";
        "Document No." := FADocLine."Document No.";
        Description := FADocLine.Description;
        Amount := FADocLine.Amount;
        Quantity := FADocLine.Quantity;
        "Reclassification Entry" := FALSE;
        "FA Posting Group" := FADocLine."FA Posting Group";
        "Global Dimension 1 Code" := FADocLine."Shortcut Dimension 1 Code";
        "Global Dimension 2 Code" := FADocLine."Shortcut Dimension 2 Code";
        "Reason Code" := FADocLine."Reason Code";
        "Source Code" := FADocLine."Source Code";
        "FA Posting Type" := "FA Posting Type"::Transfer;
        "Employee No." := FADocLine."FA Employee No.";
        "FA Location Code" := FADocLine."FA Location Code";
      END;
      }
    END;

    PROCEDURE ExchangeAmtLCYToACY@1210002(Amount@1210002 : Decimal) : Decimal;
    BEGIN
      EXIT(
        ROUND(
          CurrExchRate.ExchangeAmtLCYToFCY(
            CurrencyDate,GLSetup."Additional Reporting Currency",Amount,CurrencyFactor),
          AddCurrency."Amount Rounding Precision"));
    END;

    BEGIN
    {
      NC MTF02 II Учет ФИ
    }
    END.
  }
}

