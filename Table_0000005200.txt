OBJECT Table 5200 Employee
{
  OBJECT-PROPERTIES
  {
    Date=17.04.17;
    Time=15:05:07;
    Modified=Yes;
    Version List=NAVW110.00.00.14199,NAVRU10.00.00.14199,NOS-26;
  }
  PROPERTIES
  {
    DataCaptionFields=No.,First Name,Middle Name,Last Name;
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 HumanResSetup.GET;
                 HumanResSetup.TESTFIELD("Employee Nos.");
                 NoSeriesMgt.InitSeries(HumanResSetup."Employee Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               DimMgt.UpdateDefaultDim(
                 DATABASE::Employee,"No.",
                 "Global Dimension 1 Code","Global Dimension 2 Code");

               HumanResSetup.GET;
               IF "Country/Region Code" = '' THEN
                 "Country/Region Code" := HumanResSetup."Country/Region Code";
               IF "Tax Payer Category" = '' THEN
                 "Tax Payer Category" := HumanResSetup."Tax Payer Category";
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;
               IF Res.READPERMISSION THEN
                 EmployeeResUpdate.HumanResToRes(xRec,Rec);
               IF SalespersonPurchaser.READPERMISSION THEN
                 EmployeeSalespersonUpdate.HumanResToSalesPerson(xRec,Rec);

               EmpVendUpdate.OnModify(Rec);
             END;

    OnDelete=BEGIN
               CheckRemoveLaborContract;

               AlternativeAddr.SETRANGE("Person No.","Person No.");
               AlternativeAddr.DELETEALL;

               EmployeeQualification.SETRANGE("Person No.","Person No.");
               EmployeeQualification.DELETEALL;

               Relative.SETRANGE("Person No.","Person No.");
               Relative.DELETEALL;

               EmployeeAbsence.SETRANGE("Employee No.","No.");
               EmployeeAbsence.DELETEALL;

               MiscArticleInformation.SETRANGE("Employee No.","No.");
               MiscArticleInformation.DELETEALL;

               ConfidentialInformation.SETRANGE("Employee No.","No.");
               ConfidentialInformation.DELETEALL;

               HumanResComment.SETRANGE("No.","No.");
               HumanResComment.DELETEALL;

               DimMgt.DeleteDefaultDim(DATABASE::Employee,"No.");
             END;

    OnRename=BEGIN
               "Last Date Modified" := TODAY;
             END;

    CaptionML=[ENU=Employee;
               RUS=Сотрудник];
    LookupPageID=Page5201;
    DrillDownPageID=Page5201;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  HumanResSetup.GET;
                                                                  NoSeriesMgt.TestManual(HumanResSetup."Employee Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   AltSearchField=Search Name;
                                                   CaptionML=[ENU=No.;
                                                              RUS=Код] }
    { 2   ;   ;First Name          ;Text30        ;OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO("First Name") THEN
                                                                  TESTFIELD("Person No.",'');

                                                                IF ("First Name" <> '') AND ("Middle Name" <> '') THEN
                                                                  Initials := COPYSTR("First Name",1,1) + '.' + COPYSTR("Middle Name",1,1)+ '.';

                                                                "Short Name" := STRSUBSTNO('%1 %2',"Last Name",Initials);
                                                              END;

                                                   CaptionML=[ENU=First Name;
                                                              RUS=Имя] }
    { 3   ;   ;Middle Name         ;Text30        ;OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO("Middle Name") THEN
                                                                  TESTFIELD("Person No.",'');

                                                                IF ("First Name" <> '') AND ("Middle Name" <> '') THEN
                                                                  Initials := COPYSTR("First Name",1,1) + '.' + COPYSTR("Middle Name",1,1)+ '.';

                                                                "Short Name" := COPYSTR(STRSUBSTNO('%1 %2',"Last Name",Initials),1,MAXSTRLEN("Short Name"));
                                                              END;

                                                   CaptionML=[ENU=Middle Name;
                                                              RUS=Отчество] }
    { 4   ;   ;Last Name           ;Text30        ;OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO("Last Name") THEN
                                                                  TESTFIELD("Person No.",'');

                                                                "Search Name" := "Last Name";

                                                                "Short Name" := COPYSTR(STRSUBSTNO('%1 %2',"Last Name",Initials),1,MAXSTRLEN("Short Name"));
                                                              END;

                                                   CaptionML=[ENU=Last Name;
                                                              RUS=Фамилия] }
    { 5   ;   ;Initials            ;Text30        ;OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO(Initials) THEN
                                                                  TESTFIELD("Person No.",'');

                                                                IF ("Search Name" = UPPERCASE(xRec.Initials)) OR ("Search Name" = '') THEN
                                                                  "Search Name" := Initials;

                                                                "Short Name" := COPYSTR(STRSUBSTNO('%1 %2',"Last Name",Initials),1,MAXSTRLEN("Short Name"));
                                                              END;

                                                   CaptionML=[ENU=Initials;
                                                              RUS=Инициалы] }
    { 6   ;   ;Job Title           ;Text50        ;CaptionML=[ENU=Job Title;
                                                              RUS=Должность] }
    { 7   ;   ;Search Name         ;Code50        ;OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO("Search Name") THEN
                                                                  TESTFIELD("Person No.",'');
                                                              END;

                                                   CaptionML=[ENU=Search Name;
                                                              RUS=Имя поиска] }
    { 8   ;   ;Address             ;Text50        ;OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO(Address) THEN
                                                                  TESTFIELD("Person No.",'');
                                                              END;

                                                   CaptionML=[ENU=Address;
                                                              RUS=Адрес] }
    { 9   ;   ;Address 2           ;Text50        ;OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO("Address 2") THEN
                                                                  TESTFIELD("Person No.",'');
                                                              END;

                                                   CaptionML=[ENU=Address 2;
                                                              RUS=Адрес 2] }
    { 10  ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                                IF CurrFieldNo = FIELDNO(City) THEN
                                                                  TESTFIELD("Person No.",'');
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=City;
                                                              RUS=Город] }
    { 11  ;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                                IF CurrFieldNo = FIELDNO("Post Code") THEN
                                                                  TESTFIELD("Person No.",'');
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              RUS=Индекс] }
    { 12  ;   ;County              ;Text30        ;OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO(County) THEN
                                                                  TESTFIELD("Person No.",'');
                                                              END;

                                                   CaptionML=[ENU=County;
                                                              RUS=Район] }
    { 13  ;   ;Phone No.           ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No.;
                                                              RUS=Телефон] }
    { 14  ;   ;Mobile Phone No.    ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Mobile Phone No.;
                                                              RUS=Мобильный телефон] }
    { 15  ;   ;E-Mail              ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=Email;
                                                              RUS=Эл. почта] }
    { 16  ;   ;Alt. Address Code   ;Code10        ;TableRelation="Alternative Address".Code WHERE (Person No.=FIELD(Person No.));
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Alt. Address Code;
                                                              RUS=Код альт. адреса] }
    { 17  ;   ;Alt. Address Start Date;Date       ;CaptionML=[ENU=Alt. Address Start Date;
                                                              RUS=Дата начала альт. адреса] }
    { 18  ;   ;Alt. Address End Date;Date         ;CaptionML=[ENU=Alt. Address End Date;
                                                              RUS=Дата оконч. альт. адреса] }
    { 19  ;   ;Picture             ;BLOB          ;CaptionML=[ENU=Picture;
                                                              RUS=Рисунок];
                                                   SubType=Bitmap }
    { 20  ;   ;Birth Date          ;Date          ;OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO("Birth Date") THEN
                                                                  TESTFIELD("Person No.",'');
                                                              END;

                                                   CaptionML=[ENU=Birth Date;
                                                              RUS=Дата рождения] }
    { 21  ;   ;Social Security No. ;Text30        ;OnValidate=VAR
                                                                Pos10@1210001 : Integer;
                                                                CheckSum@1210000 : Integer;
                                                              BEGIN
                                                                IF CurrFieldNo = FIELDNO("Social Security No.") THEN
                                                                  TESTFIELD("Person No.",'');

                                                                IF "Social Security No." <> '' THEN BEGIN
                                                                  IF STRLEN("Social Security No.") <> 14 THEN
                                                                    ERROR(Text003,FIELDCAPTION("Social Security No."));
                                                                  IF "Social Security No." <> '000-000-000 00' THEN
                                                                    IF (COPYSTR("Social Security No.",4,1) = '-') AND
                                                                       (COPYSTR("Social Security No.",8,1) = '-') AND
                                                                       ((COPYSTR("Social Security No.",12,1) = ' ') OR (COPYSTR("Social Security No.",12,1) = '-')) AND
                                                                       EVALUATE(Pos10,COPYSTR("Social Security No.",13,2)) AND
                                                                       (DELCHR(DELCHR(COPYSTR("Social Security No.",1,11),'=','-'),'=','0987654321') = '')
                                                                    THEN BEGIN
                                                                      CheckSum := ((101 - STRCHECKSUM(DELCHR(COPYSTR("Social Security No.",1,11),'=','-'),'987654321',101)) MOD 101);
                                                                      IF ((CheckSum = 100) OR (CheckSum = 101)) AND (Pos10 <> 0) THEN
                                                                        ERROR(Text005,FIELDCAPTION("Social Security No."),0);
                                                                      IF (CheckSum < 100) AND (CheckSum <> Pos10) THEN
                                                                        ERROR(Text005,FIELDCAPTION("Social Security No."),CheckSum);
                                                                    END ELSE
                                                                      ERROR(Text003);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Social Security No.;
                                                              RUS=Страховой номер ПФР] }
    { 22  ;   ;Union Code          ;Code10        ;TableRelation=Union;
                                                   CaptionML=[ENU=Union Code;
                                                              RUS=Код профсоюза] }
    { 23  ;   ;Union Membership No.;Text30        ;CaptionML=[ENU=Union Membership No.;
                                                              RUS=Номер профсоюз. билета] }
    { 24  ;   ;Gender              ;Option        ;OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO(Gender) THEN
                                                                  TESTFIELD("Person No.",'');
                                                              END;

                                                   CaptionML=[ENU=Gender;
                                                              RUS=Пол];
                                                   OptionCaptionML=[ENU=" ,Female,Male";
                                                                    RUS=" ,Женский,Мужской"];
                                                   OptionString=[ ,Female,Male] }
    { 25  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO("Country/Region Code") THEN
                                                                  TESTFIELD("Person No.",'');
                                                              END;

                                                   CaptionML=[ENU=Country/Region Code;
                                                              RUS=Код страны/региона] }
    { 26  ;   ;Manager No.         ;Code20        ;TableRelation=Employee;
                                                   OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO("Manager No.") THEN
                                                                  TESTFIELD("Position No.",'');
                                                              END;

                                                   CaptionML=[ENU=Manager No.;
                                                              RUS=Номер менеджера] }
    { 27  ;   ;Emplymt. Contract Code;Code10      ;TableRelation="Employment Contract";
                                                   CaptionML=[ENU=Emplymt. Contract Code;
                                                              RUS=Код трудов. договора] }
    { 28  ;   ;Statistics Group Code;Code10       ;TableRelation="Employee Statistics Group";
                                                   OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO("Statistics Group Code") THEN
                                                                  TESTFIELD("Contract No.",'');
                                                              END;

                                                   CaptionML=[ENU=Statistics Group Code;
                                                              RUS=Код группы статистики] }
    { 29  ;   ;Employment Date     ;Date          ;OnValidate=VAR
                                                                LaborContract@1210000 : Record 17360;
                                                              BEGIN
                                                                IF CurrFieldNo = FIELDNO("Employment Date") THEN
                                                                  TESTFIELD("Contract No.",'');

                                                                IF "Employment Date" <> 0D THEN BEGIN
                                                                  PayrollPeriod.RESET;
                                                                  LaborContract.GET("Contract No.");
                                                                  IF LaborContract."Ending Date" = 0D THEN
                                                                    PayrollPeriod.SETFILTER(Code,'%1..',
                                                                      PayrollPeriod.PeriodByDate("Employment Date"))
                                                                  ELSE
                                                                    IF PayrollPeriod.PeriodByDate(LaborContract."Ending Date") = '' THEN
                                                                      PayrollPeriod.SETFILTER(
                                                                        Code,'%1..',PayrollPeriod.PeriodByDate("Employment Date"))
                                                                    ELSE
                                                                      PayrollPeriod.SETRANGE(Code,
                                                                        PayrollPeriod.PeriodByDate("Employment Date"),
                                                                        PayrollPeriod.PeriodByDate(LaborContract."Ending Date"));
                                                                  IF PayrollPeriod.FINDSET THEN
                                                                    REPEAT
                                                                      TimesheetMgmt.CreateTimesheet(Rec,PayrollPeriod);
                                                                      IF NOT PayrollStatus.GET(PayrollPeriod.Code,"No.") THEN BEGIN
                                                                        PayrollStatus.INIT;
                                                                        PayrollStatus."Period Code" := PayrollPeriod.Code;
                                                                        PayrollStatus."Employee No." := "No.";
                                                                        PayrollStatus.INSERT;
                                                                      END;
                                                                    UNTIL PayrollPeriod.NEXT = 0;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Employment Date;
                                                              RUS=Дата приема на работу] }
    { 31  ;   ;Status              ;Option        ;OnValidate=BEGIN
                                                                EmployeeQualification.SETRANGE("Person No.","No.");
                                                                EmployeeQualification.MODIFYALL("Employee Status",Status);
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Status;
                                                              RUS=Статус];
                                                   OptionCaptionML=[ENU=Active,Inactive,Terminated;
                                                                    RUS=Активен,Неактивен,Уволен];
                                                   OptionString=Active,Inactive,Terminated }
    { 32  ;   ;Inactive Date       ;Date          ;CaptionML=[ENU=Inactive Date;
                                                              RUS=Дата неактивности] }
    { 33  ;   ;Cause of Inactivity Code;Code10    ;TableRelation="Cause of Inactivity";
                                                   CaptionML=[ENU=Cause of Inactivity Code;
                                                              RUS=Код причины неактивности] }
    { 34  ;   ;Termination Date    ;Date          ;OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO("Termination Date") THEN
                                                                  TESTFIELD("Contract No.",'');
                                                              END;

                                                   CaptionML=[ENU=Termination Date;
                                                              RUS=Дата увольнения] }
    { 35  ;   ;Grounds for Term. Code;Code10      ;TableRelation="Grounds for Termination";
                                                   OnValidate=BEGIN
                                                                IF CurrFieldNo = FIELDNO("Grounds for Term. Code") THEN
                                                                  TESTFIELD("Contract No.",'');
                                                              END;

                                                   CaptionML=[ENU=Grounds for Term. Code;
                                                              RUS=Код причины увольнения] }
    { 36  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Global Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              RUS=Код глобального измерения 1];
                                                   CaptionClass='1,1,1' }
    { 37  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Global Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              RUS=Код глобального измерения 2];
                                                   CaptionClass='1,1,2' }
    { 38  ;   ;Resource No.        ;Code20        ;TableRelation=Resource WHERE (Type=CONST(Person));
                                                   OnValidate=BEGIN
                                                                IF ("Resource No." <> '') AND Res.WRITEPERMISSION THEN
                                                                  EmployeeResUpdate.ResUpdate(Rec)
                                                              END;

                                                   CaptionML=[ENU=Resource No.;
                                                              RUS=Номер ресурса] }
    { 39  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Human Resource Comment Line" WHERE (Table Name=CONST(Employee),
                                                                                                          No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              RUS=Комментарий];
                                                   Editable=No }
    { 40  ;   ;Last Date Modified  ;Date          ;CaptionML=[ENU=Last Date Modified;
                                                              RUS=Дата последнего изменения];
                                                   Editable=No }
    { 41  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              RUS=Фильтр по дате] }
    { 42  ;   ;Global Dimension 1 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Filter;
                                                              RUS=Фильтр глобального измерения 1];
                                                   CaptionClass='1,3,1' }
    { 43  ;   ;Global Dimension 2 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Filter;
                                                              RUS=Фильтр глобального измерения 2];
                                                   CaptionClass='1,3,2' }
    { 44  ;   ;Time Activity Filter;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation="Time Activity";
                                                   CaptionML=[ENU=Time Activity Filter;
                                                              RUS=Фильтр по временным активностям] }
    { 45  ;   ;Absence Days        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Employee Absence Entry"."Calendar Days" WHERE (Employee No.=FIELD(No.),
                                                                                                                   Time Activity Code=FIELD(Time Activity Filter),
                                                                                                                   Start Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Absence Days;
                                                              RUS=Дни отсутствия];
                                                   DecimalPlaces=0:0;
                                                   Editable=No }
    { 46  ;   ;Extension           ;Text30        ;CaptionML=[ENU=Extension;
                                                              RUS=Расширение] }
    { 47  ;   ;Employee No. Filter ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Employee;
                                                   CaptionML=[ENU=Employee No. Filter;
                                                              RUS=Фильтр по коду сотрудника] }
    { 48  ;   ;Pager               ;Text30        ;CaptionML=[ENU=Pager;
                                                              RUS=Пейджер] }
    { 49  ;   ;Fax No.             ;Text30        ;CaptionML=[ENU=Fax No.;
                                                              RUS=Факс] }
    { 50  ;   ;Company E-Mail      ;Text80        ;CaptionML=[ENU=Company Email;
                                                              RUS=Эл. почта организации] }
    { 51  ;   ;Title               ;Text30        ;CaptionML=[ENU=Title;
                                                              RUS=Заглавие] }
    { 52  ;   ;Salespers./Purch. Code;Code10      ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=[ENU=Salespers./Purch. Code;
                                                              RUS=Код менеджера] }
    { 53  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              RUS=Серия номеров];
                                                   Editable=No }
    { 140 ;   ;Image               ;Media         ;ExtendedDatatype=Person;
                                                   CaptionML=[ENU=Image;
                                                              RUS=Изображение] }
    { 1100;   ;Cost Center Code    ;Code20        ;TableRelation="Cost Center";
                                                   CaptionML=[ENU=Cost Center Code;
                                                              RUS=Код центра затрат] }
    { 1101;   ;Cost Object Code    ;Code20        ;TableRelation="Cost Object";
                                                   CaptionML=[ENU=Cost Object Code;
                                                              RUS=Код объекта затрат] }
    { 17350;  ;Org. Unit Code      ;Code10        ;TableRelation="Organizational Unit";
                                                   OnValidate=BEGIN
                                                                IF OrgUnit.GET("Org. Unit Code") THEN
                                                                  "Org. Unit Name" := OrgUnit.Name
                                                                ELSE
                                                                  "Org. Unit Name" := '';
                                                              END;

                                                   CaptionML=[ENU=Org. Unit Code;
                                                              RUS=Код подразделения];
                                                   Editable=No }
    { 17351;  ;Job Title Code      ;Code10        ;TableRelation="Job Title";
                                                   OnValidate=BEGIN
                                                                IF JobTitle.GET("Job Title Code") THEN
                                                                  "Job Title" := JobTitle.Name
                                                                ELSE
                                                                  "Job Title" := '';
                                                              END;

                                                   CaptionML=[ENU=Job Title Code;
                                                              RUS=Код должности] }
    { 17352;  ;Person No.          ;Code20        ;TableRelation=Person;
                                                   OnValidate=BEGIN
                                                                IF Person.GET("Person No.") THEN BEGIN
                                                                  VALIDATE("First Name",Person."First Name");
                                                                  VALIDATE("Middle Name",Person."Middle Name");
                                                                  VALIDATE("Last Name",Person."Last Name");
                                                                  VALIDATE("Search Name",Person."Search Name");
                                                                  VALIDATE("Birth Date",Person."Birth Date");
                                                                  VALIDATE(Gender,Person.Gender);
                                                                  VALIDATE("Social Security No.",Person."Social Security No.");
                                                                  VALIDATE("Country/Region Code",Person."Citizenship Country/Region");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Person No.;
                                                              RUS=Код физ. лица];
                                                   Editable=No }
    { 17353;  ;Position No.        ;Code20        ;TableRelation=Position;
                                                   OnValidate=BEGIN
                                                                IF Position.GET("Position No.") THEN BEGIN
                                                                  VALIDATE("Org. Unit Code",Position."Org. Unit Code");
                                                                  VALIDATE("Job Title Code",Position."Job Title Code");
                                                                  VALIDATE("Category Code",Position."Category Code");
                                                                  VALIDATE("Statistics Group Code",Position."Statistical Group Code");
                                                                  VALIDATE("Payroll Calc Group",Position."Calc Group Code");
                                                                  VALIDATE("Calendar Code",Position."Calendar Code");
                                                                  VALIDATE("Posting Group",Position."Posting Group");
                                                                  VALIDATE("Int. Fnds Sick Leave Post. Gr.",Position."Posting Group");
                                                                  VALIDATE("Future Period Vacat. Post. Gr.",Position."Future Period Vacat. Post. Gr.");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Position No.;
                                                              RUS=Номер позиции];
                                                   Editable=No }
    { 17354;  ;Contract No.        ;Code20        ;TableRelation="Labor Contract" WHERE (Employee No.=FIELD(No.));
                                                   CaptionML=[ENU=Contract No.;
                                                              RUS=Номер договора];
                                                   Editable=No }
    { 17355;  ;Employee Vendor No. ;Code20        ;CaptionML=[ENU=Employee Vendor No.;
                                                              RUS=Код поставщика для сотрудника] }
    { 17356;  ;Tax Payer Category  ;Code20        ;TableRelation="General Directory".Code WHERE (Type=FILTER(Tax Payer Category));
                                                   CaptionML=[ENU=Tax Payer Category;
                                                              RUS=Категория налогоплательщика] }
    { 17357;  ;Employee Bank Code  ;Code10        ;TableRelation="Vendor Bank Account".Code WHERE (Vendor No.=FIELD(Employee Vendor No.));
                                                   CaptionML=[ENU=Employee Bank Code;
                                                              RUS=Код банка сотрудника] }
    { 17358;  ;Category Code       ;Code10        ;TableRelation="Employee Category";
                                                   CaptionML=[ENU=Category Code;
                                                              RUS=Код категории];
                                                   Editable=No }
    { 17359;  ;Payroll Calc Group  ;Code10        ;TableRelation="Payroll Calc Group";
                                                   CaptionML=[ENU=Payroll Calc Group;
                                                              RUS=Расчетная группа зарплаты];
                                                   Editable=No }
    { 17360;  ;Calendar Code       ;Code10        ;TableRelation="Payroll Calendar";
                                                   CaptionML=[ENU=Calendar Code;
                                                              RUS=Код календаря];
                                                   Editable=No }
    { 17361;  ;Posting Group       ;Code20        ;TableRelation="Payroll Posting Group";
                                                   CaptionML=[ENU=Posting Group;
                                                              RUS=Учетная группа];
                                                   Editable=No }
    { 17362;  ;Skip for Avg. HC Calculation;Boolean;
                                                   CaptionML=[ENU=Skip for Avg. HC Calculation;
                                                              RUS=Не учитывать для среднеспис. числен.] }
    { 17363;  ;Blocked             ;Boolean       ;CaptionML=[ENU=Blocked;
                                                              RUS=Заблокировано] }
    { 17364;  ;Int. Fnds Sick Leave Post. Gr.;Code20;
                                                   TableRelation="Payroll Posting Group";
                                                   CaptionML=[ENU=Int. Fnds Sick Leave Post. Gr.;
                                                              RUS=Учетная группа внутр. фонда больничных] }
    { 17365;  ;Short Name          ;Text50        ;CaptionML=[ENU=Short Name;
                                                              RUS=Краткое имя] }
    { 17366;  ;Manufacturing Type  ;Option        ;CaptionML=[ENU=Manufacturing Type;
                                                              RUS=Тип производства];
                                                   OptionCaptionML=[ENU=" ,Basic,Additional,Contract";
                                                                    RUS=" ,Основной,Дополнительный,Контракт"];
                                                   OptionString=[ ,Basic,Additional,Contract] }
    { 17370;  ;Future Period Vacat. Post. Gr.;Code20;
                                                   TableRelation="Payroll Posting Group";
                                                   CaptionML=[ENU=Future Period Vacat. Post. Gr.;
                                                              RUS=Учетная группа отпусков буд. пер.] }
    { 17400;  ;Payroll Amount      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Payroll Ledger Entry"."Payroll Amount" WHERE (Employee No.=FIELD(Employee No. Filter),
                                                                                                                           Element Type=FIELD(Element Type Filter),
                                                                                                                           Element Group=FIELD(Element Group Filter),
                                                                                                                           Element Code=FIELD(Element Code Filter),
                                                                                                                           Posting Type=FIELD(Posting Type Filter),
                                                                                                                           Posting Group=FIELD(Posting Group Filter),
                                                                                                                           Directory Code=FIELD(Directory Code Filter),
                                                                                                                           Period Code=FIELD(Payroll Period Filter),
                                                                                                                           Wage Period Code=FIELD(Wage Period Filter),
                                                                                                                           Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Payroll Amount;
                                                              RUS=Сумма зарплаты];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 17401;  ;Taxable Amount      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Payroll Ledger Entry"."Taxable Amount" WHERE (Employee No.=FIELD(Employee No. Filter),
                                                                                                                           Element Type=FIELD(Element Type Filter),
                                                                                                                           Element Group=FIELD(Element Group Filter),
                                                                                                                           Element Code=FIELD(Element Code Filter),
                                                                                                                           Posting Type=FIELD(Posting Type Filter),
                                                                                                                           Posting Group=FIELD(Posting Group Filter),
                                                                                                                           Directory Code=FIELD(Directory Code Filter),
                                                                                                                           Period Code=FIELD(Payroll Period Filter),
                                                                                                                           Wage Period Code=FIELD(Wage Period Filter),
                                                                                                                           Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Taxable Amount;
                                                              RUS=Налогооблагаемая сумма];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 17402;  ;Base Amount         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Payroll Ledger Base Amount".Amount WHERE (Employee No.=FIELD(Employee No. Filter),
                                                                                                              Base Type=FIELD(Base Type Filter),
                                                                                                              Detailed Base Type=FIELD(Detailed Base Type Filter),
                                                                                                              Element Type=FIELD(Element Type Filter),
                                                                                                              Element Code=FIELD(Element Code Filter),
                                                                                                              Payroll Directory Code=FIELD(Directory Code Filter),
                                                                                                              Period Code=FIELD(Payroll Period Filter),
                                                                                                              Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Base Amount;
                                                              RUS=Базовая сумма];
                                                   Editable=No }
    { 17403;  ;Counter             ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Detailed Payroll Ledger Entry" WHERE (Employee No.=FIELD(Employee No. Filter),
                                                                                                            Element Type=FIELD(Element Type Filter),
                                                                                                            Element Group=FIELD(Element Group Filter),
                                                                                                            Element Code=FIELD(Element Code Filter),
                                                                                                            Posting Type=FIELD(Posting Type Filter),
                                                                                                            Posting Group=FIELD(Posting Group Filter),
                                                                                                            Directory Code=FIELD(Directory Code Filter),
                                                                                                            Period Code=FIELD(Payroll Period Filter),
                                                                                                            Wage Period Code=FIELD(Wage Period Filter),
                                                                                                            Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Counter;
                                                              RUS=Счетчик];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 17410;  ;Planned Hours       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Timesheet Line"."Planned Hours" WHERE (Employee No.=FIELD(No.),
                                                                                                           Org. Unit Code=FIELD(Org. Unit Filter),
                                                                                                           Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Planned Hours;
                                                              RUS=Плановые часы];
                                                   Editable=No }
    { 17411;  ;Actual Hours        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Timesheet Detail"."Actual Hours" WHERE (Employee No.=FIELD(Employee No. Filter),
                                                                                                            Org. Unit Code=FIELD(Org. Unit Filter),
                                                                                                            Timesheet Code=FIELD(Timesheet Code Filter),
                                                                                                            Time Activity Code=FIELD(Time Activity Filter),
                                                                                                            Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Actual Hours;
                                                              RUS=Отработанные часы];
                                                   Editable=No }
    { 17412;  ;Overtime Hours      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Timesheet Detail"."Actual Hours" WHERE (Employee No.=FIELD(Employee No. Filter),
                                                                                                            Org. Unit Code=FIELD(Org. Unit Filter),
                                                                                                            Timesheet Code=FIELD(Timesheet Code Filter),
                                                                                                            Time Activity Code=FIELD(Time Activity Filter),
                                                                                                            Date=FIELD(Date Filter),
                                                                                                            Overtime=CONST(Yes)));
                                                   CaptionML=[ENU=Overtime Hours;
                                                              RUS=Сверхурочные часы] }
    { 17413;  ;Accrued Absence     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Employee Absence Entry"."Calendar Days" WHERE (Entry Type=CONST(Usage),
                                                                                                                   Employee No.=FIELD(No.),
                                                                                                                   Time Activity Code=FIELD(Time Activity Filter),
                                                                                                                   Start Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Accrued Absence;
                                                              RUS=Положенное отсутствие] }
    { 17414;  ;Used Absence        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Employee Absence Entry"."Calendar Days" WHERE (Entry Type=CONST(Accrual),
                                                                                                                   Employee No.=FIELD(No.),
                                                                                                                   Time Activity Code=FIELD(Time Activity Filter),
                                                                                                                   Start Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Used Absence;
                                                              RUS=Исп. отсутствие];
                                                   Editable=No }
    { 17420;  ;Element Type Filter ;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Element Type Filter;
                                                              RUS=Фильтр по типу элемента];
                                                   OptionCaptionML=[ENU=Wage,Bonus,Income Tax,Netto Salary,Tax Deduction,Deduction,Other,Funds,Reporting;
                                                                    RUS=Начисление,Премия,НДФЛ,Зарплата,Налоговый вычет,Удержание,Прочее,Фонды,Отчетность];
                                                   OptionString=Wage,Bonus,Income Tax,Netto Salary,Tax Deduction,Deduction,Other,Funds,Reporting }
    { 17421;  ;Element Code Filter ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation="Payroll Element";
                                                   CaptionML=[ENU=Element Code Filter;
                                                              RUS=Фильтр по коду элемента] }
    { 17423;  ;Posting Type Filter ;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Posting Type Filter;
                                                              RUS=Фильтр по типу учета];
                                                   OptionCaptionML=[ENU=Not Post,Charge,Liability,Liability Charge,Information Only;
                                                                    RUS=Не учитывать,Расход,Обязательство,Расход по обязательству,Только информация];
                                                   OptionString=Not Post,Charge,Liability,Liability Charge,Information Only }
    { 17424;  ;Posting Group Filter;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation="Payroll Posting Group";
                                                   CaptionML=[ENU=Posting Group Filter;
                                                              RUS=Фильтр по учетной группе] }
    { 17425;  ;Fund Type Filter    ;Option        ;CaptionML=[ENU=Fund Type Filter;
                                                              RUS=Фильтр по типу фонда];
                                                   OptionCaptionML=[ENU=" ,FSI,FSI Injury,Federal FMI,Territorial FMI,PF Accum. Part,PF Insur. Part";
                                                                    RUS=" ,ФСС,ФСС Травма,Федер. ФОМС,Террит. ФОМС,ПФ Накоп. часть,ПФ Страх. часть"];
                                                   OptionString=[ ,FSI,FSI Injury,Federal FMI,Territorial FMI,PF Accum. Part,PF Insur. Part] }
    { 17427;  ;Directory Code Filter;Code10       ;FieldClass=FlowFilter;
                                                   TableRelation="Payroll Directory".Code;
                                                   CaptionML=[ENU=Directory Code Filter;
                                                              RUS=Фильтр по коду справочника] }
    { 17428;  ;Base Type Filter    ;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Base Type Filter;
                                                              RUS=Фильтр по типу базы];
                                                   OptionCaptionML=[ENU=Income Tax,Social Insurance Fund,Medical Insurance Fund,Employment Fund,Pension Fund,Injury Insurance,Sick Leave Payment,Average Earnings;
                                                                    RUS=НДФЛ,ФСС,ФОМС,ФЗ,ПФ,ФСС Травма,Оплата больничного,Средний заработок];
                                                   OptionString=Income Tax,Social Insurance Fund,Medical Insurance Fund,Employment Fund,Pension Fund,Injury Insurance,Sick Leave Payment,Average Earnings }
    { 17429;  ;Detailed Base Type Filter;Option   ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Detailed Base Type Filter;
                                                              RUS=Фильтр по подробному типу базы];
                                                   OptionCaptionML=[ENU=" ,Salary,Bonus,Quarter Bonus,Year Bonus";
                                                                    RUS=" ,Оклад,Премия,Квартальная премия,Годовая премия"];
                                                   OptionString=[ ,Salary,Bonus,Quarter Bonus,Year Bonus] }
    { 17430;  ;Source Pay Filter   ;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Source Pay Filter;
                                                              RUS=Фильтр по источнику оплаты];
                                                   OptionCaptionML=[ENU=" ,Cost,Profit,FSI,FOSI";
                                                                    RUS=" ,Себест.,Прибыль,ФСС,ФОМС"];
                                                   OptionString=[ ,Cost,Profit,FSI,FOSI] }
    { 17431;  ;Org. Unit Filter    ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation="Organizational Unit";
                                                   CaptionML=[ENU=Org. Unit Filter;
                                                              RUS=Фильтр по подразделению] }
    { 17432;  ;Payroll Period Filter;Code10       ;FieldClass=FlowFilter;
                                                   TableRelation="Payroll Period";
                                                   CaptionML=[ENU=Payroll Period Filter;
                                                              RUS=Фильтр по зарплатному периоду] }
    { 17433;  ;Timesheet Code Filter;Code10       ;FieldClass=FlowFilter;
                                                   TableRelation="Timesheet Code";
                                                   CaptionML=[ENU=Timesheet Code Filter;
                                                              RUS=Фильтр по табельному коду] }
    { 17434;  ;Wage Period Filter  ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation="Payroll Period";
                                                   CaptionML=[ENU=Wage Period Filter;
                                                              RUS=Фильтр по периоду начисления] }
    { 17435;  ;Org. Unit Name      ;Text50        ;CaptionML=[ENU=Org. Unit Name;
                                                              RUS=Название подразделения];
                                                   Editable=No }
    { 17438;  ;Element Group Filter;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation="Payroll Element Group";
                                                   CaptionML=[ENU=Element Group Filter;
                                                              RUS=Фильтр по группе элементов] }
    { 50001;  ;External No.        ;Code30        ;CaptionML=[ENU=External No.;
                                                              RUS=Табельный Номер];
                                                   Description=NC EB }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Search Name                              }
    {    ;Status,Union Code                        }
    {    ;Status,Emplymt. Contract Code            }
    {    ;Last Name,First Name,Middle Name         }
    {    ;Employee Bank Code                       }
    {    ;Calendar Code                            }
    {    ;Posting Group                            }
    {    ;Org. Unit Code,Job Title Code,Status     }
    {    ;Org. Unit Code,Last Name,First Name,Middle Name }
    {    ;Birth Date,Gender,Last Name,No.          }
    {    ;Last Name,First Name,Middle Name,Birth Date }
    {    ;Statistics Group Code                    }
    {    ;Person No.                               }
    {    ;Position No.                             }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,First Name,Last Name,Initials,Job Title }
    { 2   ;Brick               ;No.,First Name,Last Name,Job Title,Image }
  }
  CODE
  {
    VAR
      HumanResSetup@1000 : Record 5218;
      Employee@1001 : Record 5200;
      Res@1002 : Record 156;
      PostCode@1003 : Record 225;
      AlternativeAddr@1004 : Record 5201;
      EmployeeQualification@1005 : Record 5203;
      Relative@1006 : Record 5205;
      EmployeeAbsence@1007 : Record 5207;
      MiscArticleInformation@1008 : Record 5214;
      ConfidentialInformation@1009 : Record 5216;
      HumanResComment@1010 : Record 5208;
      SalespersonPurchaser@1011 : Record 13;
      VATRegNoFormat@1210005 : Record 381;
      OrgUnit@1210000 : Record 12422;
      JobTitle@1210002 : Record 12423;
      PayrollPeriod@1210003 : Record 17426;
      PayrollStatus@1210007 : Record 17457;
      Person@1210008 : Record 17350;
      Position@1210009 : Record 17370;
      NoSeriesMgt@1012 : Codeunit 396;
      EmployeeResUpdate@1013 : Codeunit 5200;
      EmployeeSalespersonUpdate@1014 : Codeunit 5201;
      DimMgt@1015 : Codeunit 408;
      Text000@1016 : TextConst 'ENU=Before you can use Online Map, you must fill in the Online Map Setup window.\See Setting Up Online Map in Help.;RUS=Прежде чем использовать Online Map, необходимо заполнить окно настройки Online Map.\См. раздел справки "Настройка Online Map".';
      EmpVendUpdate@1470000 : Codeunit 12415;
      Text003@1210006 : TextConst 'ENU=%1 format must be xxx-xxx-xxx xx.;RUS=Значение %1 должно быть задано в формате xxx-xxx-xxx xx.';
      Text004@1470001 : TextConst 'ENU=Conflict with closed employee''s benefit entry: \%1 - %2, \%3 - %4, \%5 - %6, \%7 - %8 \Cannot add entry: %1 - %10;RUS=Конфликт с закрытой операцией пособия сотрудника: \%1 - %2, \%3 - %4, \%5 - %6, \%7 - %8 \Не удается добавить операцию: %1 - %10';
      Text005@1470003 : TextConst 'ENU=Incorrect checksum for %1;RUS=Неправильная контрольная сумма для %1';
      Text006@1210001 : TextConst 'ENU=There are %1 job entries for employee %2 as of %3.;RUS=Для сотрудника %2 существует %1 операций работы %1 на %3.';
      TimesheetMgmt@1210004 : Codeunit 17440;

    PROCEDURE AssistEdit@2(OldEmployee@1000 : Record 5200) : Boolean;
    BEGIN
      WITH Employee DO BEGIN
        Employee := Rec;
        HumanResSetup.GET;
        HumanResSetup.TESTFIELD("Employee Nos.");
        IF NoSeriesMgt.SelectSeries(HumanResSetup."Employee Nos.",OldEmployee."No. Series","No. Series") THEN BEGIN
          HumanResSetup.GET;
          HumanResSetup.TESTFIELD("Employee Nos.");
          NoSeriesMgt.SetSeries("No.");
          Rec := Employee;
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE FullName@1() : Text[100];
    BEGIN
      IF "Middle Name" = '' THEN
        EXIT("First Name" + ' ' + "Last Name");

      EXIT("First Name" + ' ' + "Middle Name" + ' ' + "Last Name");
    END;

    LOCAL PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.SaveDefaultDim(DATABASE::Employee,"No.",FieldNumber,ShortcutDimCode);
      MODIFY;
    END;

    PROCEDURE DisplayMap@7();
    VAR
      MapPoint@1001 : Record 800;
      MapMgt@1000 : Codeunit 802;
    BEGIN
      IF MapPoint.FINDFIRST THEN
        MapMgt.MakeSelection(DATABASE::Employee,GETPOSITION)
      ELSE
        MESSAGE(Text000);
    END;

    PROCEDURE GetFullName@1210002() : Text[100];
    VAR
      Employee@1210001 : Record 5200;
    BEGIN
      EXIT("Last Name" + ' ' + "First Name" + ' ' + "Middle Name");
    END;

    PROCEDURE GetFullNameOnDate@1210011(CurrDate@1210000 : Date) : Text[100];
    VAR
      Employee@1210001 : Record 5200;
    BEGIN
      TESTFIELD("Person No.");
      Person.GET("Person No.");
      EXIT(Person.GetFullNameOnDate(CurrDate));
    END;

    PROCEDURE GetNameInitials@1210000() : Text[100];
    BEGIN
      EXIT("Last Name" + ' ' + Initials);
    END;

    PROCEDURE GetNameInitialsOnDate@1210006(CurrDate@1210000 : Date) : Text[100];
    VAR
      Employee@1210001 : Record 5200;
    BEGIN
      TESTFIELD("Person No.");
      Person.GET("Person No.");
      EXIT(Person.GetNameInitialsOnDate(CurrDate));
    END;

    PROCEDURE GetDepartmentName@1210003() : Text[50];
    BEGIN
      EXIT("Org. Unit Name");
    END;

    PROCEDURE GetJobTitleName@1210001() : Text[50];
    BEGIN
      EXIT("Job Title");
    END;

    PROCEDURE GetEntireAge@1470001(BirthDate@1470000 : Date;CurrDate@1470001 : Date) : Decimal;
    VAR
      BD@1470002 : ARRAY [3] OF Integer;
      CD@1470007 : ARRAY [3] OF Integer;
      i@1470003 : Integer;
      EntireAge@1470004 : Integer;
    BEGIN
      IF CurrDate <= BirthDate THEN
        EXIT(0);
      FOR i := 1 TO 3 DO BEGIN
        BD[i] := DATE2DMY(BirthDate,i);
        CD[i] := DATE2DMY(CurrDate,i);
      END;
      EntireAge := CD[3] - BD[3];
      IF (CD[2] < BD[2]) OR (CD[2] = BD[2]) AND (CD[1] < BD[1]) THEN
        EntireAge -= 1;
      EXIT(EntireAge);
    END;

    PROCEDURE GetJobEntry@1210007(EmployeeNo@1210002 : Code[20];CurrDate@1210001 : Date;VAR EmplJobEntry@1210000 : Record 17363) : Boolean;
    BEGIN
      EmplJobEntry.RESET;
      EmplJobEntry.SETCURRENTKEY("Employee No.","Starting Date","Ending Date");
      EmplJobEntry.SETRANGE("Employee No.",EmployeeNo);
      EmplJobEntry.SETFILTER("Starting Date",'..%1',CurrDate);
      EmplJobEntry.SETFILTER("Ending Date",'%1|%2..',0D,CurrDate);
      EmplJobEntry.SETRANGE("Position Changed",TRUE);
      CASE EmplJobEntry.COUNT OF
        0:
          EXIT(FALSE);
        1:
          BEGIN
            EmplJobEntry.FINDFIRST;
            EXIT(TRUE);
          END;
        2:
          BEGIN
            EmplJobEntry.FINDFIRST;
            EXIT(TRUE);
          END;
        ELSE
          ERROR(Text006,EmplJobEntry.COUNT,"No.",CurrDate);
      END;
    END;

    PROCEDURE IsEmployed@1210005(CurrentDate@1210001 : Date) : Boolean;
    VAR
      EmployeeJobEntry@1210002 : Record 17363;
    BEGIN
      IF ("Employment Date" <> 0D) AND ("Employment Date" <= CurrentDate) AND
        (("Termination Date" = 0D) OR ("Termination Date" > CurrentDate))
      THEN
        EXIT(TRUE)
      ELSE
        EXIT(FALSE);
    END;

    PROCEDURE IsTerminated@1210009(CurrentDate@1210001 : Date) : Boolean;
    VAR
      EmployeeJobEntry@1210002 : Record 17363;
    BEGIN
      IF "Termination Date" = 0D THEN
        EXIT(FALSE)
      ELSE
        EXIT("Termination Date" < CurrentDate);
    END;

    PROCEDURE IsInvalid@1210008(CurrentDate@1210001 : Date) : Boolean;
    VAR
      PersonMedicalInfo@1210000 : Record 17353;
    BEGIN
      PersonMedicalInfo.SETRANGE("Person No.","Person No.");
      PersonMedicalInfo.SETRANGE(Type,PersonMedicalInfo.Type::Disability);
      PersonMedicalInfo.SETFILTER("Starting Date",'..%1',CurrentDate);
      PersonMedicalInfo.SETFILTER("Ending Date",'%1|%2..',0D,CurrentDate);
      PersonMedicalInfo.SETFILTER("Disability Group",'<>%1',0);;
      EXIT(NOT PersonMedicalInfo.ISEMPTY);
    END;

    LOCAL PROCEDURE CheckRemoveLaborContract@1210010();
    VAR
      LaborContract@1210000 : Record 17360;
    BEGIN
      IF "Contract No." = '' THEN
        EXIT;

      IF NOT LaborContract.GET("Contract No.") THEN
        EXIT;

      LaborContract.DELETE(TRUE);
    END;

    BEGIN
    {
      NC OEM01 EB добавлено поле "SAP Identificator"
    }
    END.
  }
}

