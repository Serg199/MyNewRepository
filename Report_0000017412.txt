OBJECT Report 17412 Copy Payroll Document
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Copy Payroll Document;
               RUS=Копирование зарплатного документа];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  CopyPayrollDocMgt.SetProperties(IncludeHeader,FALSE);
                  CopyPayrollDocMgt.CopyPayrollDoc(DocType,DocNo,PayrollDoc);
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   IF DocNo <> '' THEN BEGIN
                     CASE DocType OF
                       DocType::"Payroll Document":
                         IF FromPayrollDoc.GET(DocNo) THEN;
                       DocType::"Posted Payroll Document":
                         IF FromPostedPayrollDoc.GET(DocNo) THEN
                           FromPayrollDoc.TRANSFERFIELDS(FromPostedPayrollDoc);
                     END;
                     IF FromPayrollDoc."No." = '' THEN
                       DocNo := '';
                   END;
                   ValidateDocNo;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             RUS=Параметры] }

      { 1210000;2;Field     ;
                  Name=DocumentTypeTextBox;
                  CaptionML=[ENU=Document Type;
                             RUS=Тип документа];
                  OptionCaptionML=[ENU=Payroll Document,Posted Payroll Document;
                                   RUS=Зарплатный документ,Учтенный зарплатный документ];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=DocType;
                  OnValidate=BEGIN
                               DocNo := '';
                               ValidateDocNo;
                             END;
                              }

      { 8   ;2   ;Field     ;
                  Name=DocumentNoTextBox;
                  CaptionML=[ENU=Document No.;
                             RUS=Номер документа];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=DocNo;
                  OnValidate=BEGIN
                               ValidateDocNo;
                             END;

                  OnLookup=BEGIN
                             LookupDocNo;
                           END;
                            }

      { 5   ;2   ;Field     ;
                  CaptionML=[ENU=Employee No.;
                             RUS=Код сотрудника];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=FromPayrollDoc."Employee No.";
                  Editable=FALSE }

      { 7   ;2   ;Field     ;
                  CaptionML=[ENU=Posting Date;
                             RUS=Дата учета];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=FromPayrollDoc."Posting Date";
                  Editable=FALSE }

      { 1210002;2;Field     ;
                  Name=IncludeHeaderCheckBox;
                  CaptionML=[ENU=Include Header;
                             RUS=Включать заголовок];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=IncludeHeader }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      PayrollDoc@1007 : Record 17414;
      FromPayrollDoc@1010 : Record 17414;
      FromPostedPayrollDoc@1210000 : Record 17416;
      CopyPayrollDocMgt@1210002 : Codeunit 17408;
      DocNo@1025 : Code[20];
      DocType@1210001 : 'Payroll Document,Posted Payroll Document';
      IncludeHeader@1210003 : Boolean;

    LOCAL PROCEDURE ValidateDocNo@1();
    BEGIN
      IF DocNo = '' THEN
        FromPayrollDoc.INIT
      ELSE
        IF DocNo <> FromPayrollDoc."No." THEN BEGIN
          FromPayrollDoc.INIT;
          CASE DocType OF
            DocType::"Payroll Document":
              FromPayrollDoc.GET(DocNo);
            DocType::"Posted Payroll Document":
              BEGIN
                FromPostedPayrollDoc.GET(DocNo);
                FromPayrollDoc.TRANSFERFIELDS(FromPostedPayrollDoc);
              END;
          END;
        END;
      FromPayrollDoc."No." := '';
    END;

    LOCAL PROCEDURE LookupDocNo@3();
    BEGIN
      CASE DocType OF
        DocType::"Payroll Document":
          BEGIN
            FromPayrollDoc."No." := DocNo;
            IF (DocNo = '') AND (PayrollDoc."Employee No." <> '') THEN
              IF FromPayrollDoc.SETCURRENTKEY("Employee No.") THEN BEGIN
                FromPayrollDoc.FILTERGROUP(2);
                FromPayrollDoc.SETRANGE("Employee No.",PayrollDoc."Employee No.");
                FromPayrollDoc.FILTERGROUP(0);
                FromPayrollDoc."Employee No." := PayrollDoc."Employee No.";
                IF FromPayrollDoc.FIND('=><') THEN;
              END;
            IF PAGE.RUNMODAL(0,FromPayrollDoc) = ACTION::LookupOK THEN
              DocNo := FromPayrollDoc."No.";
          END;
        DocType::"Posted Payroll Document":
          BEGIN
            FromPostedPayrollDoc."No." := DocNo;
            IF (DocNo = '') AND (PayrollDoc."Employee No." <> '') THEN
              IF FromPostedPayrollDoc.SETCURRENTKEY("Employee No.") THEN BEGIN
                FromPostedPayrollDoc.FILTERGROUP(2);
                FromPostedPayrollDoc.SETRANGE("Employee No.",PayrollDoc."Employee No.");
                FromPostedPayrollDoc.FILTERGROUP(0);
                FromPostedPayrollDoc."Employee No." := PayrollDoc."Employee No.";
                IF FromPostedPayrollDoc.FIND('=><') THEN;
              END;
            IF PAGE.RUNMODAL(0,FromPostedPayrollDoc) = ACTION::LookupOK THEN
              DocNo := FromPostedPayrollDoc."No.";
          END;
      END;
      ValidateDocNo;
    END;

    PROCEDURE SetPayrollDoc@2(VAR NewPayrollDoc@1000 : Record 17414);
    BEGIN
      NewPayrollDoc.TESTFIELD("No.");
      NewPayrollDoc.TESTFIELD("Employee No.");
      PayrollDoc := NewPayrollDoc;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

