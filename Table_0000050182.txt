OBJECT Table 50182 FiRe Attribute
{
  OBJECT-PROPERTIES
  {
    Date=24.02.16;
    Time=11:29:22;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=[ENU=FiRe Attribute;
               RUS=FiRe атрибут];
    LookupPageID=Page50250;
  }
  FIELDS
  {
    { 10  ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              RUS=Код] }
    { 20  ;   ;Name                ;Text100       ;OnValidate=BEGIN
                                                                IF "SQL Result Column Name" = '' THEN
                                                                  "SQL Result Column Name" := FiReMgt.ConvrertAliasName(Name);
                                                              END;

                                                   CaptionML=[ENU=Name;
                                                              RUS=Название] }
    { 25  ;   ;Export Buffer Field Id;Integer     ;OnValidate=VAR
                                                                Field@1101495000 : Record 2000000041;
                                                              BEGIN
                                                                IF "Export Buffer Field Id" <> 0 THEN BEGIN
                                                                  Field.GET(DATABASE::"FiRe Export Buffer","Export Buffer Field Id");
                                                                  CASE Field.Type OF
                                                                    Field.Type::TableFilter,Field.Type::OemCode:
                                                                      "Data Type" := "Data Type"::Text;
                                                                    Field.Type::Decimal:
                                                                      "Data Type" := "Data Type"::Decimal;
                                                                    Field.Type::Date:
                                                                      "Data Type" := "Data Type"::Date;
                                                                    Field.Type::Integer:
                                                                      "Data Type" := "Data Type"::Integer;
                                                                  END;
                                                                  IF "Sequence No." = 0 THEN
                                                                    VALIDATE("Sequence No.","Export Buffer Field Id");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Export Buffer Field Id;
                                                              RUS=Номер поля буфера экспорта] }
    { 30  ;   ;SQL Result Column Name;Text100     ;CaptionML=[ENU=SQL Result Column Name;
                                                              RUS=Имя столбца результата SQL] }
    { 50  ;   ;Data Type           ;Option        ;OnValidate=BEGIN
                                                                EvaluateDefaultValue;
                                                              END;

                                                   CaptionML=[ENU=Data Type;
                                                              RUS=Тип данных];
                                                   OptionCaptionML=[ENU=Text,Decimal,Date,Integer;
                                                                    RUS=Текст,Десятичное,Дата,Целое];
                                                   OptionString=Text,Decimal,Date,Integer }
    { 60  ;   ;Sequence No.        ;Integer       ;OnValidate=VAR
                                                                FiReAttribute@1170000000 : Record 50182;
                                                                FiReExportSchemeAttribute@1170000001 : Record 50185;
                                                              BEGIN
                                                                IF "Sequence No." <> 0 THEN BEGIN
                                                                  FiReAttribute.SETRANGE("Sequence No.","Sequence No.");
                                                                  FiReAttribute.SETFILTER(Code,'<>%1',Code);
                                                                  IF FiReAttribute.FINDFIRST THEN
                                                                    ERROR(SequenceNoExistsErr,"Sequence No.",FiReAttribute.Code);

                                                                  FiReExportSchemeAttribute.SETRANGE("Attribute Code",Code);
                                                                  FiReExportSchemeAttribute.MODIFYALL("Sequence No.","Sequence No.");
                                                                END;
                                                              END;

                                                   CaptionML=ENU=Sequence No. }
    { 70  ;   ;Default Value       ;Text30        ;OnValidate=BEGIN
                                                                EvaluateDefaultValue;
                                                              END;

                                                   CaptionML=ENU=Default Value }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;Sequence No.                             }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      FiReMgt@1101495000 : Codeunit 50056;
      SequenceNoExistsErr@1170000000 : TextConst 'ENU=The sequence number %1 has been already used for FiRe Attribute %2.';
      EvaluateToIntegerErr@1170000001 : TextConst 'ENU=Cannot evaluate %1 to integer.';
      EvaluateToDecimalErr@1170000002 : TextConst 'ENU=Cannot evaluate %1 to decimal.';
      EvaluateToDateErr@1170000003 : TextConst 'ENU=Cannot evaluate %1 to date.';

    PROCEDURE EvaluateDefaultValue@1170000001();
    VAR
      IntegerValue@1170000000 : Integer;
      DecimalValue@1170000001 : Decimal;
      DateValue@1170000002 : Date;
    BEGIN
      IF "Default Value" <> '' THEN
        CASE "Data Type" OF
          "Data Type"::Integer:
            IF NOT EVALUATE(IntegerValue,"Default Value") THEN
              ERROR(EvaluateToIntegerErr,"Default Value");
          "Data Type"::Decimal:
            IF NOT EVALUATE(DecimalValue,"Default Value") THEN
              ERROR(EvaluateToDecimalErr,"Default Value");
          "Data Type"::Date:
            IF NOT EVALUATE(DateValue,"Default Value") THEN
              ERROR(EvaluateToDateErr,"Default Value");
        END;
    END;

    BEGIN
    {
      NCS-1897 ORM Table created
    }
    END.
  }
}

