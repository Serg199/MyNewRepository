OBJECT Page 39 General Journal
{
  OBJECT-PROPERTIES
  {
    Date=09.08.17;
    Time=18:10:15;
    Modified=Yes;
    Version List=NAVW110.00,NAVRU10.00,NOS-26;
  }
  PROPERTIES
  {
    CaptionML=[ENU=General Journal;
               RUS=Финансовый журнал];
    SaveValues=Yes;
    SourceTable=Table81;
    DataCaptionExpr=DataCaption;
    DelayedInsert=Yes;
    PageType=Worksheet;
    AutoSplitKey=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Bank,Application,Payroll,Approve;
                                RUS=Создать,Обработать,Отчет,Банк,Применение,Зарплата,Утвердить];
    OnInit=BEGIN
             TotalBalanceVisible := TRUE;
             BalanceVisible := TRUE;
           END;

    OnOpenPage=VAR
                 JnlSelected@1000 : Boolean;
               BEGIN
                 BalAccName := '';
                 IF IsOpenedFromBatch THEN BEGIN
                   CurrentJnlBatchName := "Journal Batch Name";
                   GenJnlManagement.OpenJnl(CurrentJnlBatchName,Rec);
                   SetControlAppearance;
                   EXIT;
                 END;
                 GenJnlManagement.TemplateSelection(PAGE::"General Journal",0,FALSE,Rec,JnlSelected);
                 IF NOT JnlSelected THEN
                   ERROR('');
                 GenJnlManagement.OpenJnl(CurrentJnlBatchName,Rec);
                 SetControlAppearance;
               END;

    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                       HasIncomingDocument := "Incoming Document Entry No." <> 0;
                       SetUserInteractions;

                       //NC S1880.1 > PCH
                       //IF CurrForm.ctrl_AccName2.VISIBLE THEN
                       GenJnlManagement2.GetAccounts(Rec,AccName2,BalAccName2);
                       //NC S1880.1 < PCH

                       // NC NOS-26 > SPA
                       PostingDateStyleExpr := DimMgt.fn_ColorBlockDim("Dimension Set ID", "Posting Date");
                       // NC NOS-26 < SPA
                     END;

    OnNewRecord=BEGIN
                  UpdateBalance;
                  SetUpNewLine(xRec,Balance,BelowxRec);
                  CLEAR(ShortcutDimCode);
                  CLEAR(AccName);
                  SetUserInteractions;

                  //NC MDB05.3 > DP
                  IF xRec."Account No." = '' THEN
                    "Account Type" := "Account Type"::"G/L Account";
                  Amount := -(TotalBalance + "Balance (LCY)" - xRec."Balance (LCY)");
                  //NC MDB05.3 < DP
                END;

    OnModifyRecord=BEGIN
                     SetUserInteractions;
                   END;

    OnAfterGetCurrRecord=VAR
                           TableID@1101495001 : ARRAY [10] OF Integer;
                           No@1101495000 : ARRAY [10] OF Code[20];
                         BEGIN
                           GenJnlManagement.GetAccounts(Rec,AccName,BalAccName);
                           UpdateBalance;
                           SetControlAppearance;
                           CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromRecord(Rec);
                           // NC NOS-26 > SPA
                           SpecifyTableID_No(TableID,No);
                           CurrPage.DimensionsList.PAGE.RefreshList("Dimension Set ID",TableID,No);
                           // NC NOS-26 < SPA
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 75      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 RUS=&Строка];
                      Image=Line }
      { 1470012 ;2   ;Action    ;
                      CaptionML=[ENU=Card;
                                 RUS=Карточка];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 12408;
                      RunPageLink=Journal Template Name=FIELD(Journal Template Name),
                                  Journal Batch Name=FIELD(Journal Batch Name),
                                  Line No.=FIELD(Line No.);
                      Image=EditLines }
      { 76      ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 RUS=Измерения];
                      ToolTipML=[ENU=View or edits dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 RUS=Просмотр или изменение измерений, например области, проекта или отдела, которые можно назначать документам покупки и продажи для распределения себестоимости и анализа истории транзакций.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Image=Dimensions;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowDimensions;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 43      ;1   ;ActionGroup;
                      CaptionML=[ENU=A&ccount;
                                 RUS=С&чет];
                      Image=ChartOfAccounts }
      { 44      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 RUS=Карточка];
                      ToolTipML=[ENU=View or change detailed information about the record that is being processed on the journal line.;
                                 RUS=Просмотр или изменение подробных сведений о записи, обрабатываемой в строке журнала.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Codeunit 15;
                      Image=EditLines }
      { 45      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Ledger E&ntries;
                                 RUS=&Книга операций];
                      ToolTipML=[ENU=View the history of transactions that have been posted for the selected record.;
                                 RUS=Просмотр истории транзакций, которые были учтены для выбранной записи.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Codeunit 14;
                      Promoted=No;
                      Image=GLRegisters;
                      PromotedCategory=Process }
      { 66      ;1   ;Action    ;
                      Name=Approvals;
                      AccessByPermission=TableData 454=R;
                      CaptionML=[ENU=Approvals;
                                 RUS=Утверждения];
                      ToolTipML=[ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                                 RUS=Просмотр списка записей, ожидающих утверждения. Например, вы можете видеть имя пользователя, запросившего утверждение записи, время отправки запроса и время, когда он должен быть утвержден.];
                      ApplicationArea=#Suite;
                      Image=Approvals;
                      OnAction=VAR
                                 GenJournalLine@1001 : Record 81;
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 GetCurrentlySelectedLines(GenJournalLine);
                                 ApprovalsMgmt.ShowJournalApprovalEntries(GenJournalLine);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 46      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 RUS=Ф&ункции];
                      Image=Action }
      { 13      ;2   ;Action    ;
                      CaptionML=[ENU=Renumber Document Numbers;
                                 RUS=Перенумеровать документы];
                      ToolTipML=[ENU=Resort the numbers in the Document No. column to avoid posting errors because the document numbers are not in sequence. Entry applications and line groupings are preserved.;
                                 RUS=Пересортировка номеров в столбце "Номер документа", чтобы избежать ошибок учета, если номера документов не упорядочены. Применения операций и группировки строк сохраняются.];
                      ApplicationArea=#Basic,#Suite;
                      Image=EditLines;
                      OnAction=BEGIN
                                 RenumberDocumentNo
                               END;
                                }
      { 92      ;2   ;Action    ;
                      CaptionML=[ENU=Insert Conv. LCY Rndg. Lines;
                                 RUS=Вставить строки округл. для конвертации в руб.];
                      ToolTipML=[ENU=Insert a rounding correction line in the journal. This rounding correction line will balance in LCY when amounts in the foreign currency also balance. You can then post the journal.;
                                 RUS=Вставка строки корректировки округления в журнал. Эта корректирующая строка округления будет балансировать суммы в рублях, если суммы в иностранной валюте также сбалансированы. Затем можно приступать к учету журнала.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Codeunit 407;
                      Image=InsertCurrency }
      { 107     ;2   ;Separator ;
                      CaptionML=[ENU=-;
                                 RUS=-] }
      { 109     ;2   ;Action    ;
                      Name=GetStandardJournals;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Get Standard Journals;
                                 RUS=&Получить стандартные журналы];
                      ToolTipML=[ENU=Select a standard general journal to be inserted.;
                                 RUS=Выбор стандартного финансового журнала для вставки.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=GetStandardJournal;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 StdGenJnl@1000 : Record 750;
                               BEGIN
                                 StdGenJnl.FILTERGROUP := 2;
                                 StdGenJnl.SETRANGE("Journal Template Name","Journal Template Name");
                                 StdGenJnl.FILTERGROUP := 0;

                                 IF PAGE.RUNMODAL(PAGE::"Standard General Journals",StdGenJnl) = ACTION::LookupOK THEN BEGIN
                                   StdGenJnl.CreateGenJnlFromStdJnl(StdGenJnl,CurrentJnlBatchName);
                                   MESSAGE(Text000,StdGenJnl.Code);
                                 END;

                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 108     ;2   ;Action    ;
                      Name=SaveAsStandardJournal;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Save as Standard Journal;
                                 RUS=&Сохранить как стандартный журнал];
                      ToolTipML=[ENU=Define the journal lines that you want to use later as a standard journal before you post the journal.;
                                 RUS=Определение строк журнала, которые будут использоваться позднее в качестве стандартного журнала перед учетом журнала.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=SaveasStandardJournal;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 GenJnlBatch@1001 : Record 232;
                                 GeneralJnlLines@1004 : Record 81;
                                 StdGenJnl@1002 : Record 750;
                                 SaveAsStdGenJnl@1003 : Report 750;
                               BEGIN
                                 GeneralJnlLines.SETFILTER("Journal Template Name","Journal Template Name");
                                 GeneralJnlLines.SETFILTER("Journal Batch Name",CurrentJnlBatchName);
                                 CurrPage.SETSELECTIONFILTER(GeneralJnlLines);
                                 GeneralJnlLines.COPYFILTERS(Rec);

                                 GenJnlBatch.GET("Journal Template Name",CurrentJnlBatchName);
                                 SaveAsStdGenJnl.Initialise(GeneralJnlLines,GenJnlBatch);
                                 SaveAsStdGenJnl.RUNMODAL;
                                 IF NOT SaveAsStdGenJnl.GetStdGeneralJournal(StdGenJnl) THEN
                                   EXIT;

                                 MESSAGE(Text001,StdGenJnl.Code);
                               END;
                                }
      { 49      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Test Report;
                                 RUS=Тестовый отчет];
                      ToolTipML=[ENU=View a test report so that you can find and correct any errors before you perform the actual posting of the journal or document.;
                                 RUS=Просмотр тестового отчета, чтобы можно было найти и исправить все ошибки перед учетом журнала или документа.];
                      ApplicationArea=#Basic,#Suite;
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintGenJnlLine(Rec);
                               END;
                                }
      { 50      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      CaptionML=[ENU=P&ost;
                                 RUS=У&чет];
                      ToolTipML=[ENU=Finalize the document or journal by posting the amounts and quantities to the related accounts in your company books.;
                                 RUS=Завершение подготовки документа или журнала путем учета сумм и количеств на соответствующих счетах в книгах организации.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",Rec);
                                 CurrentJnlBatchName := GETRANGEMAX("Journal Batch Name");
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 48      ;2   ;Action    ;
                      Name=Preview;
                      CaptionML=[ENU=Preview Posting;
                                 RUS=Предварительный просмотр учета];
                      ToolTipML=[ENU=Review the different types of entries that will be created when you post the document or journal.;
                                 RUS=Просмотр различных типов операций, которые будут созданы в результате учета документа или журнала.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=No;
                      Image=ViewPostedOrder;
                      OnAction=VAR
                                 GenJnlPost@1000 : Codeunit 231;
                               BEGIN
                                 GenJnlPost.Preview(Rec);
                               END;
                                }
      { 51      ;2   ;Action    ;
                      Name=PostAndPrint;
                      ShortCutKey=Shift+F9;
                      CaptionML=[ENU=Post and &Print;
                                 RUS=Учет и &печать];
                      ToolTipML=[ENU=Finalize and prepare to print the document or journal. The values and quantities are posted to the related accounts. A report request window where you can specify what to include on the print-out.;
                                 RUS=Завершение подготовки документа или журнала и его подготовка к печати. Значения и количества учитываются на соответствующих счетах. В окне запроса отчета можно указать, какая информация должна выводиться на печать.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post+Print",Rec);
                                 CurrentJnlBatchName := GETRANGEMAX("Journal Batch Name");
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 58      ;2   ;Action    ;
                      Name=DeferralSchedule;
                      CaptionML=[ENU=Deferral Schedule;
                                 RUS=План РБП];
                      ToolTipML=[ENU=View or edit the deferral schedule that governs how expenses or revenue are deferred to different accounting periods when the journal line is posted.;
                                 RUS=Просмотр или изменение плана РБП, который определяет, как расходы или доходы будут относиться к различным учетным периодам при учете строки журнала.];
                      ApplicationArea=#Suite;
                      Image=PaymentPeriod;
                      OnAction=BEGIN
                                 IF "Account Type" = "Account Type"::"Fixed Asset" THEN
                                   ERROR(AccTypeNotSupportedErr);

                                 ShowDeferrals("Posting Date","Currency Code");
                               END;
                                }
      { 56      ;2   ;ActionGroup;
                      Name=IncomingDocument;
                      CaptionML=[ENU=Incoming Document;
                                 RUS=Входящий документ];
                      ActionContainerType=NewDocumentItems;
                      Image=Documents }
      { 54      ;3   ;Action    ;
                      Name=IncomingDocCard;
                      CaptionML=[ENU=View Incoming Document;
                                 RUS=Просмотр входящего документа];
                      ToolTipML=[ENU=View any incoming document records and file attachments that exist for the entry or document.;
                                 RUS=Просмотр всех входящих записей документов и вложенных файлов, имеющихся для операции или документа.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=HasIncomingDocument;
                      Image=ViewOrder;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IncomingDocument.ShowCardFromEntryNo("Incoming Document Entry No.");
                               END;
                                }
      { 52      ;3   ;Action    ;
                      Name=SelectIncomingDoc;
                      AccessByPermission=TableData 130=R;
                      CaptionML=[ENU=Select Incoming Document;
                                 RUS=Выбрать входящий документ];
                      ToolTipML=[ENU=Select an incoming document record and file attachment that you want to link to the entry or document.;
                                 RUS=Выбор входящей записи документа и вложенного файла, которые нужно связать с операцией или документом.];
                      ApplicationArea=#Basic,#Suite;
                      Image=SelectLineToApply;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 VALIDATE("Incoming Document Entry No.",IncomingDocument.SelectIncomingDocument("Incoming Document Entry No.",RECORDID));
                               END;
                                }
      { 47      ;3   ;Action    ;
                      Name=IncomingDocAttachFile;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create Incoming Document from File;
                                 RUS=Создать входящий документ из файла];
                      ToolTipML=[ENU=Create an incoming document record by selecting a file to attach, and then link the incoming document record to the entry or document.;
                                 RUS=Создание входящей записи документа путем выбора файла вложения и связывание входящей записи документа с операцией или документом.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NOT HasIncomingDocument;
                      Image=Attach;
                      OnAction=VAR
                                 IncomingDocumentAttachment@1000 : Record 133;
                               BEGIN
                                 IncomingDocumentAttachment.NewAttachmentFromGenJnlLine(Rec);
                               END;
                                }
      { 42      ;3   ;Action    ;
                      Name=RemoveIncomingDoc;
                      CaptionML=[ENU=Remove Incoming Document;
                                 RUS=Удалить входящий документ];
                      ToolTipML=[ENU=Remove the link to an incoming document record and file attachment.;
                                 RUS=Удаление ссылки на запись входящего документа и вложенного файла.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=HasIncomingDocument;
                      Image=RemoveLine;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IF IncomingDocument.GET("Incoming Document Entry No.") THEN
                                   IncomingDocument.RemoveLinkToRelatedRecord;
                                 "Incoming Document Entry No." := 0;
                                 MODIFY(TRUE);
                               END;
                                }
      { 1101495052;2 ;Action    ;
                      CaptionML=[ENU=Fill Multiple Lines with Dimension Value;
                                 RUS=Вставка Значений Измерений в несколько строк];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Dimensions;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Rec1@1101495000 : Record 81;
                               BEGIN
                                 //NC PIF041 > DP
                                 Rec1 := Rec;
                                 Rec1.SETRECFILTER;
                                 Rec1.SETRANGE("Line No.");
                                 REPORT.RUN(REPORT::"Copy Dimensions Gen. Journal", TRUE, TRUE, Rec1);
                                 //NC PIF041 < DP
                               END;
                                }
      { 1101495053;2 ;Action    ;
                      CaptionML=[ENU=Copy Dim. Value from Deal;
                                 RUS=Копировать Измерения Сделки];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=CopyDimensions;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 GJNL@1101495002 : Record 81;
                                 MovingDataSetup@1101495001 : Record 50064;
                                 Deal@1101495000 : Record 50037;
                                 TempDimSetEntry@1101495003 : TEMPORARY Record 480;
                                 DimensionSetEntry@1101495007 : Record 480;
                                 DimensionValue@1101495005 : Record 349;
                                 DimMgt@1101495004 : Codeunit 408;
                                 NewDimensionSetID@1101495006 : Integer;
                               BEGIN
                                 //NC NCS-1788.1 > DP
                                 IF NOT CONFIRM(Text50001,FALSE) THEN
                                   EXIT;
                                 //NC NCS-1788.1 < DP

                                 //NC NCS-1788 > DP
                                 MovingDataSetup.GET;
                                 GJNL := Rec;
                                 GJNL.COPYFILTERS(Rec);
                                 IF GJNL.FINDSET THEN
                                   REPEAT
                                     //NC NOS-26 > SPA
                                     IF DimensionSetEntry.GET(GJNL."Dimension Set ID", MovingDataSetup."Deal Dimension Code") AND
                                        (DimensionSetEntry."Dimension Value Code" <> '')
                                     THEN
                                       IF Deal.GET(DimensionSetEntry."Dimension Value Code") THEN BEGIN
                                         DimMgt.GetDimensionSet(TempDimSetEntry, GJNL."Dimension Set ID");
                                         IF Deal.Book <> '' THEN BEGIN
                                           DimensionValue.GET(MovingDataSetup."BOOK Dimension Code",Deal.Book);
                                           TempDimSetEntry."Dimension Code" := MovingDataSetup."BOOK Dimension Code";
                                           IF TempDimSetEntry.FIND THEN
                                             TempDimSetEntry.DELETE;
                                           TempDimSetEntry."Dimension Value Code" := Deal.Book;
                                           TempDimSetEntry."Dimension Value ID" := DimensionValue."Dimension Value ID";
                                           TempDimSetEntry.SetObject(GJNL);
                                           TempDimSetEntry.INSERT(TRUE);
                                         END;
                                         IF Deal."Financial instrument No." <> '' THEN BEGIN
                                           DimensionValue.GET(MovingDataSetup."FI Dimension Code",Deal."Financial instrument No.");
                                           TempDimSetEntry."Dimension Code" := MovingDataSetup."FI Dimension Code";
                                           IF TempDimSetEntry.FIND THEN
                                             TempDimSetEntry.DELETE;
                                           TempDimSetEntry."Dimension Value Code" := Deal."Financial instrument No.";
                                           TempDimSetEntry."Dimension Value ID" := DimensionValue."Dimension Value ID";
                                           TempDimSetEntry.SetObject(GJNL);
                                           TempDimSetEntry.INSERT(TRUE);
                                         END;
                                         NewDimensionSetID := DimMgt.GetDimensionSetID(TempDimSetEntry);
                                         IF GJNL."Dimension Set ID" <> NewDimensionSetID THEN BEGIN
                                           DimMgt.UpdateGenJnlLineDim(GJNL,NewDimensionSetID);
                                           GJNL.MODIFY(TRUE);
                                         END;
                                       END;

                                     {
                                     JnlLineDim.SETRANGE("Table ID",81);
                                     JnlLineDim.SETRANGE("Journal Template Name",GJNL."Journal Template Name");
                                     JnlLineDim.SETRANGE("Journal Batch Name",GJNL."Journal Batch Name");
                                     JnlLineDim.SETRANGE("Journal Line No.",GJNL."Line No.");
                                     JnlLineDim.SETRANGE(JnlLineDim."Dimension Code",MovingDataSetup."Deal Dimension Code");
                                     IF JnlLineDim.FINDFIRST AND (JnlLineDim."Dimension Value Code"<>'') THEN BEGIN
                                       IF Deal.GET(JnlLineDim."Dimension Value Code") THEN BEGIN
                                         IF Deal.Book<>'' THEN BEGIN
                                           JnlLineDim2.INIT;
                                           JnlLineDim2."Table ID":=81;
                                           JnlLineDim2."Journal Template Name":=GJNL."Journal Template Name";
                                           JnlLineDim2."Journal Batch Name":=GJNL."Journal Batch Name";
                                           JnlLineDim2."Journal Line No.":=GJNL."Line No.";
                                           JnlLineDim2."Dimension Code":=MovingDataSetup."BOOK Dimension Code";
                                           JnlLineDim2."Dimension Value Code":=Deal.Book;
                                           IF NOT JnlLineDim2.INSERT(TRUE) THEN
                                             JnlLineDim2.MODIFY(TRUE);
                                         END;
                                         IF Deal."Financial instrument No."<>'' THEN BEGIN
                                          JnlLineDim2.INIT;
                                          JnlLineDim2."Table ID":=81;
                                          JnlLineDim2."Journal Template Name":=GJNL."Journal Template Name";
                                          JnlLineDim2."Journal Batch Name":=GJNL."Journal Batch Name";
                                          JnlLineDim2."Journal Line No.":=GJNL."Line No.";
                                          JnlLineDim2."Dimension Code":=MovingDataSetup."FI Dimension Code";
                                          JnlLineDim2."Dimension Value Code":=Deal."Financial instrument No.";
                                          IF NOT JnlLineDim2.INSERT(TRUE) THEN
                                            JnlLineDim2.MODIFY(TRUE);
                                         END;
                                       END;
                                     END;
                                     }
                                     //NC NOS-26 < SPA
                                   UNTIL GJNL.NEXT=0;
                                 //NC NCS-1788 > DP
                               END;
                                }
      { 1101495054;2 ;Action    ;
                      CaptionML=[ENU=Copy General Ledger;
                                 RUS=Копировать Фин. Книгу Операций];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=CopyWorksheet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //NC TR195 > EB
                                 CLEAR(CopyGL);
                                 CopyGL.SetJnlParam("Journal Template Name", "Journal Batch Name");
                                 CopyGL.RUNMODAL;
                                 //NC TR195 < EB
                               END;
                                }
      { 1101495055;2 ;Action    ;
                      CaptionML=[ENU=Import from CSV;
                                 RUS=Импорт из CSV файла];
                      ApplicationArea=#Basic,#Suite;
                      Image=Import;
                      OnAction=VAR
                                 l_recGenJnLine@1101495000 : Record 81;
                               BEGIN
                                 ERROR('Функция пока не готова.');
                                 //TDRANCS-1691 >
                                 l_recGenJnLine.COPY(Rec);
                                 l_recGenJnLine.FILTERGROUP(2);
                                 // NC SPA #TODO# -- импорт из датапорта, которого нет
                                 // l_dpJLImpExcel.fn_SetParam(l_recGenJnLine.GETFILTER("Journal Template Name"),l_recGenJnLine.GETFILTER("Journal Batch Name"));
                                 // l_dpJLImpExcel.RUNMODAL;
                                 //TDRANCS-1691 <
                               END;
                                }
      { 1101495056;2 ;Action    ;
                      CaptionML=[ENU=Import Employee Expenses from Excel;
                                 RUS=Импорт расходов сотрудников из Excel];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=ImportExcel;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ImportEmployeeExpenses@1101495000 : Report 50209;
                               BEGIN
                                 // NCS-1924 > ORM
                                 ImportEmployeeExpenses.SetGenJnlLine(Rec);
                                 ImportEmployeeExpenses.RUNMODAL;
                                 // NCS-1924 < ORM
                               END;
                                }
      { 1101495057;2 ;Separator  }
      { 1101495058;2 ;Action    ;
                      CaptionML=[ENU=A&pprove Document;
                                 RUS=Утвердить Документ];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 // NC NCS-1880 ORM
                                 ApproveSelected;
                               END;
                                }
      { 1101495059;2 ;Action    ;
                      CaptionML=[ENU=&Reopen Document;
                                 RUS=Открыть Документ];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ReOpen;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 // NC NCS-1880 ORM
                                 ReopenSelected;
                               END;
                                }
      { 1101495060;2 ;Separator  }
      { 1101495061;2 ;Action    ;
                      CaptionML=[ENU=Set Dimension Value INC.TAX;
                                 RUS=Проставить Измерение INC.TAX];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=TaxDetail;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 GenJnlLine@1101495001 : Record 81;
                                 MovingDataSetup@1101495000 : Record 50064;
                               BEGIN
                                 GLSetup.GET;
                                 MovingDataSetup.GET;
                                 GLSetup.TESTFIELD("Taxable Dimension Code");
                                 GenJnlLine := Rec;
                                 GenJnlLine.COPYFILTERS(Rec);

                                 //NC TAX01 > PCH
                                 GenJnlLine.SETRANGE("Journal Template Name", "Journal Template Name");
                                 GenJnlLine.SETRANGE("Journal Batch Name", "Journal Batch Name");
                                 REPORT.RUNMODAL(REPORT::"Update Inc. Tax", TRUE, FALSE, GenJnlLine);
                                 CurrPage.UPDATE(FALSE);
                                 //NC TAX01 < PCH
                               END;
                                }
      { 1101495062;2 ;ActionGroup;
                      CaptionML=[ENU=System;
                                 RUS=Системные функции];
                      Image=Administration }
      { 1101495063;3 ;Action    ;
                      CaptionML=[ENU=Set INCOMING BALANCE Agreement;
                                 RUS=Проставить договор INCOMING BALANCE];
                      Image=AgreementQuote;
                      OnAction=VAR
                                 Vendor@1101495006 : Record 23;
                                 Customer@1101495005 : Record 18;
                                 VendorAgreement@1101495004 : Record 14901;
                                 CustomerAgreement@1101495003 : Record 14902;
                                 DefaultDimension@1101495002 : Record 50128;
                                 DimensionValue@1101495001 : Record 349;
                                 GenJournalLine@1101495000 : Record 81;
                                 DimensionSetEntry@1101495007 : Record 480;
                                 TempDimSetEntry@1101495008 : TEMPORARY Record 480;
                                 DimMgt@1101495009 : Codeunit 408;
                               BEGIN
                                 // NC > AIG
                                 // по поставщикам
                                 GenJournalLine.RESET;
                                 GenJournalLine.COPYFILTERS(Rec);
                                 GenJournalLine.SETRANGE("Journal Template Name", Rec."Journal Template Name");
                                 GenJournalLine.SETRANGE("Journal Batch Name", Rec."Journal Batch Name");
                                 GenJournalLine.SETRANGE("Account Type", GenJournalLine."Account Type"::Vendor);
                                 GenJournalLine.SETRANGE("Agreement No.", '');
                                 IF GenJournalLine.FINDSET THEN
                                   REPEAT
                                     Vendor.GET(GenJournalLine."Account No.");
                                     IF Vendor."Agreement Posting" = Vendor."Agreement Posting"::Mandatory THEN BEGIN
                                       VendorAgreement.INIT;
                                       VendorAgreement."Vendor No." := Vendor."No.";
                                       VendorAgreement."No." := 'INCOMING BALANCE';
                                       VendorAgreement."Deal No." := 'INCOMING BALANCE';
                                       VendorAgreement.Active := TRUE;
                                       IF VendorAgreement.INSERT THEN BEGIN
                                         DimensionValue.INIT;
                                         DimensionValue."Dimension Code" := 'DEAL';
                                         DimensionValue.Code := 'INCOMING BALANCE';
                                         //IF DimensionValue.INSERT THEN; // NC NOS-26 SPA
                                         IF DimensionValue.INSERT(TRUE) THEN; // NC NOS-26 SPA

                                         DefaultDimension.INIT;
                                         DefaultDimension."Table ID" := 14901;
                                         DefaultDimension."Source No." := Vendor."No.";
                                         DefaultDimension."No." := 'INCOMING BALANCE';
                                         DefaultDimension."Dimension Code" := 'DEAL';
                                         DefaultDimension."Dimension Value Code" := 'INCOMING BALANCE';
                                         IF DefaultDimension.INSERT THEN;

                                         //NC NOS-26 > SPA
                                         IF NOT DimensionSetEntry.GET(GenJournalLine."Dimension Set ID",'DEAL') THEN BEGIN
                                           DimMgt.GetDimensionSet(TempDimSetEntry,GenJournalLine."Dimension Set ID");
                                           TempDimSetEntry.VALIDATE("Dimension Code",'DEAL');
                                           TempDimSetEntry.VALIDATE("Dimension Value Code",'INCOMING BALANCE');
                                           TempDimSetEntry.INSERT;
                                           DimMgt.UpdateGenJnlLineDim(GenJournalLine, DimMgt.GetDimensionSetID(TempDimSetEntry));
                                         END;
                                         {
                                         JnlLineDimension.INIT;
                                         JnlLineDimension."Table ID" := 81;
                                         JnlLineDimension."Journal Template Name" := Rec."Journal Template Name";
                                         JnlLineDimension."Journal Batch Name" := Rec."Journal Batch Name";
                                         JnlLineDimension."Journal Line No." := GenJournalLine."Line No.";
                                         JnlLineDimension."Dimension Code" := 'DEAL';
                                         JnlLineDimension."Dimension Value Code" := 'INCOMING BALANCE';
                                         IF JnlLineDimension.INSERT THEN;
                                         }
                                         //NC NOS-26 < SPA
                                       END;
                                       GenJournalLine."Agreement No." := 'INCOMING BALANCE';
                                       GenJournalLine.MODIFY;
                                     END ELSE
                                       MESSAGE('Для поставщика %1 не установлена обязательность договора. Договор не создан.', Vendor."No.");
                                   UNTIL GenJournalLine.NEXT = 0;

                                 // по клиентам
                                 GenJournalLine.RESET;
                                 GenJournalLine.COPYFILTERS(Rec);
                                 GenJournalLine.SETRANGE("Journal Template Name", Rec."Journal Template Name");
                                 GenJournalLine.SETRANGE("Journal Batch Name", Rec."Journal Batch Name");
                                 GenJournalLine.SETRANGE("Account Type", GenJournalLine."Account Type"::Customer);
                                 GenJournalLine.SETRANGE("Agreement No.", '');
                                 IF GenJournalLine.FINDSET THEN
                                 REPEAT
                                   Customer.GET(GenJournalLine."Account No.");
                                   IF Customer."Agreement Posting" = Customer."Agreement Posting"::Mandatory THEN BEGIN
                                     CustomerAgreement.INIT;
                                     CustomerAgreement."Customer No." := Customer."No.";
                                     CustomerAgreement."No." := 'INCOMING BALANCE';
                                     CustomerAgreement."Deal No." := 'INCOMING BALANCE';
                                     CustomerAgreement.Active := TRUE;
                                     IF CustomerAgreement.INSERT THEN BEGIN
                                       DimensionValue.INIT;
                                       DimensionValue."Dimension Code" := 'DEAL';
                                       DimensionValue.Code := 'INCOMING BALANCE';
                                       //IF DimensionValue.INSERT THEN; // NC NOS-26 SPA
                                       IF DimensionValue.INSERT(TRUE) THEN; // NC NOS-26 SPA

                                       DefaultDimension.INIT;
                                       DefaultDimension."Table ID" := 14902;
                                       DefaultDimension."Source No." := Vendor."No.";
                                       DefaultDimension."No." := 'INCOMING BALANCE';
                                       DefaultDimension."Dimension Code" := 'DEAL';
                                       DefaultDimension."Dimension Value Code" := 'INCOMING BALANCE';
                                       IF DefaultDimension.INSERT THEN;

                                       //NC NOS-26 > SPA
                                         IF NOT DimensionSetEntry.GET(GenJournalLine."Dimension Set ID",'DEAL') THEN BEGIN
                                           DimMgt.GetDimensionSet(TempDimSetEntry,GenJournalLine."Dimension Set ID");
                                           TempDimSetEntry.VALIDATE("Dimension Code",'DEAL');
                                           TempDimSetEntry.VALIDATE("Dimension Value Code",'INCOMING BALANCE');
                                           TempDimSetEntry.INSERT;
                                           DimMgt.UpdateGenJnlLineDim(GenJournalLine, DimMgt.GetDimensionSetID(TempDimSetEntry));
                                         END;
                                       {
                                       JnlLineDimension.INIT;
                                       JnlLineDimension."Table ID" := 81;
                                       JnlLineDimension."Journal Template Name" := Rec."Journal Template Name";
                                       JnlLineDimension."Journal Batch Name" := Rec."Journal Batch Name";
                                       JnlLineDimension."Journal Line No." := GenJournalLine."Line No.";
                                       JnlLineDimension."Dimension Code" := 'DEAL';
                                       JnlLineDimension."Dimension Value Code" := 'INCOMING BALANCE';
                                       }
                                       //NC NOS-26 < SPA
                                     END;

                                     GenJournalLine."Agreement No." := 'INCOMING BALANCE';
                                     GenJournalLine.MODIFY;
                                   END ELSE
                                     MESSAGE('Для клиента %1 не установлена обязательность договора. Договор не создан.', Customer."No.");
                                 UNTIL GenJournalLine.NEXT = 0;
                                 // NC < AIG
                               END;
                                }
      { 1101495064;3 ;Action    ;
                      CaptionML=[ENU=Delete Lines & Update Buffer;
                                 RUS=Удалить проводки. Откатить в буфер.];
                      Image=Replan;
                      OnAction=VAR
                                 GenJournalLine@1101495002 : Record 81;
                                 GenJournalLine1@1101495001 : Record 81;
                                 ConsDataBuffer@1101495000 : Record 50008;
                               BEGIN
                                 IF NOT CONFIRM(Text55002) THEN
                                   EXIT;

                                 GenJournalLine.COPYFILTERS(Rec);
                                 IF GenJournalLine.FINDSET THEN
                                   REPEAT
                                     GenJournalLine1.RESET;
                                     GenJournalLine1.SETCURRENTKEY("Buffer Entry No.","Cons. Source Code");
                                     GenJournalLine1.SETRANGE("Buffer Entry No.", GenJournalLine."Buffer Entry No.");
                                     GenJournalLine1.SETRANGE("Cons. Source Code", GenJournalLine."Cons. Source Code");
                                     IF GenJournalLine1.FINDSET THEN REPEAT
                                       GenJournalLine1.DELETE(TRUE); // SPA: Why is deletion resided in the loop? Why not DELETEALL(TRUE)? What about performance issues? secrets in the dark...
                                     UNTIL GenJournalLine1.NEXT = 0;

                                     ConsDataBuffer.GET(GenJournalLine."Cons. Source Code", GenJournalLine."Buffer Entry No.");
                                     ConsDataBuffer."Export Consolidation Register" := 0;
                                     ConsDataBuffer.MODIFY;

                                   UNTIL GenJournalLine.NEXT = 0;
                               END;
                                }
      { 1101495065;3 ;Action    ;
                      CaptionML=[ENU=Line Check;
                                 RUS=Проверка строк];
                      Image=CheckJournal;
                      OnAction=VAR
                                 GenJnlLine@1101495000 : Record 81;
                               BEGIN
                                 GenJnlLine := Rec;
                                 GenJnlLine.COPYFILTERS(Rec);

                                 //NC TAX01 > RD
                                 GenJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
                                 GenJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
                                 REPORT.RUNMODAL(REPORT::"Update Inc. Tax by Document",TRUE,FALSE,GenJnlLine);
                                 //NC TAX01 < RD
                               END;
                                }
      { 1101495066;3 ;Action    ;
                      CaptionML=[ENU=ACY Posting;
                                 RUS=Учесть ДОВ];
                      Image=PostingEntries;
                      OnAction=VAR
                                 Rec1@1101495000 : Record 81;
                               BEGIN
                                 //NC PIF041 > DP
                                 Rec1 := Rec;
                                 Rec1.SETRECFILTER;
                                 Rec1.SETRANGE("Line No.");
                                 REPORT.RUN(REPORT::"Set ACY Amount",TRUE,TRUE,Rec1);
                                 //NC PIF041 < DP
                               END;
                                }
      { 1101495067;3 ;Action    ;
                      CaptionML=[ENU=Not Translate;
                                 RUS=Не Транслировать];
                      Image=CancelLine;
                      OnAction=VAR
                                 l_recGJLine@1101495000 : Record 81;
                                 l_Text000@1101495001 : TextConst 'ENU=UnCheck,Check;RUS=Снять, Установить';
                               BEGIN
                                 //TDRANCS-1425 >
                                 fn_CheckUserSetup(FIELDNO("Not Translate"));
                                 //TDRANCS-1425 <

                                 // TDRANCS-749>
                                 CurrPage.SETSELECTIONFILTER(l_recGJLine);
                                 IF l_recGJLine.FINDSET THEN BEGIN
                                   CASE STRMENU(l_Text000,2) OF
                                     1: l_recGJLine.MODIFYALL("Not Translate",FALSE);
                                     2: l_recGJLine.MODIFYALL("Not Translate",TRUE);
                                   END;
                                 END;
                               END;
                                }
      { 1101495068;3 ;Action    ;
                      CaptionML=[ENU=Not Translate to IFRS;
                                 RUS=Не Транслировать в IFRS];
                      Image=CancelLine;
                      OnAction=VAR
                                 l_recGJLine@1101495000 : Record 81;
                                 l_Text000@1101495001 : TextConst 'ENU=UnCheck,Check;RUS=Снять, Установить';
                               BEGIN
                                 //TDRANCS-1425 >
                                 fn_CheckUserSetup(FIELDNO("Not Translate IFRS"));
                                 //TDRANCS-1425 <

                                 // TDRANCS-749>
                                 CurrPage.SETSELECTIONFILTER(l_recGJLine);
                                 IF l_recGJLine.FINDSET THEN BEGIN
                                   CASE STRMENU(l_Text000,2) OF
                                     1: l_recGJLine.MODIFYALL("Not Translate IFRS",FALSE,TRUE);
                                     2: l_recGJLine.MODIFYALL("Not Translate IFRS",TRUE,TRUE);
                                   END;
                                 END;
                               END;
                                }
      { 1101495069;2 ;Action    ;
                      CaptionML=[ENU=Import from Excel;
                                 RUS=Импорт из Excel];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ImportExcel;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 l_recGenJnLine@1101495001 : Record 81;
                               BEGIN
                                 ERROR('Функция пока не готова.');
                                 // TDRANCS-431 >
                                 l_recGenJnLine.COPY(Rec);
                                 l_recGenJnLine.FILTERGROUP(2);
                                 // NC SPA #TODO# -- отчет пока не перенесен
                                 //l_repJLImpExcel.fn_SetParam(l_recGenJnLine.GETFILTER("Journal Template Name"),l_recGenJnLine.GETFILTER("Journal Batch Name"));
                                 //l_repJLImpExcel.RUNMODAL;
                                 // TDRANCS-431 <
                               END;
                                }
      { 1101495070;2 ;Separator  }
      { 1101495071;2 ;Action    ;
                      CaptionML=[ENU=Upload FX Adjustment from Excel;
                                 RUS=Импорт FX Корректировок из Excel];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ImportExcel;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 l_recGenJnLine@1101495001 : Record 81;
                                 l_repFXAdjImpExcel@1101495000 : Report 50056;
                               BEGIN
                                 // TDRANCS-1256
                                 l_recGenJnLine.COPY(Rec);
                                 l_recGenJnLine.FILTERGROUP(2);
                                 l_repFXAdjImpExcel.fn_SetParam(l_recGenJnLine.GETFILTER("Journal Template Name"),l_recGenJnLine.GETFILTER("Journal Batch Name"));
                                 l_repFXAdjImpExcel.RUNMODAL;
                               END;
                                }
      { 1101495072;2 ;Separator  }
      { 1101495073;2 ;Action    ;
                      CaptionML=[ENU=Upload 1-80-CURR from Excel;
                                 RUS=Импорт 1-80-CURR из Excel];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ImportExcel;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 l_recGenJnLine@1101495001 : Record 81;
                                 l_rep1_80_CURR@1101495000 : Report 50057;
                               BEGIN
                                 //TDRANCS-1256>
                                 l_recGenJnLine.COPY(Rec);
                                 l_recGenJnLine.FILTERGROUP(2);
                                 l_rep1_80_CURR.fn_SetParam(l_recGenJnLine.GETFILTER("Journal Template Name"),l_recGenJnLine.GETFILTER("Journal Batch Name"));
                                 l_rep1_80_CURR.RUNMODAL;
                               END;
                                }
      { 1101495078;2 ;Action    ;
                      CaptionML=[ENU=Fill in Dimension Value by Mapping;
                                 RUS=Наполнить аналитиками по мэппингу];
                      Promoted=Yes;
                      Image=MapDimensions;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 GenJnlLine@1101495001 : Record 81;
                                 rep@1101495000 : Report 50187;
                               BEGIN
                                 //NCS-2444 > AAP
                                 CLEAR(rep);
                                 CurrPage.SETSELECTIONFILTER(GenJnlLine);
                                 GenJnlLine.MARKEDONLY(TRUE);
                                 //#TODO# перенести отчет
                                 //rep.SetVar(GenJnlLine);
                                 //rep.RUNMODAL;
                                 //NCS-2444 < AAP
                               END;
                                }
      { 24      ;1   ;ActionGroup;
                      CaptionML=[ENU=B&ank;
                                 RUS=Б&анк] }
      { 11      ;2   ;Action    ;
                      Name=ImportBankStatement;
                      CaptionML=[ENU=Import Bank Statement;
                                 RUS=Импорт банковской выписки];
                      Promoted=Yes;
                      Visible=FALSE;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 IF FINDLAST THEN;
                                 ImportBankStatement;
                               END;
                                }
      { 21      ;2   ;Action    ;
                      Name=ShowStatementLineDetails;
                      CaptionML=[ENU=Bank Statement Details;
                                 RUS=Подробные сведения выписки с банк. счета];
                      RunObject=Page 1221;
                      RunPageLink=Data Exch. No.=FIELD(Data Exch. Entry No.),
                                  Line No.=FIELD(Data Exch. Line No.);
                      Promoted=Yes;
                      Visible=FALSE;
                      PromotedIsBig=Yes;
                      Image=ExternalDocument;
                      PromotedCategory=Category4 }
      { 23      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=[ENU=Reconcile;
                                 RUS=Выверить];
                      ToolTipML=[ENU=View the balances on bank accounts that are marked for reconciliation, usually liquid accounts.;
                                 RUS=Просмотр балансов банковских счетов, промаркированных для выверки (как правило, ликвидных счетов).];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Reconcile;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 GLReconcile.SetGenJnlLine(Rec);
                                 GLReconcile.RUN;
                               END;
                                }
      { 25      ;1   ;ActionGroup;
                      CaptionML=[ENU=Application;
                                 RUS=Применение] }
      { 91      ;2   ;Action    ;
                      Name=Apply Entries;
                      ShortCutKey=Shift+F11;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Apply Entries;
                                 RUS=Применить операции];
                      ToolTipML=[ENU=Select one or more ledger entries that you want to apply this record to so that the related posted documents are closed as paid or refunded.;
                                 RUS=Выберите одну или несколько операций книги, которые нужно применить к этой записи, чтобы связанные учтенные документы были закрыты как оплаченные или возмещенные.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Codeunit 225;
                      Promoted=Yes;
                      Image=ApplyEntries;
                      PromotedCategory=Category5 }
      { 27      ;2   ;Action    ;
                      Name=Match;
                      CaptionML=[ENU=Apply Automatically;
                                 RUS=Применить автоматически];
                      RunObject=Codeunit 1250;
                      Promoted=Yes;
                      Visible=FALSE;
                      PromotedIsBig=Yes;
                      Image=MapAccounts;
                      PromotedCategory=Category5 }
      { 34      ;2   ;Action    ;
                      Name=AddMappingRule;
                      CaptionML=[ENU=Map Text to Account;
                                 RUS=Определить соответствие текста счетам];
                      Promoted=Yes;
                      Visible=FALSE;
                      PromotedIsBig=Yes;
                      Image=CheckRulesSyntax;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 TextToAccMapping@1000 : Record 1251;
                               BEGIN
                                 TextToAccMapping.InsertRec(Rec);
                               END;
                                }
      { 9       ;1   ;ActionGroup;
                      CaptionML=[ENU=Payro&ll;
                                 RUS=Зарп&лата] }
      { 29      ;2   ;Action    ;
                      Name=ImportPayrollFile;
                      CaptionML=[ENU=Import Payroll File;
                                 RUS=Импорт файла зарплаты];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=FALSE;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 GeneralLedgerSetup@1000 : Record 98;
                                 ImportPayrollTransaction@1001 : Codeunit 1202;
                               BEGIN
                                 GeneralLedgerSetup.GET;
                                 GeneralLedgerSetup.TESTFIELD("Payroll Trans. Import Format");
                                 IF FINDLAST THEN;
                                 ImportPayrollTransaction.SelectAndImportPayrollDataToGL(Rec,GeneralLedgerSetup."Payroll Trans. Import Format");
                               END;
                                }
      { 96      ;2   ;Action    ;
                      Name=ImportPayrollTransactions;
                      CaptionML=[ENU=Import Payroll Transactions;
                                 RUS=Импорт транзакций зарплаты];
                      ToolTipML=[ENU=Import Payroll Transactions;
                                 RUS=Импорт транзакций зарплаты];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=ImportPayrollTransactionsAvailable;
                      PromotedIsBig=Yes;
                      Image=ImportChartOfAccounts;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 IF FINDLAST THEN;
                                 PayrollManagement.ImportPayroll(Rec);
                               END;
                                }
      { 64      ;1   ;ActionGroup;
                      CaptionML=[ENU=Request Approval;
                                 RUS=Утверждение запросов] }
      { 82      ;2   ;ActionGroup;
                      Name=SendApprovalRequest;
                      CaptionML=[ENU=Send Approval Request;
                                 RUS=Отправить запрос на утверждение];
                      Image=SendApprovalRequest }
      { 62      ;3   ;Action    ;
                      Name=SendApprovalRequestJournalBatch;
                      CaptionML=[ENU=Journal Batch;
                                 RUS=Раздел журнала];
                      ToolTipML=[ENU=Send all journal lines for approval, also those that you may not see because of filters.;
                                 RUS=Отправка всех строк журнала на утверждение, включая те, которые вы можете не видеть из-за фильтров.];
                      ApplicationArea=#Suite;
                      Enabled=NOT OpenApprovalEntriesOnBatchOrAnyJnlLineExist;
                      Image=SendApprovalRequest;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.TrySendJournalBatchApprovalRequest(Rec);
                                 SetControlAppearance;
                               END;
                                }
      { 84      ;3   ;Action    ;
                      Name=SendApprovalRequestJournalLine;
                      CaptionML=[ENU=Selected Journal Lines;
                                 RUS=Выбранные строки журнала];
                      ToolTipML=[ENU=Send selected journal lines for approval.;
                                 RUS=Отправка выбранных строк журнала на утверждение.];
                      ApplicationArea=#Suite;
                      Enabled=NOT OpenApprovalEntriesOnBatchOrCurrJnlLineExist;
                      Image=SendApprovalRequest;
                      OnAction=VAR
                                 GenJournalLine@1001 : Record 81;
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 GetCurrentlySelectedLines(GenJournalLine);
                                 ApprovalsMgmt.TrySendJournalLineApprovalRequests(GenJournalLine);
                               END;
                                }
      { 86      ;2   ;ActionGroup;
                      Name=CancelApprovalRequest;
                      CaptionML=[ENU=Cancel Approval Request;
                                 RUS=Отменить запрос на утверждение];
                      Image=Cancel }
      { 60      ;3   ;Action    ;
                      Name=CancelApprovalRequestJournalBatch;
                      CaptionML=[ENU=Journal Batch;
                                 RUS=Раздел журнала];
                      ToolTipML=[ENU=Cancel sending all journal lines for approval, also those that you may not see because of filters.;
                                 RUS=Отмена отправки всех строк журнала на утверждение, включая те, которые вы можете не видеть из-за фильтров.];
                      ApplicationArea=#Suite;
                      Enabled=CanCancelApprovalForJnlBatch;
                      Image=CancelApprovalRequest;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.TryCancelJournalBatchApprovalRequest(Rec);
                                 SetControlAppearance;
                               END;
                                }
      { 88      ;3   ;Action    ;
                      Name=CancelApprovalRequestJournalLine;
                      CaptionML=[ENU=Selected Journal Lines;
                                 RUS=Выбранные строки журнала];
                      ToolTipML=[ENU=Cancel sending selected journal lines for approval.;
                                 RUS=Отмена отправки выбранных строк журнала на утверждение.];
                      ApplicationArea=#Suite;
                      Enabled=CanCancelApprovalForJnlLine;
                      Image=CancelApprovalRequest;
                      OnAction=VAR
                                 GenJournalLine@1001 : Record 81;
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 GetCurrentlySelectedLines(GenJournalLine);
                                 ApprovalsMgmt.TryCancelJournalLineApprovalRequests(GenJournalLine);
                               END;
                                }
      { 78      ;1   ;ActionGroup;
                      CaptionML=[ENU=Approval;
                                 RUS=Утверждение] }
      { 74      ;2   ;Action    ;
                      Name=Approve;
                      CaptionML=[ENU=Approve;
                                 RUS=Утвердить];
                      ToolTipML=[ENU=Approve the requested changes.;
                                 RUS=Утверждение запрошенных изменений.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.ApproveGenJournalLineRequest(Rec);
                               END;
                                }
      { 72      ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=[ENU=Reject;
                                 RUS=Отклонить];
                      ToolTipML=[ENU=Reject the approval request.;
                                 RUS=Отклонение запроса на утверждение.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.RejectGenJournalLineRequest(Rec);
                               END;
                                }
      { 70      ;2   ;Action    ;
                      Name=Delegate;
                      CaptionML=[ENU=Delegate;
                                 RUS=Делегировать];
                      ToolTipML=[ENU=Delegate the approval to a substitute approver.;
                                 RUS=Делегирование утверждения заместителю утверждающего лица.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.DelegateGenJournalLineRequest(Rec);
                               END;
                                }
      { 68      ;2   ;Action    ;
                      Name=Comment;
                      CaptionML=[ENU=Comments;
                                 RUS=Комментарии];
                      ToolTipML=[ENU=View or add comments.;
                                 RUS=Просмотр или добавление комментариев.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 GenJournalBatch@1001 : Record 232;
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 IF OpenApprovalEntriesOnJnlLineExist THEN
                                   ApprovalsMgmt.GetApprovalComment(Rec)
                                 ELSE
                                   IF OpenApprovalEntriesOnJnlBatchExist THEN
                                     IF GenJournalBatch.GET("Journal Template Name","Journal Batch Name") THEN
                                       ApprovalsMgmt.GetApprovalComment(GenJournalBatch);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 39  ;1   ;Field     ;
                Lookup=Yes;
                CaptionML=[ENU=Batch Name;
                           RUS=Код раздела];
                ToolTipML=[ENU=Specifies the batch name of the general journal.;
                           RUS=Определяет название раздела финансового журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CurrentJnlBatchName;
                OnValidate=BEGIN
                             GenJnlManagement.CheckName(CurrentJnlBatchName,Rec);
                             CurrentJnlBatchNameOnAfterVali;
                           END;

                OnLookup=BEGIN
                           CurrPage.SAVERECORD;
                           GenJnlManagement.LookupName(CurrentJnlBatchName,Rec);
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 1101495020;2;Field  ;
                SourceExpr="Line No." }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the posting date for the entry.;
                           RUS=Определяет дату учета операции.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Date";
                StyleExpr=PostingDateStyleExpr }

    { 83  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date on the document that provides the basis for the entry on the journal line.;
                           RUS=Определяет дату документа, на которой базируется операция в строке журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Date";
                Visible=FALSE;
                StyleExpr=StyleTxt }

    { 1101495045;2;Field  ;
                SourceExpr="Due Date" }

    { 1101495074;2;Field  ;
                SourceExpr="Account Type" }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the account number that the entry on the journal line will be posted to.;
                           RUS=Определяет номер счета, в котором будет учтена операция строки журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Account No.";
                StyleExpr=StyleTxt;
                OnValidate=BEGIN
                             GenJnlManagement.GetAccounts(Rec,AccName,BalAccName);
                             ShowShortcutDimCode(ShortcutDimCode);
                             SetUserInteractions;
                             CurrPage.UPDATE;
                           END;
                            }

    { 1101495051;2;Field  ;
                CaptionML=[ENU=Account Name;
                           RUS=Счет Название];
                SourceExpr=AccName2;
                Visible=FALSE;
                Editable=FALSE }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of document that the entry on the journal line is.;
                           RUS=Определяет тип документа, который имеет операция в строке журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Type";
                StyleExpr=StyleTxt }

    { 1101495029;2;Field  ;
                SourceExpr="FI Posting Group";
                Visible=FALSE }

    { 1101495030;2;Field  ;
                Name=G;
                SourceExpr="FI EntryType";
                Visible=FALSE }

    { 1101495009;2;Field  ;
                SourceExpr="Reversing Entry" }

    { 1101495031;2;Field  ;
                SourceExpr="Amount Type";
                Visible=FALSE }

    { 1101495032;2;Field  ;
                SourceExpr="FI Portfolio";
                Visible=FALSE }

    { 1101495033;2;Field  ;
                SourceExpr="FI Posting Book";
                Visible=FALSE }

    { 1101495006;2;Field  ;
                SourceExpr=Conversation;
                Visible=FALSE }

    { 1101495034;2;Field  ;
                SourceExpr="Conversation ID";
                Visible=FALSE }

    { 1101495007;2;Field  ;
                SourceExpr="Short Position";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a document number for the journal line.;
                           RUS=Определяет номер документа для строки журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document No." }

    { 81  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a document number that refers to the customer's or vendor's numbering system.;
                           RUS=Определяет номер документа, относящийся к системе нумерации клиента или поставщика.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="External Document No.";
                Visible=FALSE }

    { 1470010;2;Field     ;
                SourceExpr=Prepayment;
                Visible=FALSE }

    { 1210000;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Correction }

    { 1101495022;2;Field  ;
                SourceExpr="Financial Instrument No." }

    { 1210002;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Group";
                Visible=FALSE }

    { 1210004;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Source Type";
                Visible=FALSE }

    { 1210006;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Source No.";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a description of the entry. The field is automatically filled when the Account No. field is filled.;
                           RUS=Определяет описание операции. Поле заполняется автоматически при заполнении поля "Номер счета".];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                StyleExpr=StyleTxt }

    { 1210010;2;Field     ;
                ToolTipML=[ENU=Specifies the prepayment document number associated with the general journal line.;
                           RUS=Определяет номер документа предоплаты, связанный со строкой финансового журнала.];
                SourceExpr="Prepayment Document No.";
                Visible=FALSE }

    { 1210008;2;Field     ;
                ToolTipML=[ENU=Specifies the agreement number associated with the general journal line.;
                           RUS=Определяет номер соглашения, связанный со строкой финансового журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Agreement No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             ShowShortcutDimCode(ShortcutDimCode);
                           END;
                            }

    { 1101495036;2;Field  ;
                SourceExpr="Agreement Condition No." }

    { 1101495019;2;Field  ;
                SourceExpr="Description 2";
                Visible=FALSE }

    { 71  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the business unit that the entry derives from in a consolidated company.;
                           RUS=Определяет код филиала в консолидированной организации, откуда происходит операция.];
                SourceExpr="Business Unit Code";
                Visible=FALSE }

    { 65  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the salesperson or purchaser who is linked to the journal line.;
                           RUS=Определяет менеджера по продажам или покупкам, связанного со строкой журнала.];
                ApplicationArea=#Suite;
                SourceExpr="Salespers./Purch. Code";
                Visible=FALSE }

    { 93  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the campaign the journal line is linked to.;
                           RUS=Определяет номер кампании, с которой связана строка журнала.];
                SourceExpr="Campaign No.";
                Visible=FALSE }

    { 67  ;2   ;Field     ;
                AssistEdit=Yes;
                ToolTipML=[ENU=Specifies the code of the currency for the amounts on the journal line.;
                           RUS=Определяет код валюты для сумм в строке журнала.];
                ApplicationArea=#Suite;
                SourceExpr="Currency Code";
                Visible=FALSE;
                OnAssistEdit=BEGIN
                               ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date");
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);

                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the general posting type that will be used when you post the entry on this journal line.;
                           RUS=Определяет общий тип учета, который будет использоваться при учете операции в этой строке журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Gen. Posting Type";
                Visible=FALSE }

    { 77  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the general business posting group that will be used when you post the entry on the journal line.;
                           RUS=Определяет общую бизнес-группу, которая будет использоваться при учете операции в строке журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Gen. Bus. Posting Group";
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the general product posting group that will be used when you post the entry on the journal line.;
                           RUS=Определяет код общей товарной группы, который будет использоваться при учете операции в строке журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Gen. Prod. Posting Group";
                Visible=FALSE }

    { 41  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the VAT business posting group code that will be used when you post the entry on the journal line.;
                           RUS=Определяет код бизнес-группы НДС, который будет использоваться при учете операции в строке журнала.];
                SourceExpr="VAT Bus. Posting Group";
                Visible=FALSE }

    { 85  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the VAT product posting group that will be used when you post the entry on the journal line.;
                           RUS=Определяет код товарной группы НДС, который будет использоваться при учете операции в строке журнала.];
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the total amount (including VAT) that the journal line consists of.;
                           RUS=Определяет общую сумму (включая НДС) строки журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Amount;
                StyleExpr=StyleTxt }

    { 1000;2   ;Field     ;
                ToolTipML=[ENU=Specifies the total amount (including VAT) that the journal line consists of, if it is a debit amount.;
                           RUS=Определяет общую сумму (включая НДС) строки журнала, если это сумма дебета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Debit Amount";
                Visible=False }

    { 1001;2   ;Field     ;
                ToolTipML=[ENU=Specifies the total amount (including VAT) that the journal line consists of, if it is a credit amount.;
                           RUS=Определяет общую сумму (включая НДС) строки журнала, если это сумма кредита.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Credit Amount";
                Visible=False }

    { 1470004;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Amount (LCY)" }

    { 1470006;2;Field     ;
                ToolTipML=[ENU=Specifies the debit amount, in local currency, associated with the general journal line.;
                           RUS=Определяет сумму дебета в местной валюте, связанную со строкой финансового журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Debit Amount (LCY)";
                Visible=FALSE }

    { 1470008;2;Field     ;
                ToolTipML=[ENU=Specifies the credit amount, in local currency, associated with the general journal line.;
                           RUS=Определяет сумму кредита в местной валюте, связанную со строкой финансового журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Credit Amount (LCY)";
                Visible=FALSE }

    { 101 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount of VAT included in the total amount.;
                           RUS=Определяет сумму НДС, включенную в общую сумму.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Amount";
                Visible=FALSE }

    { 99  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the difference between the calculate VAT amount and the VAT amount that you have entered manually.;
                           RUS=Определяет разницу между вычисленной суммой НДС и суммой НДС, введенной вручную.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Difference";
                Visible=FALSE }

    { 40  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the quantity of items to be included on the journal line.;
                           RUS=Определяет количество товаров, которое должно быть включено в строку журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Quantity;
                Visible=False }

    { 1101495024;2;Field  ;
                SourceExpr="Debit Quantity";
                Visible=FALSE }

    { 1101495025;2;Field  ;
                SourceExpr="Credit Quantity";
                Visible=FALSE }

    { 103 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount of Bal. VAT included in the total amount.;
                           RUS=Определяет сумму "Бал. НДС", включенную в общую сумму.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. VAT Amount";
                Visible=FALSE }

    { 105 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the difference between the calculate VAT amount and the VAT amount that you have entered manually.;
                           RUS=Определяет разницу между вычисленной суммой НДС и суммой НДС, введенной вручную.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. VAT Difference";
                Visible=FALSE }

    { 1101495075;2;Field  ;
                SourceExpr="Bal. Account Type" }

    { 55  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the general ledger, customer, vendor, or bank account to which a balancing entry for the journal line will posted (for example, a cash account for cash purchases).;
                           RUS=Определяет номер главной книги, клиента, поставщика или банковского счета, где будет учитываться балансовая операция строки журнала (например, счет кассы для покупок за наличные).];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. Account No.";
                StyleExpr=StyleTxt;
                OnValidate=BEGIN
                             GenJnlManagement.GetAccounts(Rec,AccName,BalAccName);
                             ShowShortcutDimCode(ShortcutDimCode);
                           END;
                            }

    { 57  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the general posting type associated with the balancing account that will be used when you post the entry on the journal line.;
                           RUS=Определяет общий тип учета, связанный с балансирующим счетом, который будет использоваться при учете операции в строке журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. Gen. Posting Type";
                Visible=FALSE }

    { 79  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the general business posting group code associated with the balancing account that will be used when you post the entry.;
                           RUS=Определяет код общей бизнес-группы, связанный с балансирующим счетом, который будет использоваться при учете операции.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. Gen. Bus. Posting Group";
                Visible=FALSE }

    { 59  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the general product posting group code associated with the balancing account that will be used when you post the entry.;
                           RUS=Определяет код общей товарной группы, связанный с балансирующим счетом, который будет использоваться при учете операции.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. Gen. Prod. Posting Group";
                Visible=FALSE }

    { 87  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the VAT business posting group that will be used when you post the entry on the journal line.;
                           RUS=Определяет код бизнес-группы НДС, который будет использоваться при учете операции в строке журнала.];
                SourceExpr="Bal. VAT Bus. Posting Group";
                Visible=FALSE }

    { 89  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the VAT product posting group that will be used when you post the entry on the journal line.;
                           RUS=Определяет код товарной группы НДС, который будет использоваться при учете операции в строке журнала.];
                SourceExpr="Bal. VAT Prod. Posting Group";
                Visible=FALSE }

    { 95  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the address code of the bill-to customer or pay-to vendor that the entry is linked to.;
                           RUS=Определяет код адреса плательщика или поставщика, с которым связана операция.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to/Pay-to No.";
                Visible=FALSE }

    { 97  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the address code of the ship-to customer or order-from vendor that the entry is linked to.;
                           RUS=Определяет код адреса клиента, которому осуществляется поставка, либо поставщика, у которого делается заказ, с которым связана операция.];
                SourceExpr="Ship-to/Order Address Code";
                Visible=FALSE }

    { 61  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for Shortcut Dimension 1.;
                           RUS=Определяет код ярлыка измерения 1.];
                ApplicationArea=#Suite;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 63  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for Shortcut Dimension 2.;
                           RUS=Определяет код ярлыка измерения 2.];
                ApplicationArea=#Suite;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 300 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(3),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                             //NC NCS-1616 > USE
                             GLSetup.GET;
                             fn_CreateLinkDim(GLSetup."Shortcut Dimension 3 Code",ShortcutDimCode[3]);
                             //NC NCS-1616 < USE
                           END;
                            }

    { 302 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(4),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                             //NC NCS-1616 > USE
                             GLSetup.GET;
                             fn_CreateLinkDim(GLSetup."Shortcut Dimension 4 Code",ShortcutDimCode[4]);
                             //NC NCS-1616 < USE
                           END;
                            }

    { 304 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(5),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                             //NC NCS-1616 > USE
                             GLSetup.GET;
                             fn_CreateLinkDim(GLSetup."Shortcut Dimension 5 Code",ShortcutDimCode[5]);
                             //NC NCS-1616 < USE
                           END;
                            }

    { 306 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(6),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                             //NC NCS-1616 > USE
                             GLSetup.GET;
                             fn_CreateLinkDim(GLSetup."Shortcut Dimension 6 Code",ShortcutDimCode[6]);
                             //NC NCS-1616 < USE
                           END;
                            }

    { 308 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(7),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                             //NC NCS-1616 > USE
                             GLSetup.GET;
                             fn_CreateLinkDim(GLSetup."Shortcut Dimension 7 Code",ShortcutDimCode[7]);
                             //NC NCS-1616 < USE
                           END;
                            }

    { 310 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(8),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                             //NC NCS-1616 > USE
                             GLSetup.GET;
                             fn_CreateLinkDim(GLSetup."Shortcut Dimension 8 Code",ShortcutDimCode[8]);
                             //NC NCS-1616 < USE
                           END;
                            }

    { 1101495049;2;Field  ;
                SourceExpr=ShortcutDimCode[9];
                CaptionClass='1,2,9';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(9),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(9,ShortcutDimCode[9]);
                             //NC NCS-1616 > USE
                             GLSetup.GET;
                             fn_CreateLinkDim(GLSetup."Shortcut Dimension 9 Code",ShortcutDimCode[9]);
                             //NC NCS-1616 < USE
                           END;
                            }

    { 1101495050;2;Field  ;
                SourceExpr=ShortcutDimCode[10];
                CaptionClass='1,2,10';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(10),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(10,ShortcutDimCode[10]);
                             //NC NCS-1616 > USE
                             GLSetup.GET;
                             fn_CreateLinkDim(GLSetup."Shortcut Dimension 10 Code",ShortcutDimCode[10]);
                             //NC NCS-1616 < USE
                           END;
                            }

    { 69  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code that represents the payments terms that apply to the entry on the journal line.;
                           RUS=Определяет код, представляющий условия оплаты, применяемые к операции в строке журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Terms Code";
                Visible=FALSE }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of the posted document that this document or journal line will be applied to when you post, for example to register payment.;
                           RUS=Определяет тип учтенного документа, к которому будет применен этот документ или строка журнала, например при учете с целью регистрации оплаты.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to Doc. Type";
                Visible=FALSE }

    { 26  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the posted document that this document or journal line will be applied to when you post, for example to register payment.;
                           RUS=Определяет номер учтенного документа, к которому будет применен этот документ или строка журнала, например при учете с целью регистрации оплаты.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to Doc. No.";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of entries that will be applied to when you choose the Apply Entries action.;
                           RUS=Определяет код операций, которые будут применены при выборе команды "Применить операции".];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to ID";
                Visible=FALSE }

    { 1101495040;2;Field  ;
                SourceExpr="Appl. to FI Entry No.";
                Visible=FALSE }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the journal line has been invoiced, and you execute the payment suggestions batch job, or you create a finance charge memo or reminder.;
                           RUS=Указывает, что строка журнала включена в счет и выполняется пакетное задание предложений по оплате либо создается процент-нота или напоминание.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="On Hold";
                Visible=FALSE }

    { 73  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the reason code that has been entered on the journal lines.;
                           RUS=Определяет код причины, введенный в строках журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Reason Code";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the payment type to be used for the entry on the payment journal line.;
                           RUS=Определяет код типа оплаты, используемый для операции в строке журнала платежей.];
                SourceExpr="Bank Payment Type";
                Visible=FALSE }

    { 1470013;2;Field     ;
                ToolTipML=[ENU=Specifies the additional VAT ledger sheet associated with the general journal line.;
                           RUS=Определяет дополнительный лист книги НДС, связанный со строкой финансового журнала.];
                SourceExpr="Additional VAT Ledger Sheet";
                Visible=FALSE }

    { 1470015;2;Field     ;
                ToolTipML=[ENU=Specifies the corrected document date associated with the general journal line.;
                           RUS=Определяет дату скорректированного документа, связанную со строкой финансового журнала.];
                SourceExpr="Corrected Document Date";
                Visible=FALSE }

    { 1101495026;2;Field  ;
                SourceExpr="Buffer Entry No.";
                Visible=FALSE }

    { 1101495014;2;Field  ;
                SourceExpr="External Document Type";
                Visible=FALSE }

    { 1101495015;2;Field  ;
                SourceExpr="External Document ID";
                Visible=FALSE }

    { 1101495016;2;Field  ;
                SourceExpr="External Document Date";
                Visible=FALSE }

    { 1101495017;2;Field  ;
                SourceExpr="External Operation No";
                Visible=FALSE }

    { 1101495018;2;Field  ;
                SourceExpr="Source Historical Date";
                Visible=FALSE }

    { 1101495001;2;Field  ;
                SourceExpr="Except Correspondence";
                Visible=FALSE }

    { 1101495000;2;Field  ;
                SourceExpr="Currency Index Entry";
                Visible=FALSE }

    { 1101495021;2;Field  ;
                SourceExpr="Currency Index";
                Visible=FALSE }

    { 1101495003;2;Field  ;
                SourceExpr=Elimination;
                Visible=FALSE }

    { 1101495027;2;Field  ;
                SourceExpr="Eliminated Entry No.";
                Visible=FALSE }

    { 1101495035;2;Field  ;
                SourceExpr="Inv. Discount (LCY)";
                Visible=FALSE }

    { 1101495011;2;Field  ;
                SourceExpr="System-Created Entry" }

    { 1101495041;2;Field  ;
                SourceExpr="Source Currency Code" }

    { 1101495023;2;Field  ;
                SourceExpr="Additional-Currency Posting" }

    { 1101495010;2;Field  ;
                SourceExpr="Is Inc. Tax" }

    { 1101495012;2;Field  ;
                SourceExpr="FA Operation" }

    { 1101495044;2;Field  ;
                SourceExpr="Depreciation Book Code" }

    { 1101495043;2;Field  ;
                SourceExpr="FA Posting Type" }

    { 1101495037;2;Field  ;
                SourceExpr="Line Dimension Value";
                Visible=FALSE }

    { 1101495028;2;Field  ;
                SourceExpr="Local G/L Account";
                Visible=FALSE }

    { 1101495004;2;Field  ;
                SourceExpr="Not Translate" }

    { 1101495005;2;Field  ;
                SourceExpr="Not Translate IFRS" }

    { 1101495002;2;Field  ;
                SourceExpr="Not Consolidate";
                Visible=FALSE }

    { 1101495039;2;Field  ;
                SourceExpr="Transaction Type";
                Visible=FALSE }

    { 1101495008;2;Field  ;
                SourceExpr="Allow Zero-Amount Posting" }

    { 1101495038;2;Field  ;
                SourceExpr="Source G/L Account No.";
                Visible=FALSE }

    { 1101495048;2;Field  ;
                SourceExpr="External System ID" }

    { 1101495046;2;Field  ;
                SourceExpr="Modified By" }

    { 1101495047;2;Field  ;
                SourceExpr="Approved By" }

    { 1101495013;2;Field  ;
                SourceExpr="Interest Accrual";
                Visible=FALSE }

    { 19  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the incoming document that this general journal line is created for.;
                           RUS=Определяет номер входящего документа, для которого создается эта строка финансового журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Incoming Document Entry No.";
                Visible=FALSE;
                OnAssistEdit=BEGIN
                               IF "Incoming Document Entry No." > 0 THEN
                                 HYPERLINK(GetIncomingDocumentURL);
                             END;
                              }

    { 32  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the external document number that will be exported in the payment file.;
                           RUS=Определяет номер внешнего документа, который будет экспортирован в файл платежей.];
                SourceExpr="Applies-to Ext. Doc. No.";
                Visible=FALSE }

    { 3   ;2   ;Field     ;
                Name=Applied;
                CaptionML=[ENU=Applied;
                           RUS=Применено];
                SourceExpr=IsApplied;
                Visible=FALSE }

    { 17  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies payer information that is imported with the bank statement file.;
                           RUS=Определяет сведения о плательщике, которые импортируются вместе с файлом банковской выписки.];
                SourceExpr="Payer Information";
                Visible=FALSE;
                StyleExpr=StyleTxt }

    { 15  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies transaction information that is imported with the bank statement file.;
                           RUS=Определяет сведения о транзакции, которые импортируются вместе с файлом банковской выписки.];
                SourceExpr="Transaction Information";
                Visible=FALSE;
                StyleExpr=StyleTxt }

    { 80  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the deferral template that governs how expenses or revenue are deferred to the different accounting periods when the expenses or revenue were incurred.;
                           RUS=Задает шаблон РБП, который определяет, как расходы или доходы будут относиться к различным учетным периодам, когда они имеют место.];
                ApplicationArea=#Suite;
                SourceExpr="Deferral Code" }

    { 36  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that the general journal line has been automatically applied with a matching payment using the Apply Automatically function.;
                           RUS=Определяет, что строка финансового журнала с соответствующим платежом была автоматически применена с помощью функции "Применить автоматически".];
                SourceExpr="Applied Automatically";
                Visible=FALSE;
                Editable=FALSE }

    { 1210001;2;Field     ;
                SourceExpr="VAT Entry Type";
                Visible=FALSE }

    { 7   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a comment related to registering a payment.;
                           RUS=Определяет комментарий о регистрации оплаты.];
                SourceExpr=Comment }

    { 38  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the identification of the direct-debit mandate that is being used on the journal lines to process a direct debit collection.;
                           RUS=Определяет идентификатор поручения прямого дебетования, используемый в строках журнала для обработки сбора платежей с помощью прямого дебетования.];
                SourceExpr="Direct Debit Mandate ID";
                Visible=FALSE }

    { 1101495042;2;Field  ;
                SourceExpr="Source Currency Amount" }

    { 1101495076;2;Field  ;
                CaptionML=[ENU=Vendor Name;
                           RUS=Поставщик Название];
                SourceExpr=fn_GetVendName;
                Visible=FALSE;
                Editable=FALSE }

    { 1101495077;2;Field  ;
                CaptionML=[ENU=Posting Group Name;
                           RUS=Учетная Группа Название];
                SourceExpr=fn_GetPostGrName;
                Visible=FALSE;
                Editable=FALSE }

    { 30  ;1   ;Group      }

    { 1901776101;2;Group  ;
                GroupType=FixedLayout }

    { 1900545301;3;Group  ;
                CaptionML=[ENU=Account Name;
                           RUS=Название счета] }

    { 35  ;4   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the account.;
                           RUS=Определяет имя счета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AccName;
                Editable=FALSE;
                ShowCaption=No }

    { 1900295701;3;Group  ;
                CaptionML=[ENU=Bal. Account Name;
                           RUS=Назв. баланс. счета] }

    { 37  ;4   ;Field     ;
                CaptionML=[ENU=Bal. Account Name;
                           RUS=Назв. баланс. счета];
                ToolTipML=[ENU=Specifies the name of the balancing account that has been entered on the journal line.;
                           RUS=Определяет имя балансирующего счета, который указан в строке журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BalAccName;
                Editable=FALSE }

    { 1902759701;3;Group  ;
                CaptionML=[ENU=Balance;
                           RUS=Сальдо] }

    { 31  ;4   ;Field     ;
                Name=Balance;
                CaptionML=[ENU=Balance;
                           RUS=Сальдо];
                ToolTipML=[ENU=Specifies the balance that has accumulated in the general journal on the line where the cursor is.;
                           RUS=Определяет баланс, который накоплен в финансовом журнале в строке, на которой установлен курсор.];
                ApplicationArea=#All;
                SourceExpr=Balance + "Balance (LCY)" - xRec."Balance (LCY)";
                AutoFormatType=1;
                Visible=BalanceVisible;
                Editable=FALSE }

    { 1901652501;3;Group  ;
                CaptionML=[ENU=Total Balance;
                           RUS=Общее сальдо] }

    { 33  ;4   ;Field     ;
                Name=TotalBalance;
                CaptionML=[ENU=Total Balance;
                           RUS=Общее сальдо];
                ToolTipML=[ENU=Specifies the total balance in the general journal.;
                           RUS=Определяет общий баланс по финансовому журналу.];
                ApplicationArea=#All;
                SourceExpr=TotalBalance + "Balance (LCY)" - xRec."Balance (LCY)";
                AutoFormatType=1;
                Visible=TotalBalanceVisible;
                Editable=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1101495079;1;Part   ;
                Name=DimensionsList;
                ApplicationArea=#Basic,#Suite;
                PagePartID=Page50310;
                PartType=Page }

    { 154 ;1   ;Part      ;
                Name=IncomingDocAttachFactBox;
                ApplicationArea=#Basic,#Suite;
                PagePartID=Page193;
                PartType=Page;
                ShowFilter=No }

    { 94  ;1   ;Part      ;
                Name=WorkflowStatusBatch;
                CaptionML=[ENU=Batch Workflows;
                           RUS=Рабочие процессы партии];
                ApplicationArea=#Suite;
                PagePartID=Page1528;
                Visible=ShowWorkflowStatusOnBatch;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 90  ;1   ;Part      ;
                Name=WorkflowStatusLine;
                CaptionML=[ENU=Line Workflows;
                           RUS=Рабочие процессы строки];
                ApplicationArea=#Suite;
                PagePartID=Page1528;
                Visible=ShowWorkflowStatusOnLine;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      GenJnlManagement@1002 : Codeunit 230;
      ReportPrint@1003 : Codeunit 228;
      PayrollManagement@1027 : Codeunit 1660;
      ChangeExchangeRate@1001 : Page 511;
      GLReconcile@1000 : Page 345;
      CurrentJnlBatchName@1004 : Code[10];
      AccName@1005 : Text[50];
      BalAccName@1006 : Text[50];
      Balance@1007 : Decimal;
      TotalBalance@1008 : Decimal;
      ShowBalance@1009 : Boolean;
      ShowTotalBalance@1010 : Boolean;
      ShortcutDimCode@1011 : ARRAY [20] OF Code[20];
      Text000@1012 : TextConst 'ENU=General Journal lines have been successfully inserted from Standard General Journal %1.;RUS=Строки финансового журнала успешно вставлены из стандартного общего журнала %1.';
      Text001@1013 : TextConst 'ENU=Standard General Journal %1 has been successfully created.;RUS=Стандартный финансовый журнал %1 успешно создан.';
      HasIncomingDocument@1018 : Boolean;
      BalanceVisible@19073040 : Boolean INDATASET;
      TotalBalanceVisible@19063333 : Boolean INDATASET;
      StyleTxt@1015 : Text;
      OpenApprovalEntriesExistForCurrUser@1014 : Boolean;
      AccTypeNotSupportedErr@1017 : TextConst 'ENU=You cannot specify a deferral code for this type of account.;RUS=Для этого типа счета нельзя указать код РБП.';
      OpenApprovalEntriesOnJnlBatchExist@1019 : Boolean;
      OpenApprovalEntriesOnJnlLineExist@1020 : Boolean;
      OpenApprovalEntriesOnBatchOrCurrJnlLineExist@1021 : Boolean;
      OpenApprovalEntriesOnBatchOrAnyJnlLineExist@1022 : Boolean;
      ShowWorkflowStatusOnBatch@1016 : Boolean;
      ShowWorkflowStatusOnLine@1023 : Boolean;
      CanCancelApprovalForJnlBatch@1024 : Boolean;
      CanCancelApprovalForJnlLine@1025 : Boolean;
      ImportPayrollTransactionsAvailable@1028 : Boolean;
      "NCV>"@1101495012 : Integer;
      GenJourline@1101495011 : Record 81;
      PostLine@1101495010 : Report 50037;
      GenPost@1101495009 : Codeunit 231;
      GenJnlPostBatch@1101495008 : Codeunit 13;
      CopyGL@1101495007 : Report 50052;
      GLSetup@1101495006 : Record 98;
      "NCV<"@1101495005 : Integer;
      ConsSetup@1101495004 : Record 50000;
      GLSetupShortcutDimCode@1101495003 : ARRAY [11] OF Code[20];
      AccName2@1101495002 : Text[50];
      BalAccName2@1101495001 : Text[50];
      GenJnlManagement2@1101495000 : Codeunit 230;
      "NCT>"@1101495017 : TextConst;
      Text55001@1101495016 : TextConst 'ENU=Import File;RUS=Импортировать Файл?';
      "NCT<"@1101495015 : TextConst;
      Text55002@1101495014 : TextConst 'RUS=Обрабатывая текущую выборку система удалит все строки в рамках одной буферной операции. Признак обработки операций буфера будет сброшен. Продолжить?';
      Text50001@1101495013 : TextConst 'ENU=Do you want to copy Dimension Values from Deal for selected lines?;RUS=Вы действительно хотите копировать измерения сделки для всех отобранных строк?';
      PostingDateStyleExpr@1101495018 : Text;
      DimMgt@1101495019 : Codeunit 408;

    LOCAL PROCEDURE UpdateBalance@1();
    BEGIN
      GenJnlManagement.CalcBalance(Rec,xRec,Balance,TotalBalance,ShowBalance,ShowTotalBalance);
      BalanceVisible := ShowBalance;
      TotalBalanceVisible := ShowTotalBalance;
    END;

    LOCAL PROCEDURE CurrentJnlBatchNameOnAfterVali@19002411();
    BEGIN
      CurrPage.SAVERECORD;
      GenJnlManagement.SetName(CurrentJnlBatchName,Rec);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE SetUserInteractions@2();
    BEGIN
      StyleTxt := GetStyle;
    END;

    LOCAL PROCEDURE GetCurrentlySelectedLines@3(VAR GenJournalLine@1000 : Record 81) : Boolean;
    BEGIN
      CurrPage.SETSELECTIONFILTER(GenJournalLine);
      EXIT(GenJournalLine.FINDSET);
    END;

    LOCAL PROCEDURE SetControlAppearance@5();
    VAR
      GenJournalBatch@1000 : Record 232;
      ApprovalsMgmt@1002 : Codeunit 1535;
    BEGIN
      IF GenJournalBatch.GET("Journal Template Name","Journal Batch Name") THEN BEGIN
        ShowWorkflowStatusOnBatch := CurrPage.WorkflowStatusBatch.PAGE.SetFilterOnWorkflowRecord(GenJournalBatch.RECORDID);
        OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(GenJournalBatch.RECORDID);
        OpenApprovalEntriesOnJnlBatchExist := ApprovalsMgmt.HasOpenApprovalEntries(GenJournalBatch.RECORDID);
      END;
      OpenApprovalEntriesExistForCurrUser :=
        OpenApprovalEntriesExistForCurrUser OR
        ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);

      OpenApprovalEntriesOnJnlLineExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
      OpenApprovalEntriesOnBatchOrCurrJnlLineExist := OpenApprovalEntriesOnJnlBatchExist OR OpenApprovalEntriesOnJnlLineExist;

      OpenApprovalEntriesOnBatchOrAnyJnlLineExist :=
        OpenApprovalEntriesOnJnlBatchExist OR
        ApprovalsMgmt.HasAnyOpenJournalLineApprovalEntries("Journal Template Name","Journal Batch Name");

      ShowWorkflowStatusOnLine := CurrPage.WorkflowStatusLine.PAGE.SetFilterOnWorkflowRecord(RECORDID);

      CanCancelApprovalForJnlBatch := ApprovalsMgmt.CanCancelApprovalForRecord(GenJournalBatch.RECORDID);
      CanCancelApprovalForJnlLine := ApprovalsMgmt.CanCancelApprovalForRecord(RECORDID);

      SetPayrollAppearance;
    END;

    LOCAL PROCEDURE SetPayrollAppearance@7();
    VAR
      TempPayrollServiceConnection@1000 : TEMPORARY Record 1400;
    BEGIN
      PayrollManagement.OnRegisterPayrollService(TempPayrollServiceConnection);
      ImportPayrollTransactionsAvailable := NOT TempPayrollServiceConnection.ISEMPTY;
    END;

    LOCAL PROCEDURE "//NCF >"@1101495000();
    BEGIN
    END;

    LOCAL PROCEDURE ApproveSelected@1170000000();
    VAR
      GenJournalLine@1170000000 : Record 81;
    BEGIN
      // NC NCS-1880 ORM
      GenJournalLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(GenJournalLine);
      GenJnlManagement.ApproveGenJnlLines(GenJournalLine);
    END;

    LOCAL PROCEDURE ReopenSelected@1170000001();
    VAR
      GenJournalLine@1170000000 : Record 81;
      ReopenedQty@1170000001 : Integer;
    BEGIN
      // NC NCS-1880 ORM
      GenJournalLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(GenJournalLine);
      GenJnlManagement.ReopenGenJnlLines(GenJournalLine);
    END;

    PROCEDURE fn_GetVendName@1000000001() r_txt : Text[50];
    VAR
      l_recVend@1000000000 : Record 23;
    BEGIN
      //TDRANCS-2577>
      IF "Account Type" <> "Account Type"::Vendor THEN
        EXIT('');
      IF l_recVend.GET("Account No.") THEN
        EXIT(l_recVend.Name);
      //TDRANCS-2577<
    END;

    PROCEDURE fn_GetPostGrName@1000000002() r_txt : Text[50];
    VAR
      l_recVend@1000000000 : Record 23;
      l_recCust@1000000001 : Record 18;
      l_recVendPGr@1000000002 : Record 93;
      l_recCustPGr@1000000003 : Record 92;
    BEGIN
      //TDRANCS-2577>
      CASE "Account Type" OF
        "Account Type"::Vendor: BEGIN
          IF l_recVend.GET("Account No.") THEN
            IF l_recVendPGr.GET("Posting Group") THEN
              EXIT(l_recVendPGr.Description);
        END;

        "Account Type"::Customer: BEGIN
          IF l_recCust.GET("Account No.") THEN
            IF l_recCustPGr.GET("Posting Group") THEN
              EXIT(l_recCustPGr.Description);
        END;
      END;
      //TDRANCS-2577<
    END;

    BEGIN
    {
      NC MP 28.02.07 Новая ф-ция SetParameters
                     Изменено свойство "Save Values" на No
                     Присвоено имя контролу "Раздел"
      NC MP 27.11.07 Новая функция импорта текстового файла
      NC MDP02 GM добавлена функция Учет, Частичный Учет
      NC MDR03 MP
      NC TR195 EB Функция Копирования ФКО
      NC OAM03 DP Функция Импорта из текстового файла
      NC MTF02 AKU Полям, предназначенных для учета операций по ФИ установлено свойство Visible = No
      NC TAX01 PCH обновлена функция простановки Inc. Tax
      NC MTF02 AKU Вынесено поле "Appl. to FI Entry No." (используется при сторнировании ФИ Операции)
      TDRANCS-431 >
        Add Menu Item Import from Excel on button Functions
      NC T#0294 DP Выведено поле "Local G/L Account"
      NC NCS-622 DP Выведено поле "Due Date"
      TDRANCS-749 >
        NAVW15.00,NAVRU5.00.01.02,NCPIF006,MDP02,TR195,TAX01,MTF02,TDNCS,#0294,NCS-622
        Add MenuItem Function -> System -> Not Translate, Not Translate to IFRS
      Create Build BLD01 - NCS-749,NAVW15.00,NAVRU5.00.01.02,NCPIF006,MDP02,TR195,TAX01,MTF02,TDNCS,#0294
      TDRANCS-1101>
        modified OnFormat for "Posting Date"
      TDRANCS-1256>
        Add Menu Item Upload FX Adjustment
        Add Menu Item Upload 1-80-CURR
      NC NCS-1616 USE Изменены триггеры OnValidate у Shortcuts DImension
      TDRANCS-1691
        Modified Menu Item Import from CSV
      TDRANCS-1715 added "Source G/L Account No."
      TDRANCS-1425>
        Modified c\al code in MenuItem Function -> System -> Not Translate, Not Translate to IFRS  trigger OnPush
      TDRANCS-1616.1
        Modified OnLookUp for Shortcuts DImension
      NC NCS-1788 DP Added new function "Copy Dim. Value from Deal"
      NC NCS-1788.1 DP Added Confirm for function "Copy Dim. Value from Deal"
      NC NCS-1880 ORM Добавлены поля "Modified By", "Approved By"
        Меню Functions - Approve Document, Functions - Reopen Document
      NC NCS-1924 ORM Добавлен пункт меню Functions - Import Employee Expenses from Excel
      NC S1880.1 PCH описание счета
      NC NCS-2444 AAP Добавлен вызов "Функции / Наполнить аналитиками по мэппингу" (Function / Fill in Dimension Value by Mapping)
      TDRANCS-2577 added control Vendor Name, Posting Group Name, added func fn_GetVendName,fn_GetPostGrName
      ------------------------------------------
      NC NOS-26 SPA Миграция на новую функциональность
                      Не перенесены функции: SetParameters,IsEditable,SetDimValFIPerDoc,SetDimValPerDoc,UpdateTax
    }
    END.
  }
}

