OBJECT Page 17237 Tax Reg. Payroll Line Subform
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Register Lines;
               RUS=Строки регистра];
    SourceTable=Table17201;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnAfterGetRecord=BEGIN
                       CALCFIELDS("Dimensions Filters");
                       IF "Dimensions Filters" THEN
                         DimFilters := Text1001
                       ELSE
                         DimFilters := '';
                       PayrollSourceOnFormat(FORMAT("Payroll Source"));
                       ElementTypeFilterOnFormat(FORMAT("Element Type Filter"));
                     END;

    OnNewRecord=BEGIN
                  DimFilters := '';
                END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the line code associated with the tax register line setup information.;
                           RUS=Определяет код строки, связанный с информацией о настройке строки налогового регистра.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Line Code" }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the check exist entry associated with the tax register line setup information.;
                           RUS=Определяет проверку существования операции, связанную с информацией о настройке строки налогового регистра.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Check Exist Entry" }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the account type associated with the tax register line setup information.;
                           RUS=Определяет тип счета, связанный с информацией о настройке строки налогового регистра.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Account Type" }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount type associated with the tax register line setup information.;
                           RUS=Определяет тип суммы, связанный с информацией о настройке строки налогового регистра.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Amount Type" }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the account number associated with the tax register line setup information.;
                           RUS=Определяет номер счета, связанный с информацией о настройке строки налогового регистра.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Account No.";
                OnLookup=BEGIN
                           GLAcc.RESET;
                           IF "Account No." <> '' THEN BEGIN
                             GLAcc.SETFILTER("No.","Account No.");
                             IF GLAcc.FINDFIRST THEN ;
                             GLAcc.SETRANGE("No.");
                           END;
                           IF ACTION::LookupOK = PAGE.RUNMODAL(0,GLAcc) THEN BEGIN
                             Text := GLAcc."No.";
                             EXIT(TRUE);
                           END;
                           EXIT(FALSE);
                         END;
                          }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the balance account number associated with the tax register line setup information.;
                           RUS=Определяет номер балансового счета, связанный с информацией о настройке строки налогового регистра.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. Account No.";
                OnLookup=BEGIN
                           GLAcc.RESET;
                           IF "Bal. Account No." <> '' THEN BEGIN
                             GLAcc.SETFILTER("No.","Bal. Account No.");
                             IF GLAcc.FINDFIRST THEN ;
                             GLAcc.SETRANGE("No.");
                           END;
                           IF ACTION::LookupOK = PAGE.RUNMODAL(0,GLAcc) THEN BEGIN
                             Text := GLAcc."No.";
                             EXIT(TRUE);
                           END;
                           EXIT(FALSE);
                         END;
                          }

    { 18  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the payroll source associated with the tax register line setup information.;
                           RUS=Определяет источник платежной ведомости, связанный с информацией о настройке строки налогового регистра.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payroll Source";
                OnDrillDown=BEGIN
                              DrillDownSourcePayTotaling;
                            END;
                             }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if general ledger corresponding dimension filter will be used with the tax register line setup information.;
                           RUS=Определяет, будет ли использовать соответствующий фильтр измерения ГК с информацией о настройке строки налогового регистра.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Element Type Filter";
                OnDrillDown=BEGIN
                              DrillDownElementTypeTotaling;
                            END;
                             }

    { 22  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the element type total associated with the tax register line setup information.;
                           RUS=Определяет суммирование по типу элемента, связанное с информацией о настройке строки налогового регистра.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Element Type Totaling";
                OnLookup=BEGIN
                           EXIT(LookupElementTypeTotaling(Text));
                         END;
                          }

    { 20  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the payroll source total associated with the tax register line setup information.;
                           RUS=Определяет суммирование по источнику платежной ведомости, связанное с информацией о настройке строки налогового регистра.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payroll Source Totaling";
                OnLookup=BEGIN
                           EXIT(LookupSourcePayTotaling(Text));
                         END;
                          }

    { 100 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the employee statistics group code associated with the tax register line setup information.;
                           RUS=Определяет код статистической группы сотрудника, связанный с информацией о настройке строки налогового регистра.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Employee Statistics Group Code" }

    { 102 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the category code associated with the tax register line setup information.;
                           RUS=Определяет код категории, связанный с информацией о настройке строки налогового регистра.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Employee Category Code" }

    { 104 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the payroll posting group associated with the tax register line setup information.;
                           RUS=Определяет учетную группу зарплаты, связанную с информацией о настройке строки налогового регистра.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payroll Posting Group" }

    { 12  ;2   ;Field     ;
                DrillDown=No;
                CaptionML=[ENU=Dimensions Filters;
                           RUS=Фильтры измерений];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DimFilters;
                Editable=FALSE;
                OnAssistEdit=BEGIN
                               ShowDimensionsFilters;
                             END;
                              }

  }
  CODE
  {
    VAR
      GLAcc@1000 : Record 15;
      Text1001@1001 : TextConst 'ENU=Present;RUS=Есть';
      DimFilters@1210001 : Text[30];

    PROCEDURE ShowDimensionsFilters@2();
    VAR
      TaxRegDimFilter@1000 : Record 17218;
    BEGIN
      CurrPage.SAVERECORD;
      COMMIT;
      IF "Line No." <> 0 THEN BEGIN
        TaxRegDimFilter.FILTERGROUP(2);
        TaxRegDimFilter.SETRANGE("Section Code","Section Code");
        TaxRegDimFilter.SETRANGE("Tax Register No.","Tax Register No.");
        TaxRegDimFilter.SETRANGE(Define,TaxRegDimFilter.Define::"Entry Setup");
        TaxRegDimFilter.FILTERGROUP(0);
        TaxRegDimFilter.SETRANGE("Line No.","Line No.");
        PAGE.RUNMODAL(0,TaxRegDimFilter);
      END;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE PayrollSourceOnFormat@19030816(Text@19053807 : Text[1024]);
    BEGIN
      Text := FormatSourcePayTotaling;
    END;

    LOCAL PROCEDURE ElementTypeFilterOnFormat@19067950(Text@19039276 : Text[1024]);
    BEGIN
      Text := FormatElementTypeTotaling;
    END;

    BEGIN
    END.
  }
}

