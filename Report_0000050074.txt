OBJECT Report 50074 Update Agreement Detail
{
  OBJECT-PROPERTIES
  {
    Date=12.07.17;
    Time=16:21:42;
    Modified=Yes;
    Version List=NOS-26;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Update Agreement Detail;
               RUS=Создание/Изменение Условий Договора];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   ReCalcInterest := TRUE;
                 END;

    OnPostReport=BEGIN
                   IF IsNew THEN BEGIN
                     CASE SourceType OF
                       SourceType::Customer:
                       BEGIN
                         CustAgreement.GET(SourceNo,AgreementNo);
                         AgreementType := CustAgreement."Agreement Type";
                         PostGroupCode := CustAgreement."Customer Posting Group";
                       END;
                       SourceType::Vendor:
                       BEGIN
                         VendAgreement.GET(SourceNo,AgreementNo);
                         AgreementType := VendAgreement."Agreement Type";
                         PostGroupCode := VendAgreement."Vendor Posting Group";
                       END;
                     END;
                     NextEntryNo :=0;
                     AgreementDetail1.RESET;
                     AgreementDetail1.SETRANGE("Source Type",SourceType);
                     AgreementDetail1.SETRANGE("Source No.",SourceNo);
                     AgreementDetail1.SETRANGE("Agreement No.",AgreementNo);
                     IF AgreementDetail1.FINDLAST THEN
                       NextEntryNo := AgreementDetail1."Condition No.";

                     NewAgreementDetail.INIT;
                     NewAgreementDetail."Source Type" := SourceType;
                     NewAgreementDetail."Source No." := SourceNo;
                     NewAgreementDetail."Agreement No." := AgreementNo;
                     NewAgreementDetail."Condition No." :=  NextEntryNo+1;
                     NewAgreementDetail."Condition Type" := NewAgreementDetail."Condition Type"::New;
                     NewAgreementDetail."Currency Code" := CurrencyCode;
                     NewAgreementDetail."Agreement Type" := AgreementType;
                     NewAgreementDetail."Posting Group" := PostGroupCode;
                     NewAgreementDetail.Amount := Amount;
                     NewAgreementDetail."Action Date" :=  ActionDate;
                     NewAgreementDetail."Finish Date" := FinishDate;
                     NewAgreementDetail."Interest Calc. Periodicity" := InterestCalcPeriodicity;
                     NewAgreementDetail."Quant.Days in Year" := QTYDaysYear;
                     NewAgreementDetail."Interest Calc. Periodicity" := 0;
                     NewAgreementDetail."Interest Rate Type" := InterestRateType;
                     NewAgreementDetail."Interest Rate" := InterestRate;
                     NewAgreementDetail."Ext. Interest Rate Code" := ExterIndexRateCode;
                     NewAgreementDetail."Fix Ext. Interest Rate Date" := ExterIndexRateDate;
                     NewAgreementDetail."Last Change Date" := CURRENTDATETIME;
                   // TD BMN 23.11.2012 NCS-712   NewAgreementDetail.INSERT;
                     NewAgreementDetail.INSERT(TRUE);
                   END;

                   IF NOT IsNew THEN BEGIN
                     IsChanged := FALSE;
                     IF ActionDate <> ActionDate1 THEN
                       IsChanged :=IsChanged OR TRUE;
                     IF FinishDate <> FinishDate1 THEN
                       IsChanged :=IsChanged OR TRUE;
                     IF NOT IsChanged THEN
                       IF NOT CONFIRM(Text002,FALSE) THEN
                         ERROR(Text001);

                     IF InterestCalcPeriodicity <> InterestCalcPeriodicity1 THEN
                       IsChanged :=IsChanged OR TRUE;
                     IF QTYDaysYear <> QTYDaysYear1 THEN
                       IsChanged :=IsChanged OR TRUE;
                     IF InterestRateType <> InterestRateType1 THEN
                       IsChanged :=IsChanged OR TRUE;
                     IF InterestRate <> InterestRate1 THEN
                       IsChanged :=IsChanged OR TRUE;
                     IF ExterIndexRateCode <> ExterIndexRateCode1 THEN
                       IsChanged :=IsChanged OR TRUE;
                     IF ExterIndexRateDate <> ExterIndexRateDate1 THEN
                       IsChanged :=IsChanged OR TRUE;


                     IF IsChanged THEN BEGIN
                       IF AgreementDetail.GET(SourceType,SourceNo,AgreementNo,ConditionNo) THEN BEGIN
                         NextEntryNo := AgreementDetail."Condition No."+1;

                         AgreementDetail1.RESET;
                         AgreementDetail1.SETRANGE("Source Type",SourceType);
                         AgreementDetail1.SETRANGE("Source No.",SourceNo);
                         AgreementDetail1.SETRANGE("Agreement No.",AgreementNo);
                         IF AgreementDetail1.FINDLAST THEN
                           NextEntryNo := AgreementDetail1."Condition No."+1;
                         NewAgreementDetail.INIT;
                         NewAgreementDetail.TRANSFERFIELDS(AgreementDetail);
                         NewAgreementDetail."Condition No." :=  NextEntryNo;
                         NewAgreementDetail."Condition Type" := NewAgreementDetail."Condition Type"::Change;
                         IF NewAgreementDetail."Action Date" = ActionDate THEN
                           NewAgreementDetail."Finish Date" := NewAgreementDetail."Action Date"
                         ELSE
                           NewAgreementDetail."Finish Date" := ActionDate-1;
                         NewAgreementDetail."Changed by Agreement No." :=  AgreementDetail."Agreement No.";
                         NewAgreementDetail."Changed Condition No." := AgreementDetail."Condition No.";
                         NewAgreementDetail."Last Change Date" := CURRENTDATETIME;

                         //NCS-2375 > DP
                         NewAgreementDetail."Use Default" := FALSE;
                         //NCS-2375 < DP
                   // TD BMN 23.11.2012 NCS-712  NewAgreementDetail.INSERT;
                         NewAgreementDetail.INSERT(TRUE);

                         AgreementDetail."Action Date" :=  ActionDate;
                         AgreementDetail."Finish Date" := FinishDate;
                         AgreementDetail."Interest Calc. Periodicity" := InterestCalcPeriodicity;
                         AgreementDetail."Quant.Days in Year" := QTYDaysYear;
                         AgreementDetail."Interest Calc. Periodicity" := 0;
                         AgreementDetail."Interest Rate Type" := InterestRateType;

                         IF AgreementDetail."Interest Rate" <> InterestRate THEN
                           AgreementDetail."Interest Calc. Starting Date" :=ActionDate;

                         AgreementDetail."Interest Rate" := InterestRate;
                         AgreementDetail."Ext. Interest Rate Code" := ExterIndexRateCode;
                         AgreementDetail."Fix Ext. Interest Rate Date" := ExterIndexRateDate;
                         AgreementDetail."Changed by Agreement No." := AgreementDetail."Agreement No.";
                         AgreementDetail."Changed by Condition No." :=  NewAgreementDetail."Condition No.";

                         //NCS-2375 > DP
                         AgreementDetail."Use Default" := FALSE;
                         //NCS-2375 < DP
                   // TD BMN 23.11.2012 NCS-712      AgreementDetail.MODIFY;
                         AgreementDetail.MODIFY(TRUE);

                         IF ReCalcInterest THEN BEGIN
                           AgreementAcrualSchedule.RESET;
                           AgreementAcrualSchedule.SETRANGE("Source Type",AgreementDetail."Source Type");
                           AgreementAcrualSchedule.SETRANGE("Source No.", AgreementDetail."Source No.");
                           AgreementAcrualSchedule.SETRANGE("Agreement No.",AgreementDetail."Agreement No.");
                           AgreementAcrualSchedule.SETRANGE("Agreement Condition No.",AgreementDetail."Condition No.");
                           AgreementAcrualSchedule.SETRANGE(Type,AgreementAcrualSchedule.Type::Accrual);
                           AgreementAcrualSchedule.SETFILTER(Date,'%1..',NewAgreementDetail."Action Date");
                           IF AgreementAcrualSchedule.FINDSET THEN
                             REPEAT
                               IF NOT AgreementAcrualSchedule.Posted THEN BEGIN
                                 InterestCalculation.SetParameters(
                                    AgreementAcrualSchedule."Period Start",
                                    AgreementAcrualSchedule."Period End",
                                    AgreementDetail."Interest Calc. Periodicity",
                                    TRUE,
                                    AgreementDetail.Amount,0);
                                 InterestCalculation.USEREQUESTPAGE(FALSE);
                                 InterestCalculation.SETTABLEVIEW(AgreementDetail);
                                 InterestCalculation.RUN;
                               END;
                             UNTIL AgreementAcrualSchedule.NEXT=0;
                         END;
                       END;
                   END ELSE
                     ERROR(Text001);
                   END;
                 END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   IF IsNew THEN BEGIN
                     CASE SourceType OF
                       SourceType::Customer:
                       BEGIN
                         CustAgreement.GET(SourceNo,AgreementNo);
                         CurrencyCode := CustAgreement."Currency Code";
                       END;
                       SourceType::Vendor:
                       BEGIN
                         VendAgreement.GET(SourceNo,AgreementNo);
                         CurrencyCode := VendAgreement."Currency Code";
                       END;
                     END;
                     //NC NOS-26 > SPA
                     //RequestOptionsForm.AmountCtl.VISIBLE(TRUE);
                     //RequestOptionsForm.CurrencyCtl.VISIBLE(TRUE);
                     AmountVisible := TRUE;
                     CurrencyVisible := TRUE;
                     //NC NOS-26 < SPA
                   END ELSE BEGIN
                     //NC NOS-26 > SPA
                     //RequestOptionsForm.AmountCtl.VISIBLE(FALSE);
                     //RequestOptionsForm.CurrencyCtl.VISIBLE(FALSE);
                     AmountVisible := FALSE;
                     CurrencyVisible := FALSE;
                     //NC NOS-26 < SPA
                   END;
                 END;

    }
    CONTROLS
    {
      { 1101495000;;Container;
                  ContainerType=ContentArea }

      { 1101495012;1;Group  ;
                  CaptionML=[ENU=Report option;
                             RUS=Параметры отчета];
                  GroupType=Group }

      { 1101495001;2;Field  ;
                  CaptionML=[ENU=Action Date;
                             RUS=Дата Начала];
                  SourceExpr=ActionDate }

      { 1101495002;2;Field  ;
                  CaptionML=[ENU=Finish Date;
                             RUS=Дата Окончания];
                  SourceExpr=FinishDate }

      { 1101495003;2;Field  ;
                  CaptionML=[ENU=Percent Calc. Periodicity;
                             RUS=Периодичность Начисления Процентов];
                  OptionCaptionML=[ENU=Month,Quarter,Year;
                                   RUS=Месяц,Квартал,Год];
                  SourceExpr=InterestCalcPeriodicity }

      { 1101495004;2;Field  ;
                  CaptionML=[ENU=Quant.Days in Year;
                             RUS=Кол-во Дней в Году];
                  OptionCaptionML=[ENU=360,365,Fact;
                                   RUS=360,365,Факт];
                  SourceExpr=QTYDaysYear }

      { 1101495005;2;Field  ;
                  CaptionML=[ENU=Interest Rate Type;
                             RUS=Тип Процентной Ставки];
                  OptionCaptionML=[ENU=Simple,Fix.Ext.+Simple,Variable Ext.,Complex;
                                   RUS=Простой %,Фикс.Внеш.%+Простой%,Перемен.Внеш.%,Сложный %];
                  SourceExpr=InterestRateType;
                  OnValidate=BEGIN
                               IF InterestRateType IN [InterestRateType::Simple,InterestRateType::Complex] THEN BEGIN
                                 ExterIndexRateCode := '';
                                 ExterIndexRateDate := 0D;
                               END;
                               IF InterestRateType=InterestRateType::"Variable Ext." THEN BEGIN
                                 ExterIndexRateDate := 0D;
                               END;
                             END;
                              }

      { 1101495006;2;Field  ;
                  CaptionML=[ENU=Interest Rate;
                             RUS=Процентная Ставка];
                  SourceExpr=InterestRate }

      { 1101495007;2;Field  ;
                  CaptionML=[ENU=Ext. Interest Rate Code;
                             RUS=Внешний Индекс Код];
                  SourceExpr=ExterIndexRateCode;
                  TableRelation="Financial Instrument";
                  OnLookup=VAR
                             FI@1101495002 : Record 50021;
                             FIType@1101495001 : Record 50051;
                             FITypeFilters@1101495000 : Text[1024];
                           BEGIN
                             //NC MLN06 > DP
                             FITypeFilters :='';
                             FIType.RESET;
                             FIType.SETRANGE("Loan Ext. Interest Rate",TRUE);
                             IF FIType.FINDSET THEN
                               REPEAT
                                 IF FITypeFilters ='' THEN
                                   FITypeFilters := FIType.Code
                                 ELSE
                                   FITypeFilters := FITypeFilters +'|'+ FIType.Code;
                               UNTIL FIType.NEXT=0;

                             FI.RESET;
                             IF FITypeFilters<>'' THEN
                               FI.SETFILTER("Type FI",FITypeFilters);

                             IF PAGE.RUNMODAL(0, FI) = ACTION::LookupOK THEN
                               ExterIndexRateCode := FI."No.";
                             //NC MLN06 < DP
                           END;
                            }

      { 1101495008;2;Field  ;
                  CaptionML=[ENU=Fix Ext. Interest Rate Date;
                             RUS=Фикс. Внеш. Индекс Дата];
                  SourceExpr=ExterIndexRateDate }

      { 1101495009;2;Field  ;
                  CaptionML=[ENU=Unpost. Interest Recalc.;
                             RUS=Пересчет Неучт. Процентов];
                  SourceExpr=ReCalcInterest }

      { 1101495010;2;Field  ;
                  CaptionML=[ENU=Currency;
                             RUS=Валюта];
                  SourceExpr=CurrencyCode;
                  TableRelation=Currency }

      { 1101495011;2;Field  ;
                  CaptionML=[ENU=Amount;
                             RUS=Сумма];
                  SourceExpr=Amount }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ActionDate@1101495035 : Date;
      FinishDate@1101495034 : Date;
      InterestCalcPeriodicity@1101495033 : 'Month,Quarter,Year';
      QTYDaysYear@1101495032 : '360,365,Fact';
      InterestRateType@1101495031 : 'Simple,Fix.Ext.+Simple,Variable Ext.,Complex';
      InterestRate@1101495030 : Decimal;
      ExterIndexRateCode@1101495029 : Code[20];
      ExterIndexRateDate@1101495028 : Date;
      IsChanged@1101495027 : Boolean;
      AgreementDetail@1101495026 : Record 50096;
      AgreementDetail1@1101495025 : Record 50096;
      NewAgreementDetail@1101495024 : Record 50096;
      SourceType@1101495023 : 'Customer,Vendor';
      SourceNo@1101495022 : Code[20];
      AgreementNo@1101495021 : Code[20];
      ConditionNo@1101495020 : Integer;
      ActionDate1@1101495019 : Date;
      FinishDate1@1101495018 : Date;
      InterestCalcPeriodicity1@1101495017 : 'Month,Quarter,Year';
      QTYDaysYear1@1101495016 : '360,365,Fact';
      InterestRateType1@1101495015 : 'Simple,Fix.Ext.+Simple,Variable Ext.,Complex';
      InterestRate1@1101495014 : Decimal;
      ExterIndexRateCode1@1101495013 : Code[20];
      ExterIndexRateDate1@1101495012 : Date;
      NextEntryNo@1101495011 : Integer;
      NewAgreementDetail1@1101495010 : Record 50096;
      AgreementAcrualSchedule@1101495009 : Record 50097;
      ReCalcInterest@1101495008 : Boolean;
      InterestCalculation@1101495007 : Report 50059;
      IsNew@1101495006 : Boolean;
      CustAgreement@1101495005 : Record 14902;
      VendAgreement@1101495004 : Record 14901;
      CurrencyCode@1101495003 : Code[10];
      AgreementType@1101495002 : 'Standard,Trade,Loans';
      Amount@1101495001 : Decimal;
      PostGroupCode@1101495000 : Code[10];
      Text001@1101495037 : TextConst 'ENU=Agreement Details were not changed.;RUS=Параметры Условий Договора не изменены.';
      Text002@1101495036 : TextConst 'ENU=Date of Agreement Detail wasn''t changed. Continue?;RUS=Дата Условия Договора не изменилась. Продолжить?';
      CurrencyVisible@1101495038 : Boolean INDATASET;
      AmountVisible@1101495039 : Boolean INDATASET;

    PROCEDURE SetParameters@1000000000(OldSourceType@1000000007 : Option;OldSourceNo@1000000008 : Code[20];OldAgreementNo@1000000009 : Code[20];OldConditionNo@1000000010 : Integer;OldActionDate@1000000006 : Date;OldFinishDate@1000000005 : Date;OldInterestCalcPeriodicity@1000000011 : 'Month,Quarter,Year';OldQTYDaysYear@1000000004 : '360,365,Fact';OldInterestRateType@1000000003 : 'Simple,Fix.Ext.+Simple,Variable Ext.,Complex';OldInterestRate@1000000002 : Decimal;OldExterIndexRateCode@1000000001 : Code[20];OldExterIndexRateDate@1000000000 : Date;IsCreate@1000000012 : Boolean);
    BEGIN
      SourceType := OldSourceType;
      SourceNo := OldSourceNo;
      AgreementNo := OldAgreementNo;
      ConditionNo := OldConditionNo;
      ActionDate := OldActionDate;
      FinishDate := OldFinishDate;
      InterestCalcPeriodicity := OldInterestCalcPeriodicity;
      QTYDaysYear := OldQTYDaysYear;
      InterestRateType := OldInterestRateType;
      InterestRate := OldInterestRate;
      ExterIndexRateCode := OldExterIndexRateCode;
      ExterIndexRateDate := OldExterIndexRateDate;

      ActionDate1 := OldActionDate;
      FinishDate1 := OldFinishDate;
      InterestCalcPeriodicity1 := OldInterestCalcPeriodicity;
      QTYDaysYear1 := OldQTYDaysYear;
      InterestRateType1 := OldInterestRateType;
      InterestRate1 := OldInterestRate;
      ExterIndexRateCode1 := OldExterIndexRateCode;
      ExterIndexRateDate1 := OldExterIndexRateDate;
      IsNew := IsCreate;
    END;

    BEGIN
    {
      NC MLN09.1 DP Создание/изменение условий договора
      TD BMN 23.11.2012 NCS-712 "Интеграция данных из договоров OFF - IFRS"
      NC NCS-2375 DP Изменен триггер Report - OnPostReport()
    }
    END.
  }
  RDLDATA
  {
  }
}

