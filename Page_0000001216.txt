OBJECT Page 1216 Data Exch Col Def Part
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00,NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Column Definitions;
               RUS=Определения столбцов];
    SourceTable=Table1223;
    DelayedInsert=Yes;
    PageType=ListPart;
    ActionList=ACTIONS
    {
      { 13      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 17      ;1   ;Action    ;
                      Name=GetFileStructure;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get File Structure;
                                 RUS=Получить структуру файла];
                      ToolTipML=[ENU=Prefill the lines of the column definitions according to the structure of a data file on your computer or network.;
                                 RUS=Предварительное заполнение строк определений столбцов в соответствии со структурой файла данных на вашем компьютере или в сети.];
                      ApplicationArea=#Basic,#Suite;
                      OnAction=BEGIN
                                 GetStructure;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number that reflects the column's position on the line in the file.;
                           RUS=Определяет число, обозначающее положение столбца в строке файла.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Column No." }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the column.;
                           RUS=Определяет имя столбца.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Name }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the data to be exchanged is of type Text, Date, or Decimal.;
                           RUS=Определяет тип данных для обмена - "Текст", "Дата" или "Десятичное".];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Data Type";
                OnValidate=BEGIN
                             DataFormatRequired := IsDataFormatRequired;
                             DataFormattingCultureRequired := IsDataFormattingCultureRequired;
                           END;

                ShowMandatory=TRUE }

    { 7   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the format of the data, if any. For example, MM-dd-yyyy if the data type is Date.;
                           RUS=Определяет формат данных, если он имеется. Например, MM-dd-yyyy для данных типа "Дата".];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Data Format";
                ShowMandatory=DataFormatRequired }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the culture of the data format, if any. For example, en-US if the data type is Decimal to ensure that comma is used as the .000 separator, according to the US format. This field is only relevant for import.;
                           RUS=Определяет языковой стандарт формата данных, если он имеется. Например, en-US для данных формата "Десятичный" означает, что в качестве разделителя классов используется запятая, как принято в США. Это поле применимо только к операции импорта.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Data Formatting Culture";
                ShowMandatory=DataFormattingCultureRequired }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the length of the fixed-width line that holds the column if the file is of type Fixed Text.;
                           RUS=Определяет длину строки фиксированной ширины, которая содержит столбец, если файл имеет тип "Фиксированный текст".];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Length }

    { 9   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a description of the column, for informational purposes.;
                           RUS=Определяет описание столбца в информационных целях.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description }

    { 15  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the position of the element in the related XML schema.;
                           RUS=Определяет положение элемента, связанного с XML-схемой.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Path }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the value that is used in the data file to identify negative amounts, in data files that cannot contain negative signs. This identifier is then used to reverse the identified amounts to negative signs during import.;
                           RUS=Определяет значение, которое используется в файле данных для обозначения отрицательных сумм, если в файлах данных нельзя использовать знак минуса перед числами. Это идентификатор указывает, что при импорте соответствующие суммы нужно обработать со знаком минуса.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Negative-Sign Identifier" }

    { 11  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies any data that you want to export in this column, such as extra information about the payment type.;
                           RUS=Определяет данные, которые требуется экспортировать в этот столбец, например дополнительные сведения о типе платежа.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Constant }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=There is no Help for the fields in this table. This object supports the Microsoft Dynamics NAV infrastructure and is intended only for internal use.;
                           RUS=Отсутствует справка по полям этой таблицы. Этот объект поддерживает инфраструктуру Microsoft Dynamics NAV и предназначен только для внутреннего использования.];
                SourceExpr=Show;
                Visible=false }

    { 1210000;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Column Type" }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that the data must include text padding.;
                           RUS=Указывает, что данные должны включать текстовое заполнение.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Text Padding Required" }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that text padding.;
                           RUS=Определяет текстовое заполнение.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pad Character" }

  }
  CODE
  {
    VAR
      DataFormatRequired@1000 : Boolean;
      DataFormattingCultureRequired@1001 : Boolean;

    LOCAL PROCEDURE GetStructure@2();
    VAR
      DataExchLineDef@1005 : Record 1227;
      GetFileStructure@1003 : Report 1235;
    BEGIN
      DataExchLineDef.GET("Data Exch. Def Code","Data Exch. Line Def Code");
      GetFileStructure.Initialize(DataExchLineDef);
      GetFileStructure.RUNMODAL;
    END;

    BEGIN
    END.
  }
}

