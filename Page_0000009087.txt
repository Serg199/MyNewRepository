OBJECT Page 9087 Sales Line FactBox
{
  OBJECT-PROPERTIES
  {
    Date=23.01.17;
    Time=12:00:00;
    Version List=NAVW110.00.00.15052;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Line Details;
               RUS=Подробности по строке продажи];
    SourceTable=Table37;
    PageType=CardPart;
    OnAfterGetRecord=BEGIN
                       CALCFIELDS("Reserved Quantity");
                     END;

    OnAfterGetCurrRecord=BEGIN
                           ClearSalesHeader;
                         END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 8   ;1   ;Field     ;
                Name=ItemNo;
                Lookup=No;
                CaptionML=[ENU=Item No.;
                           RUS=Код товара];
                ToolTipML=[ENU=Specifies the item that is handled on the sales line.;
                           RUS=Определяет, что товар обрабатывается в строке продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ShowNo;
                OnDrillDown=BEGIN
                              SalesInfoPaneMgt.LookupItem(Rec);
                            END;
                             }

    { 13  ;1   ;Field     ;
                Name=Required Quantity;
                CaptionML=[ENU=Required Quantity;
                           RUS=Требуемое кол-во];
                ToolTipML=[ENU=Specifies how many units of the item are required on the sales line.;
                           RUS=Определяет, какое количество единиц товара требуется по строке продажи.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr="Outstanding Quantity" - "Reserved Quantity" }

    { 12  ;1   ;Group     ;
                Name=Availability;
                CaptionML=[ENU=Availability;
                           RUS=Наличие];
                GroupType=Group }

    { 10  ;2   ;Field     ;
                Name=Shipment Date;
                CaptionML=[ENU=Shipment Date;
                           RUS=Дата отгрузки];
                ToolTipML=[ENU=Specifies when the items on the sales line must be shipped.;
                           RUS=Определяет, когда должны быть отгружены товары в строке продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SalesInfoPaneMgt.CalcAvailabilityDate(Rec) }

    { 3   ;2   ;Field     ;
                Name=Item Availability;
                DrillDown=Yes;
                CaptionML=[ENU=Item Availability;
                           RUS=Наличие товара];
                ToolTipML=[ENU=Specifies how may units of the item on the sales line are available, in inventory or incoming before the shipment date.;
                           RUS=Определяет количество единиц товара, которое доступно, находится в запасах или поступит до даты отгрузки.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=2:0;
                SourceExpr=SalesInfoPaneMgt.CalcAvailability(Rec);
                OnDrillDown=BEGIN
                              ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByEvent);
                              CurrPage.UPDATE(TRUE);
                            END;
                             }

    { 1   ;2   ;Field     ;
                Name=Available Inventory;
                CaptionML=[ENU=Available Inventory;
                           RUS=Доступные запасы];
                ToolTipML=[ENU=Specifies the quantity of the item that is currently in inventory and not reserved for other demand.;
                           RUS=Определяет количество товара, которое в настоящий момент находится в запасах и не зарезервировано для других целей.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=SalesInfoPaneMgt.CalcAvailableInventory(Rec) }

    { 2   ;2   ;Field     ;
                Name=Scheduled Receipt;
                CaptionML=[ENU=Scheduled Receipt;
                           RUS=Запланиров. поступление];
                ToolTipML=[ENU=Specifies how many units of the assembly component are inbound on purchase orders, transfer orders, assembly orders, firm planned production orders, and released production orders.;
                           RUS=Определяет количество единиц компонентов сборки, которое является входящим для заказов на покупку, заказов на перемещение, заказов на сборку, утвержденных производственных заказов и запущенных производственных заказов.];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=SalesInfoPaneMgt.CalcScheduledReceipt(Rec) }

    { 4   ;2   ;Field     ;
                Name=Reserved Receipt;
                CaptionML=[ENU=Reserved Receipt;
                           RUS=Зарезервированное поступление];
                ToolTipML=[ENU=Specifies how many units of the item on the sales line are reserved on incoming receipts.;
                           RUS=Определяет, какое количество единиц товара в строке продажи резервируется во входящих приходных накладных.];
                DecimalPlaces=0:5;
                SourceExpr=SalesInfoPaneMgt.CalcReservedRequirements(Rec) }

    { 6   ;2   ;Field     ;
                Name=Gross Requirements;
                CaptionML=[ENU=Gross Requirements;
                           RUS=Полные потребности];
                ToolTipML=[ENU=Specifies, for the item on the sales line, dependent demand plus independent demand. Dependent demand comes production order components of all statuses, assembly order components, and planning lines. Independent demand comes from sales orders, transfer orders, service orders, job tasks, and production forecasts.;
                           RUS=Определяет (для товара в строке продажи) сумму зависимого и независимого спроса. Источником зависимого спроса являются компоненты производственных заказов в любом состоянии, компоненты заказов на сборку и строки планирования. Источником независимого спроса являются заказы на продажу, заказы на перемещение, сервисные заказы, рабочие задания и прогнозы производства.];
                DecimalPlaces=0:5;
                SourceExpr=SalesInfoPaneMgt.CalcGrossRequirements(Rec) }

    { 9   ;2   ;Field     ;
                Name=Reserved Requirements;
                CaptionML=[ENU=Reserved Requirements;
                           RUS=Зарезервированные потребности];
                ToolTipML=[ENU=Specifies, for the item on the sales line, how many are reserved on demand records.;
                           RUS=Определяет (для товара в строке продажи), какое количество единиц резервируется по записям спроса.];
                DecimalPlaces=0:5;
                SourceExpr=SalesInfoPaneMgt.CalcReservedDemand(Rec) }

    { 16  ;1   ;Group     ;
                Name=Item;
                CaptionML=[ENU=Item;
                           RUS=Товар];
                GroupType=Group }

    { 15  ;2   ;Field     ;
                Name=UnitofMeasureCode;
                CaptionML=[ENU=Unit of Measure Code;
                           RUS=Код единицы измерения];
                ToolTipML=[ENU=Specifies the unit of measure that is used to determine the value in the Unit Price field on the sales line.;
                           RUS=Определяет единицу измерения, которая используется для определения значения в поле "Цена единицы" в строке продаж.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unit of Measure Code" }

    { 14  ;2   ;Field     ;
                Name=Qty. per Unit of Measure;
                CaptionML=[ENU=Qty. per Unit of Measure;
                           RUS=Кол-во в единице измерения];
                ToolTipML=[ENU=Specifies an auto-filled number if you have included Sales Unit of Measure on the item card and a quantity in the Qty. per Unit of Measure field.;
                           RUS=Определяет автоматически подставляемый номер, если включены поле "Единица измерения продаж" в карточке товара и количество в поле "Кол-во в единице измерения".];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Qty. per Unit of Measure" }

    { 5   ;2   ;Field     ;
                Name=Substitutions;
                DrillDown=Yes;
                CaptionML=[ENU=Substitutions;
                           RUS=Замены];
                ToolTipML=[ENU=Specifies other items that are set up to be traded instead of the item in case it is not available.;
                           RUS=Определяет другие товары, которые будут продаваться в случае отсутствия нужного товара.];
                ApplicationArea=#Suite;
                SourceExpr=SalesInfoPaneMgt.CalcNoOfSubstitutions(Rec);
                OnDrillDown=BEGIN
                              ShowItemSub;
                              CurrPage.UPDATE;
                            END;
                             }

    { 7   ;2   ;Field     ;
                Name=SalesPrices;
                DrillDown=Yes;
                CaptionML=[ENU=Sales Prices;
                           RUS=Цены продажи];
                ToolTipML=[ENU=Specifies how many special prices you grant for the sales line. Choose the value to see the special sales prices.;
                           RUS=Определяет количество специальных цен, предоставляемых для строки продажи. Выберите значение, чтобы увидеть специальные цены продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SalesInfoPaneMgt.CalcNoOfSalesPrices(Rec);
                OnDrillDown=BEGIN
                              ShowPrices;
                              CurrPage.UPDATE;
                            END;
                             }

    { 11  ;2   ;Field     ;
                Name=SalesLineDiscounts;
                DrillDown=Yes;
                CaptionML=[ENU=Sales Line Discounts;
                           RUS=Скидки строки продаж];
                ToolTipML=[ENU=Specifies how many special discounts you grant for the sales line. Choose the value to see the sales line discounts.;
                           RUS=Определяет количество специальных скидок, предоставляемых для строки продажи. Выберите значение, чтобы увидеть скидки по строке продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SalesInfoPaneMgt.CalcNoOfSalesLineDisc(Rec);
                OnDrillDown=BEGIN
                              ShowLineDisc;
                              CurrPage.UPDATE;
                            END;
                             }

  }
  CODE
  {
    VAR
      SalesHeader@1000 : Record 36;
      SalesPriceCalcMgt@1002 : Codeunit 7000;
      SalesInfoPaneMgt@1001 : Codeunit 7171;
      ItemAvailFormsMgt@1003 : Codeunit 353;

    LOCAL PROCEDURE ShowPrices@15();
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetSalesLinePrice(SalesHeader,Rec);
    END;

    LOCAL PROCEDURE ShowLineDisc@16();
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetSalesLineLineDisc(SalesHeader,Rec);
    END;

    LOCAL PROCEDURE ShowNo@29() : Code[20];
    BEGIN
      IF Type <> Type::Item THEN
        EXIT('');
      EXIT("No.");
    END;

    BEGIN
    END.
  }
}

