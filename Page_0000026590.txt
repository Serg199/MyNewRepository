OBJECT Page 26590 Acc. Schedule Extensions
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Acc. Schedule Extensions;
               RUS=Расширения финансового отчета];
    SaveValues=Yes;
    SourceTable=Table26584;
    DelayedInsert=Yes;
    PopulateAllFields=Yes;
    PageType=Worksheet;
    OnInit=BEGIN
             "Value Entry Amount TypeVisible" := TRUE;
             "Item Charge No. FilterVisible" := TRUE;
             InventoryPostingGroupFilterVis := TRUE;
             "Value Entry Type FilterVisible" := TRUE;
             "Document Type FilterVisible" := TRUE;
             "Liability TypeVisible" := TRUE;
             "Due Date FilterVisible" := TRUE;
             "Posting Date FilterVisible" := TRUE;
             "Posting Group FilterVisible" := TRUE;
             "Location FilterVisible" := TRUE;
             VATAllocationTypeFilterVisible := TRUE;
             "Object No. FilterVisible" := TRUE;
             "Object Type FilterVisible" := TRUE;
             GenProdPostGroupFilterVisible := TRUE;
             GenBusPostGroupFilterVisible := TRUE;
             VATProdPostGroupFilterVisible := TRUE;
             VATBusPostGroupFilterVisible := TRUE;
             "VAT TypeVisible" := TRUE;
             "VAT Amount TypeVisible" := TRUE;
             "Reverse SignVisible" := TRUE;
             "Prepayment FilterVisible" := TRUE;
             "VAT Entry TypeVisible" := TRUE;
             "Amount SignVisible" := TRUE;
             "Source TableVisible" := TRUE;
           END;

    OnOpenPage=BEGIN
                 IF SourceTable <> SourceTable::" " THEN
                   UpdateControls;
               END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1470001;1;Group     ;
                GroupType=Repeater }

    { 1470007;2;Field     ;
                ToolTipML=[ENU=Specifies the account schedule extension code.;
                           RUS=Определяет код расширения финансового отчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Code }

    { 1210023;2;Field     ;
                ToolTipML=[ENU=Specifies the source table for the account schedule extension.;
                           RUS=Определяет исходную таблицу для расширения финансового отчета.];
                ApplicationArea=#All;
                SourceExpr="Source Table";
                Visible="Source TableVisible" }

    { 1470009;2;Field     ;
                ToolTipML=[ENU=Specifies the description for the account schedule extension.;
                           RUS=Определяет описание для расширения финансового отчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description }

    { 1470017;2;Field     ;
                ToolTipML=[ENU=Specifies the location filter associated with the account schedule extension.;
                           RUS=Определяет фильтр склада, связанный с расширением финансового отчета.];
                ApplicationArea=#All;
                SourceExpr="Location Filter";
                Visible="Location FilterVisible";
                OnLookup=VAR
                           LocationList@1210000 : Page 15;
                         BEGIN
                           LocationList.LOOKUPMODE(TRUE);
                           IF NOT (LocationList.RUNMODAL = ACTION::LookupOK) THEN
                             EXIT(FALSE);

                           Text := LocationList.GetSelectionFilter;
                           EXIT(TRUE);
                         END;
                          }

    { 1210014;2;Field     ;
                ToolTipML=[ENU=Specifies the value entry type filter associated with the account schedule extension.;
                           RUS=Определяет фильтр типа операции стоимости, связанный с расширением финансового отчета.];
                ApplicationArea=#All;
                SourceExpr="Value Entry Type Filter";
                Visible="Value Entry Type FilterVisible" }

    { 1210016;2;Field     ;
                ToolTipML=[ENU=Specifies the code for the inventory posting group that applies to the entry.;
                           RUS=Определяет код товарной учетной группы, применяемый к операции.];
                ApplicationArea=#All;
                SourceExpr="Inventory Posting Group Filter";
                Visible=InventoryPostingGroupFilterVis;
                OnLookup=VAR
                           InventoryPostingGroup@1210001 : Record 94;
                           InventoryPostingGroups@1210000 : Page 112;
                         BEGIN
                           InventoryPostingGroups.LOOKUPMODE(TRUE);
                           IF NOT (InventoryPostingGroups.RUNMODAL = ACTION::LookupOK) THEN
                             EXIT(FALSE);

                           InventoryPostingGroups.GETRECORD(InventoryPostingGroup);
                           Text := InventoryPostingGroup.Code;

                           EXIT(TRUE);
                         END;
                          }

    { 1210018;2;Field     ;
                ToolTipML=[ENU=Specifies the item charge number filter associated with the account schedule extension.;
                           RUS=Определяет фильтр номера товарных издержек, связанный с расширением финансового отчета.];
                ApplicationArea=#All;
                SourceExpr="Item Charge No. Filter";
                Visible="Item Charge No. FilterVisible";
                OnLookup=VAR
                           ItemCharge@1210000 : Record 5800;
                           ItemCharges@1210001 : Page 5800;
                         BEGIN
                           ItemCharges.LOOKUPMODE(TRUE);
                           IF NOT (ItemCharges.RUNMODAL = ACTION::LookupOK) THEN
                             EXIT(FALSE);

                           ItemCharges.GETRECORD(ItemCharge);
                           Text := ItemCharge."No.";
                           EXIT(TRUE);
                         END;
                          }

    { 1210020;2;Field     ;
                ToolTipML=[ENU=Specifies the value entry amount type associated with the account schedule extension.;
                           RUS=Определяет тип суммы операции стоимости, связанный с расширением финансового отчета.];
                ApplicationArea=#All;
                SourceExpr="Value Entry Amount Type";
                Visible="Value Entry Amount TypeVisible" }

    { 1470023;2;Field     ;
                ToolTipML=[ENU=Specifies the VAT entry type for the account schedule extension.;
                           RUS=Определяет тип операции НДС для расширения финансового отчета.];
                ApplicationArea=#All;
                SourceExpr="VAT Entry Type";
                Visible="VAT Entry TypeVisible" }

    { 1470025;2;Field     ;
                ToolTipML=[ENU=Specifies whether prepayment will be used for the account schedule extension.;
                           RUS=Определяет, будет ли предоплата использоваться для расширения финансового отчета.];
                ApplicationArea=#All;
                SourceExpr="Prepayment Filter";
                Visible="Prepayment FilterVisible" }

    { 1470027;2;Field     ;
                ToolTipML=[ENU=Specifies the VAT amount type for the account schedule extension.;
                           RUS=Определяет тип суммы НДС для расширения финансового отчета.];
                ApplicationArea=#All;
                SourceExpr="VAT Amount Type";
                Visible="VAT Amount TypeVisible" }

    { 1210010;2;Field     ;
                ToolTipML=[ENU=Specifies the VAT type for the account schedule extension.;
                           RUS=Определяет тип НДС для расширения финансового отчета.];
                ApplicationArea=#All;
                SourceExpr="VAT Type";
                Visible="VAT TypeVisible" }

    { 1470029;2;Field     ;
                ToolTipML=[ENU=Specifies the code for the VAT business posting group that applies to the entry.;
                           RUS=Определяет код бизнес-группы НДС, который применяется к этой операции.];
                ApplicationArea=#All;
                SourceExpr="VAT Bus. Post. Group Filter";
                Visible=VATBusPostGroupFilterVisible;
                OnLookup=VAR
                           VATBusinessPostingGroup@1210000 : Record 323;
                           VATBusinessPostingGroups@1210001 : Page 470;
                         BEGIN
                           VATBusinessPostingGroups.LOOKUPMODE(TRUE);
                           IF NOT (VATBusinessPostingGroups.RUNMODAL = ACTION::LookupOK) THEN
                             EXIT(FALSE);

                           VATBusinessPostingGroups.GETRECORD(VATBusinessPostingGroup);
                           Text := VATBusinessPostingGroup.Code;
                           EXIT(TRUE);
                         END;
                          }

    { 1470031;2;Field     ;
                ToolTipML=[ENU=Specifies the code for the VAT product posting group that applies to the entry.;
                           RUS=Определяет код товарной группы НДС, который применяется к этой операции.];
                ApplicationArea=#All;
                SourceExpr="VAT Prod. Post. Group Filter";
                Visible=VATProdPostGroupFilterVisible;
                OnLookup=VAR
                           VATProductPostingGroup@1210000 : Record 324;
                           VATProductPostingGroups@1210001 : Page 471;
                         BEGIN
                           VATProductPostingGroups.LOOKUPMODE(TRUE);
                           IF NOT (VATProductPostingGroups.RUNMODAL = ACTION::LookupOK) THEN
                             EXIT(FALSE);

                           VATProductPostingGroups.GETRECORD(VATProductPostingGroup);
                           Text := VATProductPostingGroup.Code;
                           EXIT(TRUE);
                         END;
                          }

    { 1210004;2;Field     ;
                ToolTipML=[ENU=Specifies the code for the general business posting group that applies to the entry.;
                           RUS=Определяет код общей бизнес-группы, который применяется к этой операции.];
                ApplicationArea=#All;
                SourceExpr="Gen. Bus. Post. Group Filter";
                Visible=GenBusPostGroupFilterVisible;
                OnLookup=VAR
                           GenBusinessPostingGroup@1210000 : Record 250;
                           GenBusinessPostingGroups@1210001 : Page 312;
                         BEGIN
                           GenBusinessPostingGroups.LOOKUPMODE(TRUE);
                           IF NOT (GenBusinessPostingGroups.RUNMODAL = ACTION::LookupOK) THEN
                             EXIT(FALSE);

                           GenBusinessPostingGroups.GETRECORD(GenBusinessPostingGroup);
                           Text := GenBusinessPostingGroup.Code;
                           EXIT(TRUE);
                         END;
                          }

    { 1210006;2;Field     ;
                ToolTipML=[ENU=Specifies the code for the general product posting group that applies to the entry.;
                           RUS=Определяет код общей товарной группы, который применяется к этой операции.];
                ApplicationArea=#All;
                SourceExpr="Gen. Prod. Post. Group Filter";
                Visible=GenProdPostGroupFilterVisible;
                OnLookup=VAR
                           GenProductPostingGroup@1210000 : Record 251;
                           GenProductPostingGroups@1210001 : Page 313;
                         BEGIN
                           GenProductPostingGroups.LOOKUPMODE(TRUE);
                           IF NOT (GenProductPostingGroups.RUNMODAL = ACTION::LookupOK) THEN
                             EXIT(FALSE);

                           GenProductPostingGroups.GETRECORD(GenProductPostingGroup);
                           Text := GenProductPostingGroup.Code;
                           EXIT(TRUE);
                         END;
                          }

    { 1210000;2;Field     ;
                ToolTipML=[ENU=Specifies the object type filter associated with the account schedule extension.;
                           RUS=Определяет фильтр типа объекта, связанный с расширением финансового отчета.];
                ApplicationArea=#All;
                SourceExpr="Object Type Filter";
                Visible="Object Type FilterVisible" }

    { 1210002;2;Field     ;
                ToolTipML=[ENU=Specifies the object number filter associated with the account schedule extension.;
                           RUS=Определяет фильтр номера объекта, связанный с расширением финансового отчета.];
                ApplicationArea=#All;
                SourceExpr="Object No. Filter";
                Visible="Object No. FilterVisible";
                OnLookup=VAR
                           BankAccount@1210005 : Record 270;
                           FixedAsset@1210006 : Record 5600;
                           GLAccList@1210003 : Page 18;
                           CustomerList@1210000 : Page 22;
                           VendorList@1210001 : Page 27;
                           BankAccountList@1210002 : Page 371;
                           FixedAssetList@1210004 : Page 5601;
                         BEGIN
                           CASE "Object Type Filter" OF
                             "Object Type Filter"::"G/L Account":
                               BEGIN
                                 GLAccList.LOOKUPMODE(TRUE);
                                 IF NOT (GLAccList.RUNMODAL = ACTION::LookupOK) THEN
                                   EXIT(FALSE);
                                 Text := GLAccList.GetSelectionFilter;
                                 EXIT(TRUE);
                               END;
                             "Object Type Filter"::Customer:
                               BEGIN
                                 CustomerList.LOOKUPMODE(TRUE);
                                 IF NOT (CustomerList.RUNMODAL = ACTION::LookupOK) THEN
                                   EXIT(FALSE);
                                 Text := CustomerList.GetSelectionFilter;
                                 EXIT(TRUE);
                               END;
                             "Object Type Filter"::Vendor:
                               BEGIN
                                 VendorList.LOOKUPMODE(TRUE);
                                 IF NOT (VendorList.RUNMODAL = ACTION::LookupOK) THEN
                                   EXIT(FALSE);
                                 Text := VendorList.GetSelectionFilter;
                                 EXIT(TRUE);
                               END;
                             "Object Type Filter"::"Bank Account":
                               BEGIN
                                 BankAccountList.LOOKUPMODE(TRUE);
                                 IF NOT (BankAccountList.RUNMODAL = ACTION::LookupOK) THEN
                                   EXIT(FALSE);
                                 BankAccountList.GETRECORD(BankAccount);
                                 Text := BankAccount."No.";
                                 EXIT(TRUE);
                               END;
                             "Object Type Filter"::"Fixed Asset":
                               BEGIN
                                 FixedAssetList.LOOKUPMODE(TRUE);
                                 IF NOT (FixedAssetList.RUNMODAL = ACTION::LookupOK) THEN
                                   EXIT(FALSE);
                                 FixedAssetList.GETRECORD(FixedAsset);
                                 Text := FixedAsset."No.";
                                 EXIT(TRUE);
                               END;
                           END;
                         END;
                          }

    { 1210008;2;Field     ;
                ToolTipML=[ENU=Specifies the VAT allocation type filter associated with the account schedule extension.;
                           RUS=Определяет фильтр типа распределения НДС, связанный с расширением финансового отчета.];
                ApplicationArea=#All;
                SourceExpr="VAT Allocation Type Filter";
                Visible=VATAllocationTypeFilterVisible }

    { 1210012;2;Field     ;
                ToolTipML=[ENU=Specifies the liability type associated with the account schedule extension.;
                           RUS=Определяет тип задолженности, связанный с расширением финансового отчета.];
                ApplicationArea=#All;
                SourceExpr="Liability Type";
                Visible="Liability TypeVisible" }

    { 1470002;2;Field     ;
                ToolTipML=[ENU=Specifies the due date for the account schedule extension.;
                           RUS=Определяет срок выполнения для расширения финансового отчета.];
                ApplicationArea=#All;
                SourceExpr="Due Date Filter";
                Visible="Due Date FilterVisible" }

    { 1470033;2;Field     ;
                ToolTipML=[ENU=Specifies the amount sign for the account schedule extension.;
                           RUS=Определяет знак суммы для расширения финансового отчета.];
                ApplicationArea=#All;
                SourceExpr="Amount Sign";
                Visible="Amount SignVisible" }

    { 1470004;2;Field     ;
                ToolTipML=[ENU=Specifies the document type for the account schedule extension.;
                           RUS=Определяет тип документа для расширения финансового отчета.];
                ApplicationArea=#All;
                SourceExpr="Document Type Filter";
                Visible="Document Type FilterVisible" }

    { 1470006;2;Field     ;
                ToolTipML=[ENU=Specifies the posting date for the account schedule extension.;
                           RUS=Определяет дату учета для расширения финансового отчета.];
                ApplicationArea=#All;
                SourceExpr="Posting Date Filter";
                Visible="Posting Date FilterVisible" }

    { 1470035;2;Field     ;
                ToolTipML=[ENU=Specifies if you want positive amounts to be shown as negative amounts or negative amounts to be shown as positive.;
                           RUS=Определяет, должны ли положительные суммы отображаться как отрицательные суммы, а отрицательные суммы - как положительные.];
                ApplicationArea=#All;
                SourceExpr="Reverse Sign";
                Visible="Reverse SignVisible" }

    { 1470060;2;Field     ;
                ToolTipML=[ENU=Specifies the posting group for the account schedule extension.;
                           RUS=Определяет учетную группу для расширения финансового отчета.];
                ApplicationArea=#All;
                SourceExpr="Posting Group Filter";
                Visible="Posting Group FilterVisible";
                OnLookup=VAR
                           CustomerPostingGroup@1210002 : Record 92;
                           VendorPostingGroup@1210003 : Record 93;
                           CustomerPostingGroups@1210000 : Page 110;
                           VendorPostingGroups@1210001 : Page 111;
                         BEGIN
                           CASE "Source Table" OF
                             "Source Table"::"Customer Entry":
                               BEGIN
                                 CustomerPostingGroups.LOOKUPMODE(TRUE);
                                 IF NOT (CustomerPostingGroups.RUNMODAL = ACTION::LookupOK) THEN
                                   EXIT(FALSE);
                                 CustomerPostingGroups.GETRECORD(CustomerPostingGroup);
                                 Text := CustomerPostingGroup.Code;
                                 EXIT(TRUE);
                               END;
                             "Source Table"::"Vendor Entry":
                               BEGIN
                                 VendorPostingGroups.LOOKUPMODE(TRUE);
                                 IF NOT (VendorPostingGroups.RUNMODAL = ACTION::LookupOK) THEN
                                   EXIT(FALSE);
                                 VendorPostingGroups.GETRECORD(VendorPostingGroup);
                                 Text := VendorPostingGroup.Code;
                                 EXIT(TRUE);
                               END;
                           END;
                         END;
                          }

  }
  CODE
  {
    VAR
      SourceTable@1210000 : ' ,VAT Entry,Value Entry,Customer Entry,Vendor Entry';
      "Source TableVisible"@19026691 : Boolean INDATASET;
      "Amount SignVisible"@19006064 : Boolean INDATASET;
      "VAT Entry TypeVisible"@19075420 : Boolean INDATASET;
      "Prepayment FilterVisible"@19019921 : Boolean INDATASET;
      "Reverse SignVisible"@19027089 : Boolean INDATASET;
      "VAT Amount TypeVisible"@19048691 : Boolean INDATASET;
      "VAT TypeVisible"@19063993 : Boolean INDATASET;
      VATBusPostGroupFilterVisible@19034904 : Boolean INDATASET;
      VATProdPostGroupFilterVisible@19063244 : Boolean INDATASET;
      GenBusPostGroupFilterVisible@19028454 : Boolean INDATASET;
      GenProdPostGroupFilterVisible@19075907 : Boolean INDATASET;
      "Object Type FilterVisible"@19058426 : Boolean INDATASET;
      "Object No. FilterVisible"@19009420 : Boolean INDATASET;
      VATAllocationTypeFilterVisible@19012890 : Boolean INDATASET;
      "Location FilterVisible"@19049646 : Boolean INDATASET;
      "Posting Group FilterVisible"@19066244 : Boolean INDATASET;
      "Posting Date FilterVisible"@19038710 : Boolean INDATASET;
      "Due Date FilterVisible"@19054898 : Boolean INDATASET;
      "Liability TypeVisible"@19073765 : Boolean INDATASET;
      "Document Type FilterVisible"@19013134 : Boolean INDATASET;
      "Value Entry Type FilterVisible"@19063209 : Boolean INDATASET;
      InventoryPostingGroupFilterVis@19035072 : Boolean INDATASET;
      "Item Charge No. FilterVisible"@19014290 : Boolean INDATASET;
      "Value Entry Amount TypeVisible"@19071388 : Boolean INDATASET;

    PROCEDURE SetSourceTable@1210000(NewSourceTable@1210000 : Integer);
    BEGIN
      SourceTable := NewSourceTable;
    END;

    PROCEDURE UpdateControls@1470000();
    BEGIN
      "Source TableVisible" := FALSE;
      "Amount SignVisible" := FALSE;
      "VAT Entry TypeVisible" := FALSE;
      "Prepayment FilterVisible" := FALSE;
      "Reverse SignVisible" := FALSE;
      "VAT Amount TypeVisible" := FALSE;
      "VAT TypeVisible" := FALSE;
      VATBusPostGroupFilterVisible := FALSE;
      VATProdPostGroupFilterVisible := FALSE;
      GenBusPostGroupFilterVisible := FALSE;
      GenProdPostGroupFilterVisible := FALSE;
      "Object Type FilterVisible" := FALSE;
      "Object No. FilterVisible" := FALSE;
      VATAllocationTypeFilterVisible := FALSE;
      "Location FilterVisible" := FALSE;
      "Posting Group FilterVisible" := FALSE;
      "Posting Date FilterVisible" := FALSE;
      "Due Date FilterVisible" := FALSE;
      "Liability TypeVisible" := FALSE;
      "Document Type FilterVisible" := FALSE;
      "Value Entry Type FilterVisible" := FALSE;
      InventoryPostingGroupFilterVis := FALSE;
      "Item Charge No. FilterVisible" := FALSE;
      "Value Entry Amount TypeVisible" := FALSE;

      CASE SourceTable OF
        SourceTable::"VAT Entry":
          BEGIN
            "VAT Entry TypeVisible" := TRUE;
            "Reverse SignVisible" := TRUE;
            "VAT Amount TypeVisible" := TRUE;
            "VAT TypeVisible" := TRUE;
            VATBusPostGroupFilterVisible := TRUE;
            VATProdPostGroupFilterVisible := TRUE;
            GenBusPostGroupFilterVisible := TRUE;
            GenProdPostGroupFilterVisible := TRUE;
            "Object Type FilterVisible" := TRUE;
            "Object No. FilterVisible" := TRUE;
            VATAllocationTypeFilterVisible := TRUE;
            "Prepayment FilterVisible" := TRUE;
          END;
        SourceTable::"Value Entry":
          BEGIN
            "Location FilterVisible" := TRUE;
            "Value Entry Type FilterVisible" := TRUE;
            InventoryPostingGroupFilterVis := TRUE;
            "Item Charge No. FilterVisible" := TRUE;
            "Value Entry Amount TypeVisible" := TRUE;
            "Reverse SignVisible" := TRUE;
            "Amount SignVisible" := TRUE;
          END;
        SourceTable::"Customer Entry",
        SourceTable::"Vendor Entry":
          BEGIN
            "Posting Group FilterVisible" := TRUE;
            "Posting Date FilterVisible" := TRUE;
            "Liability TypeVisible" := TRUE;
            "Due Date FilterVisible" := TRUE;
            "Document Type FilterVisible" := TRUE;
            "Prepayment FilterVisible" := TRUE;
            "Amount SignVisible" := TRUE;
            "Reverse SignVisible" := TRUE;
          END;
      END;
    END;

    BEGIN
    END.
  }
}

