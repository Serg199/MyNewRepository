OBJECT Report 17376 Average Employee Count
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Average Employee Count;
               RUS=Среднесписочная численность сотрудников];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  CompanyInfo.GET;
                  HRSetup.GET;
                  HRSetup.TESTFIELD("Avg. Headcount Template Code");

                  AnalyzableDate := DMY2DATE(31,12,Year);
                  FileName := ExcelTemplate.OpenTemplate(HRSetup."Avg. Headcount Template Code");
                  ExcelMgt.OpenBook(FileName);
                  ExcelMgt.OpenSheetByNumber(1);

                  FillCellsGroup('AN2',12,CompanyInfo."VAT Registration No.");
                  FillCellsGroup('AN5',9,CompanyInfo."KPP Code");
                  FillCellsGroup('CF5',3,'001');

                  ExcelMgt.FillCell('C15',LocalRepMgt.GetCompanyName);

                  FillDate('CC23',AnalyzableDate);

                  IF Employee.FINDSET THEN
                    REPEAT
                      AvrHeadQty += AverageHeadcountCalculation.CalcAvgCount(Employee."No.",AnalyzableDate);
                    UNTIL Employee.NEXT = 0;

                  AvrHeadQtyText := FORMAT(ROUND(AvrHeadQty,1),0,1);
                  AvrHeadQtyText := PADSTR('',6 - STRLEN(AvrHeadQtyText),'0') + AvrHeadQtyText;
                  FillCellsGroup('T27',6,AvrHeadQtyText);

                  IF Employee.GET(CompanyInfo."Director No.") THEN
                    ExcelMgt.FillCell('S34',Employee.GetFullNameOnDate(ReportingDate));

                  FillDate('AH37',ReportingDate);

                  IF Representative THEN BEGIN
                    FillDate('AH48',ReportingDate);
                    ExcelMgt.FillCell('C45',RepresentativeName);
                    ExcelMgt.FillCell('C51',RepresentativeDocument);
                  END;
                END;

    OnPostReport=BEGIN
                   IF NOT TestMode THEN
                     ExcelMgt.GiveUserControl
                   ELSE
                     ExcelMgt.QuitXlApp;
                 END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   Year := DATE2DMY(WORKDATE,3);
                   ReportingDate := WORKDATE;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             RUS=Параметры] }

      { 1210000;2;Field     ;
                  CaptionML=[ENU=Year;
                             RUS=Год];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=Year;
                  MinValue=1 }

      { 1210002;2;Field     ;
                  CaptionML=[ENU=Reporting Date;
                             RUS=Дата отчетности];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=ReportingDate }

      { 1210004;2;Field     ;
                  CaptionML=[ENU=Representative;
                             RUS=Представитель];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=Representative;
                  OnValidate=BEGIN
                               IF NOT Representative THEN BEGIN
                                 RepresentativeName := '';
                                 RepresentativeDocument := '';
                               END;
                             END;
                              }

      { 1210006;2;Field     ;
                  CaptionML=[ENU=Representative Name;
                             RUS=Имя представителя];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=RepresentativeName;
                  OnValidate=BEGIN
                               CheckRepresentative;
                             END;
                              }

      { 1210008;2;Field     ;
                  CaptionML=[ENU=Representative Document;
                             RUS=Документ представителя];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=RepresentativeDocument;
                  OnValidate=BEGIN
                               CheckRepresentative;
                             END;
                              }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CompanyInfo@1210010 : Record 79;
      Employee@1210012 : Record 5200;
      HRSetup@1210006 : Record 5218;
      ExcelTemplate@1210007 : Record 14919;
      LocalRepMgt@1210011 : Codeunit 12401;
      ExcelMgt@1210009 : Codeunit 12416;
      AverageHeadcountCalculation@1210013 : Codeunit 17351;
      Year@1210000 : Integer;
      AvrHeadQty@1210015 : Decimal;
      Representative@1210001 : Boolean;
      AnalyzableDate@1210014 : Date;
      ReportingDate@1210002 : Date;
      RepresentativeName@1210003 : Text[250];
      RepresentativeDocument@1210004 : Text[250];
      Text001@1210005 : TextConst 'ENU=Representative must be Yes.;RUS=Поле "Представитель" должно иметь значение "Да".';
      FileName@1210008 : Text[250];
      AvrHeadQtyText@1210016 : Text[30];
      TestMode@1210017 : Boolean;

    PROCEDURE CheckRepresentative@1210009();
    BEGIN
      IF NOT Representative THEN
        ERROR(Text001);
    END;

    PROCEDURE FillCellsGroup@1210021(FirstCellName@1210000 : Text[30];CellsQty@1210001 : Integer;CellValue@1210002 : Text[250]);
    VAR
      CurrCellName@1210004 : Text[30];
      i@1210003 : Integer;
    BEGIN
      CurrCellName := FirstCellName;
      FOR i := 1 TO CellsQty DO BEGIN
        ExcelMgt.FillCell(CurrCellName,FORMAT(CellValue[i]));
        CurrCellName := ExcelMgt.GetNextCellHoriz2(CurrCellName);
      END;
    END;

    PROCEDURE FillDate@1210007(FirstCellName@1210000 : Text[30];DateToExport@1210001 : Date);
    BEGIN
      FillCellsGroup(FirstCellName,10,FORMAT(DateToExport,0,'<Day,2>=<Month,2>=<Year4>'));
    END;

    PROCEDURE SetTestMode@1210000(NewTestMode@1210000 : Boolean);
    BEGIN
      TestMode := NewTestMode;
      Year := DATE2DMY(WORKDATE,3);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

