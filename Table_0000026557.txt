OBJECT Table 26557 Stat. Report Requisites Group
{
  OBJECT-PROPERTIES
  {
    Date=15.09.15;
    Time=12:00:00;
    Version List=NAVRU9.00;
  }
  PROPERTIES
  {
    OnDelete=VAR
               StatReportRequisite@1210000 : Record 26559;
             BEGIN
               StatReportRequisite.SETRANGE("Report Code","Report Code");
               StatReportRequisite.SETRANGE("Requisites Group Name",Name);
               IF StatReportRequisite.FINDFIRST THEN
                 StatReportRequisite.DELETEALL(TRUE);
             END;

    CaptionML=[ENU=Stat. Report Requisites Group;
               RUS=Группа показателей регламентного отчета];
    LookupPageID=Page26556;
  }
  FIELDS
  {
    { 1   ;   ;Report Code         ;Code20        ;TableRelation="Statutory Report";
                                                   CaptionML=[ENU=Report Code;
                                                              RUS=Код отчета] }
    { 3   ;   ;Name                ;Text30        ;CaptionML=[ENU=Name;
                                                              RUS=Название];
                                                   NotBlank=Yes }
    { 4   ;   ;Description         ;Text250       ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 8   ;   ;Section No.         ;Code10        ;CaptionML=[ENU=Section No.;
                                                              RUS=Номер раздела] }
    { 9   ;   ;Requisites Quantity ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Stat. Report Requisite" WHERE (Report Code=FIELD(Report Code),
                                                                                                     Requisites Group Name=FIELD(Name)));
                                                   CaptionML=[ENU=Requisites Quantity;
                                                              RUS=Количество показателей];
                                                   Editable=No }
    { 10  ;   ;Sequence No.        ;Integer       ;CaptionML=[ENU=Sequence No.;
                                                              RUS=Порядковый номер] }
    { 11  ;   ;Excel Sheet Name    ;Text30        ;TableRelation="Stat. Report Excel Sheet"."Sheet Name" WHERE (Report Code=FIELD(Report Code),
                                                                                                                Report Data No.=CONST());
                                                   OnLookup=BEGIN
                                                              StatutoryReport.GET("Report Code");
                                                              StatutoryReport.LookupExcelSheetNames("Excel Sheet Name");
                                                            END;

                                                   CaptionML=[ENU=Excel Sheet Name;
                                                              RUS=Имя листа Excel] }
    { 12  ;   ;Group End           ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Group End;
                                                              RUS=Конец группы] }
    { 13  ;   ;Fragment End        ;Boolean       ;CaptionML=[ENU=Fragment End;
                                                              RUS=Конец фрагмента] }
  }
  KEYS
  {
    {    ;Report Code,Name                        ;Clustered=Yes }
    {    ;Report Code,Sequence No.                 }
    {    ;Report Code,Excel Sheet Name             }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      StatutoryReport@1210005 : Record 26550;

    PROCEDURE CopyRequisitesGroup@1210000(ReportFromCode@1210001 : Code[20];GroupFromName@1210000 : Text[30]);
    VAR
      StatReportRequisite@1210002 : Record 26559;
      StatReportRequisiteFrom@1210005 : Record 26559;
    BEGIN
      StatReportRequisiteFrom.SETRANGE("Report Code",ReportFromCode);
      StatReportRequisiteFrom.SETRANGE("Requisites Group Name",GroupFromName);
      IF StatReportRequisiteFrom.FINDSET THEN
        REPEAT
          StatReportRequisite := StatReportRequisiteFrom;
          StatReportRequisite."Report Code" := "Report Code";
          StatReportRequisite.INSERT;
          StatReportRequisite.CopyRequisite(ReportFromCode,GroupFromName,StatReportRequisiteFrom.Name);
        UNTIL StatReportRequisiteFrom.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

