OBJECT Table 14940 G/L Corr. Analysis View
{
  OBJECT-PROPERTIES
  {
    Date=09.09.14;
    Time=12:00:00;
    Version List=NAVRU8.00;
  }
  PROPERTIES
  {
    Permissions=TableData 365=rimd,
                TableData 366=rimd;
    DataCaptionFields=Code,Name;
    OnDelete=VAR
               GLCorrAnalysisViewFilter@1000 : Record 14941;
             BEGIN
               AnalysisViewReset;
               GLCorrAnalysisViewFilter.SETRANGE("G/L Corr. Analysis View Code",Code);
               GLCorrAnalysisViewFilter.DELETEALL;
             END;

    CaptionML=[ENU=G/L Corr. Analysis View;
               RUS=Аналит. отчет по корресп.];
    LookupPageID=Page14942;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              RUS=Код];
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              RUS=Название] }
    { 4   ;   ;Last Entry No.      ;Integer       ;CaptionML=[ENU=Last Entry No.;
                                                              RUS=Номер посл. операции] }
    { 6   ;   ;Last Date Updated   ;Date          ;CaptionML=[ENU=Last Date Updated;
                                                              RUS=Дата посл. обновления] }
    { 7   ;   ;Update on G/L Corr. Creation;Boolean;
                                                   CaptionML=[ENU=Update on G/L Corr. Creation;
                                                              RUS=Обновление при создании корресп.] }
    { 8   ;   ;Blocked             ;Boolean       ;OnValidate=BEGIN
                                                                IF NOT Blocked THEN BEGIN
                                                                  ValidateDelete(FIELDCAPTION(Blocked));
                                                                  AnalysisViewReset;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Blocked;
                                                              RUS=Заблокировано] }
    { 10  ;   ;Business Unit Filter;Code250       ;TableRelation="Business Unit";
                                                   OnValidate=VAR
                                                                GLCorrAnalysisViewEntry@1210000 : Record 14942;
                                                                BusUnit@1000 : Record 220;
                                                                TempBusUnit@1003 : TEMPORARY Record 220;
                                                              BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF ("Last Entry No." <> 0) AND (xRec."Business Unit Filter" = '') AND
                                                                   ("Business Unit Filter" <> xRec."Business Unit Filter")
                                                                THEN BEGIN
                                                                  ValidateModify(FIELDCAPTION("Business Unit Filter"));
                                                                  IF BusUnit.FINDSET THEN
                                                                    REPEAT
                                                                      TempBusUnit := BusUnit;
                                                                      TempBusUnit.INSERT;
                                                                    UNTIL BusUnit.NEXT = 0;
                                                                  TempBusUnit.INIT;
                                                                  TempBusUnit.Code := '';
                                                                  TempBusUnit.INSERT;
                                                                  TempBusUnit.SETFILTER(Code,"Business Unit Filter");
                                                                  TempBusUnit.DELETEALL;
                                                                  TempBusUnit.SETRANGE(Code);
                                                                  IF TempBusUnit.FINDSET THEN
                                                                    REPEAT
                                                                      GLCorrAnalysisViewEntry.SETRANGE("G/L Corr. Analysis View Code",Code);
                                                                      GLCorrAnalysisViewEntry.SETRANGE("Business Unit Code",TempBusUnit.Code);
                                                                      GLCorrAnalysisViewEntry.DELETEALL;
                                                                    UNTIL TempBusUnit.NEXT = 0
                                                                END;
                                                                IF ("Last Entry No." <> 0) AND (xRec."Business Unit Filter" <> '') AND
                                                                   ("Business Unit Filter" <> xRec."Business Unit Filter")
                                                                THEN BEGIN
                                                                  ValidateDelete(FIELDCAPTION("Business Unit Filter"));
                                                                  AnalysisViewReset;
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Business Unit Filter;
                                                              RUS=Фильтр по филиалу] }
    { 11  ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF ("Last Entry No." <> 0) AND ("Starting Date" <> xRec."Starting Date") THEN BEGIN
                                                                  ValidateDelete(FIELDCAPTION("Starting Date"));
                                                                  AnalysisViewReset;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Starting Date;
                                                              RUS=Дата начала] }
    { 12  ;   ;Debit Account Filter;Code250       ;TableRelation="G/L Account";
                                                   OnValidate=VAR
                                                                GLCorrAnalysisViewEntry@1210000 : Record 14942;
                                                                GLAcc@1002 : Record 15;
                                                              BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF ("Last Entry No." <> 0) AND (xRec."Debit Account Filter" = '') AND
                                                                   ("Debit Account Filter" <> '')
                                                                THEN BEGIN
                                                                  ValidateModify(FIELDCAPTION("Debit Account Filter"));
                                                                  GLAcc.SETFILTER("No.","Debit Account Filter");
                                                                  IF GLAcc.FINDSET THEN
                                                                    REPEAT
                                                                      GLAcc.MARK := TRUE;
                                                                    UNTIL GLAcc.NEXT = 0;
                                                                  GLAcc.SETRANGE("No.");
                                                                  IF GLAcc.FINDSET THEN
                                                                    REPEAT
                                                                      IF NOT GLAcc.MARK THEN BEGIN
                                                                        GLCorrAnalysisViewEntry.SETRANGE("G/L Corr. Analysis View Code",Code);
                                                                        GLCorrAnalysisViewEntry.SETRANGE("Debit Account No.",GLAcc."No.");
                                                                        GLCorrAnalysisViewEntry.DELETEALL;
                                                                      END;
                                                                    UNTIL GLAcc.NEXT = 0;
                                                                END;
                                                                IF ("Last Entry No." <> 0) AND ("Debit Account Filter" <> xRec."Debit Account Filter") AND
                                                                   (xRec."Debit Account Filter" <> '')
                                                                THEN BEGIN
                                                                  ValidateDelete(FIELDCAPTION("Debit Account Filter"));
                                                                  AnalysisViewReset;
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Debit Account Filter;
                                                              RUS=Фильтр по дебетовым счетам ГК] }
    { 13  ;   ;Credit Account Filter;Code250      ;TableRelation="G/L Account";
                                                   OnValidate=VAR
                                                                GLCorrAnalysisViewEntry@1210000 : Record 14942;
                                                                GLAcc@1002 : Record 15;
                                                              BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF ("Last Entry No." <> 0) AND (xRec."Credit Account Filter" = '') AND
                                                                   ("Credit Account Filter" <> '')
                                                                THEN BEGIN
                                                                  ValidateModify(FIELDCAPTION("Credit Account Filter"));
                                                                  GLAcc.SETFILTER("No.","Credit Account Filter");
                                                                  IF GLAcc.FINDSET THEN
                                                                    REPEAT
                                                                      GLAcc.MARK := TRUE;
                                                                    UNTIL GLAcc.NEXT = 0;
                                                                  GLAcc.SETRANGE("No.");
                                                                  IF GLAcc.FINDSET THEN
                                                                    REPEAT
                                                                      IF NOT GLAcc.MARK THEN BEGIN
                                                                        GLCorrAnalysisViewEntry.SETRANGE("G/L Corr. Analysis View Code",Code);
                                                                        GLCorrAnalysisViewEntry.SETRANGE("Credit Account No.",GLAcc."No.");
                                                                        GLCorrAnalysisViewEntry.DELETEALL;
                                                                      END;
                                                                    UNTIL GLAcc.NEXT = 0;
                                                                END;
                                                                IF ("Last Entry No." <> 0) AND ("Credit Account Filter" <> xRec."Credit Account Filter") AND
                                                                   (xRec."Credit Account Filter" <> '')
                                                                THEN BEGIN
                                                                  ValidateDelete(FIELDCAPTION("Credit Account Filter"));
                                                                  AnalysisViewReset;
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Credit Account Filter;
                                                              RUS=Фильтр по кредитовым счетам ГК] }
    { 15  ;   ;Date Compression    ;Option        ;InitValue=Day;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF ("Last Entry No." <> 0) AND ("Date Compression" <> xRec."Date Compression") THEN BEGIN
                                                                  ValidateDelete(FIELDCAPTION("Date Compression"));
                                                                  AnalysisViewReset;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Date Compression;
                                                              RUS=Сжатие по дате];
                                                   OptionCaptionML=[ENU=None,Day,Week,Month,Quarter,Year,Period;
                                                                    RUS=Нет,День,Неделя,Месяц,Квартал,Год,Период];
                                                   OptionString=None,Day,Week,Month,Quarter,Year,Period }
    { 20  ;   ;Debit Dimension 1 Code;Code20      ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF CheckIfDimUsed("Debit Dimension 1 Code",0,1) THEN
                                                                  ERROR(Text000);
                                                                ModifyDim(FIELDCAPTION("Debit Dimension 1 Code"),"Debit Dimension 1 Code",xRec."Debit Dimension 1 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Debit Dimension 1 Code;
                                                              RUS=Код измерения 1 для дебета] }
    { 21  ;   ;Debit Dimension 2 Code;Code20      ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF CheckIfDimUsed("Debit Dimension 2 Code",0,2) THEN
                                                                  ERROR(Text000);
                                                                ModifyDim(FIELDCAPTION("Debit Dimension 2 Code"),"Debit Dimension 2 Code",xRec."Debit Dimension 2 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Debit Dimension 2 Code;
                                                              RUS=Код измерения 2 для дебета] }
    { 22  ;   ;Debit Dimension 3 Code;Code20      ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF CheckIfDimUsed("Debit Dimension 3 Code",0,3) THEN
                                                                  ERROR(Text000);
                                                                ModifyDim(FIELDCAPTION("Debit Dimension 3 Code"),"Debit Dimension 3 Code",xRec."Debit Dimension 3 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Debit Dimension 3 Code;
                                                              RUS=Код измерения 3 для дебета] }
    { 30  ;   ;Credit Dimension 1 Code;Code20     ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF CheckIfDimUsed("Credit Dimension 1 Code",1,1) THEN
                                                                  ERROR(Text000);
                                                                ModifyDim(FIELDCAPTION("Credit Dimension 1 Code"),"Credit Dimension 1 Code",xRec."Credit Dimension 1 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Credit Dimension 1 Code;
                                                              RUS=Код измерения 1 для кредита] }
    { 31  ;   ;Credit Dimension 2 Code;Code20     ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF CheckIfDimUsed("Credit Dimension 2 Code",1,2) THEN
                                                                  ERROR(Text000);
                                                                ModifyDim(FIELDCAPTION("Credit Dimension 2 Code"),"Credit Dimension 2 Code",xRec."Credit Dimension 2 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Credit Dimension 2 Code;
                                                              RUS=Код измерения 2 для кредита] }
    { 32  ;   ;Credit Dimension 3 Code;Code20     ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF CheckIfDimUsed("Credit Dimension 3 Code",1,3) THEN
                                                                  ERROR(Text000);
                                                                ModifyDim(FIELDCAPTION("Credit Dimension 3 Code"),"Credit Dimension 3 Code",xRec."Credit Dimension 3 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Credit Dimension 3 Code;
                                                              RUS=Код измерения 3 для кредита] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot use the same dimension twice in the same dimension group.;RUS=Одно измерение нельзя использовать дважды в одной и той же группе измерений.';
      Text011@1011 : TextConst 'ENU=If you change the contents of the %1 field, the analysis view entries will be deleted.\You will have to update again.\\Do you want to enter a new value in the %1 field?;RUS=При изменении содержимого поля %1 операции аналитического отчета будут удалены.\Потребуется повторное обновление.\\Ввести новое значение в поле %1?';
      Text013@1013 : TextConst 'ENU=The update has been interrupted in response to the warning.;RUS=Обновление прервано из-за предупреждения.';
      Text014@1014 : TextConst 'ENU=If you change the contents of the %1 field, the analysis view entries will be changed as well.\\Do you want to enter a new value in the %1 field?;RUS=При изменении содержимого поля %1 операции аналитического отчета также будут изменены.\\Ввести новое значение в поле %1?';
      GLCorrAnalysisViewEntry@1016 : Record 14942;
      NewGLCorrAnalysisViewEntry@1017 : Record 14942;

    PROCEDURE ModifyDim@2(DimFieldName@1000 : Text[100];DimValue@1001 : Code[20];xDimValue@1002 : Code[20]);
    BEGIN
      IF ("Last Entry No." <> 0) AND (DimValue <> xDimValue) THEN BEGIN
        IF DimValue <> '' THEN BEGIN
          ValidateDelete(DimFieldName);
          AnalysisViewReset;
        END;
        IF DimValue = '' THEN BEGIN
          ValidateModify(DimFieldName);
          CASE DimFieldName OF
            FIELDCAPTION("Debit Dimension 1 Code"):
              GLCorrAnalysisViewEntry.SETFILTER("Debit Dimension 1 Value Code",'<>%1','');
            FIELDCAPTION("Debit Dimension 2 Code"):
              GLCorrAnalysisViewEntry.SETFILTER("Debit Dimension 2 Value Code",'<>%1','');
            FIELDCAPTION("Debit Dimension 3 Code"):
              GLCorrAnalysisViewEntry.SETFILTER("Debit Dimension 3 Value Code",'<>%1','');
            FIELDCAPTION("Credit Dimension 1 Code"):
              GLCorrAnalysisViewEntry.SETFILTER("Credit Dimension 1 Value Code",'<>%1','');
            FIELDCAPTION("Credit Dimension 2 Code"):
              GLCorrAnalysisViewEntry.SETFILTER("Credit Dimension 2 Value Code",'<>%1','');
            FIELDCAPTION("Credit Dimension 3 Code"):
              GLCorrAnalysisViewEntry.SETFILTER("Credit Dimension 3 Value Code",'<>%1','');
          END;
          GLCorrAnalysisViewEntry.SETRANGE("G/L Corr. Analysis View Code",Code);
          IF GLCorrAnalysisViewEntry.FINDSET THEN
            REPEAT
              GLCorrAnalysisViewEntry.DELETE;
              NewGLCorrAnalysisViewEntry := GLCorrAnalysisViewEntry;
              CASE DimFieldName OF
                FIELDCAPTION("Debit Dimension 1 Code"):
                  NewGLCorrAnalysisViewEntry."Debit Dimension 1 Value Code" := '';
                FIELDCAPTION("Debit Dimension 2 Code"):
                  NewGLCorrAnalysisViewEntry."Debit Dimension 2 Value Code" := '';
                FIELDCAPTION("Debit Dimension 3 Code"):
                  NewGLCorrAnalysisViewEntry."Debit Dimension 3 Value Code" := '';
                FIELDCAPTION("Credit Dimension 1 Code"):
                  NewGLCorrAnalysisViewEntry."Credit Dimension 1 Value Code" := '';
                FIELDCAPTION("Credit Dimension 2 Code"):
                  NewGLCorrAnalysisViewEntry."Credit Dimension 2 Value Code" := '';
                FIELDCAPTION("Credit Dimension 3 Code"):
                  NewGLCorrAnalysisViewEntry."Credit Dimension 3 Value Code" := '';
              END;
              InsertAnalysisViewEntry;
            UNTIL GLCorrAnalysisViewEntry.NEXT = 0;
        END;
      END;
    END;

    PROCEDURE InsertAnalysisViewEntry@1();
    BEGIN
      IF NOT NewGLCorrAnalysisViewEntry.INSERT THEN BEGIN
        NewGLCorrAnalysisViewEntry.FIND;
        NewGLCorrAnalysisViewEntry.Amount := NewGLCorrAnalysisViewEntry.Amount + GLCorrAnalysisViewEntry.Amount;
        NewGLCorrAnalysisViewEntry."Amount (ACY)" :=
          NewGLCorrAnalysisViewEntry."Amount (ACY)" + GLCorrAnalysisViewEntry."Amount (ACY)";
        NewGLCorrAnalysisViewEntry.MODIFY;
      END;
    END;

    PROCEDURE AnalysisViewReset@5();
    VAR
      GLCorrAnalysisViewEntry@1210000 : Record 14942;
    BEGIN
      GLCorrAnalysisViewEntry.SETRANGE("G/L Corr. Analysis View Code",Code);
      GLCorrAnalysisViewEntry.DELETEALL;
      "Last Entry No." := 0;
      "Last Date Updated" := 0D;
    END;

    PROCEDURE ValidateDelete@10(FieldName@1000 : Text[250]);
    VAR
      Question@1001 : Text[250];
    BEGIN
      Question := STRSUBSTNO(Text011,FieldName);
      IF NOT DIALOG.CONFIRM(Question,TRUE) THEN
        ERROR(Text013);
    END;

    PROCEDURE ValidateModify@11(FieldName@1000 : Text[250]);
    VAR
      Question@1001 : Text[250];
    BEGIN
      Question := STRSUBSTNO(Text014,FieldName);
      IF NOT DIALOG.CONFIRM(Question,TRUE) THEN
        ERROR(Text013);
    END;

    PROCEDURE CheckIfDimUsed@73(DimChecked@1000 : Code[20];GroupChecked@1210000 : 'Debit,Credit';DimTypeChecked@1210001 : ' ,Analysis1,Analysis2,Analysis3,Analysis4') : Boolean;
    VAR
      GLCorrAnalysisView@1006 : Record 14940;
    BEGIN
      IF DimChecked = '' THEN
        EXIT;

      GLCorrAnalysisView.SETRANGE(Code,Code);
      IF GLCorrAnalysisView.FINDSET THEN BEGIN
        REPEAT
          CASE GroupChecked OF
            GroupChecked::Debit:
              BEGIN
                IF (DimTypeChecked <> DimTypeChecked::Analysis1) AND
                   (DimChecked = GLCorrAnalysisView."Debit Dimension 1 Code")
                THEN
                  EXIT(TRUE);
                IF (DimTypeChecked <> DimTypeChecked::Analysis2) AND
                   (DimChecked = GLCorrAnalysisView."Debit Dimension 2 Code")
                THEN
                  EXIT(TRUE);
                IF (DimTypeChecked <> DimTypeChecked::Analysis3) AND
                   (DimChecked = GLCorrAnalysisView."Debit Dimension 3 Code")
                THEN
                  EXIT(TRUE);
              END;
            GroupChecked::Credit:
              BEGIN
                IF (DimTypeChecked <> DimTypeChecked::Analysis1) AND
                   (DimChecked = GLCorrAnalysisView."Credit Dimension 1 Code")
                THEN
                  EXIT(TRUE);
                IF (DimTypeChecked <> DimTypeChecked::Analysis2) AND
                   (DimChecked = GLCorrAnalysisView."Credit Dimension 2 Code")
                THEN
                  EXIT(TRUE);
                IF (DimTypeChecked <> DimTypeChecked::Analysis3) AND
                   (DimChecked = GLCorrAnalysisView."Credit Dimension 3 Code")
                THEN
                  EXIT(TRUE);
              END;
          END;
        UNTIL GLCorrAnalysisView.NEXT = 0;
      END;

      EXIT(FALSE);
    END;

    BEGIN
    END.
  }
}

