OBJECT Report 17413 Create Payroll Year
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Create Payroll Year;
               RUS=Создать зарплатный год];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  PayrollPeriod."Starting Date" := PayrollYearStartDate;
                  PayrollPeriod.TESTFIELD("Starting Date");

                  IF PayrollPeriod.FIND('-') THEN BEGIN
                    FirstPeriodStartDate := PayrollPeriod."Starting Date";
                    IF PayrollYearStartDate < FirstPeriodStartDate THEN
                      IF NOT
                         CONFIRM(
                           Text000 +
                           Text001)
                      THEN
                        EXIT;
                    IF PayrollPeriod.FIND('+') THEN
                      LastPeriodStartDate := PayrollPeriod."Starting Date";
                  END ELSE
                    IF NOT
                       CONFIRM(
                         Text002 +
                         Text003)
                    THEN
                      EXIT;

                  FiscalYearStartDate2 := PayrollYearStartDate;

                  FOR i := 1 TO NoOfPeriods + 1 DO BEGIN
                    IF (PayrollYearStartDate <= FirstPeriodStartDate) AND (i = NoOfPeriods + 1) THEN
                      EXIT;

                    IF FirstPeriodStartDate <> 0D THEN
                      IF (PayrollYearStartDate >= FirstPeriodStartDate) AND (PayrollYearStartDate < LastPeriodStartDate) THEN
                        ERROR(Text004);
                    PayrollPeriod.INIT;
                    PayrollPeriod.Code := FORMAT(PayrollYearStartDate,0,'<Year><Month,2>');
                    PayrollPeriod."Starting Date" := PayrollYearStartDate;
                    PayrollPeriod."Ending Date" := CALCDATE('<CM>',PayrollYearStartDate);
                    PayrollPeriod.Name := FORMAT(PayrollYearStartDate,0,'<Month Text> <Year4>');
                    PayrollPeriod.VALIDATE("Starting Date");
                    IF DATE2DMY(PayrollYearStartDate,2) = 1 THEN
                      PayrollPeriod."New Payroll Year" := TRUE;

                    IF PayrollPeriod."Starting Date" < FirstPeriodStartDate THEN
                      PayrollPeriod.Closed := TRUE;

                    IF NOT PayrollPeriod.FIND('=') THEN
                      PayrollPeriod.INSERT(TRUE);
                    PayrollYearStartDate := CALCDATE(PeriodLength,PayrollYearStartDate);
                  END;
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   NoOfPeriods := 12;
                   EVALUATE(PeriodLength,'<1M>');
                   IF PayrollPeriod.FIND('+') THEN
                     PayrollYearStartDate := PayrollPeriod."Starting Date";
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             RUS=Параметры] }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Starting Date;
                             RUS=Дата начала];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=PayrollYearStartDate }

      { 2   ;2   ;Field     ;
                  CaptionML=[ENU=No. of Periods;
                             RUS=Число периодов];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=NoOfPeriods;
                  Editable=FALSE }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Period Length;
                             RUS=Длина периода];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=PeriodLength;
                  Editable=FALSE }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The new payroll year begins before an existing payroll year, so the new year will be closed automatically.\\;RUS="Новый платежный год начинается до существующего; таким образом новый год будет автоматически закрыт.\\"';
      Text001@1001 : TextConst 'ENU=Do you want to create and close the payroll year?;RUS=Создать и закрыть зарплатный год?';
      Text002@1002 : TextConst 'ENU=Once you create the new payroll year you cannot change its starting date.\\;RUS=После создания нового платежного года будет невозможно изменить его дату начала.\\';
      Text003@1003 : TextConst 'ENU=Do you want to create the payroll year?;RUS=Создать зарплатный год?';
      Text004@1004 : TextConst 'ENU=It is only possible to create new payroll years before or after the existing ones.;RUS=Разрешено создавать новые зарплатные года только до или после существующих.';
      PayrollPeriod@1005 : Record 17426;
      NoOfPeriods@1006 : Integer;
      PeriodLength@1007 : DateFormula;
      PayrollYearStartDate@1008 : Date;
      FiscalYearStartDate2@1015 : Date;
      FirstPeriodStartDate@1009 : Date;
      LastPeriodStartDate@1010 : Date;
      i@1012 : Integer;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

