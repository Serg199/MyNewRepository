OBJECT Table 17362 Labor Contract Terms
{
  OBJECT-PROPERTIES
  {
    Date=18.12.13;
    Time=12:00:00;
    Version List=NAVRU7.10;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CheckLaborContractStatus;
             END;

    OnDelete=BEGIN
               CheckLaborContractStatus;
             END;

    CaptionML=[ENU=Labor Contract Terms;
               RUS=Условия трудового договора];
  }
  FIELDS
  {
    { 1   ;   ;Labor Contract No.  ;Code20        ;TableRelation="Labor Contract";
                                                   CaptionML=[ENU=Labor Contract No.;
                                                              RUS=Номер трудового договора] }
    { 2   ;   ;Element Code        ;Code20        ;TableRelation="Payroll Element";
                                                   OnValidate=BEGIN
                                                                CheckLaborContractStatus;
                                                                PayrollElement.GET("Element Code");
                                                                Description := COPYSTR(PayrollElement.Description,1,MAXSTRLEN(Description));
                                                                "Posting Group" := PayrollElement."Payroll Posting Group";
                                                                "Salary Indexation" := PayrollElement."Use Indexation";

                                                                TimeActivity.SETRANGE("Element Code","Element Code");
                                                                IF TimeActivity.FINDFIRST THEN
                                                                  "Time Activity Code" := TimeActivity.Code;
                                                              END;

                                                   CaptionML=[ENU=Element Code;
                                                              RUS=Код элемента] }
    { 3   ;   ;Description         ;Text50        ;OnValidate=BEGIN
                                                                CheckLaborContractStatus;
                                                              END;

                                                   CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 4   ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                CheckLaborContractStatus;
                                                              END;

                                                   CaptionML=[ENU=Starting Date;
                                                              RUS=Дата начала] }
    { 5   ;   ;Ending Date         ;Date          ;OnValidate=BEGIN
                                                                CheckLaborContractStatus;
                                                              END;

                                                   CaptionML=[ENU=Ending Date;
                                                              RUS=Дата окончания] }
    { 6   ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                CheckLaborContractStatus;
                                                              END;

                                                   CaptionML=[ENU=Amount;
                                                              RUS=Сумма] }
    { 7   ;   ;Posting Group       ;Code20        ;TableRelation="Payroll Posting Group";
                                                   OnValidate=BEGIN
                                                                CheckLaborContractStatus;
                                                              END;

                                                   CaptionML=[ENU=Posting Group;
                                                              RUS=Учетная группа] }
    { 8   ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                CheckLaborContractStatus;
                                                              END;

                                                   CaptionML=[ENU=Currency Code;
                                                              RUS=Код валюты] }
    { 9   ;   ;Percent             ;Decimal       ;OnValidate=BEGIN
                                                                CheckLaborContractStatus;
                                                                IF Percent <> 0 THEN BEGIN
                                                                  LaborContractLine.RESET;
                                                                  LaborContractLine.SETRANGE("Contract No.","Labor Contract No.");
                                                                  LaborContractLine.SETRANGE("Operation Type","Operation Type");
                                                                  LaborContractLine.SETRANGE("Supplement No.","Supplement No.");
                                                                  LaborContractLine.FINDFIRST;

                                                                  Position.GET(LaborContractLine."Position No.");
                                                                  Position.TESTFIELD("Base Salary Element Code");
                                                                  Position.TESTFIELD("Base Salary Amount");
                                                                  Amount := Position."Base Salary" * Percent / 100;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Percent;
                                                              RUS=Процент] }
    { 10  ;   ;Time Activity Code  ;Code10        ;TableRelation="Time Activity" WHERE (Time Activity Type=CONST(Vacation),
                                                                                        Use Accruals=FILTER(<>No));
                                                   OnValidate=BEGIN
                                                                CheckLaborContractStatus;
                                                                IF TimeActivity.GET("Time Activity Code") THEN
                                                                  IF "Element Code" = '' THEN
                                                                    "Element Code" := TimeActivity."Element Code";
                                                              END;

                                                   CaptionML=[ENU=Time Activity Code;
                                                              RUS=Код временной активности] }
    { 11  ;   ;Line Type           ;Option        ;OnValidate=BEGIN
                                                                CheckLaborContractStatus;
                                                              END;

                                                   CaptionML=[ENU=Line Type;
                                                              RUS=Тип строки];
                                                   OptionCaptionML=[ENU=Payroll Element,Vacation Accrual;
                                                                    RUS=Зарплатный элемент,Начисление отпуска];
                                                   OptionString=Payroll Element,Vacation Accrual }
    { 12  ;   ;Supplement No.      ;Code10        ;CaptionML=[ENU=Supplement No.;
                                                              RUS=Номер приложения] }
    { 13  ;   ;Operation Type      ;Option        ;CaptionML=[ENU=Operation Type;
                                                              RUS=Тип операции];
                                                   OptionCaptionML=[ENU=Hire,Transfer,Combination,Dismissal;
                                                                    RUS=Найм,Перевод,Совмещение,Увольнение];
                                                   OptionString=Hire,Transfer,Combination,Dismissal }
    { 14  ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                CheckLaborContractStatus;
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              RUS=Кол-во] }
    { 15  ;   ;Salary Indexation   ;Boolean       ;CaptionML=[ENU=Salary Indexation;
                                                              RUS=Индексация зарплаты] }
    { 16  ;   ;Depends on Salary Element;Code20   ;TableRelation="Payroll Element" WHERE (Type=CONST(Wage));
                                                   CaptionML=[ENU=Depends on Salary Element;
                                                              RUS=Зависит от зарплатного элемента] }
  }
  KEYS
  {
    {    ;Labor Contract No.,Operation Type,Supplement No.,Line Type,Element Code;
                                                   SumIndexFields=Amount;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PayrollElement@1210000 : Record 17400;
      TimeActivity@1210001 : Record 5206;
      LaborContract@1210004 : Record 17360;
      LaborContractLine@1210002 : Record 17361;
      Position@1210003 : Record 17370;

    PROCEDURE CheckLaborContractStatus@1210000();
    VAR
      LaborContractLine@1210000 : Record 17361;
    BEGIN
      LaborContract.GET("Labor Contract No.");
      IF LaborContract.Status = LaborContract.Status::Closed THEN
        LaborContract.FIELDERROR(Status);

      IF LaborContractLine.GET("Labor Contract No.","Operation Type","Supplement No.") THEN
        IF LaborContractLine.Status = LaborContractLine.Status::Approved THEN
          IF LaborContractLine."Operation Type" <> LaborContractLine."Operation Type"::Combination THEN
            LaborContractLine.FIELDERROR(Status);
    END;

    PROCEDURE CalcVacationCompensation@1210001();
    VAR
      VacationCalculation@1210000 : Codeunit 17375;
    BEGIN
      TESTFIELD("Operation Type","Operation Type"::Dismissal);

      LaborContract.GET("Labor Contract No.");
      Quantity :=
        VacationCalculation.CalculateAllUnusedVacationDays(
          LaborContract."Employee No.",LaborContract."Ending Date");
      MODIFY;
    END;

    BEGIN
    END.
  }
}

