OBJECT Page 126 Cust. Ledg. Entries Preview
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Cust. Ledg. Entries Preview;
               RUS=Предварительный просмотр операций книги клиентов];
    SourceTable=Table21;
    DataCaptionFields=Customer No.;
    PageType=List;
    SourceTableTemporary=Yes;
    OnAfterGetRecord=BEGIN
                       StyleTxt := SetStyle;
                       CalcAmounts;
                     END;

    ActionList=ACTIONS
    {
      { 5       ;    ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 9       ;1   ;ActionGroup;
                      CaptionML=[ENU=Ent&ry;
                                 RUS=Опе&рация];
                      Image=Entry }
      { 7       ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Dimensions;
                                 RUS=Измерения];
                      ToolTipML=[ENU=View or edits dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 RUS=Просмотр или изменение измерений, например области, проекта или отдела, которые можно назначать документам покупки и продажи для распределения себестоимости и анализа истории транзакций.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Dimensions;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 GenJnlPostPreview@1000 : Codeunit 19;
                               BEGIN
                                 GenJnlPostPreview.ShowDimensions(DATABASE::"Cust. Ledger Entry","Entry No.","Dimension Set ID");
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the customer entry's posting date.;
                           RUS=Определяет дату учета операции клиента.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Date";
                Editable=FALSE }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the document type that the customer entry belongs to.;
                           RUS=Определяет тип документа, к которому относится операция клиента.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Type";
                Editable=FALSE;
                StyleExpr=StyleTxt }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the entry's document number.;
                           RUS=Определяет номер документа операции.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document No.";
                Editable=FALSE;
                StyleExpr=StyleTxt }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the customer account number that the entry is linked to.;
                           RUS=Определяет номер счета клиента, с которым связана эта операция.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Customer No.";
                Editable=FALSE }

    { 17  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the message exported to the payment file when you use the Export Payments to File function in the Payment Journal window.;
                           RUS=Определяет сообщение, экспортированное в файл при использовании функции "Экспортировать платежи в файл" в окне "Журнал платежей".];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Message to Recipient" }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a description of the customer entry.;
                           RUS=Определяет описание операции клиента.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description }

    { 39  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the dimension value code linked to the entry.;
                           RUS=Определяет код значения измерения, связанный с этой операцией.];
                SourceExpr="Global Dimension 1 Code";
                Visible=FALSE;
                Editable=FALSE }

    { 41  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the dimension value code linked to the entry.;
                           RUS=Определяет код значения измерения, связанный с этой операцией.];
                SourceExpr="Global Dimension 2 Code";
                Visible=FALSE;
                Editable=FALSE }

    { 67  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the intercompany partner that the transaction was with if the entry was posted from an intercompany transaction.;
                           RUS=Определяет код межфирменного партнера, с которым имела место транзакция, если операция была учтена в результате межфирменной транзакции.];
                SourceExpr="IC Partner Code";
                Visible=FALSE;
                Editable=FALSE }

    { 43  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the salesperson whom the entry is linked to.;
                           RUS=Определяет код менеджера по продажам, с которым связана эта операция.];
                SourceExpr="Salesperson Code";
                Visible=FALSE;
                Editable=FALSE }

    { 45  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the currency code for the amount on the line.;
                           RUS=Определяет код валюты для суммы в строке.];
                ApplicationArea=#Suite;
                SourceExpr="Currency Code" }

    { 55  ;2   ;Field     ;
                CaptionML=[ENU=Original Amount;
                           RUS=Начальная сумма];
                ToolTipML=[ENU=Specifies the amount on the customer ledger entry before you post.;
                           RUS=Определяет сумму операции книги клиентов перед учетом.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=OriginalAmountFCY;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DrilldownAmounts(2);
                            END;
                             }

    { 53  ;2   ;Field     ;
                CaptionML=[ENU=Original Amount LCY;
                           RUS=Начальная сумма, руб];
                SourceExpr=OriginalAmountLCY;
                Visible=FALSE;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DrilldownAmounts(2);
                            END;
                             }

    { 12  ;2   ;Field     ;
                DrillDown=Yes;
                CaptionML=[ENU=Amount;
                           RUS=Сумма];
                ToolTipML=[ENU=Specifies the net amount of all the lines in the customer entry.;
                           RUS=Определяет чистую сумму по всем строкам в операции клиента.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AmountFCY;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DrilldownAmounts(0);
                            END;
                             }

    { 47  ;2   ;Field     ;
                DrillDown=Yes;
                CaptionML=[ENU=Amount LCY;
                           RUS=Сумма, руб];
                SourceExpr=AmountLCY;
                Visible=FALSE;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DrilldownAmounts(0);
                            END;
                             }

    { 14  ;2   ;Field     ;
                CaptionML=[ENU=Remaining Amount;
                           RUS=Сумма остатка];
                ToolTipML=[ENU=Specifies the remaining amount on the customer ledger entry before you post.;
                           RUS=Определяет остаток суммы операции книги клиентов перед учетом.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=RemainingAmountFCY;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DrilldownAmounts(1);
                            END;
                             }

    { 49  ;2   ;Field     ;
                CaptionML=[ENU=Remaining Amount LCY;
                           RUS=Сумма остатка, руб];
                SourceExpr=RemainingAmountLCY;
                Visible=FALSE;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DrilldownAmounts(1);
                            END;
                             }

    { 26  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of balancing account used on the entry.;
                           RUS=Определяет тип балансирующего счета, используемого в операции.];
                SourceExpr="Bal. Account Type";
                Visible=FALSE;
                Editable=FALSE }

    { 73  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the balancing account number used on the entry.;
                           RUS=Определяет номер балансирующего счета, используемого в операции.];
                SourceExpr="Bal. Account No.";
                Visible=FALSE;
                Editable=FALSE }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the due date on the entry.;
                           RUS=Определяет срок выполнения операции.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Due Date";
                StyleExpr=StyleTxt }

    { 18  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date on which the amount in the entry must be paid for a payment discount to be granted.;
                           RUS=Определяет дату, когда сумма по операции должна быть оплачена, чтобы можно было получить скидку по оплате.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pmt. Discount Date" }

    { 59  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the last date the amount in the entry must be paid in order for a payment discount tolerance to be granted.;
                           RUS=Определяет последнюю дату, когда сумма по операции должна быть оплачена, чтобы можно было получить отклонение скидки по оплате.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pmt. Disc. Tolerance Date" }

    { 20  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the discount that the customer can obtain if the entry is applied to before the payment discount date.;
                           RUS=Определяет скидку, которую может получить клиент, если операция будет применена до даты скидки по оплате.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Original Pmt. Disc. Possible" }

    { 57  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the remaining payment discount that is available if the entry is totally applied to within the payment period.;
                           RUS=Определяет оставшуюся скидку по оплате, которая предоставляется, если операция полностью применена в течении установленного периода оплаты.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Remaining Pmt. Disc. Possible" }

    { 61  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the maximum tolerated amount the entry can differ from the amount on the invoice or credit memo.;
                           RUS=Определяет максимальную сумму отклонения, на которую операция может отличаться от суммы в счете или в кредит-ноте.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Max. Payment Tolerance" }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the payment method that was used to make the payment that resulted in the entry.;
                           RUS=Определяет способ оплаты, который использовался для оплаты в результате операции.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Method Code" }

    { 11  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the amount on the entry has been fully paid or there is still a remaining amount that must be applied to.;
                           RUS=Определяет, была ли сумма операции полностью оплачена или все еще есть оставшаяся сумма, которую следует применить.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Open }

    { 13  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies when an entry for an unpaid invoice has been posted and you create a finance charge memo or reminder.;
                           RUS=Определяет, когда операция для неоплаченного счета была учтена, после чего создается процент-нота или напоминание.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="On Hold" }

    { 15  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that the entry was created as a result of exporting a payment journal line.;
                           RUS=Определяет, что операция была создана в результате экспорта строки журнала платежей.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Exported to Payment File" }

    { 85  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the source code that is linked to the entry.;
                           RUS=Определяет код источника, связанного с операцией.];
                SourceExpr="Source Code";
                Visible=FALSE;
                Editable=FALSE }

    { 87  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the reason code on the entry.;
                           RUS=Определяет код причины операции.];
                SourceExpr="Reason Code";
                Visible=FALSE;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      TempDetailedCustLedgEntry@1000 : TEMPORARY Record 379;
      StyleTxt@1001 : Text;
      AmountFCY@1002 : Decimal;
      AmountLCY@1005 : Decimal;
      RemainingAmountFCY@1003 : Decimal;
      RemainingAmountLCY@1004 : Decimal;
      OriginalAmountLCY@1006 : Decimal;
      OriginalAmountFCY@1007 : Decimal;

    PROCEDURE Set@1(VAR TempCustLedgerEntry@1000 : TEMPORARY Record 21;VAR TempDetailedCustLedgEntry2@1001 : TEMPORARY Record 379);
    BEGIN
      IF TempCustLedgerEntry.FINDSET THEN
        REPEAT
          Rec := TempCustLedgerEntry;
          INSERT;
        UNTIL TempCustLedgerEntry.NEXT = 0;

      IF TempDetailedCustLedgEntry2.FIND('-') THEN
        REPEAT
          TempDetailedCustLedgEntry := TempDetailedCustLedgEntry2;
          TempDetailedCustLedgEntry.INSERT;
        UNTIL TempDetailedCustLedgEntry2.NEXT = 0;
    END;

    PROCEDURE CalcAmounts@2();
    BEGIN
      AmountFCY := 0;
      AmountLCY := 0;
      RemainingAmountLCY := 0;
      RemainingAmountFCY := 0;
      OriginalAmountLCY := 0;
      OriginalAmountFCY := 0;

      TempDetailedCustLedgEntry.SETRANGE("Cust. Ledger Entry No.","Entry No.");
      IF TempDetailedCustLedgEntry.FINDSET THEN
        REPEAT
          IF TempDetailedCustLedgEntry."Entry Type" = TempDetailedCustLedgEntry."Entry Type"::"Initial Entry" THEN BEGIN
            OriginalAmountFCY += TempDetailedCustLedgEntry.Amount;
            OriginalAmountLCY += TempDetailedCustLedgEntry."Amount (LCY)";
          END;
          IF NOT (TempDetailedCustLedgEntry."Entry Type" IN [TempDetailedCustLedgEntry."Entry Type"::Application,
                                                             TempDetailedCustLedgEntry."Entry Type"::"Appln. Rounding"])
          THEN BEGIN
            AmountFCY += TempDetailedCustLedgEntry.Amount;
            AmountLCY += TempDetailedCustLedgEntry."Amount (LCY)";
          END;
          RemainingAmountFCY += TempDetailedCustLedgEntry.Amount;
          RemainingAmountLCY += TempDetailedCustLedgEntry."Amount (LCY)";
        UNTIL TempDetailedCustLedgEntry.NEXT = 0;
    END;

    LOCAL PROCEDURE DrilldownAmounts@3(AmountType@1000 : 'Amount,Remaining Amount,Original Amount');
    VAR
      DetCustLedgEntrPreview@1001 : Page 127;
    BEGIN
      CASE AmountType OF
        AmountType::Amount:
          TempDetailedCustLedgEntry.SETFILTER("Entry Type",'<>%1&<>%2',
            TempDetailedCustLedgEntry."Entry Type"::Application,TempDetailedCustLedgEntry."Entry Type"::"Appln. Rounding");
        AmountType::"Original Amount":
          TempDetailedCustLedgEntry.SETRANGE("Entry Type",TempDetailedCustLedgEntry."Entry Type"::"Initial Entry");
        AmountType::"Remaining Amount":
          TempDetailedCustLedgEntry.SETRANGE("Entry Type");
      END;
      DetCustLedgEntrPreview.Set(TempDetailedCustLedgEntry);
      DetCustLedgEntrPreview.RUNMODAL;
      CLEAR(DetCustLedgEntrPreview);
    END;

    BEGIN
    END.
  }
}

