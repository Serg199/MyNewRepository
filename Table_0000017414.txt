OBJECT Table 17414 Payroll Document
{
  OBJECT-PROPERTIES
  {
    Date=18.05.17;
    Time=18:20:18;
    Modified=Yes;
    Version List=NAVRU7.10,NOS-26;
  }
  PROPERTIES
  {
    DataCaptionFields=No.,Employee No.;
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 HRSetup.GET;
                 TestNoSeries;
                 NoSeriesMgt.InitSeries(
                   HRSetup."Payroll Document Nos.",xRec."No. Series","Posting Date",
                   "No.","No. Series");
               END;

               IF "Posting Date" = 0D THEN
                 "Posting Date" := WORKDATE;
             END;

    OnDelete=BEGIN
               IF ("Period Code" <> '') AND ("Employee No." <> '') THEN
                 IF "Posting Type" = "Posting Type"::Calculation THEN BEGIN
                   PayrollStatus.GET("Period Code","Employee No.");
                   IF PayrollStatus."Payroll Status" = PayrollStatus."Payroll Status"::Calculated THEN BEGIN
                     PayrollStatus."Payroll Status" := PayrollStatus."Payroll Status"::" ";
                     PayrollStatus.MODIFY;
                   END;
                 END;

               PayrollDocLine.RESET;
               PayrollDocLine.SETRANGE("Document No.","No.");
               IF NOT PayrollDocLine.ISEMPTY THEN
                 PayrollDocLine.DELETEALL(TRUE);
             END;

    CaptionML=[ENU=Payroll Document;
               RUS=Зарплатный документ];
    LookupPageID=Page17416;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              RUS=Номер] }
    { 2   ;   ;Employee No.        ;Code20        ;TableRelation=Employee;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                                PayrollDocLine.SETRANGE("Document No.","No.");
                                                                IF NOT PayrollDocLine.ISEMPTY THEN
                                                                  ERROR(Text000,FIELDCAPTION("Employee No."));

                                                                CreateDim(DATABASE::Employee,"Employee No.");
                                                              END;

                                                   CaptionML=[ENU=Employee No.;
                                                              RUS=Код сотрудника] }
    { 3   ;   ;Posting Date        ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                              END;

                                                   CaptionML=[ENU=Posting Date;
                                                              RUS=Дата учета] }
    { 4   ;   ;Posting Description ;Text50        ;OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                              END;

                                                   CaptionML=[ENU=Posting Description;
                                                              RUS=Описание учета] }
    { 5   ;   ;Posting Type        ;Option        ;OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                              END;

                                                   CaptionML=[ENU=Posting Type;
                                                              RUS=Тип учета];
                                                   OptionCaptionML=[ENU=Calculation,Data Entry;
                                                                    RUS=Расчет,Ввод данных];
                                                   OptionString=Calculation,Data Entry }
    { 7   ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              RUS=Статус];
                                                   OptionCaptionML=[ENU=Open,Released;
                                                                    RUS=Открыт,Выпущен];
                                                   OptionString=Open,Released;
                                                   Editable=No }
    { 8   ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              RUS=Код ярлыка измерения 1];
                                                   CaptionClass='1,2,1' }
    { 9   ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              RUS=Код ярлыка измерения 2];
                                                   CaptionClass='1,2,2' }
    { 10  ;   ;Correction          ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                                IF NOT Correction THEN
                                                                  TESTFIELD("Reversing Document No.",'');
                                                              END;

                                                   CaptionML=[ENU=Correction;
                                                              RUS=Корректировка] }
    { 11  ;   ;Reversing Document No.;Code20      ;TableRelation="Posted Payroll Document" WHERE (Employee No.=FIELD(Employee No.),
                                                                                                  Reversed=CONST(No));
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                                IF "Reversing Document No." <> xRec."Reversing Document No." THEN
                                                                  IF "Reversing Document No." <> '' THEN
                                                                    TESTFIELD(Correction,TRUE);
                                                              END;

                                                   CaptionML=[ENU=Reversing Document No.;
                                                              RUS=Номер отмененного документа] }
    { 12  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("HR Order Comment Line" WHERE (Table Name=CONST(Payroll Document),
                                                                                                    No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              RUS=Комментарий];
                                                   Editable=No }
    { 14  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              RUS=Серия номеров];
                                                   Editable=No }
    { 15  ;   ;Posting No. Series  ;Code10        ;TableRelation="No. Series";
                                                   OnValidate=BEGIN
                                                                IF "Posting No. Series" <> '' THEN BEGIN
                                                                  HRSetup.GET;
                                                                  TestNoSeries;
                                                                  NoSeriesMgt.TestSeries(HRSetup."Posted Payroll Document Nos.","Posting No. Series");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              WITH PayrollDocument DO BEGIN
                                                                PayrollDocument := Rec;
                                                                HRSetup.GET;
                                                                TestNoSeries;
                                                                IF NoSeriesMgt.LookupSeries(HRSetup."Posted Payroll Document Nos.","Posting No. Series") THEN
                                                                  VALIDATE("Posting No. Series");
                                                                Rec := PayrollDocument;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Posting No. Series;
                                                              RUS=Учетная серия номеров] }
    { 18  ;   ;Calc Group Code     ;Code10        ;TableRelation="Payroll Calc Group";
                                                   CaptionML=[ENU=Calc Group Code;
                                                              RUS=Код группы расчета];
                                                   Editable=No }
    { 19  ;   ;Period Code         ;Code10        ;TableRelation="Payroll Period";
                                                   CaptionML=[ENU=Period Code;
                                                              RUS=Код периода] }
    { 20  ;   ;Wage Amount         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Payroll Document Line"."Payroll Amount" WHERE (Document No.=FIELD(No.),
                                                                                                                   Element Type=CONST(Wage)));
                                                   CaptionML=[ENU=Wage Amount;
                                                              RUS=Сумма начисления] }
    { 21  ;   ;Bonus Amount        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Payroll Document Line"."Payroll Amount" WHERE (Document No.=FIELD(No.),
                                                                                                                   Element Type=CONST(Bonus)));
                                                   CaptionML=[ENU=Bonus Amount;
                                                              RUS=Сумма премии] }
    { 22  ;   ;Other Gain Amount   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Payroll Document Line"."Payroll Amount" WHERE (Document No.=FIELD(No.),
                                                                                                                   Element Type=CONST(Other)));
                                                   CaptionML=[ENU=Other Gain Amount;
                                                              RUS=Сумма прочих доходов] }
    { 23  ;   ;Deduction Amount    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Payroll Document Line"."Payroll Amount" WHERE (Document No.=FIELD(No.),
                                                                                                                   Element Type=CONST(Deduction)));
                                                   CaptionML=[ENU=Deduction Amount;
                                                              RUS=Сумма вычета] }
    { 24  ;   ;Income Tax Amount   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Payroll Document Line"."Payroll Amount" WHERE (Document No.=FIELD(No.),
                                                                                                                   Element Type=CONST(Income Tax)));
                                                   CaptionML=[ENU=Income Tax Amount;
                                                              RUS=Сумма НДФЛ] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDocDim;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              RUS=Код набора измерений];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Employee No.,Posting Date                }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      HRSetup@1210001 : Record 5218;
      PayrollDocument@1210002 : Record 17414;
      PayrollDocLine@1210003 : Record 17415;
      PayrollStatus@1210008 : Record 17457;
      NoSeriesMgt@1210000 : Codeunit 396;
      DimMgt@1210004 : Codeunit 408;
      Text000@1210005 : TextConst 'ENU=You cannot modify %1 if there are document lines.;RUS=Нельзя изменять %1, если есть строки документа.';
      Text064@1210006 : TextConst 'ENU=You may have changed a dimension.\\Do you want to update the lines?;RUS=Вы, возможно, изменили измерение.\\Обновить строки?';

    PROCEDURE AssistEdit@9(OldPayrollDocument@1000 : Record 17414) : Boolean;
    BEGIN
      PayrollDocument.COPY(Rec);
      HRSetup.GET;
      TestNoSeries;
      IF NoSeriesMgt.SelectSeries(HRSetup."Payroll Document Nos.",OldPayrollDocument."No. Series","No. Series") THEN BEGIN
        NoSeriesMgt.SetSeries("No.");
        Rec := PayrollDocument;
        EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE TestNoSeries@1210000();
    BEGIN
      HRSetup.TESTFIELD("Payroll Document Nos.");
      HRSetup.TESTFIELD("Posted Payroll Document Nos.");
    END;

    PROCEDURE DocLinesExist@3() : Boolean;
    BEGIN
      PayrollDocLine.RESET;
      PayrollDocLine.SETRANGE("Document No.","No.");
      EXIT(NOT PayrollDocLine.ISEMPTY);
    END;

    PROCEDURE CreateDim@1210002(Type1@1000 : Integer;No1@1001 : Code[20]);
    VAR
      SourceCodeSetup@1010 : Record 242;
      TableID@1011 : ARRAY [10] OF Integer;
      No@1012 : ARRAY [10] OF Code[20];
      OldDimSetID@1013 : Integer;
    BEGIN
      SourceCodeSetup.GET;
      TableID[1] := Type1;
      No[1] := No1;
      "Shortcut Dimension 1 Code" := '';
      "Shortcut Dimension 2 Code" := '';
      OldDimSetID := "Dimension Set ID";
      "Dimension Set ID" :=
        DimMgt.GetDefaultDimID(TableID,No,SourceCodeSetup.Sales,
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code",0,0);

      IF (OldDimSetID <> "Dimension Set ID") AND DocLinesExist THEN BEGIN
        MODIFY;
        UpdateAllLineDim("Dimension Set ID",OldDimSetID);
      END;
    END;

    PROCEDURE ValidateShortcutDimCode@1210001(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    VAR
      OldDimSetID@1005 : Integer;
    BEGIN
      OldDimSetID := "Dimension Set ID";
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
      IF "No." <> '' THEN
        MODIFY;

      IF OldDimSetID <> "Dimension Set ID" THEN BEGIN
        MODIFY;
        IF DocLinesExist THEN
          UpdateAllLineDim("Dimension Set ID",OldDimSetID);
      END;
    END;

    PROCEDURE ShowDocDim@32();
    VAR
      OldDimSetID@1000 : Integer;
    BEGIN
      OldDimSetID := "Dimension Set ID";
      DimMgt.SetObjectFrom(Rec); // NC NOS-26 SPA
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet2(
          "Dimension Set ID",STRSUBSTNO('%1 %2',0,"No."),
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
      IF OldDimSetID <> "Dimension Set ID" THEN BEGIN
        MODIFY;
        IF DocLinesExist THEN
          UpdateAllLineDim("Dimension Set ID",OldDimSetID);
      END;
    END;

    LOCAL PROCEDURE UpdateAllLineDim@34(NewParentDimSetID@1000 : Integer;OldParentDimSetID@1001 : Integer);
    VAR
      NewDimSetID@1002 : Integer;
    BEGIN
      // Update all lines with changed dimensions.

      IF NewParentDimSetID = OldParentDimSetID THEN
        EXIT;
      IF NOT CONFIRM(Text064) THEN
        EXIT;

      PayrollDocLine.RESET;
      PayrollDocLine.SETRANGE("Document No.","No.");
      PayrollDocLine.LOCKTABLE;
      IF PayrollDocLine.FIND('-') THEN
        REPEAT
          NewDimSetID := DimMgt.GetDeltaDimSetID(PayrollDocLine."Dimension Set ID",NewParentDimSetID,OldParentDimSetID);
          IF PayrollDocLine."Dimension Set ID" <> NewDimSetID THEN BEGIN
            PayrollDocLine."Dimension Set ID" := NewDimSetID;
            DimMgt.UpdateGlobalDimFromDimSetID(
              PayrollDocLine."Dimension Set ID",PayrollDocLine."Shortcut Dimension 1 Code",PayrollDocLine."Shortcut Dimension 2 Code");
            PayrollDocLine.MODIFY;
          END;
        UNTIL PayrollDocLine.NEXT = 0;
    END;

    PROCEDURE CalcPayrollAmount@1210003() : Decimal;
    BEGIN
      PayrollDocLine.RESET;
      PayrollDocLine.SETRANGE("Document No.","No.");
      PayrollDocLine.SETFILTER("Element Type",'%1|%2|%3|%4|%5',
        PayrollDocLine."Element Type"::Wage,
        PayrollDocLine."Element Type"::Bonus,
        PayrollDocLine."Element Type"::Deduction,
        PayrollDocLine."Element Type"::Other,
        PayrollDocLine."Element Type"::"Income Tax");
      PayrollDocLine.SETRANGE(
        "Posting Type",
        PayrollDocLine."Posting Type"::Charge,
        PayrollDocLine."Posting Type"::Liability);
      PayrollDocLine.CALCSUMS("Payroll Amount");
      EXIT(PayrollDocLine."Payroll Amount");
    END;

    BEGIN
    {
      NC NOS-26 SPA
    }
    END.
  }
}

