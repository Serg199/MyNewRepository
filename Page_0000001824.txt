OBJECT Page 1824 Jobs Setup Wizard
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Jobs Setup;
               RUS=Настройка работ];
    SourceTable=Table315;
    DelayedInsert=Yes;
    PageType=NavigatePage;
    OnInit=BEGIN
             LoadTopBanners;
           END;

    OnOpenPage=BEGIN
                 INIT;

                 Step := Step::Welcome;
                 EnableControls;

                 IF ResourcesSetup.FINDFIRST THEN;
                 IF JobsSetup.FINDFIRST THEN;

                 IF NoSeries.GET(JobTxt) THEN
                   NoSeriesJob := JobTxt;
                 IF NoSeries.GET(ResourceTxt) THEN
                   NoSeriesResource := ResourceTxt;
                 IF NoSeries.GET(TimeSheetTxt) THEN
                   NoSeriesTimeSheet := TimeSheetTxt;
                 IF NoSeries.GET(JobWipTxt) THEN
                   NoSeriesJobWIP := JobWipTxt;
               END;

    ActionList=ACTIONS
    {
      { 10      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 51      ;1   ;Action    ;
                      Name=ActionAddResource;
                      ShortCutKey=Ctrl+A;
                      CaptionML=[ENU=Add;
                                 RUS=Добавить];
                      ApplicationArea=#Basic,#Suite;
                      Visible=AddResourcesVisible;
                      Enabled=AddResourcesActionEnabled;
                      InFooterBar=Yes;
                      Image=Add;
                      OnAction=BEGIN
                                 AddResourceAction;
                               END;
                                }
      { 15      ;1   ;Action    ;
                      Name=ActionBack;
                      ShortCutKey=Ctrl+B;
                      CaptionML=[ENU=Back;
                                 RUS=Назад];
                      ToolTipML=;
                      ApplicationArea=#Basic,#Suite;
                      Visible=NOT FinalStepVisible;
                      Enabled=BackActionEnabled;
                      InFooterBar=Yes;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 NextStep(TRUE);
                               END;
                                }
      { 14      ;1   ;Action    ;
                      Name=ActionNext;
                      ShortCutKey=Ctrl+N;
                      CaptionML=[ENU=Next;
                                 RUS=Далее];
                      ApplicationArea=#Basic,#Suite;
                      Visible=NOT FinalStepVisible;
                      Enabled=NextActionEnabled;
                      InFooterBar=Yes;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 NextStep(FALSE);
                               END;
                                }
      { 44      ;1   ;Action    ;
                      Name=ActionCreateJob;
                      ShortCutKey=Ctrl+C;
                      CaptionML=[ENU=Create a new job;
                                 RUS=Создать новую работу];
                      ApplicationArea=#Basic,#Suite;
                      Visible=FinalStepVisible;
                      Enabled=CreateJobActionEnabled;
                      InFooterBar=Yes;
                      Image=Job;
                      OnAction=BEGIN
                                 CreateAJobAction;
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=ActionFinish;
                      ShortCutKey=Ctrl+F;
                      CaptionML=[ENU=Finish;
                                 RUS=Готово];
                      ToolTipML=;
                      ApplicationArea=#Basic,#Suite;
                      Visible=FinalStepVisible;
                      Enabled=FinishActionEnabled;
                      InFooterBar=Yes;
                      Image=Approve;
                      OnAction=BEGIN
                                 FinishAction;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 96  ;1   ;Group     ;
                Visible=TopBannerVisible AND NOT FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 97  ;2   ;Field     ;
                ApplicationArea=#Jobs;
                SourceExpr=MediaRepositoryStandard.Image;
                Editable=FALSE;
                ShowCaption=No }

    { 98  ;1   ;Group     ;
                Visible=TopBannerVisible AND FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 99  ;2   ;Field     ;
                ApplicationArea=#Jobs;
                SourceExpr=MediaRepositoryDone.Image;
                Editable=FALSE;
                ShowCaption=No }

    { 5   ;1   ;Group     ;
                Visible=WelcomeStepVisible;
                GroupType=Group }

    { 3   ;2   ;Group     ;
                CaptionML=[ENU=Welcome to Jobs Setup;
                           RUS=Добро пожаловать в настройку работ];
                Visible=WelcomeStepVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=You can use jobs to track costs such as time sheets that you can then charge to your customer. Choose between many reports to track your job's profitability.;
                                     RUS=Работы можно использовать для отслеживания затрат, например табели учета рабочего времени, по которым впоследствии можно выставить счет клиенту. Для отслеживания прибыльности работы доступно множество отчетов.] }

    { 28  ;2   ;Group     ;
                CaptionML=[ENU=Let's Go!;
                           RUS=Приступим!];
                GroupType=Group;
                InstructionalTextML=[ENU=Choose Next so you can start the setup.;
                                     RUS=Нажмите кнопку "Далее", чтобы приступить к настройке.] }

    { 25  ;1   ;Group     ;
                Visible=NoSeriesStepVisible;
                GroupType=Group }

    { 24  ;2   ;Group     ;
                CaptionML=[ENU=Number series are used to group jobs with consecutive IDs. Please specify the number series that you want to use for the different types of job.;
                           RUS=Серии номеров используются для группировки работ с последовательными кодами. Укажите номерную серию, которую требуется использовать для различных типов работы.];
                Visible=NoSeriesStepVisible;
                GroupType=Group }

    { 32  ;3   ;Field     ;
                CaptionML=[ENU=Jobs No Series:;
                           RUS=Серия номеров работ:];
                ApplicationArea=#Jobs;
                SourceExpr=NoSeriesJob;
                TableRelation="No. Series".Code;
                OnValidate=BEGIN
                             IF NOT NoSeries.GET(NoSeriesJob) THEN BEGIN
                               MESSAGE(ValueNotExistMsg,JobsSetup.FIELDNAME("Job Nos."));
                               NoSeriesJob := ''
                             END
                           END;
                            }

    { 35  ;3   ;Field     ;
                CaptionML=[ENU=Resource No Series:;
                           RUS=Серия номеров ресурса:];
                ApplicationArea=#Jobs;
                SourceExpr=NoSeriesResource;
                TableRelation="No. Series".Code;
                OnValidate=BEGIN
                             IF NOT NoSeries.GET(NoSeriesResource) THEN BEGIN
                               MESSAGE(ValueNotExistMsg,ResourcesSetup.FIELDNAME("Resource Nos."));
                               NoSeriesResource := ''
                             END
                           END;
                            }

    { 34  ;3   ;Field     ;
                CaptionML=[ENU=Time Sheet No Series:;
                           RUS=Серия номеров табеля учета рабочего времени:];
                ApplicationArea=#Jobs;
                SourceExpr=NoSeriesTimeSheet;
                TableRelation="No. Series".Code;
                OnValidate=BEGIN
                             IF NOT NoSeries.GET(NoSeriesTimeSheet) THEN BEGIN
                               MESSAGE(ValueNotExistMsg,ResourcesSetup.FIELDNAME("Time Sheet Nos."));
                               NoSeriesTimeSheet := ''
                             END
                           END;
                            }

    { 33  ;3   ;Field     ;
                CaptionML=[ENU=Job-WIP No Series:;
                           RUS=Серия номеров НЗП по работам:];
                ApplicationArea=#Jobs;
                SourceExpr=NoSeriesJobWIP;
                TableRelation="No. Series".Code;
                OnValidate=BEGIN
                             IF NOT NoSeries.GET(NoSeriesTimeSheet) THEN BEGIN
                               MESSAGE(ValueNotExistMsg,JobsSetup.FIELDNAME("Job WIP Nos."));
                               NoSeriesJobWIP := ''
                             END
                           END;
                            }

    { 7   ;1   ;Group     ;
                Visible=PostWIPStepVisible;
                GroupType=Group }

    { 6   ;2   ;Group     ;
                CaptionML=[ENU=Specify the default posting group and WIP method.;
                           RUS=Определение группы учета и метода НЗП по умолчанию.];
                Visible=PostWIPStepVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=Specify the default accounts that will be used to post to for jobs. The information is used when you create a new job, but you can change that for each job.;
                                     RUS=Определение счетов по умолчанию, которые будут использоваться для учета работ. Эти сведения используются при создании новой работы, но их можно изменить для каждой работы.] }

    { 17  ;3   ;Field     ;
                CaptionML=[ENU=Default Job Posting Group;
                           RUS=Группа разноски работ по умолчанию];
                ApplicationArea=#Jobs;
                SourceExpr=DefaultJobPostingGroup;
                TableRelation="Job Posting Group".Code;
                OnValidate=VAR
                             JobPostingGroup@1000 : Record 208;
                           BEGIN
                             IF NOT JobPostingGroup.GET(DefaultJobPostingGroup) THEN BEGIN
                               MESSAGE(ValueNotExistMsg,JobsSetup.FIELDNAME("Default Job Posting Group"));
                               DefaultJobPostingGroup := ''
                             END
                           END;
                            }

    { 26  ;3   ;Group     ;
                Visible=PostWIPStepVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=Specify the default method to be used for calculating work in process (WIP). If you do not want to calculate WIP, choose Completed Contract.;
                                     RUS=Определение метода по умолчанию, который будет использоваться для расчета незавершенного производства (НЗП). Если не требуется рассчитывать НЗП, выберите значение "Выполненный контракт".] }

    { 29  ;3   ;Field     ;
                CaptionML=[ENU=Default WIP Method;
                           RUS=Метод НЗП по умолчанию];
                ApplicationArea=#Jobs;
                SourceExpr=DefaultWIPMethod;
                TableRelation="Job WIP Method".Code;
                OnValidate=VAR
                             JobWIPMethod@1000 : Record 1006;
                           BEGIN
                             IF NOT JobWIPMethod.GET(DefaultWIPMethod) THEN BEGIN
                               MESSAGE(ValueNotExistMsg,JobsSetup.FIELDNAME("Default WIP Posting Method"));
                               DefaultWIPMethod := ''
                             END
                           END;
                            }

    { 16  ;1   ;Group     ;
                Visible=AskTimeSheetStepVisible;
                GroupType=Group }

    { 23  ;2   ;Group     ;
                CaptionML=[ENU=Do you want to set up time sheets?;
                           RUS=Настроить табели учета рабочего времени?];
                Visible=AskTimeSheetStepVisible;
                GroupType=Group }

    { 41  ;3   ;Group     ;
                Visible=AskTimeSheetStepVisible;
                GroupType=Group;
                InstructionalTextML=[ENU="To start setting up time sheets, choose Yes. First, you will set up at least one user and one resource. ";
                                     RUS=Чтобы приступить к настройке табелей учета рабочего времени, выберите "Да". В первую очередь настройте хотя бы одного пользователя и один ресурс.] }

    { 21  ;4   ;Field     ;
                Name=YesCheckbox;
                CaptionML=[ENU=Yes;
                           RUS=Да];
                ApplicationArea=#Jobs;
                SourceExpr=CreateTimesheetYes;
                OnValidate=BEGIN
                             IF CreateTimesheetYes THEN BEGIN
                               CreateTimesheetNo := FALSE;
                               Step := Step::ResourcesSetup;
                             END
                           END;
                            }

    { 42  ;3   ;Group     ;
                Visible=AskTimeSheetStepVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=To finish, choose No. You can set up time sheets later in the Time Sheet Setup window.;
                                     RUS=Для завершения выберите "Нет". Табели учета рабочего времени можно настроить позже в окне "Настройка табелей учета рабочего времени".] }

    { 22  ;4   ;Field     ;
                Name=NoCheckbox;
                CaptionML=[ENU=No;
                           RUS=Нет];
                ApplicationArea=#Jobs;
                SourceExpr=CreateTimesheetNo;
                OnValidate=BEGIN
                             IF CreateTimesheetNo THEN BEGIN
                               CreateTimesheetYes := FALSE;
                               Step := Step::Finish;
                             END
                           END;
                            }

    { 19  ;1   ;Group     ;
                Visible=ResourcesSetupStepVisible;
                GroupType=Group }

    { 18  ;2   ;Group     ;
                CaptionML=[ENU=Set up time sheet options;
                           RUS=Настройка параметров табеля учета рабочего времени];
                Visible=ResourcesSetupStepVisible;
                GroupType=Group }

    { 13  ;3   ;Field     ;
                Name=FirstWeekday;
                CaptionML=[ENU=Time Sheet First Weekday;
                           RUS=Первый день недели табеля];
                OptionCaptionML=[ENU=Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday;
                                 RUS=Понедельник,Вторник,Среда,Четверг,Пятница,Суббота,Воскресенье];
                ApplicationArea=#Jobs;
                SourceExpr=FirstWeekday }

    { 36  ;3   ;Field     ;
                Name=SuiteJobApproval;
                CaptionML=[ENU=Time Sheet by Job Approval;
                           RUS=Табель учета рабочего времени по утверждению работы];
                OptionCaptionML=[ENU=Time Sheet Approver User ID,Machine Only,Person Responsible;
                                 RUS=Код пользователя утверждающего табель учета рабочего времени,Только машина,Ответственное лицо];
                ApplicationArea=#Jobs;
                SourceExpr=SuiteJobApproval }

    { 2   ;2   ;Group     ;
                Visible=ResourcesSetupStepVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=The time sheet approver that is specified for the resource will approve time sheets.;
                                     RUS=Утверждающий табеля учета рабочего времени, указанный для ресурса, будет утверждать табели учета рабочего времени.] }

    { 30  ;2   ;Group     ;
                Visible=ResourcesSetupStepVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=Machine Only - For machine time sheets that are linked to a job, the responsible person for the job will approve the time sheets. For machine time sheets that are linked to a resource, the time sheets are approved by the specified time sheet approver.;
                                     RUS=Только машина - в случае табелей учета рабочего времени машин, которые связаны с работой, лицо, ответственное за работу, будет утверждать табели учета рабочего времени. В случае табелей учета рабочего времени машин, которые связаны с ресурсом, табели учета рабочего времени будут утверждаться указанным утверждающим табелей учета рабочего времени.] }

    { 9   ;2   ;Group     ;
                Visible=ResourcesSetupStepVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=The person who is specified as the responsible person for the job will approve time sheets.;
                                     RUS=Лицо, указанное как лицо, ответственное за работу, будет утверждать табели учета рабочего времени.] }

    { 20  ;1   ;Group     ;
                Name=AddUsers;
                CaptionML=[ENU=Add Users;
                           RUS=Добавить пользователей];
                Visible=AddUsersVisible;
                GroupType=Group }

    { 39  ;2   ;Group     ;
                CaptionML=[ENU=Set up Users;
                           RUS=Настроить пользователей];
                Visible=AddUsersVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=Add one or more users that you want to be able to create or approve time sheets. You can add more later.;
                                     RUS=Добавьте одного или нескольких пользователей, которым требуется предоставить возможность создавать или утверждать табели учета рабочего времени. Можно добавить дополнительных пользователей позже.] }

    { 45  ;3   ;Part      ;
                CaptionML=[ENU=Add one or more users;
                           RUS=Добавить одного или нескольких пользователей];
                ApplicationArea=#Jobs;
                PagePartID=Page1825;
                PartType=Page }

    { 31  ;1   ;Group     ;
                Name=AddResources;
                CaptionML=[ENU=Add Resources;
                           RUS=Добавить ресурсы];
                Visible=AddResourcesVisible;
                GroupType=Group }

    { 40  ;2   ;Group     ;
                CaptionML=[ENU=Set up Resources;
                           RUS=Настроить ресурсы];
                Visible=AddResourcesVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=Add one or more resources that you want to be able to use time sheets. Assign time sheet approvers as well. You can add more later. Click Next to continue after adding resources.;
                                     RUS=Добавьте один или несколько ресурсов, которым требуется предоставить возможность использовать табели учета рабочего времени. Также назначьте утверждающих табелей учета рабочего времени. Можно добавить дополнительные ресурсы позже. После добавления ресурсов нажмите кнопку "Далее" для продолжения.] }

    { 27  ;3   ;Field     ;
                Name=ResourceNo;
                CaptionML=[ENU=Resource No:;
                           RUS=Номер ресурса:];
                ApplicationArea=#Jobs;
                SourceExpr=ResourceNo;
                TableRelation=Resource.No. }

    { 47  ;3   ;Field     ;
                Name=ResourceName;
                CaptionML=[ENU=Name:;
                           RUS=Имя:];
                ApplicationArea=#Jobs;
                SourceExpr=ResourceName }

    { 52  ;3   ;Field     ;
                Name=ResourceType;
                CaptionML=[ENU=Type:;
                           RUS=Тип:];
                OptionCaptionML=[ENU=Person,Machine;
                                 RUS=Человек,Станок];
                ApplicationArea=#Jobs;
                SourceExpr=ResourceType }

    { 48  ;3   ;Field     ;
                Name=ResourceUseTimeSheet;
                CaptionML=[ENU=Use Time Sheets:;
                           RUS=Использовать табели учета рабочего времени:];
                ApplicationArea=#Jobs;
                SourceExpr=ResourceUseTimeSheet }

    { 49  ;3   ;Field     ;
                Name=ResourceTimeSheetOwnerID;
                CaptionML=[ENU=Time Sheet Owner User ID:;
                           RUS=Код пользователя владельца табеля учета рабочего времени:];
                ApplicationArea=#Jobs;
                SourceExpr=ResourceTimeSheetOwnerID;
                TableRelation="User Setup" }

    { 50  ;3   ;Field     ;
                Name=ResourceTimeSheetApproverID;
                CaptionML=[ENU=Time Sheet Approver User ID:;
                           RUS=Код пользователя утверждающего табеля учета рабочего времени:];
                ApplicationArea=#Jobs;
                SourceExpr=ResourceTimeSheetApproverID;
                TableRelation="User Setup" }

    { 38  ;1   ;Group     ;
                Visible=DoTimeSheetStepVisible;
                GroupType=Group }

    { 37  ;2   ;Group     ;
                CaptionML=[ENU=Create Time Sheets;
                           RUS=Создать табели учета рабочего времени];
                Visible=DoTimeSheetStepVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=Click Next to create time sheets.;
                                     RUS=Нажмите кнопку "Далее" для создания табелей учета рабочего времени.] }

    { 8   ;1   ;Group     ;
                Visible=FinalStepVisible;
                GroupType=Group }

    { 12  ;2   ;Group     ;
                CaptionML=[ENU=That's it!;
                           RUS=Вот и все!];
                GroupType=Group }

    { 4   ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=[ENU=You have now set things up so you can start creating jobs.;
                                     RUS=Вы завершили настройку и можете приступить к созданию работ.] }

    { 43  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=[ENU=Let's get started with your first job!;
                                     RUS=Приступим к первой работе!] }

    { 46  ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=[ENU=Click Finish then refresh your role center to see the Jobs activities.;
                                     RUS=Нажмите кнопку "Готово" и обновите ролевой центр, чтобы просмотреть действия "Работы".] }

  }
  CODE
  {
    VAR
      MediaRepositoryStandard@1040 : Record 9400;
      MediaRepositoryDone@1041 : Record 9400;
      JobsSetup@1030 : Record 315;
      ResourcesSetup@1032 : Record 314;
      Resource@1038 : Record 156;
      NoSeries@1047 : Record 308;
      NoSeriesJob@1001 : Code[10];
      NoSeriesResource@1003 : Code[10];
      NoSeriesTimeSheet@1004 : Code[10];
      NoSeriesJobWIP@1005 : Code[10];
      Step@1012 : 'Welcome,NoSeries,PostWIP,AskTimeSheet,ResourcesSetup,Users,Resources,DoTimeSheet,Finish';
      TopBannerVisible@1042 : Boolean;
      AddUsersVisible@1027 : Boolean;
      AddResourcesVisible@1031 : Boolean;
      WelcomeStepVisible@1000 : Boolean;
      NoSeriesStepVisible@1007 : Boolean;
      PostWIPStepVisible@1008 : Boolean;
      AskTimeSheetStepVisible@1011 : Boolean;
      ResourcesSetupStepVisible@1016 : Boolean;
      DoTimeSheetStepVisible@1017 : Boolean;
      FinalStepVisible@1015 : Boolean;
      FinishActionEnabled@1009 : Boolean;
      CreateJobActionEnabled@1026 : Boolean;
      BackActionEnabled@1013 : Boolean;
      NextActionEnabled@1014 : Boolean;
      AddResourcesActionEnabled@1043 : Boolean;
      CreateTimesheetYes@1022 : Boolean;
      CreateTimesheetNo@1021 : Boolean;
      SelectYesNoMsg@1025 : TextConst 'ENU=To continue, specify if you want to set up time sheets.;RUS=Для продолжения укажите, требуется ли настроить табели учета рабочего времени.';
      DefaultJobPostingGroup@1010 : Code[10];
      DefaultWIPMethod@1018 : Code[20];
      SelectGroupAndBatchMsg@1020 : TextConst 'ENU=To continue, specify a default job posting group and WIP method.;RUS=Для продолжения укажите группу разноски работ и метод НЗП по умолчанию.';
      ModifyRecord@1023 : Boolean;
      FirstWeekday@1019 : Option;
      SuiteJobApproval@1028 : Option;
      EnterResourceNoMsg@1039 : TextConst 'ENU=To add this resource, specify a resource number.;RUS=Чтобы добавить этот ресурс, укажите номер ресурса.';
      ExistingResourceMsg@1046 : TextConst 'ENU=This resource number already exists. To continue, specify a new resource number.;RUS=Этот номер ресурса уже существует. Для продолжения укажите новый номер ресурса.';
      JobTxt@1002 : TextConst '@@@={Locked};ENU=JOB;RUS=JOB';
      ResourceTxt@1006 : TextConst '@@@={Locked};ENU=RES;RUS=RES';
      TimeSheetTxt@1024 : TextConst 'ENU=TS;RUS=ТВ';
      JobWipTxt@1029 : TextConst '@@@={Locked};ENU=JOB-WIP;RUS=JOB-WIP';
      ResourceNo@1033 : Code[20];
      ResourceName@1034 : Text[50];
      ResourceUseTimeSheet@1035 : Boolean;
      ResourceTimeSheetOwnerID@1036 : Code[50];
      ResourceTimeSheetApproverID@1037 : Code[50];
      ResourceType@1044 : 'Person,Machine';
      ValueNotExistMsg@1045 : TextConst '@@@="%1=field name";ENU=The value for field %1 does not exist. To continue, select an existing value from the lookup.;RUS=Значение поля %1 не существует. Для продолжения выберите существующее значение из результатов поиска.';

    LOCAL PROCEDURE EnableControls@2();
    BEGIN
      IF Step = Step::AskTimeSheet THEN
        IF (DefaultJobPostingGroup = '') OR (DefaultWIPMethod = '') THEN BEGIN
          MESSAGE(SelectGroupAndBatchMsg);
          Step := Step - 1;
          EXIT;
        END;

      IF Step = Step::ResourcesSetup THEN
        IF (NOT CreateTimesheetNo) AND (NOT CreateTimesheetYes) THEN BEGIN
          MESSAGE(SelectYesNoMsg);
          Step := Step - 1;
          EXIT;
        END;

      ResetControls;

      CASE Step OF
        Step::Welcome:
          ShowWelcomeStep;
        Step::Users:
          ShowAddUsersStep;
        Step::Resources:
          ShowAddResourcesStep;
        Step::NoSeries:
          ShowNoSeriesStep;
        Step::PostWIP:
          ShowPostWIPStep;
        Step::AskTimeSheet:
          ShowAskTimeSheetStep;
        Step::ResourcesSetup:
          ShowResourcesSetupStep;
        Step::DoTimeSheet:
          ShowDoTimeSheetStep;
        Step::Finish:
          ShowFinalStep;
      END;
    END;

    LOCAL PROCEDURE FinishAction@12();
    BEGIN
      CurrPage.CLOSE;
    END;

    LOCAL PROCEDURE NextStep@41(Backwards@1000 : Boolean);
    BEGIN
      IF Backwards THEN
        Step := Step - 1
      ELSE
        IF Step <> Step::Finish THEN
          Step := Step + 1;

      EnableControls;
    END;

    LOCAL PROCEDURE AddResourceAction@15();
    BEGIN
      IF ResourceNo = '' THEN
        MESSAGE(EnterResourceNoMsg)
      ELSE BEGIN
        WITH Resource DO
          IF NOT GET(ResourceNo) THEN BEGIN
            INIT;
            "No." := ResourceNo;
            Name := ResourceName;
            "Search Name" := FORMAT(ResourceName);
            Type := ResourceType;
            "Use Time Sheet" := ResourceUseTimeSheet;
            "Time Sheet Owner User ID" := ResourceTimeSheetOwnerID;
            "Time Sheet Approver User ID" := ResourceTimeSheetApproverID;
            INSERT;
            ResourceNo := '';
            ResourceName := '';
            ResourceType := 0;
            ResourceUseTimeSheet := TRUE;
            ResourceTimeSheetOwnerID := '';
            ResourceTimeSheetApproverID := '';
          END ELSE
            MESSAGE(ExistingResourceMsg)
      END;
    END;

    LOCAL PROCEDURE ShowAddUsersStep@9();
    BEGIN
      SetAllStepsFalse;
      AddUsersVisible := TRUE;
      BackActionEnabled := TRUE;
      FinishActionEnabled := FALSE;
      AddResourcesActionEnabled := FALSE;
      CreateJobActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowAddResourcesStep@10();
    VAR
      NoSeriesManagement@1000 : Codeunit 396;
    BEGIN
      SetAllStepsFalse;
      AddResourcesVisible := TRUE;
      FinishActionEnabled := FALSE;
      CreateJobActionEnabled := FALSE;

      ResourceUseTimeSheet := TRUE;

      IF (NoSeriesResource <> '') AND (ResourceNo = '') THEN // Number series for Resource is set, auto-populate the Resource number
        ResourceNo := NoSeriesManagement.GetNextNo(NoSeriesResource,0D,TRUE);
    END;

    LOCAL PROCEDURE ShowWelcomeStep@3();
    BEGIN
      SetAllStepsFalse;
      WelcomeStepVisible := TRUE;
      FinishActionEnabled := FALSE;
      BackActionEnabled := FALSE;
      AddResourcesActionEnabled := FALSE;
      CreateJobActionEnabled := FALSE;
      CreateTimesheetYes := TRUE;
      CreateTimesheetNo := FALSE;
    END;

    LOCAL PROCEDURE ShowNoSeriesStep@4();
    BEGIN
      SetAllStepsFalse;
      NoSeriesStepVisible := TRUE;
      FinishActionEnabled := FALSE;
      AddResourcesActionEnabled := FALSE;
      CreateJobActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowPostWIPStep@5();
    BEGIN
      SetAllStepsFalse;
      PostWIPStepVisible := TRUE;
      FinishActionEnabled := FALSE;
      AddResourcesActionEnabled := FALSE;
      CreateJobActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowAskTimeSheetStep@6();
    BEGIN
      SetAllStepsFalse;
      AskTimeSheetStepVisible := TRUE;
      FinishActionEnabled := FALSE;
      AddResourcesActionEnabled := FALSE;
      CreateJobActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowResourcesSetupStep@7();
    BEGIN
      SetAllStepsFalse;
      ResourcesSetupStepVisible := TRUE;
      FinishActionEnabled := FALSE;
      AddResourcesActionEnabled := FALSE;
      CreateJobActionEnabled := FALSE;
    END;

    LOCAL PROCEDURE ShowDoTimeSheetStep@8();
    BEGIN
      SaveResourceInformation;
      SaveJobsSetup;

      COMMIT;

      SetAllStepsFalse;
      FinalStepVisible := TRUE;
      NextActionEnabled := FALSE;
      AddResourcesActionEnabled := FALSE;

      REPORT.RUN(REPORT::"Create Time Sheets");
    END;

    LOCAL PROCEDURE ShowFinalStep@34();
    BEGIN
      SetAllStepsFalse;
      FinalStepVisible := TRUE;
      BackActionEnabled := FALSE;
      NextActionEnabled := FALSE;
      AddResourcesActionEnabled := FALSE;

      IF CreateTimesheetNo THEN BEGIN
        SaveResourceInformation;
        SaveJobsSetup;
      END;
    END;

    LOCAL PROCEDURE ResetControls@1();
    BEGIN
      FinishActionEnabled := TRUE;
      BackActionEnabled := TRUE;
      NextActionEnabled := TRUE;
      AddResourcesActionEnabled := TRUE;
      CreateJobActionEnabled := TRUE;

      SetAllStepsFalse;
    END;

    LOCAL PROCEDURE LoadTopBanners@40();
    BEGIN
      IF MediaRepositoryStandard.GET('AssistedSetup-NoText-400px.png',FORMAT(CURRENTCLIENTTYPE)) AND
         MediaRepositoryDone.GET('AssistedSetupDone-NoText-400px.png',FORMAT(CURRENTCLIENTTYPE))
      THEN
        TopBannerVisible := MediaRepositoryDone.Image.HASVALUE;
    END;

    LOCAL PROCEDURE SaveJobsSetup@13();
    BEGIN
      WITH JobsSetup DO
        IF NOT FINDFIRST THEN BEGIN
          INIT;
          "Job Nos." := NoSeriesJob;
          "Job WIP Nos." := NoSeriesJobWIP;
          "Default Job Posting Group" := DefaultJobPostingGroup;
          "Default WIP Method" := DefaultWIPMethod;
          INSERT;
        END ELSE BEGIN
          GET;
          IF "Job Nos." <> NoSeriesJob THEN BEGIN
            ModifyRecord := TRUE;
            "Job Nos." := NoSeriesJob;
          END;

          IF "Job WIP Nos." <> NoSeriesJobWIP THEN BEGIN
            ModifyRecord := TRUE;
            "Job WIP Nos." := NoSeriesJobWIP;
          END;

          IF "Default Job Posting Group" <> DefaultJobPostingGroup THEN BEGIN
            ModifyRecord := TRUE;
            "Default Job Posting Group" := DefaultJobPostingGroup;
          END;

          IF "Default WIP Method" <> DefaultWIPMethod THEN BEGIN
            ModifyRecord := TRUE;
            "Default WIP Method" := DefaultWIPMethod;
          END;

          IF ModifyRecord = TRUE THEN
            MODIFY;
        END;
    END;

    LOCAL PROCEDURE SaveResourceInformation@14();
    BEGIN
      SaveNoSeriesResourceTimeSheet;
      WITH ResourcesSetup DO
        IF CreateTimesheetYes THEN
          IF NOT FINDFIRST THEN BEGIN
            INIT;
            "Time Sheet First Weekday" := FirstWeekday;
            "Time Sheet by Job Approval" := SuiteJobApproval;
            INSERT;
          END ELSE BEGIN
            GET;
            IF "Time Sheet First Weekday" <> FirstWeekday THEN BEGIN
              ModifyRecord := TRUE;
              "Time Sheet First Weekday" := FirstWeekday;
            END;

            IF "Time Sheet by Job Approval" <> SuiteJobApproval THEN BEGIN
              ModifyRecord := TRUE;
              "Time Sheet by Job Approval" := SuiteJobApproval;
            END;

            IF ModifyRecord = TRUE THEN
              MODIFY;
          END
    END;

    LOCAL PROCEDURE CreateAJobAction@29();
    BEGIN
      PAGE.RUN(PAGE::"Job Card");
      CurrPage.CLOSE;
    END;

    LOCAL PROCEDURE SetAllStepsFalse@11();
    BEGIN
      WelcomeStepVisible := FALSE;
      AddUsersVisible := FALSE;
      AddResourcesVisible := FALSE;
      NoSeriesStepVisible := FALSE;
      PostWIPStepVisible := FALSE;
      AskTimeSheetStepVisible := FALSE;
      ResourcesSetupStepVisible := FALSE;
      DoTimeSheetStepVisible := FALSE;
      FinalStepVisible := FALSE;
    END;

    LOCAL PROCEDURE SaveNoSeriesResourceTimeSheet@17();
    BEGIN
      WITH ResourcesSetup DO
        IF NOT FINDFIRST THEN BEGIN
          INIT;
          "Resource Nos." := NoSeriesResource;
          "Time Sheet Nos." := NoSeriesTimeSheet;
          INSERT;
        END ELSE BEGIN
          GET;
          IF "Resource Nos." <> NoSeriesResource THEN BEGIN
            ModifyRecord := TRUE;
            "Resource Nos." := NoSeriesResource;
          END;

          IF "Time Sheet Nos." <> NoSeriesTimeSheet THEN BEGIN
            ModifyRecord := TRUE;
            "Time Sheet Nos." := NoSeriesTimeSheet;
          END;

          IF ModifyRecord = TRUE THEN
            MODIFY;
        END;
    END;

    BEGIN
    END.
  }
}

