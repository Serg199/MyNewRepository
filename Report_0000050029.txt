OBJECT Report 50029 Create G/L Correspondence New
{
  OBJECT-PROPERTIES
  {
    Date=27.03.17;
    Time=14:18:03;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    Permissions=TableData 12401=rimd;
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  StartTran := 1;
                  EndTran   := 1;
                END;

  }
  DATASET
  {
    { 8321;    ;DataItem;GLEntry             ;
               DataItemTable=Table17;
               DataItemTableView=SORTING(Transaction No.);
               OnPreDataItem=BEGIN
                               IF NOT GUIALLOWED THEN
                                 ShowDialog := FALSE;


                               //Удалаю оперции из 12401, если это необходимо
                               FilterTran := GLEntry.GETFILTER("Transaction No.");
                               IF FilterTran <> '' THEN BEGIN
                                 GLCE.SETCURRENTKEY("Transaction No.");
                                 GLCE.SETFILTER("Transaction No.",FilterTran);
                                 GLCE.DELETEALL;

                                 COMMIT;
                               END;

                               GLCE.RESET;
                               IF FilterTran = '' THEN BEGIN
                                 IF GLCE.FINDLAST THEN BEGIN
                                   TranNo := GLCE."Transaction No." + 1;
                                   GLEntry.SETFILTER("Transaction No.", '>=%1',TranNo);
                                 END ELSE BEGIN
                                   IF GLEntry.FINDFIRST THEN
                                     TranNo := GLEntry."Transaction No.";
                                 END;
                               END ELSE BEGIN
                                 IF GLEntry.FINDFIRST THEN
                                   TranNo := GLEntry."Transaction No.";
                               END;

                               IF ShowDialog THEN BEGIN
                                 Window.OPEN(Text001);
                                 Window.UPDATE(1,TranNo);
                               END;
                             END;

               OnAfterGetRecord=VAR
                                ;
                                BEGIN
                                  IF TranNo = GLEntry."Transaction No." THEN BEGIN
                                      IF (GLEntry."Debit Amount" <> 0) OR (GLEntry."Add.-Currency Debit Amount" <> 0) THEN BEGIN
                                        db_GLE.INIT;
                                        db_GLE.TRANSFERFIELDS(GLEntry);
                                        db_GLE.INSERT(FALSE);
                                      END;

                                      IF (GLEntry."Credit Amount" <> 0) OR (GLEntry."Add.-Currency Credit Amount" <> 0) THEN BEGIN
                                        cr_GLE.INIT;
                                        cr_GLE.TRANSFERFIELDS(GLEntry);
                                        cr_GLE.INSERT(FALSE);
                                      END;
                                   END ELSE BEGIN
                                    IF (db_GLE.COUNT = 0) AND (cr_GLE.COUNT = 0) THEN
                                      BEGIN
                                        TranNo += 1;
                                      END;

                                    ProcessingTran;

                                    IF Done THEN
                                      COMMIT;

                                    db_GLE.RESET;
                                    cr_GLE.RESET;
                                    db_GLE.DELETEALL;
                                    cr_GLE.DELETEALL;
                                    CLEAR(db_GLE);
                                    CLEAR(cr_GLE);

                                    TranNo := GLEntry."Transaction No.";
                                    IF ShowDialog THEN
                                      Window.UPDATE(1,TranNo);

                                      IF (GLEntry."Debit Amount" <> 0) OR (GLEntry."Add.-Currency Debit Amount" <> 0) THEN BEGIN
                                        db_GLE.INIT;
                                        db_GLE.TRANSFERFIELDS(GLEntry);
                                        db_GLE.INSERT(FALSE);
                                      END;

                                      IF (GLEntry."Credit Amount" <> 0) OR (GLEntry."Add.-Currency Credit Amount" <> 0) THEN BEGIN
                                        cr_GLE.INIT;
                                        cr_GLE.TRANSFERFIELDS(GLEntry);
                                        cr_GLE.INSERT(FALSE);
                                      END;
                                    END;
                                END;

               OnPostDataItem=BEGIN
                                IF (db_GLE.COUNT = 0) AND (cr_GLE.COUNT = 0) THEN BEGIN
                                    TranNo += 1;
                                END ELSE
                                  ProcessingTran;

                                IF Done THEN
                                  COMMIT;

                                IF ShowDialog THEN
                                  Window.CLOSE;
                              END;

               ReqFilterFields=Transaction No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      StartTran@1000000001 : Integer;
      EndTran@1000000002 : Integer;
      TranNo@1000000010 : Integer;
      FilterTran@1000000003 : Text[1024];
      Done@1000000007 : Boolean;
      ShowDialog@1000000015 : Boolean;
      GLE@1000000000 : Record 17;
      db_GLE@1000000004 : TEMPORARY Record 17;
      cr_GLE@1000000006 : TEMPORARY Record 17;
      GLCE@1000000005 : Record 12401;
      GLC@1000000014 : Record 12400;
      Window@1000000008 : Dialog;
      Text001@1000000009 : TextConst 'ENU=Transaction No. #1#######;RUS=Обработка Транзакции Но. #1#######';
      Text002@1000000011 : TextConst 'RUS=Этап                        ##########';
      Text003@1000000012 : TextConst 'RUS=Сбор данных';
      Text004@1000000013 : TextConst 'RUS=Расчет';

    PROCEDURE InsertGLCE@1000000003(type@1000000000 : Integer);
    BEGIN
      GLCE.INIT;
      GLCE."Entry No."                      := db_GLE."Entry No.";
      GLCE."Corresp. Entry No."             := cr_GLE."Entry No.";
      GLCE."Document No."                   := db_GLE."Document No.";
      GLCE."Posting Date"                   := db_GLE."Posting Date";
      GLCE."Debit Account No."              := db_GLE."G/L Account No.";
      GLCE."Debit Source No."               := db_GLE."Source No.";
      GLCE."Credit Account No."             := cr_GLE."G/L Account No.";
      GLCE."Credit Source No."              := cr_GLE."Source No.";


      IF type = 11 THEN BEGIN
        GLCE.Amount                         := -cr_GLE.Amount;
        GLCE."Amount (ACY)"                 := -cr_GLE."Additional-Currency Amount";
        GLCE."Original Currency Code"       := cr_GLE."Original Currency Code";

        db_GLE.Amount                       += cr_GLE.Amount;
        db_GLE."Additional-Currency Amount" += cr_GLE."Additional-Currency Amount";
        db_GLE.MODIFY(FALSE);

        cr_GLE.Amount                       := 0;
        cr_GLE."Additional-Currency Amount" := 0;
        cr_GLE.MODIFY(FALSE);
      END;

      IF type = 12 THEN BEGIN
        GLCE.Amount                         := db_GLE.Amount;
        GLCE."Amount (ACY)"                 := db_GLE."Additional-Currency Amount";
        GLCE."Original Currency Code"       := db_GLE."Original Currency Code";

        cr_GLE.Amount                       += db_GLE.Amount;
        cr_GLE."Additional-Currency Amount" += db_GLE."Additional-Currency Amount";
        cr_GLE.MODIFY(FALSE);

        db_GLE.Amount                       := 0;
        db_GLE."Additional-Currency Amount" := 0;
        db_GLE.MODIFY(FALSE);
      END;

      IF type = 13 THEN BEGIN
        GLCE.Amount                         := db_GLE.Amount;
        GLCE."Amount (ACY)"                 := -cr_GLE."Additional-Currency Amount";
        GLCE."Original Currency Code"       := db_GLE."Original Currency Code";

        db_GLE.Amount                       := 0;
        db_GLE."Additional-Currency Amount" += cr_GLE."Additional-Currency Amount";
        db_GLE.MODIFY(FALSE);

        cr_GLE.Amount                       += GLCE.Amount;
        cr_GLE."Additional-Currency Amount" := 0;
        cr_GLE.MODIFY(FALSE);
      END;

      IF type = 14 THEN BEGIN
        GLCE.Amount                         := -cr_GLE.Amount;
        GLCE."Amount (ACY)"                 := db_GLE."Additional-Currency Amount";
        GLCE."Original Currency Code"       := cr_GLE."Original Currency Code";

        db_GLE.Amount                       += cr_GLE.Amount;
        db_GLE."Additional-Currency Amount" := 0;
        db_GLE.MODIFY(FALSE);

        cr_GLE.Amount                       := 0;
        cr_GLE."Additional-Currency Amount" += GLCE."Amount (ACY)";
        cr_GLE.MODIFY(FALSE);
      END;


      GLCE."User ID"                        := db_GLE."User ID";
      GLCE."Transaction No."                := db_GLE."Transaction No.";
      GLCE."Business Unit Code"             := db_GLE."Business Unit Code";
      GLCE."Debit Global Dimension 1 Code"  := db_GLE."Global Dimension 1 Code";
      GLCE."Debit Global Dimension 2 Code"  := db_GLE."Global Dimension 2 Code";
      GLCE."Creation Date"                  := TODAY;
      GLCE."Debit Source Type"              := db_GLE."Source Type";
      GLCE."Credit Source Type"             := cr_GLE."Source Type";
      GLCE."Document Type"                  := db_GLE."Document Type";
      GLCE."Credit Global Dimension 1 Code" := cr_GLE."Global Dimension 1 Code";
      GLCE."Credit Global Dimension 2 Code" := cr_GLE."Global Dimension 2 Code";
      GLCE."Debit Entry No."                := db_GLE."Entry No.";
      GLCE."Credit Entry No."               := cr_GLE."Entry No.";
      GLCE."Debit Description"              := db_GLE.Description;
      GLCE."Credit Description"             := cr_GLE.Description;

      IF (ROUND(GLCE.Amount,0.01) <> 0) OR (ROUND(GLCE."Amount (ACY)",0.01) <> 0) THEN
        IF GLCE.INSERT(FALSE) THEN
          Done := TRUE;

      IF Done THEN
        IF NOT GLC.GET(GLCE."Debit Account No.",GLCE."Credit Account No.") THEN BEGIN
          GLC.INIT;
          GLC."Debit Account No."  := GLCE."Debit Account No.";
          GLC."Credit Account No." := GLCE."Credit Account No.";
          GLC.INSERT;
        END;
    END;

    PROCEDURE InsertErrorGLCE@1000000002(errorGLE@1000000000 : TEMPORARY Record 17);
    BEGIN
      GLCE.INIT;
      GLCE."Entry No."                      := errorGLE."Entry No.";
      GLCE."Corresp. Entry No."             := 0;
      GLCE."Document No."                   := errorGLE."Document No.";
      GLCE."Posting Date"                   := errorGLE."Posting Date";

      IF (errorGLE."Debit Amount" <> 0) OR (errorGLE."Add.-Currency Debit Amount" <> 0) THEN BEGIN
        GLCE."Debit Account No."              := errorGLE."G/L Account No.";
        GLCE."Debit Source No."               := errorGLE."Source No.";

        GLCE.Amount                         := errorGLE.Amount;
        GLCE."Amount (ACY)"                 := errorGLE."Additional-Currency Amount";

        GLCE."Debit Global Dimension 1 Code"  := errorGLE."Global Dimension 1 Code";
        GLCE."Debit Global Dimension 2 Code"  := errorGLE."Global Dimension 2 Code";
        GLCE."Debit Source Type"              := errorGLE."Source Type";
        GLCE."Debit Entry No."                := errorGLE."Entry No.";
        GLCE."Debit Description"              := errorGLE.Description;
      END ELSE BEGIN
        GLCE."Credit Account No."             := errorGLE."G/L Account No.";
        GLCE."Credit Source No."              := errorGLE."Source No.";

        GLCE.Amount                         := -errorGLE.Amount;
        GLCE."Amount (ACY)"                 := -errorGLE."Additional-Currency Amount";

        GLCE."Credit Global Dimension 1 Code" := errorGLE."Global Dimension 1 Code";
        GLCE."Credit Global Dimension 2 Code" := errorGLE."Global Dimension 2 Code";
        GLCE."Credit Source Type"             := errorGLE."Source Type";
        GLCE."Credit Entry No."               := errorGLE."Entry No.";
        GLCE."Credit Description"             := errorGLE.Description;
      END;

      GLCE."Original Currency Code"       := errorGLE."Original Currency Code";

      GLCE."User ID"                        := errorGLE."User ID";
      GLCE."Transaction No."                := errorGLE."Transaction No.";
      GLCE."Business Unit Code"             := errorGLE."Business Unit Code";


      GLCE."Creation Date"                  := TODAY;
      GLCE."Document Type"                  := errorGLE."Document Type";

      IF (ROUND(GLCE.Amount,0.01) <> 0) OR (ROUND(GLCE."Amount (ACY)",0.01) <> 0) THEN
        IF GLCE.INSERT(FALSE) THEN
          Done := TRUE;
    END;

    PROCEDURE ErrorTrans@1000000008();
    BEGIN
      db_GLE.RESET;
      db_GLE.SETRANGE(Amount,0);
      db_GLE.SETRANGE("Additional-Currency Amount",0);

      IF db_GLE.COUNT <> 0 THEN
        db_GLE.DELETEALL;

      db_GLE.RESET;

      cr_GLE.RESET;
      cr_GLE.SETRANGE(Amount,0);
      cr_GLE.SETRANGE("Additional-Currency Amount",0);

      IF cr_GLE.COUNT <> 0 THEN
        cr_GLE.DELETEALL;

      cr_GLE.RESET;

      IF db_GLE.COUNT <> 0 THEN BEGIN
        IF db_GLE.FINDFIRST THEN;

        REPEAT
          InsertErrorGLCE(db_GLE);
        UNTIL db_GLE.NEXT = 0;

      END ELSE BEGIN
        IF cr_GLE.FINDFIRST THEN;

        REPEAT
          InsertErrorGLCE(cr_GLE);
        UNTIL cr_GLE.NEXT = 0;

      END;
    END;

    PROCEDURE ProcessingTran@1000000007();
    BEGIN
      Done := FALSE;

      //обработка одной транзакции
      IF (db_GLE.COUNT = 0) OR (cr_GLE.COUNT = 0) THEN
        ErrorTrans
      ELSE BEGIN
        Step1;

        IF (db_GLE.COUNT <> 0) AND (db_GLE.COUNT <> 0) THEN BEGIN
          Step2;

          db_GLE.RESET;
          cr_GLE.RESET;

          db_GLE.RESET;
          db_GLE.SETRANGE(Amount,0);
          db_GLE.SETRANGE("Additional-Currency Amount",0);

          IF db_GLE.COUNT <> 0 THEN
            db_GLE.DELETEALL;

          cr_GLE.RESET;
          cr_GLE.SETRANGE(Amount,0);
          cr_GLE.SETRANGE("Additional-Currency Amount",0);

          IF cr_GLE.COUNT <> 0 THEN
            cr_GLE.DELETEALL;

          db_GLE.RESET;
          cr_GLE.RESET;

          IF (db_GLE.COUNT <> 0) OR (db_GLE.COUNT <> 0) THEN BEGIN
            db_GLE.RESET;
            cr_GLE.RESET;

            IF db_GLE.COUNT <> 0 THEN BEGIN
              IF db_GLE.FINDFIRST THEN;
              REPEAT
                IF (db_GLE.Amount <= 0) AND (db_GLE."Additional-Currency Amount" <= 0) THEN BEGIN
                  cr_GLE.INIT;
                  cr_GLE.TRANSFERFIELDS(db_GLE);
                  cr_GLE.INSERT;
                  db_GLE.DELETE;
                END;
              UNTIL db_GLE.NEXT = 0;
            END;

            IF cr_GLE.COUNT <> 0 THEN BEGIN
              IF cr_GLE.FINDFIRST THEN;
              REPEAT
                IF (cr_GLE.Amount >= 0) AND (cr_GLE."Additional-Currency Amount" >= 0) THEN BEGIN
                  db_GLE.INIT;
                  db_GLE.TRANSFERFIELDS(cr_GLE);
                  db_GLE.INSERT;
                  cr_GLE.DELETE;
                END;
              UNTIL cr_GLE.NEXT = 0;
            END;

            IF (db_GLE.COUNT <> 0) AND (cr_GLE.COUNT <> 0) THEN BEGIN
              Step1;

              IF (db_GLE.COUNT <> 0) OR (cr_GLE.COUNT <> 0) THEN
                ErrorTrans;
            END ELSE
              ErrorTrans;
          END;

        END ELSE BEGIN
          IF (db_GLE.COUNT <> 0) OR (db_GLE.COUNT <> 0) THEN BEGIN
            db_GLE.RESET;
            cr_GLE.RESET;

            IF db_GLE.COUNT <> 0 THEN BEGIN
              IF db_GLE.FINDFIRST THEN;
              REPEAT
                IF (db_GLE.Amount <= 0) AND (db_GLE."Additional-Currency Amount" <= 0) THEN BEGIN
                  cr_GLE.INIT;
                  cr_GLE.TRANSFERFIELDS(db_GLE);
                  cr_GLE.INSERT;
                  db_GLE.DELETE;
                END;
              UNTIL db_GLE.NEXT = 0;
            END;

            IF cr_GLE.COUNT <> 0 THEN BEGIN
              IF cr_GLE.FINDFIRST THEN;
              REPEAT
                IF (cr_GLE.Amount >= 0) AND (cr_GLE."Additional-Currency Amount" >= 0) THEN BEGIN
                  db_GLE.INIT;
                  db_GLE.TRANSFERFIELDS(db_GLE);
                  db_GLE.INSERT;
                  cr_GLE.DELETE;
                END;
              UNTIL cr_GLE.NEXT = 0;
            END;

            IF (db_GLE.COUNT <> 0) AND (cr_GLE.COUNT <> 0) THEN BEGIN
              Step1;
              IF (db_GLE.COUNT <> 0) OR (cr_GLE.COUNT <> 0) THEN
                ErrorTrans;
            END ELSE
              ErrorTrans;

          END;
        END;
      END;

      db_GLE.RESET;
      cr_GLE.RESET;

      IF (db_GLE.COUNT <> 0) OR (cr_GLE.COUNT <> 0) THEN
        ErrorTrans;
    END;

    PROCEDURE Step1@1000000015();
    VAR
      del@1000000000 : Boolean;
    BEGIN
      IF db_GLE.FINDFIRST THEN;

      REPEAT
        IF cr_GLE.FINDFIRST THEN;

        IF  CheckDbCr THEN BEGIN
          InsertGLCE(11);
          cr_GLE.DELETE;

        END ELSE BEGIN
          del := FALSE;

          REPEAT
            IF CheckDbCr THEN BEGIN
              InsertGLCE(11);
              del := cr_GLE.DELETE;
            END;
          UNTIL (cr_GLE.NEXT = 0) OR del;

        END;
      UNTIL db_GLE.NEXT = 0;

      db_GLE.RESET;
      db_GLE.SETRANGE(Amount,0);
      db_GLE.SETRANGE("Additional-Currency Amount",0);

      IF db_GLE.COUNT <> 0 THEN
        db_GLE.DELETEALL;

      db_GLE.RESET;
    END;

    PROCEDURE Step2@1000000019();
    VAR
      type@1000000000 : Integer;
      step@1000000001 : Integer;
    BEGIN
      IF db_GLE.FINDFIRST THEN;

      REPEAT
        IF cr_GLE.FINDFIRST THEN BEGIN

          REPEAT

            type := TypeTrans;
            InsertGLCE(type);
            IF (cr_GLE.Amount = 0) AND (cr_GLE."Additional-Currency Amount" = 0) THEN
              cr_GLE.DELETE;
          UNTIL ((db_GLE.Amount = 0) AND (db_GLE."Additional-Currency Amount" = 0)) OR (cr_GLE.NEXT = 0);

        END;
      UNTIL db_GLE.NEXT = 0;

      db_GLE.RESET;
      db_GLE.SETRANGE(Amount,0);
      db_GLE.SETRANGE("Additional-Currency Amount",0);

      IF db_GLE.COUNT <> 0 THEN
        db_GLE.DELETEALL;

      db_GLE.RESET;
    END;

    PROCEDURE TypeTrans@1000000005() type : Integer;
    BEGIN
      IF (ABS(db_GLE.Amount) <= ABS(cr_GLE.Amount)) AND
        (ABS(db_GLE."Additional-Currency Amount") <= ABS(cr_GLE."Additional-Currency Amount")) THEN
        type := 12
      ELSE BEGIN
        IF (ABS(db_GLE.Amount) < ABS(cr_GLE.Amount)) AND
        (ABS(db_GLE."Additional-Currency Amount") > ABS(cr_GLE."Additional-Currency Amount")) THEN
          type := 13
        ELSE BEGIN
          IF (ABS(db_GLE.Amount) > ABS(cr_GLE.Amount)) AND
          (ABS(db_GLE."Additional-Currency Amount") < ABS(cr_GLE."Additional-Currency Amount")) THEN
            type := 14
          ELSE
            type := 11;
        END;
      END;

      //MESSAGE('db_ent = %1 ... cr_ent = %2 ... type = %3',db_GLE."Entry No.",cr_GLE."Entry No.",type);
    END;

    PROCEDURE CheckDbCr@1000000004() yn : Boolean;
    BEGIN
      yn := (db_GLE.Amount = -cr_GLE.Amount) AND (db_GLE."Additional-Currency Amount" = -cr_GLE."Additional-Currency Amount")
            AND (db_GLE."Document No." = cr_GLE."Document No.");
    END;

    PROCEDURE SetParam@1000000000(trans_no@1000000000 : Integer);
    BEGIN
      GLEntry.SETCURRENTKEY("Transaction No.");
      GLEntry.SETRANGE("Transaction No.",trans_no);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

