OBJECT Codeunit 50026 Mapping LE
{
  OBJECT-PROPERTIES
  {
    Date=19.02.10;
    Time=16:49:49;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            MovingDataSetup.GET;
            MovingDataSetup.TESTFIELD("Use Mapping LE",TRUE);

            IF GUIALLOWED THEN BEGIN
              Indicator.OPEN(Text001);
            END;


            JobProcStatusTemp."Company No." := '';
            JobProcStatusTemp."Sub Mode" := JobProcStatusTemp."Sub Mode"::"Only Modify";

            ConectionString := AdoFunc.ConnectByWindowAutentification(MovingDataSetup."Windows Autentification");
            AdoFunc.AdoOpen(lAdoConnection,ConectionString);

            lAdoConnection.Execute('EXEC [dbo].MapLE');

            AdoFunc.AdoClose(lAdoConnection);

            IF GUIALLOWED THEN
              Indicator.CLOSE;

            {
            IF GUIALLOWED THEN BEGIN
              Indicator.OPEN(Text001 +
                             Text002 +
                             Text003);
              iCount := PreBuffer.COUNT;
              i := 0;
              Indicator.UPDATE(2, iCount);
            END;

            PreBuffer.RESET;
            PreBuffer.SETRANGE(Status,PreBuffer.Status::New);
            PreBuffer.SETRANGE("Id Legal Entity",'');
            isBlock := FALSE;
            IF PreBuffer.FINDSET THEN BEGIN

              IF GUIALLOWED THEN BEGIN
                iCount := PreBuffer.COUNT;
                i := 0;
                Indicator.UPDATE(1, PreBuffer.TABLECAPTION);
              END;

              REPEAT
                IF GUIALLOWED THEN BEGIN
                  i +=1 ;
                  Indicator.UPDATE(2, ROUND((i/iCount)*10000, 1));
                END;

                RecRefBuffer.GETTABLE(PreBuffer);
                JobProcStatusTemp."Record ID" := RecRefBuffer.RECORDID;
                IF NOT CODEUNIT.RUN(CODEUNIT::"Table Check Blocked",JobProcStatusTemp) THEN
                  isBlock := TRUE;

                IF NOT isBlock AND MappingLE.GET(PreBuffer."Id External System",PreBuffer."External Id Legal Entity") THEN
                  IF Company.GET(MappingLE."Company No.") THEN BEGIN
                    PreBuffer2.GET(PreBuffer."Entry No.");
                    PreBuffer2."Id Legal Entity" := Company."Legal Entity Id";
                    PreBuffer2.MODIFY;
                    COMMIT;
                  END;

              UNTIL (PreBuffer.NEXT = 0) OR isBlock;

            END;


            BufferFA.RESET;
            BufferFA.SETRANGE(Status,PreBuffer.Status::New);
            BufferFA.SETRANGE("Id Legal Entity",'');
            isBlock := FALSE;
            IF BufferFA.FINDSET THEN BEGIN

              IF GUIALLOWED THEN BEGIN
                iCount := BufferFA.COUNT;
                i := 0;
                Indicator.UPDATE(1, BufferFA.TABLECAPTION);
              END;

              REPEAT
                IF GUIALLOWED THEN BEGIN
                  i +=1 ;
                  Indicator.UPDATE(2, ROUND((i/iCount)*10000, 1));
                END;

                RecRefBuffer.GETTABLE(BufferFA);
                JobProcStatusTemp."Record ID" := RecRefBuffer.RECORDID;
                IF NOT CODEUNIT.RUN(CODEUNIT::"Table Check Blocked",JobProcStatusTemp) THEN
                  isBlock := TRUE;

                IF NOT isBlock AND MappingLE.GET(BufferFA."Id External System",BufferFA."External Id Legal Entity") THEN
                  IF Company.GET(MappingLE."Company No.") THEN BEGIN
                    BufferFA2.GET(BufferFA."Entry No.");
                    BufferFA2."Id Legal Entity" := Company."Legal Entity Id";
                    BufferFA2.MODIFY;
                    COMMIT;
                  END;

              UNTIL (BufferFA.NEXT = 0) OR isBlock;

            END;


            BufferBankAccount.RESET;
            BufferBankAccount.SETRANGE(Status,PreBuffer.Status::New);
            BufferBankAccount.SETRANGE("Company No.",'');
            isBlock := FALSE;
            IF BufferBankAccount.FINDSET THEN BEGIN

              IF GUIALLOWED THEN BEGIN
                iCount := BufferBankAccount.COUNT;
                i := 0;
                Indicator.UPDATE(1, BufferBankAccount.TABLECAPTION);
              END;

              REPEAT
                IF GUIALLOWED THEN BEGIN
                  i +=1 ;
                  Indicator.UPDATE(2, ROUND((i/iCount)*10000, 1));
                END;

                RecRefBuffer.GETTABLE(BufferBankAccount);
                JobProcStatusTemp."Record ID" := RecRefBuffer.RECORDID;
                IF NOT CODEUNIT.RUN(CODEUNIT::"Table Check Blocked",JobProcStatusTemp) THEN
                  isBlock := TRUE;

                IF NOT isBlock AND MappingLE.GET(BufferBankAccount."Id External System",BufferBankAccount."External Company No.") THEN
                  IF Company.GET(MappingLE."Company No.") THEN BEGIN
                    BufferBankAccount2.GET(BufferBankAccount."Entry No.");
                    BufferBankAccount2."Company No." := Company."Legal Entity Id";
                    BufferBankAccount2.MODIFY;
                    COMMIT;
                  END;

              UNTIL (BufferBankAccount.NEXT = 0) OR isBlock;

            END;


            BufferDeal.RESET;
            BufferDeal.SETRANGE(Status,PreBuffer.Status::New);
            BufferDeal.SETRANGE("Company No.",'');
            isBlock := FALSE;
            IF BufferDeal.FINDSET THEN BEGIN

              IF GUIALLOWED THEN BEGIN
                iCount := BufferDeal.COUNT;
                i := 0;
                Indicator.UPDATE(1, BufferDeal.TABLECAPTION);
              END;

              REPEAT
                IF GUIALLOWED THEN BEGIN
                  i +=1 ;
                  Indicator.UPDATE(2, ROUND((i/iCount)*10000, 1));
                END;

                RecRefBuffer.GETTABLE(BufferDeal);
                JobProcStatusTemp."Record ID" := RecRefBuffer.RECORDID;
                IF NOT CODEUNIT.RUN(CODEUNIT::"Table Check Blocked",JobProcStatusTemp) THEN
                  isBlock := TRUE;

                IF NOT isBlock AND MappingLE.GET(BufferDeal."Id External System",BufferDeal."External Company No.") THEN
                  IF Company.GET(MappingLE."Company No.") THEN BEGIN
                    BufferDeal2.GET(BufferDeal."Entry No.");
                    BufferDeal2."Company No." := Company."Legal Entity Id";
                    BufferDeal2.MODIFY;
                    COMMIT;
                  END;

              UNTIL (BufferDeal.NEXT = 0) OR isBlock;

            END;

            IF GUIALLOWED THEN
              Indicator.CLOSE;
            }

            IF GUIALLOWED THEN
              MESSAGE(Text004);
          END;

  }
  CODE
  {
    VAR
      JobProcStatusTemp@1000000006 : TEMPORARY Record 50063;
      MappingLE@1000000007 : Record 50075;
      PreBuffer@1000000000 : Record 50007;
      Text001@1000000001 : TextConst 'ENU=Mapping LE... \;RUS=Мэппинг Юрлиц... \';
      PreBuffer2@1000000009 : Record 50007;
      Indicator@1000000002 : Dialog;
      iCount@1000000003 : Integer;
      i@1000000004 : Integer;
      RecRefBuffer@1000000005 : RecordRef;
      Company@1000000008 : Record 2000000006;
      isBlock@1000000010 : Boolean;
      BufferFA@1000000011 : Record 50043;
      BufferFA2@1000000012 : Record 50043;
      BufferBankAccount@1000000013 : Record 50053;
      BufferBankAccount2@1000000014 : Record 50053;
      BufferDeal@1000000015 : Record 50036;
      BufferDeal2@1000000016 : Record 50036;
      Text002@1000000017 : TextConst 'ENU=Table #1############################ \;RUS=Таблица #1############################ \';
      Text003@1000000018 : TextConst 'ENU=Progress: @2@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;RUS=Процент выполнения: @2@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@';
      Text004@1000000020 : TextConst 'ENU=Mapping of LE Complete.;RUS=Мэппинг юрлиц произведен.';
      lAdoConnection@1000000019 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000514-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'.Connection";
      AdoFunc@1000000021 : Codeunit 50024;
      ConectionString@1000000022 : Text[1024];
      MovingDataSetup@1000000023 : Record 50064;

    EVENT lAdoConnection@1000000019::InfoMessage@0(pError@1000000002 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000500-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'.Error";adStatus@1000000001 : Integer;pConnection@1000000000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000550-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Connection");
    BEGIN
    END;

    EVENT lAdoConnection@1000000019::BeginTransComplete@1(TransactionLevel@1000000003 : Integer;pError@1000000002 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000500-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'.Error";adStatus@1000000001 : Integer;pConnection@1000000000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000550-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Connection");
    BEGIN
    END;

    EVENT lAdoConnection@1000000019::CommitTransComplete@3(pError@1000000002 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000500-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'.Error";adStatus@1000000001 : Integer;pConnection@1000000000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000550-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Connection");
    BEGIN
    END;

    EVENT lAdoConnection@1000000019::RollbackTransComplete@2(pError@1000000002 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000500-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'.Error";adStatus@1000000001 : Integer;pConnection@1000000000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000550-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Connection");
    BEGIN
    END;

    EVENT lAdoConnection@1000000019::WillExecute@4(VAR Source@1000000007 : Text[1024];CursorType@1000000006 : Integer;LockType@1000000005 : Integer;VAR Options@1000000004 : Integer;adStatus@1000000003 : Integer;pCommand@1000000002 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{B08400BD-F9D1-4D02-B856-71D5DBA123E9}:'Microsoft ActiveX Data Objects 2.8 Library'._Command";pRecordset@1000000001 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000556-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Recordset";pConnection@1000000000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000550-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Connection");
    BEGIN
    END;

    EVENT lAdoConnection@1000000019::ExecuteComplete@5(RecordsAffected@1000000005 : Integer;pError@1000000004 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000500-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'.Error";adStatus@1000000003 : Integer;pCommand@1000000002 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{B08400BD-F9D1-4D02-B856-71D5DBA123E9}:'Microsoft ActiveX Data Objects 2.8 Library'._Command";pRecordset@1000000001 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000556-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Recordset";pConnection@1000000000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000550-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Connection");
    BEGIN
    END;

    EVENT lAdoConnection@1000000019::WillConnect@6(VAR ConnectionString@1000000005 : Text[1024];VAR UserID@1000000004 : Text[1024];VAR Password@1000000003 : Text[1024];VAR Options@1000000002 : Integer;adStatus@1000000001 : Integer;pConnection@1000000000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000550-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Connection");
    BEGIN
    END;

    EVENT lAdoConnection@1000000019::ConnectComplete@7(pError@1000000002 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000500-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'.Error";adStatus@1000000001 : Integer;pConnection@1000000000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000550-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Connection");
    BEGIN
    END;

    EVENT lAdoConnection@1000000019::Disconnect@8(adStatus@1000000001 : Integer;pConnection@1000000000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000550-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Connection");
    BEGIN
    END;

    BEGIN
    {
      NC MDB06 PCH Создан CU
    }
    END.
  }
}

