OBJECT Page 360 Document Sending Profile
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Document Sending Profile;
               RUS=Профиль отправки документов];
    SourceTable=Table60;
    PageType=Card;
    OnOpenPage=VAR
                 ElectronicDocumentFormat@1001 : Record 61;
               BEGIN
                 ElectronicDocumentsVisible := NOT ElectronicDocumentFormat.ISEMPTY;
               END;

  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           RUS=Общее];
                GroupType=Group }

    { 11  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a code to identify the document sending method in the system.;
                           RUS=Определяет код для идентификации метода отправки документа в системе.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Code }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the document sending format.;
                           RUS=Определяет формат отправки документов.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if this document sending method will be used as the default method for all customers.;
                           RUS=Определяет, будет ли этот метод отправки документов использоваться в качестве метода по умолчанию для всех клиентов.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Default }

    { 9   ;1   ;Group     ;
                CaptionML=[ENU=Sending Options;
                           RUS=Параметры отправки];
                GroupType=Group }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if and how the document is printed when you choose the Post and Send button. If you choose the Yes (Prompt for Settings) option, the document is printed according to settings that you must make on the printer setup dialog.;
                           RUS=Определяет, будет ли документ выведен на печать при нажатии кнопки "Учесть и отправить" и как это будет сделано. Если выбрать вариант "Да (запросить настройки)", документ будет напечатан в соответствии с параметрами, которые необходимо выбрать в диалоговом окне настройки принтера.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Printer }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if and how the document is attached as a PDF file to an email to the involved customer when you choose the Post and Send button. If you choose the Yes (Prompt for Settings) option, the document is attached to an email according to settings that you must make in the Send Email window.;
                           RUS=Определяет, будет ли при нажатии кнопки "Учесть и отправить" документ вложен в качестве PDF-файла в сообщение электронной почты соответствующему клиенту. Если выбрать вариант "Да (запросить настройки)", документ будет вложен в сообщение в соответствии с параметрами, которые необходимо выбрать в окне "Отправить сообщение эл. почты".];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="E-Mail" }

    { 15  ;2   ;Group     ;
                Visible="E-Mail" <> "E-Mail"::No;
                GroupType=Group }

    { 12  ;3   ;Field     ;
                SourceExpr="E-Mail Attachment";
                OnValidate=BEGIN
                             "E-Mail Format" := GetFormat;
                           END;
                            }

    { 16  ;3   ;Group     ;
                Visible="E-Mail Attachment" <> "E-Mail Attachment"::PDF;
                GroupType=Group }

    { 13  ;4   ;Field     ;
                CaptionML=[ENU=Format;
                           RUS=Формат];
                SourceExpr="E-Mail Format";
                OnValidate=BEGIN
                             LastFormat := "E-Mail Format";
                           END;

                OnLookup=BEGIN
                           LookupElectronicFormat("E-Mail Format");
                         END;
                          }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specify if the document is saved as a PDF file when you choose the Post and Send button.;
                           RUS=Определяет, должен ли при нажатии кнопки "Учесть и отправить" документ быть сохранен в виде PDF-файла.];
                SourceExpr=Disk;
                OnValidate=BEGIN
                             "Disk Format" := GetFormat;
                           END;
                            }

    { 17  ;2   ;Group     ;
                Visible=(Disk <> Disk::No) AND (Disk <> Disk::PDF);
                GroupType=Group }

    { 14  ;3   ;Field     ;
                CaptionML=[ENU=Format;
                           RUS=Формат];
                SourceExpr="Disk Format";
                OnValidate=BEGIN
                             LastFormat := "Disk Format";
                           END;

                OnLookup=BEGIN
                           LookupElectronicFormat("Disk Format");
                         END;
                          }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the document is sent as an electronic document that the customer can import into their system when you choose the Post and Send button. To use this option, you must also fill the Electronic Format field. Alternatively, the file can be saved to disk.;
                           RUS=Определяет, будет ли при нажатии кнопки "Учесть и отправить" документ отправлен в виде электронного документа клиенту, который сможет импортировать его в свою систему. Для использования этого варианта необходимо также заполнить поле "Электронный формат". Альтернативный вариант - сохранение файла на диск.];
                SourceExpr="Electronic Document";
                Visible=ElectronicDocumentsVisible;
                OnValidate=BEGIN
                             "Electronic Format" := GetFormat;
                           END;
                            }

    { 18  ;2   ;Group     ;
                Visible="Electronic Document" <> "Electronic Document"::No;
                GroupType=Group }

    { 7   ;3   ;Field     ;
                CaptionML=[ENU=Format;
                           RUS=Формат];
                ToolTipML=[ENU=Specifies which format to use for electronic document sending. You must fill this field if you selected the Silent option in the Electronic Document field.;
                           RUS=Определяет формат, который будет использоваться для отправки электронных документов. Это поле необходимо заполнить, если в поле "Электронный документ" выбрано значение "Без участия пользователя".];
                SourceExpr="Electronic Format";
                OnValidate=BEGIN
                             LastFormat := "Electronic Format";
                           END;

                OnLookup=BEGIN
                           LookupElectronicFormat("Electronic Format");
                         END;
                          }

  }
  CODE
  {
    VAR
      LastFormat@1000 : Code[20];
      ElectronicDocumentsVisible@1001 : Boolean;

    LOCAL PROCEDURE LookupElectronicFormat@1(VAR ElectronicFormat@1000 : Code[20]);
    VAR
      ElectronicDocumentFormat@1002 : Record 61;
      ElectronicDocumentFormats@1001 : Page 366;
    BEGIN
      ElectronicDocumentFormat.SETRANGE(Usage,Usage);
      ElectronicDocumentFormats.SETTABLEVIEW(ElectronicDocumentFormat);
      ElectronicDocumentFormats.LOOKUPMODE := TRUE;

      IF ElectronicDocumentFormats.RUNMODAL = ACTION::LookupOK THEN BEGIN
        ElectronicDocumentFormats.GETRECORD(ElectronicDocumentFormat);
        ElectronicFormat := ElectronicDocumentFormat.Code;
        LastFormat := ElectronicDocumentFormat.Code;
        EXIT;
      END;

      ElectronicFormat := GetFormat;
    END;

    LOCAL PROCEDURE GetFormat@4() : Code[20];
    VAR
      ElectronicDocumentFormat@1000 : Record 61;
      FindNewFormat@1001 : Boolean;
    BEGIN
      FindNewFormat := FALSE;

      IF LastFormat = '' THEN
        FindNewFormat := TRUE
      ELSE BEGIN
        ElectronicDocumentFormat.SETRANGE(Code,LastFormat);
        ElectronicDocumentFormat.SETRANGE(Usage,Usage);
        IF NOT ElectronicDocumentFormat.FINDFIRST THEN
          FindNewFormat := TRUE;
      END;

      IF FindNewFormat THEN BEGIN
        ElectronicDocumentFormat.SETRANGE(Code);
        ElectronicDocumentFormat.SETRANGE(Usage,Usage);
        IF NOT ElectronicDocumentFormat.FINDFIRST THEN
          LastFormat := ''
        ELSE
          LastFormat := ElectronicDocumentFormat.Code;
      END;

      EXIT(LastFormat);
    END;

    BEGIN
    END.
  }
}

