OBJECT Table 383 Detailed CV Ledg. Entry Buffer
{
  OBJECT-PROPERTIES
  {
    Date=16.05.17;
    Time=10:53:30;
    Modified=Yes;
    Version List=NAVW110.00,NAVRU10.00,NOS-26;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Detailed CV Ledg. Entry Buffer;
               RUS=Буфер подробных операций КП];
    LookupPageID=Page573;
    DrillDownPageID=Page573;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              RUS=Номер операции] }
    { 2   ;   ;CV Ledger Entry No. ;Integer       ;CaptionML=[ENU=CV Ledger Entry No.;
                                                              RUS=Номер операции книги КП] }
    { 3   ;   ;Entry Type          ;Option        ;CaptionML=[ENU=Entry Type;
                                                              RUS=Тип операции];
                                                   OptionCaptionML=[ENU=,Initial Entry,Application,Unrealized Loss,Unrealized Gain,Realized Loss,Realized Gain,Payment Discount,Payment Discount (VAT Excl.),Payment Discount (VAT Adjustment),Appln. Rounding,Correction of Remaining Amount,Payment Tolerance,Payment Discount Tolerance,Payment Tolerance (VAT Excl.),Payment Tolerance (VAT Adjustment),Payment Discount Tolerance (VAT Excl.),Payment Discount Tolerance (VAT Adjustment);
                                                                    RUS=,Исходн. операция,Применение,Нереализ. убыток,Нереализ. прибыль,Реализ. убыток,Реализ. прибыль,Скидка оплаты,Скидка оплаты (без учета НДС),Скидка оплаты (коррекция НДС),Примен. округления,Корректировка суммы остатка,Отклонение в оплате,Отклон. в скидках оплаты,Отклонение в оплате (без учета НДС),Отклонение в оплате (коррекция НДС),Отклон. в скидках оплаты (без учета НДС),Отклон. в скидках оплаты (коррекция НДС)];
                                                   OptionString=,Initial Entry,Application,Unrealized Loss,Unrealized Gain,Realized Loss,Realized Gain,Payment Discount,Payment Discount (VAT Excl.),Payment Discount (VAT Adjustment),Appln. Rounding,Correction of Remaining Amount,Payment Tolerance,Payment Discount Tolerance,Payment Tolerance (VAT Excl.),Payment Tolerance (VAT Adjustment),Payment Discount Tolerance (VAT Excl.),Payment Discount Tolerance (VAT Adjustment) }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              RUS=Дата учета] }
    { 5   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              RUS=Тип документа];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    RUS=" ,Платеж,Счет,Кредит-нота,Процент-нота,Напоминание,Возмещение"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 6   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              RUS=Номер документа] }
    { 7   ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              RUS=Сумма];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 8   ;   ;Amount (LCY)        ;Decimal       ;CaptionML=[ENU=Amount (LCY);
                                                              RUS=Сумма (руб.)];
                                                   AutoFormatType=1 }
    { 9   ;   ;CV No.              ;Code20        ;CaptionML=[ENU=CV No.;
                                                              RUS=Код КП] }
    { 10  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              RUS=Код валюты] }
    { 11  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              RUS=Код пользователя] }
    { 12  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              RUS=Код источника] }
    { 13  ;   ;Transaction No.     ;Integer       ;CaptionML=[ENU=Transaction No.;
                                                              RUS=Номер транзакции] }
    { 14  ;   ;Journal Batch Name  ;Code10        ;TestTableRelation=No;
                                                   CaptionML=[ENU=Journal Batch Name;
                                                              RUS=Код раздела журнала] }
    { 15  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              RUS=Код причины] }
    { 16  ;   ;Debit Amount        ;Decimal       ;CaptionML=[ENU=Debit Amount;
                                                              RUS=Сумма по дебету];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 17  ;   ;Credit Amount       ;Decimal       ;CaptionML=[ENU=Credit Amount;
                                                              RUS=Сумма по кредиту];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 18  ;   ;Debit Amount (LCY)  ;Decimal       ;CaptionML=[ENU=Debit Amount (LCY);
                                                              RUS=Сумма по дебету (руб.)];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 19  ;   ;Credit Amount (LCY) ;Decimal       ;CaptionML=[ENU=Credit Amount (LCY);
                                                              RUS=Сумма по кредиту (руб.)];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1 }
    { 20  ;   ;Initial Entry Due Date;Date        ;CaptionML=[ENU=Initial Entry Due Date;
                                                              RUS=Срок оплаты исходной операции] }
    { 21  ;   ;Initial Entry Global Dim. 1;Code20 ;CaptionML=[ENU=Initial Entry Global Dim. 1;
                                                              RUS=Глобал. изм. 1 исходной операции] }
    { 22  ;   ;Initial Entry Global Dim. 2;Code20 ;CaptionML=[ENU=Initial Entry Global Dim. 2;
                                                              RUS=Глобал. изм. 2 исходной операции] }
    { 23  ;   ;Gen. Posting Type   ;Option        ;CaptionML=[ENU=Gen. Posting Type;
                                                              RUS=Общий тип учета];
                                                   OptionCaptionML=[ENU=" ,Purchase,Sale,Settlement";
                                                                    RUS=" ,Покупка,Продажа,Зачет"];
                                                   OptionString=[ ,Purchase,Sale,Settlement] }
    { 24  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              RUS=Общая бизнес-группа] }
    { 25  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              RUS=Общая товарная группа] }
    { 26  ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=[ENU=Tax Area Code;
                                                              RUS=Код налоговой области] }
    { 27  ;   ;Tax Liable          ;Boolean       ;CaptionML=[ENU=Tax Liable;
                                                              RUS=Облагается налогом] }
    { 28  ;   ;Tax Group Code      ;Code10        ;TableRelation="Tax Group";
                                                   CaptionML=[ENU=Tax Group Code;
                                                              RUS=Код налоговой группы] }
    { 29  ;   ;Use Tax             ;Boolean       ;CaptionML=[ENU=Use Tax;
                                                              RUS=Использовать налог] }
    { 30  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              RUS=НДС бизнес-группа] }
    { 31  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              RUS=НДС товарная группа] }
    { 32  ;   ;Additional-Currency Amount;Decimal ;CaptionML=[ENU=Additional-Currency Amount;
                                                              RUS=Сумма (ДОВ)];
                                                   AutoFormatType=1 }
    { 33  ;   ;VAT Amount (LCY)    ;Decimal       ;CaptionML=[ENU=VAT Amount (LCY);
                                                              RUS=Сумма НДС (руб.)];
                                                   AutoFormatType=1 }
    { 34  ;   ;Use Additional-Currency Amount;Boolean;
                                                   CaptionML=[ENU=Use Additional-Currency Amount;
                                                              RUS=Использовать сумму в дополнительной валюте] }
    { 35  ;   ;Initial Document Type;Option       ;CaptionML=[ENU=Initial Document Type;
                                                              RUS=Тип исходного документа];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    RUS=" ,Платеж,Счет,Кредит-нота,Процент-нота,Напоминание,Возмещение"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 36  ;   ;Applied CV Ledger Entry No.;Integer;CaptionML=[ENU=Applied CV Ledger Entry No.;
                                                              RUS=Номер прим. операции книги КП] }
    { 39  ;   ;Remaining Pmt. Disc. Possible;Decimal;
                                                   CaptionML=[ENU=Remaining Pmt. Disc. Possible;
                                                              RUS=Возможный остаток скидки оплаты];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 40  ;   ;Max. Payment Tolerance;Decimal     ;CaptionML=[ENU=Max. Payment Tolerance;
                                                              RUS=Макс. отклонение в оплате];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 41  ;   ;Tax Jurisdiction Code;Code10       ;TableRelation="Tax Jurisdiction";
                                                   CaptionML=[ENU=Tax Jurisdiction Code;
                                                              RUS=Код налоговой юрисдикции];
                                                   Editable=No }
    { 12401;  ;Prepayment          ;Boolean       ;CaptionML=[ENU=Prepayment;
                                                              RUS=Предоплата] }
    { 12402;  ;Initial Transaction No.;Integer    ;CaptionML=[ENU=Initial Transaction No.;
                                                              RUS=Номер начальной транзакции] }
    { 12403;  ;Prepmt. Diff.       ;Boolean       ;CaptionML=[ENU=Prepmt. Diff.;
                                                              RUS=Разница по предоплате];
                                                   Editable=No }
    { 12404;  ;Prepmt. Diff. in TA ;Boolean       ;CaptionML=[ENU=Prepmt. Diff. in TA;
                                                              RUS=Разница по предоплате (НУ)];
                                                   Editable=No }
    { 12409;  ;Applied Amount (LCY);Decimal       ;CaptionML=[ENU=Applied Amount (LCY);
                                                              RUS=Примененная сумма (руб.)] }
    { 12436;  ;Initial Entry Posting Date;Date    ;CaptionML=[ENU=Initial Entry Posting Date;
                                                              RUS=Дата учета исходной операции] }
    { 12490;  ;Agreement No.       ;Code20        ;CaptionML=[ENU=Agreement No.;
                                                              RUS=Номер договора] }
    { 17200;  ;Initial Entry Positive;Boolean     ;CaptionML=[ENU=Initial Entry Positive;
                                                              RUS=Начальная операция положительна] }
    { 50001;  ;Agreement Condition No.;Integer    ;CaptionML=[ENU=Agreement Condition No.;
                                                              RUS=Договор Условие Но.];
                                                   Description=NC MLN03 EB }
    { 50002;  ;Amount Type         ;Option        ;CaptionML=[ENU=Amount Type;
                                                              RUS=Тип Суммы];
                                                   OptionCaptionML=[ENU=" ,Principal,Interest";
                                                                    RUS=" ,Основная сумма,Проценты"];
                                                   OptionString=[ ,Principal,Interest];
                                                   Description=NC MLN03 EB }
    { 50007;  ;Interest Accrual    ;Boolean       ;CaptionML=[ENU=Interest Accrual;
                                                              RUS=Проценты Начисление];
                                                   Description=NC APCOC56 }
    { 52005;  ;Not Translate       ;Boolean       ;CaptionML=[ENU=Not Translate;
                                                              RUS=Не Транслировать];
                                                   Description=NC APCOC-104 DP }
    { 52006;  ;Not Translate IFRS  ;Boolean       ;Description=NC APCOC-117 RD }
    { 55001;  ;Not Consolidate     ;Boolean       ;Description=NC PITR237 EB }
    { 55005;  ;Not G/L Post        ;Boolean       ;CaptionML=[ENU=Not G/L Post;
                                                              RUS=Без фин. учета];
                                                   Description=NC MIO-28 AES }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;CV Ledger Entry No.,Entry Type          ;SumIndexFields=Amount,Amount (LCY),Debit Amount,Credit Amount,Debit Amount (LCY),Credit Amount (LCY) }
    {    ;CV No.,Initial Entry Due Date,Posting Date,Currency Code;
                                                   SumIndexFields=Amount,Amount (LCY),Debit Amount,Credit Amount,Debit Amount (LCY),Credit Amount (LCY) }
    {    ;CV No.,Posting Date,Entry Type,Currency Code;
                                                   SumIndexFields=Amount,Amount (LCY) }
    {    ;CV No.,Initial Document Type,Document Type;
                                                   SumIndexFields=Amount,Amount (LCY) }
    {    ;Document Type,Document No.,Posting Date  }
    {    ;Initial Document Type,CV No.,Posting Date,Currency Code,Entry Type;
                                                   SumIndexFields=Amount,Amount (LCY) }
    { No ;CV No.,Initial Entry Due Date,Posting Date,Initial Entry Global Dim. 1,Initial Entry Global Dim. 2,Currency Code;
                                                   SumIndexFields=Amount,Amount (LCY),Debit Amount,Credit Amount,Debit Amount (LCY),Credit Amount (LCY) }
    { No ;CV No.,Posting Date,Entry Type,Initial Entry Global Dim. 1,Initial Entry Global Dim. 2,Currency Code;
                                                   SumIndexFields=Amount,Amount (LCY) }
    { No ;CV No.,Initial Document Type,Document Type,Initial Entry Global Dim. 1,Initial Entry Global Dim. 2;
                                                   SumIndexFields=Amount,Amount (LCY) }
    { No ;Initial Document Type,CV No.,Posting Date,Currency Code,Entry Type,Initial Entry Global Dim. 1,Initial Entry Global Dim. 2;
                                                   SumIndexFields=Amount,Amount (LCY) }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE InsertDtldCVLedgEntry@53(VAR DtldCVLedgEntryBuf@1000 : Record 383;VAR CVLedgEntryBuf@1001 : Record 382;InsertZeroAmout@1004 : Boolean);
    VAR
      NewDtldCVLedgEntryBuf@1002 : Record 383;
      NextDtldBufferEntryNo@1003 : Integer;
    BEGIN
      IF (DtldCVLedgEntryBuf.Amount = 0) AND
         (DtldCVLedgEntryBuf."Amount (LCY)" = 0) AND
         (DtldCVLedgEntryBuf."VAT Amount (LCY)" = 0) AND
         (DtldCVLedgEntryBuf."Additional-Currency Amount" = 0) AND
         (NOT InsertZeroAmout)
      THEN
        EXIT;

      DtldCVLedgEntryBuf.TESTFIELD("Entry Type" );

      NewDtldCVLedgEntryBuf.INIT;
      NewDtldCVLedgEntryBuf := DtldCVLedgEntryBuf;
      NewDtldCVLedgEntryBuf.Prepayment := CVLedgEntryBuf.Prepayment;

      IF NextDtldBufferEntryNo = 0 THEN BEGIN
        DtldCVLedgEntryBuf.RESET;
        IF DtldCVLedgEntryBuf.FINDLAST THEN
          NextDtldBufferEntryNo := DtldCVLedgEntryBuf."Entry No." + 1
        ELSE
          NextDtldBufferEntryNo := 1;
      END;

      DtldCVLedgEntryBuf.RESET;
      DtldCVLedgEntryBuf.SETRANGE("CV Ledger Entry No.",CVLedgEntryBuf."Entry No.");
      DtldCVLedgEntryBuf.SETRANGE("Entry Type",NewDtldCVLedgEntryBuf."Entry Type");
      DtldCVLedgEntryBuf.SETRANGE("Posting Date",NewDtldCVLedgEntryBuf."Posting Date");
      DtldCVLedgEntryBuf.SETRANGE("Document Type",NewDtldCVLedgEntryBuf."Document Type");
      DtldCVLedgEntryBuf.SETRANGE("Document No.",NewDtldCVLedgEntryBuf."Document No.");
      DtldCVLedgEntryBuf.SETRANGE("CV No.",NewDtldCVLedgEntryBuf."CV No.");
      DtldCVLedgEntryBuf.SETRANGE("Gen. Posting Type",NewDtldCVLedgEntryBuf."Gen. Posting Type");
      DtldCVLedgEntryBuf.SETRANGE(
        "Gen. Bus. Posting Group",NewDtldCVLedgEntryBuf."Gen. Bus. Posting Group");
      DtldCVLedgEntryBuf.SETRANGE(
        "Gen. Prod. Posting Group",NewDtldCVLedgEntryBuf."Gen. Prod. Posting Group");
      DtldCVLedgEntryBuf.SETRANGE(
        "VAT Bus. Posting Group",NewDtldCVLedgEntryBuf."VAT Bus. Posting Group");
      DtldCVLedgEntryBuf.SETRANGE(
        "VAT Prod. Posting Group",NewDtldCVLedgEntryBuf."VAT Prod. Posting Group");
      DtldCVLedgEntryBuf.SETRANGE("Tax Area Code",NewDtldCVLedgEntryBuf."Tax Area Code");
      DtldCVLedgEntryBuf.SETRANGE("Tax Liable",NewDtldCVLedgEntryBuf."Tax Liable");
      DtldCVLedgEntryBuf.SETRANGE("Tax Group Code",NewDtldCVLedgEntryBuf."Tax Group Code");
      DtldCVLedgEntryBuf.SETRANGE("Use Tax",NewDtldCVLedgEntryBuf."Use Tax");
      DtldCVLedgEntryBuf.SETRANGE(
        "Tax Jurisdiction Code",NewDtldCVLedgEntryBuf."Tax Jurisdiction Code");
      DtldCVLedgEntryBuf.SETRANGE(Prepayment,NewDtldCVLedgEntryBuf.Prepayment);
      DtldCVLedgEntryBuf.SETRANGE("Applied CV Ledger Entry No.",NewDtldCVLedgEntryBuf."Applied CV Ledger Entry No.");

      IF DtldCVLedgEntryBuf.FINDFIRST THEN BEGIN
        DtldCVLedgEntryBuf.Amount := DtldCVLedgEntryBuf.Amount + NewDtldCVLedgEntryBuf.Amount;
        DtldCVLedgEntryBuf."Amount (LCY)" :=
          DtldCVLedgEntryBuf."Amount (LCY)" + NewDtldCVLedgEntryBuf."Amount (LCY)";
        DtldCVLedgEntryBuf."VAT Amount (LCY)" :=
          DtldCVLedgEntryBuf."VAT Amount (LCY)" + NewDtldCVLedgEntryBuf."VAT Amount (LCY)";
        DtldCVLedgEntryBuf."Additional-Currency Amount" :=
          DtldCVLedgEntryBuf."Additional-Currency Amount" +
          NewDtldCVLedgEntryBuf."Additional-Currency Amount";
        DtldCVLedgEntryBuf.MODIFY;
      END ELSE BEGIN
        NewDtldCVLedgEntryBuf."Entry No." := NextDtldBufferEntryNo;
        NextDtldBufferEntryNo := NextDtldBufferEntryNo + 1;
        DtldCVLedgEntryBuf := NewDtldCVLedgEntryBuf;
        DtldCVLedgEntryBuf.INSERT;
      END;

      IF NOT DtldCVLedgEntryBuf."Prepmt. Diff. in TA" THEN BEGIN
        CVLedgEntryBuf."Amount to Apply" := NewDtldCVLedgEntryBuf.Amount + CVLedgEntryBuf."Amount to Apply";
        CVLedgEntryBuf."Remaining Amount" := NewDtldCVLedgEntryBuf.Amount + CVLedgEntryBuf."Remaining Amount";
        CVLedgEntryBuf."Remaining Amt. (LCY)" :=
          NewDtldCVLedgEntryBuf."Amount (LCY)" + CVLedgEntryBuf."Remaining Amt. (LCY)";
      END;

      IF DtldCVLedgEntryBuf."Entry Type" = DtldCVLedgEntryBuf."Entry Type"::"Initial Entry" THEN BEGIN
        CVLedgEntryBuf."Original Amount" := NewDtldCVLedgEntryBuf.Amount;
        CVLedgEntryBuf."Original Amt. (LCY)" := NewDtldCVLedgEntryBuf."Amount (LCY)";
      END;
      DtldCVLedgEntryBuf.RESET;
    END;

    PROCEDURE CopyPostingGroupsFromVATEntry@1(VATEntry@1000 : Record 254);
    BEGIN
      "Gen. Posting Type" := VATEntry.Type;
      "Gen. Bus. Posting Group" := VATEntry."Gen. Bus. Posting Group";
      "Gen. Prod. Posting Group" := VATEntry."Gen. Prod. Posting Group";
      "VAT Bus. Posting Group" := VATEntry."VAT Bus. Posting Group";
      "VAT Prod. Posting Group" := VATEntry."VAT Prod. Posting Group";
      "Tax Area Code" := VATEntry."Tax Area Code";
      "Tax Liable" := VATEntry."Tax Liable";
      "Tax Group Code" := VATEntry."Tax Group Code";
      "Use Tax" := VATEntry."Use Tax";
    END;

    PROCEDURE CopyFromGenJnlLine@2(GenJnlLine@1000 : Record 81);
    BEGIN
      "Entry Type" := "Entry Type"::"Initial Entry";
      "Posting Date" := GenJnlLine."Posting Date";
      "Document Type" := GenJnlLine."Document Type";
      "Document No." := GenJnlLine."Document No.";
      Amount := GenJnlLine.Amount;
      "Amount (LCY)" := GenJnlLine."Amount (LCY)";
      "Additional-Currency Amount" := GenJnlLine.Amount;
      "CV No." := GenJnlLine."Account No.";
      "Currency Code" := GenJnlLine."Currency Code";
      "User ID" := USERID;
      "Initial Entry Due Date" := GenJnlLine."Due Date";
      "Initial Entry Global Dim. 1" := GenJnlLine."Shortcut Dimension 1 Code";
      "Initial Entry Global Dim. 2" := GenJnlLine."Shortcut Dimension 2 Code";
      "Initial Document Type" := GenJnlLine."Document Type";
      "Initial Entry Posting Date" := GenJnlLine."Posting Date";
      "Initial Entry Positive" := GenJnlLine.Amount > 0;
    END;

    PROCEDURE InitFromGenJnlLine@7(GenJnlLine@1001 : Record 81);
    BEGIN
      INIT;
      "Posting Date" := GenJnlLine."Posting Date";
      "Document Type" := GenJnlLine."Document Type";
      "Document No." := GenJnlLine."Document No.";
      "User ID" := USERID;
    END;

    PROCEDURE CopyFromCVLedgEntryBuf@20(CVLedgEntryBuf@1001 : Record 382);
    VAR
      GLSetup@1210000 : Record 98;
    BEGIN
      "CV Ledger Entry No." := CVLedgEntryBuf."Entry No.";
      "CV No." := CVLedgEntryBuf."CV No.";
      "Currency Code" := CVLedgEntryBuf."Currency Code";
      "Initial Entry Due Date" := CVLedgEntryBuf."Due Date";
      "Initial Entry Global Dim. 1" := CVLedgEntryBuf."Global Dimension 1 Code";
      "Initial Entry Global Dim. 2" := CVLedgEntryBuf."Global Dimension 2 Code";
      "Initial Document Type" := CVLedgEntryBuf."Document Type";
      "Initial Entry Posting Date" := CVLedgEntryBuf."Posting Date";
      "Initial Entry Positive" := CVLedgEntryBuf.Positive;
      "Applied CV Ledger Entry No." := CVLedgEntryBuf."Entry No.";
      // TODO - copy of Document Type and No. breaks some W1 tests
      // Need to investigate why we need this change for RU
      GLSetup.GET;
      IF GLSetup."Enable Russian Accounting" THEN BEGIN
        "Document Type" := CVLedgEntryBuf."Document Type";
        "Document No." := CVLedgEntryBuf."Document No.";
      END;
    END;

    PROCEDURE InitDtldCVLedgEntryBuf@26(GenJnlLine@1000 : Record 81;VAR CVLedgEntryBuf@1001 : Record 382;VAR DtldCVLedgEntryBuf@1002 : Record 383;EntryType@1009 : Option;AmountFCY@1003 : Decimal;AmountLCY@1004 : Decimal;AmountAddCurr@1005 : Decimal;AppliedEntryNo@1006 : Integer;RemainingPmtDiscPossible@1007 : Decimal;MaxPaymentTolerance@1008 : Decimal);
    VAR
      MovingDataSetup@1101495000 : Record 50064;
      GLSetup@1101495001 : Record 98;
    BEGIN
      WITH DtldCVLedgEntryBuf DO BEGIN
        InitFromGenJnlLine(GenJnlLine);
        CopyFromCVLedgEntryBuf(CVLedgEntryBuf);
        "Entry Type" := EntryType;
        Amount := AmountFCY;
        "Amount (LCY)" := AmountLCY;
        "Additional-Currency Amount" := AmountAddCurr;
        "Applied CV Ledger Entry No." := AppliedEntryNo;
        "Remaining Pmt. Disc. Possible" := RemainingPmtDiscPossible;
        "Max. Payment Tolerance" := MaxPaymentTolerance;

        //Nc TR237 > EB
        "Not Consolidate" := GLSetup."Not Consolidate Exch. Diff.";
        //Nc TR237 < EB

        //NC APCOC-104 > DP
        MovingDataSetup.GET;
        "Not Translate" := MovingDataSetup."Not Translate Applications";
        //NC APCOC-104 < DP
        //NC APCOC-117 > RD
        "Not Translate IFRS" := MovingDataSetup."Not Transl. Applications IFRS";

        GLSetup.GET; // NC NOS-26 SPA
        //NC MIO-28 > DP
        IF ("Posting Date" >= GLSetup."Not Post FX G/L from Date") AND
          (GLSetup."Not Post FX G/L from Date" <> 0D)
        THEN
          "Not G/L Post" := TRUE;  // NC MIO-28 AES
        //NC MIO-28 < DP
        //NC APCOC-117 < RD
        InsertDtldCVLedgEntry(DtldCVLedgEntryBuf,CVLedgEntryBuf,FALSE);
      END;
    END;

    PROCEDURE FindVATEntry@3(VAR VATEntry@1000 : Record 254;TransactionNo@1001 : Integer);
    BEGIN
      VATEntry.RESET;
      VATEntry.SETCURRENTKEY("Transaction No.");
      VATEntry.SETRANGE("Transaction No.",TransactionNo);
      VATEntry.SETRANGE("VAT Bus. Posting Group","VAT Bus. Posting Group");
      VATEntry.SETRANGE("VAT Prod. Posting Group","VAT Prod. Posting Group");
      VATEntry.FINDFIRST;
    END;

    BEGIN
    {
      NC TR237 EB поле Not Consolidate
      NC MLN03 EB поля Agreement Condition No., Amount Type
      NC APCOC-117 RD Добавлено поле Not Translate IFRS
      NC MIO-28 AES Отключить формирование операций в G/L Entry при формировании переоценок
        Новое поле: "Not G/L Post"
    }
    END.
  }
}

