OBJECT Table 50092 Rename Journal
{
  OBJECT-PROPERTIES
  {
    Date=13.07.17;
    Time=16:35:26;
    Modified=Yes;
    Version List=NOS-26;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    CaptionML=[ENU=Rename Journal;
               RUS=Журнал Переименований];
    LookupPageID=Page50154;
    DrillDownPageID=Page50154;
  }
  FIELDS
  {
    { 1   ;   ;Company Name        ;Text30        ;TableRelation=Company.Name;
                                                   ValidateTableRelation=Yes;
                                                   TestTableRelation=Yes;
                                                   CaptionML=[ENU=Company Name;
                                                              RUS=Название Фирмы] }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              RUS=Строка Но.] }
    { 5   ;   ;Id External System  ;Text2         ;CaptionML=[ENU=Id External System;
                                                              RUS=Id Внешней Системы] }
    { 15  ;   ;Time Creation       ;DateTime      ;CaptionML=[ENU=Time Creation;
                                                              RUS=Время Создания] }
    { 25  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              RUS=Статус];
                                                   OptionCaptionML=[ENU=New,Processing Complete,Processing Canceled,Canceled Manualy,Canceled Automatic;
                                                                    RUS=Новый,Обработка Завершена,Обработка Отменена,Ручная Отмена,Автоматическая Отмена];
                                                   OptionString=New,Processing Complete,Processing Canceled,Canceled Manualy,Canceled Automatic }
    { 30  ;   ;Time Complete       ;DateTime      ;CaptionML=[ENU=Time Complete;
                                                              RUS=Время Завершения Обработки] }
    { 50  ;   ;Delay               ;Boolean       ;CaptionML=[ENU=Delay;
                                                              RUS=Отложено] }
    { 51  ;   ;Delay (Tech.)       ;Boolean       ;CaptionML=[ENU=Delay (Tech.);
                                                              RUS=Отложено (Технич.)] }
    { 55  ;   ;Delay Error Line No.;Integer       ;TableRelation="Error Journal"."Entry No." WHERE (Company Name=FIELD(Company Name),
                                                                                                    Error Group=CONST(Rename));
                                                   CaptionML=[ENU=Delay Error Line No.;
                                                              RUS=Отложено Ошибка Строка Но.] }
    { 60  ;   ;Delay Error Code    ;Code10        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Error Journal"."Error Code" WHERE (Company Name=FIELD(Company Name),
                                                                                                          Error Group=CONST(Rename),
                                                                                                          Entry No.=FIELD(Delay Error Line No.)));
                                                   CaptionML=[ENU=Delay Error Code;
                                                              RUS=Отложено Код Ошибки];
                                                   Editable=No }
    { 65  ;   ;Delay Description   ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Error Journal".Description WHERE (Company Name=FIELD(Company Name),
                                                                                                         Error Group=CONST(Rename),
                                                                                                         Entry No.=FIELD(Delay Error Line No.)));
                                                   CaptionML=[ENU=Delay Description;
                                                              RUS=Отложено Описание];
                                                   Editable=No }
    { 50000;  ;Table No.           ;Integer       ;TableRelation=Object.ID WHERE (Type=FILTER(Table));
                                                   CaptionML=[ENU=Table No.;
                                                              RUS=Таблица Но.] }
    { 50005;  ;Table Name          ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=FILTER(Table),
                                                                                         ID=FIELD(Table No.)));
                                                   CaptionML=[ENU=Table Name;
                                                              RUS=Таблица Название];
                                                   Editable=No }
    { 50010;  ;Object Code         ;Code20        ;CaptionML=[ENU=Object Code;
                                                              RUS=Объект Код] }
    { 50015;  ;Code                ;Code20        ;CaptionML=[ENU=Code;
                                                              RUS=Код] }
    { 50020;  ;Code New            ;Code20        ;CaptionML=[ENU=Code New;
                                                              RUS=Код Новый] }
    { 50021;  ;Rec ID              ;Code40        ;CaptionML=[ENU=Rec ID;
                                                              RUS=ID Записи];
                                                   Description=NC S547 PCH }
    { 50025;  ;User ID             ;Code20        ;TableRelation=Table2000000002;
                                                   OnLookup=VAR
                                                              LoginMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              LoginMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              RUS=Код Пользователя] }
  }
  KEYS
  {
    {    ;Company Name,Line No.                   ;Clustered=Yes }
    {    ;Status                                   }
    {    ;Status,Time Creation                     }
    {    ;Status,Delay                             }
    {    ;Status,Code                              }
    {    ;Status,Code New                          }
    {    ;Status,Table No.,Object Code,Code,Code New }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      TextEDB01@1000000000 : TextConst 'ENU=In the process of implementation %1 error occurred. %2 Processing stopped.;RUS=В процессе выполнения %1 возникла ошибка. %2 Обработка прекращена.';
      TextEDB01_1@1000000001 : TextConst 'ENU=In the process of implementation %1 error occurred. %2 Processing delayed.;RUS=В процессе выполнения %1 возникла ошибка. %2 Обработка отложена.';
      LoadElementReference@1000000002 : Codeunit 50013;
      Text001@1000000003 : TextConst 'ENU=Table № %1 is not processed.;RUS=Таблица № %1 не обрабатывается.';
      ChangLogMgt@1000000004 : Codeunit 423;
      RenameElementRef@1000000005 : Codeunit 50029;

    PROCEDURE AddRename@1000000019(CompanyName@1000000000 : Text[30]);
    BEGIN
      INIT;
      "Company Name" := CompanyName;
      "Line No." := GetLastLineNo(CompanyName);

      "Time Creation" := CURRENTDATETIME;
      Status := Status::New;

      INSERT;
    END;

    PROCEDURE GetLastLineNo@1000000003(CompanyName@1000000001 : Text[30]) LastLineNo : Integer;
    VAR
      RenameJournal@1000000002 : Record 50092;
    BEGIN
      RenameJournal.RESET;
      RenameJournal.SETRANGE("Company Name",CompanyName);
      IF RenameJournal.FINDLAST THEN
        LastLineNo := RenameJournal."Line No." + 1
      ELSE
        LastLineNo := 1;
    END;

    PROCEDURE AddCust@1000000000(CompanyName@1000000001 : Text[30];BefferCust@1000000000 : Record 50045);
    BEGIN
      AddRename(CompanyName);
      "Id External System" := BefferCust."Id External System";
      "Table No." := DATABASE::Customer;
      Code := BefferCust."No.";
      //NC S547 > PCH
      "Rec ID" := BefferCust."Rec ID";
      //NC S547 < PCH
      "Code New" := BefferCust."No. New";
      MODIFY;
    END;

    PROCEDURE AddVend@1101495000(CompanyName@1000000001 : Text[30];BefferVend@1000000000 : Record 50118);
    BEGIN
      //NC MTF01 > PCH
      AddRename(CompanyName);
      "Id External System" := BefferVend."Id External System";
      "Table No." := DATABASE::Vendor;
      Code := BefferVend."No.";
      //NC S547 > PCH
      "Rec ID" := BefferVend."Rec ID";
      //NC S547 < PCH
      "Code New" := BefferVend."No. New";
      MODIFY;
      //NC MTF01 < PCH
    END;

    PROCEDURE AddFI@1000000006(CompanyName@1000000001 : Text[30];BefferFI@1000000000 : Record 50052);
    BEGIN
      AddRename(CompanyName);
      "Id External System" := BefferFI."Id External System";
      "Table No." := DATABASE::"Financial Instrument";
      Code := BefferFI."No.";
      //NC S547 > PCH
      "Rec ID" := BefferFI."Rec ID";
      //NC S547 < PCH
      "Code New" := BefferFI."No. New";
      MODIFY;
    END;

    PROCEDURE AddDeal@1000000008(CompanyName@1000000001 : Text[30];BefferDeal@1000000000 : Record 50036);
    BEGIN
      AddRename(CompanyName);
      "Id External System" := BefferDeal."Id External System";
      "Table No." := DATABASE::Deal;
      Code := BefferDeal."Deal ID";
      //NC S547 > PCH
      "Rec ID" := BefferDeal."Rec ID";
      //NC S547 < PCH
      "Code New" := BefferDeal."Deal ID New";
      MODIFY;
    END;

    PROCEDURE AddBankAcc@1000000009(CompanyName@1000000001 : Text[30];BefferBankAcc@1000000000 : Record 50053);
    BEGIN
      AddRename(CompanyName);
      "Id External System" := BefferBankAcc."Id External System";
      "Table No." := DATABASE::"Bank Account";
      Code := BefferBankAcc."No.";
      //NC S547 > PCH
      "Rec ID" := BefferBankAcc."Rec ID";
      //NC S547 < PCH
      "Code New" := BefferBankAcc."No. New";
      MODIFY;
    END;

    PROCEDURE AddStock@1000000010(CompanyName@1000000001 : Text[30];BefferStock@1000000000 : Record 50041);
    BEGIN
      AddRename(CompanyName);
      "Id External System" := BefferStock."Id External System";
      "Table No." := DATABASE::"Stock Exchange";
      Code := BefferStock.Code;
      //NC S547 > PCH
      "Rec ID" := BefferStock."Rec ID";
      //NC S547 < PCH
      "Code New" := BefferStock."Code New";
      MODIFY;
    END;

    PROCEDURE AddCountry@1000000011(CompanyName@1000000001 : Text[30];BefferCountry@1000000000 : Record 50059);
    BEGIN
      AddRename(CompanyName);
      "Id External System" := BefferCountry."Id External System";
      "Table No." := DATABASE::"Country/Region";
      Code := BefferCountry.Code;
      //NC S547 > PCH
      "Rec ID" := BefferCountry."Rec ID";
      //NC S547 < PCH
      "Code New" := BefferCountry."Code New";
      MODIFY;
    END;

    PROCEDURE AddIndustry@1000000012(CompanyName@1000000001 : Text[30];BefferIndustry@1000000000 : Record 50060);
    BEGIN
      AddRename(CompanyName);
      "Id External System" := BefferIndustry."Id External System";
      "Table No." := DATABASE::"Industry Group";
      Code := BefferIndustry.Code;
      //NC S547 > PCH
      "Rec ID" := BefferIndustry."Rec ID";
      //NC S547 < PCH
      "Code New" := BefferIndustry."Code New";
      MODIFY;
    END;

    PROCEDURE AddDimValue@1000000013(CompanyName@1000000001 : Text[30];BefferDimValue@1000000000 : Record 50054);
    BEGIN
      AddRename(CompanyName);
      "Id External System" := BefferDimValue."Id External System";
      "Table No." := DATABASE::"Dimension Value";
      "Object Code" := BefferDimValue."Dimension Code";
      Code := BefferDimValue.Code;
      //NC S547 > PCH
      "Rec ID" := BefferDimValue."Rec ID";
      //NC S547 < PCH
      "Code New" := BefferDimValue."Code New";
      MODIFY;
    END;

    PROCEDURE RunRename@1000000001();
    VAR
      Customer@1000000000 : Record 18;
      Vendor@1101495000 : Record 23;
      FinancialInstrument@1000000001 : Record 50021;
      Deal@1000000002 : Record 50037;
      BankAccount@1000000003 : Record 270;
      StockExchange@1000000004 : Record 50042;
      IndustryGroup@1000000005 : Record 5057;
      DimensionValue@1000000006 : Record 349;
      RecRef@1000000007 : RecordRef;
      xRecRef@1000000008 : RecordRef;
    BEGIN
      IF "Company Name" <> '' THEN
        TESTFIELD("Company Name",COMPANYNAME);
      TESTFIELD(Code);
      CASE "Table No." OF
        //NC MTF01 > PCH
        DATABASE::Vendor : BEGIN
          TESTFIELD("Code New");
          //NC S547 > PCH
          IF "Rec ID" <> '' THEN BEGIN
            Vendor.RESET;
            Vendor.SETRANGE("Rec ID","Rec ID");
            IF NOT Vendor.FINDFIRST THEN
              Vendor.GET(Code);
            Vendor.RESET;
          END ELSE
          //NC S547 < PCH
            Vendor.GET(Code);
          xRecRef.GETTABLE(Vendor);
          Vendor.RENAME("Code New");
          RecRef.GETTABLE(Vendor);
        END;
        //NC MTF01 < PCH
        DATABASE::Customer : BEGIN
          TESTFIELD("Code New");
          //NC S547 > PCH
          IF "Rec ID" <> '' THEN BEGIN
            Customer.RESET;
            Customer.SETRANGE("Rec ID","Rec ID");
            IF NOT Customer.FINDFIRST THEN
              Customer.GET(Code);
            Customer.RESET;
          END ELSE
          //NC S547 < PCH
            Customer.GET(Code);
          xRecRef.GETTABLE(Customer);
          Customer.RENAME("Code New");
          RecRef.GETTABLE(Customer);
        END;
        DATABASE::"Financial Instrument" : BEGIN
          TESTFIELD("Code New");
          //NC S547 > PCH
          IF "Rec ID" <> '' THEN BEGIN
            FinancialInstrument.RESET;
            FinancialInstrument.SETRANGE("Rec ID","Rec ID");
            IF NOT FinancialInstrument.FINDFIRST THEN
              FinancialInstrument.GET(Code);
            FinancialInstrument.RESET;
          END ELSE
          //NC S547 < PCH
            FinancialInstrument.GET(Code);
          xRecRef.GETTABLE(FinancialInstrument);
          FinancialInstrument.RENAME("Code New");
          RecRef.GETTABLE(FinancialInstrument);
        END;
        DATABASE::Deal : BEGIN
          TESTFIELD("Code New");
          //NC S547 > PCH
          IF "Rec ID" <> '' THEN BEGIN
            Deal.RESET;
            Deal.SETRANGE("Rec ID","Rec ID");
            IF NOT Deal.FINDFIRST THEN
              Deal.GET(Code);
            Deal.RESET;
          END ELSE
          //NC S547 < PCH
            Deal.GET(Code);
          xRecRef.GETTABLE(Deal);
          Deal.RENAME("Code New");
          RecRef.GETTABLE(Deal);
        END;
        DATABASE::"Bank Account" : BEGIN
          TESTFIELD("Code New");
          //NC S547 > PCH
          IF "Rec ID" <> '' THEN BEGIN
            BankAccount.RESET;
            BankAccount.SETRANGE("Rec ID","Rec ID");
            IF NOT BankAccount.FINDFIRST THEN
              BankAccount.GET(Code);
            BankAccount.RESET;
          END ELSE
          //NC S547 < PCH
            BankAccount.GET(Code);
          xRecRef.GETTABLE(BankAccount);
          BankAccount.RENAME("Code New");
          RecRef.GETTABLE(BankAccount);
        END;
        DATABASE::"Stock Exchange" : BEGIN
          TESTFIELD("Code New");
          //NC S547 > PCH
          IF "Rec ID" <> '' THEN BEGIN
            StockExchange.RESET;
            StockExchange.SETRANGE("Rec ID","Rec ID");
            IF NOT StockExchange.FINDFIRST THEN
              StockExchange.GET(Code);
            StockExchange.RESET;
          END ELSE
          //NC S547 < PCH
            StockExchange.GET(Code);
          xRecRef.GETTABLE(StockExchange);
          StockExchange.RENAME("Code New");
          RecRef.GETTABLE(StockExchange);
        END;
        DATABASE::"Industry Group" : BEGIN
          TESTFIELD("Code New");
          //NC S547 > PCH
          IF "Rec ID" <> '' THEN BEGIN
            IndustryGroup.RESET;
            IndustryGroup.SETRANGE("Rec ID","Rec ID");
            IF NOT IndustryGroup.FINDFIRST THEN
              IndustryGroup.GET(Code);
            IndustryGroup.RESET;
          END ELSE
          //NC S547 < PCH
            IndustryGroup.GET(Code);
          xRecRef.GETTABLE(IndustryGroup);
          IndustryGroup.RENAME("Code New");
          RecRef.GETTABLE(IndustryGroup);
        END;
        DATABASE::"Dimension Value" : BEGIN
          TESTFIELD("Object Code");
          TESTFIELD("Code New");
          //NC S547 > PCH
          IF "Rec ID" <> '' THEN BEGIN
            DimensionValue.RESET;
            DimensionValue.SETRANGE("Dimension Code","Object Code");
            DimensionValue.SETRANGE("Rec ID","Rec ID");
            IF NOT DimensionValue.FINDFIRST THEN
              DimensionValue.GET(Code);
            DimensionValue.RESET;
          END ELSE
          //NC S547 < PCH
            DimensionValue.GET("Object Code",Code);
          xRecRef.GETTABLE(DimensionValue);
          DimensionValue.RENAME("Object Code","Code New");
          RecRef.GETTABLE(DimensionValue);
        END;
        ELSE
          ERROR(Text001,"Table No.");
      END;
      Status := Status::"Processing Complete";
      "Time Complete" := CURRENTDATETIME;
      "User ID" := USERID;
      MODIFY;
      //ChangLogMgt.LogRename(RecRef,xRecRef);
    END;

    PROCEDURE RunCorrection@1000000002();
    VAR
      Customer@1000000006 : Record 18;
      Vendor@1101495000 : Record 23;
      FinancialInstrument@1000000005 : Record 50021;
      Deal@1000000004 : Record 50037;
      BankAccount@1000000003 : Record 270;
      StockExchange@1000000002 : Record 50042;
      IndustryGroup@1000000001 : Record 5057;
      DimensionValue@1000000000 : Record 349;
      MovingDataSetup@1000000007 : Record 50064;
    BEGIN
      MovingDataSetup.GET;
      IF "Company Name" <> '' THEN
        TESTFIELD("Company Name",COMPANYNAME);
      TESTFIELD(Code);
      TESTFIELD(Status,Status::"Processing Complete");
      CASE "Table No." OF
        DATABASE::Customer : BEGIN
          TESTFIELD("Code New");
          Customer.GET("Code New");
          RenameElementRef.RenameDimValueInBuffer(MovingDataSetup."Customer Dimension Code",Code,"Code New");
          RenameElementRef.RenameDimValueInBuffer(MovingDataSetup."Real Counterparty Dim. Code",Code,"Code New");
        END;
        //NC MTF01 > PCH
        DATABASE::Vendor : BEGIN
          TESTFIELD("Code New");
          Vendor.GET("Code New");
          RenameElementRef.RenameDimValueInBuffer(MovingDataSetup."Customer Dimension Code",Code,"Code New");
          RenameElementRef.RenameDimValueInBuffer(MovingDataSetup."Real Counterparty Dim. Code",Code,"Code New");
        END;
        //NC MTF01 < PCH
        DATABASE::"Financial Instrument" : BEGIN
          TESTFIELD("Code New");
          FinancialInstrument.GET("Code New");
          RenameElementRef.RenameDimValueInBuffer(MovingDataSetup."FI Dimension Code",Code,"Code New");
        END;
        DATABASE::Deal : BEGIN
          TESTFIELD("Code New");
          Deal.GET("Code New");
          RenameElementRef.RenameDimValueInBuffer(MovingDataSetup."Deal Dimension Code",Code,"Code New");
        END;
        DATABASE::"Bank Account" : BEGIN
          TESTFIELD("Code New");
          BankAccount.GET("Code New");
          RenameElementRef.RenameDimValueInBuffer(MovingDataSetup."Bank Account Dimension Code",Code,"Code New");
        END;
        DATABASE::"Stock Exchange" : BEGIN
          ;
        END;
        DATABASE::"Industry Group" : BEGIN
          ;
        END;
        DATABASE::"Dimension Value" : BEGIN
          TESTFIELD("Object Code");
          TESTFIELD("Code New");
          DimensionValue.GET("Object Code","Code New");
          RenameElementRef.RenameDimValueInBuffer("Object Code",Code,"Code New");
        END;
        ELSE
          ERROR(Text001,"Table No.");
      END;
    END;

    BEGIN
    {
      NC MDM03 PCH
      NC S547 PCH добавлено поле Rec ID
    }
    END.
  }
}

