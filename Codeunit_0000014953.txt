OBJECT Codeunit 14953 FA-4 Report Helper
{
  OBJECT-PROPERTIES
  {
    Date=09.09.14;
    Time=12:00:00;
    Version List=NAVRU8.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ExcelReportBuilderManager@1210000 : Codeunit 14930;
      StdRepMgt@1210001 : Codeunit 12401;
      ConcTotalAmount@1210003 : Decimal;

    PROCEDURE InitReportTemplate@1210001(ReportID@1210001 : Integer);
    VAR
      FASetup@1210000 : Record 5603;
    BEGIN
      FASetup.GET;
      CASE ReportID OF
        REPORT::"FA Write-off Act FA-4",REPORT::"FA Posted Writeoff Act FA-4":
          BEGIN
            FASetup.TESTFIELD("FA-4 Template Code");
            ExcelReportBuilderManager.InitTemplate(FASetup."FA-4 Template Code");
          END;
        REPORT::"FA Writeoff Act FA-4a",REPORT::"Posted FA Writeoff Act FA-4a":
          BEGIN
            FASetup.TESTFIELD("FA-4a Template Code");
            ExcelReportBuilderManager.InitTemplate(FASetup."FA-4a Template Code");
          END;
      END;
    END;

    PROCEDURE SetDocSheet@1210011();
    BEGIN
      ExcelReportBuilderManager.SetSheet('Sheet1');
    END;

    PROCEDURE SetAssetSheet@1210014();
    BEGIN
      ExcelReportBuilderManager.SetSheet('Sheet2');
    END;

    PROCEDURE SetExpSheet@1210016();
    BEGIN
      ExcelReportBuilderManager.SetSheet('Sheet3');
    END;

    PROCEDURE FillHeader@1210000(EmployeeDepartment@1210005 : Text;EmployeeName@1210010 : Text;Reason@1210000 : Text;FAPostingDate@1210002 : Text;ReasonDocNo@1210003 : Text;ReasonDocDate@1210004 : Text;FAEmployeeNo@1210011 : Text;DirectorPosition@1210006 : Text;DocNo@1210007 : Text;DocDate@1210008 : Text;PostingDescription@1210009 : Text);
    VAR
      CompanyInfo@1210001 : Record 79;
    BEGIN
      CompanyInfo.GET;
      ExcelReportBuilderManager.AddSection('REPORTHEADER');
      ExcelReportBuilderManager.AddDataToSection(
        'CompanyName',StdRepMgt.GetCompanyName);
      ExcelReportBuilderManager.AddDataToSection(
        'CodeOKPO',CompanyInfo."OKPO Code");
      ExcelReportBuilderManager.AddDataToSection(
        'ChiefName',CompanyInfo."Director Name");

      ExcelReportBuilderManager.AddDataToSection('DepartamentName',EmployeeDepartment);
      ExcelReportBuilderManager.AddDataToSection('EmplName',EmployeeName);
      ExcelReportBuilderManager.AddDataToSection('Reason',Reason);
      ExcelReportBuilderManager.AddDataToSection('FromBusinessAccount',FAPostingDate);
      ExcelReportBuilderManager.AddDataToSection('ReasonDocNo',ReasonDocNo);
      ExcelReportBuilderManager.AddDataToSection('ReasonDocDate',ReasonDocDate);
      ExcelReportBuilderManager.AddDataToSection('EmplID',FAEmployeeNo);
      ExcelReportBuilderManager.AddDataToSection('ChiefPost',DirectorPosition);
      ExcelReportBuilderManager.AddDataToSection('ActNumber',DocNo);
      ExcelReportBuilderManager.AddDataToSection('ActDate',DocDate);
      ExcelReportBuilderManager.AddDataToSection('PostingDescription',PostingDescription);
    END;

    PROCEDURE FillHeader2@1210018(EmployeeDepartment@1210005 : Text;FAPostingDate@1210002 : Text;AcqCostAccount@1210004 : Text;DirectorPosition@1210006 : Text;DocNo@1210007 : Text;DocDate@1210008 : Text;FactoryNo@1210010 : Text;VehicleRegNo@1210011 : Text;InventoryNumber@1210012 : Text;VehicleDescription@1210013 : Text;PostingDescription@1210009 : Text;EmployeePosition@1210014 : Text;EmployeeName@1210003 : Text;FAEmployeeNo@1210000 : Text);
    VAR
      CompanyInfo@1210001 : Record 79;
    BEGIN
      CompanyInfo.GET;
      ExcelReportBuilderManager.AddSection('REPORTHEADER');
      ExcelReportBuilderManager.AddDataToSection(
        'CompanyName',StdRepMgt.GetCompanyName);
      ExcelReportBuilderManager.AddDataToSection(
        'CodeOKPO',CompanyInfo."OKPO Code");
      ExcelReportBuilderManager.AddDataToSection(
        'ChiefName',CompanyInfo."Director Name");

      ExcelReportBuilderManager.AddDataToSection('DepartamentName',EmployeeDepartment);
      ExcelReportBuilderManager.AddDataToSection('EmplName',EmployeeName);
      ExcelReportBuilderManager.AddDataToSection('FromBusinessAccount',FAPostingDate);
      ExcelReportBuilderManager.AddDataToSection('ControlAccount',AcqCostAccount);
      ExcelReportBuilderManager.AddDataToSection('ChiefPost',DirectorPosition);
      ExcelReportBuilderManager.AddDataToSection('ActNumber',DocNo);
      ExcelReportBuilderManager.AddDataToSection('ActDate',DocDate);
      ExcelReportBuilderManager.AddDataToSection('AssetSerialNum',FactoryNo);
      ExcelReportBuilderManager.AddDataToSection('AssetRegNum',VehicleRegNo);
      ExcelReportBuilderManager.AddDataToSection('AssetAccountNum',InventoryNumber);
      ExcelReportBuilderManager.AddDataToSection('AssetName',VehicleDescription);
      ExcelReportBuilderManager.AddDataToSection('PostingDescription',PostingDescription);
      ExcelReportBuilderManager.AddDataToSection('EmplTitle',EmployeePosition);
      ExcelReportBuilderManager.AddDataToSection('EmplName',EmployeeName);
      ExcelReportBuilderManager.AddDataToSection('EmplID',FAEmployeeNo);
    END;

    PROCEDURE FillConclusionHeader@1210017(Conclusion1@1210000 : Text;Conclusion2@1210001 : Text;Appendix1@1210002 : Text;Appendix2@1210003 : Text;Chairman@1210009 : Text;ChairmanName@1210008 : Text;Member1@1210007 : Text;Member1Name@1210006 : Text;Member2@1210005 : Text;Member2Name@1210004 : Text);
    BEGIN
      ExcelReportBuilderManager.AddSection('CONCLUSIONHEADER');
      ExcelReportBuilderManager.AddDataToSection('Conclusion1',Conclusion1);
      ExcelReportBuilderManager.AddDataToSection('Conclusion2',Conclusion2);
      ExcelReportBuilderManager.AddDataToSection('Appendix1',Appendix1);
      ExcelReportBuilderManager.AddDataToSection('Appendix2',Appendix2);
      ExcelReportBuilderManager.AddDataToSection('Chairman',Chairman);
      ExcelReportBuilderManager.AddDataToSection('ChairmanName',ChairmanName);
      ExcelReportBuilderManager.AddDataToSection('Member1',Member1);
      ExcelReportBuilderManager.AddDataToSection('Member1Name',Member1Name);
      ExcelReportBuilderManager.AddDataToSection('Member2',Member2);
      ExcelReportBuilderManager.AddDataToSection('Member2Name',Member2Name);

      ConcTotalAmount := 0;
    END;

    PROCEDURE FillAssetHeader@1210021();
    BEGIN
      ExcelReportBuilderManager.AddSection('ASSETHEADER');
    END;

    PROCEDURE FillStatePageHeader@1210007();
    BEGIN
      ExcelReportBuilderManager.AddSection('STATEPAGEHEADER');
    END;

    PROCEDURE FillAssetPageHeader@1210003();
    BEGIN
      ExcelReportBuilderManager.AddSection('ASSETPAGEHEADER');
    END;

    PROCEDURE FillConclusionPageHeader@1210009();
    BEGIN
      ExcelReportBuilderManager.AddSection('CONCLUSIONPAGEHEADER');
    END;

    PROCEDURE FillStateLine@1210006(Description@1210000 : Text;InventoryNumber@1210001 : Text;FactoryNo@1210002 : Text;ManufacturingYear@1210003 : Text;InitialReleaseDate@1210004 : Text;FactYears@1210005 : Text;AcquisitionCost@1210006 : Text;Depreciation@1210007 : Text;BookValue@1210008 : Text);
    BEGIN
      TryAddBodySection;

      ExcelReportBuilderManager.AddDataToSection('AssetName',Description);
      ExcelReportBuilderManager.AddDataToSection('AssetAccountNum',InventoryNumber);
      ExcelReportBuilderManager.AddDataToSection('AssetSerialNum',FactoryNo);
      ExcelReportBuilderManager.AddDataToSection('AssetGuaranteeDate',ManufacturingYear);
      ExcelReportBuilderManager.AddDataToSection('ToBusinessAccount',InitialReleaseDate);
      ExcelReportBuilderManager.AddDataToSection('ObservedLife',FactYears);
      ExcelReportBuilderManager.AddDataToSection('AcquisitionPrice',AcquisitionCost);
      ExcelReportBuilderManager.AddDataToSection('AmountDepreciation',Depreciation);
      ExcelReportBuilderManager.AddDataToSection('DeprCost',BookValue);
    END;

    PROCEDURE FillStateLine2@1210019(ManufacturingYear@1210000 : Text;AcqDate@1210001 : Text;GLAcqDate@1210002 : Text;IsVehicle@1210003 : Text;VehicleWriteoffDate@1210004 : Text;RunAfterReleaseDate@1210005 : Text;RunAfterRenovationDate@1210006 : Text;InitialAcqCost@1210007 : Text;Depreciation@1210008 : Text;BookValue@1210009 : Text);
    BEGIN
      TryAddBodySection;
      ExcelReportBuilderManager.AddDataToSection('AssetGuaranteeDate',ManufacturingYear);
      ExcelReportBuilderManager.AddDataToSection('AcquisitionDate',AcqDate);
      ExcelReportBuilderManager.AddDataToSection('ToBusinessAccount',GLAcqDate);
      ExcelReportBuilderManager.AddDataToSection('DateRevaluationLast',IsVehicle);
      ExcelReportBuilderManager.AddDataToSection('VehicleWriteoffDate',VehicleWriteoffDate);
      ExcelReportBuilderManager.AddDataToSection('UseValue',RunAfterReleaseDate);
      ExcelReportBuilderManager.AddDataToSection('UseValueFromLastRepairs',RunAfterRenovationDate);
      ExcelReportBuilderManager.AddDataToSection('AcquisitionPrice',InitialAcqCost);
      ExcelReportBuilderManager.AddDataToSection('AmountDepreciation',Depreciation);
      ExcelReportBuilderManager.AddDataToSection('DeprCost',BookValue);
    END;

    LOCAL PROCEDURE TryAddBodySection@1210020();
    BEGIN
      IF NOT ExcelReportBuilderManager.TryAddSection('STATEBODY') THEN BEGIN
        ExcelReportBuilderManager.AddPagebreak;
        FillStatePageHeader;
        ExcelReportBuilderManager.AddSection('STATEBODY');
      END;
    END;

    PROCEDURE FillAssetLine@1210008(Description@1210000 : Text;AssetQty@1210001 : Text;Name@1210004 : Text;PreciousMetalCode@1210002 : Text;UnitOfMeasureCode@1210003 : Text;MetalQty@1210005 : Text;MetalMass@1210006 : Text);
    BEGIN
      IF NOT ExcelReportBuilderManager.TryAddSectionWithPlaceForFooter('ASSETBODY','ASSETPAGEFOOTER') THEN BEGIN
        ExcelReportBuilderManager.AddPagebreak;
        FillAssetPageHeader;
        ExcelReportBuilderManager.AddSection('ASSETBODY');
      END;

      ExcelReportBuilderManager.AddDataToSection('AssetDescription',Description);
      ExcelReportBuilderManager.AddDataToSection('AssetQuantity',AssetQty);
      ExcelReportBuilderManager.AddDataToSection('Name',Name);
      ExcelReportBuilderManager.AddDataToSection('MetalCode',PreciousMetalCode);
      ExcelReportBuilderManager.AddDataToSection('Name',Name);
      ExcelReportBuilderManager.AddDataToSection('MetalCode',PreciousMetalCode);
      ExcelReportBuilderManager.AddDataToSection('UnitOfMeasure',UnitOfMeasureCode);
      ExcelReportBuilderManager.AddDataToSection('MetalQty',MetalQty);
      ExcelReportBuilderManager.AddDataToSection('MetalMass',MetalMass);
    END;

    PROCEDURE FillAssetLine2@1210022(VehicleRegNo@1210000 : Text;VehicleEngineNo@1210001 : Text;VehicleChassisNo@1210007 : Text;VehicleCapacity@1210008 : Text;VehiclePassportWeight@1210009 : Text;Name@1210004 : Text;PreciousMetalCode@1210002 : Text;UnitOfMeasureCode@1210003 : Text;MetalQty@1210005 : Text;MetalMass@1210006 : Text);
    BEGIN
      IF NOT ExcelReportBuilderManager.TryAddSection('ASSETBODY') THEN BEGIN
        ExcelReportBuilderManager.AddPagebreak;
        FillAssetPageHeader;
        ExcelReportBuilderManager.AddSection('ASSETBODY');
      END;

      ExcelReportBuilderManager.AddDataToSection('ConsNo','1');
      ExcelReportBuilderManager.AddDataToSection('VehicleRegNo',VehicleRegNo);
      ExcelReportBuilderManager.AddDataToSection('VehicleEngineNo',VehicleEngineNo);
      ExcelReportBuilderManager.AddDataToSection('VehicleChassisNo',VehicleChassisNo);
      ExcelReportBuilderManager.AddDataToSection('VehicleCapacity',VehicleCapacity);
      ExcelReportBuilderManager.AddDataToSection('VehiclePassportWeight',VehiclePassportWeight);
      ExcelReportBuilderManager.AddDataToSection('MetalName',Name);
      ExcelReportBuilderManager.AddDataToSection('MetalCode',PreciousMetalCode);
      ExcelReportBuilderManager.AddDataToSection('UnitOfMeasure',UnitOfMeasureCode);
      ExcelReportBuilderManager.AddDataToSection('MetalQty',MetalQty);
      ExcelReportBuilderManager.AddDataToSection('MetalMass',MetalMass);
    END;

    PROCEDURE FillConclusionLine@1210015(DocNo@1210000 : Text;Description@1210006 : Text;ItemNo@1210001 : Text;UnitOfMeasure@1210002 : Text;Qty@1210003 : Text;UnitAmount@1210004 : Text;Amount@1210005 : Decimal);
    BEGIN
      IF NOT ExcelReportBuilderManager.TryAddSectionWithPlaceForFooter('CONCLUSIONBODY','CONCLUSIONPAGEFOOTER') THEN BEGIN
        ExcelReportBuilderManager.AddPagebreak;
        FillConclusionPageHeader;
        ExcelReportBuilderManager.AddSection('CONCLUSIONBODY');
      END;

      ExcelReportBuilderManager.AddDataToSection('ConcDocNo',DocNo);
      ExcelReportBuilderManager.AddDataToSection('ConcDescription',Description);
      ExcelReportBuilderManager.AddDataToSection('ConcItemNo',ItemNo);
      ExcelReportBuilderManager.AddDataToSection('ConcUOM',UnitOfMeasure);
      ExcelReportBuilderManager.AddDataToSection('ConcQty',Qty);
      ExcelReportBuilderManager.AddDataToSection('ConcUnitAmount',UnitAmount);
      ExcelReportBuilderManager.AddDataToSection('ConcAmount',StdRepMgt.FormatReportValue(Amount,2));

      ConcTotalAmount += Amount;
    END;

    PROCEDURE FillAssetPageFooter@1210004();
    BEGIN
      ExcelReportBuilderManager.AddSection('ASSETPAGEFOOTER');
    END;

    PROCEDURE FillAssetFooter@1210023(Characteristics@1210000 : ARRAY [5] OF Text;Conclusion@1210001 : ARRAY [5] OF Text;Appendix1@1210002 : Text;Appendix2@1210003 : Text;Chairman@1210004 : Text;ChairmanName@1210005 : Text;Member1@1210009 : Text;Member1Name@1210008 : Text;Member2@1210007 : Text;Member2Name@1210006 : Text);
    VAR
      i@1210010 : Integer;
    BEGIN
      ExcelReportBuilderManager.AddSection('ASSETFOOTER');

      FOR i := 1 TO ARRAYLEN(Conclusion) DO BEGIN
        ExcelReportBuilderManager.AddDataToSection(
          'Characteristics' + FORMAT(i),Characteristics[i]);
        ExcelReportBuilderManager.AddDataToSection(
          'Conclusion' + FORMAT(i),Conclusion[i]);
      END;

      ExcelReportBuilderManager.AddDataToSection('Appendix1',Appendix1);
      ExcelReportBuilderManager.AddDataToSection('Appendix2',Appendix2);
      ExcelReportBuilderManager.AddDataToSection('Chairman',Chairman);
      ExcelReportBuilderManager.AddDataToSection('ChairmanName',ChairmanName);
      ExcelReportBuilderManager.AddDataToSection('Member1',Member1);
      ExcelReportBuilderManager.AddDataToSection('Member1Name',Member1Name);
      ExcelReportBuilderManager.AddDataToSection('Member2',Member2);
      ExcelReportBuilderManager.AddDataToSection('Member2Name',Member2Name);
    END;

    PROCEDURE FillConclusionPageFooter@1210012();
    BEGIN
      ExcelReportBuilderManager.AddSection('CONCLUSIONPAGEFOOTER');

      ExcelReportBuilderManager.AddDataToSection('ScrapTotal',StdRepMgt.FormatReportValue(ConcTotalAmount,2));
    END;

    PROCEDURE FillExpHeader@1210024();
    BEGIN
      ExcelReportBuilderManager.AddSection('EXPHEADER');
    END;

    PROCEDURE FillExpPageHeader@1210026();
    BEGIN
      ExcelReportBuilderManager.AddSection('EXPPAGEHEADER');
    END;

    PROCEDURE FillExpLine@1210027(ConsNo@1210000 : Text;ItemNo@1210001 : Text;Description@1210002 : Text;UnitOfMeasureCode@1210003 : Text;Qty@1210004 : Text;UnitAmount@1210005 : Text;Amount@1210006 : Text);
    BEGIN
      IF NOT ExcelReportBuilderManager.TryAddSection('EXPBODY') THEN BEGIN
        ExcelReportBuilderManager.AddPagebreak;
        FillExpPageHeader;
        ExcelReportBuilderManager.AddSection('EXPBODY');
      END;

      ExcelReportBuilderManager.AddDataToSection('ItemConsNo',ConsNo);
      ExcelReportBuilderManager.AddDataToSection('ItemNo',ItemNo);
      ExcelReportBuilderManager.AddDataToSection('ItemDescription',Description);
      ExcelReportBuilderManager.AddDataToSection('ItemUOM',UnitOfMeasureCode);
      ExcelReportBuilderManager.AddDataToSection('ItemQty',Qty);
      ExcelReportBuilderManager.AddDataToSection('ItemUnitAmount',UnitAmount);
      ExcelReportBuilderManager.AddDataToSection('ItemAmount',Amount);
    END;

    PROCEDURE FillExpFooter@1210028();
    BEGIN
      ExcelReportBuilderManager.AddSection('EXPFOOTER');
    END;

    PROCEDURE FillReportFooter@1210013(Result1@1210004 : Text);
    VAR
      CompanyInfo@1210016 : Record 79;
    BEGIN
      CompanyInfo.GET;
      ExcelReportBuilderManager.AddSection('REPORTFOOTER');
      ExcelReportBuilderManager.AddDataToSection('Result',Result1);
      ExcelReportBuilderManager.AddDataToSection('ChiefAccountantName',CompanyInfo."Accountant Name");
      ExcelReportBuilderManager.AddPagebreak;
    END;

    PROCEDURE ExportData@1210002();
    BEGIN
      ExcelReportBuilderManager.ExportData;
    END;

    PROCEDURE ExportDataFile@1210010(FileName@1210000 : Text);
    BEGIN
      ExcelReportBuilderManager.ExportDataToClientFile(FileName);
    END;

    BEGIN
    END.
  }
}

