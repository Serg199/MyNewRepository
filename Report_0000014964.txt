OBJECT Report 14964 Export Payr. An. Rep. to Excel
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Export Payr. An. Rep. to Excel;
               RUS=Экспорт отч. по ан. предопл. в Excel];
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 1170000000;;DataItem;                  ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnAfterGetRecord=VAR
                                  Window@1000 : Dialog;
                                  RecNo@1001 : Integer;
                                  TotalRecNo@1002 : Integer;
                                  RowNo@1003 : Integer;
                                  ColumnNo@1004 : Integer;
                                BEGIN
                                  Window.OPEN(
                                    Text000 +
                                    '@1@@@@@@@@@@@@@@@@@@@@@\');
                                  Window.UPDATE(1,0);
                                  TotalRecNo := PayrollAnalysisLine.COUNT;
                                  RecNo := 0;

                                  TempExcelBuffer.DELETEALL;
                                  CLEAR(TempExcelBuffer);

                                  PayrollAnalysisLineTemplate.GET(PayrollAnalysisLine."Analysis Line Template Name");
                                  IF PayrollAnalysisLineTemplate."Payroll Analysis View Code" <> '' THEN
                                    PayrollAnalysisView.GET(PayrollAnalysisLineTemplate."Payroll Analysis View Code");
                                  GLSetup.GET;

                                  RowNo := 1;
                                  EnterCell(RowNo,1,Text001,FALSE,FALSE,TRUE);
                                  IF PayrollAnalysisLine.GETFILTER("Date Filter") <> '' THEN BEGIN
                                    RowNo := RowNo + 1;
                                    EnterFilterInCell(
                                      RowNo,
                                      PayrollAnalysisLine.GETFILTER("Date Filter"),
                                      PayrollAnalysisLine.FIELDCAPTION("Date Filter"));
                                  END;
                                  IF PayrollAnalysisLine.GETFILTER("Dimension 1 Filter") <> '' THEN BEGIN
                                    RowNo := RowNo + 1;
                                    EnterFilterInCell(
                                      RowNo,
                                      PayrollAnalysisLine.GETFILTER("Dimension 1 Filter"),
                                      GetDimFilterCaption(1));
                                  END;
                                  IF PayrollAnalysisLine.GETFILTER("Dimension 2 Filter") <> '' THEN BEGIN
                                    RowNo := RowNo + 1;
                                    EnterFilterInCell(
                                      RowNo,
                                      PayrollAnalysisLine.GETFILTER("Dimension 2 Filter"),
                                      GetDimFilterCaption(2));
                                  END;
                                  IF PayrollAnalysisLine.GETFILTER("Dimension 3 Filter") <> '' THEN BEGIN
                                    RowNo := RowNo + 1;
                                    EnterFilterInCell(
                                      RowNo,
                                      PayrollAnalysisLine.GETFILTER("Dimension 3 Filter"),
                                      GetDimFilterCaption(3));
                                  END;

                                  RowNo := RowNo + 1;
                                  IF GLSetup."LCY Code" <> '' THEN BEGIN
                                    RowNo := RowNo + 1;
                                    EnterFilterInCell(
                                      RowNo,
                                      GLSetup."LCY Code",
                                      Currency.TABLECAPTION);
                                  END;

                                  RowNo := RowNo + 1;
                                  IF PayrollAnalysisLine.FINDSET THEN BEGIN
                                    IF PayrollAnalysisColumn.FINDSET THEN BEGIN
                                      RowNo := RowNo + 1;
                                      ColumnNo := 1;
                                      REPEAT
                                        ColumnNo := ColumnNo + 1;
                                        EnterCell(
                                          RowNo,
                                          ColumnNo,
                                          PayrollAnalysisColumn."Column Header",
                                          FALSE,
                                          FALSE,
                                          FALSE);
                                      UNTIL PayrollAnalysisColumn.NEXT = 0;
                                    END;
                                    REPEAT
                                      RecNo := RecNo + 1;
                                      Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));
                                      RowNo := RowNo + 1;
                                      ColumnNo := 1;
                                      EnterCell(
                                        RowNo,
                                        ColumnNo,
                                        PayrollAnalysisLine.Description,
                                        PayrollAnalysisLine.Bold,
                                        PayrollAnalysisLine.Italic,
                                        PayrollAnalysisLine.Underline);
                                      IF PayrollAnalysisColumn.FINDSET THEN BEGIN
                                        REPEAT
                                          ColumnValue := PayrollAnalysisReportMgt.CalcCell(PayrollAnalysisLine,PayrollAnalysisColumn,FALSE);
                                          IF PayrollAnalysisReportMgt.GetDivisionError THEN
                                            ColumnValue := 0;
                                          ColumnNo := ColumnNo + 1;
                                          IF ColumnValue <> 0 THEN
                                            EnterCell(
                                              RowNo,
                                              ColumnNo,
                                              FORMAT(ColumnValue),
                                              PayrollAnalysisLine.Bold,
                                              PayrollAnalysisLine.Italic,
                                              PayrollAnalysisLine.Underline)
                                          ELSE
                                            EnterCell(
                                              RowNo,
                                              ColumnNo,
                                              '',
                                              PayrollAnalysisLine.Bold,
                                              PayrollAnalysisLine.Italic,
                                              PayrollAnalysisLine.Underline);
                                        UNTIL PayrollAnalysisColumn.NEXT = 0;
                                      END;
                                    UNTIL PayrollAnalysisLine.NEXT = 0;
                                  END;

                                  Window.CLOSE;

                                  IF Option = Option::"Update Workbook" THEN BEGIN
                                    FileName := FileMgt.OpenFileDialog(Text002,FileName,'');
                                    SheetName := TempExcelBuffer.SelectSheetsName(FileName);
                                    TempExcelBuffer.UpdateBook(FileName,SheetName);
                                    TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
                                  END ELSE BEGIN
                                    IF SheetName = '' THEN
                                      SheetName := AnalysisTemplateName;
                                    IF ServerFileName <> '' THEN
                                      TempExcelBuffer.CreateBook(ServerFileName,SheetName)
                                    ELSE
                                      TempExcelBuffer.CreateBook('',SheetName);
                                    TempExcelBuffer.WriteSheet(AnalysisTemplateName,COMPANYNAME,USERID);
                                  END;
                                  IF NOT TestMode THEN BEGIN
                                    TempExcelBuffer.CloseBook;
                                    TempExcelBuffer.OpenExcel;
                                    TempExcelBuffer.GiveUserControl;
                                  END;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1   ;    ;Container ;
                  Name=ReqPage;
                  ContainerType=ContentArea }

      { 2   ;1   ;Field     ;
                  CaptionML=[ENU=Sheet Name;
                             RUS=Имя листа];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=SheetName }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Analyzing Data...\\;RUS=Анализ данных...\\';
      Text001@1001 : TextConst 'ENU=Filters;RUS=Фильтры';
      Text002@1002 : TextConst 'ENU=Update Workbook;RUS=Обновить книгу';
      PayrollAnalysisLineTemplate@1003 : Record 14961;
      PayrollAnalysisLine@1004 : Record 14962;
      PayrollAnalysisColumn@1005 : Record 14964;
      TempExcelBuffer@1006 : TEMPORARY Record 370;
      GLSetup@1013 : Record 98;
      PayrollAnalysisView@1014 : Record 14965;
      Currency@1015 : Record 4;
      PayrollAnalysisReportMgt@1007 : Codeunit 14960;
      FileMgt@1016 : Codeunit 419;
      ColumnValue@1009 : Decimal;
      ServerFileName@1210000 : Text;
      FileName@1010 : Text[250];
      UploadedFileName@1008 : Text[1024];
      SheetName@1011 : Text[250];
      Option@1012 : 'Create Workbook,Update Workbook';
      AnalysisTemplateName@1102601000 : Code[10];
      FileNameEnable@19078740 : Boolean INDATASET;
      SheetNameEnable@19012330 : Boolean INDATASET;
      TestMode@1210001 : Boolean;

    PROCEDURE SetOptions@3(VAR PayrollAnalysisLine2@1000 : Record 14962;ColumnLayoutName2@1001 : Code[10];NewAnalysisTemplateName@1002 : Code[10]);
    BEGIN
      AnalysisTemplateName := NewAnalysisTemplateName;
      PayrollAnalysisLine.COPYFILTERS(PayrollAnalysisLine2);
      PayrollAnalysisLine := PayrollAnalysisLine2;
      PayrollAnalysisLine.SETFILTER("Analysis Line Template Name",NewAnalysisTemplateName);
      PayrollAnalysisColumn.SETRANGE("Analysis Column Template",ColumnLayoutName2);
    END;

    LOCAL PROCEDURE EnterFilterInCell@5(RowNo@1000 : Integer;Filter@1001 : Text[250];FieldName@1002 : Text[100]);
    BEGIN
      IF Filter <> '' THEN BEGIN
        EnterCell(RowNo,1,FieldName,FALSE,FALSE,FALSE);
        EnterCell(RowNo,2,Filter,FALSE,FALSE,FALSE);
      END;
    END;

    LOCAL PROCEDURE EnterCell@2(RowNo@1000 : Integer;ColumnNo@1001 : Integer;CellValue@1002 : Text[250];Bold@1003 : Boolean;Italic@1004 : Boolean;UnderLine@1005 : Boolean);
    BEGIN
      TempExcelBuffer.INIT;
      TempExcelBuffer.VALIDATE("Row No.",RowNo);
      TempExcelBuffer.VALIDATE("Column No.",ColumnNo);
      TempExcelBuffer."Cell Value as Text" := CellValue;
      TempExcelBuffer.Formula := '';
      TempExcelBuffer.Bold := Bold;
      TempExcelBuffer.Italic := Italic;
      TempExcelBuffer.Underline := UnderLine;
      TempExcelBuffer.INSERT;
    END;

    LOCAL PROCEDURE GetDimFilterCaption@4(DimFilterNo@1000 : Integer) : Text[80];
    VAR
      Dimension@1001 : Record 348;
    BEGIN
      IF PayrollAnalysisLineTemplate."Payroll Analysis View Code" = '' THEN
        CASE DimFilterNo OF
          1:
            Dimension.GET(GLSetup."Global Dimension 1 Code");
          2:
            Dimension.GET(GLSetup."Global Dimension 2 Code");
        END
      ELSE
        CASE DimFilterNo OF
          1:
            Dimension.GET(PayrollAnalysisView."Dimension 1 Code");
          2:
            Dimension.GET(PayrollAnalysisView."Dimension 2 Code");
          3:
            Dimension.GET(PayrollAnalysisView."Dimension 3 Code");
        END;
      EXIT(COPYSTR(Dimension.GetMLFilterCaption(GLOBALLANGUAGE),1,80));
    END;

    PROCEDURE SetFileNameSilent@1210001(NewFileName@1210000 : Text);
    BEGIN
      ServerFileName := NewFileName;
    END;

    PROCEDURE SetTestMode@1210000(NewTestMode@1210000 : Boolean);
    BEGIN
      TestMode := NewTestMode;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

