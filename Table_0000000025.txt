OBJECT Table 25 Vendor Ledger Entry
{
  OBJECT-PROPERTIES
  {
    Date=09.08.17;
    Time=17:36:33;
    Modified=Yes;
    Version List=NAVW110.00,NAVRU10.00,NOS-26;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               //NC NOS-26 SPA Кастомизация перенесена в CU 50085 как событие OnAfterDeleteEvent
             END;

    CaptionML=[ENU=Vendor Ledger Entry;
               RUS=Книга операций поставщиков];
    LookupPageID=Page29;
    DrillDownPageID=Page29;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              RUS=Номер операции] }
    { 3   ;   ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Vendor No.;
                                                              RUS=Код поставщика] }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              RUS=Дата учета] }
    { 5   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              RUS=Тип документа];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    RUS=" ,Платеж,Счет,Кредит-нота,Процент-нота,Напоминание,Возмещение"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 6   ;   ;Document No.        ;Code20        ;OnLookup=VAR
                                                              IncomingDocument@1000 : Record 130;
                                                            BEGIN
                                                              IncomingDocument.HyperlinkToDocument("Document No.","Posting Date");
                                                            END;

                                                   CaptionML=[ENU=Document No.;
                                                              RUS=Номер документа] }
    { 7   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 11  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              RUS=Код валюты] }
    { 13  ;   ;Amount              ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry".Amount WHERE (Ledger Entry Amount=CONST(Yes),
                                                                                                               Vendor Ledger Entry No.=FIELD(Entry No.),
                                                                                                               Posting Date=FIELD(Date Filter),
                                                                                                               Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Amount;
                                                              RUS=Сумма];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 14  ;   ;Remaining Amount    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry".Amount WHERE (Vendor Ledger Entry No.=FIELD(Entry No.),
                                                                                                               Posting Date=FIELD(Date Filter),
                                                                                                               Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Remaining Amount;
                                                              RUS=Сумма остатка];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 15  ;   ;Original Amt. (LCY) ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE (Vendor Ledger Entry No.=FIELD(Entry No.),
                                                                                                                       Entry Type=FILTER(Initial Entry),
                                                                                                                       Posting Date=FIELD(Date Filter),
                                                                                                                       Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Original Amt. (LCY);
                                                              RUS=Исходная сумма (руб.)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,25,15' }
    { 16  ;   ;Remaining Amt. (LCY);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE (Vendor Ledger Entry No.=FIELD(Entry No.),
                                                                                                                       Posting Date=FIELD(Date Filter),
                                                                                                                       Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Remaining Amt. (LCY);
                                                              RUS=Сумма остатка (руб.)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass=['1,11,1,25,16' ] }
    { 17  ;   ;Amount (LCY)        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE (Ledger Entry Amount=CONST(Yes),
                                                                                                                       Vendor Ledger Entry No.=FIELD(Entry No.),
                                                                                                                       Posting Date=FIELD(Date Filter),
                                                                                                                       Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Amount (LCY);
                                                              RUS=Сумма (руб.)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,25,17' }
    { 18  ;   ;Purchase (LCY)      ;Decimal       ;CaptionML=[ENU=Purchase (LCY);
                                                              RUS=Покупка (руб.)];
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,25,18' }
    { 20  ;   ;Inv. Discount (LCY) ;Decimal       ;CaptionML=[ENU=Inv. Discount (LCY);
                                                              RUS=Скидка счета (руб.)];
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,25,20' }
    { 21  ;   ;Buy-from Vendor No. ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Buy-from Vendor No.;
                                                              RUS=Код поставщика (продавца)] }
    { 22  ;   ;Vendor Posting Group;Code10        ;TableRelation="Vendor Posting Group";
                                                   CaptionML=[ENU=Vendor Posting Group;
                                                              RUS=Учетная группа поставщика] }
    { 23  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              RUS=Код глобального измерения 1];
                                                   CaptionClass='1,1,1' }
    { 24  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              RUS=Код глобального измерения 2];
                                                   CaptionClass='1,1,2' }
    { 25  ;   ;Purchaser Code      ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=[ENU=Purchaser Code;
                                                              RUS=Код менеджера] }
    { 27  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              RUS=Код пользователя] }
    { 28  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              RUS=Код источника] }
    { 33  ;   ;On Hold             ;Code3         ;CaptionML=[ENU=On Hold;
                                                              RUS=На удержании] }
    { 34  ;   ;Applies-to Doc. Type;Option        ;CaptionML=[ENU=Applies-to Doc. Type;
                                                              RUS=Примен. к док. - тип];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    RUS=" ,Платеж,Счет,Кредит-нота,Процент-нота,Напоминание,Возмещение"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 35  ;   ;Applies-to Doc. No. ;Code20        ;CaptionML=[ENU=Applies-to Doc. No.;
                                                              RUS=Примен. к док. - номер] }
    { 36  ;   ;Open                ;Boolean       ;CaptionML=[ENU=Open;
                                                              RUS=Открыто] }
    { 37  ;   ;Due Date            ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=[ENU=Due Date;
                                                              RUS=Срок оплаты] }
    { 38  ;   ;Pmt. Discount Date  ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=[ENU=Pmt. Discount Date;
                                                              RUS=Дата скидки оплаты] }
    { 39  ;   ;Original Pmt. Disc. Possible;Decimal;
                                                   CaptionML=[ENU=Original Pmt. Disc. Possible;
                                                              RUS=Первоначальная возможная скидка оплаты];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 40  ;   ;Pmt. Disc. Rcd.(LCY);Decimal       ;CaptionML=[ENU=Pmt. Disc. Rcd.(LCY);
                                                              RUS=Полученная скидка оплаты (руб.)];
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,25,40' }
    { 43  ;   ;Positive            ;Boolean       ;CaptionML=[ENU=Positive;
                                                              RUS=Положит.] }
    { 44  ;   ;Closed by Entry No. ;Integer       ;TableRelation="Vendor Ledger Entry";
                                                   CaptionML=[ENU=Closed by Entry No.;
                                                              RUS=Номер закрывающей операции] }
    { 45  ;   ;Closed at Date      ;Date          ;CaptionML=[ENU=Closed at Date;
                                                              RUS=Закрыто на дату] }
    { 46  ;   ;Closed by Amount    ;Decimal       ;CaptionML=[ENU=Closed by Amount;
                                                              RUS=Закрыто суммой];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 47  ;   ;Applies-to ID       ;Code50        ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=[ENU=Applies-to ID;
                                                              RUS=Код применения] }
    { 49  ;   ;Journal Batch Name  ;Code10        ;TestTableRelation=No;
                                                   CaptionML=[ENU=Journal Batch Name;
                                                              RUS=Код раздела журнала] }
    { 50  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              RUS=Код причины] }
    { 51  ;   ;Bal. Account Type   ;Option        ;CaptionML=[ENU=Bal. Account Type;
                                                              RUS=Тип баланс. счета];
                                                   OptionCaptionML=[ENU=G/L Account,Customer,Vendor,Bank Account,Fixed Asset;
                                                                    RUS=Счет ГК,Клиент,Поставщик,Банк. счет,ОС];
                                                   OptionString=G/L Account,Customer,Vendor,Bank Account,Fixed Asset }
    { 52  ;   ;Bal. Account No.    ;Code20        ;TableRelation=IF (Bal. Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Customer)) Customer
                                                                 ELSE IF (Bal. Account Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Bal. Account Type=CONST(Bank Account)) "Bank Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Fixed Asset)) "Fixed Asset";
                                                   CaptionML=[ENU=Bal. Account No.;
                                                              RUS=Номер баланс. счета] }
    { 53  ;   ;Transaction No.     ;Integer       ;CaptionML=[ENU=Transaction No.;
                                                              RUS=Номер транзакции] }
    { 54  ;   ;Closed by Amount (LCY);Decimal     ;CaptionML=[ENU=Closed by Amount (LCY);
                                                              RUS=Закрыто суммой (руб.)];
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,25,54' }
    { 58  ;   ;Debit Amount        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry"."Debit Amount" WHERE (Ledger Entry Amount=CONST(Yes),
                                                                                                                       Vendor Ledger Entry No.=FIELD(Entry No.),
                                                                                                                       Posting Date=FIELD(Date Filter),
                                                                                                                       Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Debit Amount;
                                                              RUS=Сумма по дебету];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 59  ;   ;Credit Amount       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry"."Credit Amount" WHERE (Ledger Entry Amount=CONST(Yes),
                                                                                                                        Vendor Ledger Entry No.=FIELD(Entry No.),
                                                                                                                        Posting Date=FIELD(Date Filter),
                                                                                                                        Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Credit Amount;
                                                              RUS=Сумма по кредиту];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 60  ;   ;Debit Amount (LCY)  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry"."Debit Amount (LCY)" WHERE (Ledger Entry Amount=CONST(Yes),
                                                                                                                             Vendor Ledger Entry No.=FIELD(Entry No.),
                                                                                                                             Posting Date=FIELD(Date Filter),
                                                                                                                             Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Debit Amount (LCY);
                                                              RUS=Сумма по дебету (руб.)];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,25,60' }
    { 61  ;   ;Credit Amount (LCY) ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry"."Credit Amount (LCY)" WHERE (Ledger Entry Amount=CONST(Yes),
                                                                                                                              Vendor Ledger Entry No.=FIELD(Entry No.),
                                                                                                                              Posting Date=FIELD(Date Filter),
                                                                                                                              Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Credit Amount (LCY);
                                                              RUS=Сумма по кредиту (руб.)];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,25,61' }
    { 62  ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              RUS=Дата документа] }
    { 63  ;   ;External Document No.;Code35       ;CaptionML=[ENU=External Document No.;
                                                              RUS=Номер внешнего документа] }
    { 64  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              RUS=Серия номеров] }
    { 65  ;   ;Closed by Currency Code;Code10     ;TableRelation=Currency;
                                                   CaptionML=[ENU=Closed by Currency Code;
                                                              RUS=Закрыто кодом валюты] }
    { 66  ;   ;Closed by Currency Amount;Decimal  ;AccessByPermission=TableData 4=R;
                                                   CaptionML=[ENU=Closed by Currency Amount;
                                                              RUS=Закрыто суммой в валюте];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Closed by Currency Code" }
    { 73  ;   ;Adjusted Currency Factor;Decimal   ;CaptionML=[ENU=Adjusted Currency Factor;
                                                              RUS=Скоррект. коэффициент курса валюты];
                                                   DecimalPlaces=0:15 }
    { 74  ;   ;Original Currency Factor;Decimal   ;CaptionML=[ENU=Original Currency Factor;
                                                              RUS=Исходный коэффициент курса валюты];
                                                   DecimalPlaces=0:15 }
    { 75  ;   ;Original Amount     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry".Amount WHERE (Vendor Ledger Entry No.=FIELD(Entry No.),
                                                                                                               Entry Type=FILTER(Initial Entry),
                                                                                                               Posting Date=FIELD(Date Filter),
                                                                                                               Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Original Amount;
                                                              RUS=Исходная сумма];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 76  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              RUS=Фильтр по дате] }
    { 77  ;   ;Remaining Pmt. Disc. Possible;Decimal;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                                CALCFIELDS(Amount,"Original Amount");

                                                                IF "Remaining Pmt. Disc. Possible" * Amount < 0 THEN
                                                                  FIELDERROR("Remaining Pmt. Disc. Possible",STRSUBSTNO(MustHaveSameSignErr,FIELDCAPTION(Amount)));

                                                                IF ABS("Remaining Pmt. Disc. Possible") > ABS("Original Amount") THEN
                                                                  FIELDERROR("Remaining Pmt. Disc. Possible",STRSUBSTNO(MustNotBeLargerErr,FIELDCAPTION("Original Amount")));
                                                              END;

                                                   CaptionML=[ENU=Remaining Pmt. Disc. Possible;
                                                              RUS=Возможный остаток скидки оплаты];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 78  ;   ;Pmt. Disc. Tolerance Date;Date     ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=[ENU=Pmt. Disc. Tolerance Date;
                                                              RUS=Дата отклонения скидки оплаты] }
    { 79  ;   ;Max. Payment Tolerance;Decimal     ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                                CALCFIELDS(Amount,"Remaining Amount");

                                                                IF "Max. Payment Tolerance" * Amount < 0 THEN
                                                                  FIELDERROR("Max. Payment Tolerance",STRSUBSTNO(MustHaveSameSignErr,FIELDCAPTION(Amount)));

                                                                IF ABS("Max. Payment Tolerance") > ABS("Remaining Amount") THEN
                                                                  FIELDERROR("Max. Payment Tolerance",STRSUBSTNO(MustNotBeLargerErr,FIELDCAPTION("Remaining Amount")));
                                                              END;

                                                   CaptionML=[ENU=Max. Payment Tolerance;
                                                              RUS=Макс. отклонение в оплате];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 81  ;   ;Accepted Payment Tolerance;Decimal ;CaptionML=[ENU=Accepted Payment Tolerance;
                                                              RUS=Принятое отклонение в оплате];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 82  ;   ;Accepted Pmt. Disc. Tolerance;Boolean;
                                                   CaptionML=[ENU=Accepted Pmt. Disc. Tolerance;
                                                              RUS=Принятое отклонение в скидках оплаты] }
    { 83  ;   ;Pmt. Tolerance (LCY);Decimal       ;CaptionML=[ENU=Pmt. Tolerance (LCY);
                                                              RUS=Отклонение в оплате (руб.)];
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,25,83' }
    { 84  ;   ;Amount to Apply     ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                                CALCFIELDS("Remaining Amount");

                                                                IF "Amount to Apply" * "Remaining Amount" < 0 THEN
                                                                  FIELDERROR("Amount to Apply",STRSUBSTNO(MustHaveSameSignErr,FIELDCAPTION("Remaining Amount")));

                                                                IF ABS("Amount to Apply") > ABS("Remaining Amount") THEN
                                                                  FIELDERROR("Amount to Apply",STRSUBSTNO(MustNotBeLargerErr,FIELDCAPTION("Remaining Amount")));
                                                              END;

                                                   CaptionML=[ENU=Amount to Apply;
                                                              RUS=Сумма для применения];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 85  ;   ;IC Partner Code     ;Code20        ;TableRelation="IC Partner";
                                                   CaptionML=[ENU=IC Partner Code;
                                                              RUS=Код МФ-партнера] }
    { 86  ;   ;Applying Entry      ;Boolean       ;CaptionML=[ENU=Applying Entry;
                                                              RUS=Применение операции] }
    { 87  ;   ;Reversed            ;Boolean       ;CaptionML=[ENU=Reversed;
                                                              RUS=Сторнировано] }
    { 88  ;   ;Reversed by Entry No.;Integer      ;TableRelation="Vendor Ledger Entry";
                                                   CaptionML=[ENU=Reversed by Entry No.;
                                                              RUS=Номер сторнирующей операции];
                                                   BlankZero=Yes }
    { 89  ;   ;Reversed Entry No.  ;Integer       ;TableRelation="Vendor Ledger Entry";
                                                   CaptionML=[ENU=Reversed Entry No.;
                                                              RUS=Номер сторнированной операции];
                                                   BlankZero=Yes }
    { 90  ;   ;Prepayment          ;Boolean       ;CaptionML=[ENU=Prepayment;
                                                              RUS=Предоплата] }
    { 170 ;   ;Creditor No.        ;Code20        ;OnValidate=BEGIN
                                                                IF ("Creditor No." <> '') AND ("Recipient Bank Account" <> '') THEN
                                                                  FIELDERROR("Recipient Bank Account",
                                                                    STRSUBSTNO(FieldIsNotEmptyErr,FIELDCAPTION("Creditor No."),FIELDCAPTION("Recipient Bank Account")));
                                                              END;

                                                   CaptionML=[ENU=Creditor No.;
                                                              RUS=Номер кредитора];
                                                   Numeric=Yes }
    { 171 ;   ;Payment Reference   ;Code50        ;OnValidate=BEGIN
                                                                IF "Payment Reference" <> '' THEN
                                                                  TESTFIELD("Creditor No.");
                                                              END;

                                                   CaptionML=[ENU=Payment Reference;
                                                              RUS=Ссылка на оплату];
                                                   Numeric=Yes }
    { 172 ;   ;Payment Method Code ;Code10        ;TableRelation="Payment Method";
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=[ENU=Payment Method Code;
                                                              RUS=Код способа оплаты] }
    { 173 ;   ;Applies-to Ext. Doc. No.;Code35    ;CaptionML=[ENU=Applies-to Ext. Doc. No.;
                                                              RUS=Применяемый внешний номер документа] }
    { 288 ;   ;Recipient Bank Account;Code10      ;TableRelation="Vendor Bank Account".Code WHERE (Vendor No.=FIELD(Vendor No.));
                                                   OnValidate=BEGIN
                                                                IF ("Recipient Bank Account" <> '') AND ("Creditor No." <> '') THEN
                                                                  FIELDERROR("Creditor No.",
                                                                    STRSUBSTNO(FieldIsNotEmptyErr,FIELDCAPTION("Recipient Bank Account"),FIELDCAPTION("Creditor No.")));
                                                              END;

                                                   CaptionML=[ENU=Recipient Bank Account;
                                                              RUS=Банковский счет получателя] }
    { 289 ;   ;Message to Recipient;Text140       ;OnValidate=BEGIN
                                                                TESTFIELD(Open,TRUE);
                                                              END;

                                                   CaptionML=[ENU=Message to Recipient;
                                                              RUS=Сообщение получателю] }
    { 290 ;   ;Exported to Payment File;Boolean   ;CaptionML=[ENU=Exported to Payment File;
                                                              RUS=Экспортировано в файл платежей];
                                                   Editable=No }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              RUS=Код набора измерений];
                                                   Editable=No }
    { 12401;  ;Prepmt. Diff. Appln. Entry No.;Integer;
                                                   OnValidate=VAR
                                                                DtldVendLedgEntry@1000 : Record 380;
                                                              BEGIN
                                                                IF "Prepmt. Diff. Appln. Entry No." > 0 THEN
                                                                  IF DtldVendLedgEntry.GET("Prepmt. Diff. Appln. Entry No.") THEN
                                                                    "Prepmt. Diff. Vend. Entry No." := DtldVendLedgEntry."Vendor Ledger Entry No.";
                                                              END;

                                                   CaptionML=[ENU=Prepmt. Diff. Appln. Entry No.;
                                                              RUS=Ном. операции примен. для предоплаты разн.];
                                                   Editable=No }
    { 12402;  ;Prepmt. Diff. Vend. Entry No.;Integer;
                                                   CaptionML=[ENU=Prepmt. Diff. Vend. Entry No.;
                                                              RUS=Номер операции предоп. разн. поставщика] }
    { 12430;  ;Vendor VAT Invoice No.;Code30      ;CaptionML=[ENU=Vendor VAT Invoice No.;
                                                              RUS=Номер счета-фактуры поставщика] }
    { 12431;  ;Vendor VAT Invoice Date;Date       ;OnValidate=VAR
                                                                PurchInvHeader@1000 : Record 122;
                                                                PurchCrMemoHdr@1001 : Record 124;
                                                                AddSheet@1002 : Boolean;
                                                              BEGIN
                                                                IF PurchInvHeader.GET("Document No.") THEN
                                                                  AddSheet := PurchInvHeader."Additional VAT Ledger Sheet";
                                                                IF PurchCrMemoHdr.GET("Document No.") THEN
                                                                  AddSheet := PurchCrMemoHdr."Additional VAT Ledger Sheet";
                                                                IF AddSheet THEN
                                                                  EXIT;

                                                                IF ("Vendor VAT Invoice Rcvd Date" <> 0D) AND ("Vendor VAT Invoice Date" <> 0D) AND
                                                                   ("Vendor VAT Invoice Rcvd Date" < "Vendor VAT Invoice Date") THEN
                                                                  ERROR(Text12400,FIELDCAPTION("Vendor VAT Invoice Rcvd Date"),FIELDCAPTION("Vendor VAT Invoice Date"));
                                                              END;

                                                   CaptionML=[ENU=Vendor VAT Invoice Date;
                                                              RUS=Дата счета-фактуры поставщика] }
    { 12432;  ;Vendor VAT Invoice Rcvd Date;Date  ;OnValidate=VAR
                                                                PurchInvHeader@1002 : Record 122;
                                                                PurchCrMemoHdr@1001 : Record 124;
                                                                AddSheet@1000 : Boolean;
                                                              BEGIN
                                                                IF PurchInvHeader.GET("Document No.") THEN
                                                                  AddSheet := PurchInvHeader."Additional VAT Ledger Sheet";
                                                                IF PurchCrMemoHdr.GET("Document No.") THEN
                                                                  AddSheet := PurchCrMemoHdr."Additional VAT Ledger Sheet";
                                                                IF AddSheet THEN
                                                                  EXIT;

                                                                IF ("Vendor VAT Invoice Rcvd Date" <> 0D) AND ("Vendor VAT Invoice Date" <> 0D) AND
                                                                   ("Vendor VAT Invoice Rcvd Date" < "Vendor VAT Invoice Date") THEN
                                                                  ERROR(Text12400,FIELDCAPTION("Vendor VAT Invoice Rcvd Date"),FIELDCAPTION("Vendor VAT Invoice Date"));
                                                              END;

                                                   CaptionML=[ENU=Vendor VAT Invoice Rcvd Date;
                                                              RUS=Дата получения счета-фактуры поставщика] }
    { 12445;  ;VAT Entry Type      ;Code15        ;OnValidate=VAR
                                                                VATEntryType@1210000 : Record 14949;
                                                              BEGIN
                                                                VATEntryType.UpdatePurchVATEntryType(Rec);
                                                              END;

                                                   OnLookup=VAR
                                                              VATEntryType@1210000 : Record 14949;
                                                            BEGIN
                                                              VATEntryType.LookupSetOfVATEntryCodes("VAT Entry Type");
                                                            END;

                                                   CaptionML=[ENU=VAT Entry Type;
                                                              RUS=Тип операции НДС] }
    { 12470;  ;Vendor Receipts No. ;Code20        ;CaptionML=[ENU=Vendor Receipts No.;
                                                              RUS=Номер накладной поставщика] }
    { 12471;  ;Vendor Receipts Date;Date          ;CaptionML=[ENU=Vendor Receipts Date;
                                                              RUS=Дата накладной поставщика] }
    { 12485;  ;VAT Adjusted        ;Boolean       ;CaptionML=[ENU=VAT Adjusted;
                                                              RUS=НДС скорректирован];
                                                   Editable=No }
    { 12490;  ;Agreement No.       ;Code20        ;TableRelation="Vendor Agreement".No. WHERE (Vendor No.=FIELD(Vendor No.));
                                                   CaptionML=[ENU=Agreement No.;
                                                              RUS=Номер договора] }
    { 17400;  ;Payroll Ledger Entry No.;Integer   ;TableRelation="Payroll Ledger Entry";
                                                   CaptionML=[ENU=Payroll Ledger Entry No.;
                                                              RUS=Номер операции зарплаты] }
    { 50001;  ;Agreement Condition No.;Integer    ;TableRelation="Agreement Detail"."Condition No." WHERE (Source Type=CONST(Vendor),
                                                                                                           Source No.=FIELD(Vendor No.),
                                                                                                           Agreement No.=FIELD(Agreement No.));
                                                   CaptionML=[ENU=Agreement Condition No.;
                                                              RUS=Договор Условие Но.];
                                                   Description=NC MLN03 EB }
    { 50002;  ;Amount Type         ;Option        ;CaptionML=[ENU=Amount Type;
                                                              RUS=Тип Суммы];
                                                   OptionCaptionML=[ENU=" ,Principal,Interest,Reserve,Reserve%";
                                                                    RUS=" ,Основная сумма,Проценты,Резерв,Резерв%"];
                                                   OptionString=[ ,Principal,Interest,Reserve,Reserve%];
                                                   Description=NC MLN03 EB,NCS-1268 }
    { 50003;  ;External System ID  ;Code2         ;TableRelation="External System";
                                                   CaptionML=[ENU=External System ID;
                                                              RUS=Внешняя Система ID];
                                                   Description=NC MTD02 AIG }
    { 50004;  ;Interest Calc. No. of Days;Integer ;CaptionML=[ENU=Interest Calc. No. of Days;
                                                              RUS=Расчет Проценты Кол. Дней];
                                                   Description=NC MLN09 DP }
    { 50005;  ;Change Condition Block Status;Boolean;
                                                   CaptionML=[ENU=Change Condition Block Status;
                                                              RUS=Изменить Блокировка Условие Статус];
                                                   Description=NC MLN09.3 DP }
    { 50006;  ;Text 1              ;Text80        ;ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Text 1;
                                                              RUS=Текст 1];
                                                   Description=NC OAM30 DP }
    { 50007;  ;Interest Accrual    ;Boolean       ;CaptionML=[ENU=Interest Accrual;
                                                              RUS=Проценты Начисление];
                                                   Description=NC APCOC56 }
    { 50010;  ;Local G/L Account   ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("G/L Entry"."Local G/L Account" WHERE (Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=Local G/L Account;
                                                              RUS=Локальный Фин. Счет Но.];
                                                   Description=NC OAM39 DP;
                                                   Editable=No }
    { 50015;  ;Business Unit Code  ;Code20        ;TableRelation="Business Unit";
                                                   CaptionML=[ENU=Business Unit Code;
                                                              RUS=Код Филиала];
                                                   Description=NCS-1893 PCH }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Vendor No.,Posting Date,Currency Code,Agreement No.;
                                                   SumIndexFields=Purchase (LCY),Inv. Discount (LCY) }
    { No ;Vendor No.,Currency Code,Posting Date    }
    {    ;Document No.,Document Type,Vendor No.   ;SumIndexFields=Purchase (LCY),Inv. Discount (LCY) }
    {    ;External Document No.                    }
    {    ;Vendor No.,Open,Positive,Due Date,Currency Code }
    {    ;Open,Due Date                            }
    {    ;Document Type,Vendor No.,Posting Date,Currency Code;
                                                   SumIndexFields=Purchase (LCY),Inv. Discount (LCY);
                                                   MaintainSQLIndex=No;
                                                   MaintainSIFTIndex=No }
    {    ;Closed by Entry No.                      }
    {    ;Transaction No.                          }
    { No ;Vendor No.,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date,Currency Code,Agreement No.;
                                                   SumIndexFields=Purchase (LCY),Inv. Discount (LCY) }
    { No ;Vendor No.,Open,Global Dimension 1 Code,Global Dimension 2 Code,Positive,Due Date,Currency Code }
    { No ;Open,Global Dimension 1 Code,Global Dimension 2 Code,Due Date }
    { No ;Document Type,Vendor No.,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date,Currency Code;
                                                   MaintainSQLIndex=No;
                                                   MaintainSIFTIndex=No }
    {    ;Vendor No.,Applies-to ID,Open,Positive,Due Date }
    {    ;Prepmt. Diff. Vend. Entry No.,Prepmt. Diff. Appln. Entry No. }
    {    ;Payroll Ledger Entry No.                 }
    {    ;Vendor VAT Invoice Rcvd Date,Entry No.   }
    {    ;Vendor No.,Agreement No.,Posting Date    }
    {    ;Vendor No.,Agreement No.,Agreement Condition No.,Amount Type,Posting Date,Positive,Currency Code,Vendor Posting Group,Open }
    {    ;Vendor No.,Vendor Posting Group,Global Dimension 1 Code,Global Dimension 2 Code,Agreement No.,Prepayment }
    {    ;Vendor No.,Posting Date,Currency Code,Agreement No.,Open,Vendor Posting Group,Positive,Agreement Condition No. }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Entry No.,Description,Vendor No.,Posting Date,Document Type,Document No. }
    { 2   ;Brick               ;Document No.,Description,Remaining Amt. (LCY),Due Date }
  }
  CODE
  {
    VAR
      FieldIsNotEmptyErr@1002 : TextConst '@@@="%1=Field;%2=Field";ENU=%1 cannot be used while %2 has a value.;RUS=%1 нельзя использовать при наличии значения у %2.';
      MustHaveSameSignErr@1000 : TextConst 'ENU=must have the same sign as %1;RUS=должно иметь такой же знак, как %1';
      MustNotBeLargerErr@1001 : TextConst 'ENU=must not be larger than %1;RUS=не должно быть больше %1';
      Text12400@1470000 : TextConst 'ENU=%1 cannot be less then %2;RUS=%1 не может быть меньше %2';

    PROCEDURE ShowDoc@7() : Boolean;
    VAR
      PurchInvHeader@1003 : Record 122;
      PurchCrMemoHdr@1002 : Record 124;
    BEGIN
      CASE "Document Type" OF
        "Document Type"::Invoice:
          IF PurchInvHeader.GET("Document No.") THEN BEGIN
            PAGE.RUN(PAGE::"Posted Purchase Invoice",PurchInvHeader);
            EXIT(TRUE);
          END;
        "Document Type"::"Credit Memo":
          IF PurchCrMemoHdr.GET("Document No.") THEN BEGIN
            PAGE.RUN(PAGE::"Posted Purchase Credit Memo",PurchCrMemoHdr);
            EXIT(TRUE);
          END
      END;
    END;

    PROCEDURE DrillDownOnEntries@1(VAR DtldVendLedgEntry@1000 : Record 380);
    VAR
      VendLedgEntry@1001 : Record 25;
    BEGIN
      VendLedgEntry.RESET;
      DtldVendLedgEntry.COPYFILTER("Vendor No.",VendLedgEntry."Vendor No.");
      DtldVendLedgEntry.COPYFILTER("Currency Code",VendLedgEntry."Currency Code");
      DtldVendLedgEntry.COPYFILTER("Initial Entry Global Dim. 1",VendLedgEntry."Global Dimension 1 Code");
      DtldVendLedgEntry.COPYFILTER("Initial Entry Global Dim. 2",VendLedgEntry."Global Dimension 2 Code");
      DtldVendLedgEntry.COPYFILTER("Agreement No.",VendLedgEntry."Agreement No.");
      VendLedgEntry.SETCURRENTKEY("Vendor No.","Posting Date");
      VendLedgEntry.SETRANGE(Open,TRUE);
      PAGE.RUN(0,VendLedgEntry);
    END;

    PROCEDURE DrillDownOnOverdueEntries@4(VAR DtldVendLedgEntry@1000 : Record 380);
    VAR
      VendLedgEntry@1001 : Record 25;
    BEGIN
      VendLedgEntry.RESET;
      DtldVendLedgEntry.COPYFILTER("Vendor No.",VendLedgEntry."Vendor No.");
      DtldVendLedgEntry.COPYFILTER("Currency Code",VendLedgEntry."Currency Code");
      DtldVendLedgEntry.COPYFILTER("Initial Entry Global Dim. 1",VendLedgEntry."Global Dimension 1 Code");
      DtldVendLedgEntry.COPYFILTER("Initial Entry Global Dim. 2",VendLedgEntry."Global Dimension 2 Code");
      DtldVendLedgEntry.COPYFILTER("Agreement No.",VendLedgEntry."Agreement No.");
      VendLedgEntry.SETCURRENTKEY("Vendor No.","Posting Date");
      VendLedgEntry.SETFILTER("Date Filter",'..%1',WORKDATE);
      VendLedgEntry.SETFILTER("Due Date",'<%1',WORKDATE);
      VendLedgEntry.SETFILTER("Remaining Amount",'<>%1',0);
      PAGE.RUN(0,VendLedgEntry);
    END;

    PROCEDURE GetOriginalCurrencyFactor@2() : Decimal;
    BEGIN
      IF "Original Currency Factor" = 0 THEN
        EXIT(1);
      EXIT("Original Currency Factor");
    END;

    PROCEDURE ShowDimensions@3();
    VAR
      DimMgt@1000 : Codeunit 408;
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"Entry No."));
    END;

    PROCEDURE SetStyle@5() : Text;
    BEGIN
      IF Open THEN BEGIN
        IF WORKDATE > "Due Date" THEN
          EXIT('Unfavorable')
      END ELSE
        IF "Closed at Date" > "Due Date" THEN
          EXIT('Attention');
      EXIT('');
    END;

    PROCEDURE CopyFromGenJnlLine@6(GenJnlLine@1000 : Record 81);
    BEGIN
      "Vendor No." := GenJnlLine."Account No.";
      "Posting Date" := GenJnlLine."Posting Date";
      "Document Date" := GenJnlLine."Document Date";
      "Document Type" := GenJnlLine."Document Type";
      "Document No." := GenJnlLine."Document No.";
      "External Document No." := GenJnlLine."External Document No.";
      Description := GenJnlLine.Description;
      "Currency Code" := GenJnlLine."Currency Code";
      "Purchase (LCY)" := GenJnlLine."Sales/Purch. (LCY)";
      "Inv. Discount (LCY)" := GenJnlLine."Inv. Discount (LCY)";
      "Buy-from Vendor No." := GenJnlLine."Sell-to/Buy-from No.";
      "Vendor Posting Group" := GenJnlLine."Posting Group";
      "Global Dimension 1 Code" := GenJnlLine."Shortcut Dimension 1 Code";
      "Global Dimension 2 Code" := GenJnlLine."Shortcut Dimension 2 Code";
      "Dimension Set ID" := GenJnlLine."Dimension Set ID";
      "Purchaser Code" := GenJnlLine."Salespers./Purch. Code";
      "Source Code" := GenJnlLine."Source Code";
      "On Hold" := GenJnlLine."On Hold";
      "Applies-to Doc. Type" := GenJnlLine."Applies-to Doc. Type";
      "Applies-to Doc. No." := GenJnlLine."Applies-to Doc. No.";
      "Due Date" := GenJnlLine."Due Date";
      "Pmt. Discount Date" := GenJnlLine."Pmt. Discount Date";
      "Applies-to ID" := GenJnlLine."Applies-to ID";
      "Journal Batch Name" := GenJnlLine."Journal Batch Name";
      "Reason Code" := GenJnlLine."Reason Code";
      "User ID" := USERID;
      "Bal. Account Type" := GenJnlLine."Bal. Account Type";
      "Bal. Account No." := GenJnlLine."Bal. Account No.";
      "No. Series" := GenJnlLine."Posting No. Series";
      "IC Partner Code" := GenJnlLine."IC Partner Code";
      Prepayment := GenJnlLine.Prepayment;
      "Recipient Bank Account" := GenJnlLine."Recipient Bank Account";
      "Message to Recipient" := GenJnlLine."Message to Recipient";
      "Applies-to Ext. Doc. No." := GenJnlLine."Applies-to Ext. Doc. No.";
      "Creditor No." := GenJnlLine."Creditor No.";
      "Payment Reference" := GenJnlLine."Payment Reference";
      "Payment Method Code" := GenJnlLine."Payment Method Code";
      "Exported to Payment File" := GenJnlLine."Exported to Payment File";
      "Vendor VAT Invoice No." := GenJnlLine."Vendor VAT Invoice No.";
      "Vendor VAT Invoice Date" := GenJnlLine."Vendor VAT Invoice Date";
      "Vendor VAT Invoice Rcvd Date" := GenJnlLine."Vendor VAT Invoice Rcvd Date";
      "Agreement No." := GenJnlLine."Agreement No.";
      "Payroll Ledger Entry No." := GenJnlLine."Payroll Ledger Entry No.";
      "VAT Entry Type" := GenJnlLine."VAT Entry Type";

      OnAfterCopyVendLedgerEntryFromGenJnlLine(Rec,GenJnlLine);
    END;

    PROCEDURE CopyFromCVLedgEntryBuffer@9(VAR CVLedgerEntryBuffer@1000 : Record 382);
    BEGIN
      "Entry No." := CVLedgerEntryBuffer."Entry No.";
      "Vendor No." := CVLedgerEntryBuffer."CV No.";
      "Posting Date" := CVLedgerEntryBuffer."Posting Date";
      "Document Type" := CVLedgerEntryBuffer."Document Type";
      "Document No." := CVLedgerEntryBuffer."Document No.";
      Description := CVLedgerEntryBuffer.Description;
      "Currency Code" := CVLedgerEntryBuffer."Currency Code";
      Amount := CVLedgerEntryBuffer.Amount;
      "Remaining Amount" := CVLedgerEntryBuffer."Remaining Amount";
      "Original Amount" := CVLedgerEntryBuffer."Original Amount";
      "Original Amt. (LCY)" := CVLedgerEntryBuffer."Original Amt. (LCY)";
      "Remaining Amt. (LCY)" := CVLedgerEntryBuffer."Remaining Amt. (LCY)";
      "Amount (LCY)" := CVLedgerEntryBuffer."Amount (LCY)";
      "Purchase (LCY)" := CVLedgerEntryBuffer."Sales/Purchase (LCY)";
      "Inv. Discount (LCY)" := CVLedgerEntryBuffer."Inv. Discount (LCY)";
      "Buy-from Vendor No." := CVLedgerEntryBuffer."Bill-to/Pay-to CV No.";
      "Vendor Posting Group" := CVLedgerEntryBuffer."CV Posting Group";
      "Global Dimension 1 Code" := CVLedgerEntryBuffer."Global Dimension 1 Code";
      "Global Dimension 2 Code" := CVLedgerEntryBuffer."Global Dimension 2 Code";
      "Dimension Set ID" := CVLedgerEntryBuffer."Dimension Set ID";
      "Purchaser Code" := CVLedgerEntryBuffer."Salesperson Code";
      "User ID" := CVLedgerEntryBuffer."User ID";
      "Source Code" := CVLedgerEntryBuffer."Source Code";
      "On Hold" := CVLedgerEntryBuffer."On Hold";
      "Applies-to Doc. Type" := CVLedgerEntryBuffer."Applies-to Doc. Type";
      "Applies-to Doc. No." := CVLedgerEntryBuffer."Applies-to Doc. No.";
      Open := CVLedgerEntryBuffer.Open;
      "Due Date" := CVLedgerEntryBuffer."Due Date" ;
      "Pmt. Discount Date" := CVLedgerEntryBuffer."Pmt. Discount Date";
      "Original Pmt. Disc. Possible" := CVLedgerEntryBuffer."Original Pmt. Disc. Possible";
      "Remaining Pmt. Disc. Possible" := CVLedgerEntryBuffer."Remaining Pmt. Disc. Possible";
      "Pmt. Disc. Rcd.(LCY)" := CVLedgerEntryBuffer."Pmt. Disc. Given (LCY)";
      Positive := CVLedgerEntryBuffer.Positive;
      "Closed by Entry No." := CVLedgerEntryBuffer."Closed by Entry No.";
      "Closed at Date" := CVLedgerEntryBuffer."Closed at Date";
      "Closed by Amount" := CVLedgerEntryBuffer."Closed by Amount";
      "Applies-to ID" := CVLedgerEntryBuffer."Applies-to ID";
      "Journal Batch Name" := CVLedgerEntryBuffer."Journal Batch Name";
      "Reason Code" := CVLedgerEntryBuffer."Reason Code";
      "Bal. Account Type" := CVLedgerEntryBuffer."Bal. Account Type";
      "Bal. Account No." := CVLedgerEntryBuffer."Bal. Account No.";
      "Transaction No." := CVLedgerEntryBuffer."Transaction No.";
      "Closed by Amount (LCY)" := CVLedgerEntryBuffer."Closed by Amount (LCY)";
      "Debit Amount" := CVLedgerEntryBuffer."Debit Amount";
      "Credit Amount" := CVLedgerEntryBuffer."Credit Amount";
      "Debit Amount (LCY)" := CVLedgerEntryBuffer."Debit Amount (LCY)";
      "Credit Amount (LCY)" := CVLedgerEntryBuffer."Credit Amount (LCY)";
      "Document Date" := CVLedgerEntryBuffer."Document Date";
      "External Document No." := CVLedgerEntryBuffer."External Document No.";
      "No. Series" := CVLedgerEntryBuffer."No. Series";
      "Closed by Currency Code" := CVLedgerEntryBuffer."Closed by Currency Code";
      "Closed by Currency Amount" := CVLedgerEntryBuffer."Closed by Currency Amount";
      "Adjusted Currency Factor" := CVLedgerEntryBuffer."Adjusted Currency Factor";
      "Original Currency Factor" := CVLedgerEntryBuffer."Original Currency Factor";
      "Pmt. Disc. Tolerance Date" := CVLedgerEntryBuffer."Pmt. Disc. Tolerance Date";
      "Max. Payment Tolerance" := CVLedgerEntryBuffer."Max. Payment Tolerance";
      "Accepted Payment Tolerance" := CVLedgerEntryBuffer."Accepted Payment Tolerance";
      "Accepted Pmt. Disc. Tolerance" := CVLedgerEntryBuffer."Accepted Pmt. Disc. Tolerance";
      "Pmt. Tolerance (LCY)" := CVLedgerEntryBuffer."Pmt. Tolerance (LCY)";
      "Amount to Apply" := CVLedgerEntryBuffer."Amount to Apply";
      Prepayment := CVLedgerEntryBuffer.Prepayment;
      VALIDATE("Prepmt. Diff. Appln. Entry No.",CVLedgerEntryBuffer."Prepmt. Diff. Appln. Entry No.");
      "Agreement No." := CVLedgerEntryBuffer."Agreement No.";
      //NC MLN03 > EB
      "Agreement Condition No." := CVLedgerEntryBuffer."Agreement Condition No.";
      "Amount Type" := CVLedgerEntryBuffer."Amount Type";
      //NC MLN03 < EB
      //NC APCOC-56 > DP
      "Interest Accrual" :=  CVLedgerEntryBuffer."Interest Accrual";
      //NC APCOC-56 < DP
      //NC S1893 > PCH
      "Business Unit Code" := CVLedgerEntryBuffer."Business Unit Code";
      //NC S1893 < PCH
    END;

    PROCEDURE RecalculateAmounts@36(FromCurrencyCode@1001 : Code[10];ToCurrencyCode@1002 : Code[10];PostingDate@1003 : Date);
    VAR
      CurrExchRate@1004 : Record 330;
    BEGIN
      IF ToCurrencyCode = FromCurrencyCode THEN
        EXIT;

      "Remaining Amount" :=
        CurrExchRate.ExchangeAmount("Remaining Amount",FromCurrencyCode,ToCurrencyCode,PostingDate);
      "Remaining Pmt. Disc. Possible" :=
        CurrExchRate.ExchangeAmount("Remaining Pmt. Disc. Possible",FromCurrencyCode,ToCurrencyCode,PostingDate);
      "Accepted Payment Tolerance" :=
        CurrExchRate.ExchangeAmount("Accepted Payment Tolerance",FromCurrencyCode,ToCurrencyCode,PostingDate);
      "Amount to Apply" :=
        CurrExchRate.ExchangeAmount("Amount to Apply",FromCurrencyCode,ToCurrencyCode,PostingDate);
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterCopyVendLedgerEntryFromGenJnlLine@8(VAR VendorLedgerEntry@1000 : Record 25;VAR GenJournalLine@1001 : Record 81);
    BEGIN
    END;

    PROCEDURE SetAgreementNo@1000000003(VAR VLE@1000000010 : Record 25);
    VAR
      GJTemplate@1000000004 : Record 80;
      GJBatch@1000000003 : Record 232;
      GJLine@1000000000 : Record 81;
      GJLineForm@1000000001 : Page 39;
      AgreeDetailForm@1101495003 : Page 50167;
      StandardParam@1000000002 : Record 50076;
      LineNo@1000000005 : Integer;
      VendorAgree@1000000006 : Record 14901;
      AgreeDetail@1000000007 : Record 50096;
      VendorAgreeForm@1000000008 : Page 14913;
      Selected@1000000013 : Integer;
      SelectedVendNo@1000000014 : Code[20];
      DimMgt@1101495000 : Codeunit 408;
      TempDimSetEntry@1101495001 : TEMPORARY Record 480;
      TempDimSetEntry2@1101495002 : TEMPORARY Record 480;
    BEGIN
      //NC NOS-26 SPA функция перенесена со страницы и модифицирована

      // BMN 17.09.2010 Изменение номера договора в учтенных операциях путем создания и учета в финжурнале
      // обратной операции и операции с новым кодом договора.

      // Пишем в финжурнал:
      // 1. Обратная операция
      // 2. Новая операция
      // 3. Копируем измерения из старой операции в новую

      // Selected := STRMENU('Привязать и открыть журнал,Привязать и учесть автоматически', 1);
      Selected := STRMENU('Привязать,Привязать и учесть автоматически', 1);
      IF Selected = 0 THEN
        EXIT;

      IF VLE.ISEMPTY THEN
        ERROR('Выберите записи!')
      ELSE BEGIN
        VLE.SETRANGE(Open, TRUE);
        IF NOT VLE.FIND('+') THEN
          ERROR('Изменение договора возможно только в открытых операциях!');
      END;

      SelectedVendNo := VLE."Vendor No.";
      REPEAT
        IF VLE."Vendor No." <> SelectedVendNo THEN
          ERROR('Выберите операции для одного поставщика!');
      UNTIL VLE.NEXT(-1) = 0 ;

      IF NOT GJTemplate.GET('GENJL') THEN BEGIN
      //    ERROR('Создайте шаблон финжурнала с названием "GENJL"!');
        GJTemplate.INIT;
        GJTemplate.Name := 'GENJL';
        GJTemplate.Description := 'Общий шаблон';
        GJTemplate."Source Code" := 'ФИНЖУР';
        GJTemplate."Force Doc. Balance" := TRUE;
        GJTemplate.INSERT(TRUE);
        COMMIT;
      END;

      IF NOT GJBatch.GET('GENJL', 'SETAGREE') THEN BEGIN
      //    ERROR('Создайте в шаблоне финжурнала с названием "GENJL"\раздел "SETAGREE"!');
        GJBatch."Journal Template Name" := 'GENJL';
        GJBatch.Name := 'SETAGREE';
        GJBatch.Description := 'Журнал для привязки операций к договору';
        GJBatch.INSERT(TRUE);
        COMMIT;
      END;

      GJLine.RESET;
      GJLine.SETRANGE("Journal Template Name", 'GENJL');
      GJLine.SETRANGE("Journal Batch Name", 'SETAGREE');

      LineNo := 0;
      IF GJLine.FINDLAST THEN
        LineNo := GJLine."Line No.";

      VendorAgree.RESET;
      VendorAgree.SETRANGE("Vendor No.", VLE."Vendor No.");
      VendorAgree.SETRANGE("Agreement Type", VendorAgree."Agreement Type"::Loans);
      VendorAgreeForm.SETTABLEVIEW(VendorAgree);
      VendorAgreeForm.LOOKUPMODE(TRUE);
      IF VendorAgreeForm.RUNMODAL = ACTION::LookupOK THEN
        VendorAgreeForm.GETRECORD(VendorAgree)
      ELSE
        EXIT;

      AgreeDetail.RESET;
      AgreeDetail.SETRANGE("Source Type", AgreeDetail."Source Type"::Vendor);
      AgreeDetail.SETRANGE("Source No.", VendorAgree."Vendor No.");
      AgreeDetail.SETRANGE("Agreement No.", VendorAgree."No.");
      AgreeDetail.SETRANGE("Agreement Type", AgreeDetail."Agreement Type"::Loans);
      IF AgreeDetail.FINDFIRST THEN BEGIN
        AgreeDetailForm.SETTABLEVIEW(AgreeDetail);
        AgreeDetailForm.LOOKUPMODE(TRUE);
        IF AgreeDetailForm.RUNMODAL = ACTION::LookupOK THEN
          AgreeDetailForm.GETRECORD(AgreeDetail)
        ELSE
          EXIT;
      END ELSE
        AgreeDetail.INIT;

      REPEAT
        CALCFIELDS(Amount, "Amount (LCY)");

        LineNo += 1000;                 // Обратная операция
        GJLine.INIT;
        GJLine."Journal Template Name" := GJBatch."Journal Template Name";
        GJLine."Journal Batch Name" := GJBatch.Name;
        GJLine."Line No." := LineNo;
        GJLine."Account Type" := GJLine."Account Type"::Vendor;
        GJLine."Account No." := VLE."Vendor No.";
        GJLine."Posting Date" := VLE."Posting Date";
        GJLine."Document Type" := 0;
        GJLine."Document No." := VLE."Document No.";
        GJLine."Document Date" := VLE."Document Date";
        GJLine."External Document No." := VLE."External Document No.";
        GJLine.Description := 'Обратная операция';
        GJLine."Currency Code" := VLE."Currency Code";

        GJLine."Currency Factor" := VLE."Original Currency Factor";  // ???  или Adjusted Curr Factor?
        GJLine.VALIDATE(Amount, - VLE.Amount);
        GJLine.VALIDATE("Amount (LCY)", - VLE."Amount (LCY)");

        GJLine."Amount Type" := VLE."Amount Type";      // TD BMN 28.08.2012

        GJLine."Posting Group" := VLE."Vendor Posting Group";
        GJLine."Shortcut Dimension 1 Code" := VLE."Global Dimension 1 Code";
        GJLine."Shortcut Dimension 2 Code" := VLE."Global Dimension 2 Code";
        GJLine."Salespers./Purch. Code" := VLE."Purchaser Code";
        GJLine."Source Code" := VLE."Source Code";
        GJLine.Quantity := 1;
        GJLine."Agreement No." := VLE."Agreement No.";
        GJLine."Agreement Condition No." := VLE."Agreement Condition No.";
        GJLine."Applies-to Doc. No." := VLE."Document No.";
        //NC NOS-26 > SPA
        DimMgt.UpdateGenJnlLineDim(GJLine, VLE."Dimension Set ID");
        //NC NOS-26 < SPA
        GJLine.INSERT(TRUE);

        LineNo += 1000;                 //  Новая операция
        GJLine.INIT;
        GJLine."Journal Template Name" := GJBatch."Journal Template Name";
        GJLine."Journal Batch Name" := GJBatch.Name;
        GJLine."Line No." := LineNo;
        GJLine."Account Type" := GJLine."Account Type"::Vendor;
        GJLine."Account No." := VLE."Vendor No.";
        GJLine."Posting Date" := VLE."Posting Date";
        GJLine."Document Type" := 0;
        GJLine."Document No." := VLE."Document No.";
        GJLine."Document Date" := VLE."Document Date";
        GJLine."External Document No." := VLE."External Document No.";
        GJLine.Description := VLE.Description;
        GJLine."Currency Code" := VLE."Currency Code";

        GJLine."Currency Factor" := VLE."Original Currency Factor";
        GJLine.VALIDATE(Amount, VLE.Amount);
        GJLine.VALIDATE("Amount (LCY)", VLE."Amount (LCY)");

        GJLine."Amount Type" := VLE."Amount Type";      // TD BMN 28.08.2012

        GJLine."Posting Group" := VLE."Vendor Posting Group";
        GJLine."Shortcut Dimension 1 Code" := VLE."Global Dimension 1 Code";
        GJLine."Shortcut Dimension 2 Code" := VLE."Global Dimension 2 Code";
        GJLine."Salespers./Purch. Code" := VLE."Purchaser Code";
        GJLine."Source Code" := VLE."Source Code";
        GJLine.Quantity := 1;

        GJLine."Agreement No." := VendorAgree."No.";
        GJLine."Agreement Condition No." := AgreeDetail."Condition No.";
        //NC NOS-26 > SPA
        DimMgt.GetDimensionSet(TempDimSetEntry, VLE."Dimension Set ID");
        DimMgt.GetDimensionSet(TempDimSetEntry2, 0);
        IF TempDimSetEntry.FINDSET THEN
          REPEAT
            TempDimSetEntry2.VALIDATE("Dimension Code", TempDimSetEntry."Dimension Code");
            IF TempDimSetEntry2.FIND THEN
              TempDimSetEntry2.DELETE;
            IF TempDimSetEntry."Dimension Value Code" = 'DEAL' THEN
              TempDimSetEntry2.VALIDATE("Dimension Value Code", VendorAgree."No.")
            ELSE
              TempDimSetEntry2.VALIDATE("Dimension Value Code", TempDimSetEntry."Dimension Value Code");
            TempDimSetEntry2.SetObject(GJLine);
            TempDimSetEntry2.INSERT(TRUE);
          UNTIL TempDimSetEntry.NEXT = 0;
        DimMgt.UpdateGenJnlLineDim(GJLine, DimMgt.GetDimensionSetID(TempDimSetEntry2));
        //NC NOS-26 < SPA
        GJLine.INSERT(TRUE);
      UNTIL VLE.NEXT = 0;

      COMMIT;

      GJLine.RESET;
      GJLine.SETRANGE("Journal Template Name", 'GENJL');
      GJLine.SETRANGE("Journal Batch Name", 'SETAGREE');
      CASE Selected OF
       1:
          MESSAGE('Сформирован фин. журнал в разделе "SETAGREE"!');

       2: BEGIN
            CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post", GJLine);
            IF GJLine.FINDFIRST THEN BEGIN
              GJLineForm.SETTABLEVIEW(GJLine);
              GJLineForm.RUN;
            END;
          END;
      END;
    END;

    PROCEDURE SetPrepayment@1000000004(VAR VLE@1000000010 : Record 25);
    VAR
      GJTemplate@1000000004 : Record 80;
      GJBatch@1000000003 : Record 232;
      GJLine@1000000000 : Record 81;
      GJLineForm@1000000001 : Page 39;
      LineNo@1000000005 : Integer;
      VendorPostGroupForm@1000000008 : Page 111;
      VendorPostGroup@1000000009 : Record 93;
      GroupFilter@1000000002 : Text[512];
      PostGroupFrom@1000000007 : Record 93;
      PostGroupTo@1000000006 : Record 93;
      SelectedPostGroup@1000000013 : Code[20];
      DimMgt@1101495000 : Codeunit 408;
    BEGIN
      //NC NOS-26 SPA функция перенесена со страницы и модифицирована

      // BMN 11.01.2010
      // Изменение учетной группы в операциях путем создания и учета в финжурнале
      // обратной операции для учетной группы V_11106010 с применением к исходной задолженности
      // и операции с новым кодом учетной группы - V_20807000 и признаком "Аванс" и статусом аванса - "Постановка".

      // Пишем в финжурнал:
      // 1. Обратная операция
      // 2. Новая операция
      // 3. Копируем измерения из старой операции в новую

      IF NOT CONFIRM('Изменить учетную группу в выбранных операциях?') THEN
        EXIT;

      IF NOT VLE.FIND('+') THEN
        ERROR('Выберите записи!');

      SelectedPostGroup := VLE."Vendor Posting Group";
      REPEAT
        IF VLE."Vendor Posting Group" <> SelectedPostGroup THEN
          ERROR('Выберите операции с одной учетной группой!');
      UNTIL VLE.NEXT(-1) = 0 ;

      VLE.SETRANGE("Document Type", VLE."Document Type"::Payment);
      VLE.SETRANGE(Open, TRUE);
      VLE.SETRANGE(Prepayment, FALSE);
      IF NOT VLE.FINDSET THEN
        ERROR('Изменение учетной группы возможно только\в открытых операциях с типом "Оплата"\и признаком "Аванс"=Нет !');

      PostGroupFrom.GET(VLE."Vendor Posting Group");
      PostGroupTo.RESET;
      PostGroupTo.FILTERGROUP(250);
      PostGroupTo.SETRANGE("Prepayment Account", PostGroupFrom."Payables Account");
      PostGroupTo.FILTERGROUP(0);
      IF PostGroupTo.FINDFIRST THEN BEGIN
        VendorPostGroupForm.LOOKUPMODE(TRUE);
        VendorPostGroupForm.CAPTION := 'Новая группа';
        VendorPostGroupForm.SETTABLEVIEW(PostGroupTo);
        IF VendorPostGroupForm.RUNMODAL = ACTION::LookupOK THEN
          VendorPostGroupForm.GETRECORD(PostGroupTo)
        ELSE
          EXIT;
      END ELSE
        ERROR('Для группы расчетов с поставщиками\%1\нет подходящей группы для постановки на аванс', PostGroupFrom.Code);

      IF NOT GJTemplate.GET('GENJL') THEN BEGIN
        GJTemplate.INIT;
        GJTemplate.Name := 'GENJL';
        GJTemplate.Description := 'Общий шаблон';
        GJTemplate."Source Code" := 'ФИНЖУР';
        GJTemplate."Force Doc. Balance" := TRUE;
        GJTemplate.INSERT(TRUE);
        COMMIT;
      END;

      IF NOT GJBatch.GET('GENJL', 'SETPREPAY') THEN BEGIN
        GJBatch."Journal Template Name" := 'GENJL';
        GJBatch.Name := 'SETPREPAY';
        GJBatch.Description := 'Журнал для постановки на аванс';
        GJBatch.INSERT(TRUE);
        COMMIT;
      END;

      GJLine.RESET;
      GJLine.SETRANGE("Journal Template Name", 'GENJL');
      GJLine.SETRANGE("Journal Batch Name", 'SETPREPAY');

      LineNo := 0;
      IF GJLine.FINDLAST THEN
        LineNo := GJLine."Line No.";

      REPEAT
        CALCFIELDS(Amount, "Amount (LCY)");

        LineNo += 1000;                 // Обратная операция
        GJLine.INIT;
        GJLine."Journal Template Name" := GJBatch."Journal Template Name";
        GJLine."Journal Batch Name" := GJBatch.Name;
        GJLine."Line No." := LineNo;
        GJLine."Account Type" := GJLine."Account Type"::Vendor;
        GJLine."Account No." := VLE."Vendor No.";
        GJLine."Posting Date" := VLE."Posting Date";
        GJLine."Document Type" := VLE."Document Type";
        GJLine."Document No." := VLE."Document No.";
        GJLine."Document Date" := VLE."Document Date";
        GJLine."External Document No." := VLE."External Document No.";
        GJLine.Description := 'Обратная операция';
        GJLine."Currency Code" := VLE."Currency Code";
        //NC S1893 > PCH
        GJLine."Business Unit Code" := VLE."Business Unit Code";
        //NC S1893 < PCH

        GJLine."Currency Factor" := VLE."Original Currency Factor";  // ???  или Adjusted Curr Factor?
        GJLine.VALIDATE(Amount, - VLE.Amount);
        GJLine.VALIDATE("Amount (LCY)", - VLE."Amount (LCY)");

        GJLine."Posting Group" := VLE."Vendor Posting Group";
        GJLine.Prepayment := VLE.Prepayment;
        GJLine."Shortcut Dimension 1 Code" := VLE."Global Dimension 1 Code";
        GJLine."Shortcut Dimension 2 Code" := VLE."Global Dimension 2 Code";
        GJLine."Salespers./Purch. Code" := VLE."Purchaser Code";
        GJLine."Source Code" := VLE."Source Code";
        GJLine.Quantity := 1;
        GJLine."Agreement No." := VLE."Agreement No.";
        GJLine."Agreement Condition No." := VLE."Agreement Condition No.";
        GJLine."Applies-to Doc. No." := VLE."Document No.";
        //NC NOS-26 > SPA
        DimMgt.UpdateGenJnlLineDim(GJLine, VLE."Dimension Set ID");
        //NC NOS-26 < SPA
        GJLine.INSERT(TRUE);

        LineNo += 1000;                 //  Новая операция
        GJLine.INIT;
        GJLine."Journal Template Name" := GJBatch."Journal Template Name";
        GJLine."Journal Batch Name" := GJBatch.Name;
        GJLine."Line No." := LineNo;
        GJLine."Account Type" := GJLine."Account Type"::Vendor;
        GJLine."Account No." := VLE."Vendor No.";
        GJLine."Posting Date" := VLE."Posting Date";
        GJLine."Document Type" := VLE."Document Type";
        GJLine."Document No." := VLE."Document No.";
        GJLine."Document Date" := VLE."Document Date";
        GJLine."External Document No." := VLE."External Document No.";
        GJLine.Description := VLE.Description;
        GJLine."Currency Code" := VLE."Currency Code";
        //NC S1893 > PCH
        GJLine."Business Unit Code" := VLE."Business Unit Code";
        //NC S1893 < PCH

        GJLine.Prepayment := TRUE;
        GJLine."Prepayment Status" := GJLine."Prepayment Status"::Set;
        GJLine."Prepayment Document No." := VLE."Document No.";

        GJLine."Posting Group" := PostGroupTo.Code;

        GJLine."Currency Factor" := VLE."Original Currency Factor";
        GJLine.VALIDATE(Amount, VLE.Amount);
        GJLine.VALIDATE("Amount (LCY)", VLE."Amount (LCY)");

        GJLine."Shortcut Dimension 1 Code" := VLE."Global Dimension 1 Code";
        GJLine."Shortcut Dimension 2 Code" := VLE."Global Dimension 2 Code";
        GJLine."Salespers./Purch. Code" := VLE."Purchaser Code";
        GJLine."Source Code" := VLE."Source Code";
        GJLine.Quantity := 1;

        GJLine."Agreement No." := VLE."Agreement No.";
        GJLine."Agreement Condition No." := VLE."Agreement Condition No.";
        //NC NOS-26 > SPA
        DimMgt.UpdateGenJnlLineDim(GJLine, VLE."Dimension Set ID");
        //NC NOS-26 < SPA
        GJLine.INSERT(TRUE);
      UNTIL VLE.NEXT = 0;

      //COMMIT;

      MESSAGE('Сформирован фин. журнал в разделе "SETPREPAY"!');
    END;

    BEGIN
    {
      NC OT Добавлен ключ Vendor No.,Agreement No.,Posting Date
      NC MLN03 EB добавлены поля "Agreement Condition No.", "Amount Type"
      NC MTD02 AIG Добавлено поле
      NC MLN09 DP Добавлено поле "Interest Calc. No. of Days"
      NC MLN09.03 DP Добавлено поле "Change Condition Block Status"
      NC OAM22 DP Изменено свойство Caption Class полей ..(LCY)
      NC OAM30 DP Добавлено поле Text1 для описания платежных операций
      NC OAM39 DP Добавлено поле-ссылка "Local G/L Account"
      NC OAM38 DP Изменение триггера OnDelete
      NC BLD001 = NCMLN03,MTD02,MLN09,OAM22,OAM30,OAM39,OAM38,APCOC56
      NC S1055 PCH дополнен ключ: Vendor No.,Agreement No.,Agreement Condition No.,Amount Type,Posting Date
                   полями: Positive,Currency Code,Vendor Posting Group,Open
      NC NCS-1268 DP Изменен OptionString поля "Amount Type"
      NC S-1893 PCH добавлено поле "Business Unit Code"
      --------------------------------------------
      NC NOS-26 SPA Перенос кода на новую функциональность
    }
    END.
  }
}

