OBJECT Codeunit 50034 G/L Corresp. Management2
{
  OBJECT-PROPERTIES
  {
    Date=19.02.15;
    Time=12:42:17;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    TableNo=17;
    Permissions=TableData 17=rimd,
                TableData 21=rimd,
                TableData 25=rimd,
                TableData 32=rimd,
                TableData 169=rimd,
                TableData 203=rimd,
                TableData 238=rimd,
                TableData 254=rimd,
                TableData 271=rimd,
                TableData 272=rimd,
                TableData 5601=rimd,
                TableData 5802=rimd,
                TableData 5907=rimd,
                TableData 5908=rimd,
                TableData 12401=rimd,
                TableData 12404=rimd,
                TableData 12405=rimd;
    OnRun=VAR
            TransNo@1210005 : Integer;
            WindowDialog@1210008 : Dialog;
            ShowDialog@1210007 : Boolean;
            PrevAmount@1101495003 : Decimal;
            PrevAccount@1101495002 : Code[20];
            PrevEntry@1101495000 : Integer;
            k@1101495001 : Integer;
          BEGIN
            ShowDialog := GETFILTER("Entry No.") = '';

            //TDRANCS-929>
            IF NOT GUIALLOWED THEN
              ShowDialog := FALSE;
            //TDRANCS-929<

            IF ShowDialog THEN
              WindowDialog.OPEN(Text001);
            TransNo := 0;


            //NC #6607 > DP
            IF NOT IsSpecialRun THEN
            //NC #6607 < DP

            IF RECORDLEVELLOCKING THEN
              LOCKTABLE;

            IF FINDSET THEN BEGIN
              REPEAT
                IF TransNo <> "Transaction No." THEN BEGIN
                  //NC NCS-936 AT >>
                  COMMIT;
                  //NC NCS-936 AT <<
                  ClearBuffer("Transaction No.");
                  IF ShowDialog THEN
                    WindowDialog.UPDATE(1,"Transaction No.");
                  IF TransNo > 0 THEN
                    //NC NCS-1755 > DP
                    k :=0;
                    IF CorrTransactions.GET(TransNo) THEN
                      PostTrans2
                    ELSE
                    //NC NCS-1755 < DP
                    PostTrans;
                  GLEntryTemp.RESET;
                  GLEntryTemp.DELETEALL;
                  TransNo := "Transaction No.";
                END;

                //NC NCS-1755 > DP
                IF CorrTransactions.GET(TransNo) THEN BEGIN
                  IF (ROUND(("Additional-Currency Amount"+PrevAmount),0.01)=0) AND
                  ("Entry No."= PrevEntry + 1)
                  AND (k=1)
                  THEN BEGIN
                    GLEntryTemp2.TRANSFERFIELDS(Rec);
                    GLEntryTemp2."Used in Correspondence" := FALSE;
                    GLEntryTemp2.INSERT;
                    k :=2;
                  END ELSE BEGIN
                    GLEntryTemp.TRANSFERFIELDS(Rec);
                    GLEntryTemp."Used in Correspondence" := FALSE;
                    GLEntryTemp.INSERT;
                    k:=1;
                  END;
                  PrevAmount := "Additional-Currency Amount";
                  IF "Source G/L Account No."<>'' THEN
                    PrevAccount := "Source G/L Account No."
                  ELSE
                    PrevAccount := "G/L Account No.";
                  PrevEntry := "Entry No.";
                END ELSE BEGIN
                //NC NCS-1755 > DP

                GLEntryTemp.TRANSFERFIELDS(Rec);
                GLEntryTemp."Used in Correspondence" := FALSE;
                GLEntryTemp.INSERT;

                //NC NCS-1755 > DP
                END;
                //NC NCS-1755 < DP

              UNTIL NEXT = 0;
              ClearBuffer(TransNo);

              //NC NCS-1755 > DP
              IF CorrTransactions.GET(TransNo) THEN
                PostTrans2
              ELSE
              //NC NCS-1755 < DP

              PostTrans;
            END;
            IF ShowDialog THEN
              WindowDialog.CLOSE;
          END;

  }
  CODE
  {
    VAR
      Text001@1210010 : TextConst 'ENU=Transaction No. #1#######;RUS=Обработка Транзакции Но. #1#######';
      GLEntryTemp@1210000 : TEMPORARY Record 17;
      IsSpecialRun@1101495000 : Boolean;
      FXAccount@1101495001 : Code[20];
      LastEntry@1101495002 : Integer;
      GLEntryTemp1@1101495003 : TEMPORARY Record 17;
      CorrTransactions@1101495004 : Record 50164;
      IsFXTransaction@1101495005 : Boolean;
      GLEntryTemp2@1101495006 : TEMPORARY Record 17;

    LOCAL PROCEDURE PostTrans@1210005();
    VAR
      FoundEntry@1210000 : Boolean;
      CurrentTempRec@1210003 : TEMPORARY Record 17;
      Level@1210004 : Integer;
      SimpleMode@1210002 : Boolean;
    BEGIN
      SimpleMode := FALSE;
      WITH GLEntryTemp DO BEGIN
        FOR Level := 1 TO 3 DO BEGIN

          SimpleMode := (Level > 1);
          IF FIND('-') THEN

          REPEAT
            //NC NCS-1477 > DP
            GLEntryTemp1 := GLEntryTemp;
            //NC NCS-1477 < DP

            IF (Amount = 0) AND ("Additional-Currency Amount" = 0) THEN
              //NC NCS-1477 > DP
              BEGIN
              //NC NCS-1477 < DP

              DELETE

              //NC NCS-1477 > DP
              ;
                GLEntryTemp := GLEntryTemp1;
              END
              //NC NCS-1477 < DP

            ELSE BEGIN
              CurrentTempRec := GLEntryTemp;
              FoundEntry := FALSE;
              SETFILTER("Entry No.",'<>%1',CurrentTempRec."Entry No.");
              IF FIND('-') THEN
                REPEAT
                  IF (NOT CurrentTempRec."Used in Correspondence") OR
                     (NOT GLEntryTemp."Used in Correspondence") THEN
                    IF ValidateEntries(CurrentTempRec,GLEntryTemp,SimpleMode) THEN BEGIN
                      FoundEntry := TRUE;
                      PostDDE(CurrentTempRec,GLEntryTemp);
                      IF (Amount = 0) AND ("Additional-Currency Amount" = 0) THEN

                        //NC NCS-1477 > DP
                        BEGIN
                        //NC NCS-1477< DP

                        DELETE

                        //NC NCS-1477 > DP
                        ;
                          GLEntryTemp := GLEntryTemp1;
                        END
                        //NC NCS-1477 < DP

                      ELSE
                        MODIFY;

                      IF Level = 3 THEN
                        FoundEntry := GLEntryTemp."Used in Correspondence";
                    END;
                UNTIL FoundEntry OR (NEXT = 0);

                GLEntryTemp := CurrentTempRec;
                IF (Amount = 0) AND ("Additional-Currency Amount" = 0) THEN

                  //NC NCS-1477 > DP
                  BEGIN
                  //NC NCS-1477 < DP

                  DELETE

                  //NC NCS-1477 > DP
                  ;
                    GLEntryTemp := GLEntryTemp1;
                  END
                  //NC NCS-1477 < DP

                ELSE
                  MODIFY;
             END;
          UNTIL NEXT = 0;
        END;

        RESET;
        IF FIND('-') THEN
          REPEAT
            UpdateBuffer("Entry No.",Amount);
          UNTIL NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE PostDDE@1210000(VAR Rec1@1210000 : TEMPORARY Record 17;VAR Rec2@1210001 : TEMPORARY Record 17);
    VAR
      "G/L Account"@1210008 : Record 15;
      DESetup@1210007 : Record 12400;
      Amount@1210003 : Decimal;
      AmountACY@1210002 : Decimal;
      Sign@1210009 : Integer;
      DebitEntry@1210010 : Record 17;
      CreditEntry@1210011 : Record 17;
      DEEntry@1210006 : Record 12401;
      DEEntryNo@1210004 : Integer;
      OriginalAmount@1000000000 : Decimal;
      OriginalAmount1@1000000001 : Decimal;
      OriginalAmount2@1000000002 : Decimal;
      OriginalCurrencyCode@1000000003 : Code[20];
      GLAccount1@1101495000 : Record 15;
      GLAccount2@1101495001 : Record 15;
      Rec11@1101495003 : TEMPORARY Record 17;
      Rec21@1101495002 : TEMPORARY Record 17;
      CorrEntryNo@1101495004 : Integer;
    BEGIN
      Sign := SignEntry(Rec1,TRUE);



      //NC #6607 > DP


      //NC NCS-845 > DP
      {
      IF IsSpecialRun THEN BEGIN
      }
      //NC NCS-845 > DP

      //NC NCS-1477.3 > DP
      GLAccount1.GET(Rec1."G/L Account No.");
      GLAccount2.GET(Rec2."G/L Account No.");
      //NC NCS-1477.4 > DP
      IF (GLAccount1."Income/Balance" =GLAccount1."Income/Balance"::"Income Statement") AND
       (Rec2."Additional-Currency Amount"<>0) THEN

      //IF GLAccount1."Income/Balance" =GLAccount1."Income/Balance"::"Income Statement" THEN

      //NC NCS-1477.4 < DP
      {
      IF  Rec1."G/L Account No."=FXAccount THEN
      }
      //NC NCS-1477.3 < DP

        AmountACY := Sign *  ABS(Rec1."Additional-Currency Amount")
      ELSE

        //NC NCS-1477.3 > DP

        //NC NCS-1477.4 > DP
        IF (GLAccount2."Income/Balance" =GLAccount2."Income/Balance"::"Income Statement") AND
         (Rec1."Additional-Currency Amount"<>0) THEN

        //IF GLAccount2."Income/Balance" =GLAccount2."Income/Balance"::"Income Statement" THEN

        //NC NCS-1477.4 < DP

        {
        IF Rec2."G/L Account No."=FXAccount THEN
        }
        //NC NCS-1477.3 < DP

           AmountACY := Sign *  ABS(Rec2."Additional-Currency Amount")
        ELSE

      //NC NCS-845 > DP
      {
          AmountACY := Sign * Min(ABS(Rec1."Additional-Currency Amount"),ABS(Rec2."Additional-Currency Amount"));

      END ELSE
      }
      //NC NCS-845 > DP


      //NC #6607 < DP

      AmountACY := Sign * Min(ABS(Rec1."Additional-Currency Amount"),ABS(Rec2."Additional-Currency Amount"));
      Sign := SignEntry(Rec1,FALSE);
      Amount :=Sign * Min(ABS(Rec1.Amount),ABS(Rec2.Amount));

      //NC OAM005 > DP
      IF Rec1."Original Currency Code"=Rec2."Original Currency Code" THEN BEGIN
        OriginalAmount1 :=Sign * Min(ABS(Rec1."Original Amount"),ABS(Rec2."Original Amount"));
        OriginalAmount2 := OriginalAmount1;
        OriginalAmount := OriginalAmount1;
        OriginalCurrencyCode := Rec1."Original Currency Code";
      END;
      IF (Rec1."Original Currency Code"<>Rec2."Original Currency Code") AND
         (Rec1."Original Currency Code"='')
      THEN BEGIN
        OriginalAmount1 :=Sign * Min(ABS(Rec1."Original Amount"),ABS(Rec2.Amount));

        //NC OAM005.1 > DP
        IF Rec2.Amount=0 THEN
          OriginalAmount2 :=0
        ELSE
        //NC OAM005.1 < DP

        OriginalAmount2 :=Sign * Min(ABS(ROUND(Rec1."Original Amount"*Rec2."Original Amount"/Rec2.Amount,0.01)),
          ABS(Rec2."Original Amount"));
        OriginalAmount := OriginalAmount2;
        OriginalCurrencyCode := Rec2."Original Currency Code";

      END;
      IF (Rec1."Original Currency Code"<>Rec2."Original Currency Code") AND
         (Rec2."Original Currency Code"='')
      THEN BEGIN

        //NC OAM005.1 > DP
        IF Rec1.Amount=0 THEN
          OriginalAmount1 :=0
        ELSE
        //NC OAM005.1 < DP

        OriginalAmount1 :=Sign * Min(ABS(Rec1."Original Amount"),
          ABS(ROUND(Rec2."Original Amount"*Rec1."Original Amount"/Rec1.Amount,0.01)));
        OriginalAmount2 :=Sign * Min(ABS(Rec1.Amount),ABS(Rec2."Original Amount"));
        OriginalAmount := OriginalAmount1;
        OriginalCurrencyCode := Rec1."Original Currency Code";
      END;
      IF (Rec1."Original Currency Code"<>Rec2."Original Currency Code") AND
         ((Rec1."Original Currency Code"<>'') AND (Rec2."Original Currency Code"<>''))
      THEN BEGIN

        //NC OAM005.1 > DP
        IF Rec1.Amount=0 THEN
          OriginalAmount1 :=0
        ELSE
        //NC OAM005.1 < DP

        OriginalAmount1 :=Sign *  ROUND(Min(ABS(Rec1.Amount),ABS(Rec2.Amount)) * Rec1."Original Amount"/ Rec1.Amount,0.01);

        //NC OAM005.1 > DP
        IF Rec2.Amount=0 THEN
          OriginalAmount2 :=0
        ELSE
        //NC OAM005.1 < DP

        OriginalAmount2 :=Sign *  ROUND(Min(ABS(Rec1.Amount),ABS(Rec2.Amount)) * Rec2."Original Amount"/ Rec2.Amount,0.01);
        OriginalAmount := OriginalAmount1;
        OriginalCurrencyCode := Rec1."Original Currency Code";

      END;
      //NC OAM005 < DP

      //NC NCS-825 > DP
      //Присвоение переменным текущих значений
      CLEAR(Rec11);
      CLEAR(Rec21);
      Rec11.TRANSFERFIELDS(Rec1);
      Rec21.TRANSFERFIELDS(Rec2);
      //NC NCS-825 < DP

      IF Debit(Rec1) THEN BEGIN
        DebitEntry.TRANSFERFIELDS(Rec1);
        CreditEntry.TRANSFERFIELDS(Rec2);
        Rec1.Amount := Rec1.Amount - Amount;
        Rec1."Additional-Currency Amount" := Rec1."Additional-Currency Amount" - AmountACY;

        Rec1."Add.-Currency Debit Amount" := Rec1."Add.-Currency Debit Amount" - AmountACY;
        Rec1."Add.-Currency Credit Amount" := 0;

        Rec2.Amount := Rec2.Amount + Amount;
        Rec2."Additional-Currency Amount" := Rec2."Additional-Currency Amount" + AmountACY;

        Rec2."Add.-Currency Credit Amount" := Rec2."Add.-Currency Credit Amount" - AmountACY;
        Rec2."Add.-Currency Debit Amount":= 0;

        //NC NCS-1477 > DP
        Rec1."Debit Amount" := Rec1."Debit Amount" - Amount;
        Rec1."Credit Amount" := 0;
        Rec2."Credit Amount" := Rec2."Credit Amount" - Amount;
        Rec2."Debit Amount":= 0;
        //NC NCS-1477 < DP

        //NC OAM005 > DP
        Rec1."Original Amount" := Rec1."Original Amount" - OriginalAmount1;
        Rec2."Original Amount" := Rec2."Original Amount" + OriginalAmount2;
        //NC OAM005 < DP

      END ELSE BEGIN
        DebitEntry.TRANSFERFIELDS(Rec2);
        CreditEntry.TRANSFERFIELDS(Rec1);
        Rec1.Amount := Rec1.Amount + Amount;
        Rec1."Additional-Currency Amount" := Rec1."Additional-Currency Amount" + AmountACY;

        Rec1."Add.-Currency Credit Amount" := Rec1."Add.-Currency Credit Amount" - AmountACY;
        Rec1."Add.-Currency Debit Amount":= 0;

        Rec2.Amount := Rec2.Amount - Amount;
        Rec2."Additional-Currency Amount" := Rec2."Additional-Currency Amount" - AmountACY;

        Rec2."Add.-Currency Debit Amount" := Rec2."Add.-Currency Debit Amount" - AmountACY;
        Rec2."Add.-Currency Credit Amount" := 0;

        //NC NCS-1477 > DP
        Rec1."Credit Amount" := Rec1."Credit Amount" - Amount;
        Rec1."Debit Amount":= 0;
        Rec2."Debit Amount" := Rec2."Debit Amount" - Amount;
        Rec2."Credit Amount" := 0;
        //NC NCS-1477 < DP

        //NC OAM005 > DP
        Rec1."Original Amount" := Rec1."Original Amount" + OriginalAmount1;
        Rec2."Original Amount" := Rec2."Original Amount" - OriginalAmount2;
        //NC OAM005 < DP

      END;

      //NC NCS-825 > DP
      //Определение признака Used in Correspondence с учетом закрытия ДОВ

      IF (Rec11.Amount <>0) AND (Rec1.Amount=0) AND
       (Rec11."Additional-Currency Amount"<>0) AND
       (Rec1."Additional-Currency Amount"=0)
      THEN BEGIN
        Rec1."Used in Correspondence" := TRUE;
        DEEntryNo := Rec1."Entry No.";
        CorrEntryNo := Rec2."Entry No.";
      END;

      IF (Rec11.Amount =0) AND (Rec11."Additional-Currency Amount"<>0) AND
       (Rec1."Additional-Currency Amount"=0)
      THEN BEGIN
        Rec1."Used in Correspondence" := TRUE;
        DEEntryNo := Rec1."Entry No.";
        CorrEntryNo := Rec2."Entry No.";
      END;

      IF (Rec11.Amount <>0) AND (Rec1.Amount=0)
       AND (Rec11."Additional-Currency Amount"=0)
      THEN BEGIN
        Rec1."Used in Correspondence" := TRUE;
        DEEntryNo := Rec1."Entry No.";
        CorrEntryNo := Rec2."Entry No.";
      END;

      IF (Rec21.Amount <>0) AND (Rec2.Amount=0) AND
       (Rec21."Additional-Currency Amount"<>0) AND
       (Rec2."Additional-Currency Amount"=0)
      THEN BEGIN
        Rec2."Used in Correspondence" := TRUE;
        DEEntryNo := Rec2."Entry No.";
        CorrEntryNo := Rec1."Entry No.";
      END;

      IF (Rec21.Amount =0) AND (Rec21."Additional-Currency Amount"<>0) AND
       (Rec2."Additional-Currency Amount"=0)
      THEN BEGIN
        Rec2."Used in Correspondence" := TRUE;
        DEEntryNo := Rec2."Entry No.";
        CorrEntryNo := Rec1."Entry No.";
      END;

      IF (Rec21.Amount <>0) AND (Rec2.Amount=0)
       AND (Rec21."Additional-Currency Amount"=0)
      THEN BEGIN
        Rec2."Used in Correspondence" := TRUE;
        DEEntryNo := Rec2."Entry No.";
        CorrEntryNo := Rec1."Entry No.";
      END;

          //NC NCS-1477.4 > DP
      IF DEEntryNo=0 THEN BEGIN
      IF (Rec11.Amount <>0) AND (Rec1.Amount=0) AND
       (Rec1."Additional-Currency Amount"<>0)
      THEN BEGIN
        DEEntryNo := Rec1."Entry No.";
        CorrEntryNo := Rec2."Entry No.";
      END;
      IF (Rec21.Amount <>0) AND (Rec2.Amount=0) AND
       (Rec2."Additional-Currency Amount"<>0)
      THEN BEGIN
        DEEntryNo := Rec2."Entry No.";
        CorrEntryNo := Rec1."Entry No.";
      END;
      IF (Rec11."Additional-Currency Amount" <>0) AND (Rec1."Additional-Currency Amount"=0) AND
       (Rec1.Amount<>0)
      THEN BEGIN
        DEEntryNo := Rec1."Entry No.";
        CorrEntryNo := Rec2."Entry No.";
      END;
      IF (Rec21."Additional-Currency Amount" <>0) AND (Rec2."Additional-Currency Amount"=0) AND
       (Rec2.Amount<>0)
      THEN BEGIN
        DEEntryNo := Rec2."Entry No.";
        CorrEntryNo := Rec1."Entry No.";
      END;
      END;
          //NC NCS-1477.4 < DP

      //NC NCS-1477.2 > DP
      IF DEEntryNo<>0 THEN
      {
      IF DEEntryNo=0 THEN
      }
      //NC NCS-1477.2 < DP

      //NC NCS-1477.1 > DP
      BEGIN
      //NC NCS-1477.1 < DP

      //NC NCS-825 < DP

      //NC NCS-1477 > DP
      {
      IF (NOT Rec1."Used in Correspondence") AND (NOT Rec2."Used in Correspondence") THEN
        IF (ABS(Rec1.Amount) < ABS(Rec2.Amount))
        THEN BEGIN
          Rec1."Used in Correspondence" := TRUE;
          DEEntryNo := Rec1."Entry No.";
        END ELSE BEGIN
          Rec2."Used in Correspondence" := TRUE;
          DEEntryNo := Rec2."Entry No.";
        END
      ELSE
        IF (NOT Rec1."Used in Correspondence") THEN BEGIN
          Rec1."Used in Correspondence" := TRUE;
          DEEntryNo := Rec1."Entry No.";
        END ELSE BEGIN
          Rec2."Used in Correspondence" := TRUE;
          DEEntryNo := Rec2."Entry No.";
        END;
      }
      //NC NCS-1477 < DP


      IF NOT DESetup.GET(DebitEntry."G/L Account No.",CreditEntry."G/L Account No.") THEN BEGIN
        DESetup.INIT;
        DESetup."Debit Account No." := DebitEntry."G/L Account No.";
        "G/L Account".GET(DebitEntry."G/L Account No.");
        DESetup."Debit Account Name" := "G/L Account".Name;
        DESetup."Credit Account No." :=CreditEntry."G/L Account No.";
        "G/L Account".GET(CreditEntry."G/L Account No.");
        DESetup."Credit Account Name" := "G/L Account".Name;
        DESetup.INSERT;
      END;


      DEEntry.INIT;
      DEEntry."Entry No." :=  DEEntryNo;

      //NC NCS-825 > DP
      //Дополнительное поле в ключе, позволяющее вставку ДОВ округления
      DEEntry."Corresp. Entry No." := CorrEntryNo;
      //NC NCS-825 < DP

      DEEntry."Document No." := Rec1."Document No.";
      DEEntry."Posting Date" :=  Rec1."Posting Date";
      DEEntry."Debit Account No." := DebitEntry."G/L Account No.";
      DEEntry."Credit Account No." := CreditEntry."G/L Account No.";
      DEEntry.Amount := Amount;
      DEEntry."Amount (ACY)" := AmountACY;
      DEEntry."User ID" :=  DebitEntry."User ID";
      DEEntry."Transaction No." :=  Rec1."Transaction No.";
      DEEntry."Business Unit Code" :=  Rec1."Business Unit Code";

      DEEntry."Debit Global Dimension 1 Code" :=  DebitEntry."Global Dimension 1 Code";
      DEEntry."Debit Global Dimension 2 Code" :=  DebitEntry."Global Dimension 2 Code";
      DEEntry."Debit Source Type" := DebitEntry."Source Type";
      DEEntry."Debit Source No." :=  DebitEntry."Source No.";

      DEEntry."Credit Global Dimension 1 Code" := CreditEntry."Global Dimension 1 Code";
      DEEntry."Credit Global Dimension 2 Code" := CreditEntry."Global Dimension 2 Code";
      DEEntry."Credit Source Type" := CreditEntry."Source Type";
      DEEntry."Credit Source No." := CreditEntry."Source No.";

      DEEntry.Positive :=  Sign = 1;
      DEEntry."Creation Date" := TODAY;
      DEEntry."Debit Entry No." := DebitEntry."Entry No.";
      DEEntry."Credit Entry No." := CreditEntry."Entry No.";

      //NC OAM005 > DP
      DEEntry."Original Currency Code" := OriginalCurrencyCode;
      DEEntry."Original Amount" := OriginalAmount;
      //NC OAM005 < DP

      //NC MDB05.2 > DP
      DEEntry."Debit Description" := DebitEntry.Description;
      DEEntry."Credit Description" := CreditEntry.Description;
      //NC MDB05.2 < DP

      DEEntry.INSERT;

      //NC NCS-1477.1 > DP
      END;
      //NC NCS-1477.1 < DP
    END;

    LOCAL PROCEDURE ValidateEntries@1210001(VAR Rec1@1210001 : Record 17;VAR Rec2@1210000 : Record 17;SimpleMode@1210004 : Boolean) : Boolean;
    VAR
      SameDebit@1210002 : Boolean;
      SameSign@1210003 : Boolean;
      SameSign1@1101495000 : Boolean;
    BEGIN
      IF NOT SimpleMode THEN
        IF Reverse(Rec1) <> Reverse(Rec2) THEN
          EXIT(FALSE);
      SameDebit := Debit(Rec1) = Debit(Rec2);
      SameSign := SignEntry(Rec1,FALSE) = SignEntry(Rec2,FALSE);

      //NC NCS-845.1 > DP
      {
      NC NCS-936 AT >>
      IF (Rec1."G/L Account No."=FXAccount) OR
      (Rec2."G/L Account No."=FXAccount) THEN
        IsSpecialRun := TRUE;
      NC NCS-936 AT <<
      }
      //NC NCS-845.1 < DP


      //NC NCS-825 > DP
      //не обрабатываем также одинаковый по знаку ДОВ
      SameSign1 := SignEntry(Rec1,TRUE) = SignEntry(Rec2,TRUE);

      IF IsSpecialRun THEN BEGIN
        IF (SameDebit = SameSign) AND (SameDebit = SameSign1) THEN
          EXIT(FALSE);
      END ELSE
      //NC NCS-825 > DP

      //NC NCS-1477 > DP
      {
      IF SameDebit = SameSign  THEN
      }
      //NC NCS-1477.4 > DP
      {
      IF (SameDebit = SameSign) OR (SameDebit = SameSign1) THEN
      }
      IF (SameDebit = SameSign) AND (SameDebit = SameSign1) THEN
      //NC NCS-1477.4 > DP
      //NC NCS-1477 < DP

        EXIT(FALSE);


      IF NOT SimpleMode THEN BEGIN
        IF (Rec1."Bal. Account Type" <> Rec1."Bal. Account Type"::"G/L Account") OR
          (Rec2."Bal. Account Type" <> Rec2."Bal. Account Type"::"G/L Account") THEN
          EXIT(FALSE);

        IF ((Rec1."Bal. Account Type" = Rec1."Bal. Account Type"::"G/L Account") AND
           (Rec1."Bal. Account No." <> Rec2."G/L Account No.")) OR
           (Rec1."Bal. Account No." = '') OR
           ((Rec2."Bal. Account Type" = Rec2."Bal. Account Type"::"G/L Account") AND
           (Rec2."Bal. Account No." <> Rec1."G/L Account No.")) OR
           (Rec2."Bal. Account No." = '') THEN
          EXIT(FALSE);
      END;
      EXIT(TRUE)
    END;

    LOCAL PROCEDURE SignEntry@1210002(GLentry@1210000 : Record 17;ACY@1470000 : Boolean) : Integer;
    BEGIN
      CASE ACY OF
        FALSE:
          IF (GLentry."Debit Amount" > 0) OR (GLentry."Credit Amount" > 0) THEN
        EXIT(1);
        TRUE:
          IF (GLentry."Add.-Currency Debit Amount" > 0) OR (GLentry."Add.-Currency Credit Amount" > 0) THEN
        EXIT(1);
      END;
      EXIT(-1);
    END;

    LOCAL PROCEDURE Reverse@1210007(GLEntry@1210000 : Record 17) : Boolean;
    BEGIN
      //NC NCS-1477 > DP
      {
      EXIT((GLEntry."Debit Amount" < 0) OR (GLEntry."Credit Amount" < 0) OR
      (GLEntry."Add.-Currency Debit Amount" < 0) OR (GLEntry."Add.-Currency Credit Amount" < 0));
      }
      EXIT((GLEntry."Debit Amount" < 0) OR (GLEntry."Credit Amount" < 0) OR
      ((GLEntry."Add.-Currency Debit Amount" < 0) AND (GLEntry.Amount=0)) OR
      ((GLEntry."Add.-Currency Credit Amount" < 0) AND (GLEntry.Amount=0)));
      //NC NCS-1477 > DP
    END;

    LOCAL PROCEDURE Debit@1210006(GLEntry@1210000 : Record 17) : Boolean;
    BEGIN
      IF GLEntry.Amount <> 0 THEN
        EXIT(GLEntry."Debit Amount" <> 0);
      EXIT(GLEntry."Add.-Currency Debit Amount" <> 0);
    END;

    LOCAL PROCEDURE Min@1210008(Value1@1210000 : Decimal;Value2@1210001 : Decimal) : Decimal;
    BEGIN
      IF Value1 < Value2 THEN
        EXIT(Value1)
      ELSE
        EXIT(Value2);
    END;

    LOCAL PROCEDURE UpdateBuffer@7(EntryNo@1210000 : Integer;CorAmount@1210002 : Decimal);
    VAR
      GLEntry@1210001 : Record 17;
      DoubleEntryBuffer@1210003 : Record 12402;
    BEGIN
      WITH DoubleEntryBuffer DO BEGIN
        INIT;
        GLEntry.GET(EntryNo);
        IF GET(GLEntry."Transaction No.",GLEntry."G/L Account No.") THEN BEGIN
          "G/L Amount" += GLEntry.Amount;
          "G/L Corresp. Amount" += CorAmount;
          IF "G/L Corresp. Amount" = 0 THEN
            DELETE
          ELSE
            MODIFY;
        END ELSE BEGIN
          "Transaction No." := GLEntry."Transaction No.";
          "G/L Account No." := GLEntry."G/L Account No.";
          "G/L Amount" := GLEntry.Amount;
          "G/L Corresp. Amount" := CorAmount;
          IF "G/L Corresp. Amount" <> 0 THEN
            INSERT;
        END;
      END;
    END;

    LOCAL PROCEDURE ClearBuffer@1210003(TransactionNo@1210000 : Integer);
    VAR
      DoubleEntryBuffer@1210001 : Record 12402;
    BEGIN
      DoubleEntryBuffer.RESET;
      DoubleEntryBuffer.SETRANGE("Transaction No.",TransactionNo);
      DoubleEntryBuffer.DELETEALL;
    END;

    PROCEDURE SetTransactionNo@1210004(GLEntry@1210000 : Record 17);
    VAR
      DtldCustLedgEntry@1210001 : Record 379;
      DtldVendLedgEntry@1210002 : Record 380;
    BEGIN
      DtldCustLedgEntry.RESET;
      DtldCustLedgEntry.SETCURRENTKEY(
        "Customer No.","Posting Date","Entry Type");
      DtldCustLedgEntry.SETRANGE("Customer No.",GLEntry."Source No.");
      DtldCustLedgEntry.SETRANGE("Document No.",GLEntry."Document No.");
      DtldCustLedgEntry.SETRANGE("Posting Date",GLEntry."Posting Date");
      DtldCustLedgEntry.SETRANGE("Source Code",GLEntry."Source Code");
      DtldCustLedgEntry.SETRANGE(
        "Entry Type",
        DtldCustLedgEntry."Entry Type"::"Unrealized Loss",
        DtldCustLedgEntry."Entry Type"::"Unrealized Gain");
      DtldCustLedgEntry.SETRANGE("Transaction No.",0);
      DtldCustLedgEntry.MODIFYALL("Transaction No.",GLEntry."Transaction No.");

      DtldVendLedgEntry.RESET;
      DtldVendLedgEntry.SETCURRENTKEY(
        "Vendor No.","Posting Date","Entry Type");
      DtldVendLedgEntry.SETRANGE("Vendor No.",GLEntry."Source No.");
      DtldVendLedgEntry.SETRANGE("Document No.",GLEntry."Document No.");
      DtldVendLedgEntry.SETRANGE("Posting Date",GLEntry."Posting Date");
      DtldVendLedgEntry.SETRANGE("Source Code",GLEntry."Source Code");
      DtldVendLedgEntry.SETRANGE(
        "Entry Type",
        DtldVendLedgEntry."Entry Type"::"Unrealized Loss",
        DtldVendLedgEntry."Entry Type"::"Unrealized Gain");
      DtldVendLedgEntry.SETRANGE(DtldVendLedgEntry."Transaction No.",0);
      DtldVendLedgEntry.MODIFYALL("Transaction No.",GLEntry."Transaction No.");
    END;

    PROCEDURE SetSpecialRun@1101495000(NewIsSpecialRun@1101495000 : Boolean;NewFXAccount@1101495001 : Code[20]);
    BEGIN
      //NC #6607 > DP
      IsSpecialRun := NewIsSpecialRun;
      FXAccount := NewFXAccount;
      //NC #6607 < DP
    END;

    LOCAL PROCEDURE Max@1101495001(Value1@1210000 : Decimal;Value2@1210001 : Decimal) : Decimal;
    BEGIN
      IF Value1 > Value2 THEN
        EXIT(Value1)
      ELSE
        EXIT(Value2);
    END;

    LOCAL PROCEDURE PostTrans2@1101495004();
    VAR
      FoundEntry@1210000 : Boolean;
      CurrentTempRec@1210003 : TEMPORARY Record 17;
      Level@1210004 : Integer;
      SimpleMode@1210002 : Boolean;
      IsFound2@1101495000 : Boolean;
    BEGIN
      SimpleMode := FALSE;
      WITH GLEntryTemp DO BEGIN

        //NC NCS-1755 > DP
        IF FINDFIRST THEN
          REPEAT
            FoundEntry := FALSE;
            GLEntryTemp1 := GLEntryTemp;
            GLEntryTemp2.RESET;

            IF GLEntryTemp2.GET(GLEntryTemp."Entry No."+1) THEN
              IF (ROUND(GLEntryTemp2."Additional-Currency Amount"+"Additional-Currency Amount")=0)
              THEN BEGIN
                IF ValidateEntries(GLEntryTemp,GLEntryTemp2,TRUE) THEN BEGIN
                  FoundEntry := TRUE;
                  PostDDE(GLEntryTemp,GLEntryTemp2);
                  GLEntryTemp.DELETE;
                  GLEntryTemp := GLEntryTemp1;
                  GLEntryTemp2.DELETE;
                END;
              END;
        UNTIL NEXT = 0;
        IF GLEntryTemp2.FINDFIRST THEN
          REPEAT
            GLEntryTemp.INIT;
            GLEntryTemp.TRANSFERFIELDS(GLEntryTemp2);
            GLEntryTemp.INSERT;
          UNTIL GLEntryTemp2.NEXT = 0;
        //NC NCS-1755 < DP

        FOR Level := 1 TO 3 DO BEGIN

          SimpleMode := (Level > 1);
          IF FIND('-') THEN

          REPEAT
            //NC NCS-1477 > DP
            GLEntryTemp1 := GLEntryTemp;
            //NC NCS-1477 < DP

            IF (Amount = 0) AND ("Additional-Currency Amount" = 0) THEN
              //NC NCS-1477 > DP
              BEGIN
              //NC NCS-1477 < DP

              DELETE

              //NC NCS-1477 > DP
              ;
                GLEntryTemp := GLEntryTemp1;
              END
              //NC NCS-1477 < DP

            ELSE BEGIN
              CurrentTempRec := GLEntryTemp;
              FoundEntry := FALSE;
              SETFILTER("Entry No.",'<>%1',CurrentTempRec."Entry No.");
              IF FIND('-') THEN
                REPEAT
                  IF (NOT CurrentTempRec."Used in Correspondence") OR
                     (NOT GLEntryTemp."Used in Correspondence") THEN
                    IF ValidateEntries(CurrentTempRec,GLEntryTemp,SimpleMode) THEN BEGIN
                      FoundEntry := TRUE;
                      PostDDE(CurrentTempRec,GLEntryTemp);
                      IF (Amount = 0) AND ("Additional-Currency Amount" = 0) THEN

                        //NC NCS-1477 > DP
                        BEGIN
                        //NC NCS-1477< DP

                        DELETE

                        //NC NCS-1477 > DP
                        ;
                          GLEntryTemp := GLEntryTemp1;
                        END
                        //NC NCS-1477 < DP

                      ELSE
                        MODIFY;

                      IF Level = 3 THEN
                        FoundEntry := GLEntryTemp."Used in Correspondence";
                    END;
                UNTIL FoundEntry OR (NEXT = 0);

                GLEntryTemp := CurrentTempRec;
                IF (Amount = 0) AND ("Additional-Currency Amount" = 0) THEN

                  //NC NCS-1477 > DP
                  BEGIN
                  //NC NCS-1477 < DP

                  DELETE

                  //NC NCS-1477 > DP
                  ;
                    GLEntryTemp := GLEntryTemp1;
                  END
                  //NC NCS-1477 < DP

                ELSE
                  MODIFY;
             END;
          UNTIL NEXT = 0;
        END;


        RESET;
        IF FIND('-') THEN
          REPEAT
            UpdateBuffer("Entry No.",Amount);
          UNTIL NEXT = 0;


      END;
    END;

    BEGIN
    {
      NC NCS-1738 DP Копия КЮ 12404
      NC NCS-1755 DP Учет больших транзакций переоценки на консолидации
                     изменен триггер OnRun, функция PostTrans
    }
    END.
  }
}

