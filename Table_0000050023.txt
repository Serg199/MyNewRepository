OBJECT Table 50023 Error Journal
{
  OBJECT-PROPERTIES
  {
    Date=13.07.17;
    Time=16:15:59;
    Modified=Yes;
    Version List=NOS-26;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    CaptionML=[ENU=Error Journal;
               RUS=Журнал ошибок];
    LookupPageID=Page50042;
    DrillDownPageID=Page50042;
  }
  FIELDS
  {
    { 1   ;   ;Company Name        ;Text30        ;TableRelation=Company.Name;
                                                   ValidateTableRelation=Yes;
                                                   TestTableRelation=Yes;
                                                   CaptionML=[ENU=Company Name;
                                                              RUS=Название Фирмы] }
    { 5   ;   ;Error Group         ;Option        ;CaptionML=[ENU=Error Group;
                                                              RUS=Группа Ошибок];
                                                   OptionCaptionML=[ENU=System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA,Rename,Apply;
                                                                    RUS=Системные,Загрузка,Трансформация,Учет,Консолидация,Периодические задания,Трансформация ОС,Переименование,Применение];
                                                   OptionString=System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA,Rename,Apply }
    { 10  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              RUS=Строка Но.] }
    { 15  ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              RUS=Тип];
                                                   OptionCaptionML=[ENU=Error,Warning,Delay;
                                                                    RUS=Ошибка,Предупреждение,Отложено];
                                                   OptionString=Error,Warning,Delay }
    { 20  ;   ;Cons. Source Code   ;Code20        ;CaptionML=[ENU=Cons. Source Code;
                                                              RUS=Код Источника Консолидации] }
    { 25  ;   ;Cons. Register      ;Integer       ;CaptionML=[ENU=Cons. Register;
                                                              RUS=Конс. Регистр] }
    { 30  ;   ;Time Error          ;DateTime      ;CaptionML=[ENU=Time Error;
                                                              RUS=Время Ошибки] }
    { 34  ;   ;Error Code          ;Code10        ;CaptionML=[ENU=Error Code;
                                                              RUS=Код Ошибки] }
    { 35  ;   ;Description         ;Text250       ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 40  ;   ;Object Company Name ;Text30        ;TableRelation=Company.Name;
                                                   ValidateTableRelation=Yes;
                                                   TestTableRelation=Yes;
                                                   CaptionML=[ENU=Object Company Name;
                                                              RUS=Объект Название Фирмы] }
    { 45  ;   ;Object No. 1        ;Integer       ;TableRelation=Object.ID WHERE (Type=FIELD(Object Type 1));
                                                   CaptionML=[ENU=Object No. 1;
                                                              RUS=Объект Ошибки 1];
                                                   NotBlank=Yes }
    { 46  ;   ;Object Name 1       ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=FIELD(Object Type 1),
                                                                                         ID=FIELD(Object No. 1)));
                                                   CaptionML=[ENU=Object Name 1;
                                                              RUS=Название Объекта Ошибки 1];
                                                   Editable=No }
    { 47  ;   ;Object Type 1       ;Option        ;CaptionML=[ENU=Object Type 1;
                                                              RUS=Объект Тип 1];
                                                   OptionString=TableData,Table,Form,Report,Dataport,Codeunit,XMLport,MenuSuite,,,System,FieldNumber }
    { 50  ;   ;Record ID 1         ;RecordID      ;OnLookup=BEGIN
                                                              ErrorOnLookup("Record ID 1");
                                                            END;

                                                   CaptionML=[ENU=Record ID 1;
                                                              RUS=Запись ID 1] }
    { 51  ;   ;Search Record ID 1  ;Code200       ;CaptionML=[ENU=Search Record ID 1;
                                                              RUS=Поиск Запись ID 1] }
    { 55  ;   ;Object No. 2        ;Integer       ;TableRelation=Object.ID WHERE (Type=FIELD(Object Type 2));
                                                   CaptionML=[ENU=Object No. 2;
                                                              RUS=Объект Ошибки 2];
                                                   NotBlank=Yes }
    { 56  ;   ;Object Name 2       ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=FIELD(Object Type 2),
                                                                                         ID=FIELD(Object No. 2)));
                                                   CaptionML=[ENU=Object Name 2;
                                                              RUS=Название Объекта Ошибки 2];
                                                   Editable=No }
    { 57  ;   ;Object Type 2       ;Option        ;CaptionML=[ENU=Object Type 2;
                                                              RUS=Объект Тип 2];
                                                   OptionString=TableData,Table,Form,Report,Dataport,Codeunit,XMLport,MenuSuite,,,System,FieldNumber }
    { 60  ;   ;Record ID 2         ;RecordID      ;OnLookup=BEGIN
                                                              ErrorOnLookup("Record ID 2");
                                                            END;

                                                   CaptionML=[ENU=Record ID 2;
                                                              RUS=Запись ID 2] }
    { 65  ;   ;Object No. 3        ;Integer       ;TableRelation=Object.ID WHERE (Type=FIELD(Object Type 3));
                                                   CaptionML=[ENU=Object No. 3;
                                                              RUS=Объект Ошибки 3];
                                                   NotBlank=Yes }
    { 66  ;   ;Object Name 3       ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=FIELD(Object Type 3),
                                                                                         ID=FIELD(Object No. 3)));
                                                   CaptionML=[ENU=Object Name 3;
                                                              RUS=Название Объекта Ошибки 3];
                                                   Editable=No }
    { 67  ;   ;Object Type 3       ;Option        ;CaptionML=[ENU=Object Type 3;
                                                              RUS=Объект Тип 3];
                                                   OptionString=TableData,Table,Form,Report,Dataport,Codeunit,XMLport,MenuSuite,,,System,FieldNumber }
    { 70  ;   ;Record ID 3         ;RecordID      ;OnLookup=BEGIN
                                                              ErrorOnLookup("Record ID 3");
                                                            END;

                                                   CaptionML=[ENU=Record ID 3;
                                                              RUS=Запись ID 3] }
    { 75  ;   ;Job Proc. Status Line No.;Integer  ;TableRelation="Job Processes Status";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Job Proc. Status Line No.;
                                                              RUS=Задачи по Процессам Выполнение Строка Но.] }
    { 80  ;   ;Entry No.           ;Integer       ;AutoIncrement=Yes;
                                                   CaptionML=[ENU=Entry No.;
                                                              RUS=Строка Номер] }
  }
  KEYS
  {
    {    ;Entry No.                                }
    {    ;Company Name,Error Group,Line No.       ;Clustered=Yes }
    {    ;Cons. Source Code,Cons. Register         }
    {    ;Job Proc. Status Line No.                }
    {    ;Object No. 1,Object Type 1,Search Record ID 1 }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      TextEDB01@1000000000 : TextConst 'ENU=In the process of implementation %1 error occurred. %2 Processing stopped.;RUS=В процессе выполнения %1 возникла ошибка. %2 Обработка прекращена.';
      TextEDB01_1@1000000001 : TextConst 'ENU=In the process of implementation %1 error occurred. %2 Processing delayed.;RUS=В процессе выполнения %1 возникла ошибка. %2 Обработка отложена.';
      LoadElementReference@1000000002 : Codeunit 50013;

    PROCEDURE AddError@1000000019(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ErrorCode@1000000002 : Code[10];ErrorDescription@1000000004 : Text[250];JobProcStatusLineNo@1000000003 : Integer);
    BEGIN
      INIT;
      "Entry No." := 0; // NC NOS-26 SPA
      "Company Name" := CompanyName;
      "Error Group" := ErrorGroup;
      //NC NOS-26 > SPA
      {
      "Line No." := GetLastLineNo(CompanyName,ErrorGroup);
      }
      //NC NOS-26 < SPA

      Type := ErrorType;
      "Cons. Source Code" := '';
      "Cons. Register" := 0;
      "Time Error" := CURRENTDATETIME;
      "Error Code" := ErrorCode;
      Description := ErrorDescription;

      "Job Proc. Status Line No." := JobProcStatusLineNo;

      INSERT;
    END;

    PROCEDURE AddError1@1000000000(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000008 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR RecRef1@1000000005 : RecordRef;JobProcStatusLineNo@1000000009 : Integer);
    VAR
      Object@1000000010 : Record 2000000001;
    BEGIN
      INIT;
      "Entry No." := 0; // NC NOS-26 SPA
      "Company Name" := CompanyName;
      "Error Group" := ErrorGroup;
      //NC NOS-26 > SPA
      {
      "Line No." := GetLastLineNo(CompanyName,ErrorGroup);
      }
      //NC NOS-26 < SPA

      Type := ErrorType;
      "Cons. Source Code" := ConsSourceCode;
      "Cons. Register" := ConsRegiser;
      "Time Error" := CURRENTDATETIME;
      "Error Code" := ErrorCode;
      Description := ErrorDescription;

      "Job Proc. Status Line No." := JobProcStatusLineNo;

      "Object Company Name" := ObjectCompanyName;

      IF RecRef1.NUMBER = DATABASE::Object THEN BEGIN
        RecRef1.SETTABLE(Object);
        "Object Type 1" := Object.Type;
        "Object No. 1" := Object.ID;
      END ELSE BEGIN
        "Object Type 1" := "Object Type 1"::Table;
        "Object No. 1" := RecRef1.NUMBER;
      END;
      "Record ID 1" := RecRef1.RECORDID;
      "Search Record ID 1" := COPYSTR(FORMAT("Record ID 1"),1,MAXSTRLEN("Search Record ID 1"));

      INSERT;
    END;

    PROCEDURE AddError2@1000000011(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR RecRef1@1000000005 : RecordRef;VAR RecRef2@1000000008 : RecordRef;JobProcStatusLineNo@1000000010 : Integer);
    VAR
      Object@1000000011 : Record 2000000001;
    BEGIN
      INIT;
      "Entry No." := 0; // NC NOS-26 SPA
      "Company Name" := CompanyName;
      "Error Group" := ErrorGroup;
      //NC NOS-26 > SPA
      {
      "Line No." := GetLastLineNo(CompanyName,ErrorGroup);
      }
      //NC NOS-26 < SPA


      Type := ErrorType;
      "Cons. Source Code" := ConsSourceCode;
      "Cons. Register" := ConsRegiser;
      "Time Error" := CURRENTDATETIME;
      "Error Code" := ErrorCode;
      Description := ErrorDescription;

      "Job Proc. Status Line No." := JobProcStatusLineNo;

      "Object Company Name" := ObjectCompanyName;

      IF RecRef1.NUMBER = DATABASE::Object THEN BEGIN
        RecRef1.SETTABLE(Object);
        "Object Type 1" := Object.Type;
        "Object No. 1" := Object.ID;
      END ELSE BEGIN
        "Object Type 1" := "Object Type 1"::Table;
        "Object No. 1" := RecRef1.NUMBER;
      END;

      "Record ID 1" := RecRef1.RECORDID;
      "Search Record ID 1" := COPYSTR(FORMAT("Record ID 1"),1,MAXSTRLEN("Search Record ID 1"));

      IF RecRef2.NUMBER = DATABASE::Object THEN BEGIN
        RecRef2.SETTABLE(Object);
        "Object Type 2" := Object.Type;
        "Object No. 2" := Object.ID;
      END ELSE BEGIN
        "Object Type 2" := "Object Type 2"::Table;
        "Object No. 2" := RecRef2.NUMBER;
      END;
      "Record ID 2" := RecRef2.RECORDID;

      INSERT;
    END;

    PROCEDURE AddError3@1000000010(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000010 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR RecRef1@1000000005 : RecordRef;VAR RecRef2@1000000008 : RecordRef;VAR RecRef3@1000000009 : RecordRef;JobProcStatusLineNo@1000000011 : Integer);
    VAR
      Object@1000000012 : Record 2000000001;
    BEGIN
      INIT;
      "Entry No." := 0; // NC NOS-26 SPA
      "Company Name" := CompanyName;
      "Error Group" := ErrorGroup;
      //NC NOS-26 > SPA
      {
      "Line No." := GetLastLineNo(CompanyName,ErrorGroup);
      }
      //NC NOS-26 < SPA

      Type := ErrorType;
      "Cons. Source Code" := ConsSourceCode;
      "Cons. Register" := ConsRegiser;
      "Time Error" := CURRENTDATETIME;
      "Error Code" := ErrorCode;
      Description := ErrorDescription;

      "Job Proc. Status Line No." := JobProcStatusLineNo;

      "Object Company Name" := ObjectCompanyName;

      IF RecRef1.NUMBER = DATABASE::Object THEN BEGIN
        RecRef1.SETTABLE(Object);
        "Object Type 1" := Object.Type;
        "Object No. 1" := Object.ID;
      END ELSE BEGIN
        "Object Type 1" := "Object Type 1"::Table;
        "Object No. 1" := RecRef1.NUMBER;
      END;

      "Record ID 1" := RecRef1.RECORDID;
      "Search Record ID 1" := COPYSTR(FORMAT("Record ID 1"),1,MAXSTRLEN("Search Record ID 1"));

      IF RecRef2.NUMBER = DATABASE::Object THEN BEGIN
        RecRef2.SETTABLE(Object);
        "Object Type 2" := Object.Type;
        "Object No. 2" := Object.ID;
      END ELSE BEGIN
        "Object Type 2" := "Object Type 2"::Table;
        "Object No. 2" := RecRef2.NUMBER;
      END;
      "Record ID 2" := RecRef2.RECORDID;

      IF RecRef3.NUMBER = DATABASE::Object THEN BEGIN
        RecRef3.SETTABLE(Object);
        "Object Type 3" := Object.Type;
        "Object No. 3" := Object.ID;
      END ELSE BEGIN
        "Object Type 3" := "Object Type 3"::Table;
        "Object No. 3" := RecRef3.NUMBER;
      END;
      "Record ID 3" := RecRef3.RECORDID;

      INSERT;
    END;

    PROCEDURE GetLastLineNo@1000000003(CompanyName@1000000001 : Text[30];ErrorGroup@1000000000 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA') LastLineNo : Integer;
    VAR
      ErrorJournal@1000000002 : Record 50023;
    BEGIN
      ErrorJournal.RESET;
      ErrorJournal.SETRANGE("Company Name",CompanyName);
      ErrorJournal.SETRANGE("Error Group",ErrorGroup);
      IF ErrorJournal.FINDLAST THEN
        LastLineNo := ErrorJournal."Line No." + 1
      ELSE
        LastLineNo := 1;

      //NCS-2024 > AAP
      ErrorJournal."Company Name" := CompanyName;
      ErrorJournal."Error Group"  := ErrorGroup;
      ErrorJournal."Line No." := LastLineNo;
      WHILE NOT ErrorJournal.INSERT DO BEGIN
        LastLineNo += 1;
        ErrorJournal."Line No." := LastLineNo;
      END;
      //NCS-2024 < AAP
    END;

    PROCEDURE ErrorOnLookup@1000000016(RecID@1000000003 : RecordID);
    VAR
      RecRef@1000000000 : RecordRef;
    BEGIN
      IF RecID.TABLENO = 0 THEN
        EXIT;
      RecRef := RecID.GETRECORD;
      ViewTable(RecRef);
    END;

    PROCEDURE ViewTable@1000000027(VAR RecRef@1000000000 : RecordRef);
    VAR
      Customer@1000000034 : Record 18;
      BufferCustomer@1000000033 : Record 50045;
      Vendor@1101495002 : Record 23;
      BufferVendor@1101495001 : Record 50118;
      BufferCustomerCreditRating@1000000032 : Record 50046;
      CustomerCreditRating@1000000031 : Record 50047;
      BufferCountryRegion@1000000030 : Record 50059;
      CountryRegion@1000000029 : Record 9;
      BufferIndustryGroup@1000000028 : Record 50060;
      IndustryGroup@1000000027 : Record 5057;
      BufferBankAccount@1000000026 : Record 50053;
      BankAccount@1000000025 : Record 270;
      BufferFI@1000000024 : Record 50052;
      FI@1000000023 : Record 50021;
      BufferDeal@1000000022 : Record 50036;
      Deal@1000000021 : Record 50037;
      BufferStockExchange@1000000020 : Record 50041;
      StockExchange@1000000019 : Record 50042;
      BufferFA@1000000018 : Record 50043;
      FACatalog@1000000017 : Record 50044;
      FixedAsset@1000000016 : Record 5600;
      BufferCurrencyExchangeRate@1000000015 : Record 50056;
      CurrencyExchangeRate@1000000014 : Record 330;
      BufferFIRates@1000000013 : Record 50057;
      FIRates@1000000012 : Record 50058;
      BufferFIValue@1000000038 : Record 50091;
      FIValue@1000000037 : Record 50090;
      ConsDataPreBuffer@1000000011 : Record 50007;
      ConsDataBuffer@1000000010 : Record 50008;
      Dimension@1000000009 : Record 348;
      BufferDimValue@1000000008 : Record 50054;
      DimValue@1000000007 : Record 349;
      GLAcc@1000000006 : Record 15;
      GLMapp@1000000005 : Record 50002;
      GLEntry@1000000004 : Record 17;
      BufferOperationClosing@1000000003 : Record 50068;
      OperationClosing@1000000002 : Record 50069;
      FATransformationSetup@1000000001 : Record 50004;
      JobProcStatus@1000000035 : Record 50063;
      Object@1000000036 : Record 2000000001;
      RenameJournal@1000000039 : Record 50092;
      PreBufferFact@1000000041 : Record 50081;
      BufferFact@1000000040 : Record 50082;
      TransFactOperHeader@1000000042 : Record 50112;
      TransFactOperLine@1000000043 : Record 50113;
      CustLedgerEntry@1000000044 : Record 21;
      VendorLedgerEntry@1000000045 : Record 25;
      FIType@1101495000 : Record 50051;
      PreBufferDealEntry@1101495006 : Record 50153;
      PreBufferDealDataSet@1101495005 : Record 50154;
      BufferDealEntry@1101495004 : Record 50155;
      BufferDealDataSet@1101495003 : Record 50156;
      BufferGLEntry@1101495010 : Record 50093;
      BufferLEDimension@1101495009 : Record 50094;
      BufferFALE@1101495008 : Record 50096;
      BufferDealXML@1101495007 : Record 50168;
      FiReExportBuffer@1170000000 : Record 50181;
    BEGIN
      CASE RecRef.NUMBER OF
        DATABASE::Object :
          BEGIN
            Object.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(Object);
            PAGE.RUNMODAL(PAGE::Objects,Object);
          END;
        DATABASE::Customer :
          BEGIN
            Customer.CHANGECOMPANY("Object Company Name");
            Customer.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(Customer);
            PAGE.RUNMODAL(0,Customer);
          END;
        DATABASE::"Buffer Customer" :
          BEGIN
            BufferCustomer.CHANGECOMPANY("Object Company Name");
            BufferCustomer.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(BufferCustomer);
            PAGE.RUNMODAL(0,BufferCustomer);
          END;
        DATABASE::Vendor :
          BEGIN
            Vendor.CHANGECOMPANY("Object Company Name");
            Vendor.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(Vendor);
            PAGE.RUNMODAL(0,Vendor);
          END;
        DATABASE::"Buffer Vendor" :
          BEGIN
            BufferVendor.CHANGECOMPANY("Object Company Name");
            BufferVendor.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(BufferVendor);
            PAGE.RUNMODAL(0,BufferVendor);
          END;
        DATABASE::"Buffer Customer Credit Rating" :
          BEGIN
            BufferCustomerCreditRating.CHANGECOMPANY("Object Company Name");
            BufferCustomerCreditRating.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(BufferCustomerCreditRating);
            PAGE.RUNMODAL(0,BufferCustomerCreditRating);
          END;
        DATABASE::"Customer Credit Rating" :
          BEGIN
            CustomerCreditRating.CHANGECOMPANY("Object Company Name");
            CustomerCreditRating.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(CustomerCreditRating);
            PAGE.RUNMODAL(0,CustomerCreditRating);
          END;
        DATABASE::"Buffer Country/Region" :
          BEGIN
            BufferCountryRegion.CHANGECOMPANY("Object Company Name");
            BufferCountryRegion.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(BufferCountryRegion);
            PAGE.RUNMODAL(0,BufferCountryRegion);
          END;
        DATABASE::"Country/Region" :
          BEGIN
            CountryRegion.CHANGECOMPANY("Object Company Name");
            CountryRegion.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(CountryRegion);
            PAGE.RUNMODAL(0,CountryRegion);
          END;
        DATABASE::"Buffer Industry Group" :
          BEGIN
            BufferIndustryGroup.CHANGECOMPANY("Object Company Name");
            BufferIndustryGroup.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(BufferIndustryGroup);
            PAGE.RUNMODAL(0,BufferIndustryGroup);
          END;
        DATABASE::"Industry Group" :
          BEGIN
            IndustryGroup.CHANGECOMPANY("Object Company Name");
            IndustryGroup.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(IndustryGroup);
            PAGE.RUNMODAL(0,IndustryGroup);
          END;
        DATABASE::"Buffer Bank Account" :
          BEGIN
            BufferBankAccount.CHANGECOMPANY("Object Company Name");
            BufferBankAccount.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(BufferBankAccount);
            PAGE.RUNMODAL(0,BufferBankAccount);
          END;
        DATABASE::"Bank Account" :
          BEGIN
            BankAccount.CHANGECOMPANY("Object Company Name");
            BankAccount.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(BankAccount);
            PAGE.RUNMODAL(0,BankAccount);
          END;
        DATABASE::"Buffer Financial Instrument" :
          BEGIN
            BufferFI.CHANGECOMPANY("Object Company Name");
            BufferFI.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(BufferFI);
            PAGE.RUNMODAL(0,BufferFI);
          END;
        DATABASE::"Financial Instrument" :
          BEGIN
            FI.CHANGECOMPANY("Object Company Name");
            FI.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(FI);
            PAGE.RUNMODAL(0,FI);
          END;
        DATABASE::"Buffer Deal" :
          BEGIN
            BufferDeal.CHANGECOMPANY("Object Company Name");
            BufferDeal.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(BufferDeal);
            PAGE.RUNMODAL(0,BufferDeal);
          END;
        DATABASE::Deal :
          BEGIN
            Deal.CHANGECOMPANY("Object Company Name");
            Deal.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(Deal);
            PAGE.RUNMODAL(0,Deal);
          END;
        DATABASE::"Buffer Stock Exchange" :
          BEGIN
            BufferStockExchange.CHANGECOMPANY("Object Company Name");
            BufferStockExchange.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(BufferStockExchange);
            PAGE.RUNMODAL(0,BufferStockExchange);
          END;
        DATABASE::"Stock Exchange" :
          BEGIN
            StockExchange.CHANGECOMPANY("Object Company Name");
            StockExchange.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(StockExchange);
            PAGE.RUNMODAL(0,StockExchange);
          END;
        DATABASE::"Buffer FA" :
          BEGIN
            BufferFA.CHANGECOMPANY("Object Company Name");
            BufferFA.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(BufferFA);
            PAGE.RUNMODAL(0,BufferFA);
          END;
        DATABASE::"FA Catalog" :
          BEGIN
            FACatalog.CHANGECOMPANY("Object Company Name");
            FACatalog.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(FACatalog);
            PAGE.RUNMODAL(0,FACatalog);
          END;
        DATABASE::"Fixed Asset" :
          BEGIN
            FixedAsset.CHANGECOMPANY("Object Company Name");
            FixedAsset.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(FixedAsset);
            PAGE.RUNMODAL(0,FixedAsset);
          END;
        DATABASE::"Buffer Currency Exchange Rate" :
          BEGIN
            BufferCurrencyExchangeRate.CHANGECOMPANY("Object Company Name");
            BufferCurrencyExchangeRate.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(BufferCurrencyExchangeRate);
            PAGE.RUNMODAL(0,BufferCurrencyExchangeRate);
          END;
        DATABASE::"Currency Exchange Rate" :
          BEGIN
            CurrencyExchangeRate.CHANGECOMPANY("Object Company Name");
            CurrencyExchangeRate.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(CurrencyExchangeRate);
            PAGE.RUNMODAL(0,CurrencyExchangeRate);
          END;
        DATABASE::"Buffer FI Rates" :
          BEGIN
            BufferFIRates.CHANGECOMPANY("Object Company Name");
            BufferFIRates.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(BufferFIRates);
            PAGE.RUNMODAL(0,BufferFIRates);
          END;
        DATABASE::"FI Rates" :
          BEGIN
            FIRates.CHANGECOMPANY("Object Company Name");
            FIRates.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(FIRates);
            PAGE.RUNMODAL(0,FIRates);
          END;
        DATABASE::"Buffer FI Value" :
          BEGIN
            BufferFIValue.CHANGECOMPANY("Object Company Name");
            BufferFIValue.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(BufferFIValue);
            PAGE.RUNMODAL(0,BufferFIValue);
          END;
        DATABASE::"FI Value" :
          BEGIN
            FIValue.CHANGECOMPANY("Object Company Name");
            FIValue.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(FIValue);
            PAGE.RUNMODAL(0,FIValue);
          END;
        DATABASE::"Cons. Data PreBuffer" :
          BEGIN
            ConsDataPreBuffer.CHANGECOMPANY("Object Company Name");
            ConsDataPreBuffer.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(ConsDataPreBuffer);
            PAGE.RUNMODAL(0,ConsDataPreBuffer);
          END;
        DATABASE::"Cons. Data Buffer" :
          BEGIN
            ConsDataBuffer.CHANGECOMPANY("Object Company Name");
            ConsDataBuffer.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(ConsDataBuffer);
            PAGE.RUNMODAL(0,ConsDataBuffer);
          END;
        DATABASE::Dimension :
          BEGIN
            //Dimension.CHANGECOMPANY("Object Company Name");
            Dimension.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(Dimension);
            PAGE.RUNMODAL(0,Dimension);
          END;
        DATABASE::"Buffer Dimension Value" :
          BEGIN
            //BufferDimValue.CHANGECOMPANY("Object Company Name");
            BufferDimValue.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(BufferDimValue);
            PAGE.RUNMODAL(0,BufferDimValue);
          END;
        DATABASE::"Dimension Value" :
          BEGIN
            //DimValue.CHANGECOMPANY("Object Company Name");
            DimValue.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(DimValue);
            DimValue.SETRANGE("Dimension Code",DimValue."Dimension Code");
            PAGE.RUNMODAL(0,DimValue);
          END;
        DATABASE::"G/L Account" :
          BEGIN
            //GLAcc.CHANGECOMPANY("Object Company Name");
            GLAcc.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(GLAcc);
            PAGE.RUNMODAL(0,GLAcc);
          END;
        DATABASE::"CoA Mapping" :
          BEGIN
            //GLMapp.CHANGECOMPANY("Object Company Name");
            RecRef.SETTABLE(GLMapp);
            GLMapp.FILTERGROUP(2);
            GLMapp.SETRANGE("Mapping Code",GLMapp."Mapping Code");
            GLMapp.FILTERGROUP(0);
            PAGE.RUNMODAL(0,GLMapp);
          END;
        DATABASE::"G/L Entry" :
          BEGIN
            GLEntry.CHANGECOMPANY("Object Company Name");
            GLEntry.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(GLEntry);
            PAGE.RUNMODAL(0,GLEntry);
          END;
        DATABASE::"Buffer Operation Closing" :
          BEGIN
            BufferOperationClosing.CHANGECOMPANY("Object Company Name");
            BufferOperationClosing.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(BufferOperationClosing);
            PAGE.RUNMODAL(0,BufferOperationClosing);
          END;
        DATABASE::"Operation Closing" :
          BEGIN
            OperationClosing.CHANGECOMPANY("Object Company Name");
            OperationClosing.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(OperationClosing);
            PAGE.RUNMODAL(0,OperationClosing);
          END;
        DATABASE::"Job Processes Status" :
          BEGIN
            JobProcStatus.CHANGECOMPANY("Object Company Name");
            JobProcStatus.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(JobProcStatus);
            PAGE.RUNMODAL(0,JobProcStatus);
          END;
        //NC MFA11 > DP
        DATABASE::"FA Transformation Setup" :
          BEGIN
            FATransformationSetup.CHANGECOMPANY("Object Company Name");
            FATransformationSetup.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(FATransformationSetup);
            PAGE.RUNMODAL(0,FATransformationSetup);
          END;
        //NC MFA11 > DP
        DATABASE::"Rename Journal" :
          BEGIN
            RenameJournal.CHANGECOMPANY("Object Company Name");
            RenameJournal.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(RenameJournal);
            PAGE.RUNMODAL(0,RenameJournal);
          END;
        //NC MTF01 > PCH
        DATABASE::"Entry Data PreBuffer" :
          BEGIN
            PreBufferFact.CHANGECOMPANY("Object Company Name");
            PreBufferFact.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(PreBufferFact);
            PAGE.RUNMODAL(0,PreBufferFact);
          END;
        DATABASE::"Entry Data Buffer" :
          BEGIN
            BufferFact.CHANGECOMPANY("Object Company Name");
            BufferFact.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(BufferFact);
            PAGE.RUNMODAL(0,BufferFact);
          END;
        DATABASE::"Transform. Fact Oper. Header" :
          BEGIN
            TransFactOperHeader.CHANGECOMPANY("Object Company Name");
            TransFactOperHeader.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(TransFactOperHeader);
            PAGE.RUNMODAL(0,TransFactOperHeader);
          END;
        DATABASE::"Transform. Fact Oper. Line" :
          BEGIN
            TransFactOperLine.CHANGECOMPANY("Object Company Name");
            TransFactOperLine.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(TransFactOperLine);
            PAGE.RUNMODAL(0,TransFactOperLine);
          END;
        DATABASE::"FI Type" :
          BEGIN
            FIType.CHANGECOMPANY("Object Company Name");
            FIType.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(FIType);
            PAGE.RUNMODAL(0,FIType);
          END;
        //NC MTF01 < PCH
        //NC MTD02 > AIG
        DATABASE::"Cust. Ledger Entry" :
          BEGIN
            CustLedgerEntry.CHANGECOMPANY("Object Company Name");
            CustLedgerEntry.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(CustLedgerEntry);
            PAGE.RUNMODAL(0,CustLedgerEntry);
          END;
        DATABASE::"Vendor Ledger Entry" :
          BEGIN
            VendorLedgerEntry.CHANGECOMPANY("Object Company Name");
            VendorLedgerEntry.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(VendorLedgerEntry);
            PAGE.RUNMODAL(0,VendorLedgerEntry);
          END;
        //NC MTD02 < AIG
        //NC S622 > PCH
        DATABASE::"PreBuffer Deal Entry" :
          BEGIN
            PreBufferDealEntry.CHANGECOMPANY("Object Company Name");
            PreBufferDealEntry.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(PreBufferDealEntry);
            PAGE.RUNMODAL(0,PreBufferDealEntry);
          END;
        DATABASE::"PreBuffer Deal Data Set" :
          BEGIN
            PreBufferDealDataSet.CHANGECOMPANY("Object Company Name");
            PreBufferDealDataSet.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(PreBufferDealDataSet);
            PAGE.RUNMODAL(0,PreBufferDealDataSet);
          END;
        DATABASE::"Buffer Deal Entry" :
          BEGIN
            BufferDealEntry.CHANGECOMPANY("Object Company Name");
            BufferDealEntry.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(BufferDealEntry);
            PAGE.RUNMODAL(0,BufferDealEntry);
          END;
        DATABASE::"Buffer Deal Data Set" :
          BEGIN
            BufferDealDataSet.CHANGECOMPANY("Object Company Name");
            BufferDealDataSet.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(BufferDealDataSet);
            PAGE.RUNMODAL(0,BufferDealDataSet);
          END;
        //NC S622 < PCH
        //NC S1753 > PCH
        DATABASE::"Buffer Deal Data from XML" :
          BEGIN
            BufferDealXML.CHANGECOMPANY("Object Company Name");
            BufferDealXML.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(BufferDealXML);
            PAGE.RUNMODAL(0,BufferDealXML);
          END;
        //NC S1753 < PCH
        //NC MIO-10.8 > DP
        DATABASE::"Buffer G/L Entry" :
          BEGIN
            BufferGLEntry.CHANGECOMPANY("Object Company Name");
            BufferGLEntry.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(BufferGLEntry);
            PAGE.RUNMODAL(0,BufferGLEntry);
          END;
        DATABASE::"Buffer Ledger Entry Dimension" :
          BEGIN
            BufferLEDimension.CHANGECOMPANY("Object Company Name");
            BufferLEDimension.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(BufferLEDimension);
            PAGE.RUNMODAL(0,BufferLEDimension);
          END;
        DATABASE::"Buffer FA Ledger Entry":
          BEGIN
            BufferFALE.CHANGECOMPANY("Object Company Name");
            BufferFALE.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(BufferFALE);
            PAGE.RUNMODAL(0,BufferFALE);
          END;
        //NC MIO-10.8 > DP
        // NCS-1897 > ORM
        DATABASE::"FiRe Export Buffer":
          BEGIN
            FiReExportBuffer.CHANGECOMPANY("Object Company Name");
            FiReExportBuffer.SETVIEW(RecRef.GETVIEW);
            RecRef.SETTABLE(FiReExportBuffer);
            PAGE.RUNMODAL(0,FiReExportBuffer);
          END;
        // NCS-1897 < ORM
      END;
    END;

    PROCEDURE SetFilterView@1000000029(VAR RecRef@1000000000 : RecordRef);
    VAR
      RefList@1000000001 : ARRAY [15] OF Integer;
      i@1000000002 : Integer;
      isRef@1000000003 : Boolean;
      RecID@1000000004 : RecordID;
    BEGIN
      LoadElementReference.GetReferenceList(RefList);
      isRef := FALSE;
      FOR i := 1 TO ARRAYLEN(RefList) DO
        IF RecRef.NUMBER = RefList[i] THEN
          isRef := TRUE;
      SETCURRENTKEY("Object No. 1","Object Type 1","Search Record ID 1");
      IF isRef THEN BEGIN
        SETRANGE("Error Group","Error Group"::Load);
        SETRANGE("Cons. Source Code",'');
        SETRANGE("Object Type 1","Object Type 1"::Table);
        SETRANGE("Object No. 1",RecRef.NUMBER);
        RecID := RecRef.RECORDID;
        SETRANGE("Search Record ID 1",COPYSTR(FORMAT(RecID),1,MAXSTRLEN("Search Record ID 1")));
        //SETFILTER("Record ID 1",'%1',RecID);
      END ELSE BEGIN
        SETRANGE("Object Type 1","Object Type 1"::Table);
        SETRANGE("Object No. 1",RecRef.NUMBER);
        RecID := RecRef.RECORDID;
        SETRANGE("Search Record ID 1",COPYSTR(FORMAT(RecID),1,MAXSTRLEN("Search Record ID 1")));
        //SETFILTER("Record ID 1",'%1',RecID);
      END;
    END;

    PROCEDURE AddErrorCustomer@1000000006(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 18;JobProcStatusLineNo@1000000010 : Integer);
    VAR
      RecRef@1000000008 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec1);
      AddError1(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef,JobProcStatusLineNo);
    END;

    PROCEDURE AddErrorFA@1000000002(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 5600;JobProcStatusLineNo@1000000010 : Integer);
    VAR
      RecRef@1000000008 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec1);
      AddError1(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef,JobProcStatusLineNo);
    END;

    PROCEDURE AddErrorPreBufer@1000000001(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50007;JobProcStatusLineNo@1000000010 : Integer);
    VAR
      RecRef@1000000008 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec1);
      AddError1(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef,JobProcStatusLineNo);
    END;

    PROCEDURE AddErrorPreBuferBuffer@1101495002(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50007;VAR Rec2@1101495000 : Record 50008;JobProcStatusLineNo@1000000010 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1101495001 : RecordRef;
    BEGIN
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      AddError2(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,JobProcStatusLineNo);
    END;

    PROCEDURE AddErrorBufer@1000000005(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50008;JobProcStatusLineNo@1000000010 : Integer);
    VAR
      RecRef@1000000008 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec1);
      AddError1(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef,JobProcStatusLineNo);
    END;

    PROCEDURE AddErrorBuferGLAcc@1000000004(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000011 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50008;VAR Rec2@1000000009 : Record 15;JobProcStatusLineNo@1000000012 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000010 : RecordRef;
    BEGIN
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      AddError2(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,JobProcStatusLineNo);
    END;

    PROCEDURE AddErrorBuferDim@1000000007(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000011 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50008;VAR Rec2@1000000009 : Record 348;JobProcStatusLineNo@1000000012 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000010 : RecordRef;
    BEGIN
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      AddError2(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,JobProcStatusLineNo);
    END;

    PROCEDURE AddErrorBuferDimValue@1000000012(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000011 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50008;VAR Rec2@1000000009 : Record 349;JobProcStatusLineNo@1000000012 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000010 : RecordRef;
    BEGIN
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      AddError2(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,JobProcStatusLineNo);
    END;

    PROCEDURE AddErrorBuferGLAccDim@1000000008(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000013 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50008;VAR Rec2@1000000010 : Record 15;VAR Rec3@1000000009 : Record 348;JobProcStatusLineNo@1000000014 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000011 : RecordRef;
      RecRef3@1000000012 : RecordRef;
    BEGIN
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      RecRef3.GETTABLE(Rec3);
      AddError3(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,RecRef3,JobProcStatusLineNo);
    END;

    PROCEDURE AddErrorBuferGLAccDimValue@1000000009(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000013 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50008;VAR Rec2@1000000010 : Record 15;VAR Rec3@1000000009 : Record 349;JobProcStatusLineNo@1000000014 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000011 : RecordRef;
      RecRef3@1000000012 : RecordRef;
    BEGIN
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      RecRef3.GETTABLE(Rec3);
      AddError3(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,RecRef3,JobProcStatusLineNo);
    END;

    PROCEDURE AddErrorBuferGLAccGLMapp@1000000014(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000013 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50008;VAR Rec2@1000000010 : Record 15;VAR Rec3@1000000009 : Record 50002;JobProcStatusLineNo@1000000014 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000011 : RecordRef;
      RecRef3@1000000012 : RecordRef;
    BEGIN
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      RecRef3.GETTABLE(Rec3);
      AddError3(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,RecRef3,JobProcStatusLineNo);
    END;

    PROCEDURE AddErrorGLEntry@1000000013(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 17;JobProcStatusLineNo@1000000010 : Integer);
    VAR
      RecRef@1000000008 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec1);
      AddError1(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef,JobProcStatusLineNo);
    END;

    PROCEDURE AddErrorGLMapp@1101495000(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50002;JobProcStatusLineNo@1000000010 : Integer);
    VAR
      RecRef@1000000008 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec1);
      AddError1(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef,JobProcStatusLineNo);
    END;

    PROCEDURE AddErrorGLMappDim@1101495001(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50002;VAR Rec2@1101495000 : Record 348;JobProcStatusLineNo@1000000010 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1101495001 : RecordRef;
    BEGIN
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      AddError2(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,JobProcStatusLineNo);
    END;

    PROCEDURE AddErrorGLEntryGLAcc@1101495003(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 17;VAR Rec2@1000000010 : Record 15;JobProcStatusLineNo@1000000012 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000011 : RecordRef;
    BEGIN
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      AddError2(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,JobProcStatusLineNo);
    END;

    PROCEDURE AddErrorBuferFA@1000000015(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000011 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50008;VAR Rec2@1000000009 : Record 5600;JobProcStatusLineNo@1000000012 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000010 : RecordRef;
    BEGIN
      //NC MFA01 > DP
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      AddError2(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,JobProcStatusLineNo);
      //NC MFA01 > DP
    END;

    PROCEDURE AddErrorBuferOperationClosing@1000000017(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50068;JobProcStatusLineNo@1000000010 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
    BEGIN
      RecRef1.GETTABLE(Rec1);
      AddError1(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,JobProcStatusLineNo);
    END;

    PROCEDURE AddErrorOperationClosing@1000000021(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50069;JobProcStatusLineNo@1000000010 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
    BEGIN
      RecRef1.GETTABLE(Rec1);
      AddError1(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,JobProcStatusLineNo);
    END;

    PROCEDURE AddErrorBuferOperClosOperClos@1000000018(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000011 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50068;VAR Rec2@1000000009 : Record 50069;JobProcStatusLineNo@1000000012 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000010 : RecordRef;
    BEGIN
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      AddError2(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,JobProcStatusLineNo);
    END;

    PROCEDURE AddErrorBuferGLAccFATransform@1000000020(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000013 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50008;VAR Rec2@1000000010 : Record 15;VAR Rec3@1000000009 : Record 50004;JobProcStatusLineNo@1000000014 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000011 : RecordRef;
      RecRef3@1000000012 : RecordRef;
    BEGIN
      //NC MFA11 > DP
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      RecRef3.GETTABLE(Rec3);
      AddError3(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,RecRef3,JobProcStatusLineNo);
      //NC MFA11 < DP
    END;

    PROCEDURE AddErrorBuferCurrency@1000000022(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000011 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50008;VAR Rec2@1000000009 : Record 4;JobProcStatusLineNo@1000000012 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000010 : RecordRef;
    BEGIN
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      AddError2(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,JobProcStatusLineNo);
    END;

    PROCEDURE AddErrorBuferCurCurRate@1000000023(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000011 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50008;VAR Rec2@1000000009 : Record 4;VAR Rec3@1000000012 : Record 330;JobProcStatusLineNo@1000000014 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000010 : RecordRef;
      RecRef3@1000000013 : RecordRef;
    BEGIN
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      RecRef3.GETTABLE(Rec3);
      AddError3(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,RecRef3,JobProcStatusLineNo);
    END;

    PROCEDURE AddErrorBuferGLMapp@1000000024(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000011 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50008;VAR Rec2@1000000009 : Record 50002;JobProcStatusLineNo@1000000012 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000010 : RecordRef;
    BEGIN
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      AddError2(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,JobProcStatusLineNo);
    END;

    PROCEDURE AddErrorBuferGLMapp1GLMapp2@1000000028(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000011 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50008;VAR Rec2@1000000009 : Record 50002;VAR Rec3@1000000013 : Record 50002;JobProcStatusLineNo@1000000012 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000010 : RecordRef;
      RecRef3@1000000014 : RecordRef;
    BEGIN
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      RecRef3.GETTABLE(Rec3);
      AddError3(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,RecRef3,JobProcStatusLineNo);
    END;

    PROCEDURE AddLastError@1000000025(CompanyName@1000000004 : Text[30];ErrorGroup@1000000003 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000005 : 'Error,Warning,Delay';ErrorDescription@1000000002 : Text[250];JobProcStatusLineNo@1000000000 : Integer);
    VAR
      TextError@1000000001 : Text[250];
    BEGIN
      IF ErrorType = ErrorType::Error THEN
        TextError := TextEDB01
      ELSE
        TextError := TextEDB01_1;

      TextError := COPYSTR(STRSUBSTNO(TextError,ErrorDescription,COPYSTR(GETLASTERRORTEXT,1,1024-STRLEN(TextError))),
                   1,MAXSTRLEN(TextError));
      AddError(CompanyName,ErrorGroup,ErrorType,
               'EDB01',TextError,JobProcStatusLineNo);
      CLEARLASTERROR;
    END;

    PROCEDURE AddLastError1@1000000026(CompanyName@1000000004 : Text[30];ErrorGroup@1000000003 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000009 : 'Error,Warning,Delay';ConsSourceCode@1000000006 : Code[20];ConsRegiser@1000000005 : Integer;ErrorDescription@1000000002 : Text[250];VAR RecRef1@1000000000 : RecordRef;JobProcStatusLineNo@1000000008 : Integer);
    VAR
      TextError@1000000001 : Text[250];
      varStr@1000000007 : Text[30];
    BEGIN
      IF ErrorType = ErrorType::Error THEN
        TextError := TextEDB01
      ELSE
        TextError := TextEDB01_1;

      TextError := COPYSTR(STRSUBSTNO(TextError,ErrorDescription,COPYSTR(GETLASTERRORTEXT,1,1024-STRLEN(TextError))),
                   1,MAXSTRLEN(TextError));
      varStr[1] := 10;
      varStr[2] := 13;
      TextError := DELCHR(TextError,'=',varStr);
      AddError1(CompanyName,ErrorGroup,ErrorType,
                ConsSourceCode,ConsRegiser,
                'EDB01',TextError,CompanyName,RecRef1,JobProcStatusLineNo);
      CLEARLASTERROR;
    END;

    PROCEDURE AddErrorObject@1000000030(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 2000000001;JobProcStatusLineNo@1000000010 : Integer);
    VAR
      RecRef@1000000008 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec1);
      AddError1(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef,JobProcStatusLineNo);
    END;

    PROCEDURE AddErrorGLAccount@1000000031(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 15;JobProcStatusLineNo@1000000010 : Integer);
    VAR
      RecRef@1000000008 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec1);
      AddError1(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef,JobProcStatusLineNo);
    END;

    PROCEDURE AddErrorPreBuferFact@1000000034(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50081;JobProcStatusLineNo@1000000010 : Integer);
    VAR
      RecRef@1000000008 : RecordRef;
    BEGIN
      //NC MTF01 > PCH
      RecRef.GETTABLE(Rec1);
      AddError1(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef,JobProcStatusLineNo);
      //NC MTF01 < PCH
    END;

    PROCEDURE AddErrorPreBuferBufferFact@1000000033(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50081;VAR Rec2@1101495000 : Record 50082;JobProcStatusLineNo@1000000010 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1101495001 : RecordRef;
    BEGIN
      //NC MTF01 > PCH
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      AddError2(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,JobProcStatusLineNo);
      //NC MTF01 < PCH
    END;

    PROCEDURE AddErrorBuferFact@1000000032(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50082;JobProcStatusLineNo@1000000010 : Integer);
    VAR
      RecRef@1000000008 : RecordRef;
    BEGIN
      //NC MTF01 > PCH
      RecRef.GETTABLE(Rec1);
      AddError1(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef,JobProcStatusLineNo);
      //NC MTF01 < PCH
    END;

    PROCEDURE AddErrorBuferFactDim@1000000036(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000011 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50082;VAR Rec2@1000000009 : Record 348;JobProcStatusLineNo@1000000012 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000010 : RecordRef;
    BEGIN
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      AddError2(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,JobProcStatusLineNo);
    END;

    PROCEDURE AddErrorBuferFactDimValue@1000000035(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000011 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50082;VAR Rec2@1000000009 : Record 349;JobProcStatusLineNo@1000000012 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000010 : RecordRef;
    BEGIN
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      AddError2(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,JobProcStatusLineNo);
    END;

    PROCEDURE AddErrorTransFactOperHeader@1000000037(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50112;JobProcStatusLineNo@1000000010 : Integer);
    VAR
      RecRef@1000000008 : RecordRef;
    BEGIN
      //NC MTF01 > PCH
      RecRef.GETTABLE(Rec1);
      AddError1(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef,JobProcStatusLineNo);
      //NC MTF01 < PCH
    END;

    PROCEDURE AddErrorTransFactOperLine@1000000038(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50113;JobProcStatusLineNo@1000000010 : Integer);
    VAR
      RecRef@1000000008 : RecordRef;
    BEGIN
      //NC MTF01 > PCH
      RecRef.GETTABLE(Rec1);
      AddError1(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef,JobProcStatusLineNo);
      //NC MTF01 < PCH
    END;

    PROCEDURE AddErrorFIType@1101495004(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50051;JobProcStatusLineNo@1000000010 : Integer);
    VAR
      RecRef@1000000008 : RecordRef;
    BEGIN
      //NC MTF01 > PCH
      RecRef.GETTABLE(Rec1);
      AddError1(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef,JobProcStatusLineNo);
      //NC MTF01 < PCH
    END;

    PROCEDURE AddErrorPreBuferDealEntry@1101495016(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50153;JobProcStatusLineNo@1000000010 : Integer);
    VAR
      RecRef@1000000008 : RecordRef;
    BEGIN
      //NC S622 > PCH
      RecRef.GETTABLE(Rec1);
      AddError1(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef,JobProcStatusLineNo);
      //NC S622 < PCH
    END;

    PROCEDURE AddErrorPreBuferBufferDealEntr@1101495015(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50153;VAR Rec2@1101495000 : Record 50155;JobProcStatusLineNo@1000000010 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1101495001 : RecordRef;
    BEGIN
      //NC S622 > PCH
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      AddError2(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,JobProcStatusLineNo);
      //NC S622 < PCH
    END;

    PROCEDURE AddErrorBuferDealEntry@1101495014(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50155;JobProcStatusLineNo@1000000010 : Integer);
    VAR
      RecRef@1000000008 : RecordRef;
    BEGIN
      //NC S622 > PCH
      RecRef.GETTABLE(Rec1);
      AddError1(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef,JobProcStatusLineNo);
      //NC S622 < PCH
    END;

    PROCEDURE AddErrorBufferDealDimVal@1101495017(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000011 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50155;VAR Rec2@1000000009 : Record 349;JobProcStatusLineNo@1000000012 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000010 : RecordRef;
    BEGIN
      //NC S622 > PCH
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      AddError2(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,JobProcStatusLineNo);
      //NC S622 < PCH
    END;

    PROCEDURE AddErrorBufferDealDimMapp@1101495018(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000011 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50155;VAR Rec2@1000000009 : Record 50003;JobProcStatusLineNo@1000000012 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000010 : RecordRef;
    BEGIN
      //NC S622 > PCH
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      AddError2(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,JobProcStatusLineNo);
      //NC S622 < PCH
    END;

    PROCEDURE AddErrorEventTemplate@1101495019(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50151;JobProcStatusLineNo@1000000010 : Integer);
    VAR
      RecRef@1000000008 : RecordRef;
    BEGIN
      //NC S622 > PCH
      RecRef.GETTABLE(Rec1);
      AddError1(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef,JobProcStatusLineNo);
      //NC S622 < PCH
    END;

    PROCEDURE AddErrorGLBuffer@1101495013(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000011 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50093;JobProcStatusLineNo@1000000012 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000010 : RecordRef;
    BEGIN
      //NC MIO-9 > DP
      RecRef1.GETTABLE(Rec1);
      AddError1(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,JobProcStatusLineNo);
      //NC MIO-9 < DP
    END;

    PROCEDURE AddErrorGLBufferLEDim@1101495006(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000011 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50093;VAR Rec2@1000000009 : Record 50094;JobProcStatusLineNo@1000000012 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000010 : RecordRef;
    BEGIN
      //NC MIO-9 > DP
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      AddError2(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,JobProcStatusLineNo);
      //NC MIO-9 < DP
    END;

    PROCEDURE AddErrorGLBufferGLAccGLMapp@1101495012(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000013 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50093;VAR Rec2@1000000010 : Record 15;VAR Rec3@1000000009 : Record 50002;JobProcStatusLineNo@1000000014 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000011 : RecordRef;
      RecRef3@1000000012 : RecordRef;
    BEGIN
      //NC MIO-9 > DP
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      RecRef3.GETTABLE(Rec3);
      AddError3(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,RecRef3,JobProcStatusLineNo);
      //NC MIO-9 < DP
    END;

    PROCEDURE AddErrorGLBufferGLMapp@1101495008(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000011 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50093;VAR Rec2@1000000009 : Record 50002;JobProcStatusLineNo@1000000012 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000010 : RecordRef;
    BEGIN
      //NC MIO-9 > DP
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      AddError2(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,JobProcStatusLineNo);
      //NC MIO-9 < DP
    END;

    PROCEDURE AddErrorGLBufferDimVal@1101495009(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000011 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50093;VAR Rec2@1000000009 : Record 349;JobProcStatusLineNo@1000000012 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000010 : RecordRef;
    BEGIN
      //NC MIO-9 > DP
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      AddError2(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,JobProcStatusLineNo);
      //NC MIO-9 < DP
    END;

    PROCEDURE AddErrorGLBufferDimMapp@1101495007(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000011 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50093;VAR Rec2@1000000009 : Record 50003;JobProcStatusLineNo@1000000012 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000010 : RecordRef;
    BEGIN
      //NC MIO-9 > DP
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      AddError2(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,JobProcStatusLineNo);
      //NC MIO-9 < DP
    END;

    PROCEDURE AddErrorBufferFA_1@1101495010(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000011 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50119;JobProcStatusLineNo@1000000012 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000010 : RecordRef;
    BEGIN
      //NC MIO-9 > DP
      RecRef1.GETTABLE(Rec1);
      AddError1(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,JobProcStatusLineNo);
      //NC MIO-9 < DP
    END;

    PROCEDURE AddErrorBufferFA_2@1101495011(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000011 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50119;VAR Rec2@1000000009 : Record 349;JobProcStatusLineNo@1000000012 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000010 : RecordRef;
    BEGIN
      //NC MIO-9 > DP
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      AddError2(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,JobProcStatusLineNo);
      //NC MIO-9 < DP
    END;

    PROCEDURE AddErrorBuferDealXML@1101495022(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50168;JobProcStatusLineNo@1000000010 : Integer);
    VAR
      RecRef@1000000008 : RecordRef;
    BEGIN
      //NC S1753 > PCH
      RecRef.GETTABLE(Rec1);
      AddError1(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef,JobProcStatusLineNo);
      //NC S1753 < PCH
    END;

    PROCEDURE AddErrorBufferDealXMLDimVal@1101495021(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000011 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50168;VAR Rec2@1000000009 : Record 349;JobProcStatusLineNo@1000000012 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000010 : RecordRef;
    BEGIN
      //NC S1753 > PCH
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      AddError2(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,JobProcStatusLineNo);
      //NC S1753 < PCH
    END;

    PROCEDURE AddErrorBufferDealXMLDimMapp@1101495020(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000011 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50168;VAR Rec2@1000000009 : Record 50003;JobProcStatusLineNo@1000000012 : Integer);
    VAR
      RecRef1@1000000008 : RecordRef;
      RecRef2@1000000010 : RecordRef;
    BEGIN
      //NC S1753 > PCH
      RecRef1.GETTABLE(Rec1);
      RecRef2.GETTABLE(Rec2);
      AddError2(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef1,RecRef2,JobProcStatusLineNo);
      //NC S1753 < PCH
    END;

    PROCEDURE AddErrorEventTemplate2@1101495005(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50170;JobProcStatusLineNo@1000000010 : Integer);
    VAR
      RecRef@1000000008 : RecordRef;
    BEGIN
      //NC S1753 > PCH
      RecRef.GETTABLE(Rec1);
      AddError1(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef,JobProcStatusLineNo);
      //NC S1753 < PCH
    END;

    PROCEDURE AddErrorBufferFIOper@1101495023(CompanyName@1000000000 : Text[30];ErrorGroup@1000000001 : 'System,Load,Transformation,Post,Consolidation,Periodical Job,Transformation FA';ErrorType@1000000006 : 'Error,Warning,Delay';ConsSourceCode@1000000002 : Code[20];ConsRegiser@1000000003 : Integer;ErrorCode@1000000009 : Code[10];ErrorDescription@1000000004 : Text[250];ObjectCompanyName@1000000007 : Text[30];VAR Rec1@1000000005 : Record 50221;JobProcStatusLineNo@1000000010 : Integer);
    VAR
      RecRef@1000000008 : RecordRef;
    BEGIN
      //NCS-2360 > AAP
      RecRef.GETTABLE(Rec1);
      AddError1(CompanyName,ErrorGroup,ErrorType,ConsSourceCode,ConsRegiser,ErrorCode,ErrorDescription,
                ObjectCompanyName,RecRef,JobProcStatusLineNo);
      //NCS-2360 < AAP
    END;

    BEGIN
    {
      NC MDM04 PCH
      ОПИСАНИЕ ПОЛЕЙ:
      Company Name - Имя фирмы в которой возникла ошибка (фирма где работала процедура)
      Error Group - группа ошибок
      Line No. - строка - назначается автоматически
      Type - ошибка/предупреждение
      Cons. Source Code - код источника консолидации
      Cons. Regiser - номер регитра
      Time Error - время возникновения ошибки
      Description - текст ошибки
      Object Company Name - имя фирмы где находится объект вызвавший ошибку
      Object No. 1 - номер объекта вызвавшего ошибку
      Record ID 1 - ID записи
      Object No. 2 -//-
      Record ID 2 -//-
      Object No. 3 -//-
      Record ID 3 -//-

      ПОРЯДОК ДОБАВЛЕНИЯ НОВОЙ ТАБЛИЦЫ:
      - добавляем CASE в функцию ErrorOnLookup
      - добавляем функцию AddError??? с нужной таблицей

      NC MTF01 PCH изменения для работы с буфером фактов операций
      NC S622 PCH добавлены функции для Deal Entry
      NC MIO-9 DP добавлены функции AddErrorBufferFA_1, AddErrorBufferFA_2
      NC MIO-10.8 DP Изменена функция ViewTable
      NC S1753 PCH
      NCS-1897 ORM
      NCS-2360 AAP: добавлена функция AddErrorBufferFIOper
      NCS-2024 AAP Изменены функции AddError, AddError1, AddError2, AddError3, GetLastLineNo
      ----------------------
      NC NOS-26 SPA Добавлено поле Entry No.
        Первичный ключ изменен на Entry No.
    }
    END.
  }
}

