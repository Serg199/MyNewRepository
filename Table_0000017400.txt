OBJECT Table 17400 Payroll Element
{
  OBJECT-PROPERTIES
  {
    Date=18.12.13;
    Time=12:00:00;
    Version List=NAVRU7.10;
  }
  PROPERTIES
  {
    OnModify=BEGIN
               "Last Change Date" := TODAY;

               PayrollCalcTypeLine.RESET;
               PayrollCalcTypeLine.SETCURRENTKEY("Element Code");
               PayrollCalcTypeLine.SETRANGE("Element Code",Code);
               IF Type <> xRec.Type THEN
                 PayrollCalcTypeLine.MODIFYALL("Element Type",Type);
               IF "Element Group" <> xRec."Element Group" THEN
                 PayrollCalcTypeLine.MODIFYALL("Element Name","Element Group");
               IF "Posting Type" <> xRec."Posting Type" THEN
                 PayrollCalcTypeLine.MODIFYALL("Posting Type","Posting Type");
               IF Calculate <> xRec.Calculate THEN
                 PayrollCalcTypeLine.MODIFYALL(Calculate,Calculate);

               PayrollDocLine.RESET;
               PayrollDocLine.SETCURRENTKEY("Element Code");
               PayrollDocLine.SETRANGE("Element Code",Code);
               IF Type <> xRec.Type THEN
                 PayrollDocLine.MODIFYALL("Element Type",Type);
               IF "Element Group" <> xRec."Element Group" THEN
                 PayrollDocLine.MODIFYALL("Element Group","Element Group");
               IF "Posting Type" <> xRec."Posting Type" THEN
                 PayrollDocLine.MODIFYALL("Posting Type","Posting Type");
               IF "Pay Type" <> xRec."Pay Type" THEN
                 PayrollDocLine.MODIFYALL("Pay Type","Pay Type");
             END;

    OnDelete=VAR
               PayrollElementInclusion@1210000 : Record 17447;
             BEGIN
               DimMgt.DeleteDefaultDim(DATABASE::"Payroll Element",Code);

               PayrollLedgerEntry.RESET;
               PayrollLedgerEntry.SETCURRENTKEY("Element Code");
               PayrollLedgerEntry.SETRANGE("Element Code",Code);
               PayrollLedgerEntry.SETRANGE("Posting Date",DMY2DATE(1,1,DATE2DMY(WORKDATE,3)),31129999D);
               IF NOT PayrollLedgerEntry.ISEMPTY THEN
                 ERROR(Text007,Code,PayrollLedgerEntry.TABLECAPTION);
               PayrollLedgerEntry.SETRANGE("Posting Date");
               PayrollLedgerEntry.MODIFYALL("Element Code",'');

               PayrollBaseAmount.RESET;
               PayrollBaseAmount.SETCURRENTKEY("Element Code");
               PayrollBaseAmount.SETRANGE("Element Code",Code);
               PayrollBaseAmount.DELETEALL;

               PayrollCalcTypeLine.RESET;
               PayrollCalcTypeLine.SETCURRENTKEY("Element Code");
               PayrollCalcTypeLine.SETRANGE("Element Code",Code);
               PayrollCalcTypeLine.DELETEALL;

               PayrollDocLine.RESET;
               PayrollDocLine.SETCURRENTKEY("Element Code");
               PayrollDocLine.SETRANGE("Element Code",Code);
               IF NOT PayrollDocLine.ISEMPTY THEN
                 ERROR(Text007,Code,PayrollDocLine.TABLECAPTION);
               PayrollDocLine.DELETEALL;

               PayrollRangeHeader.RESET;
               PayrollRangeHeader.SETCURRENTKEY("Element Code");
               PayrollRangeHeader.SETRANGE("Element Code",Code);
               PayrollRangeHeader.DELETEALL(TRUE);

               PayrollRangeLine.RESET;
               PayrollRangeLine.SETCURRENTKEY("Element Code");
               PayrollRangeLine.SETRANGE("Element Code",Code);
               PayrollRangeLine.DELETEALL;

               PayrollCalculation.RESET;
               PayrollCalculation.SETCURRENTKEY("Element Code");
               PayrollCalculation.SETRANGE("Element Code",Code);
               PayrollCalculation.DELETEALL(TRUE);

               PayrollElementInclusion.RESET;
               PayrollElementInclusion.SETCURRENTKEY("Element Code");
               PayrollElementInclusion.SETRANGE("Element Code",Code);
               PayrollElementInclusion.DELETEALL;
             END;

    CaptionML=[ENU=Payroll Element;
               RUS=Зарплатный элемент];
    LookupPageID=Page17401;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=[ENU=Code;
                                                              RUS=Код];
                                                   NotBlank=Yes }
    { 2   ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF Type <> xRec.Type THEN
                                                                  CASE Type OF
                                                                    Type::Wage,
                                                                    Type::Bonus:
                                                                      BEGIN
                                                                        "Posting Type" := "Posting Type"::Charge;
                                                                        "Normal Sign" := "Normal Sign"::Positive;
                                                                      END;
                                                                    Type::"Income Tax",
                                                                    Type::Deduction:
                                                                      BEGIN
                                                                        "Posting Type" := "Posting Type"::Liability;
                                                                        "Normal Sign" := "Normal Sign"::Negative;
                                                                      END;
                                                                    Type::Funds:
                                                                      BEGIN
                                                                        "Posting Type" := "Posting Type"::"Liability Charge";
                                                                        "Normal Sign" := "Normal Sign"::Negative;
                                                                      END;
                                                                    Type::"Netto Salary":
                                                                      BEGIN
                                                                        "Posting Type" := "Posting Type"::"Not Post";
                                                                        "Normal Sign" := "Normal Sign"::Negative;
                                                                      END;
                                                                    Type::"Tax Deduction":
                                                                      BEGIN
                                                                        "Posting Type" := "Posting Type"::"Not Post";
                                                                        "Normal Sign" := "Normal Sign"::Negative;
                                                                      END;
                                                                    Type::Other:
                                                                      ;
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              RUS=Тип];
                                                   OptionCaptionML=[ENU=Wage,Bonus,Income Tax,Netto Salary,Tax Deduction,Deduction,Other,Funds,Reporting;
                                                                    RUS=Начисление,Премия,НДФЛ,Зарплата,Налоговый вычет,Удержание,Прочее,Фонды,Отчетность];
                                                   OptionString=Wage,Bonus,Income Tax,Netto Salary,Tax Deduction,Deduction,Other,Funds,Reporting;
                                                   NotBlank=Yes }
    { 3   ;   ;Element Group       ;Code20        ;TableRelation="Payroll Element Group";
                                                   CaptionML=[ENU=Element Group;
                                                              RUS=Группа элемента] }
    { 7   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 8   ;   ;Last Change Date    ;Date          ;CaptionML=[ENU=Last Change Date;
                                                              RUS=Дата последнего изменения];
                                                   Editable=No }
    { 9   ;   ;Print in Pay-Sheet  ;Option        ;InitValue=Current+YTD;
                                                   CaptionML=[ENU=Print in Pay-Sheet;
                                                              RUS=Печатать в платежной ведомости];
                                                   OptionCaptionML=[ENU=No Print,Current Value,YTD,Balance,Current+YTD,Current+Balance;
                                                                    RUS=Не печатать,Текущее значение,С начала года,Баланс,Текущее + С начала года,Баланс + Текущее];
                                                   OptionString=No Print,Current Value,YTD,Balance,Current+YTD,Current+Balance }
    { 10  ;   ;Fund Type           ;Option        ;CaptionML=[ENU=Fund Type;
                                                              RUS=Тип фонда];
                                                   OptionCaptionML=[ENU=" ,FSI,FSI Injury,Federal FMI,Territorial FMI,PF Accum. Part,PF Insur. Part";
                                                                    RUS=" ,ФСС,ФСС Травма,Федер. ФОМС,Террит. ФОМС,ПФ Накоп. часть,ПФ Страх. часть"];
                                                   OptionString=[ ,FSI,FSI Injury,Federal FMI,Territorial FMI,PF Accum. Part,PF Insur. Part] }
    { 11  ;   ;Posting Type        ;Option        ;CaptionML=[ENU=Posting Type;
                                                              RUS=Тип учета];
                                                   OptionCaptionML=[ENU=Not Post,Charge,Liability,Liability Charge,Information Only;
                                                                    RUS=Не учитывать,Расход,Обязательство,Расход по обязательству,Только информация];
                                                   OptionString=Not Post,Charge,Liability,Liability Charge,Information Only }
    { 12  ;   ;Payroll Posting Group;Code20       ;TableRelation="Payroll Posting Group";
                                                   CaptionML=[ENU=Payroll Posting Group;
                                                              RUS=Учетные группы зарплаты] }
    { 13  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Human Resource Comment Line" WHERE (Table Name=CONST(17400),
                                                                                                          No.=FIELD(Code)));
                                                   CaptionML=[ENU=Comment;
                                                              RUS=Комментарий];
                                                   Editable=No }
    { 15  ;   ;Directory Code      ;Code10        ;TableRelation=IF (Type=FILTER(Wage|Bonus|Other)) "Payroll Directory".Code WHERE (Type=FILTER(Income))
                                                                 ELSE IF (Type=FILTER(Tax Deduction|Deduction),
                                                                          Posting Type=FILTER(Not Post|Charge)) "Payroll Directory".Code WHERE (Type=FILTER(Tax Deduction))
                                                                          ELSE IF (Type=FILTER(Funds)) "Payroll Directory".Code WHERE (Type=FILTER(Tax));
                                                   OnValidate=BEGIN
                                                                IF "Directory Code" <> xRec."Directory Code" THEN
                                                                  ChangeDirCodeEmplLedgerEntry;
                                                              END;

                                                   CaptionML=[ENU=Directory Code;
                                                              RUS=Код справочника] }
    { 16  ;   ;Calculate           ;Boolean       ;CaptionML=[ENU=Calculate;
                                                              RUS=Выполнить расчет] }
    { 17  ;   ;Normal Sign         ;Option        ;CaptionML=[ENU=Normal Sign;
                                                              RUS=Обычный знак];
                                                   OptionCaptionML=[ENU=Negative,Positive;
                                                                    RUS=Отрицательная,Положительная];
                                                   OptionString=Negative,Positive }
    { 18  ;   ;Use Indexation      ;Boolean       ;OnValidate=BEGIN
                                                                TESTFIELD(Type,Type::Wage);
                                                              END;

                                                   CaptionML=[ENU=Use Indexation;
                                                              RUS=Использовать индексацию] }
    { 19  ;   ;Depends on Salary Element;Code20   ;TableRelation="Payroll Element" WHERE (Type=CONST(Wage));
                                                   CaptionML=[ENU=Depends on Salary Element;
                                                              RUS=Зависит от зарплатного элемента] }
    { 20  ;   ;Distribute by Periods;Boolean      ;CaptionML=[ENU=Distribute by Periods;
                                                              RUS=Распределять по периодам] }
    { 21  ;   ;Include into Calculation by;Option ;CaptionML=[ENU=Include into Calculation by;
                                                              RUS=Включать в расчет по];
                                                   OptionCaptionML=[ENU=Action Period,Period Code;
                                                                    RUS=Периоду действия,Коду периода];
                                                   OptionString=Action Period,Period Code }
    { 22  ;   ;Fixed Amount Bonus  ;Boolean       ;CaptionML=[ENU=Fixed Amount Bonus;
                                                              RUS=Премия фиксированной суммой] }
    { 25  ;   ;Amount Mandatory    ;Boolean       ;CaptionML=[ENU=Amount Mandatory;
                                                              RUS=Сумма обязательна] }
    { 26  ;   ;Quantity Mandatory  ;Boolean       ;CaptionML=[ENU=Quantity Mandatory;
                                                              RUS=Количество обязательно] }
    { 33  ;   ;Calculations        ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Payroll Calculation" WHERE (Element Code=FIELD(Code)));
                                                   CaptionML=[ENU=Calculations;
                                                              RUS=Расчеты];
                                                   Editable=No }
    { 34  ;   ;Base Amounts        ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Payroll Base Amount" WHERE (Element Code=FIELD(Code)));
                                                   CaptionML=[ENU=Base Amounts;
                                                              RUS=Базовые суммы];
                                                   Editable=No }
    { 35  ;   ;Ranges              ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Payroll Range Header" WHERE (Element Code=FIELD(Code)));
                                                   CaptionML=[ENU=Ranges;
                                                              RUS=Диапазоны];
                                                   Editable=No }
    { 39  ;   ;Blocked             ;Boolean       ;CaptionML=[ENU=Blocked;
                                                              RUS=Заблокировано] }
    { 42  ;   ;FSI Base            ;Boolean       ;CaptionML=[ENU=FSI Base;
                                                              RUS=База ФСС] }
    { 44  ;   ;Federal FMI Base    ;Boolean       ;CaptionML=[ENU=Federal FMI Base;
                                                              RUS=База федер. ФОМС] }
    { 45  ;   ;Territorial FMI Base;Boolean       ;CaptionML=[ENU=Territorial FMI Base;
                                                              RUS=База террит. ФОМС] }
    { 46  ;   ;PF Base             ;Boolean       ;CaptionML=[ENU=PF Base;
                                                              RUS=База ПФ] }
    { 47  ;   ;Income Tax Base     ;Boolean       ;CaptionML=[ENU=Income Tax Base;
                                                              RUS=База НДФЛ] }
    { 48  ;   ;FSI Injury Base     ;Boolean       ;CaptionML=[ENU=FSI Injury Base;
                                                              RUS=База ФСС по травматизму] }
    { 55  ;   ;Print Priority      ;Integer       ;CaptionML=[ENU=Print Priority;
                                                              RUS=Приоритет печати] }
    { 58  ;   ;Pay Type            ;Option        ;CaptionML=[ENU=Pay Type;
                                                              RUS=Тип оплаты];
                                                   OptionCaptionML=[ENU=" ,Salary Schedule,Social,Other Income";
                                                                    RUS=" ,График зарплаты,Социальный,Прочий доход"];
                                                   OptionString=[ ,Salary Schedule,Social,Other Income] }
    { 61  ;   ;Bonus Type          ;Option        ;CaptionML=[ENU=Bonus Type;
                                                              RUS=Тип премии];
                                                   OptionCaptionML=[ENU=" ,Monthly,Quarterly,Semi-Annual,Annual";
                                                                    RUS=" ,Ежемесячная,Квартальная,Полугодовая,Годовая"];
                                                   OptionString=[ ,Monthly,Quarterly,Semi-Annual,Annual] }
    { 69  ;   ;Source Pay          ;Option        ;CaptionML=[ENU=Source Pay;
                                                              RUS=Источник выплаты];
                                                   OptionCaptionML=[ENU=" ,Cost,Profit,FSI,FOSI";
                                                                    RUS=" ,Себест.,Прибыль,ФСС,ФОМС"];
                                                   OptionString=[ ,Cost,Profit,FSI,FOSI] }
    { 105 ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Global Dimension 1 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              RUS=Код глобального измерения 1];
                                                   CaptionClass='1,1,1' }
    { 106 ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Global Dimension 2 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              RUS=Код глобального измерения 2];
                                                   CaptionClass='1,1,2' }
    { 110 ;   ;Used for Spreadsheet;Boolean       ;CaptionML=[ENU=Used for Spreadsheet;
                                                              RUS=Исп. для платеж. ведомости] }
    { 111 ;   ;Used in Calc Type   ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Payroll Calc Type Line" WHERE (Element Code=FIELD(Code)));
                                                   CaptionML=[ENU=Used in Calc Type;
                                                              RUS=Исп. в расчетном типе];
                                                   Editable=No }
    { 112 ;   ;Advance Payment     ;Boolean       ;CaptionML=[ENU=Advance Payment;
                                                              RUS=Досрочная оплата] }
    { 120 ;   ;T-3 Report Column   ;Option        ;CaptionML=[ENU=T-3 Report Column;
                                                              RUS=Столбец отчета T-3];
                                                   OptionCaptionML=[ENU=,Column 6,Column 7,Column 8;
                                                                    RUS=,Столбец 6,Столбец 7,Столбец 8];
                                                   OptionString=,Column 6,Column 7,Column 8 }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;Directory Code                           }
    {    ;Print Priority                           }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PayrollLedgerEntry@1210000 : Record 17418;
      PayrollCalcTypeLine@1210001 : Record 17405;
      PayrollDocLine@1210002 : Record 17415;
      PayrollBaseAmount@1210003 : Record 17409;
      PayrollRangeHeader@1210004 : Record 17410;
      PayrollRangeLine@1210005 : Record 17411;
      PayrollCalculation@1210006 : Record 17406;
      PayrollCalculationLine@1210007 : Record 17407;
      Text007@1210017 : TextConst 'ENU=You cannot delete %1 because it is used in table %2.;RUS=Невозможно удалить %1, так как он используется в таблице %2.';
      DimMgt@1210022 : Codeunit 408;

    PROCEDURE ValidateShortcutDimCode@8(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.SaveDefaultDim(DATABASE::"Payroll Element",Code,FieldNumber,ShortcutDimCode);
      MODIFY;
    END;

    PROCEDURE ChangeDirCodeEmplLedgerEntry@1470000();
    VAR
      PayrollLedgEntry@1470000 : Record 17418;
    BEGIN
      PayrollLedgEntry.RESET;
      PayrollLedgEntry.SETCURRENTKEY("Element Code");
      PayrollLedgEntry.SETRANGE("Element Code",Code);
      PayrollLedgEntry.MODIFYALL("Directory Code","Directory Code");
    END;

    PROCEDURE IsAECalc@1210000() : Boolean;
    VAR
      HRSetup@1210000 : Record 5218;
    BEGIN
      HRSetup.GET;
      HRSetup.TESTFIELD("AE Calculation Function Code");

      PayrollCalculationLine.SETRANGE("Element Code",Code);
      PayrollCalculationLine.SETRANGE("Function Code",HRSetup."AE Calculation Function Code");
      EXIT(NOT PayrollCalculationLine.ISEMPTY);
    END;

    BEGIN
    END.
  }
}

