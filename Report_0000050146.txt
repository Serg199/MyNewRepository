OBJECT Report 50146 Transfer of Balances Costcentr
{
  OBJECT-PROPERTIES
  {
    Date=27.03.17;
    Time=14:18:13;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Transfer of Balances Costcentr;
               RUS=Перенос Баланса по Центру Затрат];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   g_recConsSetup.GET;
                   g_recMovSetup.GET;
                   g_codeBusUnitCode := '';
                   IF g_recConsSetup."Consolidation Filial Code" <> '' THEN
                     g_codeBusUnitCode := g_recConsSetup."Consolidation Filial Code";
                   g_recGLSetup.GET;
                   g_recGLSetup.TESTFIELD("Allocation Dimension 1 Code");


                   IF CurrReport.USEREQUESTPAGE THEN
                     g_dateIndex := g_recGLSetup."Allow Posting To";

                   g_recStandParam.RESET;
                   g_recStandParam.SETRANGE("Report ID",REPORT::"Transfer of Balances Costcentr");
                   IF g_recStandParam.FINDFIRST THEN BEGIN
                     IF (g_recStandParam."Posting Date" <> '') AND CurrReport.USEREQUESTPAGE THEN
                       g_dateIndex := CALCDATE(g_recStandParam."Posting Date",WORKDATE);
                     IF g_recStandParam."Gen. Journal Template" <> '' THEN
                       g_codeTemplate := g_recStandParam."Gen. Journal Template";
                     IF g_recStandParam."Gen. Journal Batch" <> '' THEN
                       g_codeBatch := g_recStandParam."Gen. Journal Batch";
                     IF g_recStandParam."Prefix Numbers" <> '' THEN
                       g_codeDocumentNo := g_recStandParam."Prefix Numbers";
                     IF g_dateIndex <> 0D THEN
                       g_codeDocumentNo := g_codeDocumentNo + FORMAT(g_dateIndex,0,9);
                     IF g_recStandParam."Posting Description" <> '' THEN
                       g_txtPostingDescription := g_recStandParam."Posting Description";
                     g_boolPost81 := g_recStandParam.Post;
                   END ELSE
                     ERROR(Text50002 + g_recStandParam.TABLECAPTION);
                 END;

    OnPreReport=VAR
                  s@1210000 : Text[1024];
                BEGIN
                  IF NOT CurrReport.USEREQUESTPAGE THEN BEGIN
                    g_recConsSetup.GET;
                    g_recMovSetup.GET;
                    g_codeBusUnitCode := '';
                    IF g_recConsSetup."Consolidation Filial Code" <> '' THEN
                      g_codeBusUnitCode := g_recConsSetup."Consolidation Filial Code";
                    g_recGLSetup.GET;
                    g_recGLSetup.TESTFIELD("Allocation Dimension 1 Code");

                    IF CurrReport.USEREQUESTPAGE THEN
                      g_dateIndex := g_recGLSetup."Allow Posting To";

                    g_txtColumnDim := g_recGLSetup."Allocation Dimension 1 Code";

                    g_recStandParam.RESET;
                    g_recStandParam.SETRANGE("Report ID",REPORT::"Transfer of Balances Costcentr");
                    IF g_recStandParam.FINDFIRST THEN BEGIN
                      IF (g_recStandParam."Posting Date"<>'') AND CurrReport.USEREQUESTPAGE THEN
                        g_dateIndex:=CALCDATE(g_recStandParam."Posting Date",WORKDATE);
                      IF g_recStandParam."Gen. Journal Template"<>'' THEN
                        g_codeTemplate:=g_recStandParam."Gen. Journal Template";
                      IF g_recStandParam."Gen. Journal Batch"<>'' THEN
                        g_codeBatch:=g_recStandParam."Gen. Journal Batch";
                      IF g_recStandParam."Prefix Numbers"<>'' THEN
                        g_codeDocumentNo := g_recStandParam."Prefix Numbers";
                      IF g_dateIndex <> 0D THEN
                        g_codeDocumentNo := g_codeDocumentNo + FORMAT(g_dateIndex,0,9);
                      IF g_recStandParam."Posting Description" <> '' THEN
                        g_txtPostingDescription := g_recStandParam."Posting Description";
                      g_boolPost81 := g_recStandParam.Post;
                    END ELSE
                      ERROR(Text50002+g_recStandParam.TABLECAPTION);
                  END;


                  g_intRet := 0;

                  IF GUIALLOWED THEN BEGIN
                    g_dlgWindow.OPEN(Text019 + Text009 + Text50013 + Text011 + Text50016);
                    IF g_txtColumnDim = '' THEN
                      ERROR(Text50015);
                  END;

                  g_boolClosePerGlobalDim1 := FALSE;
                  g_boolClosePerGlobalDim2 := FALSE;
                  g_boolClosePerGlobalDimOnly := TRUE;


                  g_recGenJnlBatch.GET(g_codeTemplate,g_codeBatch);
                  g_recSourceCodeSetup.GET;
                END;

    OnPostReport=VAR
                   l_recBusinessUnit@1000000000 : Record 220;
                 BEGIN
                   g_recGenJnlLine.SETRANGE("Journal Template Name",g_codeTemplate);
                   g_recGenJnlLine.SETRANGE("Journal Batch Name",g_codeBatch);

                   IF GUIALLOWED THEN
                     g_dlgWindow.CLOSE;

                   {
                   g_recGenJnlLine.RESET;
                   g_recGenJnlLine.SETRANGE("Journal Template Name",g_codeTemplate);
                   g_recGenJnlLine.SETRANGE("Journal Batch Name",g_codeBatch);
                   g_recGenJnlLine.SETRANGE("Line No.",g_intLineMin,g_intLineMax);
                   IF g_recGenJnlLine.COUNT = 0 THEN BEGIN
                     MESSAGE(Text50006);
                   END ELSE BEGIN
                     IF g_boolPost81 THEN  BEGIN
                       g_repPartPostLine.USEREQUESTFORM(FALSE);
                       g_repPartPostLine.SETTABLEVIEW(g_recGenJnlLine);
                       g_repPartPostLine.RUNMODAL();
                       MESSAGE(Text00001);
                     END ELSE
                       MESSAGE(Text50005);
                   END;
                   }

                   g_recGenJnlLine.RESET;
                   g_recGenJnlLine.SETRANGE("Journal Template Name",g_codeTemplate);
                   g_recGenJnlLine.SETRANGE("Journal Batch Name",g_codeBatch);
                   g_recGenJnlLine.SETRANGE("Line No.",g_intLineMin,g_intLineMax);
                   IF g_recGenJnlLine.COUNT = 0 THEN BEGIN
                     MESSAGE(Text50006);
                   END ELSE BEGIN
                     IF g_boolPost81 THEN  BEGIN
                       g_recGenJnlLine.SETFILTER("Business Unit Code",'<>%1','');
                       IF l_recBusinessUnit.FINDFIRST AND g_recGenJnlLine.FINDFIRST THEN BEGIN
                         REPEAT
                           g_recGenJnlLine.SETRANGE("Business Unit Code", l_recBusinessUnit.Code);
                           IF g_recGenJnlLine.FINDFIRST THEN BEGIN
                             g_cuGenJnlPost.SetNoMessage(TRUE);
                             g_cuGenJnlPost.RUN(g_recGenJnlLine);

                             //g_repPartPostLine.USEREQUESTFORM(FALSE);
                             //g_repPartPostLine.SETTABLEVIEW(g_recGenJnlLine);
                             //g_repPartPostLine.RUNMODAL;
                           END;
                           CLEAR(g_repPartPostLine);
                         UNTIL l_recBusinessUnit.NEXT = 0;
                         g_recGenJnlLine.SETRANGE("Business Unit Code");
                         IF g_recGenJnlLine.COUNT <> 0 THEN BEGIN
                           g_cuGenJnlPost.SetNoMessage(TRUE);
                           g_cuGenJnlPost.RUN(g_recGenJnlLine);
                         END;
                         MESSAGE(Text00001);
                       END ELSE BEGIN
                         g_recGenJnlLine.SETRANGE("Business Unit Code");
                         g_cuGenJnlPost.SetNoMessage(TRUE);
                         g_cuGenJnlPost.RUN(g_recGenJnlLine);
                         //g_repPartPostLine.USEREQUESTFORM(FALSE);
                         //g_repPartPostLine.SETTABLEVIEW(g_recGenJnlLine);
                         //g_repPartPostLine.RUNMODAL;
                         MESSAGE(Text00001);
                       END;
                     END ELSE
                       MESSAGE(Text50005);
                   END;
                 END;

    UseRequestPage=Yes;
  }
  DATASET
  {
    { 6710;    ;DataItem;                    ;
               DataItemTable=Table15;
               DataItemTableView=SORTING(No.)
                                 WHERE(Account Type=CONST(Posting),
                                       Income/Balance=FILTER(Income Statement..Balance Sheet));
               OnPreDataItem=BEGIN
                               IF g_txtGLAccFilter <> '' THEN
                                 SETFILTER("No.",g_txtGLAccFilter);
                               {
                               // Временно, только PL счета
                               IF NOT GUIALLOWED THEN
                                 SETRANGE("No.",'40000000','50000000');
                               }
                               g_intNoOfAccounts := "G/L Account".COUNT;
                               g_intThisAccountNo := 0;
                             END;

               OnAfterGetRecord=BEGIN
                                  g_intThisAccountNo := g_intThisAccountNo + 1;
                                  g_intMaxEntry :=1;
                                  g_intEntryCount:=0;
                                  IF GUIALLOWED THEN BEGIN
                                    g_dlgWindow.UPDATE(1,"No.");
                                    g_dlgWindow.UPDATE(4,ROUND(g_intThisAccountNo / g_intNoOfAccounts * 10000,1));
                                    g_dlgWindow.UPDATE(3,ROUND(g_intEntryCount / g_intMaxEntry * 10000,1));
                                    g_dlgWindow.UPDATE(6,Text50011);
                                  END;
                                END;
                                 }

    { 2157;1   ;DataItem;                    ;
               DataItemTable=Table369;
               DataItemTableView=SORTING(User ID,Object Type,Object ID,Analysis View Code,Dimension Code)
                                 ORDER(Ascending);
               OnPreDataItem=BEGIN
                               g_txtCostFilter := '';
                               g_codeNewCostCenter := '';

                               IF GUIALLOWED THEN BEGIN
                                 SETRANGE("User ID",USERID);
                                 SETRANGE("Object Type",3);
                                 SETRANGE("Object ID",REPORT::"Transfer of Balances Costcentr");
                                 SETRANGE("Dimension Code",g_recGLSetup."Allocation Dimension 1 Code");
                                 SETRANGE("Analysis View Code",'');
                                 SETRANGE("Dimension Value Filter");
                               END ELSE BEGIN
                                 SETRANGE("User ID",'NAVNAS');
                                 SETRANGE("Object Type",3);
                                 SETRANGE("Object ID",REPORT::"Transfer of Balances Costcentr");
                                 SETRANGE("Dimension Code",g_recGLSetup."Allocation Dimension 1 Code");
                                 {
                                 IF  ("G/L Account"."No." <> '41317020') AND
                                     ("G/L Account"."No." <> '41322000') AND
                                     ("G/L Account"."No." <> '41305090') THEN BEGIN
                                   CASE TRUE OF
                                     COPYSTR("G/L Account"."No.",1,1) = '1': SETRANGE("Analysis View Code",'157','464');
                                     COPYSTR("G/L Account"."No.",1,1) = '2': SETRANGE("Analysis View Code",'157','464');
                                     COPYSTR("G/L Account"."No.",1,1) = '3': SETRANGE("Analysis View Code",'157','464');
                                     COPYSTR("G/L Account"."No.",1,1) = '4': SETRANGE("Analysis View Code",'001','156');
                                   END;
                                 END ELSE BEGIN
                                   CASE TRUE OF
                                     "G/L Account"."No." = '41317020': SETRANGE("Analysis View Code",'620');
                                     "G/L Account"."No." = '41322000': SETRANGE("Analysis View Code",'620');
                                     "G/L Account"."No." = '41305090': SETRANGE("Analysis View Code",'621');
                                   END;
                                 END;
                                 }
                                 CASE TRUE OF
                                   COPYSTR("G/L Account"."No.",1,1) = '1': SETRANGE("Analysis View Code",'157','464');
                                   COPYSTR("G/L Account"."No.",1,1) = '2': SETRANGE("Analysis View Code",'157','464');
                                   COPYSTR("G/L Account"."No.",1,1) = '3': SETRANGE("Analysis View Code",'157','464');
                                   COPYSTR("G/L Account"."No.",1,1) = '4': SETRANGE("Analysis View Code",'001','156');
                                 END;
                               END;
                             END;

               OnAfterGetRecord=BEGIN
                                  g_txtCostFilter := "Dimension Value Filter";
                                  g_codeNewCostCenter := "New Dimension Value Code";
                                END;
                                 }

    { 6363;2   ;DataItem;                    ;
               DataItemTable=Table349;
               DataItemTableView=SORTING(Dimension Code,Code)
                                 ORDER(Ascending)
                                 WHERE(Dimension Value Type=FILTER(Standard));
               OnPreDataItem=BEGIN
                               SETRANGE("Dimension Code",g_recGLSetup."Allocation Dimension 1 Code");
                               SETFILTER(Code,g_txtCostFilter);

                               g_txtConnectionString := g_cuAdoFunc.GetConnectionString2;
                               g_cuAdoFunc.AdoOpen(AdoConnection, g_txtConnectionString);
                             END;

               OnAfterGetRecord=VAR
                                  l_RecSet@1000000010 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000535-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'.Recordset";
                                  l_recDefDim@1000000009 : Record 352;
                                  l_intcount@1000000008 : Integer;
                                  l_decAmount@1000000007 : Decimal;
                                  l_decOrigAmount@1000000006 : Decimal;
                                  l_decQty@1000000005 : Decimal;
                                  l_codeAcc@1000000004 : Code[20];
                                  l_codeCurr@1000000003 : Code[10];
                                  l_codeCurrCB@1000000002 : Code[10];
                                  l_codeDim@1000000001 : Code[20];
                                  l_codeDimVal@1000000000 : Code[20];
                                  l_codeBU@1000000011 : Code[20];
                                BEGIN
                                  //получение набора данных из хранимой процедуры

                                  g_cuAdoFunc.fn_CostClose(COMPANYNAME,"G/L Account"."No.",g_dateIndex,Code,AdoConnection,l_RecSet);

                                  l_intcount := l_RecSet.RecordCount;
                                  IF GUIALLOWED THEN
                                    g_dlgWindow.UPDATE(7,Code);

                                  IF l_intcount > 0 THEN BEGIN
                                    g_intMaxEntry := l_intcount;
                                    g_intEntryCount := 0;
                                    IF GUIALLOWED THEN
                                      g_dlgWindow.UPDATE(3,ROUND(g_intEntryCount / g_intMaxEntry * 10000,1));

                                    l_RecSet.MoveFirst;
                                    WHILE NOT l_RecSet.EOF() DO BEGIN
                                      g_intEntryCount += 1;
                                      IF GUIALLOWED THEN
                                        g_dlgWindow.UPDATE(3,ROUND(g_intEntryCount / g_intMaxEntry * 10000,1));
                                      l_codeAcc  :=      g_cuAdoFunc.VarToText(l_RecSet.Fields().Item('G_L Account No_').Value);
                                      l_codeCurr :=      g_cuAdoFunc.VarToText(l_RecSet.Fields().Item('Original Currency Code').Value);
                                      l_decAmount :=     ROUND(g_cuAdoFunc.VarToDec(l_RecSet.Fields().Item('Amount').Value));
                                      l_decOrigAmount := ROUND(g_cuAdoFunc.VarToDec(l_RecSet.Fields().Item('Original Amount').Value));
                                      l_decQty :=        ROUND(g_cuAdoFunc.VarToDec(l_RecSet.Fields().Item('Quantity').Value));
                                      l_codeBU :=        g_cuAdoFunc.VarToText(l_RecSet.Fields().Item('Business Unit Code').Value);

                                      g_recGenJnlLine.INIT;
                                      g_recGenJnlLine."Journal Template Name" := g_codeTemplate;
                                      g_recGenJnlLine."Journal Batch Name" := g_codeBatch;
                                      g_recGenJnlLine."Line No." :=
                                        fn_GetNextLineNo(g_recGenJnlLine."Journal Template Name",g_recGenJnlLine."Journal Batch Name");
                                      g_recGenJnlLine."Posting Date":= g_dateIndex;
                                      g_recGenJnlLine."Document No.":= g_codeDocumentNo;
                                      g_recGenJnlLine."Account Type":= g_recGenJnlLine."Account Type"::"G/L Account";
                                      g_recGenJnlLine."Account No." := l_codeAcc;
                                      g_recGenJnlLine."Not Consolidate" := g_recStandParam."Not Consolidate";
                                      g_recGenJnlLine."Not Translate" := g_recStandParam."Not Translate";
                                      g_recGenJnlLine.Description := g_txtPostingDescription;
                                      g_recGenJnlLine."Reason Code":= g_recGenJnlBatch."Reason Code";
                                      g_recGenJnlLine."Source Code" := g_recSourceCodeSetup."COSTCENTER Close";
                                      g_recGenJnlLine."Business Unit Code" := l_codeBU;
                                      //g_recGenJnlLine."Business Unit Code":= g_codeBusUnitCode;
                                      g_recGenJnlLine.VALIDATE("Currency Code",l_codeCurr);
                                      g_recGenJnlLine.VALIDATE(Quantity,-1 * l_decQty);
                                      g_recGenJnlLine.VALIDATE(Amount,-1 * l_decOrigAmount);

                                      g_recGenJnlLine."Amount (LCY)" := -1 * l_decAmount;
                                      IF (g_recGenJnlLine."Amount (LCY)" <> 0) THEN
                                        IF g_recGenJnlLine.Amount <> 0 THEN
                                          g_recGenJnlLine.VALIDATE("Amount (LCY)",ROUND(g_recGenJnlLine."Amount (LCY)",0.01))
                                        ELSE BEGIN
                                          g_recGenJnlLine.VALIDATE("Currency Code",'');
                                          g_recGenJnlLine.VALIDATE(Amount,-1 * l_decAmount);
                                          g_recGenJnlLine."Currency Index Entry" := TRUE;
                                          IF l_codeCurr <> '' THEN
                                            g_recGenJnlLine."Currency Index" := l_codeCurr
                                          ELSE
                                            g_recGenJnlLine."Currency Index" := g_recGLSetup."LCY Code";
                                        END;

                                      // вставка глобальных измерений
                                      IF l_recDefDim.GET(15,"G/L Account"."No.",g_recGLSetup."Global Dimension 1 Code") THEN BEGIN
                                        l_codeDim := g_recGLSetup."Global Dimension 1 Code";
                                        l_codeDimVal := '';
                                        l_codeDimVal := g_cuAdoFunc.VarToText(l_RecSet.Fields().Item(l_codeDim).Value);
                                        IF l_codeDimVal <> '' THEN
                                          g_recGenJnlLine."Shortcut Dimension 1 Code" := l_codeDimVal;
                                      END;
                                      IF l_recDefDim.GET(15,"G/L Account"."No.",g_recGLSetup."Global Dimension 2 Code") THEN BEGIN
                                        l_codeDim := g_recGLSetup."Global Dimension 2 Code";
                                        l_codeDimVal := '';
                                        l_codeDimVal := g_cuAdoFunc.VarToText(l_RecSet.Fields().Item(l_codeDim).Value);
                                        IF l_codeDimVal <> '' THEN
                                          g_recGenJnlLine."Shortcut Dimension 2 Code" := l_codeDimVal;
                                      END;

                                      g_recGenJnlLine.INSERT(TRUE);
                                      // вставка измерений
                                      fn_CopyRecSetDimToJnlLineDim(l_RecSet,g_recJnlLineDim,g_recGenJnlLine,0);

                                      IF g_recJnlLineDim.GET(DATABASE::"Gen. Journal Line",g_recGenJnlLine."Journal Template Name",
                                        g_recGenJnlLine."Journal Batch Name",g_recGenJnlLine."Line No.",0,g_recMovSetup."FI Dimension Code")
                                      THEN BEGIN
                                        g_recGenJnlLine."Financial Instrument No." := g_recJnlLineDim."Dimension Value Code";
                                        g_recGenJnlLine.MODIFY(TRUE);
                                      END;

                                    // Балансирующая строка
                                      g_recGenJnlLine."Line No." :=
                                        fn_GetNextLineNo(g_recGenJnlLine."Journal Template Name",g_recGenJnlLine."Journal Batch Name");
                                      g_recGenJnlLine.VALIDATE(Amount, -1 * g_recGenJnlLine.Amount);
                                      g_recGenJnlLine.VALIDATE(Quantity, -1 * g_recGenJnlLine.Quantity);

                                      g_recGenJnlLine."Amount (LCY)" := l_decAmount;
                                      IF (g_recGenJnlLine."Amount (LCY)" <> 0) THEN
                                        IF g_recGenJnlLine.Amount <> 0 THEN
                                          g_recGenJnlLine.VALIDATE("Amount (LCY)",ROUND(g_recGenJnlLine."Amount (LCY)",0.01))
                                        ELSE BEGIN
                                          g_recGenJnlLine.VALIDATE("Currency Code",'');
                                          g_recGenJnlLine.VALIDATE(Amount, l_decAmount);
                                          g_recGenJnlLine."Currency Index Entry" := TRUE;
                                          IF l_codeCurr <> '' THEN
                                            g_recGenJnlLine."Currency Index" := l_codeCurr
                                          ELSE
                                            g_recGenJnlLine."Currency Index" := g_recGLSetup."LCY Code";
                                        END;

                                      // вставка глобальных измерений
                                      IF l_recDefDim.GET(15,"G/L Account"."No.",g_recGLSetup."Global Dimension 1 Code") THEN BEGIN
                                        l_codeDim := g_recGLSetup."Global Dimension 1 Code";
                                        l_codeDimVal := '';
                                        l_codeDimVal := g_cuAdoFunc.VarToText(l_RecSet.Fields().Item(l_codeDim).Value);
                                        IF l_codeDimVal <> '' THEN
                                          g_recGenJnlLine."Shortcut Dimension 1 Code" := l_codeDimVal;
                                        IF l_codeDim = g_recGLSetup."Allocation Dimension 1 Code" THEN
                                          g_recGenJnlLine."Shortcut Dimension 1 Code" := g_codeNewCostCenter;
                                      END;
                                      IF l_recDefDim.GET(15,"G/L Account"."No.",g_recGLSetup."Global Dimension 2 Code") THEN BEGIN
                                        l_codeDim := g_recGLSetup."Global Dimension 2 Code";
                                        l_codeDimVal := '';
                                        l_codeDimVal := g_cuAdoFunc.VarToText(l_RecSet.Fields().Item(l_codeDim).Value);
                                        IF l_codeDimVal <> '' THEN
                                          g_recGenJnlLine."Shortcut Dimension 2 Code" := l_codeDimVal;
                                        IF l_codeDim = g_recGLSetup."Allocation Dimension 1 Code" THEN
                                          g_recGenJnlLine."Shortcut Dimension 2 Code" := g_codeNewCostCenter;
                                      END;

                                      g_recGenJnlLine.INSERT(TRUE);
                                      fn_CopyRecSetDimToJnlLineDim(l_RecSet,g_recJnlLineDim,g_recGenJnlLine,1);

                                      IF g_recJnlLineDim.GET(DATABASE::"Gen. Journal Line",g_recGenJnlLine."Journal Template Name",
                                        g_recGenJnlLine."Journal Batch Name",g_recGenJnlLine."Line No.",0,g_recMovSetup."FI Dimension Code")
                                      THEN BEGIN
                                        g_recGenJnlLine."Financial Instrument No." := g_recJnlLineDim."Dimension Value Code";
                                        g_recGenJnlLine.MODIFY(TRUE);
                                      END;

                                      l_RecSet.MoveNext;
                                    END;
                                  END;
                                  g_cuAdoFunc.CloseRecSet2(l_RecSet);
                                END;

               OnPostDataItem=BEGIN
                                g_cuAdoFunc.AdoClose(AdoConnection);
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      AdoConnection@1000000051 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000514-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'.Connection";
      g_recConsSetup@1000000030 : Record 50000;
      g_recMovSetup@1000000022 : Record 50064;
      g_recGLSetup@1000000031 : Record 98;
      g_recStandParam@1000000013 : Record 50076;
      g_recGenJnlBatch@1000000001 : Record 232;
      g_recSourceCodeSetup@1000000008 : Record 242;
      g_recGenJnlLine@1000000041 : Record 81;
      g_recGLAccount@1000000055 : Record 15;
      g_recCurrExchRate@1000000056 : Record 330;
      g_recJnlLineDim@1000000058 : Record 356;
      g_cuAdoFunc@1000000004 : Codeunit 50024;
      g_cuGenJnlPost@1000000019 : Codeunit 231;
      g_repPartPostLine@1000000028 : Report 50023;
      g_intLineMin@1000000017 : Integer;
      g_intLineMax@1000000016 : Integer;
      g_intNoOfAccounts@1000000048 : Integer;
      g_intThisAccountNo@1000000049 : Integer;
      g_intMaxEntry@1000000052 : Integer;
      g_intEntryCount@1000000053 : Integer;
      g_intTestCount@1000000002 : Integer;
      g_intRet@1000000007 : Integer;
      g_decExchRate@1000000054 : Decimal;
      g_decAmountLCY@1000000057 : Decimal;
      g_decDeltaAmount@1000000000 : Decimal;
      g_codeTemplate@1000000035 : Code[10];
      g_codeBatch@1000000034 : Code[10];
      g_codeDocumentNo@1000000036 : Code[20];
      g_codeBusUnitCode@1000000009 : Code[20];
      g_codeNewCostCenter@1000000005 : Code[20];
      g_txtPostingDescription@1000000003 : Text[50];
      g_txtGLAccFilter@1000000046 : Text[90];
      g_txtConnectionString@1000000050 : Text[500];
      g_txtColumnDim@1000000010 : Text[250];
      g_txtCostFilter@1000000018 : Text[800];
      g_dateIndex@1000000032 : Date;
      g_boolPost81@1000000006 : Boolean;
      g_boolClosePerGlobalDim1@1000000039 : Boolean;
      g_boolClosePerGlobalDim2@1000000038 : Boolean;
      g_boolClosePerGlobalDimOnly@1000000037 : Boolean;
      g_dlgWindow@1000000029 : Dialog;
      Text00001@1000000012 : TextConst 'ENU=Transfer balances completed.;RUS=Перенос операций выполнен.';
      Text009@1210050 : TextConst 'ENU=#1##################\;RUS=#1##################\';
      Text010@1210049 : TextConst 'ENU=Now performing      #2##################\;RUS=Выполняется         #2##################\';
      Text011@1210048 : TextConst 'ENU=@3@@@@@@@@@@@@@@@@@@\;RUS=@3@@@@@@@@@@@@@@@@@@\';
      Text019@1210047 : TextConst 'ENU=@4@@@@@@@@@@@@@@@@@@\;RUS=@4@@@@@@@@@@@@@@@@@@\';
      Text50002@1000000015 : TextConst 'ENU=Please set in;RUS="Не заполнены настройки в "';
      Text50005@1000000020 : TextConst 'ENU=Recording Gen. Journal successfully created;RUS=Записи в фин. журнале успешно созданы';
      Text50006@1000000023 : TextConst 'ENU=It is nothing to transfering.;RUS=При заданных параметрах переносить нечего.';
      Text50011@1000000025 : TextConst 'ENU=Submitting Request...;RUS="Отправка запроса...     "';
      Text50012@1000000026 : TextConst 'ENU=Processing ...;RUS="Обработка данных...     "';
      Text50013@1000000027 : TextConst 'ENU=#6##################\;RUS=#6##################\';
      g_Time1@1000000021 : Time;
      g_Time2@1000000024 : Time;
      Text50014@1000000059 : TextConst 'ENU=In %1 not found %2 for currency %3;RUS=В %1 не найден %2 для валюты %3';
      Text50015@1000000014 : TextConst 'ENU=Set Dimension Value of Dimension %1 for transfering.;RUS=Необходимо задать значения измерения %1 для переноса.';
      Text50016@1000000011 : TextConst 'ENU=#7##################\;RUS=#7##################\';

    PROCEDURE fn_GetNextLineNo@1000000008(p_codeGenJnlTemplate@1000000001 : Code[20];p_codeGenJnlBatch@1000000000 : Code[20]) : Integer;
    VAR
      l_recGenJournalLine1@1000000002 : Record 81;
    BEGIN
      IF g_intRet = 0 THEN BEGIN
        l_recGenJournalLine1.SETFILTER("Journal Template Name", p_codeGenJnlTemplate);
        l_recGenJournalLine1.SETFILTER("Journal Batch Name", p_codeGenJnlBatch);
        IF l_recGenJournalLine1.RECORDLEVELLOCKING THEN
          l_recGenJournalLine1.LOCKTABLE;
        IF l_recGenJournalLine1.FIND('+') THEN
          g_intRet := l_recGenJournalLine1."Line No." + 1
        ELSE
          g_intRet := 1;
      END ELSE
        g_intRet += 1;

      IF g_intLineMin=0 THEN
        g_intLineMin := g_intRet;
      g_intLineMax := g_intRet;

      EXIT(g_intRet);
    END;

    PROCEDURE fn_CopyRecSetDimToJnlLineDim@1000000000(p_RecSet@1000000002 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000535-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'.Recordset";VAR p_recJnlLineDim@1210001 : Record 356;VAR p_recGenJnlLine@1210002 : Record 81;p_int@1000000000 : Integer);
    VAR
      l_recDefDim@1000000005 : Record 352;
      l_codeDimVal@1000000001 : Code[20];
      l_codeacc@1000000004 : Code[20];
      l_codeDef_Dim@1000000006 : Code[20];
    BEGIN
      // Параметр 0 для исходной строки, 1 - для балансирующей
      l_recDefDim.RESET;
      l_recDefDim.SETRANGE("Table ID",15);
      l_recDefDim.SETRANGE("No.",p_recGenJnlLine."Account No.");

      l_codeacc := p_recGenJnlLine."Account No.";
      IF l_recDefDim.FINDFIRST THEN REPEAT
        l_codeDef_Dim := l_recDefDim."Dimension Code";
        l_codeDimVal := g_cuAdoFunc.VarToText(p_RecSet.Fields().Item(l_codeDef_Dim).Value);
        IF p_int = 1 THEN
          IF  l_recDefDim."Dimension Code" = g_recGLSetup."Allocation Dimension 1 Code" THEN
            l_codeDimVal := g_codeNewCostCenter;

        IF (l_codeDimVal = '') AND (l_recDefDim."Dimension Value Code" <> '') THEN
          l_codeDimVal := l_recDefDim."Dimension Value Code";

        IF l_codeDimVal <> '' THEN BEGIN
          p_recJnlLineDim.INIT;
          p_recJnlLineDim."Table ID" := DATABASE::"Gen. Journal Line";
          p_recJnlLineDim."Journal Template Name" := p_recGenJnlLine."Journal Template Name";
          p_recJnlLineDim."Journal Batch Name" := p_recGenJnlLine."Journal Batch Name";
          p_recJnlLineDim."Journal Line No." := p_recGenJnlLine."Line No.";
          p_recJnlLineDim."Dimension Code" :=  l_recDefDim."Dimension Code";
          p_recJnlLineDim.VALIDATE("Dimension Value Code",l_codeDimVal);
          IF NOT p_recJnlLineDim.INSERT THEN
            p_recJnlLineDim.MODIFY;
        END;
      UNTIL  l_recDefDim.NEXT = 0;
    END;

    PROCEDURE fn_SetParameter@1000000001(p_dateNew@1000000000 : Date);
    BEGIN
      g_dateIndex := p_dateNew;
    END;

    EVENT AdoConnection@1000000051::InfoMessage@0(pError@1000000002 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000500-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'.Error";adStatus@1000000001 : Integer;pConnection@1000000000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000550-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Connection");
    BEGIN
    END;

    EVENT AdoConnection@1000000051::BeginTransComplete@1(TransactionLevel@1000000003 : Integer;pError@1000000002 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000500-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'.Error";adStatus@1000000001 : Integer;pConnection@1000000000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000550-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Connection");
    BEGIN
    END;

    EVENT AdoConnection@1000000051::CommitTransComplete@3(pError@1000000002 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000500-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'.Error";adStatus@1000000001 : Integer;pConnection@1000000000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000550-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Connection");
    BEGIN
    END;

    EVENT AdoConnection@1000000051::RollbackTransComplete@2(pError@1000000002 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000500-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'.Error";adStatus@1000000001 : Integer;pConnection@1000000000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000550-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Connection");
    BEGIN
    END;

    EVENT AdoConnection@1000000051::WillExecute@4(VAR Source@1000000007 : Text[1024];CursorType@1000000006 : Integer;LockType@1000000005 : Integer;VAR Options@1000000004 : Integer;adStatus@1000000003 : Integer;pCommand@1000000002 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{B08400BD-F9D1-4D02-B856-71D5DBA123E9}:'Microsoft ActiveX Data Objects 2.8 Library'._Command";pRecordset@1000000001 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000556-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Recordset";pConnection@1000000000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000550-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Connection");
    BEGIN
    END;

    EVENT AdoConnection@1000000051::ExecuteComplete@5(RecordsAffected@1000000005 : Integer;pError@1000000004 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000500-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'.Error";adStatus@1000000003 : Integer;pCommand@1000000002 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{B08400BD-F9D1-4D02-B856-71D5DBA123E9}:'Microsoft ActiveX Data Objects 2.8 Library'._Command";pRecordset@1000000001 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000556-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Recordset";pConnection@1000000000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000550-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Connection");
    BEGIN
    END;

    EVENT AdoConnection@1000000051::WillConnect@6(VAR ConnectionString@1000000005 : Text[1024];VAR UserID@1000000004 : Text[1024];VAR Password@1000000003 : Text[1024];VAR Options@1000000002 : Integer;adStatus@1000000001 : Integer;pConnection@1000000000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000550-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Connection");
    BEGIN
    END;

    EVENT AdoConnection@1000000051::ConnectComplete@7(pError@1000000002 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000500-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'.Error";adStatus@1000000001 : Integer;pConnection@1000000000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000550-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Connection");
    BEGIN
    END;

    EVENT AdoConnection@1000000051::Disconnect@8(adStatus@1000000001 : Integer;pConnection@1000000000 : Automation "{2A75196C-D9EB-4129-B803-931327F72D5C} 2.8:{00000550-0000-0010-8000-00AA006D2EA4}:'Microsoft ActiveX Data Objects 2.8 Library'._Connection");
    BEGIN
    END;

    BEGIN
    {
      TDRANCS-607 >
        Процедура по переносу остатков в разрезе счетов и всей аналитики с одного костцентра на другой
    }
    END.
  }
  RDLDATA
  {
  }
}

