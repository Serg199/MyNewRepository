OBJECT Page 8615 Config. Packages
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Config. Packages;
               RUS=Пакеты конфигураций];
    SourceTable=Table8623;
    PageType=List;
    CardPageID=Config. Package Card;
    ActionList=ACTIONS
    {
      { 9       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 20      ;1   ;ActionGroup;
                      CaptionML=[ENU=Package;
                                 RUS=Пакет] }
      { 22      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Export Package;
                                 RUS=Экспортировать пакет];
                      ToolTipML=[ENU=Create a .rapidstart file that which delivers the package contents in a compressed format. Configuration questionnaires, configuration templates, and the configuration worksheet are added to the package automatically unless you specifically decide to exclude them.;
                                 RUS=Создание .rapidstart-файла, в котором распространяется содержимое пакета в сжатом формате. Анкеты конфигурации, шаблоны конфигурации и журнал конфигурации автоматически добавляются в пакет, если они явно не исключаются.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Export;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 TESTFIELD(Code);
                                 ConfigXMLExchange.ExportPackage(Rec);
                               END;
                                }
      { 13      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Import Package;
                                 RUS=Импортировать пакет];
                      ToolTipML=[ENU=Import a .rapidstart package file.;
                                 RUS=Импорт .rapidstart-файла пакета.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ConfigXMLExchange.ImportPackageXMLFromClient;
                               END;
                                }
      { 11      ;2   ;Action    ;
                      CaptionML=[ENU=Export to Excel;
                                 RUS=Экспорт в Excel];
                      ToolTipML=[ENU=Export the data in the package to Excel.;
                                 RUS=Экспорт данных из пакета в Excel.];
                      ApplicationArea=#Basic,#Suite;
                      Image=ExportToExcel;
                      OnAction=VAR
                                 ConfigPackageTable@1000 : Record 8613;
                                 ConfigExcelExchange@1001 : Codeunit 8618;
                               BEGIN
                                 TESTFIELD(Code);

                                 ConfigPackageTable.SETRANGE("Package Code",Code);
                                 IF CONFIRM(Text004,TRUE,Code) THEN
                                   ConfigExcelExchange.ExportExcelFromTables(ConfigPackageTable);
                               END;
                                }
      { 15      ;2   ;Action    ;
                      CaptionML=[ENU=Import from Excel;
                                 RUS=Импорт из Excel];
                      ToolTipML=[ENU=Begin the migration of legacy data.;
                                 RUS=Начало миграции унаследованных данных.];
                      ApplicationArea=#Basic,#Suite;
                      Image=ImportExcel;
                      OnAction=VAR
                                 ConfigExcelExchange@1000 : Codeunit 8618;
                               BEGIN
                                 ConfigExcelExchange.ImportExcelFromPackage;
                               END;
                                }
      { 16      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 RUS=Ф&ункции] }
      { 19      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get Tables;
                                 RUS=Получить таблицы];
                      ToolTipML=[ENU=Select tables that you want to add to the configuration package.;
                                 RUS=Выбор таблиц, которые должны быть добавлены в пакет конфигурации:];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=GetLines;
                      PromotedCategory=New;
                      OnAction=VAR
                                 GetPackageTables@1000 : Report 8616;
                               BEGIN
                                 CurrPage.SAVERECORD;
                                 GetPackageTables.Set(Code);
                                 GetPackageTables.RUNMODAL;
                                 CLEAR(GetPackageTables);
                               END;
                                }
      { 3       ;2   ;Action    ;
                      CaptionML=[ENU=Apply Package;
                                 RUS=Применить пакет];
                      ToolTipML=[ENU=Import the configuration package and apply the package database data at the same time.;
                                 RUS=Импорт пакета конфигурации и одновременное применение данных из базы данных пакета.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Apply;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ConfigPackageTable@1002 : Record 8613;
                                 ConfigPackageMgt@1000 : Codeunit 8611;
                               BEGIN
                                 TESTFIELD(Code);
                                 IF CONFIRM(Text003,TRUE,Code) THEN BEGIN
                                   ConfigPackageTable.SETRANGE("Package Code",Code);
                                   ConfigPackageMgt.ApplyPackage(Rec,ConfigPackageTable,TRUE);
                                 END;
                               END;
                                }
      { 14      ;2   ;Action    ;
                      CaptionML=[ENU=Copy Package;
                                 RUS=Копировать пакет];
                      ToolTipML=[ENU=Copy an existing configuration package to create a new package based on the same content.;
                                 RUS=Копирование имеющегося пакета конфигурации для создания нового пакета с тем же содержимым.];
                      ApplicationArea=#Basic,#Suite;
                      Image=CopyWorksheet;
                      OnAction=VAR
                                 CopyPackage@1000 : Report 8615;
                               BEGIN
                                 TESTFIELD(Code);
                                 CopyPackage.Set(Rec);
                                 CopyPackage.RUNMODAL;
                                 CLEAR(CopyPackage);
                               END;
                                }
      { 17      ;2   ;Action    ;
                      Name=ValidatePackage;
                      CaptionML=[ENU=Validate Package;
                                 RUS=Утвердить пакет];
                      ToolTipML=[ENU=Determine if you have introduced errors, such as not including tables that the configuration relies on.;
                                 RUS=Проверка на наличие ошибок (например, вы могли не включить таблицы, требуемые для конфигурации).];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CheckRulesSyntax;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ConfigPackageTable@1000 : Record 8613;
                                 ActiveSession@1004 : Record 2000000110;
                                 SessionEvent@1005 : Record 2000000111;
                                 ConfigProgressBar@1001 : Codeunit 8615;
                                 Canceled@1002 : Boolean;
                               BEGIN
                                 IF CONFIRM(Text002,TRUE,"Package Name") THEN BEGIN
                                   ConfigPackageTable.SETRANGE("Package Code",Code);
                                   ConfigProgressBar.Init(ConfigPackageTable.COUNT,1,ValidatingTableRelationsMsg);

                                   BackgroundSessionId := 0;
                                   STARTSESSION(BackgroundSessionId,CODEUNIT::"Config. Validate Package",COMPANYNAME,ConfigPackageTable);

                                   ConfigPackageTable.SETRANGE(Validated,FALSE);
                                   ConfigPackageTable.SETCURRENTKEY("Package Processing Order","Processing Order");

                                   SLEEP(1000);
                                   WHILE NOT Canceled AND ActiveSession.GET(SERVICEINSTANCEID,BackgroundSessionId) AND ConfigPackageTable.FINDFIRST DO BEGIN
                                     ConfigPackageTable.CALCFIELDS("Table Name");
                                     Canceled := NOT ConfigProgressBar.UpdateCount(ConfigPackageTable."Table Name",ConfigPackageTable.COUNT);
                                     SLEEP(1000);
                                   END;

                                   IF ActiveSession.GET(SERVICEINSTANCEID,BackgroundSessionId) THEN
                                     STOPSESSION(BackgroundSessionId,ValidationCanceledMsg);

                                   IF NOT Canceled AND ConfigPackageTable.FINDFIRST THEN BEGIN
                                     SessionEvent.SETASCENDING("Event Datetime",TRUE);
                                     SessionEvent.SETRANGE("User ID",USERID);
                                     SessionEvent.SETRANGE("Server Instance ID",SERVICEINSTANCEID);
                                     SessionEvent.SETRANGE("Session ID",BackgroundSessionId);
                                     SessionEvent.FINDLAST;
                                     MESSAGE(SessionEvent.Comment);
                                   END;

                                   ConfigProgressBar.Close;
                                 END;
                               END;
                                }
      { 12      ;2   ;Separator  }
      { 21      ;2   ;Action    ;
                      CaptionML=[ENU=Export to Translation;
                                 RUS=Экспорт в перевод];
                      Visible=FALSE;
                      Image=Export;
                      OnAction=VAR
                                 ConfigPackageTable@1001 : Record 8613;
                               BEGIN
                                 TESTFIELD(Code);
                                 ConfigXMLExchange.SetAdvanced(TRUE);
                                 ConfigPackageTable.SETRANGE("Package Code",Code);
                                 IF CONFIRM(Text004,TRUE,Code) THEN
                                   ConfigXMLExchange.ExportPackageXML(ConfigPackageTable,'');
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                GroupType=Repeater }

    { 31  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a code for the configuration package.;
                           RUS=Определяет код пакета конфигурации.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Code }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the package.;
                           RUS=Определяет имя пакета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Package Name" }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of the Windows language to use for the configuration package. Choose the field and select a language ID from the list.;
                           RUS=Определяет идентификатор языка Windows, который будет использоваться для пакета конфигурации. Выделите поле и выберите идентификатор языка в списке.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Language ID" }

    { 32  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the version of the product that you are configuring. You can use this field to help differentiate among various versions of a solution.;
                           RUS=Определяет версию настраиваемого продукта. Это поле позволяет ориентироваться в различных версиях решения.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Product Version" }

    { 23  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the order in which the package is to be processed.;
                           RUS=Определяет заказ, в котором должен быть обработан пакет.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Processing Order" }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether to exclude configuration tables from the package. Select the check box to exclude these types of tables.;
                           RUS=Указывает, нужно ли исключать из пакета таблицы конфигурации. Установите этот флажок, чтобы исключить таблицы этих типов.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Exclude Config. Tables" }

    { 33  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of tables that the package contains.;
                           RUS=Определяет количество таблиц в пакете.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="No. of Tables" }

    { 34  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of records in the package.;
                           RUS=Определяет количество записей в пакете.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="No. of Records" }

    { 27  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of errors that the package contains.;
                           RUS=Определяет количество ошибок в пакете.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="No. of Errors" }

  }
  CODE
  {
    VAR
      ConfigXMLExchange@1000 : Codeunit 8614;
      Text002@1002 : TextConst 'ENU=Validate package %1?;RUS=Утвердить пакет %1?';
      Text003@1003 : TextConst 'ENU=Apply data from package %1?;RUS=Применить данные пакета %1?';
      Text004@1005 : TextConst 'ENU=Export package %1?;RUS=Экспортировать пакет %1?';
      ValidatingTableRelationsMsg@1004 : TextConst 'ENU=Validating table relations;RUS=Проверка отношений таблиц';
      ValidationCanceledMsg@1001 : TextConst 'ENU=Validation canceled.;RUS=Проверка отменена.';
      BackgroundSessionId@1007 : Integer;

    BEGIN
    END.
  }
}

