OBJECT Report 12482 Phys. Inventory Form INV-19
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Phys. Inventory Form INV-19;
               RUS=Сличит. ведомость результатов инвент. ИНВ-19];
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  InventorySetup@1210000 : Record 313;
                BEGIN
                  InventorySetup.GET;
                  InventorySetup.TESTFIELD("Phys.Inv. INV-19 Template Code");
                  ExcelReportBuilderMgr.InitTemplate(InventorySetup."Phys.Inv. INV-19 Template Code");
                END;

    OnPostReport=BEGIN
                   IF FileName <> '' THEN
                     ExcelReportBuilderMgr.ExportDataToClientFile(FileName)
                   ELSE
                     ExcelReportBuilderMgr.ExportData;
                 END;

  }
  DATASET
  {
    { 8280;    ;DataItem;                    ;
               DataItemTable=Table83;
               OnPreDataItem=BEGIN
                               CompanyInfo.GET;

                               FINDFIRST;
                               FillSheet1;

                               ExcelReportBuilderMgr.SetSheet('Sheet2');
                               ExcelReportBuilderMgr.AddSection('PAGEHEADER');
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Quantity <> 0 THEN BEGIN
                                    Surplus := 0;
                                    Lack := 0;
                                    QntDifference := "Qty. (Phys. Inventory)" - "Qty. (Calculated)";
                                    CalcAmnt := "Qty. (Calculated)" * "Unit Cost";
                                    ActualAmnt := "Qty. (Phys. Inventory)" * "Unit Cost";
                                    AmntDifference := ActualAmnt - CalcAmnt;
                                    IF QntDifference > 0 THEN BEGIN
                                      SurplusTurnoverRUB := ABS(AmntDifference);
                                      Surplus := ABS(QntDifference);
                                    END ELSE BEGIN
                                      LackTurnoverRUB := ABS(AmntDifference);
                                      Lack := ABS(QntDifference);
                                    END
                                  END ELSE BEGIN
                                    SurplusTurnoverRUB := 0;
                                    Surplus := 0;
                                    LackTurnoverRUB := 0;
                                    Lack := 0;
                                  END;

                                  NumberPP += 1;
                                  TotalSurplus += Surplus;
                                  TotalLack += Lack;
                                  TotalSurplusTurnoverRUB += SurplusTurnoverRUB;
                                  TotalLackTurnoverRUB += LackTurnoverRUB;

                                  IF NOT ExcelReportBuilderMgr.TryAddSectionWithPlaceForFooter('BODY','REPORTFOOTER') THEN BEGIN
                                    ExcelReportBuilderMgr.AddPagebreak;
                                    ExcelReportBuilderMgr.AddSection('PAGEHEADER');
                                    ExcelReportBuilderMgr.AddSection('BODY');
                                  END;

                                  ExcelReportBuilderMgr.AddDataToSection('LineNum',FORMAT(NumberPP));
                                  ExcelReportBuilderMgr.AddDataToSection('ItemName',Description);
                                  ExcelReportBuilderMgr.AddDataToSection('ItemId',"Item No.");
                                  ExcelReportBuilderMgr.AddDataToSection('CodeOkei',"Unit of Measure Code");
                                  ExcelReportBuilderMgr.AddDataToSection('BOMUnitId',StdRepMgt.GetUoMDesc("Unit of Measure Code"));
                                  ExcelReportBuilderMgr.AddDataToSection('QtyIssue',StdRepMgt.FormatReportValue(Surplus,2));
                                  ExcelReportBuilderMgr.AddDataToSection('CostIssue',StdRepMgt.FormatReportValue(SurplusTurnoverRUB,2));
                                  ExcelReportBuilderMgr.AddDataToSection('QtyLoss',StdRepMgt.FormatReportValue(Lack,2));
                                  ExcelReportBuilderMgr.AddDataToSection('CostLoss',StdRepMgt.FormatReportValue(LackTurnoverRUB,2));
                                END;

               OnPostDataItem=BEGIN
                                ExcelReportBuilderMgr.AddSection('REPORTFOOTER');

                                ExcelReportBuilderMgr.AddDataToSection('QtyIssueTotal',StdRepMgt.FormatReportValue(TotalSurplus,2));
                                ExcelReportBuilderMgr.AddDataToSection('CostIssueTotal',StdRepMgt.FormatReportValue(TotalSurplusTurnoverRUB,2));
                                ExcelReportBuilderMgr.AddDataToSection('QtyLossTotal',StdRepMgt.FormatReportValue(TotalLack,2));
                                ExcelReportBuilderMgr.AddDataToSection('CostLossTotal',StdRepMgt.FormatReportValue(TotalLackTurnoverRUB,2));
                                ExcelReportBuilderMgr.AddDataToSection('InChargeTitle_21',StdRepMgt.GetEmpPosition(SignedBy));
                                ExcelReportBuilderMgr.AddDataToSection('InChargeName_21',StdRepMgt.GetEmpName(SignedBy));
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             RUS=Параметры] }

      { 13  ;2   ;Field     ;
                  CaptionML=[ENU=Document No.;
                             RUS=Номер документа];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=DocumentNo }

      { 14  ;2   ;Field     ;
                  CaptionML=[ENU=Document Date;
                             RUS=Дата документа];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=DocumentDate }

      { 11  ;2   ;Field     ;
                  CaptionML=[ENU=Inventorization Start Date;
                             RUS=Дата начала инвентаризации];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=StartingDate }

      { 12  ;2   ;Field     ;
                  CaptionML=[ENU=Inventorization End Date;
                             RUS=Дата окончания инвентаризации];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=EndingDate }

      { 15  ;2   ;Field     ;
                  CaptionML=[ENU=Document Creation Date;
                             RUS=Дата создания документа];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=CreationDate }

      { 8   ;2   ;Field     ;
                  CaptionML=[ENU=As of Date;
                             RUS=На дату];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=StatusOn }

      { 1210001;2;Field     ;
                  CaptionML=[ENU=Signed by;
                             RUS=Кем подписано];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=SignedBy;
                  TableRelation=Employee }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CompanyInfo@1210000 : Record 79;
      LocMgt@1210005 : Codeunit 12400;
      StdRepMgt@1210001 : Codeunit 12401;
      ExcelReportBuilderMgr@1210004 : Codeunit 14930;
      FileName@1210008 : Text;
      StartingDate@1210006 : Date;
      EndingDate@1210007 : Date;
      DocumentNo@1210009 : Code[10];
      DocumentDate@1210010 : Date;
      NumberPP@1210011 : Integer;
      CreationDate@1210018 : Date;
      Surplus@1210023 : Decimal;
      Lack@1210024 : Decimal;
      SurplusTurnoverRUB@1210028 : Decimal;
      LackTurnoverRUB@1210029 : Decimal;
      StatusOn@1210030 : Date;
      SignedBy@1210003 : Code[20];
      QntDifference@1210031 : Decimal;
      CalcAmnt@1210032 : Decimal;
      ActualAmnt@1210033 : Decimal;
      AmntDifference@1210034 : Decimal;
      TotalSurplus@1210015 : Decimal;
      TotalLack@1210014 : Decimal;
      TotalSurplusTurnoverRUB@1210013 : Decimal;
      TotalLackTurnoverRUB@1210012 : Decimal;

    PROCEDURE SetFileNameSilent@1210007(NewFileName@1210001 : Text);
    BEGIN
      FileName := NewFileName;
    END;

    LOCAL PROCEDURE FillSheet1@1210011();
    BEGIN
      ExcelReportBuilderMgr.SetSheet('Sheet1');
      ExcelReportBuilderMgr.AddSection('FIRSTPAGE');

      ExcelReportBuilderMgr.AddDataToSection('CompanyName',StdRepMgt.GetCompanyName);
      ExcelReportBuilderMgr.AddDataToSection('Department',StdRepMgt.GetEmpDepartment(SignedBy));
      ExcelReportBuilderMgr.AddDataToSection('OKPO',CompanyInfo."OKPO Code");
      ExcelReportBuilderMgr.AddDataToSection('DocNo',DocumentNo);
      ExcelReportBuilderMgr.AddDataToSection('DocDate',FORMAT(DocumentDate));
      ExcelReportBuilderMgr.AddDataToSection('MinInventoryDate',FORMAT(StartingDate));
      ExcelReportBuilderMgr.AddDataToSection('MaxInventoryDate',FORMAT(EndingDate));
      ExcelReportBuilderMgr.AddDataToSection('DocumentNum',"Item Journal Line"."Document No.");
      ExcelReportBuilderMgr.AddDataToSection('DocumentDate',FORMAT(CreationDate));
      ExcelReportBuilderMgr.AddDataToSection('TransDate',LocMgt.Date2Text(StatusOn));
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

