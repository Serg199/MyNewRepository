OBJECT Page 17413 Payroll Range Lines
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Payroll Range Lines;
               RUS=Строки диапазонов зарплаты];
    SourceTable=Table17411;
    PageType=List;
    AutoSplitKey=Yes;
    OnOpenPage=BEGIN
                 IsDirectoryCodeVisible := IfDirectoryCodeVisible;
                 IsPercentVisible := IfPercentVisible;
                 IsOverAmountVisible := IfOverAmountVisible;
                 IsFromBirthdayandYoungerVisible := IfFromBirthdayandYoungerVisible;
                 IsQuantityVisible := IfQuantityVisible;
                 IsAmountVisible := IfAmountVisible;
                 IsIncreaseWageVisible := IfIncreaseWageVisible;
                 IsMaxAmountVisible := IfMaxAmountVisible;
                 IsMinAmountVisible := IfMinAmountVisible;
                 IsOnAllowanceVisible := IfOnAllowanceVisible;
                 IsFromAllowanceVisible := IfFromAllowanceVisible;
                 IsCoordinationPercentVisible := IfCoordinationPercentVisible;
                 IsMaxPercentVisible := IfMaxPercentVisible;
                 IsAgeVisible := IfAgeVisible;
                 IsDisabledPersonVisible := IfDisabledPersonVisible;
                 IsStudentVisible := IfStudentVisible;
                 IsEmployeeGenderVisible := IfEmployeeGenderVisible;
                 IsLimitVisible := IfLimitVisible;
                 IsTaxPercentVisible := IfTaxPercentVisible;
                 IsTaxAmountVisible := IfTaxAmountVisible;
                 IsMaxDeductionVisible := IfMaxDeductionVisible;
               END;

    OnNewRecord=BEGIN
                  "Range Type" := RangeType;
                END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 1470002;2;Field     ;
                ApplicationArea=#All;
                SourceExpr="Disabled Person";
                Visible=IsDisabledPersonVisible }

    { 1470004;2;Field     ;
                ApplicationArea=#All;
                SourceExpr=Student;
                Visible=IsStudentVisible }

    { 1470000;2;Field     ;
                ApplicationArea=#All;
                SourceExpr=Age;
                Visible=IsAgeVisible }

    { 1210014;2;Field     ;
                ApplicationArea=#All;
                SourceExpr="From Birthday and Younger";
                Visible=IsFromBirthdayandYoungerVisible }

    { 1210012;2;Field     ;
                ApplicationArea=#All;
                SourceExpr="Employee Gender";
                Visible=IsEmployeeGenderVisible }

    { 17  ;2   ;Field     ;
                ApplicationArea=#All;
                SourceExpr="Over Amount";
                Visible=IsOverAmountVisible }

    { 4   ;2   ;Field     ;
                ApplicationArea=#All;
                SourceExpr=Amount;
                Visible=IsAmountVisible }

    { 6   ;2   ;Field     ;
                ApplicationArea=#All;
                SourceExpr="Min Amount";
                Visible=IsMinAmountVisible }

    { 8   ;2   ;Field     ;
                ApplicationArea=#All;
                SourceExpr="Max Amount";
                Visible=IsMaxAmountVisible }

    { 1210010;2;Field     ;
                ApplicationArea=#All;
                SourceExpr="Max Deduction";
                Visible=IsMaxDeductionVisible }

    { 1210000;2;Field     ;
                ApplicationArea=#All;
                SourceExpr=Limit;
                Visible=IsLimitVisible }

    { 1210002;2;Field     ;
                ApplicationArea=#All;
                SourceExpr="Tax %";
                Visible=IsTaxPercentVisible }

    { 1210008;2;Field     ;
                ApplicationArea=#All;
                SourceExpr="Tax Amount";
                Visible=IsTaxAmountVisible }

    { 1210004;2;Field     ;
                ApplicationArea=#All;
                SourceExpr=Percent;
                Visible=IsPercentVisible }

    { 1210006;2;Field     ;
                ApplicationArea=#All;
                SourceExpr=Quantity;
                Visible=IsQuantityVisible }

    { 10  ;2   ;Field     ;
                ApplicationArea=#All;
                SourceExpr="On Allowance";
                Visible=IsOnAllowanceVisible }

    { 1210016;2;Field     ;
                ApplicationArea=#All;
                SourceExpr="From Allowance";
                Visible=IsFromAllowanceVisible }

    { 2   ;2   ;Field     ;
                ApplicationArea=#All;
                SourceExpr="Directory Code";
                Visible=IsDirectoryCodeVisible }

    { 1210022;2;Field     ;
                CaptionML=[ENU=Range Type;
                           RUS=Тип диапазона];
                ApplicationArea=#All;
                SourceExpr=RangeType;
                Visible=IsIncreaseWageVisible }

    { 1210018;2;Field     ;
                ApplicationArea=#All;
                SourceExpr="Coordination %";
                Visible=IsCoordinationPercentVisible }

    { 1210020;2;Field     ;
                ApplicationArea=#All;
                SourceExpr="Max %";
                Visible=IsMaxPercentVisible }

  }
  CODE
  {
    VAR
      RangeType@1210000 : ' ,Deduction,Tax Deduction,Exclusion,Deduct. Benefit,Tax Abatement,Limit + Tax %,Frequency,Coordination,Increase Salary,Quantity';
      IsDirectoryCodeVisible@1210001 : Boolean INDATASET;
      IsPercentVisible@1210002 : Boolean INDATASET;
      IsOverAmountVisible@1210003 : Boolean INDATASET;
      IsFromBirthdayandYoungerVisible@1210004 : Boolean INDATASET;
      IsQuantityVisible@1210005 : Boolean INDATASET;
      IsAmountVisible@1210006 : Boolean INDATASET;
      IsIncreaseWageVisible@1210007 : Boolean INDATASET;
      IsMaxAmountVisible@1210008 : Boolean INDATASET;
      IsMinAmountVisible@1210009 : Boolean INDATASET;
      IsOnAllowanceVisible@1210010 : Boolean INDATASET;
      IsFromAllowanceVisible@1210011 : Boolean INDATASET;
      IsCoordinationPercentVisible@1210012 : Boolean INDATASET;
      IsMaxPercentVisible@1210013 : Boolean INDATASET;
      IsAgeVisible@1210014 : Boolean INDATASET;
      IsDisabledPersonVisible@1210015 : Boolean INDATASET;
      IsStudentVisible@1210016 : Boolean INDATASET;
      IsEmployeeGenderVisible@1210017 : Boolean INDATASET;
      IsLimitVisible@1210018 : Boolean INDATASET;
      IsTaxPercentVisible@1210019 : Boolean INDATASET;
      IsTaxAmountVisible@1210020 : Boolean INDATASET;
      IsMaxDeductionVisible@1210021 : Boolean INDATASET;

    PROCEDURE Set@1210000(NewRangeType@1210000 : Option);
    BEGIN
      RangeType := NewRangeType;
    END;

    PROCEDURE IfDirectoryCodeVisible@1210002() : Boolean;
    BEGIN
      EXIT(
        NOT (RangeType IN [RangeType::Exclusion,RangeType::"Deduct. Benefit",RangeType::"Tax Abatement",
                           RangeType::"Limit + Tax %",RangeType::Coordination,RangeType::"Increase Salary",
                           RangeType::Quantity]));
    END;

    PROCEDURE IfPercentVisible@1210004() : Boolean;
    BEGIN
      EXIT(
        NOT (RangeType IN [RangeType::Deduction,RangeType::"Tax Deduction",RangeType::"Deduct. Benefit",
                           RangeType::"Limit + Tax %",RangeType::Coordination,RangeType::"Increase Salary",
                           RangeType::Quantity]));
    END;

    PROCEDURE IfOverAmountVisible@1210006() : Boolean;
    BEGIN
      EXIT(
        NOT (RangeType IN [RangeType::Exclusion,RangeType::"Limit + Tax %",RangeType::Coordination,
                           RangeType::Quantity]));
    END;

    PROCEDURE IfFromBirthdayandYoungerVisible@1210008() : Boolean;
    BEGIN
      EXIT(
        NOT (RangeType IN [RangeType::"Tax Deduction",RangeType::Exclusion,RangeType::"Deduct. Benefit",
                           RangeType::"Tax Abatement",RangeType::"Limit + Tax %",RangeType::Coordination,
                           RangeType::"Increase Salary",RangeType::Quantity]));
    END;

    PROCEDURE IfQuantityVisible@1210010() : Boolean;
    BEGIN
      EXIT(
        NOT (RangeType IN [RangeType::Deduction,RangeType::"Tax Deduction",RangeType::Exclusion,
                           RangeType::"Deduct. Benefit",RangeType::"Tax Abatement",RangeType::"Limit + Tax %",
                           RangeType::Coordination,RangeType::"Increase Salary"]));
    END;

    PROCEDURE IfAmountVisible@1210013() : Boolean;
    BEGIN
      EXIT(
        NOT (RangeType IN [RangeType::Deduction,RangeType::"Deduct. Benefit",RangeType::"Limit + Tax %",
                           RangeType::Coordination,RangeType::"Increase Salary",RangeType::Quantity]));
    END;

    PROCEDURE IfIncreaseWageVisible@1210015() : Boolean;
    BEGIN
      EXIT(
        NOT (RangeType IN[RangeType::Deduction,RangeType::"Tax Deduction",RangeType::Exclusion,
                          RangeType::"Deduct. Benefit",RangeType::"Tax Abatement",RangeType::"Limit + Tax %",
                          RangeType::Coordination,RangeType::Quantity]));
    END;

    PROCEDURE IfMaxAmountVisible@1210017() : Boolean;
    BEGIN
      EXIT(
        NOT (RangeType IN [RangeType::Deduction,RangeType::"Deduct. Benefit",RangeType::"Deduct. Benefit",
                           RangeType::Coordination,RangeType::"Increase Salary",RangeType::Quantity]));
    END;

    PROCEDURE IfMinAmountVisible@1210018() : Boolean;
    BEGIN
      EXIT(
        NOT (RangeType IN [RangeType::Deduction,RangeType::"Deduct. Benefit",RangeType::"Limit + Tax %",
                           RangeType::Coordination,RangeType::"Increase Salary",RangeType::Quantity]));
    END;

    PROCEDURE IfOnAllowanceVisible@1210020() : Boolean;
    BEGIN
      EXIT(
        NOT (RangeType IN [RangeType::Deduction,RangeType::"Deduct. Benefit",RangeType::"Limit + Tax %",
                           RangeType::Coordination,RangeType::"Increase Salary",RangeType::Quantity]));
    END;

    PROCEDURE IfFromAllowanceVisible@1210021() : Boolean;
    BEGIN
      EXIT(
        NOT (RangeType IN [RangeType::Deduction,RangeType::"Tax Deduction",RangeType::"Deduct. Benefit",
                           RangeType::"Tax Abatement",RangeType::"Limit + Tax %",RangeType::Coordination,
                           RangeType::"Increase Salary",RangeType::Quantity]));
    END;

    PROCEDURE IfCoordinationPercentVisible@1210024() : Boolean;
    BEGIN
      EXIT(
        NOT (RangeType IN [RangeType::Deduction,RangeType::"Tax Deduction",RangeType::Exclusion,
                           RangeType::"Deduct. Benefit",RangeType::"Tax Abatement",RangeType::"Limit + Tax %",
                           RangeType::"Increase Salary",RangeType::Quantity]));
    END;

    PROCEDURE IfMaxPercentVisible@1210026() : Boolean;
    BEGIN
      EXIT(
        NOT (RangeType IN [RangeType::Deduction,RangeType::"Tax Deduction",RangeType::Exclusion,
                           RangeType::"Deduct. Benefit",RangeType::"Tax Abatement",RangeType::"Limit + Tax %",
                           RangeType::"Increase Salary",RangeType::Quantity]));
    END;

    PROCEDURE IfAgeVisible@1210028() : Boolean;
    BEGIN
      EXIT(
        NOT (RangeType IN [RangeType::Deduction,RangeType::Exclusion,RangeType::"Deduct. Benefit",
                           RangeType::"Tax Abatement",RangeType::"Limit + Tax %",RangeType::Coordination,
                           RangeType::"Increase Salary",RangeType::Quantity]));
    END;

    PROCEDURE IfDisabledPersonVisible@1210031() : Boolean;
    BEGIN
      EXIT(
        NOT (RangeType IN [RangeType::Deduction,RangeType::Exclusion,RangeType::"Deduct. Benefit",
                           RangeType::"Tax Abatement",RangeType::"Limit + Tax %",RangeType::Coordination,
                           RangeType::"Increase Salary",RangeType::Quantity]));
    END;

    PROCEDURE IfStudentVisible@1210033() : Boolean;
    BEGIN
      EXIT(
        NOT (RangeType IN [RangeType::Deduction,RangeType::Exclusion,RangeType::"Deduct. Benefit",
                           RangeType::"Tax Abatement",RangeType::"Limit + Tax %",RangeType::Coordination,
                           RangeType::"Increase Salary",RangeType::Quantity]));
    END;

    PROCEDURE IfEmployeeGenderVisible@1210036() : Boolean;
    BEGIN
      EXIT(
        NOT (RangeType IN [RangeType::"Tax Deduction",RangeType::Exclusion,RangeType::"Deduct. Benefit",
                           RangeType::"Tax Abatement",RangeType::"Limit + Tax %",RangeType::Coordination,
                           RangeType::"Increase Salary",RangeType::Quantity]));
    END;

    PROCEDURE IfLimitVisible@1210042() : Boolean;
    BEGIN
      EXIT(
        NOT (RangeType IN [RangeType::"Tax Deduction",RangeType::"Tax Abatement",RangeType::Coordination,
                           RangeType::"Increase Salary",RangeType::Quantity]));
    END;

    PROCEDURE IfTaxPercentVisible@1210043() : Boolean;
    BEGIN
      EXIT(
        NOT (RangeType IN [RangeType::"Tax Deduction",RangeType::Exclusion,RangeType::"Tax Abatement",
                           RangeType::Coordination,RangeType::"Increase Salary",RangeType::Quantity]));
    END;

    PROCEDURE IfTaxAmountVisible@1210047() : Boolean;
    BEGIN
      EXIT(
        NOT (RangeType IN [RangeType::"Tax Deduction",RangeType::Exclusion,RangeType::"Tax Abatement",
                           RangeType::"Limit + Tax %",RangeType::Coordination,RangeType::"Increase Salary",
                           RangeType::Quantity]));
    END;

    PROCEDURE IfMaxDeductionVisible@1210050() : Boolean;
    BEGIN
      EXIT(
        NOT (RangeType IN [RangeType::"Tax Deduction",RangeType::Exclusion,RangeType::"Tax Abatement",
                           RangeType::"Limit + Tax %",RangeType::Coordination,RangeType::"Increase Salary",
                           RangeType::Quantity]));
    END;

    BEGIN
    END.
  }
}

