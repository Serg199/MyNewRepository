OBJECT Table 17459 Payroll Document Line Calc.
{
  OBJECT-PROPERTIES
  {
    Date=18.12.13;
    Time=12:00:00;
    Version List=NAVRU7.10;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Payroll Document Line Calc.;
               RUS=Расчет строки зарплатного документа];
    LookupPageID=Page17410;
  }
  FIELDS
  {
    { 1   ;   ;Function Code       ;Text30        ;TableRelation="Payroll Calculation Function";
                                                   CaptionML=[ENU=Function Code;
                                                              RUS=Код функции] }
    { 2   ;   ;Element Code        ;Code20        ;TableRelation="Payroll Element";
                                                   CaptionML=[ENU=Element Code;
                                                              RUS=Код элемента] }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              RUS=Номер строки];
                                                   Editable=No }
    { 4   ;   ;Period Code         ;Code10        ;TableRelation="Payroll Period";
                                                   CaptionML=[ENU=Period Code;
                                                              RUS=Код периода];
                                                   Editable=No }
    { 5   ;   ;Range Type          ;Option        ;CaptionML=[ENU=Range Type;
                                                              RUS=Тип диапазона];
                                                   OptionCaptionML=[ENU=" ,Deduction,Tax Deduction,Exclusion,Deduct. Benefit,Tax Abatement,Limit + Tax %,Frequency,Coordination,Increase Salary,Quantity";
                                                                    RUS=" ,Удержание,Налоговый вычет,Исключение,Удерж. вычет,Налог. скидка,Лимит и налог. ставка,Частота,Увязка,Умножение ставки,Кол-во"];
                                                   OptionString=[ ,Deduction,Tax Deduction,Exclusion,Deduct. Benefit,Tax Abatement,Limit + Tax %,Frequency,Coordination,Increase Salary,Quantity] }
    { 6   ;   ;Range Code          ;Text20        ;TableRelation="Payroll Range Header".Code WHERE (Element Code=FIELD(Element Code),
                                                                                                    Range Type=FIELD(Range Type));
                                                   CaptionML=[ENU=Range Code;
                                                              RUS=Код диапазона] }
    { 7   ;   ;Base Amount Code    ;Code10        ;TableRelation="Payroll Base Amount".Code WHERE (Element Code=FIELD(Element Code));
                                                   CaptionML=[ENU=Base Amount Code;
                                                              RUS=Код базовой суммы] }
    { 8   ;   ;Time Activity Group ;Code20        ;TableRelation="Time Activity Group";
                                                   CaptionML=[ENU=Time Activity Group;
                                                              RUS=Группа временных активностей] }
    { 9   ;   ;Variable            ;Text30        ;TableRelation="Payroll Document Line Var.".Variable WHERE (Document No.=FIELD(Document No.),
                                                                                                              Document Line No.=FIELD(Document Line No.));
                                                   CaptionML=[ENU=Variable;
                                                              RUS=Переменная] }
    { 10  ;   ;Structured          ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Payroll Element Expression" WHERE (Element Code=FIELD(Element Code),
                                                                                                         Period Code=FIELD(Period Code),
                                                                                                         Calculation Line No.=FIELD(Line No.),
                                                                                                         Level=CONST(0),
                                                                                                         Parent Line No.=CONST(0)));
                                                   CaptionML=[ENU=Structured;
                                                              RUS=Структурировано];
                                                   Editable=No }
    { 11  ;   ;Expression          ;Text250       ;CaptionML=[ENU=Expression;
                                                              RUS=Выражение] }
    { 12  ;   ;Result Value        ;Decimal       ;CaptionML=[ENU=Result Value;
                                                              RUS=Значение результата];
                                                   Editable=No }
    { 13  ;   ;Result Field No.    ;Integer       ;TableRelation=Field.No. WHERE (TableNo=CONST(17415),
                                                                                  Class=CONST(Normal),
                                                                                  Type=FILTER(Decimal));
                                                   CaptionML=[ENU=Result Field No.;
                                                              RUS=Номер поля результата] }
    { 14  ;   ;Result Field Name   ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field.FieldName WHERE (TableNo=CONST(17415),
                                                                                             No.=FIELD(Result Field No.)));
                                                   CaptionML=[ENU=Result Field Name;
                                                              RUS=Имя поля результата];
                                                   Editable=No }
    { 15  ;   ;Indentation         ;Integer       ;CaptionML=[ENU=Indentation;
                                                              RUS=Отступ];
                                                   Editable=No }
    { 16  ;   ;AE Setup Code       ;Code10        ;TableRelation="AE Calculation Setup"."Setup Code" WHERE (Type=CONST(Calculation));
                                                   CaptionML=[ENU=AE Setup Code;
                                                              RUS=Код настройки СЗ] }
    { 19  ;   ;Result Flag         ;Option        ;CaptionML=[ENU=Result Flag;
                                                              RUS=Флаг результата];
                                                   OptionCaptionML=[ENU=" ,Exception,Stop";
                                                                    RUS=" ,Исключение,Остановка"];
                                                   OptionString=[ ,Exception,Stop] }
    { 20  ;   ;Statement 1         ;Option        ;CaptionML=[ENU=Statement 1;
                                                              RUS=Утверждение 1];
                                                   OptionCaptionML=[ENU=" ,IF,THEN,ELSE,ENDIF";
                                                                    RUS=" ,IF,THEN,ELSE,ENDIF"];
                                                   OptionString=[ ,IF,THEN,ELSE,ENDIF] }
    { 21  ;   ;Statement 2         ;Option        ;CaptionML=[ENU=Statement 2;
                                                              RUS=Утверждение 2];
                                                   OptionCaptionML=[ENU=" ,MIN,MAX,ABS,GOTO,STOP,ROUND";
                                                                    RUS=" ,MIN,MAX,ABS,GOTO,STOP,ROUND"];
                                                   OptionString=[ ,MIN,MAX,ABS,GOTO,STOP,ROUND] }
    { 22  ;   ;IF Level            ;Integer       ;CaptionML=[ENU=IF Level;
                                                              RUS=Уровень IF] }
    { 23  ;   ;Logical Result      ;Option        ;CaptionML=[ENU=Logical Result;
                                                              RUS=Логический результат];
                                                   OptionCaptionML=[ENU=" ,FALSE,TRUE";
                                                                    RUS=" ,FALSE,TRUE"];
                                                   OptionString=[ ,FALSE,TRUE] }
    { 24  ;   ;No. of Runs         ;Integer       ;CaptionML=[ENU=No. of Runs;
                                                              RUS=Кол-во запусков];
                                                   Editable=No }
    { 25  ;   ;Label               ;Text10        ;CaptionML=[ENU=Label;
                                                              RUS=Метка] }
    { 30  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 58  ;   ;Rounding Precision  ;Decimal       ;CaptionML=[ENU=Rounding Precision;
                                                              RUS=Точность округления];
                                                   AutoFormatType=1 }
    { 59  ;   ;Rounding Type       ;Option        ;CaptionML=[ENU=Rounding Type;
                                                              RUS=Тип округления];
                                                   OptionCaptionML=[ENU=Nearest,Up,Down;
                                                                    RUS=Ближайшее,Большее,Меньшее];
                                                   OptionString=Nearest,Up,Down }
    { 60  ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              RUS=Номер документа] }
    { 61  ;   ;Document Line No.   ;Integer       ;CaptionML=[ENU=Document Line No.;
                                                              RUS=Номер строки документа] }
  }
  KEYS
  {
    {    ;Document No.,Document Line No.,Line No. ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1210003 : TextConst 'ENU="DOC.%1 = ";RUS="ДОК.%1 = "';

    PROCEDURE ViewExpression@1210002();
    VAR
      PayrollDocLineExpr@1210002 : Record 17438;
      PayrollDocExprLines@1210001 : Page 17499;
    BEGIN
      TESTFIELD("Document No.");
      TESTFIELD("Line No.");

      PayrollDocLineExpr.RESET;
      PayrollDocLineExpr.FILTERGROUP(2);
      PayrollDocLineExpr.SETRANGE("Document No.","Document No.");
      PayrollDocLineExpr.SETRANGE("Document Line No.","Document Line No.");
      PayrollDocLineExpr.SETRANGE("Calculation Line No.","Line No.");
      PayrollDocLineExpr.SETRANGE(Level,0);
      PayrollDocLineExpr.SETRANGE("Parent Line No.",0);
      PayrollDocLineExpr.FILTERGROUP(0);

      PayrollDocExprLines.EDITABLE(FALSE);
      PayrollDocExprLines.SETTABLEVIEW(PayrollDocLineExpr);
      PayrollDocExprLines.RUNMODAL;
      CLEAR(PayrollDocExprLines);
    END;

    PROCEDURE ShowCodeLine@1210000() LineText : Text[1024];
    BEGIN
      LineText := '';
      IF Label <> '' THEN
        LineText := LineText + FORMAT(Label) + ': ';
      IF Variable <> '' THEN
        LineText := LineText + FORMAT(Variable) + ' = ';
      IF "Result Field No." <> 0 THEN BEGIN
        CALCFIELDS("Result Field Name");
        LineText := LineText +
          STRSUBSTNO(Text001,"Result Field Name");
      END;
      IF "Statement 1" <> 0 THEN
        LineText := LineText + FORMAT("Statement 1") + ' ';
      IF "Statement 2" <> 0 THEN
        LineText := LineText + FORMAT("Statement 2") + ' ';
      IF Expression <> '' THEN
        LineText := LineText + FORMAT(Expression) + ' ';
      IF "Function Code" <> '' THEN
        LineText := LineText + FORMAT("Function Code");

      IF ("Base Amount Code" <> '') OR ("Time Activity Group" <> '') OR ("Range Code" <> '') THEN
        LineText := LineText + '( ';
      IF "Base Amount Code" <> '' THEN
        LineText := LineText + FORMAT("Base Amount Code");
      IF "Time Activity Group" <> '' THEN BEGIN
        IF "Base Amount Code" <> '' THEN
          LineText := LineText + ' ; ' + FORMAT("Time Activity Group")
        ELSE
          LineText := LineText + FORMAT("Time Activity Group");
      END;
      IF "Range Code" <> '' THEN BEGIN
        IF "Time Activity Group" <> '' THEN
          LineText := LineText + ' ; ' + FORMAT("Range Code")
        ELSE
          LineText := LineText + FORMAT("Range Code");
      END;
      IF ("Base Amount Code" <> '') OR ("Time Activity Group" <> '') OR ("Range Code" <> '') THEN
        LineText := LineText + ' )';

      EXIT(LineText);
    END;

    PROCEDURE Rounding@1210001(Value@1210000 : Decimal) : Decimal;
    BEGIN
      EXIT(ROUND(Value,GetRoundingPrecision,GetRoundingDirection));
    END;

    PROCEDURE GetRoundingDirection@4() : Text[1];
    BEGIN
      CASE "Rounding Type" OF
        "Rounding Type"::Nearest:
          EXIT('=');
        "Rounding Type"::Up:
          EXIT('>');
        "Rounding Type"::Down:
          EXIT('<');
      END;
    END;

    PROCEDURE GetRoundingPrecision@1210004() : Decimal;
    BEGIN
      IF "Rounding Precision" = 0 THEN
        "Rounding Precision" := 0.01;
      EXIT("Rounding Precision");
    END;

    BEGIN
    END.
  }
}

