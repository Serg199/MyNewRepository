OBJECT Table 17315 Tax Calc. G/L Entry
{
  OBJECT-PROPERTIES
  {
    Date=18.12.13;
    Time=12:00:00;
    Version List=NAVRU7.10;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               TaxCalcBufferEntry.SETRANGE("Entry No.","Entry No.");
               TaxCalcBufferEntry.DELETEALL(TRUE);
             END;

    CaptionML=[ENU=Tax Calc. G/L Entry;
               RUS=Операция ГК налогового расчета];
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              RUS=Номер операции] }
    { 2   ;   ;Section Code        ;Code10        ;TableRelation="Tax Calc. Section";
                                                   CaptionML=[ENU=Section Code;
                                                              RUS=Код секции] }
    { 3   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              RUS=Дата учета] }
    { 4   ;   ;Starting Date       ;Date          ;CaptionML=[ENU=Starting Date;
                                                              RUS=Дата начала];
                                                   Editable=No }
    { 5   ;   ;Ending Date         ;Date          ;CaptionML=[ENU=Ending Date;
                                                              RUS=Дата окончания];
                                                   Editable=No }
    { 6   ;   ;Term Entry Line Code;Code10        ;CaptionML=[ENU=Term Entry Line Code;
                                                              RUS=Термин - код строки операции] }
    { 7   ;   ;Description         ;Text70        ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 10  ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              RUS=Сумма];
                                                   BlankZero=Yes }
    { 15  ;   ;Where Used Register IDs;Code61     ;CaptionML=[ENU=Where Used Register IDs;
                                                              RUS=Коды регистра применимости] }
    { 21  ;   ;Ledger Entry No.    ;Integer       ;TableRelation="G/L Entry";
                                                   CaptionML=[ENU=Ledger Entry No.;
                                                              RUS=Номер операции ГК];
                                                   BlankZero=Yes }
    { 22  ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              RUS=Тип документа];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund,,,,,Receipt,Shipment,Return Rcpt.,Return Shpt.,,,,,,,Positive Adj.,Negative Adj.";
                                                                    RUS=" ,Оплата,Счет,Кредит-нота,Процент-нота,Напоминание,Возмещение,,,,,Прих. накл.,Расх. накл.,Возвр. прих. накл.,Возврат поставки,,,,,,,Приход,Расход"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund,,,,,Receipt,Shipment,Return Rcpt.,Return Shpt.,,,,,,,Positive Adj.,Negative Adj.] }
    { 23  ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              RUS=Номер документа] }
    { 24  ;   ;Correction          ;Boolean       ;CaptionML=[ENU=Correction;
                                                              RUS=Корректировка] }
    { 25  ;   ;Source Type         ;Option        ;CaptionML=[ENU=Source Type;
                                                              RUS=Тип источника];
                                                   OptionCaptionML=[ENU=" ,Customer,Vendor,Bank Account,Fixed Asset,Employee";
                                                                    RUS=" ,Клиент,Поставщик,Банковский счет,ОС,Сотрудник"];
                                                   OptionString=[ ,Customer,Vendor,Bank Account,Fixed Asset,Employee] }
    { 26  ;   ;Source No.          ;Code20        ;TableRelation=IF (Source Type=CONST(Customer)) Customer
                                                                 ELSE IF (Source Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Source Type=CONST(Bank Account)) "Bank Account"
                                                                 ELSE IF (Source Type=CONST(Fixed Asset)) "Fixed Asset";
                                                   CaptionML=[ENU=Source No.;
                                                              RUS=Номер источника] }
    { 30  ;   ;Dimension 1 Value Code;Code20      ;CaptionML=[ENU=Dimension 1 Value Code;
                                                              RUS=Код значения измерения 1];
                                                   CaptionClass=TaxCalcMgt.GetDimCaptionClass("Section Code",1) }
    { 31  ;   ;Dimension 2 Value Code;Code20      ;CaptionML=[ENU=Dimension 2 Value Code;
                                                              RUS=Код значения измерения 2];
                                                   CaptionClass=TaxCalcMgt.GetDimCaptionClass("Section Code",2) }
    { 32  ;   ;Dimension 3 Value Code;Code20      ;CaptionML=[ENU=Dimension 3 Value Code;
                                                              RUS=Код значения измерения 3];
                                                   CaptionClass=TaxCalcMgt.GetDimCaptionClass("Section Code",3) }
    { 33  ;   ;Dimension 4 Value Code;Code20      ;CaptionML=[ENU=Dimension 4 Value Code;
                                                              RUS=Код значения измерения 4];
                                                   CaptionClass=TaxCalcMgt.GetDimCaptionClass("Section Code",4) }
    { 40  ;   ;Debit Account No.   ;Code20        ;TableRelation="G/L Account".No.;
                                                   CaptionML=[ENU=Debit Account No.;
                                                              RUS=Номер дебетового счета] }
    { 41  ;   ;Credit Account No.  ;Code20        ;TableRelation="G/L Account".No.;
                                                   CaptionML=[ENU=Credit Account No.;
                                                              RUS=Номер кредитового счета] }
    { 50  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              RUS=Фильтр по дате] }
    { 51  ;   ;Tax Factor          ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Tax Calc. Buffer Entry"."Tax Factor" WHERE (Entry No.=FIELD(Entry No.),
                                                                                                                   Code=FIELD(Code Filter)));
                                                   CaptionML=[ENU=Tax Factor;
                                                              RUS=Ставка налога];
                                                   DecimalPlaces=5:5 }
    { 52  ;   ;Tax Amount          ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Tax Calc. Buffer Entry"."Tax Amount" WHERE (Entry No.=FIELD(Entry No.),
                                                                                                                   Code=FIELD(Code Filter)));
                                                   CaptionML=[ENU=Tax Amount;
                                                              RUS=Сумма налога];
                                                   DecimalPlaces=2: }
    { 53  ;   ;Code Filter         ;Code10        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Code Filter;
                                                              RUS=Фильтр по коду] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Section Code,Ending Date                 }
    {    ;Section Code,Starting Date               }
    {    ;Section Code,Posting Date                }
    {    ;Section Code,Dimension 1 Value Code,Posting Date }
    {    ;Section Code,Dimension 2 Value Code,Posting Date }
    {    ;Section Code,Dimension 3 Value Code,Posting Date }
    {    ;Section Code,Dimension 4 Value Code,Posting Date }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      TaxCalcBufferEntry@1000 : Record 17316;
      TaxCalcMgt@1001 : Codeunit 17303;

    PROCEDURE Navigating@1();
    VAR
      Navigate@1000 : Page 344;
    BEGIN
      CLEAR(Navigate);
      Navigate.SetDoc("Posting Date","Document No.");
      Navigate.RUN;
    END;

    PROCEDURE DebitAccountName@2() : Text[100];
    VAR
      GLAcc@1000 : Record 15;
    BEGIN
      IF GLAcc.GET("Debit Account No.") THEN
        EXIT(GLAcc.Name);
    END;

    PROCEDURE CreditAccountName@3() : Text[100];
    VAR
      GLAcc@1000 : Record 15;
    BEGIN
      IF GLAcc.GET("Credit Account No.") THEN
        EXIT(GLAcc.Name);
    END;

    PROCEDURE SetFieldFilter@4(FieldNumber@1000 : Integer;TypeField@1001 : 'SumFields,CalcFields') FieldInList : Boolean;
    BEGIN
      CASE TypeField OF
        TypeField::SumFields:
          FieldInList :=
            FieldNumber IN [
                            FIELDNO("Tax Amount"),
                            FIELDNO(Amount)
                            ];
        TypeField::CalcFields:
          FieldInList :=
            FieldNumber IN [
                            FIELDNO("Tax Amount"),
                            FIELDNO("Tax Factor")
                            ];
      END;
    END;

    PROCEDURE SourceName@5() Rezult : Text[250];
    VAR
      Employee@1000 : Record 270;
      Cust@1001 : Record 18;
      Vend@1002 : Record 23;
      FA@1003 : Record 5600;
    BEGIN
      CASE "Source Type" OF
        "Source Type"::Customer:
          IF Cust.GET("Source No.") THEN
            Rezult := COPYSTR(Cust.Name,1,MAXSTRLEN(Rezult));
        "Source Type"::Vendor:
          IF Vend.GET("Source No.") THEN
            Rezult := COPYSTR(Vend.Name,1,MAXSTRLEN(Rezult));
        "Source Type"::"Bank Account":
          IF Employee.GET("Source No.") THEN
            Rezult := COPYSTR(Employee.Name,1,MAXSTRLEN(Rezult));
        "Source Type"::"Fixed Asset":
          IF FA.GET("Source No.") THEN
            Rezult := COPYSTR(FA.Description,1,MAXSTRLEN(Rezult));
      END;
    END;

    PROCEDURE FormTitle@6() : Text[250];
    VAR
      TaxCalcHeader@1000 : Record 17308;
    BEGIN
      FILTERGROUP(2);
      TaxCalcHeader.SETRANGE("Section Code","Section Code");
      TaxCalcHeader.SETFILTER("Register ID",DELCHR(GETFILTER("Where Used Register IDs"),'=','~'));
      FILTERGROUP(0);
      IF TaxCalcHeader.FINDSET THEN
        IF TaxCalcHeader.NEXT = 0 THEN
          EXIT(TaxCalcHeader.Description);
    END;

    BEGIN
    END.
  }
}

