OBJECT Page 12406 Customer G/L Turnover
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Customer G/L Turnover;
               RUS=Клиенты Оборотная ведомость по ГК];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table18;
    PageType=List;
    OnOpenPage=BEGIN
                 DateFilter := GETFILTER("Date Filter");
                 IF DateFilter = '' THEN BEGIN
                   IF PeriodType = PeriodType::"Accounting Period" THEN
                     FindPeriodUser('')
                   ELSE
                     FindPeriod('');
                 END ELSE
                   SETRANGE("G/L Starting Date Filter",GETRANGEMIN("Date Filter") - 1);
               END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 24      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Customer;
                                 RUS=&Клиент];
                      Image=Customer }
      { 33      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 RUS=Карточка];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 21;
                      RunPageLink=No.=FIELD(No.);
                      Image=EditLines }
      { 1210006 ;2   ;Action    ;
                      ShortCutKey=Shift+F11;
                      CaptionML=[ENU=Agreements;
                                 RUS=Договоры];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 14914;
                      RunPageLink=Customer No.=FIELD(No.),
                                  Global Dimension 1 Filter=FIELD(FILTER(Global Dimension 1 Filter)),
                                  Global Dimension 2 Filter=FIELD(FILTER(Global Dimension 2 Filter)),
                                  Date Filter=FIELD(FILTER(Date Filter)),
                                  G/L Account Filter=FIELD(FILTER(G/L Account Filter)),
                                  G/L Starting Date Filter=FIELD(FILTER(G/L Starting Date Filter));
                      Promoted=Yes;
                      Image=Agreement;
                      PromotedCategory=Process }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 20      ;1   ;Action    ;
                      CaptionML=[ENU=Previous Period;
                                 RUS=Предыдущий период];
                      ToolTipML=[ENU=Previous Period;
                                 RUS=Предыдущий период];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('<=');
                               END;
                                }
      { 21      ;1   ;Action    ;
                      CaptionML=[ENU=Next Period;
                                 RUS=Следующий период];
                      ToolTipML=[ENU=Next Period;
                                 RUS=Следующий период];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('>=');
                               END;
                                }
      { 40      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Print;
                                 RUS=&Печать];
                      Image=Print }
      { 47      ;2   ;Action    ;
                      CaptionML=[ENU=G/L Turnover;
                                 RUS=Оборотная ведомость];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Turnover;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 Cust.RESET;
                                 Cust.COPYFILTERS(Rec);
                                 REPORT.RUNMODAL(REPORT::"Customer G/L Turnover",TRUE,FALSE,Cust);
                               END;
                                }
      { 1470000 ;2   ;Action    ;
                      CaptionML=[ENU=Accounting Card;
                                 RUS=Бухг. карточка];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Account;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 Cust.RESET;
                                 Cust.COPYFILTERS(Rec);
                                 REPORT.RUNMODAL(REPORT::"Customer Accounting Card",TRUE,FALSE,Cust);
                               END;
                                }
      { 1900000006;0 ;ActionContainer;
                      ActionContainerType=Reports }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 50  ;1   ;Group     ;
                CaptionML=[ENU=Options;
                           RUS=Параметры] }

    { 14  ;2   ;Field     ;
                CaptionML=[ENU=View by;
                           RUS=Просмотр по];
                ToolTipML=[ENU=Day;
                           RUS=День];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                 RUS=День,Неделя,Месяц,Квартал,Год,Учетный период];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             FindPeriod('');
                             CurrPage.UPDATE;
                           END;
                            }

    { 5   ;1   ;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 1210000;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="No." }

    { 1210004;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Name }

    { 1470001;2;Field     ;
                SourceExpr="Customer Posting Group";
                Visible=FALSE }

    { 31  ;2   ;Field     ;
                CaptionML=[ENU=Starting Balance;
                           RUS=Начальное сальдо];
                ToolTipML=[ENU=Specifies the general ledger starting balance associated with the customer.;
                           RUS=Определяет начальное сальдо ГК, связанное с клиентом.];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr="G/L Starting Balance" }

    { 10  ;2   ;Field     ;
                CaptionML=[ENU=Debit Amount (LCY);
                           RUS=Сумма по дебету (руб.)];
                ToolTipML=[ENU=Specifies the general ledger debit amount associated with the customer.;
                           RUS=Определяет сумму дебета ГК, связанную с клиентом.];
                ApplicationArea=#Basic,#Suite;
                BlankNumbers=BlankZero;
                SourceExpr="G/L Debit Amount" }

    { 12  ;2   ;Field     ;
                CaptionML=[ENU=Credit Amount (LCY);
                           RUS=Сумма по кредиту (руб.)];
                ToolTipML=[ENU=Specifies the general ledger credit amount associated with the customer.;
                           RUS=Определяет сумму кредита ГК, связанную с клиентом.];
                ApplicationArea=#Basic,#Suite;
                BlankNumbers=BlankZero;
                SourceExpr="G/L Credit Amount" }

    { 45  ;2   ;Field     ;
                CaptionML=[ENU=Ending Balance;
                           RUS=Конечное сальдо];
                ToolTipML=[ENU=Specifies the general ledger balance to date associated with the customer.;
                           RUS=Определяет сальдо на дату ГК, связанное с клиентом.];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr="G/L Balance to Date" }

    { 35  ;2   ;Field     ;
                CaptionML=[ENU=Net Change (LCY);
                           RUS=Оборот (руб.)];
                ToolTipML=[ENU=Specifies the general ledger net change associated with the customer.;
                           RUS=Определяет оборот ГК, связанный с клиентом.];
                BlankZero=Yes;
                SourceExpr="G/L Net Change";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      Cust@1210004 : Record 18;
      UserPeriods@1210006 : Record 91;
      PeriodType@1210000 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      DateFilter@1210008 : Text;

    LOCAL PROCEDURE FindPeriod@1(SearchText@1210000 : Code[10]);
    VAR
      Calendar@1210001 : Record 2000000007;
      PeriodFormManagement@1210003 : Codeunit 359;
    BEGIN
      IF GETFILTER("Date Filter") <> '' THEN BEGIN
        Calendar.SETFILTER("Period Start",GETFILTER("Date Filter"));
        IF NOT PeriodFormManagement.FindDate('+',Calendar,PeriodType) THEN
          PeriodFormManagement.FindDate('+',Calendar,PeriodType::Day);
        Calendar.SETRANGE("Period Start");
      END;
      PeriodFormManagement.FindDate(SearchText,Calendar,PeriodType);
      SETRANGE("Date Filter",Calendar."Period Start",Calendar."Period End");
      IF GETRANGEMIN("Date Filter") = GETRANGEMAX("Date Filter") THEN
        SETRANGE("Date Filter",GETRANGEMIN("Date Filter"));
      SETRANGE("G/L Starting Date Filter",GETRANGEMIN("Date Filter") - 1);
    END;

    LOCAL PROCEDURE FindPeriodUser@3(SearchText@1210000 : Code[10]);
    VAR
      Calendar@1210001 : Record 2000000007;
      PeriodFormManagement@1210003 : Codeunit 359;
    BEGIN
      IF UserPeriods.GET(USERID) THEN BEGIN
        SETRANGE("Date Filter",UserPeriods."Allow Posting From",UserPeriods."Allow Posting To");
        IF GETRANGEMIN("Date Filter") = GETRANGEMAX("Date Filter") THEN
          SETRANGE("Date Filter",GETRANGEMIN("Date Filter"));
      END ELSE BEGIN
        IF GETFILTER("Date Filter") <> '' THEN BEGIN
          Calendar.SETFILTER("Period Start",GETFILTER("Date Filter"));
          IF NOT PeriodFormManagement.FindDate('+',Calendar,PeriodType) THEN
            PeriodFormManagement.FindDate('+',Calendar,PeriodType::Day);
          Calendar.SETRANGE("Period Start");
        END;
        PeriodFormManagement.FindDate(SearchText,Calendar,PeriodType);
        SETRANGE("Date Filter",Calendar."Period Start",Calendar."Period End");
        IF GETRANGEMIN("Date Filter") = GETRANGEMAX("Date Filter") THEN
          SETRANGE("Date Filter",GETRANGEMIN("Date Filter"));
      END;
    END;

    BEGIN
    END.
  }
}

