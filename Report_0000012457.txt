OBJECT Report 12457 Posted Cash Outgoing Order
{
  OBJECT-PROPERTIES
  {
    Date=09.09.14;
    Time=12:00:00;
    Version List=NAVRU8.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Posted Cash Outgoing Order;
               RUS=Учт. расх. кассовый ордер];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  CompanyInfo.GET;
                  CashOrderReportHelper.InitOutgoingReportTmpl;
                END;

    OnPostReport=BEGIN
                   IF FileName <> '' THEN
                     CashOrderReportHelper.ExportDataFile(FileName)
                   ELSE
                     CashOrderReportHelper.ExportData;
                 END;

  }
  DATASET
  {
    { 5439;    ;DataItem;                    ;
               DataItemTable=Table272;
               DataItemTableView=SORTING(Entry No.);
               OnAfterGetRecord=BEGIN
                                  CurrencyText := CurrencyTxt;
                                  TESTFIELD("Entry Status","Entry Status"::Posted);
                                  BankAcc.GET("Bank Account No.");
                                  BankAcc.TESTFIELD("Account Type",BankAcc."Account Type"::"Cash Account");
                                  BankGLAccPostingGr.GET(BankAcc."Bank Acc. Posting Group");
                                  CreditGlNo := BankGLAccPostingGr."G/L Bank Account No.";
                                  BAnkGLEntries.GET("Bank Account Ledger Entry No.");

                                  IF BankAcc."Currency Code" <> '' THEN BEGIN
                                    Currency.GET(BankAcc."Currency Code");
                                    CurrencyText := Currency.Description;
                                  END;

                                  CASE "Bal. Account Type" OF
                                    "Bal. Account Type"::Customer:
                                      BEGIN
                                        CustomerGeneralLedger.SETCURRENTKEY("Transaction No.");
                                        CustomerGeneralLedger.SETRANGE("Transaction No.",BAnkGLEntries."Transaction No.");
                                        CustomerGeneralLedger.FINDFIRST;
                                        CustomerPostingGr.GET(CustomerGeneralLedger."Customer Posting Group");
                                        SettlAccNo := CustomerPostingGr."Receivables Account";
                                      END;
                                    "Bal. Account Type"::Vendor:
                                      BEGIN
                                        PurchaserGLEntry.SETCURRENTKEY("Transaction No.");
                                        PurchaserGLEntry.SETRANGE("Transaction No.",BAnkGLEntries."Transaction No.");
                                        PurchaserGLEntry.FINDFIRST;
                                        VendorPostingGr.GET(PurchaserGLEntry."Vendor Posting Group");
                                        SettlAccNo := VendorPostingGr."Payables Account";
                                      END;
                                    "Bal. Account Type"::"Bank Account":
                                      BEGIN
                                        BankAcc.GET("Bal. Account No.");
                                        BankGLAccPostingGr.GET(BankAcc."Bank Acc. Posting Group");
                                        SettlAccNo := BankGLAccPostingGr."G/L Bank Account No.";
                                      END;
                                    "Bal. Account Type"::"G/L Account":
                                      BEGIN
                                        SettlAccNo := "Bal. Account No."
                                      END;
                                  END;

                                  DocAmount := "Credit Amount";
                                  WrittenAmount := LocMgt.Amount2Text(BankAcc."Currency Code",DocAmount);
                                  IF DocAmount < 0 THEN
                                    WrittenAmount := MinusTxt + WrittenAmount;

                                  CashierFullName := BankAcc.Contact;
                                  PaymentCheckNo :=
                                    LocMgt.DigitalPartCode("Document No.");

                                  FillBody("Check Ledger Entry");
                                END;

               ReqFilterFields=Entry No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CompanyInfo@1210001 : Record 79;
      CustomerPostingGr@1210002 : Record 92;
      BankAcc@1210003 : Record 270;
      CustomerGeneralLedger@1210004 : Record 21;
      PurchaserGLEntry@1210005 : Record 25;
      BAnkGLEntries@1210006 : Record 271;
      VendorPostingGr@1210007 : Record 93;
      BankGLAccPostingGr@1210008 : Record 277;
      Currency@1210000 : Record 4;
      LocMgt@1210009 : Codeunit 12400;
      CashOrderReportHelper@1210017 : Codeunit 14936;
      DocAmount@1210010 : Decimal;
      WrittenAmount@1210011 : Text[250];
      SettlAccNo@1210012 : Code[10];
      CreditGlNo@1210013 : Code[20];
      PaymentCheckNo@1210014 : Code[20];
      CashierFullName@1210015 : Text[50];
      MinusTxt@1470000 : TextConst 'ENU="(minus) ";RUS="(минус) "';
      CurrencyText@1210016 : Text[30];
      CurrencyTxt@1210018 : TextConst 'ENU=rub., kop.;RUS=руб., коп.';
      FileName@1210019 : Text;

    PROCEDURE TransferReportValues@1210006(VAR ReportValues@1210004 : ARRAY [13] OF Text;CheckLedgerEntry@1210002 : Record 272);
    VAR
      LocRepMgt@1210001 : Codeunit 12401;
    BEGIN
      ReportValues[1] := LocRepMgt.GetCompanyName;
      ReportValues[2] := CompanyInfo."OKPO Code";
      ReportValues[3] := PaymentCheckNo;
      ReportValues[4] := LocMgt.Date2Text(CheckLedgerEntry."Posting Date");
      ReportValues[5] := CurrencyText;
      ReportValues[6] := SettlAccNo;
      ReportValues[7] := CreditGlNo;
      ReportValues[8] := LocRepMgt.FormatReportValue(CheckLedgerEntry."Credit Amount",2);
      ReportValues[9] := BAnkGLEntries."Reason Code";
      ReportValues[10] := CheckLedgerEntry.Description;
      ReportValues[11] := CheckLedgerEntry."Payment Purpose";
      ReportValues[12] := WrittenAmount;
      ReportValues[13] := CheckLedgerEntry."Cash Order Supplement";
      ReportValues[14] := CompanyInfo."Director Name";
      ReportValues[15] := CompanyInfo."Accountant Name";
      ReportValues[16] := CheckLedgerEntry."Cash Order Including";
      ReportValues[17] := CashierFullName;
    END;

    PROCEDURE FillBody@1210004(CheckLedgerEntry@1210000 : Record 272);
    VAR
      ReportValues@1210001 : ARRAY [17] OF Text;
    BEGIN
      TransferReportValues(ReportValues,CheckLedgerEntry);
      CashOrderReportHelper.FillBodyOutgoing(ReportValues);
    END;

    PROCEDURE SetFileNameSilent@1210000(NewFileName@1210001 : Text);
    BEGIN
      FileName := NewFileName;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

