OBJECT Page 61 Applied Customer Entries
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00,NAVRU10.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Applied Customer Entries;
               RUS=Примененные операции клиента];
    SourceTable=Table21;
    DataCaptionExpr=Heading;
    PageType=List;
    OnOpenPage=BEGIN
                 RESET;

                 IF "Entry No." <> 0 THEN BEGIN
                   CreateCustLedgEntry := Rec;
                   IF CreateCustLedgEntry."Document Type" = 0 THEN
                     Heading := Text000
                   ELSE
                     Heading := FORMAT(CreateCustLedgEntry."Document Type");
                   Heading := Heading + ' ' + CreateCustLedgEntry."Document No.";

                   FindApplnEntriesDtldtLedgEntry;
                   SETCURRENTKEY("Entry No.");
                   SETRANGE("Entry No.");

                   IF CreateCustLedgEntry."Closed by Entry No." <> 0 THEN BEGIN
                     "Entry No." := CreateCustLedgEntry."Closed by Entry No.";
                     MARK(TRUE);
                   END;

                   SETCURRENTKEY("Closed by Entry No.");
                   SETRANGE("Closed by Entry No.",CreateCustLedgEntry."Entry No.");
                   IF FIND('-') THEN
                     REPEAT
                       MARK(TRUE);
                     UNTIL NEXT = 0;

                   SETCURRENTKEY("Entry No.");
                   SETRANGE("Closed by Entry No.");
                 END;

                 MARKEDONLY(TRUE);
               END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 20      ;1   ;ActionGroup;
                      CaptionML=[ENU=Ent&ry;
                                 RUS=Оп&ерация];
                      Image=Entry }
      { 27      ;2   ;Action    ;
                      CaptionML=[ENU=Reminder/Fin. Charge Entries;
                                 RUS=Операции напоминаний/процент-нот];
                      ToolTipML=[ENU=View entries that were created when reminders and finance charge memos were issued.;
                                 RUS=Просмотр операций, созданных при выпуске напоминаний и процент-нот.];
                      RunObject=Page 444;
                      RunPageView=SORTING(Customer Entry No.);
                      RunPageLink=Customer Entry No.=FIELD(Entry No.);
                      Image=Reminder }
      { 32      ;2   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 RUS=Измерения];
                      ToolTipML=[ENU=View or edits dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 RUS=Просмотр или изменение измерений, например области, проекта или отдела, которые можно назначать документам покупки и продажи для распределения себестоимости и анализа истории транзакций.];
                      ApplicationArea=#Suite;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 35      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Detailed &Ledger Entries;
                                 RUS=Подробные &операции];
                      ToolTipML=[ENU=View a summary of the all posted entries and adjustments related to a specific customer ledger entry.;
                                 RUS=Просмотр сводки по всем учтенным операциям и корректировкам, связанным с определенной операцией книги клиента.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 573;
                      RunPageView=SORTING(Cust. Ledger Entry No.,Posting Date);
                      RunPageLink=Cust. Ledger Entry No.=FIELD(Entry No.),
                                  Customer No.=FIELD(Customer No.);
                      Image=View }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 19      ;1   ;Action    ;
                      CaptionML=[ENU=&Navigate;
                                 RUS=&Навигатор];
                      ToolTipML=[ENU=Find all entries and documents that exist for the document number and posting date on the selected entry or document.;
                                 RUS=Поиск всех операций и документов, существующих для номера документа и даты учета в выбранной операции или в выбранном документе.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Navigate;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Navigate.SetDoc("Posting Date","Document No.");
                                 Navigate.RUN;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the customer entry's posting date.;
                           RUS=Определяет дату учета операции клиента.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Date" }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the document type that the customer entry belongs to.;
                           RUS=Определяет тип документа, к которому относится операция клиента.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Type" }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the entry's document number.;
                           RUS=Определяет номер документа операции.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document No." }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a description of the customer entry.;
                           RUS=Определяет описание операции клиента.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description }

    { 1210000;2;Field     ;
                ToolTipML=[ENU=Specifies the agreement number associated with the customer ledger entry.;
                           RUS=Определяет номер соглашения, связанный с операцией книги клиентов.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Agreement No." }

    { 77  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the dimension value code linked to the entry.;
                           RUS=Определяет код значения измерения, связанный с этой операцией.];
                SourceExpr="Global Dimension 1 Code";
                Visible=FALSE }

    { 75  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the dimension value code linked to the entry.;
                           RUS=Определяет код значения измерения, связанный с этой операцией.];
                SourceExpr="Global Dimension 2 Code";
                Visible=FALSE }

    { 73  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the salesperson whom the entry is linked to.;
                           RUS=Определяет код менеджера по продажам, с которым связана эта операция.];
                SourceExpr="Salesperson Code";
                Visible=FALSE }

    { 71  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the currency code for the amount on the line.;
                           RUS=Определяет код валюты для суммы в строке.];
                ApplicationArea=#Suite;
                SourceExpr="Currency Code" }

    { 33  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount of the original entry.;
                           RUS=Определяет сумму исходной операции.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Original Amount" }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount of the entry.;
                           RUS=Определяет сумму операции.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Amount }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount that the entry was finally applied to (closed) with.;
                           RUS=Определяет сумму, с которой в конечном итоге была применена операция (закрыта).];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Closed by Amount" }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the currency of the entry that was applied to (and closed) this customer ledger entry.;
                           RUS=Определяет код валюты операции, который был применен к этой операции книги клиентов (и закрыл ее).];
                SourceExpr="Closed by Currency Code";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount that was finally applied to (and closed) this customer ledger entry.;
                           RUS=Определяет сумму, которая в конечном итоге была применена к этой операции книги клиентов (закрыла ее).];
                SourceExpr="Closed by Currency Amount";
                AutoFormatType=1;
                AutoFormatExpr="Closed by Currency Code";
                Visible=FALSE }

    { 25  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of the user associated with the entry.;
                           RUS=Определяет код пользователя, связанного с операцией.];
                SourceExpr="User ID";
                Visible=FALSE }

    { 23  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the source code that is linked to the entry.;
                           RUS=Определяет код источника, связанного с операцией.];
                SourceExpr="Source Code";
                Visible=FALSE }

    { 21  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the reason code on the entry.;
                           RUS=Определяет код причины операции.];
                SourceExpr="Reason Code";
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the entry number that is assigned to the entry.;
                           RUS=Определяет номер, присвоенный операции.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Entry No." }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Document;RUS=Документ';
      CreateCustLedgEntry@1001 : Record 21;
      Navigate@1002 : Page 344;
      Heading@1003 : Text[50];

    LOCAL PROCEDURE FindApplnEntriesDtldtLedgEntry@1();
    VAR
      DtldCustLedgEntry1@1001 : Record 379;
      DtldCustLedgEntry2@1000 : Record 379;
    BEGIN
      DtldCustLedgEntry1.SETCURRENTKEY("Cust. Ledger Entry No.");
      DtldCustLedgEntry1.SETRANGE("Cust. Ledger Entry No.",CreateCustLedgEntry."Entry No.");
      DtldCustLedgEntry1.SETRANGE(Unapplied,FALSE);
      IF DtldCustLedgEntry1.FIND('-') THEN
        REPEAT
          IF DtldCustLedgEntry1."Cust. Ledger Entry No." =
             DtldCustLedgEntry1."Applied Cust. Ledger Entry No."
          THEN BEGIN
            DtldCustLedgEntry2.INIT;
            DtldCustLedgEntry2.SETCURRENTKEY("Applied Cust. Ledger Entry No.","Entry Type");
            DtldCustLedgEntry2.SETRANGE(
              "Applied Cust. Ledger Entry No.",DtldCustLedgEntry1."Applied Cust. Ledger Entry No.");
            DtldCustLedgEntry2.SETRANGE("Entry Type",DtldCustLedgEntry2."Entry Type"::Application);
            DtldCustLedgEntry2.SETRANGE(Unapplied,FALSE);
            IF DtldCustLedgEntry2.FIND('-') THEN
              REPEAT
                IF DtldCustLedgEntry2."Cust. Ledger Entry No." <>
                   DtldCustLedgEntry2."Applied Cust. Ledger Entry No."
                THEN BEGIN
                  SETCURRENTKEY("Entry No.");
                  SETRANGE("Entry No.",DtldCustLedgEntry2."Cust. Ledger Entry No.");
                  IF FIND('-') THEN
                    MARK(TRUE);
                END;
              UNTIL DtldCustLedgEntry2.NEXT = 0;
          END ELSE BEGIN
            SETCURRENTKEY("Entry No.");
            SETRANGE("Entry No.",DtldCustLedgEntry1."Applied Cust. Ledger Entry No.");
            IF FIND('-') THEN
              MARK(TRUE);
          END;
        UNTIL DtldCustLedgEntry1.NEXT = 0;
    END;

    PROCEDURE SetTempCustLedgEntry@2(NewTempCustLedgEntryNo@1102601000 : Integer);
    BEGIN
      IF NewTempCustLedgEntryNo <> 0 THEN BEGIN
        SETRANGE("Entry No.",NewTempCustLedgEntryNo);
        FIND('-');
      END;
    END;

    BEGIN
    END.
  }
}

