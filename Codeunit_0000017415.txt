OBJECT Codeunit 17415 Payroll Data Exchange Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=09.09.14;
    Time=12:00:00;
    Version List=NAVRU8.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text002@1210001 : TextConst 'ENU=Export payroll elements.;RUS=Экспорт зарплатных элементов.';
      FileMgt@1210000 : Codeunit 419;
      Text003@1210003 : TextConst 'ENU=Export element groups.;RUS=Экспорт групп элементов.';
      Text004@1210005 : TextConst 'ENU=Export calculation functions.;RUS=Экспорт функций расчета.';
      Text005@1210006 : TextConst 'ENU=Export payroll analysis reports.;RUS=Экспорт аналитических отчетов по зарплате.';

    PROCEDURE ImportPayrollElements@7(FileName@1000 : Text[1024]);
    VAR
      ElementXMLPort@1003 : XMLport 17400;
      PayrollFile@1210000 : File;
      InputStream@1002 : InStream;
    BEGIN
      IF NOT CreateInputStream(FileName,PayrollFile,InputStream) THEN
        EXIT;

      ElementXMLPort.SETSOURCE(InputStream);
      ElementXMLPort.IMPORT;
      ElementXMLPort.ImportData;
      CLEAR(InputStream);

      IF FileName <> '' THEN
        PayrollFile.CLOSE;
    END;

    PROCEDURE ExportPayrollElements@8(VAR PayrollElement@1210000 : Record 17400);
    VAR
      ElementXMLPort@1003 : XMLport 17400;
      OutputFile@1001 : File;
      OutputStream@1002 : OutStream;
      FileName@1210001 : Text[250];
    BEGIN
      FileName := FileMgt.ServerTempFileName('xml');

      OutputFile.TEXTMODE(TRUE);
      OutputFile.WRITEMODE(TRUE);
      OutputFile.CREATE(FileName);
      OutputFile.CREATEOUTSTREAM(OutputStream);

      ElementXMLPort.SETDESTINATION(OutputStream);
      ElementXMLPort.SetData(PayrollElement);
      ElementXMLPort.EXPORT;
      OutputFile.CLOSE;

      DOWNLOAD(FileName,Text002,'','',FileName);
    END;

    PROCEDURE ImportPayrollCalcGroups@1210001(FileName@1000 : Text[1024]);
    VAR
      PayrollCalcGroupXMLPort@1003 : XMLport 17401;
      PayrollFile@1210000 : File;
      InputStream@1002 : InStream;
    BEGIN
      IF NOT CreateInputStream(FileName,PayrollFile,InputStream) THEN
        EXIT;

      PayrollCalcGroupXMLPort.SETSOURCE(InputStream);
      PayrollCalcGroupXMLPort.IMPORT;
      PayrollCalcGroupXMLPort.ImportData;
      CLEAR(InputStream);

      IF FileName <> '' THEN
        PayrollFile.CLOSE;
    END;

    PROCEDURE ExportPayrollCalcGroups@1210000(VAR PayrollCalcGroup@1210000 : Record 17402);
    VAR
      PayrollCalcGroupXMLPort@1003 : XMLport 17401;
      OutputFile@1001 : File;
      OutputStream@1002 : OutStream;
      FileName@1210001 : Text[250];
    BEGIN
      FileName := FileMgt.ServerTempFileName('xml');

      OutputFile.TEXTMODE(TRUE);
      OutputFile.WRITEMODE(TRUE);
      OutputFile.CREATE(FileName);
      OutputFile.CREATEOUTSTREAM(OutputStream);

      PayrollCalcGroupXMLPort.SETDESTINATION(OutputStream);
      PayrollCalcGroupXMLPort.SetData(PayrollCalcGroup);
      PayrollCalcGroupXMLPort.EXPORT;
      OutputFile.CLOSE;

      DOWNLOAD(FileName,Text003,'','',FileName);
    END;

    PROCEDURE ImportPayrollCalcFunctions@1210003(FileName@1000 : Text[1024]);
    VAR
      PayrollCalcFuncXMLPort@1003 : XMLport 17402;
      PayrollFile@1210000 : File;
      InputStream@1002 : InStream;
    BEGIN
      IF NOT CreateInputStream(FileName,PayrollFile,InputStream) THEN
        EXIT;

      PayrollCalcFuncXMLPort.SETSOURCE(InputStream);
      PayrollCalcFuncXMLPort.IMPORT;
      PayrollCalcFuncXMLPort.ImportData;
      CLEAR(InputStream);

      IF FileName <> '' THEN
        PayrollFile.CLOSE;
    END;

    PROCEDURE ExportPayrollCalcFunctions@1210002(VAR PayrollCalcFunction@1210000 : Record 17408);
    VAR
      PayrollCalcFuncXMLPort@1003 : XMLport 17402;
      OutputFile@1001 : File;
      OutputStream@1002 : OutStream;
      FileName@1210001 : Text[250];
    BEGIN
      FileName := FileMgt.ServerTempFileName('xml');

      OutputFile.TEXTMODE(TRUE);
      OutputFile.WRITEMODE(TRUE);
      OutputFile.CREATE(FileName);
      OutputFile.CREATEOUTSTREAM(OutputStream);

      PayrollCalcFuncXMLPort.SETDESTINATION(OutputStream);
      PayrollCalcFuncXMLPort.SetData(PayrollCalcFunction);
      PayrollCalcFuncXMLPort.EXPORT;
      OutputFile.CLOSE;

      DOWNLOAD(FileName,Text004,'','',FileName);
    END;

    PROCEDURE ImportPayrollAnalysisReports@1210005(FileName@1000 : Text[1024]);
    VAR
      PayrollAnalysisReports@1003 : XMLport 14960;
      PayrollFile@1210000 : File;
      InputStream@1002 : InStream;
    BEGIN
      IF NOT CreateInputStream(FileName,PayrollFile,InputStream) THEN
        EXIT;

      PayrollAnalysisReports.SETSOURCE(InputStream);
      PayrollAnalysisReports.IMPORT;
      PayrollAnalysisReports.ImportData;
      CLEAR(InputStream);

      IF FileName <> '' THEN
        PayrollFile.CLOSE;
    END;

    PROCEDURE ExportPayrollAnalysisReports@1210004(VAR PayrollAnalysisReportName@1210000 : Record 14960);
    VAR
      PayrollAnalysisReports@1003 : XMLport 14960;
      OutputFile@1001 : File;
      OutputStream@1002 : OutStream;
      FileName@1210001 : Text[250];
    BEGIN
      FileName := FileMgt.ServerTempFileName('xml');

      OutputFile.TEXTMODE(TRUE);
      OutputFile.WRITEMODE(TRUE);
      OutputFile.CREATE(FileName);
      OutputFile.CREATEOUTSTREAM(OutputStream);

      PayrollAnalysisReports.SETDESTINATION(OutputStream);
      PayrollAnalysisReports.SetData(PayrollAnalysisReportName);
      PayrollAnalysisReports.EXPORT;
      OutputFile.CLOSE;

      DOWNLOAD(FileName,Text005,'','',FileName);
    END;

    PROCEDURE CreateInputStream@1210009(FileName@1210002 : Text;VAR PayrollFile@1210001 : File;VAR InputStream@1210000 : InStream) : Boolean;
    BEGIN
      IF FileName <> '' THEN BEGIN
        PayrollFile.OPEN(FileName);
        PayrollFile.CREATEINSTREAM(InputStream);
        EXIT(TRUE);
      END;

      EXIT(UPLOADINTOSTREAM('','','*.xml|*.xml',FileName,InputStream));
    END;

    BEGIN
    END.
  }
}

