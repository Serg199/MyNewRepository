OBJECT Report 17354 Personal Account T-54a
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Personal Account T-54a;
               RUS=Лицевой счет Т-54а];
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  ExcelTemplate@1210000 : Record 14919;
                BEGIN
                  IF DateComposition = 0D THEN
                    ERROR(Text14801);

                  DSDay := FORMAT(DATE2DMY(DateComposition,1));
                  DSMonth := FORMAT(DATE2DMY(DateComposition,2));
                  DSYear := FORMAT(DATE2DMY(DateComposition,3));
                  IF STRLEN(DSDay) < 2 THEN
                    DSDay := '0' + DSDay;
                  IF STRLEN(DSMonth) < 2 THEN
                    DSMonth := '0' + DSMonth;

                  HumanResSetup.GET;
                  HumanResSetup.TESTFIELD("T-54a Template Code");

                  FileName := ExcelTemplate.OpenTemplate(HumanResSetup."T-54a Template Code");
                END;

  }
  DATASET
  {
    { 7528;    ;DataItem;                    ;
               DataItemTable=Table5200;
               OnPreDataItem=BEGIN
                               CompanyInfo.GET;
                               IF GETRANGEMIN("No.") <> GETRANGEMAX("No.") THEN
                                 ERROR(Text14800);
                             END;

               OnAfterGetRecord=VAR
                                  i@1470000 : Integer;
                                BEGIN
                                  Person.GET("Person No.");

                                  ExcelMgt.OpenBook(FileName);
                                  ExcelMgt.OpenSheet('Sheet1');

                                  ExcelMgt.FillCell('A7',CompanyInfo.Name);
                                  ExcelMgt.FillCell('FJ7',CompanyInfo."OKPO Code");
                                  ExcelMgt.FillCell('A9',"Org. Unit Name");
                                  ExcelMgt.FillCell('Z13',GetFullName);
                                  ExcelMgt.FillCell('DV13',"No.");
                                  ExcelMgt.FillCell('FJ13',FORMAT("Birth Date"));
                                  ExcelMgt.FillCell('BF18',''); // document no.
                                  ExcelMgt.FillCell('BZ18',FORMAT(FromDate));
                                  ExcelMgt.FillCell('CI18',FORMAT(ToDate));
                                  ExcelMgt.FillCell('CR18',"Category Code");
                                  ExcelMgt.FillCell('DU18',Person."Social Security No.");
                                  ExcelMgt.FillCell('DH18',Person."VAT Registration No.");

                                  AltAddr.RESET;
                                  AltAddr.SETRANGE("Person No.",Employee."No.");
                                  AltAddr.SETRANGE("Address Type",AltAddr."Address Type"::Registration);
                                  IF AltAddr.FINDFIRST THEN;

                                  ExcelMgt.FillCell('EK18',AltAddr."Region Code");
                                  ExcelMgt.FillCell('EU18',FORMAT(Person."Family Status"));
                                  ExcelMgt.FillCell('FE18',FORMAT(Person.ChildrenNumber(DateComposition)));
                                  ExcelMgt.FillCell('FL18',FORMAT(Employee."Employment Date"));
                                  ExcelMgt.FillCell('FT18',FORMAT(Employee."Termination Date"));

                                  // Footer
                                  ExcelMgt.FillCell('CR33',FORMAT(DSDay));
                                  ExcelMgt.FillCell('CY33',FORMAT(DSMonth));
                                  ExcelMgt.FillCell('DW33',COPYSTR(FORMAT(DSYear),3,2));

                                  // Employee Job Entry
                                  EmployeeJobEntry.RESET;
                                  EmployeeJobEntry.SETCURRENTKEY("Employee No.");
                                  EmployeeJobEntry.SETRANGE("Employee No.","No.");
                                  EmployeeJobEntry.SETFILTER("Position No.",'<>%1','');
                                  IF (FromDate <> 0D) AND (ToDate <> 0D) THEN
                                    EmployeeJobEntry.SETRANGE("Starting Date",FromDate,ToDate);
                                  EmployeeJobEntry.SETRANGE("Position Changed",TRUE);

                                  // Employee Vacation Entry
                                  EmplAbsenceEntry.RESET;
                                  EmplAbsenceEntry.SETCURRENTKEY("Employee No.");
                                  EmplAbsenceEntry.SETRANGE("Employee No.","No.");
                                  EmplAbsenceEntry.SETRANGE("Entry Type",EmplAbsenceEntry."Entry Type"::Usage);

                                  IF EmployeeJobEntry.COUNT > EmplAbsenceEntry.COUNT THEN
                                    ExpandExcelTable(EmployeeJobEntry.COUNT)
                                  ELSE
                                    ExpandExcelTable(EmplAbsenceEntry.COUNT);

                                  i := 25;
                                  IF EmployeeJobEntry.FINDSET THEN
                                    REPEAT
                                      Position.GET(EmployeeJobEntry."Position No.");
                                      ExcelMgt.FillCell(STRSUBSTNO('J%1',i),EmployeeJobEntry."Document No.");
                                      ExcelMgt.FillCell(STRSUBSTNO('A%1',i),FORMAT(EmployeeJobEntry."Document Date"));
                                      ExcelMgt.FillCell(STRSUBSTNO('S%1',i),EmployeeJobEntry."Org. Unit Code");
                                      ExcelMgt.FillCell(STRSUBSTNO('AL%1',i),EmployeeJobEntry."Job Title Code");
                                      ExcelMgt.FillCell(STRSUBSTNO('BB%1',i),FORMAT(EmployeeJobEntry."Conditions of Work"));
                                      ExcelMgt.FillCell(STRSUBSTNO('BL%1',i),FORMAT(Position."Base Salary Amount"));
                                      ExcelMgt.FillCell(STRSUBSTNO('CD%1',i),FORMAT(Position."Additional Salary Amount"));
                                      i := i + 1;
                                    UNTIL EmployeeJobEntry.NEXT = 0;

                                  i := 25;
                                  IF EmplAbsenceEntry.FINDSET THEN
                                    REPEAT
                                      ExcelMgt.FillCell(STRSUBSTNO('CV%1',i),EmplAbsenceEntry."Time Activity Code");
                                      ExcelMgt.FillCell(STRSUBSTNO('DE%1',i),FORMAT(EmplAbsenceEntry."HR Order Date"));
                                      ExcelMgt.FillCell(STRSUBSTNO('DN%1',i),EmplAbsenceEntry."HR Order No.");
                                      IF EmplAbsenceEntry."Accrual Entry No." <> 0 THEN BEGIN
                                        EmplAbsenceEntry2.GET(EmplAbsenceEntry."Accrual Entry No.");
                                        ExcelMgt.FillCell(STRSUBSTNO('DW%1',i),FORMAT(EmplAbsenceEntry2."Start Date"));
                                        ExcelMgt.FillCell(STRSUBSTNO('EE%1',i),FORMAT(EmplAbsenceEntry2."End Date"));
                                      END;
                                      ExcelMgt.FillCell(STRSUBSTNO('EM%1',i),FORMAT(EmplAbsenceEntry."Calendar Days"));
                                      ExcelMgt.FillCell(STRSUBSTNO('EW%1',i),FORMAT(EmplAbsenceEntry."Start Date"));
                                      ExcelMgt.FillCell(STRSUBSTNO('FE%1',i),FORMAT(EmplAbsenceEntry."End Date"));
                                      ExcelMgt.FillCell(STRSUBSTNO('FM%1',i),FORMAT(0)); // tax benefit total amount

                                      i := i + 1;
                                    UNTIL EmplAbsenceEntry.NEXT = 0;

                                  // Deductions
                                  ExcelMgt.GiveUserControl;
                                END;

               ReqFilterFields=No.,Org. Unit Code,Status }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   DateComposition := TODAY;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             RUS=Параметры] }

      { 1470000;2;Field     ;
                  CaptionML=[ENU=From Date;
                             RUS=От даты];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=FromDate }

      { 1470002;2;Field     ;
                  CaptionML=[ENU=To Date;
                             RUS=До даты];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=ToDate }

      { 13  ;2   ;Field     ;
                  CaptionML=[ENU=Creation Date;
                             RUS=Дата создания];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=DateComposition }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      HumanResSetup@1210024 : Record 5218;
      CompanyInfo@1210001 : Record 79;
      Person@1210023 : Record 17350;
      Position@1210002 : Record 17370;
      AltAddr@1210000 : Record 5201;
      EmployeeJobEntry@1210003 : Record 17363;
      EmplAbsenceEntry@1210017 : Record 17389;
      EmplAbsenceEntry2@1210011 : Record 17389;
      ExcelMgt@1210029 : Codeunit 12416;
      FileName@1210025 : Text[1024];
      DateComposition@1210004 : Date;
      DSDay@1210005 : Code[2];
      DSMonth@1210006 : Code[2];
      DSYear@1210007 : Code[4];
      FromDate@1210008 : Date;
      ToDate@1210009 : Date;
      Text14800@1210039 : TextConst 'ENU=You can select one employee only.;RUS=Можно выбрать только одного сотрудника.';
      Text14801@1210040 : TextConst 'ENU=You must enter Creation Date.;RUS=Необходимо ввести дату создания.';

    PROCEDURE ExpandExcelTable@1210005(QtyRowsToCopy@1210000 : Integer);
    VAR
      I@1210001 : Integer;
      FirstRowNo@1210002 : Integer;
    BEGIN
      FirstRowNo := 25;
      FOR I := FirstRowNo TO FirstRowNo + QtyRowsToCopy - 1 DO
        ExcelMgt.CopyRow(FirstRowNo);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

