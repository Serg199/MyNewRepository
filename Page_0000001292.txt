OBJECT Page 1292 Payment Application
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Payment Application;
               RUS=Применение платежа];
    DeleteAllowed=No;
    SourceTable=Table1293;
    DelayedInsert=Yes;
    SourceTableView=SORTING(Sorting Order)
                    ORDER(Ascending);
    PageType=Worksheet;
    SourceTableTemporary=Yes;
    OnOpenPage=BEGIN
                 CODEUNIT.RUN(CODEUNIT::"Get Bank Stmt. Line Candidates",Rec);
                 SETCURRENTKEY("Sorting Order","Stmt To Rem. Amount Difference");
                 ASCENDING(TRUE);

                 IF FINDFIRST THEN;
               END;

    OnNewRecord=BEGIN
                  TransferFromBankAccReconLine(BankAccReconLine);
                END;

    OnAfterGetCurrRecord=BEGIN
                           UpdateTotals;
                           LineEditable := "Applies-to Entry No." = 0;
                         END;

    ActionList=ACTIONS
    {
      { 43      ;    ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 38      ;1   ;ActionGroup;
                      CaptionML=[ENU=Details;
                                 RUS=Сведения] }
      { 42      ;2   ;Action    ;
                      Name=ShowBankTransactionDetails;
                      CaptionML=[ENU=Bank Transaction Details;
                                 RUS=Сведения о банковской транзакции];
                      ToolTipML=[ENU=View the bank statement details for the selected line. The details include the values that exist in an imported bank statement file.;
                                 RUS=Просмотр сведений банковской выписки для выбранной строки. Эти сведения включают значения из импортированного файла банковской выписки.];
                      ApplicationArea=#Basic,#Suite;
                      Image=ExternalDocument;
                      OnAction=VAR
                                 DataExchField@1001 : Record 1221;
                               BEGIN
                                 DataExchField.SETRANGE("Data Exch. No.",BankAccReconLine."Data Exch. Entry No.");
                                 DataExchField.SETRANGE("Line No.",BankAccReconLine."Data Exch. Line No.");
                                 PAGE.RUN(PAGE::"Bank Statement Line Details",DataExchField);
                               END;
                                }
      { 7       ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 10      ;1   ;ActionGroup;
                      CaptionML=[ENU=Review;
                                 RUS=Просмотр] }
      { 9       ;2   ;Action    ;
                      Name=Accept;
                      CaptionML=[ENU=Accept Applications;
                                 RUS=Принять применения];
                      ToolTipML=[ENU=Accept a payment application after reviewing it or manually applying it to entries. This closes the payment application and sets the Match Confidence to Accepted.;
                                 RUS=Принятие применения платежа после его проверки или ручное применение его к операциям. При этом применение платежа закрывается, а для поля "Достоверность совпадения" устанавливается значение "Принято".];
                      ApplicationArea=#Basic,#Suite;
                      Image=Approve;
                      OnAction=BEGIN
                                 IF BankAccReconLine.Difference * BankAccReconLine."Applied Amount" > 0 THEN
                                   IF BankAccReconLine."Account Type" = BankAccReconLine."Account Type"::"Bank Account" THEN
                                     ERROR(ExcessiveAmountErr,BankAccReconLine.Difference);

                                 BankAccReconLine.AcceptApplication;
                                 CurrPage.CLOSE;
                               END;
                                }
      { 8       ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=[ENU=Remove Applications;
                                 RUS=Удалить применения];
                      ToolTipML=[ENU=Remove a payment application from an entry. This unapplies the payment.;
                                 RUS=Удаление применения платежа из операции. Платеж будет отменен.];
                      ApplicationArea=#Basic,#Suite;
                      Image=Reject;
                      OnAction=BEGIN
                                 IF CONFIRM(RemoveApplicationsQst) THEN
                                   RemoveApplications;
                               END;
                                }
      { 11      ;1   ;ActionGroup;
                      CaptionML=[ENU=Show;
                                 RUS=Показать] }
      { 35      ;2   ;Action    ;
                      Name=AllOpenEntries;
                      CaptionML=[ENU=All Open Entries;
                                 RUS=Все открытые операции];
                      ToolTipML=[ENU=Show all open entries that the payment can be applied to.;
                                 RUS=Отображение всех открытых операций, к которым может быть применен платеж.];
                      ApplicationArea=#Basic,#Suite;
                      Image=ViewDetails;
                      OnAction=BEGIN
                                 SETRANGE(Applied);
                                 SETRANGE("Account Type");
                                 SETRANGE("Account No.");
                                 SETRANGE(Type,Type::"Bank Account Ledger Entry",Type::"Check Ledger Entry");

                                 IF FINDFIRST THEN;
                               END;
                                }
      { 37      ;2   ;Action    ;
                      Name=RelatedPartyOpenEntries;
                      CaptionML=[ENU=Related-Party Open Entries;
                                 RUS=Открытые операции связанной стороны];
                      ToolTipML=[ENU=Show only open entries that are specifically for the related party in the Account No. field. This limits the list to those open entries that are most likely to relate to the payment.;
                                 RUS=Отображение только тех открытых операций, которые относятся к связанной стороне из поля "Номер счета". В результате список будет сокращен только до тех открытых операций, которые с наибольшей вероятностью связаны с платежом.];
                      ApplicationArea=#Basic,#Suite;
                      Image=ViewDocumentLine;
                      OnAction=BEGIN
                                 SETRANGE(Applied);

                                 BankAccReconLine.GET(
                                   BankAccReconLine."Statement Type",BankAccReconLine."Bank Account No.",
                                   BankAccReconLine."Statement No.",BankAccReconLine."Statement Line No.");

                                 IF BankAccReconLine."Account No." <> '' THEN BEGIN
                                   SETRANGE("Account No.",BankAccReconLine."Account No.");
                                   SETRANGE("Account Type",BankAccReconLine."Account Type");
                                 END;
                                 SETRANGE(Type,Type::"Bank Account Ledger Entry",Type::"Check Ledger Entry");

                                 IF FINDFIRST THEN;
                               END;
                                }
      { 36      ;2   ;Action    ;
                      Name=AppliedEntries;
                      CaptionML=[ENU=Applied Entries;
                                 RUS=Примененные операции];
                      ToolTipML=[ENU=View the ledger entries that have been applied to this record.;
                                 RUS=Просмотр операций книги, примененных к этой записи.];
                      ApplicationArea=#Basic,#Suite;
                      Image=ViewRegisteredOrder;
                      OnAction=BEGIN
                                 SETRANGE(Applied,TRUE);
                                 SETRANGE("Account Type");
                                 SETRANGE("Account No.");
                                 SETRANGE(Type,Type::"Bank Account Ledger Entry",Type::"Check Ledger Entry");

                                 IF FINDFIRST THEN;
                               END;
                                }
      { 46      ;2   ;Action    ;
                      Name=AllOpenBankTransactions;
                      CaptionML=[ENU=All Open Bank Transactions;
                                 RUS=Все открытые банковские транзакции];
                      ToolTipML=[ENU=View all open bank entries that the payment can be applied to.;
                                 RUS=Просмотр всех открытых банковских операций, к которым может быть применен платеж.];
                      ApplicationArea=#Basic,#Suite;
                      Image=ViewPostedOrder;
                      OnAction=BEGIN
                                 SETRANGE(Applied);
                                 SETRANGE("Account Type","Account Type"::"Bank Account");
                                 SETRANGE("Account No.");
                                 SETRANGE(Type,Type::"Bank Account Ledger Entry");

                                 IF FINDFIRST THEN;
                               END;
                                }
      { 47      ;2   ;Action    ;
                      Name=AllOpenPayments;
                      CaptionML=[ENU=All Open Payments;
                                 RUS=Все открытые платежи];
                      ToolTipML=[ENU=Show all open checks that the payment can be applied to.;
                                 RUS=Отображение всех открытых платежных документов, к которым может быть применен платеж.];
                      ApplicationArea=#Basic,#Suite;
                      Image=ViewCheck;
                      OnAction=BEGIN
                                 SETRANGE(Applied);
                                 SETRANGE("Account Type","Account Type"::"Bank Account");
                                 SETRANGE("Account No.");
                                 SETRANGE(Type,Type::"Check Ledger Entry");
                                 IF FINDFIRST THEN;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 29  ;0   ;Container ;
                ContainerType=ContentArea }

    { 30  ;1   ;Group     ;
                Name=PaymentInformation;
                CaptionML=[ENU=Payment Information;
                           RUS=Сведения о платеже];
                GroupType=Group }

    { 39  ;2   ;Field     ;
                Name=PaymentStatus;
                CaptionML=[ENU=Payment Status;
                           RUS=Статус платежа];
                ToolTipML=[ENU=Specifies the application status of the payment, including information about the match confidence of payments that are applied automatically.;
                           RUS=Определяет состояние применения платежа, в том числе сведения о достоверности совпадения для платежей, применяемых автоматически.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Status;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=TRUE }

    { 31  ;2   ;Field     ;
                Name=TransactionDate;
                CaptionML=[ENU=Transaction Date;
                           RUS=Дата транзакции];
                ToolTipML=[ENU=Specifies the date when the payment was recorded in the bank account.;
                           RUS=Определяет дату, когда платеж был записан на банковском счете.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BankAccReconLine."Transaction Date";
                Editable=FALSE }

    { 32  ;2   ;Field     ;
                Name=TransactionAmount;
                CaptionML=[ENU=Transaction Amount;
                           RUS=Сумма транзакции];
                ToolTipML=[ENU=Specifies the payment amount that was recorded on the electronic bank account.;
                           RUS=Определяет сумму платежа, которая была записана на электронном банковском счете.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BankAccReconLine."Statement Amount";
                Editable=FALSE }

    { 33  ;2   ;Field     ;
                Name=BankAccReconLineDescription;
                CaptionML=[ENU=Transaction Text;
                           RUS=Текст транзакции];
                ToolTipML=[ENU=Specifies the text that was entered on the payment when the payment was made to the electronic bank account.;
                           RUS=Определяет текст, введенный для платежа при осуществлении платежа на электронный банковский счет.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BankAccReconLine."Transaction Text";
                Editable=FALSE }

    { 34  ;1   ;Group     ;
                CaptionML=[ENU=Open Entries;
                           RUS=Открытые операции];
                GroupType=Group }

    { 28  ;2   ;Group     ;
                CaptionML=[ENU=Open Entries;
                           RUS=Открытые операции];
                GroupType=Repeater }

    { 19  ;3   ;Field     ;
                Name=AppliedAmount;
                CaptionML=[ENU=Applied Amount;
                           RUS=Примененная сумма];
                ToolTipML=[ENU=Specifies the payment amount, excluding the value in the Applied Pmt. Discount field, that is applied to the open entry.;
                           RUS=Определяет примененную к открытой операции сумму платежа за вычетом значения в поле "Примененная скидка оплаты".];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr="Applied Amt. Incl. Discount";
                Style=Strong;
                StyleExpr=TRUE;
                OnValidate=BEGIN
                             UpdateAfterChangingApplication;
                           END;
                            }

    { 20  ;3   ;Field     ;
                Name=Applied;
                ToolTipML=[ENU=Specifies that the payment specified on the header of the Payment Application window is applied to the open entry.;
                           RUS=Определяет, что платеж, указанный в заголовке окна "Применение платежа", применяется к открытой операции.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Applied;
                OnValidate=BEGIN
                             UpdateAfterChangingApplication;
                           END;
                            }

    { 17  ;3   ;Field     ;
                Name=RemainingAmountAfterPosting;
                CaptionML=[ENU=Remaining Amount After Posting;
                           RUS=Сумма остатка после учета];
                ToolTipML=[ENU=Specifies the amount that remains to be paid for the open entry after you have posted the payment in the Payment Reconciliation Journal window.;
                           RUS=Определяет сумму, которую остается оплатить по открытой операции после учета платежа в окне "Журнал выверки платежей".];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GetRemainingAmountAfterPostingValue }

    { 14  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the customer or vendor ledger entry that the payment will be applied to when you post the payment reconciliation journal line.;
                           RUS=Определяет номер операции книги клиентов или поставщиков, к которой будет применен платеж при учете строки журнала выверки платежей.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to Entry No.";
                Editable=FALSE;
                OnDrillDown=BEGIN
                              AppliesToEntryNoDrillDown;
                            END;
                             }

    { 12  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the due date of the open entry.;
                           RUS=Определяет срок выполнения открытой операции.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Due Date";
                Editable=FALSE }

    { 24  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the type of document that is related to the open entry.;
                           RUS=Определяет тип документа, связанного с открытой операцией.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Type";
                Editable=FALSE }

    { 23  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the document that is related to the open entry.;
                           RUS=Определяет номер документа, связанного с открытой операцией.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document No.";
                Editable=FALSE }

    { 22  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the external document number on the document that is related to the open entry.;
                           RUS=Определяет номер внешнего документа, связанного с открытой операцией.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="External Document No.";
                Editable=FALSE }

    { 21  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the description of the open entry.;
                           RUS=Определяет описание открытой операции.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                Editable=FALSE }

    { 44  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the amount that remains to be paid for the open entry.;
                           RUS=Определяет сумму, которую остается оплатить по открытой операции.];
                SourceExpr="Remaining Amount";
                Visible=FALSE;
                Enabled=FALSE;
                Editable=FALSE }

    { 41  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the amount that remains to be paid for the open entry, minus any granted payment discount.;
                           RUS=Определяет сумму, которую остается оплатить по открытой операции, за вычетом предоставленной скидки по оплате.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Remaining Amt. Incl. Discount";
                Enabled=FALSE;
                Editable=FALSE }

    { 16  ;3   ;Field     ;
                CaptionML=[ENU=Pmt. Discount Date;
                           RUS=Дата скидки оплаты];
                ToolTipML=[ENU=Specifies the date on which the remaining amount on the open entry must be paid to grant a discount.;
                           RUS=Определяет дату, когда необходимо оплатить оставшуюся сумму по открытой операции, чтобы можно было получить скидку.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pmt. Disc. Due Date";
                OnValidate=BEGIN
                             UpdateAfterChangingApplication;
                           END;
                            }

    { 45  ;3   ;Field     ;
                SourceExpr="Pmt. Disc. Tolerance Date";
                Visible=FALSE }

    { 15  ;3   ;Field     ;
                CaptionML=[ENU=Remaining Pmt. Discount Possible;
                           RUS=Возможный остаток скидки оплаты];
                ToolTipML=[ENU=Specifies how much discount you can grant for the payment if you apply it to the open entry.;
                           RUS=Определяет размер скидки, который можно получить для платежа, если применить его к открытой операции.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Remaining Pmt. Disc. Possible";
                OnValidate=BEGIN
                             UpdateAfterChangingApplication;
                           END;
                            }

    { 40  ;3   ;Field     ;
                Name=AccountName;
                CaptionML=[ENU=Account Name;
                           RUS=Название счета];
                ToolTipML=[ENU=Specifies the name of the account that the payment is applied to in the Payment Reconciliation Journal window.;
                           RUS=Определяет наименование счета, к которому применяется платеж, в окне "Журнал выверки платежей".];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GetAccountName;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              AccountNameDrillDown;
                            END;
                             }

    { 27  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the type of account that the payment application will be posted to when you post the payment reconciliation journal.;
                           RUS=Определяет тип счета, на котором будет учтено применение платежа при учете журнала выверки платежей.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Account Type";
                Editable=LineEditable }

    { 26  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the account number the payment application will be posted to when you post the payment reconciliation journal.;
                           RUS=Определяет номер счета, на котором будет учтено применение платежа при учете журнала выверки платежей.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Account No.";
                Editable=LineEditable;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                           END;
                            }

    { 25  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the posting date of the open entry.;
                           RUS=Определяет дату учета открытой операции.];
                SourceExpr="Posting Date";
                Visible=FALSE;
                Editable=FALSE }

    { 13  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the quality of the match between the payment and the open entry for payment application purposes.;
                           RUS=Определяет степень совпадения между платежом и открытой операцией для целей применения платежа.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Match Confidence" }

    { 18  ;3   ;Field     ;
                CaptionML=[ENU=Entry Currency Code;
                           RUS=Код валюты операции];
                ToolTipML=[ENU=Specifies the currency code of the open entry.;
                           RUS=Определяет код валюты открытой операции.];
                SourceExpr="Currency Code";
                Visible=FALSE }

    { 5   ;1   ;Group     ;
                GroupType=Group }

    { 6   ;2   ;Field     ;
                Name=TotalAppliedAmount;
                CaptionML=[ENU=Applied Amount;
                           RUS=Примененная сумма];
                ToolTipML=[ENU=Specifies the sum of the values in the Applied Amount field on lines in the Payment Application window.;
                           RUS=Определяет сумму значений в поле "Примененная сумма" по всем строкам в окне "Применение платежа".];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=BankAccReconLine."Applied Amount";
                AutoFormatType=1;
                Editable=FALSE }

    { 4   ;2   ;Field     ;
                Name=TotalRemainingAmount;
                CaptionML=[ENU=Difference;
                           RUS=Разница];
                ToolTipML=[ENU=Specifies how much of the payment amount remains to be applied to open entries in the Payment Application window.;
                           RUS=Определяет часть суммы платежа, которую остается применить к открытым операциям в окне "Применение платежа".];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=0:5;
                SourceExpr=BankAccReconLine."Statement Amount" - BankAccReconLine."Applied Amount";
                AutoFormatType=1;
                Editable=FALSE;
                StyleExpr=RemAmtToApplyStyleExpr }

    { 3   ;0   ;Container ;
                ContainerType=FactBoxArea }

    { 2   ;1   ;Part      ;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=Bank Account No.=FIELD(Bank Account No.),
                            Statement No.=FIELD(Statement No.),
                            Statement Line No.=FIELD(Statement Line No.),
                            Statement Type=FIELD(Statement Type),
                            Account Type=FIELD(Account Type),
                            Account No.=FIELD(Account No.),
                            Applies-to Entry No.=FIELD(Applies-to Entry No.),
                            Match Confidence=FIELD(Match Confidence),
                            Quality=FIELD(Quality);
                PagePartID=Page1288;
                PartType=Page }

    { 1   ;1   ;Part      ;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=Bank Account No.=FIELD(Bank Account No.),
                            Statement No.=FIELD(Statement No.),
                            Statement Line No.=FIELD(Statement Line No.),
                            Statement Type=FIELD(Statement Type);
                PagePartID=Page1289;
                PartType=Page }

  }
  CODE
  {
    VAR
      BankAccReconLine@1000 : Record 274;
      RemAmtToApplyStyleExpr@1001 : Text;
      RemoveApplicationsQst@1002 : TextConst 'ENU=Are you sure you want to remove all applications?;RUS=Действительно удалить все приложения?';
      Status@1003 : Text;
      AppliedManuallyStatusTxt@1004 : TextConst 'ENU=Applied Manually;RUS=Применено вручную';
      NoApplicationStatusTxt@1005 : TextConst 'ENU=Not Applied;RUS=Не применено';
      AppliedAutomaticallyStatusTxt@1006 : TextConst 'ENU=Applied Automatically - Match Confidence: %1;RUS=Применена автоматически - достоверность совпадения: %1';
      AcceptedStatusTxt@1007 : TextConst 'ENU=Accepted;RUS=Принято';
      LineEditable@1008 : Boolean;
      ExcessiveAmountErr@1010 : TextConst '@@@=%1 is the amount that is not applied (there is filed on the page named Remaining Amount To Apply);ENU=The remaining amount to apply is %1.;RUS=Остаток суммы к применению равен %1.';

    PROCEDURE SetBankAccReconcLine@3(NewBankAccReconLine@1000 : Record 274);
    BEGIN
      BankAccReconLine := NewBankAccReconLine;
      TransferFromBankAccReconLine(NewBankAccReconLine);
    END;

    LOCAL PROCEDURE UpdateTotals@7();
    BEGIN
      BankAccReconLine.GET(
        BankAccReconLine."Statement Type",BankAccReconLine."Bank Account No.",
        BankAccReconLine."Statement No.",BankAccReconLine."Statement Line No.");

      BankAccReconLine.CALCFIELDS("Match Confidence");
      CASE BankAccReconLine."Match Confidence" OF
        BankAccReconLine."Match Confidence"::None:
          Status := NoApplicationStatusTxt;
        BankAccReconLine."Match Confidence"::Accepted:
          Status := AcceptedStatusTxt;
        BankAccReconLine."Match Confidence"::Manual:
          Status := AppliedManuallyStatusTxt;
        ELSE
          Status := STRSUBSTNO(AppliedAutomaticallyStatusTxt,BankAccReconLine."Match Confidence");
      END;

      UpdateRemAmtToApplyStyle;
    END;

    LOCAL PROCEDURE UpdateRemAmtToApplyStyle@6();
    BEGIN
      IF BankAccReconLine."Statement Amount" = BankAccReconLine."Applied Amount" THEN
        RemAmtToApplyStyleExpr := 'Favorable'
      ELSE
        RemAmtToApplyStyleExpr := 'Unfavorable';
    END;

    LOCAL PROCEDURE UpdateAfterChangingApplication@13();
    VAR
      MatchBankPayments@1000 : Codeunit 1255;
    BEGIN
      BankAccReconLine.SetManualApplication;
      UpdateToSystemMatchConfidence;
      UpdateTotals;
      MatchBankPayments.UpdateType(BankAccReconLine);
    END;

    LOCAL PROCEDURE UpdateToSystemMatchConfidence@1();
    VAR
      BankPmtApplRule@1001 : Record 1252;
    BEGIN
      IF ("Match Confidence" = "Match Confidence"::Accepted) OR ("Match Confidence" = "Match Confidence"::Manual) THEN
        "Match Confidence" := BankPmtApplRule.GetMatchConfidence(Quality);
    END;

    BEGIN
    END.
  }
}

