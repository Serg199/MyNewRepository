OBJECT Table 5201 Alternative Address
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00,NAVRU10.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Person No.,Name,Code;
    OnInsert=BEGIN
               IF "Address Type" <> "Address Type"::Birthplace THEN
                 TESTFIELD("Valid from Date");

               UpdateEmployesAddressFields("Person No.");
             END;

    OnModify=BEGIN
               IF "Address Type" <> "Address Type"::Birthplace THEN
                 TESTFIELD("Valid from Date");

               UpdateEmployesAddressFields("Person No.");
             END;

    CaptionML=[ENU=Alternative Address;
               RUS=Альтернативный адрес];
    LookupPageID=Page5204;
    DrillDownPageID=Page5204;
  }
  FIELDS
  {
    { 1   ;   ;Person No.          ;Code20        ;TableRelation=Person;
                                                   OnValidate=BEGIN
                                                                Person.GET("Person No.");
                                                                Name := Person.GetFullName;
                                                              END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Person No.;
                                                              RUS=Код физ. лица];
                                                   NotBlank=Yes }
    { 2   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              RUS=Код];
                                                   NotBlank=Yes }
    { 3   ;   ;Name                ;Text100       ;CaptionML=[ENU=Name;
                                                              RUS=Название] }
    { 4   ;   ;Name 2              ;Text50        ;CaptionML=[ENU=Name 2;
                                                              RUS=Название 2] }
    { 5   ;   ;Address             ;Text100       ;OnValidate=BEGIN
                                                                TESTFIELD("KLADR Address",FALSE);
                                                              END;

                                                   CaptionML=[ENU=Address;
                                                              RUS=Адрес] }
    { 6   ;   ;Address 2           ;Text100       ;OnValidate=BEGIN
                                                                TESTFIELD("KLADR Address",FALSE);
                                                              END;

                                                   CaptionML=[ENU=Address 2;
                                                              RUS=Адрес 2] }
    { 7   ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                IF "KLADR Address" THEN BEGIN
                                                                  IF Street = '' THEN
                                                                    "KLADR Code" := KLADRAddr.GetParentCode("KLADR Code",3);
                                                                  UpdateValues("KLADR Code");
                                                                  ValidateKLADRAddress;
                                                                END ELSE
                                                                  PostCode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=City;
                                                              RUS=Город] }
    { 8   ;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              RUS=Индекс] }
    { 9   ;   ;County              ;Text50        ;CaptionML=[ENU=County;
                                                              RUS=Район] }
    { 10  ;   ;Phone No.           ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No.;
                                                              RUS=Телефон] }
    { 11  ;   ;Fax No.             ;Text30        ;CaptionML=[ENU=Fax No.;
                                                              RUS=Факс] }
    { 12  ;   ;E-Mail              ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=Email;
                                                              RUS=Эл. почта] }
    { 13  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Human Resource Comment Line" WHERE (Table Name=CONST(Alternative Address),
                                                                                                          No.=FIELD(Person No.),
                                                                                                          Alternative Address Code=FIELD(Code)));
                                                   CaptionML=[ENU=Comment;
                                                              RUS=Комментарий];
                                                   Editable=No }
    { 14  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   OnValidate=VAR
                                                                CountryRegion@1210000 : Record 9;
                                                              BEGIN
                                                                IF CountryRegion.GET("Country/Region Code") THEN
                                                                  IF CountryRegion."Local Country/Region Code" = '' THEN BEGIN
                                                                    CountryRegion."Local Country/Region Code" := "Country/Region Code";
                                                                    CountryRegion.MODIFY;
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=Country/Region Code;
                                                              RUS=Код страны/региона] }
    { 17400;  ;City Category       ;Text10        ;TableRelation="KLADR Category".Code WHERE (Level=CONST(3));
                                                   CaptionML=[ENU=City Category;
                                                              RUS=Категория города] }
    { 17401;  ;Locality            ;Text50        ;OnValidate=BEGIN
                                                                IF "KLADR Address" THEN BEGIN
                                                                  IF Street = '' THEN
                                                                    "KLADR Code" := KLADRAddr.GetParentCode("KLADR Code",4);
                                                                  UpdateValues("KLADR Code");
                                                                END;

                                                                IF "KLADR Address" THEN
                                                                  ValidateKLADRAddress;
                                                              END;

                                                   CaptionML=[ENU=Locality;
                                                              RUS=Населенный пункт] }
    { 17402;  ;Locality Category   ;Text10        ;TableRelation="KLADR Category".Code WHERE (Level=CONST(4));
                                                   CaptionML=[ENU=Locality Category;
                                                              RUS=Категория населенного пункта] }
    { 17403;  ;Region Code         ;Code2         ;TableRelation="KLADR Region";
                                                   CaptionML=[ENU=Region Code;
                                                              RUS=Код региона];
                                                   CharAllowed=09 }
    { 17404;  ;Region Category     ;Text10        ;TableRelation="KLADR Category".Code WHERE (Level=CONST(1));
                                                   CaptionML=[ENU=Region Category;
                                                              RUS=Категория региона] }
    { 17405;  ;Street              ;Text50        ;OnValidate=BEGIN
                                                                IF "KLADR Address" THEN BEGIN
                                                                  IF Street = '' THEN
                                                                    "KLADR Code" := KLADRAddr.GetParentCode("KLADR Code",5);
                                                                  UpdateValues("KLADR Code");
                                                                END;

                                                                Address := GetStreetAddress;
                                                                IF "KLADR Address" THEN
                                                                  ValidateKLADRAddress;
                                                              END;

                                                   CaptionML=[ENU=Street;
                                                              RUS=Улица] }
    { 17406;  ;Street Category     ;Text10        ;TableRelation="KLADR Category".Code WHERE (Level=CONST(5));
                                                   CaptionML=[ENU=Street Category;
                                                              RUS=Категория улицы] }
    { 17407;  ;House               ;Text10        ;OnValidate=BEGIN
                                                                Address := GetStreetAddress;
                                                                IF "KLADR Address" THEN
                                                                  ValidateKLADRAddress;
                                                              END;

                                                   CaptionML=[ENU=House;
                                                              RUS=Дом] }
    { 17408;  ;Building            ;Text10        ;OnValidate=BEGIN
                                                                Address := GetStreetAddress;
                                                                IF "KLADR Address" THEN
                                                                  ValidateKLADRAddress;
                                                              END;

                                                   CaptionML=[ENU=Building;
                                                              RUS=Корпус] }
    { 17409;  ;Apartment           ;Text10        ;OnValidate=BEGIN
                                                                Address := GetStreetAddress;
                                                                IF "KLADR Address" THEN
                                                                  ValidateKLADRAddress;
                                                              END;

                                                   CaptionML=[ENU=Apartment;
                                                              RUS=Квартира] }
    { 17410;  ;Address Format      ;Option        ;CaptionML=[ENU=Address Format;
                                                              RUS=Формат адреса];
                                                   OptionCaptionML=[ENU=Post Code+City,,,,Post Code+Region+Area+City+Settlement,Post Code+Region+City,Post Code+Region;
                                                                    RUS=Индекс+Город,,,,Индекс+Область+Район+Город+Поселение,Индекс+Область+Город,Индекс+Область];
                                                   OptionString=Post Code+City,,,,Post Code+Region+Area+City+Settlement,Post Code+Region+City,Post Code+Region }
    { 17411;  ;KLADR Code          ;Code19        ;CaptionML=[ENU=KLADR Code;
                                                              RUS=Код по КЛАДР] }
    { 17412;  ;Address Type        ;Option        ;OnValidate=BEGIN
                                                                IF "Address Type" = "Address Type"::Birthplace THEN BEGIN
                                                                  AltAddr.SETRANGE("Person No.","Person No.");
                                                                  AltAddr.SETRANGE("Address Type",AltAddr."Address Type"::Birthplace);
                                                                  IF AltAddr.FINDFIRST THEN
                                                                    ERROR(Text14700);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Address Type;
                                                              RUS=Тип адреса];
                                                   OptionCaptionML=[ENU=Permanent,Registration,Birthplace,Other;
                                                                    RUS=Постоянный,Регистрация,Место рождения,Прочее];
                                                   OptionString=Permanent,Registration,Birthplace,Other }
    { 17413;  ;Tax Inspection Code ;Code4         ;CaptionML=[ENU=Tax Inspection Code;
                                                              RUS=Номер налоговой инспекции] }
    { 17415;  ;Area                ;Text50        ;OnValidate=BEGIN
                                                                IF "KLADR Address" THEN BEGIN
                                                                  IF Street = '' THEN
                                                                    "KLADR Code" := KLADRAddr.GetParentCode("KLADR Code",2);
                                                                  UpdateValues("KLADR Code");
                                                                END;

                                                                IF "KLADR Address" THEN
                                                                  ValidateKLADRAddress;
                                                              END;

                                                   CaptionML=[ENU=Area;
                                                              RUS=Область] }
    { 17416;  ;Area Category       ;Text10        ;TableRelation="KLADR Category".Code WHERE (Level=CONST(2));
                                                   CaptionML=[ENU=Area Category;
                                                              RUS=Категория области] }
    { 17417;  ;Post Code Zone      ;Text50        ;OnValidate=BEGIN
                                                                IF "KLADR Address" THEN BEGIN
                                                                  IF Street = '' THEN
                                                                    "KLADR Code" := KLADRAddr.GetParentCode("KLADR Code",6);
                                                                  UpdateValues("KLADR Code");
                                                                END;

                                                                IF "KLADR Address" THEN
                                                                  ValidateKLADRAddress;
                                                              END;

                                                   CaptionML=[ENU=Post Code Zone;
                                                              RUS=Зона почтового индекса] }
    { 17418;  ;Region              ;Text50        ;OnValidate=BEGIN
                                                                IF "KLADR Address" THEN BEGIN
                                                                  IF Street = '' THEN
                                                                    "KLADR Code" := KLADRAddr.GetParentCode("KLADR Code",1);
                                                                  UpdateValues("KLADR Code");
                                                                END;

                                                                IF "KLADR Address" THEN
                                                                  ValidateKLADRAddress;
                                                              END;

                                                   CaptionML=[ENU=Region;
                                                              RUS=Регион] }
    { 17419;  ;KLADR Address       ;Boolean       ;CaptionML=[ENU=KLADR Address;
                                                              RUS=Адрес по КЛАДР] }
    { 17422;  ;OKATO               ;Code20        ;CaptionML=[ENU=OKATO;
                                                              RUS=ОКАТО] }
    { 17423;  ;Valid from Date     ;Date          ;OnValidate=BEGIN
                                                                AltAddr.RESET;
                                                                AltAddr.SETCURRENTKEY("Person No.","Address Type","Valid from Date");
                                                                AltAddr.SETRANGE("Person No.","Person No.");
                                                                AltAddr.SETRANGE("Address Type","Address Type");
                                                                AltAddr.SETRANGE("Valid from Date","Valid from Date");
                                                                IF AltAddr.FINDFIRST THEN
                                                                  ERROR(Text14701,AltAddr."Address Type",AltAddr."Valid from Date");
                                                              END;

                                                   CaptionML=[ENU=Valid from Date;
                                                              RUS=Действует с даты];
                                                   NotBlank=Yes }
  }
  KEYS
  {
    {    ;Person No.,Code                         ;Clustered=Yes }
    {    ;Person No.,Address Type,Valid from Date  }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PostCode@1000 : Record 225;
      Person@1001 : Record 17350;
      Text_House@1210003 : TextConst 'ENU="h. ";RUS="ч. "';
      Text_Appt@1210002 : TextConst 'ENU=fl.;RUS=фл.';
      Text_Building@1210001 : TextConst 'ENU="build. ";RUS="здание. "';
      Text_Comma@1210000 : TextConst 'ENU=", ";RUS=", "';
      Category@1210004 : Record 14951;
      AltAddr@1210005 : Record 5201;
      KLADRAddr@1210008 : Record 14950;
      Text14700@1210009 : TextConst 'ENU=Birth place address already exists.;RUS=Адрес места рождения уже существует.';
      Text14701@1210010 : TextConst 'ENU=Address with type %1 valid from %2 already exists.;RUS=Адрес с типом %1 действующий с %2 уже есть.';

    PROCEDURE GetAddress@1210013() Result@1210000 : Text[1024];
    VAR
      i@1470000 : Integer;
    BEGIN
      Result := '';
      FOR i := 1 TO 5 DO
        AddLevel(Result,GetName(i),GetCategory(i),i,TRUE);
      IF (House <> '') AND (Building <> '') THEN
        AddStr(Result,STRSUBSTNO('%1%2%3%4%5',Text_House,House,Text_Comma,Text_Building,Building),TRUE)
      ELSE
        IF (House <> '') AND (Building = '') THEN
          AddStr(Result,STRSUBSTNO('%1%2',Text_House,House),FALSE)
        ELSE
          IF (House = '') AND (Building <> '') THEN
            AddStr(Result,STRSUBSTNO('%1%2',Text_Building,Building),FALSE);
      IF Apartment <> '' THEN
        AddStr(Result,STRSUBSTNO('%1 %2',Text_Appt,Apartment),FALSE);
    END;

    PROCEDURE GetStreetAddress@1210000() Result@1210000 : Text[1024];
    BEGIN
      Result := '';
      AddLevel(Result,GetName(5),GetCategory(5),5,TRUE);
      IF (House <> '') AND (Building <> '') THEN
        AddStr(Result,STRSUBSTNO('%1%2%3%4%5',Text_House,House,Text_Comma,Text_Building,Building),TRUE)
      ELSE
        IF (House <> '') AND (Building = '') THEN
          AddStr(Result,STRSUBSTNO('%1%2',Text_House,House),FALSE)
        ELSE
          IF (House = '') AND (Building <> '') THEN
            AddStr(Result,STRSUBSTNO('%1%2',Text_Building,Building),FALSE);
      IF Apartment <> '' THEN
        AddStr(Result,STRSUBSTNO('%1 %2',Text_Appt,Apartment),FALSE);
    END;

    LOCAL PROCEDURE AddStr@1210001(VAR Str@1210000 : Text[1024];Str1@1210001 : Text[1024];ForTax@1470001 : Boolean);
    BEGIN
      IF ForTax THEN
        Str := Str + ',' + Str1
      ELSE
        IF Str1 <> '' THEN
          IF Str <> '' THEN
            Str := Str + ', ' + Str1
          ELSE
            Str := Str1;
    END;

    LOCAL PROCEDURE AddLevel@1210002(VAR Str@1210000 : Text[1024];Name@1210001 : Text[40];CategoryCode@1210002 : Text[10];Level@1210003 : Integer;UseCatSetting@1470000 : Boolean);
    BEGIN
      IF Name = '' THEN
        EXIT;

      AddStr(Str,Category.GetTextWithCategory(CategoryCode,Level,Name,FALSE,UseCatSetting),FALSE);
    END;

    PROCEDURE GetAddressPart@1470000(AddressType@1470002 : Option;EmployeeNo@1470001 : Code[20];ShowCategory@1470000 : Boolean;FromLevel@1470003 : Integer;Full@1470004 : Boolean) : Text[250];
    BEGIN
      AltAddr.RESET;
      AltAddr.SETCURRENTKEY("Person No.","Address Type");
      AltAddr.SETRANGE("Person No.",EmployeeNo);
      AltAddr.SETRANGE("Address Type",AddressType);
      IF AltAddr.FINDFIRST THEN BEGIN
        IF ShowCategory THEN
          EXIT(
            Category.GetTextWithCategory(
              AltAddr.GetCategory(FromLevel),FromLevel,AltAddr.GetName(FromLevel),Full,FALSE));

        EXIT(AltAddr.GetName(FromLevel));
      END;
    END;

    PROCEDURE GetName@1470001(FromLevel@1470000 : Integer) : Text[40];
    BEGIN
      CASE FromLevel OF
        1:
          EXIT(Region);
        2:
          EXIT(Area);
        3:
          EXIT(City);
        4:
          EXIT(Locality);
        5:
          EXIT(Street);
        6:
          EXIT("Post Code Zone");
      END;
    END;

    PROCEDURE GetCategory@1470002(FromLevel@1470000 : Integer) : Text[10];
    BEGIN
      CASE FromLevel OF
        1:
          EXIT("Region Category");
        2:
          EXIT("Area Category");
        3:
          EXIT("City Category");
        4:
          EXIT("Locality Category");
        5:
          EXIT("Street Category");
      END;
    END;

    PROCEDURE ValidateKLADRAddress@1210016();
    VAR
      AddressTax@1210000 : Text[250];
    BEGIN
      AddStr(AddressTax,"Post Code",TRUE);
      AddStr(AddressTax,Region,TRUE);
      AddStr(AddressTax,Area,TRUE);
      AddStr(AddressTax,City,TRUE);
      AddStr(AddressTax,Locality,TRUE);
      AddStr(AddressTax,Street,TRUE);
      AddStr(AddressTax,House,TRUE);
      AddStr(AddressTax,Building,TRUE);
      AddStr(AddressTax,Apartment,TRUE);
      "Address 2" := UPPERCASE(AddressTax);
    END;

    PROCEDURE SetValues@1470005(ToLevel@1470000 : Integer;Name@1470001 : Text[50];CategoryCode@1470002 : Text[10]);
    BEGIN
      CASE ToLevel OF
        1:
          BEGIN
            Region := Name;
            "Region Category" := CategoryCode;
          END;
        2:
          BEGIN
            Area := Name;
            "Area Category" := CategoryCode;
          END;
        3:
          BEGIN
            City := Name;
            "City Category" := CategoryCode;
          END;
        4:
          BEGIN
            Locality := Name;
            "Locality Category" := CategoryCode;
          END;
        5:
          BEGIN
            Street := Name;
            "Street Category" := CategoryCode;
          END;
        6:
          "Post Code Zone" := Name;
      END;
    END;

    PROCEDURE UpdateValues@1470006(AddrCode@1470001 : Code[19]);
    VAR
      KLADRAddr@1210004 : Record 14950;
      CurrCode@1470000 : Code[19];
      CurrLevel@1470003 : Integer;
      i@1210000 : Integer;
    BEGIN
      CurrCode := AddrCode;
      FOR i := 1 TO 6 DO
        SetValues(i,'','');

      "Post Code" := '';
      "Tax Inspection Code" := '';
      WHILE KLADRAddr.GET(CurrCode) DO BEGIN
        IF "Post Code" = '' THEN
          "Post Code" := KLADRAddr.Index;
        IF "Tax Inspection Code" = '' THEN
          "Tax Inspection Code" := KLADRAddr.GNINMB;
        CurrLevel := KLADRAddr.GetLevel(KLADRAddr.Code);
        SetValues(CurrLevel,KLADRAddr.Name,KLADRAddr."Category Code");
        CurrCode := KLADRAddr.Parent;
      END;
    END;

    PROCEDURE UpdateEmployesAddressFields@1210017(PersonNo@1210000 : Code[20]);
    VAR
      Employee@1210001 : Record 5200;
      AltAddr@1210002 : Record 5201;
      RegistrationAddressExists@1210003 : Boolean;
    BEGIN
      RegistrationAddressExists := GetLastRegistrationAddr(AltAddr,PersonNo);
      IF "Address Type" = "Address Type"::Registration THEN BEGIN
        IF RegistrationAddressExists AND (AltAddr."Valid from Date" > "Valid from Date") THEN
          EXIT;
      END ELSE
        IF RegistrationAddressExists OR ("Address Type" <> "Address Type"::Permanent) THEN
          EXIT;

      Employee.SETRANGE("Person No.",PersonNo);
      IF Employee.FINDSET THEN
        REPEAT
          Employee.Address := COPYSTR(Address,1,50);
          Employee.City := City;
          Employee."Post Code" := "Post Code";
          Employee."Country/Region Code" := "Country/Region Code";

          Employee.MODIFY;
        UNTIL Employee.NEXT = 0;
    END;

    PROCEDURE GetLastRegistrationAddr@1210018(VAR AltAddr@1210001 : Record 5201;PersonNo@1210002 : Code[20]) : Boolean;
    BEGIN
      AltAddr.SETCURRENTKEY("Person No.","Address Type","Valid from Date");
      AltAddr.SETRANGE("Person No.",PersonNo);
      AltAddr.SETRANGE("Address Type","Address Type"::Registration);

      IF AltAddr.FINDLAST THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE GetFullAddress@1210019(IncludePostCode@1210000 : Boolean) FullAddress : Text[1024];
    BEGIN
      IF "Person No." = '' THEN
        EXIT('');

      IF IncludePostCode THEN
        FullAddress := "Post Code" + ', ';

      CASE "Address Format" OF
        "Address Format"::"Post Code+City":
          FullAddress :=
            FullAddress +
            "City Category" + '. ' + City + ', ';

        "Address Format"::"Post Code+Region+Area+City+Settlement":
          FullAddress :=
            FullAddress +
            "Region Category" + '. ' + Region + ', ' +
            "Area Category" + '. ' + Area + ', ' +
            "City Category" + '. ' + City + ', ' +
            "Locality Category" + '. ' + Locality + ', ';

        "Address Format"::"Post Code+Region+City":
          FullAddress :=
            FullAddress +
            "Region Category" + '. ' + Region + ', ' +
            "City Category" + '. ' + City + ', ';

        "Address Format"::"Post Code+Region":
          FullAddress :=
            FullAddress +
            "Region Category" + '. ' + Region + ', ';
      END;

      FullAddress := FullAddress + Address;
    END;

    BEGIN
    END.
  }
}

