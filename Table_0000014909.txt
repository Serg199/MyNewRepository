OBJECT Table 14909 Invent. Act Line
{
  OBJECT-PROPERTIES
  {
    Date=18.12.13;
    Time=12:00:00;
    Version List=NAVRU7.10;
  }
  PROPERTIES
  {
    OnModify=BEGIN
               TestStatus;
             END;

    OnDelete=BEGIN
               TestStatus;
             END;

    CaptionML=[ENU=Invent. Act Line;
               RUS=Строка акта сверки взаиморасчетов];
  }
  FIELDS
  {
    { 1   ;   ;Act No.             ;Code20        ;TableRelation="Invent. Act Header";
                                                   CaptionML=[ENU=Act No.;
                                                              RUS=Номер акта] }
    { 5   ;   ;Contractor Type     ;Option        ;CaptionML=[ENU=Contractor Type;
                                                              RUS=Тип контрагента];
                                                   OptionCaptionML=[ENU=Customer,Vendor;
                                                                    RUS=Клиент,Поставщик];
                                                   OptionString=Customer,Vendor;
                                                   Editable=No }
    { 6   ;   ;Contractor No.      ;Code20        ;TableRelation=IF (Contractor Type=CONST(Customer)) Customer
                                                                 ELSE IF (Contractor Type=CONST(Vendor)) Vendor;
                                                   CaptionML=[ENU=Contractor No.;
                                                              RUS=Код контрагента];
                                                   Editable=No }
    { 7   ;   ;Contractor Name     ;Text250       ;CaptionML=[ENU=Contractor Name;
                                                              RUS=Название контрагента];
                                                   Editable=No }
    { 8   ;   ;Posting Group       ;Code10        ;TableRelation=IF (Contractor Type=CONST(Customer)) "Customer Posting Group"
                                                                 ELSE IF (Contractor Type=CONST(Vendor)) "Vendor Posting Group";
                                                   CaptionML=[ENU=Posting Group;
                                                              RUS=Учетная группа];
                                                   Editable=No }
    { 9   ;   ;G/L Account No.     ;Code20        ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=G/L Account No.;
                                                              RUS=Номер счета ГК];
                                                   Editable=No }
    { 10  ;   ;Category            ;Option        ;CaptionML=[ENU=Category;
                                                              RUS=Категория];
                                                   OptionCaptionML=[ENU=Debts,Liabilities;
                                                                    RUS=Дебиторская,Кредиторская];
                                                   OptionString=Debts,Liabilities;
                                                   Editable=No }
    { 15  ;   ;Total Amount        ;Decimal       ;CaptionML=[ENU=Total Amount;
                                                              RUS=Общая сумма];
                                                   Editable=No }
    { 16  ;   ;Confirmed Amount    ;Decimal       ;CaptionML=[ENU=Confirmed Amount;
                                                              RUS=Подтвержденная сумма];
                                                   Editable=No }
    { 17  ;   ;Not Confirmed Amount;Decimal       ;OnValidate=BEGIN
                                                                UpdateTotal;
                                                              END;

                                                   CaptionML=[ENU=Not Confirmed Amount;
                                                              RUS=Неподтвержденная сумма] }
    { 18  ;   ;Overdue Amount      ;Decimal       ;OnValidate=BEGIN
                                                                UpdateTotal;
                                                              END;

                                                   CaptionML=[ENU=Overdue Amount;
                                                              RUS=Сумма просроченного платежа] }
  }
  KEYS
  {
    {    ;Act No.,Contractor Type,Contractor No.,Posting Group,Category;
                                                   Clustered=Yes }
    {    ;Act No.,Contractor Type,Contractor No.,G/L Account No.,Category }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      InventActHeader@1210000 : Record 14908;

    PROCEDURE TestStatus@1210000();
    BEGIN
      InventActHeader.GET("Act No.");
      InventActHeader.TESTFIELD(Status,InventActHeader.Status::Open);
    END;

    PROCEDURE UpdateTotal@1210001();
    BEGIN
      "Confirmed Amount" := "Total Amount" - "Not Confirmed Amount" - "Overdue Amount";
    END;

    PROCEDURE GetRecDescription@1470000() : Text[250];
    BEGIN
      EXIT(
        STRSUBSTNO('%1=%2, %3=%4, %5=%6, %7=%8, %9=%10',
          "Act No.","Contractor Type","Contractor No.","Posting Group",Category));
    END;

    PROCEDURE DrillDownAmount@1210002();
    VAR
      CustLedgEntry@1210004 : Record 21;
      VendLedgEntry@1210003 : Record 25;
      InventActHeader@1210002 : Record 14908;
      CustLedgEntries@1210001 : Page 25;
      VendLedgEntries@1210000 : Page 29;
    BEGIN
      InventActHeader.GET("Act No.");
      IF "Contractor Type" = "Contractor Type"::Customer THEN BEGIN
        CustLedgEntry.SETCURRENTKEY("Customer No.","Posting Date","Currency Code");
        CustLedgEntry.FILTERGROUP(2);
        CustLedgEntry.SETRANGE("Customer No.","Contractor No.");
        CustLedgEntry.SETRANGE("Posting Date",0D,InventActHeader."Inventory Date");
        CustLedgEntry.SETRANGE("Customer Posting Group","Posting Group");
        IF Category = Category::Debts THEN
          CustLedgEntry.SETRANGE(Positive,TRUE)
        ELSE
          CustLedgEntry.SETRANGE(Positive,FALSE);
        CustLedgEntry.FILTERGROUP(0);
        CustLedgEntry.SETRANGE("Date Filter",0D,InventActHeader."Inventory Date");
        CLEAR(CustLedgEntries);
        CustLedgEntries.SETTABLEVIEW(CustLedgEntry);
        CustLedgEntries.RUNMODAL;
      END ELSE BEGIN
        VendLedgEntry.SETCURRENTKEY("Vendor No.","Posting Date","Currency Code");
        VendLedgEntry.FILTERGROUP(2);
        VendLedgEntry.SETRANGE("Vendor No.","Contractor No.");
        VendLedgEntry.SETRANGE("Posting Date",0D,InventActHeader."Inventory Date");
        VendLedgEntry.SETRANGE("Vendor Posting Group","Posting Group");
        IF Category = Category::Debts THEN
          VendLedgEntry.SETRANGE(Positive,TRUE)
        ELSE
          VendLedgEntry.SETRANGE(Positive,FALSE);
        VendLedgEntry.FILTERGROUP(0);
        VendLedgEntry.SETRANGE("Date Filter",0D,InventActHeader."Inventory Date");
        CLEAR(VendLedgEntries);
        VendLedgEntries.SETTABLEVIEW(VendLedgEntry);
        VendLedgEntries.RUNMODAL;
      END;
    END;

    BEGIN
    END.
  }
}

