OBJECT Table 17366 Group Order Header
{
  OBJECT-PROPERTIES
  {
    Date=18.12.13;
    Time=12:00:00;
    Version List=NAVRU7.10;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               HumanResSetup.GET;

               IF "No." = '' THEN BEGIN
                 TestNoSeries;
                 NoSeriesMgt.InitSeries(GetNoSeriesCode,xRec."No. Series","Posting Date","No.","No. Series");
               END;

               InitRecord;
             END;

    OnDelete=BEGIN
               TESTFIELD(Status,Status::Open);

               GroupOrderLine.RESET;
               GroupOrderLine.SETRANGE("Document Type","Document Type");
               GroupOrderLine.SETRANGE("Document No.","No.");
               GroupOrderLine.DELETEALL;
             END;

    OnRename=BEGIN
               ERROR(Text003,TABLECAPTION);
             END;

    CaptionML=[ENU=Group Order Header;
               RUS=Заголовок группового приказа];
    LookupPageID=Page17376;
  }
  FIELDS
  {
    { 1   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              RUS=Тип документа];
                                                   OptionCaptionML=[ENU=Hire,Transfer,,Dismissal;
                                                                    RUS=Найм,Перевод,,Увольнение];
                                                   OptionString=Hire,Transfer,,Dismissal }
    { 2   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);

                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  HumanResSetup.GET;
                                                                  NoSeriesMgt.TestManual(GetNoSeriesCode);
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              RUS=Номер] }
    { 3   ;   ;Document Date       ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                              END;

                                                   CaptionML=[ENU=Document Date;
                                                              RUS=Дата документа] }
    { 4   ;   ;Posting Date        ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                              END;

                                                   CaptionML=[ENU=Posting Date;
                                                              RUS=Дата учета] }
    { 5   ;   ;HR Order No.        ;Code20        ;CaptionML=[ENU=HR Order No.;
                                                              RUS=Номер кадрового приказа] }
    { 6   ;   ;HR Order Date       ;Date          ;CaptionML=[ENU=HR Order Date;
                                                              RUS=Дата кадрового приказа] }
    { 7   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 10  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              RUS=Серия номеров] }
    { 15  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("HR Order Comment Line" WHERE (Table Name=CONST(Absence Order),
                                                                                                    No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              RUS=Комментарий];
                                                   Editable=No }
    { 16  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              RUS=Статус];
                                                   OptionCaptionML=[ENU=Open,Approved;
                                                                    RUS=Открыто,Утверждено];
                                                   OptionString=Open,Approved;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Document Type,No.                       ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      HumanResSetup@1210000 : Record 5218;
      GroupOrderLine@1210004 : Record 17367;
      NoSeriesMgt@1210001 : Codeunit 396;
      Text003@1210003 : TextConst 'ENU=You cannot rename a %1.;RUS=Нельзя переименовать %1.';

    PROCEDURE InitRecord@1210000();
    BEGIN
    END;

    PROCEDURE AssistEdit@1(OldGroupOrderHeader@1000 : Record 17366) : Boolean;
    VAR
      GroupOrderHeader@1001 : Record 17366;
    BEGIN
      WITH GroupOrderHeader DO BEGIN
        COPY(Rec);
        HumanResSetup.GET;
        TestNoSeries;
        IF NoSeriesMgt.SelectSeries(GetNoSeriesCode,OldGroupOrderHeader."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := GroupOrderHeader;
          EXIT(TRUE);
        END;
      END;
    END;

    LOCAL PROCEDURE TestNoSeries@6();
    BEGIN
      CASE "Document Type" OF
        "Document Type"::Hire:
          HumanResSetup.TESTFIELD("Group Hire Order Nos.");
        "Document Type"::Transfer:
          HumanResSetup.TESTFIELD("Group Transfer Order Nos.");
        "Document Type"::Dismissal:
          HumanResSetup.TESTFIELD("Group Dismissal Order Nos.");
      END;
    END;

    LOCAL PROCEDURE GetNoSeriesCode@9() : Code[10];
    BEGIN
      CASE "Document Type" OF
        "Document Type"::Hire:
          EXIT(HumanResSetup."Group Hire Order Nos.");
        "Document Type"::Transfer:
          EXIT(HumanResSetup."Group Transfer Order Nos.");
        "Document Type"::Dismissal:
          EXIT(HumanResSetup."Group Dismissal Order Nos.");
      END;
    END;

    PROCEDURE PrintOrder@1210001(NewGroupOrderHeader@1210001 : Record 17366);
    VAR
      GroupOrderHeader@1210000 : Record 17366;
      HROrderPrint@1210002 : Codeunit 17372;
    BEGIN
      IF GroupOrderHeader.GET(NewGroupOrderHeader."Document Type",NewGroupOrderHeader."No.") THEN
        CASE NewGroupOrderHeader."Document Type" OF
          NewGroupOrderHeader."Document Type"::Hire:
            HROrderPrint.PrintFormT1a(GroupOrderHeader);
          NewGroupOrderHeader."Document Type"::Transfer:
            HROrderPrint.PrintFormT5a(GroupOrderHeader);
          NewGroupOrderHeader."Document Type"::Dismissal:
            HROrderPrint.PrintFormT8a(GroupOrderHeader);
        END;
    END;

    BEGIN
    END.
  }
}

