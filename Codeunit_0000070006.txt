OBJECT Codeunit 70006 Test Run DLL
{
  OBJECT-PROPERTIES
  {
    Date=24.02.10;
    Time=18:11:51;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            //Counter.CHANGECOMPANY('HOLDING');//('IFRS Troika');
            //Counter.FINDFIRST;
            //Counter.CALCFIELDS(Count);
            //MESSAGE('%1 %2',Counter.Code,Counter.Count)
            //FORM.RUNMODAL(70001,Counter);

            //CREATE(ServiceControl);
            //IF UPPERCASE(ServiceControl.GetState('Task Scheduler','')) IN ['PAUSED'] THEN
            //  ServiceControl.StopService('Task Scheduler','');

            //IF UPPERCASE(ServiceControl.GetState('Task Scheduler','')) IN ['STOPPED'] THEN
            //  ServiceControl.StartServiceAsync('Task Scheduler','');

            //MESSAGE('%1',ServiceControl.GetState('Task Scheduler',''));


            NASStatus."Name Service NAS" := 'TEST';
            NASStatus."Name Server NAS" := '10.10.97.4';
            //NASStatus.GetStatus;
            //MESSAGE('%1',NASStatus."Status NAS");

            {
            NASStatus."Status NAS" := NASStatus."Status NAS"::Running;
            CODEUNIT.RUN(CODEUNIT::"Run Service",NASStatus);


            NASStatus.GetStatus;
            MESSAGE('%1',NASStatus."Status NAS");
            }

            NASStatus."Status NAS" := -1;
            IF NOT CODEUNIT.RUN(CODEUNIT::"Run Service",NASStatus) THEN
              MESSAGE('провалено');

            {
            NASStatus.GetStatus;
            MESSAGE('%1',NASStatus."Status NAS");
            }
            //MESSAGE('%1',NASStatus."Status NAS");

            //NASStatus.GET(COMPANYNAME,'LOAD_IFRS_TDFB');
            //CODEUNIT.RUN(CODEUNIT::"Run NAS Proc",NASStatus);
          END;

  }
  CODE
  {
    VAR
      Counter@1000000000 : Record 70001;
      ServiceControl@1000000001 : Automation "{9E4938B8-ACBC-4223-90D6-D09D35DAE1D0} 1.0:{5DA48304-DE2D-3445-B07F-D39C9FBC58A1}:Unknown Automation Server.Unknown Class";
      NASStatus@1000000002 : Record 50067;

    BEGIN
    END.
  }
}

