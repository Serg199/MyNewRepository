OBJECT Report 12477 Item Reclass. TORG-13
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Item Reclass. TORG-13;
               RUS=Реклассификация товаров TORG-13];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  TORG13Helper.InitReportTemplate;
                END;

    OnPostReport=BEGIN
                   IF FileName = '' THEN
                     TORG13Helper.ExportData
                   ELSE
                     TORG13Helper.ExportDataToClientFile(FileName);
                 END;

  }
  DATASET
  {
    { 8280;    ;DataItem;                    ;
               DataItemTable=Table83;
               OnPreDataItem=BEGIN
                               HeaderPrinted := FALSE;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF NOT HeaderPrinted THEN BEGIN
                                    TORG13Helper.FillHeader(
                                      "No.",FORMAT("Posting Date"),
                                      StdRepMgt.GetEmpDepartment(ReleasedBy),
                                      StdRepMgt.GetEmpDepartment(ReceivedBy));
                                    TORG13Helper.FillPageHeader;
                                    HeaderPrinted := TRUE;
                                  END;

                                  Item.GET("Item No.");
                                  GrossWeight := Quantity * Item."Gross Weight";
                                  NetWeight := Quantity * Item."Net Weight";
                                  TotalCost := Quantity * Item."Unit Cost";

                                  TransferLineValues;
                                END;

               OnPostDataItem=VAR
                                FooterDetails@1210000 : ARRAY [4] OF Text;
                              BEGIN
                                FooterDetails[1] := StdRepMgt.GetEmpDepartment(ReleasedBy);
                                FooterDetails[2] := StdRepMgt.GetEmpName(ReleasedBy);
                                FooterDetails[3] := StdRepMgt.GetEmpDepartment(ReceivedBy);
                                FooterDetails[4] := StdRepMgt.GetEmpName(ReceivedBy);

                                TORG13Helper.FillFooter(FooterDetails);
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             RUS=Параметры] }

      { 1210003;2;Field     ;
                  CaptionML=[ENU=Supplier (employee);
                             RUS=Поставщик (подотчетное лицо)];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=ReleasedBy;
                  TableRelation=Employee }

      { 1210002;2;Field     ;
                  CaptionML=[ENU=Receiver (employee);
                             RUS=Получатель (подотчетное лицо)];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=ReceivedBy;
                  TableRelation=Employee }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Item@1470007 : Record 27;
      StdRepMgt@1210001 : Codeunit 12401;
      TORG13Helper@1210003 : Codeunit 14935;
      GrossWeight@1470002 : Decimal;
      NetWeight@1470003 : Decimal;
      TotalCost@1470006 : Decimal;
      ReleasedBy@1210002 : Code[10];
      ReceivedBy@1210000 : Code[10];
      FileName@1210004 : Text;
      HeaderPrinted@1210005 : Boolean;

    PROCEDURE TransferLineValues@1210001();
    VAR
      AmountValues@1210000 : ARRAY [4] OF Decimal;
      BodyDetails@1210001 : ARRAY [6] OF Text;
    BEGIN
      WITH "Item Journal Line" DO BEGIN
        AmountValues[1] := TotalCost;
        AmountValues[2] := Quantity;
        AmountValues[3] := GrossWeight;
        AmountValues[4] := NetWeight;

        BodyDetails[1] := Description;
        BodyDetails[2] := "Item No.";
        BodyDetails[3] := StdRepMgt.GetUoMDesc("Unit of Measure Code");
        BodyDetails[4] := "Unit of Measure Code";
        BodyDetails[5] := FORMAT(Item."Units per Parcel");
        BodyDetails[6] := FORMAT(Item."Unit Cost");
      END;

      TORG13Helper.FillLine(BodyDetails,AmountValues);
    END;

    PROCEDURE InitializeRequest@1210005(NewFileName@1210000 : Text);
    BEGIN
      FileName := NewFileName;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

