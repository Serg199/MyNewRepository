OBJECT Page 20 General Ledger Entries
{
  OBJECT-PROPERTIES
  {
    Date=20.07.17;
    Time=15:04:30;
    Modified=Yes;
    Version List=NAVW110.00.00.14199,NAVRU10.00.00.14199,NOS-26;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=General Ledger Entries;
               RUS=Операции Главной книги];
    SourceTable=Table17;
    DataCaptionExpr=GetCaption;
    SourceTableView=SORTING(G/L Account No.,Posting Date)
                    ORDER(Descending);
    PageType=List;
    OnOpenPage=BEGIN
                 IF FINDFIRST THEN;
               END;

    OnAfterGetRecord=VAR
                       GLAccount@1101495000 : Record 15;
                     BEGIN
                       ShowDim; // NC NOS-26 SPA

                       // NC NCS-1880 > ORM
                       GetModifiedByApprovedBy;
                       // NC NCS-1880 < ORM

                       //NC S1880.1 > PCH
                       AccName := '';
                       IF GLAccount.GET("Source G/L Account No.") THEN
                         AccName := GLAccount.Name;
                       //NC S1880.1 < PCH
                     END;

    OnAfterGetCurrRecord=VAR
                           IncomingDocument@1000 : Record 130;
                         BEGIN
                           HasIncomingDocument := IncomingDocument.PostedDocExists("Document No.","Posting Date");
                           CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromRecord(Rec);
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 48      ;1   ;ActionGroup;
                      CaptionML=[ENU=Ent&ry;
                                 RUS=Оп&ерация];
                      Image=Entry }
      { 49      ;2   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 RUS=Измерения];
                      ToolTipML=[ENU=View or edits dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 RUS=Просмотр или изменение измерений, например области, проекта или отдела, которые можно назначать документам покупки и продажи для распределения себестоимости и анализа истории транзакций.];
                      ApplicationArea=#Suite;
                      Image=Dimensions;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 ShowDimensions;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 50      ;2   ;Action    ;
                      Name=GLDimensionOverview;
                      AccessByPermission=TableData 348=R;
                      CaptionML=[ENU=G/L Dimension Overview;
                                 RUS=Обзор измерений ГК];
                      ToolTipML=[ENU=View an overview of general ledger entries and dimensions.;
                                 RUS=Просмотр обзорных сведений об операциях и измерениях главной книги.];
                      ApplicationArea=#Suite;
                      Image=Dimensions;
                      OnAction=VAR
                                 GLEntriesDimensionOverview@1000 : Page 563;
                               BEGIN
                                 IF ISTEMPORARY THEN BEGIN
                                   GLEntriesDimensionOverview.SetTempGLEntry(Rec);
                                   GLEntriesDimensionOverview.RUN;
                                 END ELSE
                                   PAGE.RUN(PAGE::"G/L Entries Dimension Overview",Rec);
                               END;
                                }
      { 65      ;2   ;Action    ;
                      AccessByPermission=TableData 27=R;
                      CaptionML=[ENU=Value Entries;
                                 RUS=Операции стоимости];
                      ToolTipML=[ENU=View all amounts relating to an item.;
                                 RUS=Просмотр всех сумм, относящихся к товару.];
                      ApplicationArea=#Basic,#Suite;
                      Image=ValueLedger;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 ShowValueEntries;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 57      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 RUS=Ф&ункции];
                      Image=Action }
      { 63      ;2   ;Action    ;
                      Name=ReverseTransaction;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Reverse Transaction;
                                 RUS=Сторнировать транзакцию];
                      ToolTipML=[ENU=Reverse a posted general ledger entry.;
                                 RUS=Сторнирование учтенной операции главной книги.];
                      ApplicationArea=#Basic,#Suite;
                      Image=ReverseRegister;
                      Scope=Repeater;
                      OnAction=VAR
                                 ReversalEntry@1000 : Record 179;
                               BEGIN
                                 CLEAR(ReversalEntry);
                                 IF Reversed THEN
                                   ReversalEntry.AlreadyReversedEntry(TABLECAPTION,"Entry No.");
                                 IF "Journal Batch Name" = '' THEN
                                   ReversalEntry.TestFieldError;
                                 TESTFIELD("Transaction No.");
                                 ReversalEntry.ReverseTransaction("Transaction No.")
                               END;
                                }
      { 15      ;2   ;ActionGroup;
                      Name=IncomingDocument;
                      CaptionML=[ENU=Incoming Document;
                                 RUS=Входящий документ];
                      ActionContainerType=NewDocumentItems;
                      Image=Documents }
      { 13      ;3   ;Action    ;
                      Name=IncomingDocCard;
                      CaptionML=[ENU=View Incoming Document;
                                 RUS=Просмотр входящего документа];
                      ToolTipML=[ENU=View any incoming document records and file attachments that exist for the entry or document.;
                                 RUS=Просмотр всех входящих записей документов и вложенных файлов, имеющихся для операции или документа.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=HasIncomingDocument;
                      Image=ViewOrder;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IncomingDocument.ShowCard("Document No.","Posting Date");
                               END;
                                }
      { 9       ;3   ;Action    ;
                      Name=SelectIncomingDoc;
                      AccessByPermission=TableData 130=R;
                      CaptionML=[ENU=Select Incoming Document;
                                 RUS=Выбрать входящий документ];
                      ToolTipML=[ENU=Select an incoming document record and file attachment that you want to link to the entry or document.;
                                 RUS=Выбор входящей записи документа и вложенного файла, которые нужно связать с операцией или документом.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NOT HasIncomingDocument;
                      Image=SelectLineToApply;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IncomingDocument.SelectIncomingDocumentForPostedDocument("Document No.","Posting Date",RECORDID);
                               END;
                                }
      { 3       ;3   ;Action    ;
                      Name=IncomingDocAttachFile;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create Incoming Document from File;
                                 RUS=Создать входящий документ из файла];
                      ToolTipML=[ENU=Create an incoming document record by selecting a file to attach, and then link the incoming document record to the entry or document.;
                                 RUS=Создание входящей записи документа путем выбора файла вложения и связывание входящей записи документа с операцией или документом.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NOT HasIncomingDocument;
                      Image=Attach;
                      OnAction=VAR
                                 IncomingDocumentAttachment@1000 : Record 133;
                               BEGIN
                                 IncomingDocumentAttachment.NewAttachmentFromPostedDocument("Document No.","Posting Date");
                               END;
                                }
      { 1101495046;2 ;Action    ;
                      CaptionML=[ENU=Transfer to General journal;
                                 RUS=Перенести в фин. журнал];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=TransferToGeneralJournal;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 FALECheck@1101495000 : Record 5601;
                                 GLEntryRec@1101495003 : Record 17;
                                 GLEntryCheckTmp@1101495001 : TEMPORARY Record 17;
                                 TransferGLEntries@1101495002 : Report 50006;
                               BEGIN
                                 //NC > MP 15.05.07
                                 GLEntryRec.COPY(Rec);
                                 CurrPage.SETSELECTIONFILTER(GLEntryRec);

                                 IF NOT GLEntryRec.FINDFIRST THEN
                                   EXIT; // TD BMN 08.08.2012

                                 IF NOT GLEntryCheckTmp.ISTEMPORARY THEN
                                   ERROR('');

                                 CLEAR(GLEntryCheckTmp);
                                 IF GLEntryRec.FINDSET THEN
                                   REPEAT
                                     GLEntryCheckTmp.INIT;
                                     GLEntryCheckTmp.COPY(GLEntryRec);
                                     GLEntryCheckTmp.INSERT;
                                   UNTIL GLEntryRec.NEXT = 0;

                                 GLEntryCheckTmp.SETCURRENTKEY("Source Type",
                                   "Source No.",
                                   "Agreement No.",
                                   "G/L Account No.",
                                   "Global Dimension 1 Code",
                                   "Global Dimension 2 Code",
                                   "Business Unit Code",
                                   "Posting Date");
                                 //TDRANCS-1653 Commented>
                                 {
                                 GLEntryCheckTmp.SETRANGE("Original Amount",0);
                                 IF GLEntryCheckTmp.COUNT <> 0 THEN
                                   ERROR(Text50001);
                                 GLEntryCheckTmp.SETRANGE("Original Amount");
                                 }
                                 //TDRANCS-1653 Commented<
                                 GLEntryCheckTmp.SETRANGE("Source Type","Source Type"::"Fixed Asset");

                                 //NC NCS-1107 > DP
                                 {
                                 IF GLEntryCheckTmp.COUNT <> 0 THEN
                                   ERROR(Text50002);
                                 }

                                 GLEntryCheckTmp.SETFILTER("FA Entry No.",'<>%1',0);
                                 IF GLEntryCheckTmp.FINDSET THEN
                                   REPEAT
                                      IF FALECheck.GET(GLEntryCheckTmp."FA Entry No.") AND
                                        NOT ((FALECheck."FA Posting Category"=FALECheck."FA Posting Category"::" ") AND
                                        (FALECheck."FA Posting Type" = FALECheck."FA Posting Type"::"Acquisition Cost") AND
                                        NOT FALECheck."Reclassification Entry")
                                      THEN
                                        ERROR(Text50002);
                                   UNTIL GLEntryCheckTmp.NEXT=0;
                                 //NC NCS-1107 < DP

                                 //NC NCS-1107.1 > DP
                                 GLEntryCheckTmp.SETRANGE("FA Entry No.");
                                 //NC NCS-1107.1 > DP

                                 GLEntryCheckTmp.SETRANGE("Source Type");

                                 CLEAR(TransferGLEntries);
                                 TransferGLEntries.GetGLEntry(GLEntryCheckTmp);
                                 TransferGLEntries.RUNMODAL;
                                 CLEAR(TransferGLEntries);
                                 CLEAR(GLEntryCheckTmp);
                                 //NC < MP 15.05.07
                               END;
                                }
      { 1101495047;2 ;Action    ;
                      CaptionML=[ENU=Reverse selected entries;
                                 RUS=Сторнировать выбранные операции];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ReverseLines;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 GLEntryRec@1101495001 : Record 17;
                                 GLEntryCheckTmp@1101495000 : TEMPORARY Record 17;
                                 ReversalEntry@1101495002 : Record 179;
                               BEGIN
                                 //NC OAM42 > DP
                                 GLEntryRec.COPY(Rec);
                                 CurrPage.SETSELECTIONFILTER(GLEntryRec);

                                 IF NOT GLEntryCheckTmp.ISTEMPORARY THEN
                                   ERROR('');

                                 IF GLEntryRec.FINDSET THEN
                                   REPEAT
                                     IF GLEntryRec.Reversed THEN
                                       ReversalEntry.AlreadyReversedEntry(TABLECAPTION,GLEntryRec."Entry No.");
                                     IF GLEntryRec."Journal Batch Name" = '' THEN
                                       ReversalEntry.TestFieldError;
                                     GLEntryRec.TESTFIELD("Transaction No.");

                                     GLEntryCheckTmp.INIT;
                                     GLEntryCheckTmp.COPY(GLEntryRec);
                                     GLEntryCheckTmp.INSERT;
                                   UNTIL GLEntryRec.NEXT = 0;


                                 GLEntryCheckTmp.RESET;
                                 GLEntryCheckTmp.SETCURRENTKEY("Source Type",
                                   "Source No.",
                                   "Agreement No.",
                                   "G/L Account No.",
                                   "Global Dimension 1 Code",
                                   "Global Dimension 2 Code",
                                   "Business Unit Code",
                                   "Posting Date");

                                 IF GLEntryCheckTmp.COUNT <> 0 THEN BEGIN
                                   CLEAR(ReversalEntry);
                                   ReversalEntry.SetGLEntry(GLEntryCheckTmp);
                                 END;
                                 //NC OAM42 < DP
                               END;
                                }
      { 1101495048;2 ;Action    ;
                      CaptionML=[ENU=Transfer to Company;
                                 RUS=Перенести в Фирму];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=TransferFunds;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 GLEntryRec@1101495001 : Record 17;
                                 GLEntryCheckTmp@1101495000 : TEMPORARY Record 17;
                                 TransferGLEntries1@1101495002 : Report 50145;
                               BEGIN
                                 //NC M1 > DP
                                 GLEntryRec.COPY(Rec);
                                 CurrPage.SETSELECTIONFILTER(GLEntryRec);

                                 IF NOT GLEntryCheckTmp.ISTEMPORARY THEN
                                   ERROR('');

                                 GLEntryRec.SETCURRENTKEY("Document No.","Posting Date");
                                 IF GLEntryRec.FINDSET THEN
                                   REPEAT
                                     GLEntryCheckTmp.INIT;
                                     GLEntryCheckTmp.COPY(GLEntryRec);
                                     GLEntryCheckTmp.INSERT;
                                   UNTIL GLEntryRec.NEXT = 0;

                                 GLEntryCheckTmp.SETRANGE("Source Type");
                                 GLEntryCheckTmp.SETCURRENTKEY("Document No.","Posting Date");

                                 CLEAR(TransferGLEntries1);
                                 TransferGLEntries1.GetGLEntry(GLEntryCheckTmp);
                                 TransferGLEntries1.RUNMODAL;
                                 CLEAR(TransferGLEntries1);
                                 CLEAR(GLEntryCheckTmp);
                                 //NC M1 > DP
                               END;
                                }
      { 24      ;1   ;Action    ;
                      CaptionML=[ENU=&Navigate;
                                 RUS=&Навигатор];
                      ToolTipML=[ENU=Find all entries and documents that exist for the document number and posting date on the selected entry or document.;
                                 RUS=Поиск всех операций и документов, существующих для номера документа и даты учета в выбранной операции или в выбранном документе.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Navigate;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Navigate@1000 : Page 344;
                               BEGIN
                                 Navigate.SetDoc("Posting Date","Document No.");
                                 Navigate.RUN;
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=DocsWithoutIC;
                      CaptionML=[ENU=Posted Documents without Incoming Document;
                                 RUS=Учтенные документы без входящего документа];
                      ToolTipML=[ENU=View posted purchase and sales documents under the G/L account that do not have related incoming document records.;
                                 RUS=Просмотр учтенных документов покупки и продажи на счете главной книги, не имеющих соответствующих записей входящих документов.];
                      ApplicationArea=#Basic,#Suite;
                      Image=Documents;
                      OnAction=VAR
                                 PostedDocsWithNoIncBuf@1001 : Record 134;
                               BEGIN
                                 COPYFILTER("G/L Account No.",PostedDocsWithNoIncBuf."G/L Account No. Filter");
                                 PAGE.RUN(PAGE::"Posted Docs. With No Inc. Doc.",PostedDocsWithNoIncBuf);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the posting date for the entry.;
                           RUS=Определяет дату учета операции.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Date" }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the Document Type that the entry belongs to.;
                           RUS=Определяет тип документа, к которому принадлежит операция.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Type" }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the entry's Document No.;
                           RUS=Определяет номер документа операции.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document No." }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the account that the entry has been posted to.;
                           RUS=Определяет номер счета, на котором была учтена операция.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="G/L Account No." }

    { 40  ;2   ;Field     ;
                DrillDown=No;
                ToolTipML=[ENU=Specifies the name of the account that the entry has been posted to.;
                           RUS=Определяет название счета, на котором была учтена операция.];
                SourceExpr="G/L Account Name";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a description of the entry.;
                           RUS=Определяет описание операции.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description }

    { 26  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the Job No. corresponding the to G/L entry.;
                           RUS=Определяет код работы, соответствующий операции ГК.];
                SourceExpr="Job No.";
                Visible=FALSE }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the dimension value code that the entry is linked to.;
                           RUS=Определяет код значения измерения, с которым связана операция.];
                SourceExpr="Global Dimension 1 Code";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the dimension value code that the entry is linked to.;
                           RUS=Определяет код значения измерения, с которым связана операция.];
                SourceExpr="Global Dimension 2 Code";
                Visible=FALSE }

    { 1210000;2;Field     ;
                ToolTipML=[ENU=Specifies the agreement number associated with the general ledger entry.;
                           RUS=Определяет номер соглашения, связанный с операцией главной книги.];
                SourceExpr="Agreement No.";
                Visible=FALSE }

    { 51  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the intercompany partner that the transaction is with if the entry was posted from an intercompany transaction.;
                           RUS=Определяет код межфирменного партнера, с которым выполняется транзакция, если операция была учтена в результате межфирменной транзакции.];
                SourceExpr="IC Partner Code";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the Gen. Posting Type that applies to the entry.;
                           RUS=Определяет общий тип учета, применяемый к операции.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Gen. Posting Type" }

    { 32  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the general business posting group that applies to the entry.;
                           RUS=Определяет общую бизнес-группу, которая применяется к этой операции.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Gen. Bus. Posting Group" }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the general product posting group that applies to the entry.;
                           RUS=Определяет общую товарную группу, которая применяется к этой операции.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Gen. Prod. Posting Group" }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the quantity that was posted on the entry.;
                           RUS=Определяет количество, которое было учтено в операции.];
                SourceExpr=Quantity;
                Visible=False }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the Amount of the entry.;
                           RUS=Определяет сумму операции.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Amount }

    { 1210002;2;Field     ;
                SourceExpr="Debit Amount";
                Visible=FALSE }

    { 1210004;2;Field     ;
                SourceExpr="Credit Amount";
                Visible=FALSE }

    { 1101495029;2;Field  ;
                SourceExpr="Original Amount" }

    { 1101495025;2;Field  ;
                SourceExpr="Original Debit Amount" }

    { 1101495026;2;Field  ;
                SourceExpr="Original Credit Amount" }

    { 54  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the general ledger entry that is posted if you post in an additional reporting currency.;
                           RUS=Определяет операцию главной книги, которая учитывается при выполнении учета в дополнительной отчетной валюте.];
                SourceExpr="Additional-Currency Amount";
                Visible=FALSE }

    { 1101495027;2;Field  ;
                SourceExpr="Add.-Currency Debit Amount";
                Visible=FALSE }

    { 1101495028;2;Field  ;
                SourceExpr="Add.-Currency Credit Amount";
                Visible=FALSE }

    { 1101495030;2;Field  ;
                SourceExpr="External Document Type" }

    { 1101495031;2;Field  ;
                SourceExpr="Historical Date" }

    { 1101495032;2;Field  ;
                SourceExpr="External Document Date" }

    { 1101495033;2;Field  ;
                SourceExpr="Local G/L Account";
                Visible=FALSE }

    { 1101495034;2;Field  ;
                SourceExpr="Description 2" }

    { 36  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the VAT Amount that was posted as a result of the entry.;
                           RUS=Определяет сумму НДС, которая была учтена в результате операции.];
                SourceExpr="VAT Amount";
                Visible=FALSE }

    { 52  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of balancing account used in the entry: G/L Account, Bank Account, Vendor, Customer, or Fixed Asset.;
                           RUS=Определяет тип балансирующего счета, используемого в этой операции: "Счет ГК", "Банковский счет", "Поставщик", "Клиент" или "Основное средство".];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. Account Type" }

    { 18  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the G/L account or the bank account, that a balancing entry has been posted to.;
                           RUS=Определяет номер счета ГК или банковского счета, на котором была учтена балансирующая операция.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. Account No." }

    { 46  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of the user that is associated with the entry.;
                           RUS=Определяет код пользователя, связанного с операцией.];
                SourceExpr="User ID";
                Visible=FALSE }

    { 42  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the Source Code that is linked to the entry.;
                           RUS=Определяет код источника, связанного с операцией.];
                SourceExpr="Source Code";
                Visible=FALSE }

    { 44  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the reason code on the entry.;
                           RUS=Определяет код причины операции.];
                SourceExpr="Reason Code";
                Visible=FALSE }

    { 58  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the entry has been part of a reverse transaction (correction) made by the Reverse function.;
                           RUS=Определяет, является ли операция частью транзакции сторнирования (корректировки), созданной функцией сторнирования.];
                SourceExpr=Reversed;
                Visible=FALSE }

    { 60  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the correcting entry. If the field Specifies a number, the entry cannot be reversed again.;
                           RUS=Определяет номер корректирующей операции. Если поле определяет номер, операция не может быть сторнирована.];
                SourceExpr="Reversed by Entry No.";
                Visible=FALSE }

    { 62  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the original entry that was undone by the reverse transaction.;
                           RUS=Определяет номер исходной операции, которая была отменена транзакцией сторнирования.];
                SourceExpr="Reversed Entry No.";
                Visible=FALSE }

    { 34  ;2   ;Field     ;
                ToolTipML=[ENU=This field is automatically updated.;
                           RUS=Это поле обновляется автоматически.];
                SourceExpr="FA Entry Type";
                Visible=FALSE }

    { 38  ;2   ;Field     ;
                ToolTipML=[ENU=This field is automatically updated.;
                           RUS=Это поле обновляется автоматически.];
                SourceExpr="FA Entry No.";
                Visible=FALSE }

    { 1470000;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Source Type" }

    { 1470002;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Source No." }

    { 20  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the Entry No. that the program has given the entry.;
                           RUS=Определяет номер операции, присвоенный программой.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Entry No." }

    { 1101495000;2;Field  ;
                SourceExpr="Not Consolidate";
                Visible=FALSE }

    { 1101495001;2;Field  ;
                SourceExpr=Elimination;
                Visible=FALSE }

    { 1101495002;2;Field  ;
                SourceExpr="Not Translate" }

    { 1101495003;2;Field  ;
                SourceExpr=Reposted;
                Visible=FALSE }

    { 1101495004;2;Field  ;
                SourceExpr=Removed;
                Visible=FALSE }

    { 1101495005;2;Field  ;
                SourceExpr="Not Translate IFRS" }

    { 1101495006;2;Field  ;
                SourceExpr="Business Unit Code" }

    { 1101495007;2;Field  ;
                SourceExpr="Debit Quantity" }

    { 1101495008;2;Field  ;
                SourceExpr="Credit Quantity" }

    { 1101495009;2;Field  ;
                SourceExpr="Transaction Type" }

    { 1101495010;2;Field  ;
                SourceExpr="Buffer Entry No." }

    { 1101495011;2;Field  ;
                SourceExpr="Original Currency Code";
                OnAssistEdit=VAR
                               ChangeExchangeRate@1101495000 : Page 511;
                             BEGIN
                               //NC > MP 28.02.07
                               IF Amount <> 0 THEN BEGIN
                                 IF "Historical Date" = 0D THEN
                                   ChangeExchangeRate.SetParameter("Original Currency Code","Original Currency Factor","Posting Date")
                                 ELSE
                                   ChangeExchangeRate.SetParameter("Original Currency Code","Original Currency Factor","Historical Date");
                                 IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN;
                                 CLEAR(ChangeExchangeRate);
                               END;
                               //NC < MP 28.02.07
                             END;
                              }

    { 1101495012;2;Field  ;
                SourceExpr="Source Entry No." }

    { 1101495013;2;Field  ;
                SourceExpr="External System ID" }

    { 1101495014;2;Field  ;
                SourceExpr="Eliminated by Entry No." }

    { 1101495015;2;Field  ;
                SourceExpr="Eliminated Entry No." }

    { 1101495016;2;Field  ;
                SourceExpr="Transaction No." }

    { 1101495017;2;Field  ;
                SourceExpr="Financial Instrument No." }

    { 1101495018;2;Field  ;
                SourceExpr="External Document No." }

    { 1101495019;2;Field  ;
                SourceExpr="Document Date" }

    { 1101495020;2;Field  ;
                SourceExpr="Source G/L Account No." }

    { 1101495021;2;Field  ;
                SourceExpr="Posted Time" }

    { 1101495022;2;Field  ;
                SourceExpr="Cons. Time" }

    { 1101495023;2;Field  ;
                SourceExpr="Due Date" }

    { 1101495024;2;Field  ;
                SourceExpr="Source Posting Date" }

    { 1101495035;2;Field  ;
                CaptionML=RUS=Dim3;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3' }

    { 1101495036;2;Field  ;
                CaptionML=RUS=Dim4;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4' }

    { 1101495037;2;Field  ;
                CaptionML=RUS=Dim5;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5' }

    { 1101495038;2;Field  ;
                CaptionML=RUS=Dim6;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6' }

    { 1101495039;2;Field  ;
                CaptionML=RUS=Dim7;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7' }

    { 1101495040;2;Field  ;
                CaptionML=RUS=Dim8;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8' }

    { 1101495041;2;Field  ;
                CaptionML=RUS=Dim9;
                SourceExpr=ShortcutDimCode[9];
                CaptionClass='1,2,9' }

    { 1101495042;2;Field  ;
                CaptionML=RUS=Dim10;
                SourceExpr=ShortcutDimCode[10];
                CaptionClass='1,2,10' }

    { 1101495043;2;Field  ;
                CaptionML=RUS=Modified By;
                SourceExpr=ModifiedBy;
                Visible=FALSE }

    { 1101495044;2;Field  ;
                CaptionML=RUS=Approved By;
                SourceExpr=ApprovedBy;
                Visible=FALSE }

    { 1101495045;2;Field  ;
                CaptionML=[ENU=Account Name;
                           RUS=Счет Название];
                SourceExpr=AccName;
                Visible=FALSE;
                Editable=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1101495049;1;Part   ;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=Dimension Set ID=FIELD(Dimension Set ID);
                PagePartID=Page699;
                PartType=Page }

    { 7   ;1   ;Part      ;
                Name=IncomingDocAttachFactBox;
                ApplicationArea=#Basic,#Suite;
                PagePartID=Page193;
                PartType=Page;
                ShowFilter=No }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      GLAcc@1000 : Record 15;
      HasIncomingDocument@1001 : Boolean;
      ShortcutDimCode@1101495000 : ARRAY [10] OF Code[20];
      ModifiedBy@1101495002 : Code[20];
      ApprovedBy@1101495001 : Code[20];
      GLSetup@1101495003 : Record 98;
      DimSetEntry@1101495004 : Record 480;
      AccName@1101495005 : Text[50];
      Text50001@1101495007 : TextConst 'ENU="You can not copy entries where Original Amount = 0.";RUS=Невозможно переносить операции c нулевой оригинальной суммой.';
      Text50002@1101495006 : TextConst 'ENU=You can''t transfer FA Operations;RUS=Невозможно переносить операции c ОС.';

    LOCAL PROCEDURE GetCaption@2() : Text[250];
    BEGIN
      IF GLAcc."No." <> "G/L Account No." THEN
        IF NOT GLAcc.GET("G/L Account No.") THEN
          IF GETFILTER("G/L Account No.") <> '' THEN
            IF GLAcc.GET(GETRANGEMIN("G/L Account No.")) THEN;
      EXIT(STRSUBSTNO('%1 %2',GLAcc."No.",GLAcc.Name))
    END;

    LOCAL PROCEDURE ShowDim@1101495011();
    BEGIN
      //NC NOS-26 > SPA
      GLSetup.GET;
      IF DimSetEntry.GET("Dimension Set ID", GLSetup."Shortcut Dimension 3 Code") THEN
        ShortcutDimCode[3] := DimSetEntry."Dimension Value Code"
      ELSE
        ShortcutDimCode[3] := '';

      IF DimSetEntry.GET("Dimension Set ID", GLSetup."Shortcut Dimension 4 Code") THEN
        ShortcutDimCode[4] := DimSetEntry."Dimension Value Code"
      ELSE
        ShortcutDimCode[4] := '';

      IF DimSetEntry.GET("Dimension Set ID", GLSetup."Shortcut Dimension 5 Code") THEN
        ShortcutDimCode[5] := DimSetEntry."Dimension Value Code"
      ELSE
        ShortcutDimCode[5] := '';

      IF DimSetEntry.GET("Dimension Set ID", GLSetup."Shortcut Dimension 6 Code") THEN
        ShortcutDimCode[6] := DimSetEntry."Dimension Value Code"
      ELSE
        ShortcutDimCode[6] := '';

      IF DimSetEntry.GET("Dimension Set ID", GLSetup."Shortcut Dimension 7 Code") THEN
        ShortcutDimCode[7] := DimSetEntry."Dimension Value Code"
      ELSE
        ShortcutDimCode[7] := '';

      IF DimSetEntry.GET("Dimension Set ID", GLSetup."Shortcut Dimension 8 Code") THEN
        ShortcutDimCode[8] := DimSetEntry."Dimension Value Code"
      ELSE
        ShortcutDimCode[8] := '';

      IF DimSetEntry.GET("Dimension Set ID", GLSetup."Shortcut Dimension 9 Code") THEN
        ShortcutDimCode[9] := DimSetEntry."Dimension Value Code"
      ELSE
        ShortcutDimCode[9] := '';

      IF DimSetEntry.GET("Dimension Set ID", GLSetup."Shortcut Dimension 10 Code") THEN
        ShortcutDimCode[10] := DimSetEntry."Dimension Value Code"
      ELSE
        ShortcutDimCode[10] := '';
      //NC NOS-26 < SPA
    END;

    PROCEDURE GetModifiedByApprovedBy@1000000003();
    VAR
      GLEntryExtension@1000000000 : Record 50180;
    BEGIN
      // NC NCS-1880 > ORM
      IF GLEntryExtension.GET("Entry No.") THEN;
      ModifiedBy := GLEntryExtension."Modified By";
      ApprovedBy := GLEntryExtension."Approved By";
      // NC NCS-1880 < ORM
    END;

    BEGIN
    {
      NC MP 13.02.07 Выведены на форму дополнительные поля
      NC MP 28.02.07 Новое поле "Историческая дата 1С", AssistEdit в поле "Оригинальный Код Валюты"
      NC MP 28.02.07 Новые поля - названия значений глобальных измерений
      NC MP 01.03.07 Изменено свойство HorzAlign в поле Но.
      NC MP Новая функция по переносу строк из главной книги в фин. журнал.
      NC PIF041 DP Выведены поля-ярлыки измерений, выведено поле Описание 2
      NC MDM06 GM вынесено поле время учета
      NC MDM07 GM вынесено поле время консолидации
      NC OAM42 DP Аннулирование выделенных
      NC NCS-622 DP Выведено поле "Due Date"
      NC NCS-1107 DP Перенос операций приобретения ОС из главной книги в фин. журнал
      NC NCS-1107.1 DP Ошибочно не снимался фильтр
      NC NCS-1880 ORM Добавлены вычисляемые столбцы для отображения Modified By и Approved By из G/L Entry Extension
      NC S1880.1 PCH описание счета
      NC BLD001 Создан билд, содержащий модификации MDM06,MDM07,MIFI02,OAM42,NCS-622,NCS-1107.1
      TDRANCS-1653 Modified menu item Transfer to Gen. Journal - OnPush()
      NC NCS-1999 DP Added field "Source Posting Date"
      NCS-2356 DP Added field "Shortcut Dimension 9 Code","Shortcut Dimension 10 Code"
                  Changed dimension of array ShortcutDimCode 8->10
    }
    END.
  }
}

