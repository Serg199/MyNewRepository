OBJECT Page 14925 VAT Settlement Worksheet
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=VAT Settlement Worksheet;
               RUS=Журнал НДС];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table14927;
    PageType=Worksheet;
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             VendorVATInvoiceRcvdDateVisibl := TRUE;
             VendorVATInvoiceDateVisible := TRUE;
             VendorVATInvoiceNoVisible := TRUE;
             ChangedVendorVATInvoiceVisible := TRUE;
           END;

    OnOpenPage=BEGIN
                 Type := Type::Purchase;
                 PeriodType := PeriodType::Month;
                 AmountType := AmountType::"Balance at Date";
                 TypeValidation;
               END;

    OnAfterGetRecord=BEGIN
                       CalcVATAmount;
                     END;

    OnQueryClosePage=BEGIN
                       ChangeVendVATInvoices(TRUE);
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1470064 ;1   ;ActionGroup;
                      CaptionML=[ENU=Ent&ry;
                                 RUS=Оп&ерация];
                      Image=Entry }
      { 1470067 ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 RUS=Измерения];
                      ApplicationArea=#Basic,#Suite;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1210006 ;2   ;Action    ;
                      CaptionML=[ENU=Ledger Entry;
                                 RUS=Книга операций];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=No;
                      Image=VendorLedger;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowCVEntry;
                               END;
                                }
      { 1210005 ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=&VAT Entries;
                                 RUS=Операции &НДС];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 315;
                      RunPageView=SORTING(Transaction No.,CV Ledg. Entry No.);
                      RunPageLink=CV Ledg. Entry No.=FIELD(Entry No.);
                      Image=VATLedger }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1470022 ;1   ;Action    ;
                      CaptionML=[ENU=Previous Period;
                                 RUS=Предыдущий период];
                      ToolTipML=[ENU=Previous Period;
                                 RUS=Предыдущий период];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('<=');
                               END;
                                }
      { 1470021 ;1   ;Action    ;
                      CaptionML=[ENU=Next Period;
                                 RUS=Следующий период];
                      ToolTipML=[ENU=Next Period;
                                 RUS=Следующий период];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('>=');
                               END;
                                }
      { 1470027 ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 RUS=Ф&ункции];
                      Image=Action }
      { 1470028 ;2   ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=[ENU=Suggest &Documents;
                                 RUS=Предложить документ&ы];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=MakeOrder;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 VATSettlementMgt.Generate(Rec,Type);
                                 UpdateForm;
                               END;
                                }
      { 1210002 ;2   ;Separator  }
      { 1210004 ;2   ;Action    ;
                      CaptionML=[ENU=Set &Group VAT Allocation;
                                 RUS=Настроить распределение НДС по &группам];
                      ApplicationArea=#Basic,#Suite;
                      Image=Track;
                      OnAction=BEGIN
                                 SetGroupVATAlloc;
                               END;
                                }
      { 1210009 ;2   ;Action    ;
                      CaptionML=[ENU=Change Vendor VAT &Invoices;
                                 RUS=Изменить с&чета-фактуры поставщика];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=DocumentEdit;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ChangeVendVATInvoices(FALSE);
                               END;
                                }
      { 1210010 ;2   ;Separator  }
      { 1210003 ;2   ;Action    ;
                      ShortCutKey=F9;
                      CaptionML=[ENU=&Copy Lines to Journal;
                                 RUS=&Копировать строки в журнал];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=SelectLineToApply;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 VATSettlementJnl@1210001 : Page 12437;
                               BEGIN
                                 CLEAR(VATSettlementJnl);
                                 CopySelectionToJnl;
                                 VATSettlementJnl.RUN;
                               END;
                                }
      { 1470042 ;1   ;Action    ;
                      CaptionML=[ENU=&Navigate;
                                 RUS=&Навигатор];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Navigate;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Navigate@1470000 : Page 344;
                               BEGIN
                                 Navigate.SetDoc("Document Date","Document No.");
                                 Navigate.RUN;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1470024;1;Group     ;
                CaptionML=[ENU=General;
                           RUS=Общее] }

    { 1470025;2;Field     ;
                CaptionML=[ENU=Type;
                           RUS=Тип];
                OptionCaptionML=[ENU=,Purchase,Sale,Fixed Asset,Future Expense;
                                 RUS=,Покупка,Продажа,Основные средства,Расходы будущих периодов];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Type;
                OnValidate=BEGIN
                             TypeValidation;
                             TypeOnAfterValidate;
                           END;
                            }

    { 1903121901;1;Group  ;
                CaptionML=[ENU=Options;
                           RUS=Параметры] }

    { 1470056;2;Field     ;
                CaptionML=[ENU=View by;
                           RUS=Просмотр по];
                ToolTipML=[ENU=Day;
                           RUS=День];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                 RUS=День,Неделя,Месяц,Квартал,Год,Учетный период];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             FindPeriod('');
                           END;
                            }

    { 1470058;2;Field     ;
                CaptionML=[ENU=View as;
                           RUS=Просмотр как];
                ToolTipML=[ENU=Net Change;
                           RUS=Оборот];
                OptionCaptionML=[ENU=Net Change,Balance at Date;
                                 RUS=Оборот,Сальдо на дату];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AmountType;
                OnValidate=BEGIN
                             FindPeriod('');
                           END;
                            }

    { 1470000;1;Group     ;
                GroupType=Repeater }

    { 1470063;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Date" }

    { 1210000;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Allocated VAT Amount";
                OnDrillDown=BEGIN
                              DrillDownVATAllocation;
                              CALCFIELDS("VAT Amount To Allocate");
                              "Allocated VAT Amount" := "VAT Amount To Allocate";
                              CurrPage.UPDATE(TRUE);
                            END;
                             }

    { 1470047;2;Field     ;
                CaptionML=[ENU=Remaining VAT Amount;
                           RUS=Сумма остатка НДС];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unrealized VAT Amount" - "Realized VAT Amount";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=TRUE;
                OnDrillDown=BEGIN
                              RemVATDrillDown("Entry No.");
                            END;
                             }

    { 1470032;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Realized VAT Amount";
                Editable=FALSE }

    { 1470045;2;Field     ;
                SourceExpr="Realized VAT Base";
                Visible=FALSE;
                Editable=FALSE }

    { 1470034;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unrealized VAT Amount";
                Editable=FALSE }

    { 1470043;2;Field     ;
                SourceExpr="Unrealized VAT Base";
                Visible=FALSE;
                Editable=FALSE }

    { 1470005;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Date";
                Editable=FALSE }

    { 1470007;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Type";
                Editable=FALSE }

    { 1470009;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document No.";
                Editable=FALSE }

    { 1470053;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="External Document No.";
                Editable=FALSE }

    { 1470003;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="CV No.";
                Editable=FALSE }

    { 1210011;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="CV Name" }

    { 1470011;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                Editable=FALSE }

    { 1210007;2;Field     ;
                ApplicationArea=#All;
                SourceExpr="Changed Vendor VAT Invoice";
                Visible=ChangedVendorVATInvoiceVisible }

    { 1470036;2;Field     ;
                ApplicationArea=#All;
                SourceExpr="Vendor VAT Invoice No.";
                Visible=VendorVATInvoiceNoVisible }

    { 1470049;2;Field     ;
                ApplicationArea=#All;
                SourceExpr="Vendor VAT Invoice Date";
                Visible=VendorVATInvoiceDateVisible }

    { 1470051;2;Field     ;
                ApplicationArea=#All;
                SourceExpr="Vendor VAT Invoice Rcvd Date";
                Visible=VendorVATInvoiceRcvdDateVisibl }

    { 1470015;2;Field     ;
                CaptionML=[ENU=Amount Incl. VAT;
                           RUS=Сумма с учетом НДС];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Amount (LCY)";
                Editable=FALSE }

    { 1470017;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Remaining Amt. (LCY)";
                Editable=FALSE }

    { 1470019;2;Field     ;
                SourceExpr="Transaction No.";
                Visible=FALSE }

    { 1470001;2;Field     ;
                SourceExpr="Entry No.";
                Visible=FALSE;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      UserSetup@1210001 : Record 91;
      VATSettlementMgt@1210000 : Codeunit 12411;
      Type@1470000 : ',Purchase,Sale,Fixed Asset,Future Expense';
      xType@1210004 : ',Purchase,Sale,Fixed Asset,Future Expense';
      PeriodType@1470005 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      AmountType@1470004 : 'Net Change,Balance at Date';
      Text001@1210002 : TextConst 'ENU=There is nothing to post.;RUS=Здесь нечего учитывать.';
      Text002@1210003 : TextConst 'ENU=There is nothing to allocate.;RUS=Нечего распределять.';
      Text003@1210005 : TextConst 'ENU="There are lines in which %1 is Yes. Do you want to apply these changes? ";RUS="Существуют строки, в которых %1 = ""Да"". Применить изменения? "';
      ChangedVendorVATInvoiceVisible@19052597 : Boolean INDATASET;
      VendorVATInvoiceNoVisible@19062172 : Boolean INDATASET;
      VendorVATInvoiceDateVisible@19004383 : Boolean INDATASET;
      VendorVATInvoiceRcvdDateVisibl@19017560 : Boolean INDATASET;

    LOCAL PROCEDURE FindPeriod@1(SearchText@1210000 : Code[10]);
    VAR
      Calendar@1210001 : Record 2000000007;
      PeriodFormManagement@1210003 : Codeunit 359;
    BEGIN
      IF GETFILTER("Date Filter") <> '' THEN BEGIN
        Calendar.SETFILTER("Period Start",GETFILTER("Date Filter"));
        IF NOT PeriodFormManagement.FindDate('+',Calendar,PeriodType) THEN
          PeriodFormManagement.FindDate('+',Calendar,PeriodType::Day);
        Calendar.SETRANGE("Period Start");
      END;
      PeriodFormManagement.FindDate(SearchText,Calendar,PeriodType);
      IF Calendar."Period Start" = Calendar."Period End" THEN BEGIN
        IF AmountType = AmountType::"Net Change" THEN
          SETRANGE("Date Filter",Calendar."Period Start")
        ELSE
          SETRANGE("Date Filter",0D,Calendar."Period Start");
      END ELSE
        IF AmountType = AmountType::"Net Change" THEN
          SETRANGE("Date Filter",Calendar."Period Start",Calendar."Period End")
        ELSE
          SETRANGE("Date Filter",0D,Calendar."Period End");
    END;

    LOCAL PROCEDURE FindUserPeriod@3(SearchText@1210000 : Code[10]);
    VAR
      Calendar@1210001 : Record 2000000007;
      PeriodFormManagement@1210003 : Codeunit 359;
    BEGIN
      IF UserSetup.GET(USERID) THEN BEGIN
        SETRANGE("Date Filter",UserSetup."Allow Posting From",UserSetup."Allow Posting To");
        IF GETRANGEMIN("Date Filter") = GETRANGEMAX("Date Filter") THEN
          SETRANGE("Date Filter",GETRANGEMIN("Date Filter"));
      END ELSE BEGIN
        IF GETFILTER("Date Filter") <> '' THEN BEGIN
          Calendar.SETFILTER("Period Start",GETFILTER("Date Filter"));
          IF NOT PeriodFormManagement.FindDate('+',Calendar,PeriodType) THEN
            PeriodFormManagement.FindDate('+',Calendar,PeriodType::Day);
          Calendar.SETRANGE("Period Start");
        END;
        PeriodFormManagement.FindDate(SearchText,Calendar,PeriodType);
        SETRANGE("Date Filter",Calendar."Period Start",Calendar."Period End");
        IF GETRANGEMIN("Date Filter") = GETRANGEMAX("Date Filter") THEN
          SETRANGE("Date Filter",GETRANGEMIN("Date Filter"));
      END;
    END;

    PROCEDURE RemVATDrillDown@1470003(CVEntryNo@1470002 : Integer);
    VAR
      VATEntry@1210000 : Record 254;
      VATEntries@1470000 : Page 315;
    BEGIN
      VATEntry.SETRANGE("CV Ledg. Entry No.",CVEntryNo);
      VATEntry.SETRANGE("Unrealized VAT Entry No.",0);
      VATEntry.SETFILTER("Remaining Unrealized Amount",'<>%1',0);
      VATEntry.SETFILTER("VAT Settlement Type",GETFILTER("Type Filter"));
      VATEntry.SETRANGE("Manual VAT Settlement",TRUE);
      VATEntry.SETFILTER("VAT Bus. Posting Group",GETFILTER("VAT Bus. Posting Group Filter"));
      VATEntry.SETFILTER("VAT Prod. Posting Group",GETFILTER("VAT Prod. Posting Group Filter"));
      VATEntries.SETTABLEVIEW(VATEntry);
      VATEntries.RUNMODAL;
    END;

    PROCEDURE CopySelectionToJnl@1210000();
    VAR
      EntryToPost@1210001 : TEMPORARY Record 14927;
      VATEntry@1210003 : Record 254;
      Filters@1210004 : Record 14927;
      CurrRec@1210005 : Record 14927;
    BEGIN
      CurrRec := Rec;
      Filters.COPYFILTERS(Rec);
      CurrPage.SETSELECTIONFILTER(Rec);
      IF FINDSET THEN
        REPEAT
          CalcVATAmount;
          IF "Allocated VAT Amount" <> 0 THEN BEGIN
            EntryToPost := Rec;
            EntryToPost.INSERT;
          END;
        UNTIL NEXT = 0;
      Rec := CurrRec;
      RESET;
      COPYFILTERS(Filters);

      EntryToPost.RESET;
      EntryToPost.SETFILTER("Type Filter",GETFILTER("Type Filter"));
      EntryToPost.SETFILTER("Date Filter",GETFILTER("Date Filter"));
      VATEntry.SETFILTER("VAT Bus. Posting Group",GETFILTER("VAT Bus. Posting Group Filter"));
      VATEntry.SETFILTER("VAT Prod. Posting Group",GETFILTER("VAT Prod. Posting Group Filter"));
      IF EntryToPost.ISEMPTY THEN
        ERROR(Text001);
      VATSettlementMgt.CopyToJnl(EntryToPost,VATEntry);
      EntryToPost.RESET;
      EntryToPost.DELETEALL;
    END;

    PROCEDURE DrillDownVATAllocation@1210001();
    VAR
      VATAllocationLine@1210001 : Record 14925;
      VATAllocation@1210000 : Page 14926;
    BEGIN
      CLEAR(VATAllocation);
      VATAllocationLine.RESET;
      VATAllocationLine.SETCURRENTKEY("CV Ledger Entry No.");
      VATAllocationLine.SETRANGE("CV Ledger Entry No.","Entry No.");
      VATAllocationLine.SETFILTER("VAT Settlement Type",GETFILTER("Type Filter"));
      VATAllocationLine.SETFILTER("VAT Bus. Posting Group",GETFILTER("VAT Bus. Posting Group Filter"));
      VATAllocationLine.SETFILTER("VAT Prod. Posting Group",GETFILTER("VAT Prod. Posting Group Filter"));
      VATAllocationLine.SETFILTER("Posting Date Filter",GETFILTER("Date Filter"));
      VATAllocation.SETTABLEVIEW(VATAllocationLine);
      VATAllocation.RUNMODAL;
    END;

    PROCEDURE UpdateForm@1210002();
    BEGIN
      ChangedVendorVATInvoiceVisible := "Entry Type" = "Entry Type"::Purchase;
      VendorVATInvoiceNoVisible := "Entry Type" = "Entry Type"::Purchase;
      VendorVATInvoiceDateVisible := "Entry Type" = "Entry Type"::Purchase;
      VendorVATInvoiceRcvdDateVisibl := "Entry Type" = "Entry Type"::Purchase;
    END;

    PROCEDURE SetGroupVATAlloc@1210003();
    VAR
      VATEntry@1210000 : Record 254;
      Filters@1210001 : Record 14927;
      EntryNo@1210002 : TEMPORARY Record 2000000026;
      CurrRec@1210003 : Record 14927;
    BEGIN
      CurrRec := Rec;
      Filters.COPYFILTERS(Rec);
      CurrPage.SETSELECTIONFILTER(Rec);
      IF FINDFIRST THEN
        REPEAT
          EntryNo.Number := "Entry No.";
          EntryNo.INSERT;
        UNTIL NEXT = 0;
      IF EntryNo.ISEMPTY THEN
        ERROR(Text002);

      VATEntry.SETFILTER(Type,GETFILTER("Entry Type"));
      VATEntry.SETFILTER("Posting Date",GETFILTER("Date Filter"));
      VATEntry.SETFILTER("VAT Settlement Type",GETFILTER("Type Filter"));
      VATEntry.SETRANGE("Unrealized VAT Entry No.",0);
      VATEntry.SETFILTER("VAT Bus. Posting Group",GETFILTER("VAT Bus. Posting Group Filter"));
      VATEntry.SETFILTER("VAT Prod. Posting Group",GETFILTER("VAT Prod. Posting Group Filter"));
      VATEntry.SETRANGE("Manual VAT Settlement",TRUE);
      IF VATSettlementMgt.SetGroupVATAlloc(VATEntry,EntryNo) THEN BEGIN
        FINDSET;
        REPEAT
          CALCFIELDS("VAT Amount To Allocate");
          "Allocated VAT Amount" := "VAT Amount To Allocate";
        UNTIL NEXT = 0;
      END;
      EntryNo.DELETEALL;

      Rec := CurrRec;
      RESET;
      COPYFILTERS(Filters);
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE TypeValidation@1210004();
    BEGIN
      IF Type <> xType THEN BEGIN
        xType := Type;
        RESET;
        DELETEALL;
        CASE Type OF
          Type::Purchase,Type::Sale:
            SETRANGE("Type Filter","Type Filter"::" ");
          Type::"Fixed Asset":
            SETRANGE("Type Filter","Type Filter"::"by Act");
          Type::"Future Expense":
            SETRANGE("Type Filter","Type Filter"::"Future Expenses");
        END;
        IF PeriodType = PeriodType::"Accounting Period" THEN
          FindUserPeriod('')
        ELSE
          FindPeriod('');
      END;
    END;

    PROCEDURE ChangeVendVATInvoices@1210005(AskConfirmation@1210003 : Boolean);
    VAR
      VendLedgEntry@1210001 : Record 25;
      CurrRec@1210000 : Record 14927;
      VendEntryEdit@1210002 : Codeunit 113;
    BEGIN
      CurrRec := Rec;
      SETRANGE("Changed Vendor VAT Invoice",TRUE);
      IF NOT ISEMPTY AND AskConfirmation THEN
        IF NOT CONFIRM(STRSUBSTNO(Text003,FIELDCAPTION("Changed Vendor VAT Invoice")),TRUE) THEN
          EXIT;
      IF FINDSET(TRUE) THEN
        REPEAT
          VendLedgEntry.GET("Entry No.");
          VendEntryEdit.UpdateVATInvoiceData(
            VendLedgEntry,
            "Vendor VAT Invoice No.",
            "Vendor VAT Invoice Date",
            "Vendor VAT Invoice Rcvd Date");
          SetChangedVATInvoice;
          MODIFY;
        UNTIL NEXT = 0;
      SETRANGE("Changed Vendor VAT Invoice");
      Rec := CurrRec;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE TypeOnAfterValidate@19069045();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    PROCEDURE CalcVATAmount@1210006();
    BEGIN
      CALCFIELDS("VAT Amount To Allocate");
      IF "Allocated VAT Amount" <> "VAT Amount To Allocate" THEN
        "Allocated VAT Amount" := "VAT Amount To Allocate";
    END;

    BEGIN
    END.
  }
}

