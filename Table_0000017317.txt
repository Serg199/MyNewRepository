OBJECT Table 17317 Tax Calc. Item Entry
{
  OBJECT-PROPERTIES
  {
    Date=18.12.13;
    Time=12:00:00;
    Version List=NAVRU7.10;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Tax Calc. Item Entry;
               RUS=Операция по товарам для налогового расчета];
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              RUS=Номер операции] }
    { 2   ;   ;Section Code        ;Code10        ;TableRelation="Tax Calc. Section";
                                                   CaptionML=[ENU=Section Code;
                                                              RUS=Код секции] }
    { 3   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              RUS=Дата учета] }
    { 4   ;   ;Starting Date       ;Date          ;CaptionML=[ENU=Starting Date;
                                                              RUS=Дата начала];
                                                   Editable=No }
    { 5   ;   ;Ending Date         ;Date          ;CaptionML=[ENU=Ending Date;
                                                              RUS=Дата окончания];
                                                   Editable=No }
    { 6   ;   ;Item No.            ;Code20        ;TableRelation=Item;
                                                   CaptionML=[ENU=Item No.;
                                                              RUS=Код товара] }
    { 7   ;   ;Description         ;Text70        ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 15  ;   ;Where Used Register IDs;Code61     ;CaptionML=[ENU=Where Used Register IDs;
                                                              RUS=Коды регистра применимости] }
    { 21  ;   ;Ledger Entry No.    ;Integer       ;TableRelation="Item Ledger Entry"."Entry No.";
                                                   CaptionML=[ENU=Ledger Entry No.;
                                                              RUS=Номер операции ГК];
                                                   BlankZero=Yes }
    { 22  ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              RUS=Тип документа];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund,,,,,Receipt,Shipment,Return Rcpt.,Return Shpt.,,,,,,,Positive Adj.,Negative Adj.";
                                                                    RUS=" ,Оплата,Счет,Кредит-нота,Процент-нота,Напоминание,Возмещение,,,,,Прих. накл.,Расх. накл.,Возвр. прих. накл.,Возврат поставки,,,,,,,Приход,Расход"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund,,,,,Receipt,Shipment,Return Rcpt.,Return Shpt.,,,,,,,Positive Adj.,Negative Adj.] }
    { 23  ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              RUS=Номер документа] }
    { 24  ;   ;Correction          ;Boolean       ;CaptionML=[ENU=Correction;
                                                              RUS=Корректировка] }
    { 25  ;   ;Ledger Entry Type   ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Item Ledger Entry"."Entry Type" WHERE (Entry No.=FIELD(Ledger Entry No.)));
                                                   CaptionML=[ENU=Ledger Entry Type;
                                                              RUS=Тип операций];
                                                   OptionCaptionML=[ENU=Purchase,Sale,Positive Adjmt.,Negative Adjmt.,Transfer,Consumption,Output;
                                                                    RUS=Покупка,Продажа,Приход,Расход,Перемещение,Потребление,Выход];
                                                   OptionString=Purchase,Sale,Positive Adjmt.,Negative Adjmt.,Transfer,Consumption,Output;
                                                   Editable=No }
    { 30  ;   ;Dimension 1 Value Code;Code20      ;CaptionML=[ENU=Dimension 1 Value Code;
                                                              RUS=Код значения измерения 1];
                                                   CaptionClass=TaxCalcMgt.GetDimCaptionClass("Section Code",1) }
    { 31  ;   ;Dimension 2 Value Code;Code20      ;CaptionML=[ENU=Dimension 2 Value Code;
                                                              RUS=Код значения измерения 2];
                                                   CaptionClass=TaxCalcMgt.GetDimCaptionClass("Section Code",2) }
    { 32  ;   ;Dimension 3 Value Code;Code20      ;CaptionML=[ENU=Dimension 3 Value Code;
                                                              RUS=Код значения измерения 3];
                                                   CaptionClass=TaxCalcMgt.GetDimCaptionClass("Section Code",3) }
    { 33  ;   ;Dimension 4 Value Code;Code20      ;CaptionML=[ENU=Dimension 4 Value Code;
                                                              RUS=Код значения измерения 4];
                                                   CaptionClass=TaxCalcMgt.GetDimCaptionClass("Section Code",4) }
    { 35  ;   ;Item Ledger Source Type;Option     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Item Ledger Entry"."Source Type" WHERE (Entry No.=FIELD(Ledger Entry No.)));
                                                   CaptionML=[ENU=Item Ledger Source Type;
                                                              RUS=Тип источника для книги товаров];
                                                   OptionCaptionML=[ENU=" ,Customer,Vendor,Item";
                                                                    RUS=" ,Клиент,Поставщик,Товар"];
                                                   OptionString=[ ,Customer,Vendor,Item];
                                                   Editable=No }
    { 36  ;   ;Sales/Purch. Account No.;Code20    ;TableRelation=IF (Item Ledger Source Type=FILTER(Customer|Vendor)) "G/L Account".No.;
                                                   CaptionML=[ENU=Sales/Purch. Account No.;
                                                              RUS=Номер счета продаж/покупок] }
    { 37  ;   ;Inventory Account No.;Code20       ;TableRelation="G/L Account".No.;
                                                   CaptionML=[ENU=Inventory Account No.;
                                                              RUS=Номер счета ГК склада] }
    { 38  ;   ;Direct Cost Account No.;Code20     ;TableRelation="G/L Account".No.;
                                                   CaptionML=[ENU=Direct Cost Account No.;
                                                              RUS=Номер счета прямых затрат] }
    { 39  ;   ;Sales/Purch. Posting Code;Code10   ;TableRelation=IF (Item Ledger Source Type=FILTER(Vendor)) "Vendor Posting Group".Code
                                                                 ELSE IF (Item Ledger Source Type=FILTER(Customer)) "Customer Posting Group".Code;
                                                   CaptionML=[ENU=Sales/Purch. Posting Code;
                                                              RUS=Код учета продаж/покупок] }
    { 40  ;   ;Debit Account No.   ;Code20        ;TableRelation="G/L Account".No.;
                                                   CaptionML=[ENU=Debit Account No.;
                                                              RUS=Номер дебетового счета] }
    { 41  ;   ;Credit Account No.  ;Code20        ;TableRelation="G/L Account".No.;
                                                   CaptionML=[ENU=Credit Account No.;
                                                              RUS=Номер кредитового счета] }
    { 42  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              RUS=Общая бизнес-группа] }
    { 43  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              RUS=Общая товарная группа] }
    { 44  ;   ;Location Code       ;Code10        ;TableRelation=Location;
                                                   CaptionML=[ENU=Location Code;
                                                              RUS=Код склада] }
    { 45  ;   ;Inventory Posting Group;Code10     ;TableRelation="Inventory Posting Group";
                                                   CaptionML=[ENU=Inventory Posting Group;
                                                              RUS=Учетная группа товаров] }
    { 50  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              RUS=Фильтр по дате] }
    { 51  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              RUS=Кол-во];
                                                   BlankZero=Yes }
    { 52  ;   ;Amount (Tax)        ;Decimal       ;CaptionML=[ENU=Amount (Tax);
                                                              RUS=Сумма (НУ)];
                                                   BlankZero=Yes }
    { 53  ;   ;Credit Quantity     ;Decimal       ;CaptionML=[ENU=Credit Quantity;
                                                              RUS=Количество по кредиту];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 54  ;   ;Credit Amount (Tax) ;Decimal       ;CaptionML=[ENU=Credit Amount (Tax);
                                                              RUS=Сумма по кредиту (НУ)];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 55  ;   ;Debit Quantity      ;Decimal       ;CaptionML=[ENU=Debit Quantity;
                                                              RUS=Количество по дебету];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 56  ;   ;Debit Amount (Tax)  ;Decimal       ;CaptionML=[ENU=Debit Amount (Tax);
                                                              RUS=Сумма по дебету (НУ)];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 57  ;   ;Outstand. Quantity  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Item Application Entry".Quantity WHERE (Batch Item Ledger Entry No.=FIELD(Appl. Entry No.),
                                                                                                            Posting Date=FIELD(UPPERLIMIT(Date Filter))));
                                                   CaptionML=[ENU=Outstand. Quantity;
                                                              RUS=Недопоставл. кол-во];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 58  ;   ;Amount (Actual)     ;Decimal       ;CaptionML=[ENU=Amount (Actual);
                                                              RUS=Сумма (факт.)];
                                                   Editable=No }
    { 59  ;   ;Appl. Entry No.     ;Integer       ;TableRelation="Item Ledger Entry"."Entry No.";
                                                   CaptionML=[ENU=Appl. Entry No.;
                                                              RUS=Номер примененной операции];
                                                   BlankZero=Yes }
    { 60  ;   ;Credit Amount (Actual);Decimal     ;CaptionML=[ENU=Credit Amount (Actual);
                                                              RUS=Сумма по кредиту (факт.)];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 61  ;   ;Debit Amount (Actual);Decimal      ;CaptionML=[ENU=Debit Amount (Actual);
                                                              RUS=Сумма по дебету (факт.)];
                                                   BlankZero=Yes;
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Section Code,Ending Date                 }
    {    ;Section Code,Starting Date               }
    {    ;Section Code,Posting Date                }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      TaxCalcMgt@1000 : Codeunit 17303;

    PROCEDURE ObjectName@1() : Text[100];
    VAR
      Item@1002 : Record 27;
    BEGIN
      IF Item.GET("Item No.") THEN
        EXIT(Item.Description);
    END;

    PROCEDURE Navigating@2();
    VAR
      Navigate@1000 : Page 344;
    BEGIN
      CLEAR(Navigate);
      Navigate.SetDoc("Posting Date","Document No.");
      Navigate.RUN;
    END;

    PROCEDURE DebitAccountName@3() : Text[100];
    VAR
      GLAcc@1000 : Record 15;
    BEGIN
      IF GLAcc.GET("Debit Account No.") THEN
        EXIT(GLAcc.Name);
    END;

    PROCEDURE CreditAccountName@4() : Text[100];
    VAR
      GLAcc@1000 : Record 15;
    BEGIN
      IF GLAcc.GET("Credit Account No.") THEN
        EXIT(GLAcc.Name);
    END;

    PROCEDURE UOMName@5() : Text[100];
    VAR
      Item@1000 : Record 27;
      UOM@1001 : Record 204;
    BEGIN
      IF Item.GET("Item No.") THEN
        IF UOM.GET(Item."Base Unit of Measure") THEN
          EXIT(UOM.Description);
    END;

    PROCEDURE SetFieldFilter@6(FieldNumber@1000 : Integer;TypeField@1001 : 'SumFields,CalcFields') FieldInList : Boolean;
    BEGIN
      CASE TypeField OF
        TypeField::SumFields:
          FieldInList :=
            FieldNumber IN [
                            FIELDNO("Amount (Actual)"),
                            FIELDNO("Credit Amount (Actual)"),
                            FIELDNO("Debit Amount (Actual)"),
                            FIELDNO("Amount (Tax)"),
                            FIELDNO("Credit Amount (Tax)"),
                            FIELDNO("Debit Amount (Tax)")
                            ];
        TypeField::CalcFields:
          FieldInList := FieldNumber = -1;
      END;
    END;

    PROCEDURE SetTaxCalcFilter@7(TaxCalcLine@1000 : Record 17310);
    BEGIN
      CASE TaxCalcLine."Sum Field No." OF
        FIELDNO("Credit Amount (Actual)"),
        FIELDNO("Credit Amount (Tax)"):
          SETFILTER("Credit Quantity",'<>0');
        FIELDNO("Debit Amount (Actual)"),
        FIELDNO("Debit Amount (Tax)"):
          SETFILTER("Debit Quantity",'<>0');
      END;
    END;

    PROCEDURE FormTitle@8() : Text[250];
    VAR
      TaxCalcHeader@1000 : Record 17308;
    BEGIN
      FILTERGROUP(2);
      TaxCalcHeader.SETRANGE("Section Code","Section Code");
      TaxCalcHeader.SETFILTER("Register ID",DELCHR(GETFILTER("Where Used Register IDs"),'=','~'));
      FILTERGROUP(0);
      IF TaxCalcHeader.FINDSET THEN
        IF TaxCalcHeader.NEXT = 0 THEN
          EXIT(TaxCalcHeader.Description);
    END;

    BEGIN
    END.
  }
}

