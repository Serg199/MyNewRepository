OBJECT Table 80 Gen. Journal Template
{
  OBJECT-PROPERTIES
  {
    Date=17.04.17;
    Time=10:55:37;
    Modified=Yes;
    Version List=NAVW110.00,NAVRU10.00,NOS-26;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               VALIDATE("Page ID");
             END;

    OnDelete=BEGIN
               GenJnlAlloc.SETRANGE("Journal Template Name",Name);
               GenJnlAlloc.DELETEALL;
               GenJnlLine.SETRANGE("Journal Template Name",Name);
               GenJnlLine.DELETEALL(TRUE);
               GenJnlBatch.SETRANGE("Journal Template Name",Name);
               GenJnlBatch.DELETEALL;
             END;

    CaptionML=[ENU=Gen. Journal Template;
               RUS=Шаблон финансового журнала];
    LookupPageID=Page250;
  }
  FIELDS
  {
    { 1   ;   ;Name                ;Code10        ;CaptionML=[ENU=Name;
                                                              RUS=Название];
                                                   NotBlank=Yes }
    { 2   ;   ;Description         ;Text80        ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 5   ;   ;Test Report ID      ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(Report));
                                                   CaptionML=[ENU=Test Report ID;
                                                              RUS=Номер тестового отчета] }
    { 6   ;   ;Page ID             ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(Page));
                                                   OnValidate=BEGIN
                                                                IF "Page ID" = 0 THEN
                                                                  VALIDATE(Type);
                                                              END;

                                                   CaptionML=[ENU=Page ID;
                                                              RUS=Код страницы] }
    { 7   ;   ;Posting Report ID   ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(Report));
                                                   CaptionML=[ENU=Posting Report ID;
                                                              RUS=Номер учетного отчета] }
    { 8   ;   ;Force Posting Report;Boolean       ;CaptionML=[ENU=Force Posting Report;
                                                              RUS=Запускать учетный отчет] }
    { 9   ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                "Test Report ID" := REPORT::"General Journal - Test";
                                                                "Posting Report ID" := REPORT::"G/L Register";
                                                                SourceCodeSetup.GET;
                                                                CASE Type OF
                                                                  Type::General:
                                                                    BEGIN
                                                                      "Source Code" := SourceCodeSetup."General Journal";
                                                                      "Page ID" := PAGE::"General Journal";
                                                                    END;
                                                                  Type::Sales:
                                                                    BEGIN
                                                                      "Source Code" := SourceCodeSetup."Sales Journal";
                                                                      "Page ID" := PAGE::"Sales Journal";
                                                                    END;
                                                                  Type::Purchases:
                                                                    BEGIN
                                                                      "Source Code" := SourceCodeSetup."Purchase Journal";
                                                                      "Page ID" := PAGE::"Purchase Journal";
                                                                    END;
                                                                  Type::"Cash Receipts":
                                                                    BEGIN
                                                                      "Source Code" := SourceCodeSetup."Cash Receipt Journal";
                                                                      "Page ID" := PAGE::"Cash Receipt Journal";
                                                                    END;
                                                                  Type::Payments:
                                                                    BEGIN
                                                                      "Source Code" := SourceCodeSetup."Payment Journal";
                                                                      "Page ID" := PAGE::"Payment Journal";
                                                                    END;
                                                                  Type::Assets:
                                                                    BEGIN
                                                                      "Source Code" := SourceCodeSetup."Fixed Asset G/L Journal";
                                                                      "Page ID" := PAGE::"Fixed Asset G/L Journal";
                                                                    END;
                                                                  Type::Intercompany:
                                                                    BEGIN
                                                                      "Source Code" := SourceCodeSetup."IC General Journal";
                                                                      "Page ID" := PAGE::"IC General Journal";
                                                                    END;
                                                                  Type::Jobs:
                                                                    BEGIN
                                                                      "Source Code" := SourceCodeSetup."Job G/L Journal";
                                                                      "Page ID" := PAGE::"Job G/L Journal";
                                                                    END;
                                                                  Type::"VAT Settlement":
                                                                    BEGIN
                                                                      "Source Code" := SourceCodeSetup."Deferred VAT Settlement";
                                                                      "Page ID" := PAGE::"VAT Settlement Journal";
                                                                    END;
                                                                  Type::"Cash Order Payments":
                                                                    BEGIN
                                                                      "Source Code" := SourceCodeSetup."Cash Order Payments";
                                                                      "Page ID" := PAGE::"Cash Order Journal";
                                                                    END;
                                                                  Type::"Bank Payments":
                                                                    BEGIN
                                                                      "Source Code" := SourceCodeSetup."Bank Payments";
                                                                      "Page ID" := PAGE::"Bank Payment Order";
                                                                    END;
                                                                  Type::"Future Expenses":
                                                                    BEGIN
                                                                      "Source Code" := SourceCodeSetup."Deferred Expenses";
                                                                      "Page ID" := PAGE::"Future Expense Journal";
                                                                    END;
                                                                  Type::"VAT Reinstatement":
                                                                    BEGIN
                                                                      "Source Code" := SourceCodeSetup."VAT Reinstatement";
                                                                      "Page ID" := PAGE::"VAT Reinstatement Journal";
                                                                    END;
                                                                END;

                                                                IF Recurring THEN
                                                                  IF Type <> Type::"Future Expenses" THEN
                                                                    "Page ID" := PAGE::"Recurring General Journal";
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              RUS=Тип];
                                                   OptionCaptionML=[ENU=General,Sales,Purchases,Cash Receipts,Payments,Assets,Intercompany,Jobs,VAT Settlement,Bank Payments,Cash Order Payments,,,Future Expenses,VAT Reinstatement,FI,Loan;
                                                                    RUS=Общее,Продажи,Покупки,Приходные кассовые ордера,Платежи,Активы,МФ,Работы,Зачет НДС,Банковские платежи,Платежи по касс. ордерам,,,РБП,Восстановление НДС,ФИ,Кредит];
                                                   OptionString=General,Sales,Purchases,Cash Receipts,Payments,Assets,Intercompany,Jobs,VAT Settlement,Bank Payments,Cash Order Payments,,,Future Expenses,VAT Reinstatement,FI,Loan }
    { 10  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   OnValidate=BEGIN
                                                                GenJnlLine.SETRANGE("Journal Template Name",Name);
                                                                GenJnlLine.MODIFYALL("Source Code","Source Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Source Code;
                                                              RUS=Код источника] }
    { 11  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              RUS=Код причины] }
    { 12  ;   ;Recurring           ;Boolean       ;OnValidate=BEGIN
                                                                VALIDATE(Type);
                                                                IF Recurring THEN
                                                                  TESTFIELD("No. Series",'');
                                                              END;

                                                   CaptionML=[ENU=Recurring;
                                                              RUS=Типовой] }
    { 15  ;   ;Test Report Caption ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Report),
                                                                                                                Object ID=FIELD(Test Report ID)));
                                                   CaptionML=[ENU=Test Report Caption;
                                                              RUS=Метка тестового отчета];
                                                   Editable=No }
    { 16  ;   ;Page Caption        ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Page),
                                                                                                                Object ID=FIELD(Page ID)));
                                                   CaptionML=[ENU=Page Caption;
                                                              RUS=Метка страницы];
                                                   Editable=No }
    { 17  ;   ;Posting Report Caption;Text250     ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Report),
                                                                                                                Object ID=FIELD(Posting Report ID)));
                                                   CaptionML=[ENU=Posting Report Caption;
                                                              RUS=Метка учетного отчета];
                                                   Editable=No }
    { 18  ;   ;Force Doc. Balance  ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Force Doc. Balance;
                                                              RUS=Проверять баланс по документу] }
    { 19  ;   ;Bal. Account Type   ;Option        ;OnValidate=BEGIN
                                                                "Bal. Account No." := '';
                                                              END;

                                                   CaptionML=[ENU=Bal. Account Type;
                                                              RUS=Тип баланс. счета];
                                                   OptionCaptionML=[ENU=G/L Account,Customer,Vendor,Bank Account,Fixed Asset;
                                                                    RUS=Счет ГК,Клиент,Поставщик,Банк. счет,ОС];
                                                   OptionString=G/L Account,Customer,Vendor,Bank Account,Fixed Asset }
    { 20  ;   ;Bal. Account No.    ;Code20        ;TableRelation=IF (Bal. Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Customer)) Customer
                                                                 ELSE IF (Bal. Account Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Bal. Account Type=CONST(Bank Account)) "Bank Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Fixed Asset)) "Fixed Asset";
                                                   OnValidate=BEGIN
                                                                IF "Bal. Account Type" = "Bal. Account Type"::"G/L Account" THEN
                                                                  CheckGLAcc("Bal. Account No.");
                                                              END;

                                                   CaptionML=[ENU=Bal. Account No.;
                                                              RUS=Номер баланс. счета] }
    { 21  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   OnValidate=BEGIN
                                                                IF "No. Series" <> '' THEN BEGIN
                                                                  IF Recurring THEN
                                                                    ERROR(
                                                                      Text000,
                                                                      FIELDCAPTION("Posting No. Series"));
                                                                  IF "No. Series" = "Posting No. Series" THEN
                                                                    "Posting No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No. Series;
                                                              RUS=Серия номеров] }
    { 22  ;   ;Posting No. Series  ;Code10        ;TableRelation="No. Series";
                                                   OnValidate=BEGIN
                                                                IF ("Posting No. Series" = "No. Series") AND ("Posting No. Series" <> '') THEN
                                                                  FIELDERROR("Posting No. Series",STRSUBSTNO(Text001,"Posting No. Series"));
                                                              END;

                                                   CaptionML=[ENU=Posting No. Series;
                                                              RUS=Учетная серия номеров] }
    { 23  ;   ;Copy VAT Setup to Jnl. Lines;Boolean;
                                                   InitValue=Yes;
                                                   OnValidate=BEGIN
                                                                IF "Copy VAT Setup to Jnl. Lines" <> xRec."Copy VAT Setup to Jnl. Lines" THEN BEGIN
                                                                  GenJnlBatch.SETRANGE("Journal Template Name",Name);
                                                                  GenJnlBatch.MODIFYALL("Copy VAT Setup to Jnl. Lines","Copy VAT Setup to Jnl. Lines");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Copy VAT Setup to Jnl. Lines;
                                                              RUS=Копировать настройку НДС в строки журнала] }
    { 24  ;   ;Allow VAT Difference;Boolean       ;OnValidate=BEGIN
                                                                IF "Allow VAT Difference" <> xRec."Allow VAT Difference" THEN BEGIN
                                                                  GenJnlBatch.SETRANGE("Journal Template Name",Name);
                                                                  GenJnlBatch.MODIFYALL("Allow VAT Difference","Allow VAT Difference");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Allow VAT Difference;
                                                              RUS=Разрешить разницу НДС] }
    { 25  ;   ;Cust. Receipt Report ID;Integer    ;TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(Report));
                                                   AccessByPermission=TableData 18=R;
                                                   CaptionML=[ENU=Cust. Receipt Report ID;
                                                              RUS=Номер отчета поступлений клиента] }
    { 26  ;   ;Cust. Receipt Report Caption;Text250;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Report),
                                                                                                                Object ID=FIELD(Cust. Receipt Report ID)));
                                                   AccessByPermission=TableData 18=R;
                                                   CaptionML=[ENU=Cust. Receipt Report Caption;
                                                              RUS=Метка отчета поступлений клиента];
                                                   Editable=No }
    { 27  ;   ;Vendor Receipt Report ID;Integer   ;TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(Report));
                                                   AccessByPermission=TableData 23=R;
                                                   CaptionML=[ENU=Vendor Receipt Report ID;
                                                              RUS=Номер отчета поступлений поставщика] }
    { 28  ;   ;Vendor Receipt Report Caption;Text250;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Report),
                                                                                                                Object ID=FIELD(Vendor Receipt Report ID)));
                                                   AccessByPermission=TableData 23=R;
                                                   CaptionML=[ENU=Vendor Receipt Report Caption;
                                                              RUS=Метка отчета поступлений поставщика];
                                                   Editable=No }
    { 12400;  ;Archive             ;Boolean       ;CaptionML=[ENU=Archive;
                                                              RUS=Архив] }
  }
  KEYS
  {
    {    ;Name                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Name,Description,Type                    }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Only the %1 field can be filled in on recurring journals.;RUS=Только поле %1 может быть заполнено в типовых журналах.';
      Text001@1001 : TextConst 'ENU=must not be %1;RUS=не должно быть %1';
      GenJnlBatch@1003 : Record 232;
      GenJnlLine@1004 : Record 81;
      GenJnlAlloc@1005 : Record 221;
      SourceCodeSetup@1006 : Record 242;

    LOCAL PROCEDURE CheckGLAcc@2(AccNo@1000 : Code[20]);
    VAR
      GLAcc@1001 : Record 15;
    BEGIN
      IF AccNo <> '' THEN BEGIN
        GLAcc.GET(AccNo);
        GLAcc.CheckGLAcc;
        GLAcc.TESTFIELD("Direct Posting",TRUE);
      END;
    END;

    BEGIN
    {
      MTF02 II Исправлено поле Type
      NC MLN12 DP Добавлена опция в поле Type
    }
    END.
  }
}

