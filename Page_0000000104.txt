OBJECT Page 104 Account Schedule
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00,NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Account Schedule;
               RUS=Финансовый отчет];
    MultipleNewLines=Yes;
    SourceTable=Table85;
    DataCaptionFields=Schedule Name;
    PageType=Worksheet;
    AutoSplitKey=Yes;
    OnOpenPage=BEGIN
                 AccSchedManagement.OpenAndCheckSchedule(CurrentSchedName,Rec);
               END;

    OnAfterGetRecord=BEGIN
                       IF NOT DimCaptionsInitialized THEN
                         DimCaptionsInitialized := TRUE;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 29      ;1   ;Action    ;
                      Name=Overview;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Overview;
                                 RUS=Обзор];
                      ToolTipML=[ENU=View an overview of the current account schedule.;
                                 RUS=Просмотр и обзор текущего финансового отчета.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ViewDetails;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 AccSchedOverview@1001 : Page 490;
                               BEGIN
                                 AccSchedOverview.SetAccSchedName(CurrentSchedName);
                                 AccSchedOverview.RUN;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 11      ;1   ;Action    ;
                      Name=Indent;
                      CaptionML=[ENU=Indent;
                                 RUS=Отступ];
                      ToolTipML=[ENU=Make this row part of a group of rows. For example, indent rows that itemize a range of accounts, such as types of revenue.;
                                 RUS=Сделать эту строку частью группы строк. Например, можно добавить отступ к строкам из одного диапазона, таким как строки с одинаковым типом дохода.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Indent;
                      PromotedCategory=Process;
                      Scope=Repeater;
                      OnAction=VAR
                                 AccScheduleLine@1000 : Record 85;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(AccScheduleLine);
                                 IF AccScheduleLine.FINDSET THEN
                                   REPEAT
                                     AccScheduleLine.Indent;
                                     AccScheduleLine.MODIFY;
                                   UNTIL AccScheduleLine.NEXT = 0;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 13      ;1   ;Action    ;
                      Name=Outdent;
                      CaptionML=[ENU=Outdent;
                                 RUS=Выступ];
                      ToolTipML=[ENU=Move this row out one level.;
                                 RUS=Переместить эту строку на один уровень вверх.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=DecreaseIndent;
                      PromotedCategory=Process;
                      Scope=Repeater;
                      OnAction=VAR
                                 AccScheduleLine@1000 : Record 85;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(AccScheduleLine);
                                 IF AccScheduleLine.FINDSET THEN
                                   REPEAT
                                     AccScheduleLine.Outdent;
                                     AccScheduleLine.MODIFY;
                                   UNTIL AccScheduleLine.NEXT = 0;
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 15      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 RUS=Ф&ункции];
                      Image=Action }
      { 7       ;2   ;Action    ;
                      Name=InsertGLAccounts;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Insert G/L Accounts;
                                 RUS=Вставить счета ГК];
                      ToolTipML=[ENU=Open the list of general ledger accounts so you can add accounts to the account schedule.;
                                 RUS=Открытие списка счетов главной книги, чтобы можно было добавлять счета в финансовый отчет.];
                      ApplicationArea=#Basic,#Suite;
                      Image=InsertAccount;
                      OnAction=VAR
                                 AccSchedLine@1001 : Record 85;
                               BEGIN
                                 CurrPage.UPDATE(TRUE);
                                 SetupAccSchedLine(AccSchedLine);
                                 AccSchedManagement.InsertGLAccounts(AccSchedLine);
                               END;
                                }
      { 5       ;2   ;Action    ;
                      Name=InsertCFAccounts;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Insert CF Accounts;
                                 RUS=Вставить счета CF];
                      Image=InsertAccount;
                      OnAction=VAR
                                 AccSchedLine@1001 : Record 85;
                               BEGIN
                                 CurrPage.UPDATE(TRUE);
                                 SetupAccSchedLine(AccSchedLine);
                                 AccSchedManagement.InsertCFAccounts(AccSchedLine);
                               END;
                                }
      { 3       ;2   ;Action    ;
                      Name=InsertCostTypes;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Insert Cost Types;
                                 RUS=Вставить типы затрат];
                      Image=InsertAccount;
                      OnAction=VAR
                                 AccSchedLine@1001 : Record 85;
                               BEGIN
                                 CurrPage.UPDATE(TRUE);
                                 SetupAccSchedLine(AccSchedLine);
                                 AccSchedManagement.InsertCostTypes(AccSchedLine);
                               END;
                                }
      { 24      ;2   ;Action    ;
                      Name=EditColumnLayoutSetup;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Edit Column Layout Setup;
                                 RUS=Изменить настройку макета столбца];
                      ToolTipML=[ENU=Create or change the column layout for the current account schedule name.;
                                 RUS=Создание или изменение раскладки столбцов для текущего имени финансового отчета.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 489;
                      Image=SetupColumns }
      { 1210006 ;2   ;Separator  }
      { 1210007 ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Export Settings;
                                 RUS=Экспорт настроек];
                      ApplicationArea=#Basic,#Suite;
                      Image=Export;
                      OnAction=BEGIN
                                 AccScheduleName.GET(CurrentSchedName);
                                 AccScheduleName.SETRECFILTER;
                                 AccScheduleName.ExportSettings(AccScheduleName);
                               END;
                                }
      { 1210008 ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=I&mport Settings;
                                 RUS=&Импорт настроек];
                      ApplicationArea=#Basic,#Suite;
                      Image=Import;
                      OnAction=BEGIN
                                 AccScheduleName.ImportSettings('');
                               END;
                                }
      { 14      ;    ;ActionContainer;
                      CaptionML=[ENU=Reports;
                                 RUS=Отчеты];
                      ActionContainerType=Reports }
      { 22      ;1   ;Action    ;
                      Name=Print;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Print;
                                 RUS=&Печать];
                      ToolTipML=[ENU=Prepare to print the document. A report request window for the document opens where you can specify what to include on the print-out.;
                                 RUS=Подготовка документа к печати. Открывается окно запроса отчета для документа, где вы можете указать, какая информация должна выводиться на печать.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Print;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 AccScheduleName@1001 : Record 84;
                               BEGIN
                                 AccScheduleName.GET("Schedule Name");
                                 AccScheduleName.Print;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 18  ;1   ;Field     ;
                Lookup=Yes;
                CaptionML=[ENU=Name;
                           RUS=Название];
                ToolTipML=[ENU=Specifies the name of the account schedule.;
                           RUS=Определяет имя финансового отчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CurrentSchedName;
                OnValidate=BEGIN
                             AccSchedManagement.CheckName(CurrentSchedName);
                             CurrentSchedNameOnAfterValidat;
                           END;

                OnLookup=BEGIN
                           EXIT(AccSchedManagement.LookupName(CurrentSchedName,Text));
                         END;
                          }

    { 1   ;1   ;Group     ;
                IndentationColumnName=Indentation;
                IndentationControls=Description;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a number for the account schedule line.;
                           RUS=Определяет номер строки финансового отчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Row No." }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies text that will appear on the account schedule line.;
                           RUS=Определяет текст, который будет отображаться в строке финансового отчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                Style=Strong;
                StyleExpr=Bold }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the totaling type for the account schedule line. The type determines which accounts within the totaling interval you specify in the Totaling field will be totaled.;
                           RUS=Определяет тип группировки для строки финансового отчета. Тип определяет, какие из счетов в пределах интервала группировки, определенного в поле "Группировка", будут группироваться.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Totaling Type" }

    { 1210009;2;Field     ;
                ToolTipML=[ENU=Specifies the extension source table associated with account schedule line.;
                           RUS=Определяет исходную таблицу расширения, связанную со строкой финансового отчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Extension Source Table" }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies which accounts will be totaled on this line.;
                           RUS=Определяет, какие счета будут группироваться в этой строке.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Totaling;
                OnLookup=VAR
                           AccScheduleLine@1210005 : Record 85;
                           GLSetup@1210004 : Record 98;
                           AccScheduleExtension@1210003 : Record 26584;
                           GLAccList@1002 : Page 18;
                           CFAccList@1003 : Page 855;
                           AccScheduleLines@1210006 : Page 26595;
                           AccScheduleExtensions@1210002 : Page 26590;
                         BEGIN
                           IF "Totaling Type" IN
                              ["Totaling Type"::"Posting Accounts","Totaling Type"::"Total Accounts"]
                           THEN BEGIN
                             GLAccList.LOOKUPMODE(TRUE);
                             IF NOT (GLAccList.RUNMODAL = ACTION::LookupOK) THEN
                               EXIT(FALSE);

                             Text := GLAccList.GetSelectionFilter;
                           END;

                           CASE "Totaling Type" OF
                             "Totaling Type"::Formula:
                               BEGIN
                                 GLSetup.GET;
                                 IF GLSetup."Shared Account Schedule" <> '' THEN BEGIN
                                   AccScheduleLines.LOOKUPMODE := TRUE;
                                   AccScheduleLine.FILTERGROUP(2);
                                   AccScheduleLine.SETRANGE("Schedule Name",GLSetup."Shared Account Schedule");
                                   AccScheduleLine.FILTERGROUP(0);
                                   AccScheduleLines.SETTABLEVIEW(AccScheduleLine);
                                   IF AccScheduleLines.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                     AccScheduleLines.GETRECORD(AccScheduleLine);
                                     Text := AccScheduleLine."Row No.";
                                     EXIT(TRUE);
                                   END ELSE
                                     EXIT(FALSE)
                                 END;
                               END;

                             "Totaling Type"::Custom:
                               BEGIN
                                 IF "Extension Source Table" <> "Extension Source Table"::" " THEN BEGIN
                                   IF Totaling <> '' THEN BEGIN
                                     AccScheduleExtension.GET(Totaling);
                                     AccScheduleExtensions.SETRECORD(AccScheduleExtension);
                                   END;
                                   AccScheduleExtension.FILTERGROUP(2);
                                   AccScheduleExtension.SETRANGE(AccScheduleExtension."Source Table","Extension Source Table" - 1);
                                   AccScheduleExtension.FILTERGROUP(0);
                                   AccScheduleExtensions.SetSourceTable("Extension Source Table");
                                   AccScheduleExtensions.SETTABLEVIEW(AccScheduleExtension);
                                   AccScheduleExtensions.LOOKUPMODE(TRUE);
                                   IF NOT (AccScheduleExtensions.RUNMODAL = ACTION::LookupOK) THEN
                                     EXIT(FALSE)
                                   ELSE BEGIN
                                     AccScheduleExtensions.GETRECORD(AccScheduleExtension);
                                     Text := AccScheduleExtension.Code;
                                     EXIT(TRUE);
                                   END;
                                 END;
                               END;
                           END;

                           EXIT(FALSE);
                         END;
                          }

    { 33  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the row type for the account schedule row. The type determines how the amounts in the row are calculated.;
                           RUS=Определяет тип строки финансового отчета. Этот тип определяет способ расчета сумм в строке.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Row Type" }

    { 35  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of entries that will be included in the amounts in the account schedule row.;
                           RUS=Определяет тип операций, суммы по которым будут включены в эту строку финансового отчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Amount Type" }

    { 1210000;2;Field     ;
                ToolTipML=[ENU=Specifies the corresponding total of the general ledger account associated with the account schedule line.;
                           RUS=Определяет соответствующий итог счета главной книги, который связан со строкой финансового отчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Corr. Totaling" }

    { 31  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether to show debits in reports as negative amounts with a minus sign and credits as positive amounts.;
                           RUS=Определяет, следует ли отображать дебет в отчетах в виде отрицательных значений (со знаком минус), а кредит в виде положительных значений.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Show Opposite Sign" }

    { 41  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies which dimension value amounts will be totaled on this line.;
                           RUS=Определяет, какие значения измерений будут группироваться в этой строке.];
                ApplicationArea=#Suite;
                SourceExpr="Dimension 1 Totaling";
                Visible=FALSE;
                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(1,Text));
                         END;
                          }

    { 43  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies which dimension value amounts will be totaled on this line.;
                           RUS=Определяет, какие значения измерений будут группироваться в этой строке.];
                ApplicationArea=#Suite;
                SourceExpr="Dimension 2 Totaling";
                Visible=FALSE;
                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(2,Text));
                         END;
                          }

    { 45  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies which dimension value amounts will be totaled on this line.;
                           RUS=Определяет, какие значения измерений будут группироваться в этой строке.];
                ApplicationArea=#Suite;
                SourceExpr="Dimension 3 Totaling";
                Visible=FALSE;
                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(3,Text));
                         END;
                          }

    { 47  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies which dimension value amounts will be totaled on this line.;
                           RUS=Определяет, какие значения измерений будут группироваться в этой строке.];
                ApplicationArea=#Suite;
                SourceExpr="Dimension 4 Totaling";
                Visible=FALSE;
                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(4,Text));
                         END;
                          }

    { 1210002;2;Field     ;
                ToolTipML=[ENU=Specifies the dimension 1 corresponding totaling account associated with the account schedule line.;
                           RUS=Определяет корр. суммарный счет измерения 1, который связан со строкой финансового отчета.];
                SourceExpr="Dimension 1 Corr. Totaling";
                Visible=FALSE;
                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(12401,Text));
                         END;
                          }

    { 1210004;2;Field     ;
                ToolTipML=[ENU=Specifies the dimension 2 corresponding totaling account associated with the account schedule line.;
                           RUS=Определяет корр. суммарный счет измерения 2, который связан со строкой финансового отчета.];
                SourceExpr="Dimension 2 Corr. Totaling";
                Visible=FALSE;
                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(12402,Text));
                         END;
                          }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the account schedule line will be printed on the report.;
                           RUS=Определяет, будет ли строка финансового отчета выводиться на печать в отчете.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Show }

    { 20  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether to print the amounts in this row in bold.;
                           RUS=Определяет, следует ли отображать суммы в этой строке полужирным шрифтом.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Bold }

    { 25  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether to print the amounts in this row in italics.;
                           RUS=Определяет, следует ли отображать суммы в этой строке курсивом.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Italic }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether to underline the amounts in this row.;
                           RUS=Определяет, следует ли подчеркивать суммы в этой строке.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Underline }

    { 9   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether to double underline the amounts in this row.;
                           RUS=Определяет, следует ли выделять двойным подчеркиванием суммы в этой строке.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Double Underline";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether there will be a page break after the current account when the account schedule is printed.;
                           RUS=Определяет, будет ли при печати финансового отчета вставлен разрыв страницы после текущего счета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="New Page" }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      AccScheduleName@1210000 : Record 84;
      AccSchedManagement@1000 : Codeunit 8;
      CurrentSchedName@1001 : Code[10];
      DimCaptionsInitialized@1003 : Boolean;

    PROCEDURE SetAccSchedName@1(NewAccSchedName@1000 : Code[10]);
    BEGIN
      CurrentSchedName := NewAccSchedName;
    END;

    LOCAL PROCEDURE CurrentSchedNameOnAfterValidat@19053875();
    BEGIN
      CurrPage.SAVERECORD;
      AccSchedManagement.SetName(CurrentSchedName,Rec);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE SetupAccSchedLine@3(VAR AccSchedLine@1000 : Record 85);
    BEGIN
      AccSchedLine := Rec;
      IF "Line No." = 0 THEN BEGIN
        AccSchedLine := xRec;
        AccSchedLine.SETRANGE("Schedule Name",CurrentSchedName);
        IF AccSchedLine.NEXT = 0 THEN
          AccSchedLine."Line No." := xRec."Line No." + 10000
        ELSE BEGIN
          IF AccSchedLine.FINDLAST THEN
            AccSchedLine."Line No." += 10000;
          AccSchedLine.SETRANGE("Schedule Name");
        END;
      END;
    END;

    BEGIN
    END.
  }
}

