OBJECT Table 50037 Deal
{
  OBJECT-PROPERTIES
  {
    Date=17.07.17;
    Time=11:37:13;
    Modified=Yes;
    Version List=NOS-26;
  }
  PROPERTIES
  {
    Permissions=TableData 17=rm,
                TableData 50037=rimd;
    OnInsert=BEGIN
               "Last Date Modified" := TODAY;

               //NC MDB01 > PCH
               MovingDataSetup.GET;
               DimValue."Dimension Code" := MovingDataSetup."Deal Dimension Code";
               DimValue.Code := "Deal ID";
               //NC NOS-26 > SPA
               IF DimValue.FIND THEN;
               //NC NOS-26 < SPA
               DimValue.Name := Number;
               //NC S547 > PCH
               DimValue."Rec ID" := "Rec ID";
               //NC S547 < PCH
               IF NOT DimValue.INSERT(TRUE) THEN
                 DimValue.MODIFY(TRUE);
               //NC MDB01 < PCH
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;

               //NC MDB01 > PCH
               oldDeal.GET("Deal ID");
               //NC S547 > PCH
               //IF (Number <> oldDeal.Number) THEN BEGIN
               IF (Number <> oldDeal.Number) OR
                  (("Rec ID" <> '') AND ("Rec ID" <> oldDeal."Rec ID")) THEN BEGIN
               //NC S547 < PCH
                 MovingDataSetup.GET;
                 DimValue."Dimension Code" := MovingDataSetup."Deal Dimension Code";
                 DimValue.Code := "Deal ID";
                 //NC NOS-26 > SPA
                 IF DimValue.FIND THEN;
                 //NC NOS-26 < SPA
                 DimValue.Name := Number;
                 //NC S547 > PCH
                 DimValue."Rec ID" := "Rec ID";
                 //NC S547 < PCH
                 IF NOT DimValue.INSERT(TRUE) THEN
                   DimValue.MODIFY(TRUE);
               END;
               //NC MDB01 < PCH

               //TD BMN 03.07.2013 NCS-1048 >
               IF xRec."Type Deal" <> Rec."Type Deal" THEN BEGIN
                 VendAgree.RESET;
                 VendAgree.SETRANGE("Deal No.", "Deal ID");
                 IF VendAgree.FINDSET THEN
                   VendAgree.MODIFYALL("Type Deal", Rec."Type Deal");

                 CustAgree.RESET;
                 CustAgree.SETRANGE("Deal No.", "Deal ID");
                 IF CustAgree.FINDSET THEN
                   CustAgree.MODIFYALL("Type Deal", Rec."Type Deal");
               END;
               //TD BMN 03.07.2013 NCS-1048 <
             END;

    OnDelete=BEGIN
               //NC MDB01 > PCH
               MovingDataSetup.GET;
               IF DimValue.GET(MovingDataSetup."Deal Dimension Code","Deal ID") THEN
                 DimValue.DELETE(TRUE);
               //NC MDB01 < PCH
             END;

    OnRename=BEGIN
               "Last Date Modified" := TODAY;
               //NC MDB03 > PCH
               //NC S547 > PCH
               //IF NOT RenameRef.TestDeal(xRec."Deal ID","Deal ID",ErrorCode,ErrorText,TRUE) THEN
               IF NOT RenameRef.TestDeal(xRec."Deal ID",'',"Deal ID",ErrorCode,ErrorText,TRUE) THEN
               //NC S547 < PCH
                 ERROR(ErrorText);
               //NC MDB03 < PCH
               //NC MDB01 > PCH
               MovingDataSetup.GET;
               DimValue.SetDoNotTestRename(TRUE);
               IF DimValue.GET(MovingDataSetup."Deal Dimension Code",xRec."Deal ID") THEN
                 DimValue.RENAME(MovingDataSetup."Deal Dimension Code","Deal ID");
               //NC MDB01 < PCH
             END;

    CaptionML=[ENU=Deal;
               RUS=Справочник Сделок];
    LookupPageID=Page50102;
    DrillDownPageID=Page50102;
  }
  FIELDS
  {
    { 50000;  ;Deal ID             ;Code20        ;CaptionML=[ENU=Deal ID;
                                                              RUS=ID Сделки];
                                                   NotBlank=Yes }
    { 50002;  ;Rec ID              ;Code40        ;CaptionML=[ENU=Rec ID;
                                                              RUS=ID Записи];
                                                   Description=NC S547,S622 PCH }
    { 50005;  ;Type Deal           ;Code20        ;TableRelation="Deal Type";
                                                   CaptionML=[ENU=Type Deal;
                                                              RUS=Тип Сделки] }
    { 50006;  ;Type Description    ;Text100       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Deal Type".Name WHERE (Code=FIELD(Type Deal)));
                                                   CaptionML=[ENU=Type Description;
                                                              RUS=Название Типа Сделки];
                                                   Description=NC NCS-1367 AES;
                                                   Editable=No }
    { 50015;  ;Company No.         ;Code15        ;CaptionML=[ENU=Company No.;
                                                              RUS=Компания Но.] }
    { 50020;  ;Book                ;Code20        ;CaptionML=[ENU=Book;
                                                              RUS=Аналитика BOOK] }
    { 50025;  ;Profit Center       ;Code20        ;CaptionML=[ENU=Profit Center;
                                                              RUS=Аналитика Profit Center] }
    { 50030;  ;Type of Loan        ;Option        ;CaptionML=[ENU=Type of Loan;
                                                              RUS=Тип Кредита];
                                                   OptionCaptionML=[ENU=Lump Loan,Credit Line;
                                                                    RUS=Единовременный Займ,Кредитная Линия];
                                                   OptionString=Lump Loan,Credit Line }
    { 50035;  ;Customer No.        ;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Customer No.;
                                                              RUS=Клиент Но.] }
    { 50040;  ;Agreement Date      ;Date          ;CaptionML=[ENU=Agreement Date;
                                                              RUS=Дата Договора] }
    { 50045;  ;Agreement No.       ;Code20        ;CaptionML=[ENU=Agreement No.;
                                                              RUS=Номер Договора] }
    { 50050;  ;Trade Date          ;Date          ;CaptionML=[ENU=Trade Date;
                                                              RUS=Дата Операции] }
    { 50055;  ;Type of Collateral  ;Code20        ;TableRelation="Collateral Type";
                                                   CaptionML=[ENU=Type of Collateral;
                                                              RUS=Тип Обеспечения] }
    { 50060;  ;Loan Agreement No.  ;Code20        ;CaptionML=[ENU=Loan Agreement No.;
                                                              RUS=Номер Договора Обеспечения] }
    { 50070;  ;Currency            ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency;
                                                              RUS=Код Валюты] }
    { 50075;  ;Interest Rate Fixing Rules;Option  ;CaptionML=[ENU=Interest Rate Fixing Rules;
                                                              RUS=Порядок Фиксации Ставки];
                                                   OptionCaptionML=[ENU=Fixed,Floating;
                                                                    RUS=Фиксированая,Плавающая];
                                                   OptionString=Fixed,Floating }
    { 50080;  ;Floating Rate Type 1;Code20        ;TableRelation="Floating Rate Type";
                                                   CaptionML=[ENU=Floating Rate Type 1;
                                                              RUS=Тип Плавающей Ставки 1] }
    { 50085;  ;Floating Rate Type 2;Code20        ;TableRelation="Floating Rate Type";
                                                   CaptionML=[ENU=Floating Rate Type 2;
                                                              RUS=Тип Плавающей Ставки 2] }
    { 50090;  ;Fixed Interest Rate 1;Decimal      ;CaptionML=[ENU=Fixed Interest Rate 1;
                                                              RUS=Фиксированная Процентная Ставка 1];
                                                   DecimalPlaces=2:6 }
    { 50095;  ;Fixed Interest Rate 2;Decimal      ;CaptionML=[ENU=Fixed Interest Rate 2;
                                                              RUS=Фиксированная Процентная Ставка 2];
                                                   DecimalPlaces=2:6 }
    { 50100;  ;Renegotiation History;Boolean      ;CaptionML=[ENU=Renegotiation History;
                                                              RUS=История Условий] }
    { 50105;  ;Covenants           ;Boolean       ;CaptionML=[ENU=Covenants;
                                                              RUS=Наличие Доп. Условий] }
    { 50110;  ;Payment Currency    ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Payment Currency;
                                                              RUS=Валюта Платежей] }
    { 50125;  ;Payment Currency Rate;Decimal      ;CaptionML=[ENU=Payment Currency Rate;
                                                              RUS=Курс Валюты Платежей] }
    { 50135;  ;Term Type           ;Option        ;CaptionML=[ENU=Term Type;
                                                              RUS=Тип Срока];
                                                   OptionCaptionML=[ENU=Open Date,Fixed Term;
                                                                    RUS=Открытая Дата,Опред. Срок];
                                                   OptionString=Open Date,Fixed Term }
    { 50140;  ;Market Type         ;Option        ;CaptionML=[ENU=Market Type;
                                                              RUS=Тип Рынка];
                                                   OptionCaptionML=[ENU=OTC,SE;
                                                                    RUS=OTC,SE];
                                                   OptionString=OTC,SE }
    { 50150;  ;Price per FI        ;Decimal       ;CaptionML=[ENU=Price per FI;
                                                              RUS=Цена за Бумагу] }
    { 50155;  ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              RUS=Количество] }
    { 50160;  ;Discount/Premium    ;Decimal       ;CaptionML=[ENU=Discount/Premium;
                                                              RUS=% Дисконта/Премии] }
    { 50165;  ;CCY Buy             ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=CCY Buy;
                                                              RUS=Покупаемая Валюта] }
    { 50170;  ;CCY Buy Amount      ;Decimal       ;CaptionML=[ENU=CCY Buy Amount;
                                                              RUS=Сумма Покупаемой Валюты];
                                                   DecimalPlaces=0:5;
                                                   Description=NCS-1428.2 DP }
    { 50175;  ;CCY Sell            ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=CCY Sell;
                                                              RUS=Продаваемая Валюта] }
    { 50180;  ;CCY Sell Amount     ;Decimal       ;CaptionML=[ENU=CCY Sell Amount;
                                                              RUS=Сумма Продаваемой Валюты];
                                                   DecimalPlaces=0:5;
                                                   Description=NCS-1428.2 DP }
    { 50185;  ;Settlement Type     ;Option        ;CaptionML=[ENU=Settlement Type;
                                                              RUS=Порядок Расчетов];
                                                   OptionCaptionML=[ENU=" ,Deliverable,Non-Deliverable,Cash,Cash on Delivery,Auction";
                                                                    RUS=" ,Поставочный,Беспоставочный,Наличные,Наложенным платежом,Аукцион"];
                                                   OptionString=[ ,Deliverable,Non-Deliverable,Cash,Cash on Delivery,Auction];
                                                   Description=NC NCS-1416 AES (Старые значения: Deliverable,Non-Deliverable) }
    { 50190;  ;Trade Direction     ;Option        ;CaptionML=[ENU=Trade Direction;
                                                              RUS=Направление Сделки];
                                                   OptionCaptionML=[ENU=Purchase,Sale;
                                                                    RUS=Покупка,Продажа];
                                                   OptionString=Purchase,Sale }
    { 50195;  ;First Ch. Flow Date,Issue Date;Date;CaptionML=[ENU=First Cash Flow Date,Issue Date;
                                                              RUS=Дата Первого Платежа, Дата Уплаты Премии] }
    { 50200;  ;Delivery Date       ;Date          ;CaptionML=[ENU=Delivery Date;
                                                              RUS=Дата Поставки] }
    { 50205;  ;Underlying FI No    ;Code20        ;TableRelation="Financial Instrument";
                                                   CaptionML=[ENU=Underlying FI No;
                                                              RUS=Базисный Актив] }
    { 50210;  ;Financial instrument No.;Code20    ;TableRelation="Financial Instrument";
                                                   CaptionML=[ENU=Financial instrument No.;
                                                              RUS=Фин. Инструмент Но.] }
    { 50215;  ;Start Date Buy      ;Date          ;CaptionML=[ENU=Start Date Buy;
                                                              RUS=Дата Начала Начисления по Покупаемой % Ставке] }
    { 50220;  ;Maturity Date Buy   ;Date          ;CaptionML=[ENU=Maturity Date Buy;
                                                              RUS=Дата Окончания Начисления по Покупаемой % Ставке] }
    { 50225;  ;Margin 1            ;Decimal       ;CaptionML=[ENU=Margin 1;
                                                              RUS=Надбавка к Покупаемой Плавающей % Ставке] }
    { 50230;  ;Rate Convention 1   ;Decimal       ;CaptionML=[ENU=Rate Convention 1;
                                                              RUS=Соглашение по Базе 1] }
    { 50235;  ;Start Date Sell     ;Date          ;CaptionML=[ENU=Start Date Sell;
                                                              RUS=Дата Начала Начисления Продажи] }
    { 50240;  ;Maturity Date Sell  ;Date          ;CaptionML=[ENU=Maturity Date Sell;
                                                              RUS=Дата Окончания Начисления Продажи] }
    { 50245;  ;Margin 2            ;Decimal       ;CaptionML=[ENU=Margin 2;
                                                              RUS=Надбавка к Продаваемой Плавающей % Ставке] }
    { 50250;  ;Rate Convention 2   ;Decimal       ;CaptionML=[ENU=Rate Convention 2;
                                                              RUS=Соглашение по Базе 2] }
    { 50255;  ;Maturity Date       ;Date          ;CaptionML=[ENU=Maturity Date;
                                                              RUS=Дата Погашения] }
    { 50260;  ;Fee Type            ;Option        ;CaptionML=[ENU=Fee Type;
                                                              RUS=Тип Комиссии];
                                                   OptionString=Fixed Amount,Percent }
    { 50265;  ;Fixed Fee Amount    ;Decimal       ;CaptionML=[ENU=Fixed Fee Amount;
                                                              RUS=Сумма Единовременной Комиссии] }
    { 50270;  ;Fee Currency        ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Fee Currency;
                                                              RUS=Валюта Комиссионного Вознаграждения] }
    { 50275;  ;Standard Fee Rate   ;Decimal       ;CaptionML=[ENU=Standard Fee Rate;
                                                              RUS=Ставка Комиссионного Вознаграждения] }
    { 50280;  ;Payment frequency Buy;Option       ;CaptionML=[ENU=Payment frequency BUY;
                                                              RUS=Периодичность Платежей Покупка];
                                                   OptionCaptionML=[ENU=Mountly,Quarterly,Semiannually,Annually,Maturity;
                                                                    RUS=Ежемесячный,Квартальный,Полугодовой,Ежегодно,Позакрытию];
                                                   OptionString=Mountly,Quarterly,Semiannually,Annually,Maturity }
    { 50285;  ;Payment frequency Sell;Option      ;CaptionML=[ENU=Payment frequency Sell;
                                                              RUS=Периодичность Платежей Продажа];
                                                   OptionCaptionML=[ENU=Mountly,Quarterly,Semiannually, Annually,Maturity;
                                                                    RUS=Ежемесячный,Квартальный,Полугодовой,Ежегодно,Позакрытию];
                                                   OptionString=Mountly,Quarterly,Semiannually, Annually,Maturity }
    { 50290;  ;Amount 1 (principal);Decimal       ;CaptionML=[ENU=Amount 1 (principal);
                                                              RUS=Сумма 1] }
    { 50295;  ;Amount 2 (principal);Decimal       ;CaptionML=[ENU=Amount 2 (principal);
                                                              RUS=Сумма 2] }
    { 50300;  ;Accrued Coupon 1    ;Decimal       ;CaptionML=[ENU=Accrued Coupon 1;
                                                              RUS=Сумма 1 НКД] }
    { 50305;  ;Accrued Coupon 2    ;Decimal       ;CaptionML=[ENU=Accrued Coupon 2;
                                                              RUS=Сумма 2 НКД] }
    { 50310;  ;Fixed fee Payment Date;Date        ;CaptionML=[ENU=Fixed fee Payment Date;
                                                              RUS=Фиксированная Дата Уплаты Коммисий] }
    { 50315;  ;Last Date Modified  ;Date          ;CaptionML=[ENU=Last Date Modified;
                                                              RUS=Дата Посл. Изменения];
                                                   Editable=No }
    { 50316;  ;Customer Name       ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Customer.Name WHERE (No.=FIELD(Customer No.)));
                                                   CaptionML=[ENU=Customer Name;
                                                              RUS=Клиент Имя];
                                                   Editable=No }
    { 50317;  ;Form No.            ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Deal Type"."Form No." WHERE (Code=FIELD(Type Deal)));
                                                   CaptionML=[ENU=Form No.;
                                                              RUS=Форма Но.] }
    { 50320;  ;Deal Relation ID    ;Code20        ;CaptionML=[ENU=Deal Relation ID;
                                                              RUS=Связь Сделки ID] }
    { 50325;  ;Flag                ;Integer       ;CaptionML=[ENU=Flag;
                                                              RUS=Флаг] }
    { 50330;  ;Contract Flag       ;Integer       ;CaptionML=[ENU=Contract Flag;
                                                              RUS=Контракт Флаг] }
    { 50335;  ;Number              ;Code20        ;CaptionML=[ENU=Number;
                                                              RUS=Номер] }
    { 50340;  ;Book Rt.            ;Code20        ;CaptionML=[ENU=Book Rt.;
                                                              RUS=Аналитика BOOK для компании справа] }
    { 50345;  ;Using LE1           ;Text15        ;CaptionML=[ENU=Using LE1;
                                                              RUS=Используемый ЮЛ1];
                                                   Description=NC PCH }
    { 50350;  ;Using LE2           ;Text15        ;CaptionML=[ENU=Using LE2;
                                                              RUS=Используемый ЮЛ2];
                                                   Description=NC PCH }
    { 50355;  ;Using LE3           ;Text15        ;CaptionML=[ENU=Using LE3;
                                                              RUS=Используемый ЮЛ3];
                                                   Description=NC PCH }
    { 50371;  ;Index Murex         ;Text50        ;CaptionML=RUS=Индекс/Генератор Murex;
                                                   Description=TDAPCOC-100 }
    { 50380;  ;Deal Between Books  ;Boolean       ;CaptionML=[ENU=Deal Between Books;
                                                              RUS=Межбуковая Сделка];
                                                   Description=NC NCS-885 RD }
    { 50384;  ;Date of 1st Deal_ As Scheduled;Date;CaptionML=[ENU=Date of 1st Deal_ As Scheduled;
                                                              RUS=Дата Исполнения Первой Части\Плановая];
                                                   Description=TDRANCS-2323 }
    { 50387;  ;Date of 2nd Deal_ As Scheduled;Date;CaptionML=[ENU=Date of 2nd Deal_ As Scheduled;
                                                              RUS=Дата Исполнения Второй Части\Плановая];
                                                   Description=TDRANCS-2323 }
    { 50390;  ;Book Correspondent  ;Code20        ;CaptionML=[ENU=Book Correspondent;
                                                              RUS=BOOK Корреспондент];
                                                   Description=NC NCS-885 RD }
    { 50410;  ;Not Check FI        ;Boolean       ;CaptionML=[ENU=Not Check FI;
                                                              RUS=Не Проверять ФИ];
                                                   Description=NCS-1131 DP }
    { 50415;  ;Start Date          ;Date          ;CaptionML=[ENU=Interest Start Date;
                                                              RUS=Дата начала начисления %%];
                                                   Description=NCS-1131 DP }
    { 50420;  ;End Nominal         ;Decimal       ;CaptionML=[ENU=End Nominal;
                                                              RUS=Сумма по договору включая %%];
                                                   Description=NCS-1131 DP }
    { 50425;  ;RNUM                ;Option        ;OptionCaptionML=[ENU=30,Actual;
                                                                    RUS=30,Факт];
                                                   OptionString=30,ACT;
                                                   Description=NCS-1131 DP }
    { 50430;  ;RBASIS              ;Option        ;OptionCaptionML=[ENU=360,364,365,366,Факт,Факт ISDA;
                                                                    RUS=360,364,365,366,ACT,ACT ISDA];
                                                   OptionString=360,364,365,366,ACT,ACT ISDA;
                                                   Description=NCS-1131 DP }
    { 50435;  ;COMP                ;Text30        ;CaptionML=[ENU=COMP;
                                                              RUS=COMP];
                                                   Description=NCS-1131 DP }
    { 50440;  ;PURPOSE             ;Text30        ;CaptionML=[ENU=PURPOSE;
                                                              RUS=PURPOSE];
                                                   Description=NCS-1131 DP }
    { 50450;  ;Settlement Date     ;Date          ;CaptionML=[ENU=Settlement Date;
                                                              RUS=Дата Расчетов];
                                                   Description=TDVYNCS-1356 }
    { 50451;  ;Settlement Cur      ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Settlement Cur;
                                                              RUS=Валюта Расчетов];
                                                   Description=TDVYNCS-1356 }
    { 50452;  ;Premium Amount      ;Decimal       ;CaptionML=[ENU=Premium Amount;
                                                              RUS=Сумма Премии];
                                                   Description=TDVYNCS-1356 }
    { 50453;  ;Strategy Type       ;Code30        ;CaptionML=[ENU=Strategy Type;
                                                              RUS=Тип Стратегии];
                                                   Description=TDVYNCS-1547,TDRANCS-1753,NCS-1841 }
    { 50454;  ;Strategy Name       ;Text20        ;CaptionML=[ENU=Strategy Name;
                                                              RUS=Имя Стратегии];
                                                   Description=TDVYNCS-1547,TDRANCS-1753 }
    { 50458;  ;Comment             ;Text250       ;CaptionML=[ENU=Comment;
                                                              RUS=Комментарии];
                                                   Description=NC MIO17 PCH,NCS-1753 }
    { 50480;  ;Fixing Currency Rate;Decimal       ;CaptionML=[ENU=Fixing Currency Rate;
                                                              RUS=Курс на дату фиксинга];
                                                   DecimalPlaces=0:15;
                                                   Description=NCS-1428.3 DP }
    { 50485;  ;Deal Currency Rate  ;Decimal       ;CaptionML=[ENU=Deal Currency Rate;
                                                              RUS=Курс на дату заключения сделки];
                                                   DecimalPlaces=0:15;
                                                   Description=NCS-1428.2 DP }
    { 50490;  ;MW ID               ;Text64        ;CaptionML=[ENU=MW ID;
                                                              RUS=MarketWire ID];
                                                   Description=NCS-1726.1 DP }
    { 50495;  ;Parent MW ID        ;Text64        ;CaptionML=[ENU=Parent MW ID;
                                                              RUS=MarketWire ID предыдущей сделки];
                                                   Description=NCS-1726.1 DP }
    { 50500;  ;CCP Deal ID         ;Text64        ;CaptionML=[ENU=СCP Deal ID;
                                                              RUS=ID сделки в клиринговом доме];
                                                   Description=NCS-1726.1 DP }
    { 50505;  ;MW_CONFIRM          ;Text10        ;CaptionML=[ENU=MW_CONFIRM;
                                                              RUS=Подтверждение];
                                                   Description=NCS-1726.1 DP }
    { 50510;  ;CL_STATUS           ;Text25        ;CaptionML=[ENU=CL_STATUS;
                                                              RUS=Статус клиринга];
                                                   Description=NCS-1726.1 DP }
    { 50515;  ;Mandatory clearing  ;Text3         ;CaptionML=[ENU=Mandatory clearing;
                                                              RUS=Признак обязатательного клиринга];
                                                   Description=NCS-1726.1 DP }
    { 50520;  ;CCP_NAME            ;Text128       ;CaptionML=[ENU=CCP_NAME;
                                                              RUS=Клиринговый дом];
                                                   Description=NCS-1726.1 DP }
    { 50525;  ;CL_BRK              ;Text64        ;CaptionML=[ENU=CL_BRK;
                                                              RUS=Клиринговый брокер];
                                                   Description=NCS-1726.1 DP }
    { 50530;  ;UTI                 ;Text32        ;CaptionML=[ENU=UTI;
                                                              RUS=UTI сделки];
                                                   Description=NCS-1726.4 DP }
    { 50535;  ;UTI prefix          ;Text64        ;CaptionML=[ENU=UTI prefix;
                                                              RUS=UTI префикс сделки];
                                                   Description=NCS-1726.1 DP }
    { 50540;  ;UTI Parent          ;Text32        ;CaptionML=[ENU=UTI Parent;
                                                              RUS=UTI предыдущей сделки];
                                                   Description=NCS-1726.4 DP }
    { 50545;  ;UTI parent prefix   ;Text64        ;CaptionML=[ENU=UTI parent prefix;
                                                              RUS=UTI префикс предыдущей сделки];
                                                   Description=NCS-1726.1 DP }
    { 50550;  ;Root Contract       ;Text25        ;CaptionML=[ENU=Root Contract;
                                                              RUS=Root Контракт];
                                                   Description=TDRANCS-1800 }
    { 51000;  ;Classif. Fin. Instrument;Code10    ;CaptionML=[ENU=Classif. Fin. Instrument;
                                                              RUS=Классификация Фин. Инструмента];
                                                   Description=TDRANCS-1753 }
    { 51010;  ;Product Complex     ;Code20        ;CaptionML=[ENU=Product Complex;
                                                              RUS=Типология Сделки];
                                                   Description=TDRANCS-1753 }
    { 51020;  ;Unwound Ration      ;Decimal       ;CaptionML=[ENU=Unwound Ration;
                                                              RUS=Процент Исполнения Сделки];
                                                   Description=TDRANCS-1753 }
    { 51030;  ;Book left FO        ;Code20        ;CaptionML=[ENU=Book left FO;
                                                              RUS=Book Слева Фронт Офис];
                                                   Description=TDRANCS-1753 }
    { 51040;  ;Book left BO        ;Code20        ;CaptionML=[ENU=Book left BO;
                                                              RUS=Book Слева Бэк Офис];
                                                   Description=TDRANCS-1753 }
    { 51050;  ;Book right FO       ;Code20        ;CaptionML=[ENU=Book right FO;
                                                              RUS=Book Справа Фронт Офис];
                                                   Description=TDRANCS-1753 }
    { 51060;  ;Book right BO       ;Code20        ;CaptionML=[ENU=Book right BO;
                                                              RUS=Book Справа Бэк Офис];
                                                   Description=TDRANCS-1753 }
    { 51070;  ;Deal Version        ;Integer       ;CaptionML=[ENU=Deal Version;
                                                              RUS=Версия Сделки];
                                                   Description=TDRANCS-1753 }
    { 51075;  ;CH Business Type    ;Integer       ;CaptionML=ENU=CH Business Type;
                                                   Description=NCS1884 SPA }
    { 51080;  ;Interest Frequency Days;Integer    ;CaptionML=[ENU=Interest frequency Days;
                                                              RUS=Interest frequency Days];
                                                   Description=NCS1884 SPA }
    { 51085;  ;Interest Rate Type  ;Integer       ;CaptionML=[ENU=Interest Rate Type;
                                                              RUS=Тип процентной ставки];
                                                   Description=NCS1884 SPA }
    { 51090;  ;Interest fixing date;Date          ;CaptionML=[ENU=Interest Fixing Date;
                                                              RUS=Interest Fixing Date];
                                                   Description=NCS1884 SPA }
    { 51095;  ;Payment frequency   ;Integer       ;CaptionML=[ENU=Payment frequency;
                                                              RUS=Частота платежей];
                                                   Description=NCS1884 SPA }
    { 51100;  ;First payment date  ;Date          ;CaptionML=[ENU=First payment date;
                                                              RUS=День первого платежа];
                                                   Description=NCS1884 SPA }
    { 51105;  ;Liquidity flag      ;Integer       ;CaptionML=[ENU=Liquidity flag;
                                                              RUS=Флаг Ликвидности];
                                                   Description=NCS1884 SPA }
    { 51110;  ;Contract volume     ;Decimal       ;CaptionML=[ENU=Contract volume;
                                                              RUS=Объем контракта];
                                                   Description=NCS1884 SPA }
    { 51115;  ;Original Type Deal  ;Code20        ;CaptionML=[ENU=Original Type Deal;
                                                              RUS=Оригинальный Тип Сделки];
                                                   Description=NCS1884 PCH }
    { 51120;  ;Period              ;Text10        ;CaptionML=[ENU=Period;
                                                              RUS=Период];
                                                   Description=NCS-1972,1978 }
    { 51121;  ;Period 2            ;Text10        ;CaptionML=[ENU=Period 2;
                                                              RUS=Период 2];
                                                   Description=NCS-1987 }
    { 51130;  ;periodMultiplier    ;Decimal       ;CaptionML=RUS=Кратность Периода;
                                                   Description=NCS-1972 }
    { 51131;  ;PeriodMultiplier 2  ;Decimal       ;CaptionML=[ENU=PeriodMultiplier 2;
                                                              RUS=Кратность Периода 2];
                                                   Description=NCS-1987 }
    { 51140;  ;Margin              ;Decimal       ;Description=NCS-1972 }
    { 51150;  ;Interest rate frequency;Decimal    ;CaptionML=[ENU=Interest rate frequency;
                                                              RUS=Частота Расчета Проц. Ставки];
                                                   Description=NCS-1972 }
    { 51151;  ;Interest Rate Frequency 2;Decimal  ;CaptionML=[ENU=Interest Rate Frequency 2;
                                                              RUS=Процентная Ставка 2];
                                                   Description=NCS-1987 }
    { 51160;  ;Fixed Rate 1        ;Decimal       ;Description=NCS-1972 }
    { 51161;  ;Manually Entered    ;Boolean       ;CaptionML=[ENU=Manually Entered;
                                                              RUS=Введена Вручную];
                                                   Description=NCS-1983 SB }
    { 51170;  ;Entry Type          ;Code10        ;CaptionML=[ENU=Entry Type;
                                                              RUS=Тип Записи];
                                                   Description=NCS-1992 PCH }
    { 51171;  ;Subordination Collateral;Boolean   ;CaptionML=[ENU=Subordination Collateral;
                                                              RUS=Субординир. Обеспечение];
                                                   Description=NCS-2098 SB }
    { 51172;  ;Subordination Collateral Link;Code20;
                                                   CaptionML=[ENU=Subordination Collateral Link;
                                                              RUS=Суборд. Связь с Обеспечением];
                                                   Description=NCS-2098 SB }
    { 51180;  ;Corresponding Deal  ;Code20        ;CaptionML=[ENU=Corresponding Deal;
                                                              RUS=Связанная Cделка];
                                                   Description=NCS-2182 }
    { 51190;  ;Date of 1st Deal_ Under Agreem;Date;CaptionML=[ENU=Date of 1st Deal_ Under Agreem;
                                                              RUS=Фиксированная дата оплаты 1];
                                                   Description=TDRANCS-2194 }
    { 51200;  ;Date of 2nd Deal_ Under Agreem;Date;CaptionML=[ENU=Date of 2nd Deal_ Under Agreem;
                                                              RUS=Фиксированная дата оплаты 2];
                                                   Description=TDRANCS-2194 }
    { 51210;  ;PayDate             ;Date          ;CaptionML=[ENU=PayDate;
                                                              RUS=Дата Платежа];
                                                   Description=TDRANCS-2194 }
    { 51230;  ;RtClient            ;Code20        ;CaptionML=[ENU=RtClient;
                                                              RUS=Реальный Контрагент Код];
                                                   Description=TDRANCS-2194 }
    { 51240;  ;RealCPMicex         ;Text20        ;CaptionML=[ENU=RealCPMicex;
                                                              RUS=Реальный Контрагент Название];
                                                   Description=TDRANCS-2194 }
    { 51250;  ;REPO Rate           ;Decimal       ;CaptionML=[ENU=REPO Rate;
                                                              RUS=РЕПО Курс];
                                                   Description=TDRANCS-2194 }
    { 51260;  ;Condition           ;Integer       ;CaptionML=[ENU=Condition;
                                                              RUS=Условия];
                                                   Description=TDRANCS-2194 }
    { 51270;  ;Date of 1st Deal_ Fact;Date        ;CaptionML=[ENU=Date of 1st Deal_ Fact;
                                                              RUS=Дата Исполнения Первой Части\Фактическая];
                                                   Description=TDRANCS-2194 }
    { 51280;  ;Date of 2nd Deal_ Fact;Date        ;CaptionML=[ENU=Date of 2nd Deal_ Fact;
                                                              RUS=Дата Исполнения Второй Части\Фактическая];
                                                   Description=TDRANCS-2194 }
    { 51290;  ;Tax Derivative      ;Boolean       ;CaptionML=[ENU=Tax Derivative;
                                                              RUS=НУ ПФИ];
                                                   Description=NCS-2210 AAP }
  }
  KEYS
  {
    {    ;Deal ID                                 ;Clustered=Yes }
    {    ;Rec ID                                   }
    {    ;Type Deal                                }
    {    ;Number,Root Contract                     }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      MovingDataSetup@1101495000 : Record 50064;
      DimValue@1101495001 : Record 349;
      oldDeal@1000000000 : Record 50037;
      RenameRef@1000000001 : Codeunit 50029;
      ErrorCode@1000000002 : Code[10];
      ErrorText@1000000003 : Text[250];
      VendAgree@1000000004 : Record 14901;
      CustAgree@1000000005 : Record 14902;
      Text001@1101495003 : TextConst 'ENU=Agreement No. %1 For Customer %2 Not Found;RUS=Договор номер %1 для клиента %2 не найден';
      Text002@1101495002 : TextConst 'ENU=Agreement No. %1 For Vendor %2 Not Found;RUS=Договор номер %1 для поставщика %2 не найден';
      GV@1101495006 : Codeunit 50033;
      DimensionMgt@1101495005 : Codeunit 408;
      DealType@1101495004 : Record 50038;
      ConsSetup@1101495007 : Record 50000;

    PROCEDURE ShowGLEntries@1000000000();
    VAR
      GLEntry@1000000001 : Record 17;
      DimensionSetEntry@1101495000 : Record 480;
    BEGIN
      //NC NOS-26 > ENK
      //NC MDB05.2 > DP
      {
      MovingDataSetup.GET;
      LEDim.SETCURRENTKEY("Table ID");
      LEDim.SETRANGE("Table ID",DATABASE::"G/L Entry");
      LEDim.SETRANGE("Dimension Code",MovingDataSetup."Deal Dimension Code");
      LEDim.SETRANGE("Dimension Value Code","Deal ID");
      IF LEDim.FINDSET THEN
        REPEAT
          GLEntry.GET(LEDim."Entry No.");
          GLEntry.MARK(TRUE);
          //GLEntry.MODIFY;
        UNTIL LEDim.NEXT=0;
      GLEntry.MARKEDONLY(TRUE);
      FORM.RUN(0,GLEntry);
      }
      MovingDataSetup.GET;
      DimensionSetEntry.SETRANGE("Dimension Code", MovingDataSetup."Deal Dimension Code");
      DimensionSetEntry.SETRANGE("Dimension Value Code","Deal ID");
      IF DimensionSetEntry.FINDSET THEN
        REPEAT
          GLEntry.SETRANGE("Dimension Set ID",DimensionSetEntry."Dimension Set ID");
          IF GLEntry.FINDSET THEN
            REPEAT
              GLEntry.MARK(TRUE);
            UNTIL GLEntry.NEXT = 0;
        UNTIL DimensionSetEntry.NEXT = 0;
      GLEntry.MARKEDONLY(TRUE);
      PAGE.RUN(0,GLEntry);
      //NC MDB05.2 < DP
      //NC NOS-26 < ENK
    END;

    PROCEDURE CopyUsingLE@1101495000(UsingLE@1101495000 : Code[15]);
    VAR
      Company@1101495001 : Record 2000000006;
      Deal@1101495002 : Record 50037;
    BEGIN
      IF UsingLE = '' THEN
        EXIT;
      Company.RESET;
      Company.SETRANGE("Legal Entity Id",UsingLE);
      IF NOT Company.FINDFIRST THEN
        EXIT;
      IF Company.Name = COMPANYNAME THEN
        EXIT;
      Deal.CHANGECOMPANY(Company.Name);
      Deal := Rec;
      IF NOT Deal.INSERT THEN
        Deal.MODIFY;
    END;

    PROCEDURE CreateCounterparty@1101495001();
    VAR
      VendorAgreement@1101495004 : Record 14901;
      VendorAgreement1@1101495000 : Record 14901;
      CustomerAgreement@1101495003 : Record 14902;
      CustomerAgreement1@1101495007 : Record 14902;
      LinkedDimensionValue@1101495002 : Record 50016;
      ConsSetup@1101495001 : Record 50000;
      MappingLE@1101495005 : Record 50075;
      CM@1101495006 : Codeunit 50000;
      GLSetup@1101495008 : Record 98;
    BEGIN
      //NC MTD002 > AIG
      GLSetup.GET;
      IF Rec."Trade Direction" = Rec."Trade Direction"::Purchase THEN BEGIN

        MappingLE.RESET;
        MappingLE.SETRANGE("External Id Legal Entity", Rec."Company No.");
        //TDRANCS-1592>
        //IF MappingLE.FINDFIRST THEN BEGIN
        IF MappingLE.FINDFIRST AND ("Customer No." <> '') THEN BEGIN
        //TDRANCS-1592<
          CM.CreateVendorCard('', Rec."Customer No.");
          //создаем договор
          IF VendorAgreement.CHANGECOMPANY(MappingLE."Company No.") THEN
          BEGIN
            VendorAgreement1.CHANGECOMPANY(MappingLE."Company No.");
            VendorAgreement.SetCurrCompany(MappingLE."Company No.");
            VendorAgreement.INIT;
            VendorAgreement."Vendor No." := Rec."Customer No.";
            VendorAgreement."No." := Rec."Deal ID";
            //NC MTD002.1 > AKU
            IF NOT VendorAgreement.GET(VendorAgreement."Vendor No.", VendorAgreement."No.") THEN
              VendorAgreement.INSERT(TRUE);
            //NC MTD002.1 < AKU

            VendorAgreement."External Agreement No." := Rec."Deal ID";
            VendorAgreement.Description := Rec."Deal ID";
            VendorAgreement.Active := TRUE;
            VendorAgreement."Deal No." := Rec."Deal ID";

            IF GLSetup."LCY Code" = Rec.Currency THEN
              VendorAgreement."Currency Code" := ''
            ELSE
              VendorAgreement."Currency Code" := Rec.Currency;
            VendorAgreement."Agreement Type" := VendorAgreement."Agreement Type"::Trade;
            //NC MTD002.1 > AKU
            {
            IF NOT VendorAgreement1.GET(VendorAgreement."Vendor No.", VendorAgreement."No.") THEN
              VendorAgreement.INSERT(TRUE)
            ELSE
            }
            //NC MTD002.1 < AKU
              VendorAgreement.MODIFY(TRUE);
            //IF NOT VendorAgreement.INSERT(TRUE) THEN  // нельзя так делать, PCH
            //  VendorAgreement.MODIFY(TRUE);
          END;
        END;

        //проверяем IC
        ConsSetup.GET;
        IF LinkedDimensionValue.GET(ConsSetup."Counterparty Dim Code",Rec."Customer No.",ConsSetup."IC Dimension Code") THEN
        BEGIN
          MappingLE.RESET;

          //NC NCS-2245 > DP
          MappingLE.SETRANGE("External Id Legal Entity", LinkedDimensionValue."Linked Dimension Value");
          {
          MappingLE.SETRANGE("External Id Legal Entity", Rec."Customer No.");
          }
          //NC NCS-2245 < DP

          //NC S1858 > PCH
          //IF MappingLE.FINDFIRST THEN BEGIN
          IF MappingLE.FINDFIRST AND ("Company No." <> '') THEN BEGIN
          //NC S1858 < PCH
            IF CustomerAgreement.CHANGECOMPANY(MappingLE."Company No.") THEN
            BEGIN
              CustomerAgreement1.CHANGECOMPANY(MappingLE."Company No.");
              CustomerAgreement.SetCurrCompany(MappingLE."Company No.");
              CustomerAgreement.INIT;
              CustomerAgreement."Customer No." := Rec."Company No.";
              CustomerAgreement."No." := Rec."Deal ID";
              //NC MTD002.1 > AKU
              IF NOT CustomerAgreement.GET(CustomerAgreement."Customer No.", CustomerAgreement."No.") THEN
                CustomerAgreement.INSERT(TRUE);
              //NC MTD002.1 < AKU
              CustomerAgreement."External Agreement No." := Rec."Deal ID";
              CustomerAgreement.Description := Rec."Deal ID";
              CustomerAgreement.Active := TRUE;
              CustomerAgreement."Deal No." := Rec."Deal ID";
              IF GLSetup."LCY Code" = Rec.Currency THEN
                CustomerAgreement."Currency Code" := ''
              ELSE
                CustomerAgreement."Currency Code" := Rec.Currency;
              CustomerAgreement."Agreement Type" := CustomerAgreement."Agreement Type"::Trade;
              //NC MTD002.1 > AKU
              {
              IF NOT CustomerAgreement1.GET(CustomerAgreement."Customer No.", CustomerAgreement."No.") THEN
                CustomerAgreement.INSERT(TRUE)
              ELSE
              }
              //NC MTD002.1 < AKU
                CustomerAgreement.MODIFY(TRUE);
              //IF NOT CustomerAgreement.INSERT(TRUE) THEN // нельзя так делать, PCH
              //  CustomerAgreement.MODIFY(TRUE);
            END;
          END;
        END;
      END;

      IF Rec."Trade Direction" = Rec."Trade Direction"::Sale THEN BEGIN
        MappingLE.RESET;
        MappingLE.SETRANGE("External Id Legal Entity", Rec."Company No.");
        //NC S1858 > PCH
        //IF MappingLE.FINDFIRST THEN BEGIN
        IF MappingLE.FINDFIRST AND ("Customer No." <> '') THEN BEGIN
        //NC S1858 < PCH
          IF CustomerAgreement.CHANGECOMPANY(MappingLE."Company No.") THEN
          BEGIN
            CustomerAgreement1.CHANGECOMPANY(MappingLE."Company No.");
            CustomerAgreement.SetCurrCompany(MappingLE."Company No.");
            CustomerAgreement.INIT;
            CustomerAgreement."Customer No." := Rec."Customer No.";
            CustomerAgreement."No." := Rec."Deal ID";
            //NC MTD002.1 > AKU
            IF NOT CustomerAgreement.GET(CustomerAgreement."Customer No.", CustomerAgreement."No.") THEN
              CustomerAgreement.INSERT(TRUE);
            //NC MTD002.1 < AKU
            CustomerAgreement."External Agreement No." := Rec."Deal ID";
            CustomerAgreement.Description := Rec."Deal ID";
            CustomerAgreement.Active := TRUE;

            CustomerAgreement."Deal No." := Rec."Deal ID";
            IF GLSetup."LCY Code" = Rec.Currency THEN
              CustomerAgreement."Currency Code" := ''
            ELSE
              CustomerAgreement."Currency Code" := Rec.Currency;
            CustomerAgreement."Agreement Type" := CustomerAgreement."Agreement Type"::Trade;
            //NC MTD002.1 > AKU
            {
            IF NOT CustomerAgreement1.GET(CustomerAgreement."Customer No.", CustomerAgreement."No.") THEN
              CustomerAgreement.INSERT(TRUE)
            ELSE
            }
            //NC MTD002.1 < AKU
              CustomerAgreement.MODIFY(TRUE);

            //IF NOT CustomerAgreement.INSERT(TRUE) THEN  // нельзя так делать, PCH
            //  CustomerAgreement.MODIFY(TRUE);

          END;
        END;

        //проверяем IC
        ConsSetup.GET;
        IF LinkedDimensionValue.GET(ConsSetup."Counterparty Dim Code",Rec."Customer No.",ConsSetup."IC Dimension Code") THEN
        BEGIN
          MappingLE.RESET;

          //NC NCS-2245 > DP
          MappingLE.SETRANGE("External Id Legal Entity", LinkedDimensionValue."Linked Dimension Value");
          {
          MappingLE.SETRANGE("External Id Legal Entity", Rec."Customer No.");
          }
          //NC NCS-2245 < DP

          //NC S1858 > PCH
          //IF MappingLE.FINDFIRST THEN BEGIN
          IF MappingLE.FINDFIRST AND ("Company No." <> '') THEN BEGIN
          //NC S1858 < PCH

            CM.CreateVendorCard('', Rec."Company No.");
            IF VendorAgreement.CHANGECOMPANY(MappingLE."Company No.") THEN
            BEGIN
              VendorAgreement1.CHANGECOMPANY(MappingLE."Company No.");
              VendorAgreement.SetCurrCompany(MappingLE."Company No.");
              VendorAgreement.INIT;
              VendorAgreement."Vendor No." := Rec."Company No.";
              VendorAgreement."No." := Rec."Deal ID";
              //NC MTD002.1 > AKU
              IF NOT VendorAgreement.GET(VendorAgreement."Vendor No.", VendorAgreement."No.") THEN
                VendorAgreement.INSERT(TRUE);
              //NC MTD002.1 < AKU
              VendorAgreement."External Agreement No." := Rec."Deal ID";
              VendorAgreement.Description := Rec."Deal ID";
              VendorAgreement.Active := TRUE;
              VendorAgreement."Deal No." := Rec."Deal ID";
              IF GLSetup."LCY Code" = Rec.Currency THEN
                VendorAgreement."Currency Code" := ''
              ELSE
                VendorAgreement."Currency Code" := Rec.Currency;
              VendorAgreement."Agreement Type" := VendorAgreement."Agreement Type"::Trade;
              //NC MTD002.1 > AKU
              {
              IF NOT VendorAgreement1.GET(VendorAgreement."Vendor No.", VendorAgreement."No.") THEN
                VendorAgreement.INSERT(TRUE)
              ELSE
              }
              //NC MTD002.1 < AKU
                VendorAgreement.MODIFY(TRUE);

              //IF NOT VendorAgreement.INSERT(TRUE) THEN  // нельзя так делать, PCH
              //  VendorAgreement.MODIFY(TRUE);
            END;
          END;
        END;
      END;
      //NC MTD002 < AIG
    END;

    PROCEDURE CreateAgreement@1000000001();
    VAR
      CAgreement@1000000000 : Record 14902;
      VAgreement@1000000001 : Record 14901;
      AgreementDetail@1101495001 : Record 50096;
    BEGIN
      //NC NCS-1131 > DP
      TESTFIELD("Deal ID");
      TESTFIELD("Customer No.");
      TESTFIELD("Agreement Date");

      //NC NCS-2140 > DP
      ConsSetup.GET;
      {
      IF "Trade Direction" = "Trade Direction"::Purchase THEN BEGIN
      }
      IF ("Trade Direction" = "Trade Direction"::Purchase) AND NOT ConsSetup."Use Customer Only" THEN BEGIN
      //NC NCS-2140 > DP

        VAgreement.INIT;
        VAgreement.VALIDATE("Vendor No.", "Customer No.");
        VAgreement.VALIDATE("No.", "Deal ID");
        VAgreement.VALIDATE(Description, "Deal ID");
        VAgreement.VALIDATE("External Agreement No.", "Deal ID");
        VAgreement.VALIDATE("Deal No.", "Deal ID");
        VAgreement.VALIDATE("Currency Code", Currency);
        VAgreement.VALIDATE("Agreement Date", "Agreement Date");
        VAgreement.Active := TRUE;
        VAgreement."Agreement Type" := VAgreement."Agreement Type"::Trade;
        VAgreement."Type Deal" := "Type Deal";
        IF DealType.GET("Type Deal") THEN BEGIN
          IF DealType."Create Agreement" THEN BEGIN
            VAgreement."Agreement Type" := DealType."Agreement Type";
            VAgreement.VALIDATE("External Agreement No.", "Agreement No.");
            VAgreement.VALIDATE("Starting Date", "Agreement Date");
            VAgreement.VALIDATE("Expire Date","Maturity Date");

            //NC NCS-1131.3 > DP
            IF DealType."Vendor Posting Group"<>'' THEN
              VAgreement.VALIDATE("Vendor Posting Group",DealType."Vendor Posting Group");
            //NC NCS-1131.3 < DP

            //NC NCS-1131.5 > DP
            {
            IF NOT VAgreement.INSERT THEN VAgreement.MODIFY;
            }
            IF NOT VAgreement.INSERT(TRUE) THEN VAgreement.MODIFY(TRUE);
            //NC NCS-1131.5 < DP

          END ELSE

            //NC NCS-1131.5 > DP
            {
            IF NOT VAgreement.INSERT THEN VAgreement.MODIFY;
            }
            IF NOT VAgreement.INSERT(TRUE) THEN VAgreement.MODIFY(TRUE);
            //NC NCS-1131.5 < DP

          DealType.TESTFIELD("Mappning Code");
          AddDefDimForAgr(DATABASE::"Vendor Agreement","Customer No.","Deal ID",DealType."Mappning Code");
          IF DealType."Agreement Type"=DealType."Agreement Type"::Loans THEN BEGIN
            AgreementDetail.INIT;
            AgreementDetail."Source Type" := AgreementDetail."Source Type"::Vendor;
            AgreementDetail."Source No." := "Customer No.";
            AgreementDetail."Agreement No." := "Deal ID";
            AgreementDetail."Condition No." := 1;
            AgreementDetail."Agreement Type" := AgreementDetail."Agreement Type"::Loans;
            AgreementDetail."Use Default" := TRUE;
            AgreementDetail."Condition Type" := AgreementDetail."Condition Type"::New;
            AgreementDetail."Action Date" := "Agreement Date";
            AgreementDetail."Finish Date" := "Maturity Date";
            AgreementDetail."Currency Code" :=Currency;
            AgreementDetail.Amount := Quantity;
            ///360, 364, 365, 366, ACT, ACT ISDA --> 360,365,Fact
            CASE RBASIS OF
              360:
                AgreementDetail."Quant.Days in Year" := AgreementDetail."Quant.Days in Year"::"360";
              365:
                AgreementDetail."Quant.Days in Year" := AgreementDetail."Quant.Days in Year"::"365";
              ELSE
                AgreementDetail."Quant.Days in Year" := AgreementDetail."Quant.Days in Year"::Fact;
            END;
            AgreementDetail."Interest Rate" := "Fixed Interest Rate 1";
            IF NOT AgreementDetail.INSERT THEN AgreementDetail.MODIFY;
          END;

        END ELSE

          //NC NCS-1131.5 > DP
          {
          VAgreement.INSERT;
          }
          VAgreement.INSERT(TRUE);
          //NC NCS-1131.5 < DP

        COMMIT;
      END;

      //NC NCS-2140 > DP
      {
      IF "Trade Direction" = "Trade Direction"::Sale THEN BEGIN
      }
      IF ("Trade Direction" = "Trade Direction"::Sale) OR ConsSetup."Use Customer Only" THEN BEGIN
      //NC NCS-2140 < DP

        CAgreement.INIT;
        CAgreement.VALIDATE("Customer No.", "Customer No.");
        CAgreement.VALIDATE("No.", "Deal ID");
        CAgreement.VALIDATE(Description, "Deal ID");
        CAgreement.VALIDATE("External Agreement No.", "Deal ID");
        CAgreement.VALIDATE("Deal No.", "Deal ID");
        CAgreement.VALIDATE("Currency Code", Currency);
        CAgreement.VALIDATE("Agreement Date", "Agreement Date");
        CAgreement.Active := TRUE;
        CAgreement."Agreement Type" := VAgreement."Agreement Type"::Trade;
        CAgreement."Type Deal" := "Type Deal";
        IF DealType.GET("Type Deal") THEN BEGIN
          IF DealType."Create Agreement" THEN BEGIN
            CAgreement."Agreement Type" := DealType."Agreement Type";
            CAgreement.VALIDATE("External Agreement No.", "Agreement No.");
            CAgreement.VALIDATE("Starting Date", "Agreement Date");
            CAgreement.VALIDATE("Expire Date","Maturity Date");
            //NC NCS-1131.3 > DP
            IF DealType."Customer Posting Group"<>'' THEN
              CAgreement.VALIDATE("Customer Posting Group",DealType."Customer Posting Group");
            //NC NCS-1131.3 < DP

            //NC NCS-1131.5 > DP
            {
            IF NOT CAgreement.INSERT THEN CAgreement.MODIFY;
            }
            IF NOT CAgreement.INSERT(TRUE) THEN CAgreement.MODIFY(TRUE);
            //NC NCS-1131.5 < DP

          END ELSE

            //NC NCS-1131.5 > DP
            {
            IF NOT CAgreement.INSERT THEN CAgreement.MODIFY;
            }
            IF NOT CAgreement.INSERT(TRUE) THEN CAgreement.MODIFY(TRUE);
            //NC NCS-1131.5 < DP

          DealType.TESTFIELD("Mappning Code");
          AddDefDimForAgr(DATABASE::"Customer Agreement","Customer No.","Deal ID",DealType."Mappning Code");
          IF DealType."Agreement Type"=DealType."Agreement Type"::Loans THEN BEGIN
            AgreementDetail.INIT;
            AgreementDetail."Source Type" := AgreementDetail."Source Type"::Customer;
            AgreementDetail."Source No." := "Customer No.";
            AgreementDetail."Agreement No." := "Deal ID";
            AgreementDetail."Condition No." := 1;
            AgreementDetail."Agreement Type" := AgreementDetail."Agreement Type"::Loans;
            AgreementDetail."Use Default" := TRUE;
            AgreementDetail."Condition Type" := AgreementDetail."Condition Type"::New;
            AgreementDetail."Action Date" := "Agreement Date";
            AgreementDetail."Finish Date" := "Maturity Date";
            AgreementDetail."Currency Code" :=Currency;
            AgreementDetail.Amount := Quantity;
            ///360, 364, 365, 366, ACT, ACT ISDA --> 360,365,Fact
            CASE RBASIS OF
              360:
                AgreementDetail."Quant.Days in Year" := AgreementDetail."Quant.Days in Year"::"360";
              365:
                AgreementDetail."Quant.Days in Year" := AgreementDetail."Quant.Days in Year"::"365";
              ELSE
                AgreementDetail."Quant.Days in Year" := AgreementDetail."Quant.Days in Year"::Fact;
            END;
            AgreementDetail."Interest Rate" := "Fixed Interest Rate 1";
            IF NOT AgreementDetail.INSERT THEN AgreementDetail.MODIFY;
          END;
        END ELSE

          //NC NCS-1131.5 > DP
          {
          CAgreement.INSERT;
          }
          CAgreement.INSERT(TRUE);
          //NC NCS-1131.5 < DP

        COMMIT;
      END;
      //NC NCS-1131 < DP
    END;

    PROCEDURE ShowAgreement@1000000002();
    VAR
      CAgreementRec@1000000000 : Record 14902;
      VAgreementRec@1000000001 : Record 14901;
      CAgreementRecForm@1101495001 : Page 14901;
      VAgreementRecForm@1101495000 : Page 14902;
    BEGIN
      //NC NCS-1131 > DP
      IF "Trade Direction" = "Trade Direction"::Sale THEN BEGIN
        CAgreementRec.SETRANGE("Customer No.", "Customer No.");
        CAgreementRec.SETRANGE("No.", "Deal ID");
        IF CAgreementRec.FINDFIRST THEN BEGIN
          CAgreementRecForm.SETRECORD(CAgreementRec);
          CAgreementRecForm.RUNMODAL;
        END ELSE
          ERROR(Text001, "Deal ID", "Customer No.");
      END;

      IF "Trade Direction" = "Trade Direction"::Purchase THEN BEGIN
        VAgreementRec.SETRANGE("Vendor No.", "Customer No.");
        VAgreementRec.SETRANGE("No.", "Deal ID");
        IF VAgreementRec.FINDFIRST THEN BEGIN
          VAgreementRecForm.SETRECORD(VAgreementRec);
          VAgreementRecForm.RUNMODAL;
        END ELSE
          ERROR(Text001, "Deal ID", "Customer No.");
      END;
      //NC NCS-1131 < DP
    END;

    PROCEDURE AddDefDimForAgr@1101495002(TableNo@1101495000 : Integer;SourceNo@1101495009 : Code[20];AgrNo@1101495001 : Code[20];MappCode@1101495008 : Code[20]);
    VAR
      DefDim@1101495004 : Record 50128;
      DefDim2@1101495006 : Record 352;
      Deal@1101495003 : Record 50037;
      FI@1101495002 : Record 50021;
      DimValue@1101495005 : Record 349;
      DimMapping@1101495007 : Record 50003;
      IncTaxDimCode@1101495010 : Code[20];
    BEGIN
      //NC NCS-1131 > DP
      MovingDataSetup.GET;
      MovingDataSetup.TESTFIELD("BOOK Dimension Code");
      MovingDataSetup.TESTFIELD("Customer Dimension Code");
      MovingDataSetup.TESTFIELD("PROFIT CENTER Dimension Code");
      MovingDataSetup.TESTFIELD("FI Dimension Code");
      MovingDataSetup.TESTFIELD("INC.TAX Dimension Code");
      MovingDataSetup.TESTFIELD("Deal Dimension Code");
      IF Deal.GET(AgrNo) THEN BEGIN
        IF DimValue.GET(MovingDataSetup."Deal Dimension Code",AgrNo) THEN BEGIN
          DefDim.INIT;
          DefDim."Table ID" := TableNo;
          DefDim."Source No." := SourceNo;
          DefDim."No." := AgrNo;
          DefDim."Dimension Code" := MovingDataSetup."Deal Dimension Code";
          DefDim."Dimension Value Code" := AgrNo;
          DefDim."Value Posting" := DefDim."Value Posting"::"Same Code";
          IF DefDim.INSERT(TRUE) THEN;
        END;

        IF (Deal."Customer No." <> '') AND DimValue.GET(MovingDataSetup."Customer Dimension Code",Deal."Customer No.") THEN BEGIN
          DefDim.INIT;
          DefDim."Table ID" := TableNo;
          DefDim."Source No." := SourceNo;
          DefDim."No." := AgrNo;
          DefDim."Dimension Code" := MovingDataSetup."Customer Dimension Code";
          DefDim."Dimension Value Code" := Deal."Customer No.";
          IF DefDim.INSERT(TRUE) THEN;
        END;

        IF (Deal.Book <> '') AND DimValue.GET(MovingDataSetup."BOOK Dimension Code",Deal.Book) THEN BEGIN
          DefDim.INIT;
          DefDim."Table ID" := TableNo;
          DefDim."Source No." := SourceNo;
          DefDim."No." := AgrNo;
          DefDim."Dimension Code" := MovingDataSetup."BOOK Dimension Code";
          DefDim."Dimension Value Code" := Deal.Book;

          //NC NCS-1347 > DP
          DefDim."Value Posting" :=DefDim."Value Posting"::"Code Mandatory";
          //NC NCS-1347 < DP

          IF DefDim.INSERT(TRUE) THEN;


          DefDim.INIT;
          DefDim."Table ID" := TableNo;
          DefDim."Source No." := SourceNo;
          DefDim."No." := AgrNo;
          DefDim."Dimension Code" := MovingDataSetup."PROFIT CENTER Dimension Code";
          DefDim."Dimension Value Code" := '';

          DimMapping.RESET;
          DimMapping.SETRANGE("Mapping Code",MappCode);
          DimMapping.SETRANGE("Receiver Dimension Code",MovingDataSetup."PROFIT CENTER Dimension Code");
          DimMapping.SETFILTER("Receiver Dimension Value Code",'<>%1','');
          DimMapping.SETFILTER("Company Name",'%1',COMPANYNAME);

          IF GV.FIND_DimMapping(DimMapping) THEN REPEAT
            IF (DimMapping."Source Dimension Code" = MovingDataSetup."BOOK Dimension Code")
              AND (DimMapping."Source Dimension Value Code" = Deal.Book) THEN
              DefDim."Dimension Value Code" := DimMapping."Receiver Dimension Value Code";
            IF (DimMapping."Source Dimension Code 2" = MovingDataSetup."BOOK Dimension Code")
              AND (DimMapping."Source Dimension Value Code 2" = Deal.Book) THEN
              DefDim."Dimension Value Code" := DimMapping."Receiver Dimension Value Code";
            IF (DimMapping."Source Dimension Code 3" = MovingDataSetup."BOOK Dimension Code")
              AND (DimMapping."Source Dimension Value Code 3" = Deal.Book) THEN
              DefDim."Dimension Value Code" := DimMapping."Receiver Dimension Value Code";
          UNTIL (GV.NEXT_DimMapping(DimMapping) = 0) OR (DefDim."Dimension Value Code" <> '');

          IF DefDim."Dimension Value Code" = '' THEN BEGIN
            DimMapping.SETFILTER("Company Name",'%1','');
            IF GV.FIND_DimMapping(DimMapping) THEN REPEAT
              IF (DimMapping."Source Dimension Code" = MovingDataSetup."BOOK Dimension Code")
                AND (DimMapping."Source Dimension Value Code" = Deal.Book) THEN
                DefDim."Dimension Value Code" := DimMapping."Receiver Dimension Value Code";
                IF (DimMapping."Source Dimension Code 2" = MovingDataSetup."BOOK Dimension Code")
                AND (DimMapping."Source Dimension Value Code 2" = Deal.Book) THEN
                   DefDim."Dimension Value Code" := DimMapping."Receiver Dimension Value Code";
                IF (DimMapping."Source Dimension Code 3" = MovingDataSetup."BOOK Dimension Code")
                AND (DimMapping."Source Dimension Value Code 3" = Deal.Book) THEN
                   DefDim."Dimension Value Code" := DimMapping."Receiver Dimension Value Code";
            UNTIL (GV.NEXT_DimMapping(DimMapping) = 0) OR (DefDim."Dimension Value Code" <> '');
         END;

         //NC NCS-1347 > DP
         DefDim."Value Posting" :=DefDim."Value Posting"::"Code Mandatory";
         //NC NCS-1347 < DP

         IF DefDim."Dimension Value Code" <> '' THEN
          IF DefDim.INSERT(TRUE) THEN;
        END;

        //NC NCS-1131.5 > DP
        IncTaxDimCode := DealType.Duty;
        IF IncTaxDimCode <> '' THEN BEGIN
          MovingDataSetup.TESTFIELD("INC.TAX Dimension Code");
          DefDim.INIT;
          DefDim."Table ID" := TableNo;
          DefDim."Source No." := SourceNo;
          DefDim."No." := AgrNo;
          DefDim."Dimension Code" := MovingDataSetup."INC.TAX Dimension Code";
          DefDim."Dimension Value Code" := IncTaxDimCode;

          //NC NCS-1347.1 > DP
          DefDim."Value Posting" :=DefDim."Value Posting"::"Code Mandatory";
          //NC NCS-1347.1 < DP

          IF DefDim.INSERT(TRUE) THEN;
        END;
        //NC NCS-1131.5 < DP

        IF Deal."Financial instrument No." <> '' THEN BEGIN
          IF DimValue.GET(MovingDataSetup."FI Dimension Code",Deal."Financial instrument No.") THEN BEGIN
            DefDim.INIT;
            DefDim."Table ID" := TableNo;
            DefDim."Source No." := SourceNo;
            DefDim."No." := AgrNo;
            DefDim."Dimension Code" := MovingDataSetup."FI Dimension Code";
            DefDim."Dimension Value Code" := Deal."Financial instrument No.";
            IF DefDim.INSERT(TRUE) THEN;
          END;


          //NC NCS-1131.4 > DP
          //NC NCS-1131.5 > DP
          IncTaxDimCode :='';
          {
          IncTaxDimCode := DealType.Duty;
          }
          //NC NCS-1131.5 < DP
          {
          FI.GET(Deal."Financial instrument No.");
          IncTaxDimCode := FI.GetIncTaxDimCode;
          IF IncTaxDimCode IN ['','MIXED'] THEN BEGIN
            IF FI."Underlying Asset" <> '' THEN BEGIN
              FI.GET(FI."Underlying Asset");
              IncTaxDimCode := FI.GetIncTaxDimCode;
            END;
          END;
          }
          //NC NCS-1131.4 < DP

          IF IncTaxDimCode <> '' THEN BEGIN
            MovingDataSetup.TESTFIELD("INC.TAX Dimension Code");
            DefDim.INIT;
            DefDim."Table ID" := TableNo;
            DefDim."Source No." := SourceNo;
            DefDim."No." := AgrNo;
            DefDim."Dimension Code" := MovingDataSetup."INC.TAX Dimension Code";
            DefDim."Dimension Value Code" := IncTaxDimCode;

            //NC NCS-1347 > DP
            DefDim."Value Posting" :=DefDim."Value Posting"::"Code Mandatory";
            //NC NCS-1347 < DP

            IF DefDim.INSERT(TRUE) THEN;
          END;
        END;


      END;
      //NC NCS-1131 < DP
    END;

    PROCEDURE fn_DealFromAgrCreate@1000000003(p_RecRef@1000000000 : RecordRef) r_bool : Boolean;
    VAR
      l_recDealType@1000000006 : Record 50038;
      l_FieldRef@1000000001 : FieldRef;
      l_int@1000000002 : Integer;
    BEGIN
      //TDRANCS-1405
      FOR l_int := 1 TO p_RecRef.FIELDCOUNT DO BEGIN
        l_FieldRef := p_RecRef.FIELDINDEX(l_int);
        CASE l_FieldRef.NUMBER OF
          2: "Deal ID" := l_FieldRef.VALUE;
          50000,50001: BEGIN
            IF FORMAT(l_FieldRef.TYPE) = 'Option' THEN BEGIN
              CASE FORMAT(l_FieldRef.VALUE) OF
                '0':              //'Standard'
                  IF "Type Deal" = '' THEN
                    IF l_recDealType.GET('UNKNOWN') THEN
                      "Type Deal" := l_recDealType.Code;
                '2':              //'Loans'
                  IF "Type Deal" = '' THEN
                    IF l_recDealType.GET('LOAN') THEN
                      "Type Deal" := l_recDealType.Code;
              END;
            END;
          END;
          22: Currency := l_FieldRef.VALUE;
          1: "Customer No." := l_FieldRef.VALUE;
          5: "Agreement Date" :=  l_FieldRef.VALUE;
          7: "Trade Date" := l_FieldRef.VALUE;
          8: "Maturity Date" := l_FieldRef.VALUE;
        END;
      END;

      IF INSERT(TRUE) THEN r_bool := TRUE;
    END;

    PROCEDURE fn_DealFromAgrUpdate@1000000004(p_RecRef@1000000000 : RecordRef) r_bool : Boolean;
    VAR
      l_recDealType@1000000006 : Record 50038;
      l_FieldRef@1000000001 : FieldRef;
      l_recDeal@1000000003 : Record 50037;
      l_int@1000000002 : Integer;
    BEGIN
      //TDRANCS-1479
      FOR l_int := 1 TO p_RecRef.FIELDCOUNT DO BEGIN
        l_FieldRef := p_RecRef.FIELDINDEX(l_int);
        CASE l_FieldRef.NUMBER OF
          50000:
            IF p_RecRef.NUMBER = DATABASE::"Customer Agreement" THEN
              "Deal ID" := l_FieldRef.VALUE;
          50010:
            IF p_RecRef.NUMBER = DATABASE::"Vendor Agreement" THEN
              "Deal ID" := l_FieldRef.VALUE;
          8: "Maturity Date" := l_FieldRef.VALUE;
        END;
      END;

      IF l_recDeal.GET("Deal ID") THEN BEGIN
        l_recDeal."Deal ID" := "Deal ID";
        l_recDeal."Maturity Date" := "Maturity Date";
        IF l_recDeal.MODIFY THEN r_bool := TRUE;
      END;
    END;

    BEGIN
    {
      NC MDB01 PCH Создана таблица
      NC MDB01 PCH Работа с измернием DEAL
      NC MDB05.2 DP Вывод связанных записей Фин. Книги Операций - функция ShowGLEntries
      NC OAM01 PCH таблица унакальная для всех фирм
      NC MTD002 AIG Добавлена функция CreateCounterparty
      NC MTD002.1 AKU Функция CreateCounterparty. Исправлена ошибка с кодом валюты при создании договора.
      TDRAAPCOC-101>
        Change Property Decimal Places to 2:6, fields "Fixed Interest Rate 1" and "Fixed Interest Rate 2"
      TDAPCOC-100 >
        ADD Field Index Murex
      NC S547,S622 PCH добавлено поле Rec ID, только для доработки S622
      NC NCS-885 RD Добавлены поля Deal Between Books, Book Correspondent
      TD BMN 03.07.2013 NCS-1048 "Изменение алгоритма синхронизации поля тип сделки OFF->MIS "
      NC NCS-1131 DP Добавлены поля 50410-50440, функции CreateAgreement, ShowAgreement, AddDefDimForAgr
      NC NCS-1131.3 DP Изменена функция CreateAgreement - вставка в создаваемые договора учетных групп
      NC NCS-1131.4 DP Изменена функция AddDefDimForAgr - вставка измерения INC.TAX
      NC NCS-1131.5 DP Изменена функция AddDefDimForAgr, удалена лок. переменная DealType функции CreateAgreement
      -------------------------------------------
      NC NCS-1347 DP Изменена функция AddDefDimForAgr
      NC NCS-1347.1 DP Изменена функция AddDefDimForAgr
      TDVYNCS-1356 добавлены поля "Settlement Date","Settlement Cur","Premium Amount"
      NC NCS-1367 AES
        Новые поля:
          "Type Description"
        Новые ключи:
          "Type Deal"
      TDRANCS-1405
        created func fn_DealFromAgrCreate
        Set table property TableData Deal=rimd
      NC NCS-1416 AES
        Измененные поля:
          50185 Settlement Type
      RA BLD001 DP Создан билд по модификациям
        MTD002.1,TDAPCOC-100,S547,S622,NCS-885,1048,1131.5,1367,S1347.1
      NC NCS-1428 DP Добавлено поле "Fixing Currency Rate"
      NC NCS-1428.2 DP Изменено свойство 'Decimal places' для полей
        "CCY Buy Amount",
        "CCY Sell Amount"
        новое поле Deal Currency Rate
      TDRANCS-1479
        created func fn_DealFromAgrUpdate
      NC NCS-1428.3 DP Изменено свойство 'Decimal places' для полей "Fixing Currency Rate"

      TDVYNCS-1547 Add Fields "Strategy Type" and "Strategy Name"
      TDRANCS-1592 corrected func CreateCounterparty()
      TDRANCS-1800 Added "Root Contract"
      NC NCS-1726 DP Добавлены поля 50490-50545
      NC NCS-1726.1 DP Изменен тип полей 50490-50545 на текстовой
      NC NCS-1726.4 DP Расширены поля UTI, "UTI Parent" (20->32)
      TDRANCS-1753 added Classif. Fin. Instrument,Product Complex,Unwound Ration,Book left FO,Book left BO,Book right FO,Book right BO,
        Strategy Type,Strategy Name, Comment, Deal Version
      NC NCS-1841 PCH увеличена длина поля Strategy Type 10 > 30
      NC S1858 PCH проверка на заполнение полей "Company No." и "Customer No."
      NC S1884 SPA Добавлены поля "CH Counterparty Code", InterestFrequencyDays, InterestRateType, "Interest fixing date",
                          "Payment frequency", "First payment date", "Liquidity flag". "Contract volume"
      NC S1884 PCH Добавлено поле "Original Type Deal"
      NC S1914 PCH Добавлен ключ Number
      NCS-1972> Added Fields rollConvention, periodMultiplier,
        Margin,Interest rate frequency,Fixed Rate 1
      NCS-1978 rollConvention -> Period
      NC NCS-1983 SB Добавлено поле "Manually Entered"
      BLD002 SB Создан билд по модификациям BLD001,NCS-1428,1415,1356,1405,1479,1592,1800,1726.4,1753,S1884,S1914,1972,1978
      NCS-1987 Fields [Period 2], [PeriodMultiplier 2], [Interest rate frequency 2] added
      NCS-1992 PCH Field Entry Type is added
      ncs-2005 Eng Caption for Period 2, Period Multiplier 2, Interest rate frequency 2,Interest rate frequency (changed RUS Name)
      NCS-2098 SB Fields are added: Subordination Collateral, Subordination Collateral Link
      NC NCS-2140 DP CreateAgreement function has been changed
      TDRANCS-2182 added field Corresponding Deal
      TDRANCS-2194 Added Fields  "Date of 2nd deal: Under Agr.","Date of 1st deal: Under Agr."
        PayDate,RtClient,RealCPMicex,"REPO Rate",Condition
        Date of 1st Deal_ Fact,Date of 2nd Deal_ Fact
      NC NCS-2245 DP Chaneged function CreateCounterparty
      NCS-2210 AAP Added field "Tax Derivative"
      TDRANCS-2323 added fields Date of 1st Deal_ As Scheduled, Date of 2nd Deal_ As Scheduled
      NC NCS-2249 AAP Изменен ключ с "Number" на "Number,Root Contract"
      -----
      NC NOS-26 ENK Modified function: ShowGLEntries()
    }
    END.
  }
}

