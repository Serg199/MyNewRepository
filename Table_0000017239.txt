OBJECT Table 17239 Tax Reg. Norm Template Line
{
  OBJECT-PROPERTIES
  {
    Date=18.12.13;
    Time=12:00:00;
    Version List=NAVRU7.10;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               ValidateChange(TRUE);
             END;

    OnDelete=VAR
               TaxRegNormDimFilter@1210000 : Record 17243;
             BEGIN
               ValidateChange(TRUE);

               TaxRegNormDimFilter.SETRANGE("Norm Jurisdiction Code","Norm Jurisdiction Code");
               TaxRegNormDimFilter.SETRANGE("Norm Group Code","Norm Group Code");
               TaxRegNormDimFilter.SETRANGE("Line No.","Line No.");
               TaxRegNormDimFilter.DELETEALL(TRUE);
             END;

    CaptionML=[ENU=Tax Reg. Norm Template Line;
               RUS=Строка шаблона нормы налог. регистра];
    LookupPageID=Page17284;
  }
  FIELDS
  {
    { 1   ;   ;Norm Jurisdiction Code;Code10      ;TableRelation="Tax Register Norm Jurisdiction";
                                                   CaptionML=[ENU=Norm Jurisdiction Code;
                                                              RUS=Код нормы юрисдикции];
                                                   NotBlank=Yes }
    { 2   ;   ;Norm Group Code     ;Code10        ;TableRelation="Tax Register Norm Group".Code;
                                                   CaptionML=[ENU=Norm Group Code;
                                                              RUS=Код группы норм] }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              RUS=Номер строки] }
    { 4   ;   ;Line Type           ;Option        ;OnValidate=BEGIN
                                                                ValidateChange("Line Type" <> xRec."Line Type");
                                                                IF "Line Type" <> "Line Type"::" " THEN BEGIN
                                                                  TaxRegNormTemplateLine.RESET;
                                                                  TaxRegNormTemplateLine.SETRANGE("Norm Jurisdiction Code","Norm Jurisdiction Code");
                                                                  TaxRegNormTemplateLine.SETRANGE("Norm Group Code","Norm Group Code");
                                                                  TaxRegNormTemplateLine.SETFILTER("Line No.",'<>%1',"Line No.");
                                                                  TaxRegNormTemplateLine.SETRANGE("Line Type","Line Type");
                                                                  TaxRegNormTemplateLine.MODIFYALL("Line Type","Line Type"::" ");
                                                                END;
                                                                IF "Line Type" = "Line Type"::"Amount for Norm" THEN
                                                                  TESTFIELD("Line Code");
                                                              END;

                                                   CaptionML=[ENU=Line Type;
                                                              RUS=Тип строки];
                                                   OptionCaptionML=[ENU=" ,Norm Value,Amount for Norm";
                                                                    RUS=" ,Значение нормы,Нормируемая сумма"];
                                                   OptionString=[ ,Norm Value,Amount for Norm] }
    { 5   ;   ;Description         ;Text150       ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 6   ;   ;Line Code           ;Code10        ;OnValidate=BEGIN
                                                                ValidateChange(("Line Code" <> xRec."Line Code") AND (xRec."Line Code" <> ''));
                                                                TaxRegTermMgt.ValidateLineCode("Line Code",0);
                                                                IF "Line Code" = '' THEN
                                                                  IF "Line Type" = "Line Type"::"Amount for Norm" THEN
                                                                    FIELDERROR("Line Code",
                                                                      STRSUBSTNO(Text2001,FIELDCAPTION("Line Code"),FIELDCAPTION("Line Type"),"Line Type"));
                                                              END;

                                                   CaptionML=[ENU=Line Code;
                                                              RUS=Код строки] }
    { 7   ;   ;Expression Type     ;Option        ;OnValidate=BEGIN
                                                                IF "Expression Type" <> xRec."Expression Type" THEN BEGIN
                                                                  IF "Expression Type" = "Expression Type"::Norm THEN
                                                                    "Jurisdiction Code" := "Norm Jurisdiction Code"
                                                                  ELSE
                                                                    "Jurisdiction Code" := '';
                                                                  ValidateChange(TRUE);
                                                                  Expression := '';
                                                                  "Link Group Code" := '';
                                                                  "Link Line Code" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Expression Type;
                                                              RUS=Тип выражения];
                                                   OptionCaptionML=[ENU=Term,Link,Total,Header,,Norm;
                                                                    RUS=Термин,Ссылка,Итог,Заголовок,,Норма];
                                                   OptionString=Term,Link,Total,Header,,Norm }
    { 8   ;   ;Expression          ;Text150       ;OnValidate=BEGIN
                                                                ValidateChange(Expression <> xRec.Expression);
                                                              END;

                                                   OnLookup=VAR
                                                              TaxRegNormTermName@1210000 : Record 17240;
                                                            BEGIN
                                                              IF "Expression Type" = "Expression Type"::Norm THEN BEGIN
                                                                TESTFIELD("Jurisdiction Code");
                                                                TaxRegNormGroup.RESET;
                                                                TaxRegNormGroup.FILTERGROUP(2);
                                                                TaxRegNormGroup.SETRANGE("Norm Jurisdiction Code","Jurisdiction Code");
                                                                TaxRegNormGroup.FILTERGROUP(0);
                                                                IF Expression <> '' THEN
                                                                  IF TaxRegNormGroup.GET("Jurisdiction Code",Expression) THEN ;
                                                                IF ACTION::LookupOK = PAGE.RUNMODAL(0,TaxRegNormGroup) THEN BEGIN
                                                                  TaxRegNormGroup.CALCFIELDS("Has Details");
                                                                  TaxRegNormGroup.TESTFIELD("Has Details");
                                                                  Expression := TaxRegNormGroup.Code;
                                                                  IF Description = '' THEN
                                                                    Description := TaxRegNormGroup.Description;
                                                                END;
                                                              END;
                                                              IF "Expression Type" = "Expression Type"::Term THEN BEGIN
                                                                TaxRegNormTermName.RESET;
                                                                TaxRegNormTermName.FILTERGROUP(2);
                                                                TaxRegNormTermName.SETRANGE("Norm Jurisdiction Code","Norm Jurisdiction Code");
                                                                TaxRegNormTermName.FILTERGROUP(0);
                                                                IF Expression <> '' THEN
                                                                  IF TaxRegNormTermName.GET("Norm Jurisdiction Code",Expression) THEN ;
                                                                IF ACTION::LookupOK = PAGE.RUNMODAL(0,TaxRegNormTermName) THEN BEGIN
                                                                  Expression := TaxRegNormTermName."Term Code";
                                                                  Description := TaxRegNormTermName.Description;
                                                                END;
                                                              END;
                                                              IF "Expression Type" = "Expression Type"::Link THEN BEGIN
                                                                TESTFIELD("Link Group Code");
                                                                TaxRegNormGroup.GET("Norm Jurisdiction Code","Link Group Code");
                                                                TaxRegNormTemplateLine.FILTERGROUP(2);
                                                                TaxRegNormTemplateLine.SETRANGE("Norm Jurisdiction Code",TaxRegNormGroup."Norm Jurisdiction Code");
                                                                TaxRegNormTemplateLine.SETRANGE("Norm Group Code",TaxRegNormGroup.Code);
                                                                TaxRegNormTemplateLine.FILTERGROUP(0);
                                                                IF Expression <> '' THEN
                                                                  IF TaxRegNormTemplateLine.GET("Norm Jurisdiction Code",Expression) THEN;
                                                                IF ACTION::LookupOK = PAGE.RUNMODAL(0,TaxRegNormTemplateLine) THEN BEGIN
                                                                  TaxRegNormTemplateLine.TESTFIELD("Line Code");
                                                                  Expression := TaxRegNormTemplateLine."Line Code";
                                                                  Description := TaxRegNormTemplateLine.Description;
                                                                END;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Expression;
                                                              RUS=Выражение] }
    { 9   ;   ;Jurisdiction Code   ;Code10        ;TableRelation="Tax Register Norm Jurisdiction";
                                                   CaptionML=[ENU=Jurisdiction Code;
                                                              RUS=Код юрисдикции] }
    { 10  ;   ;Link Group Code     ;Code10        ;TableRelation=IF (Expression Type=CONST(Link)) "Tax Register Norm Group".Code;
                                                   OnValidate=BEGIN
                                                                ValidateChange("Link Group Code" <> xRec."Link Group Code");
                                                              END;

                                                   CaptionML=[ENU=Link Group Code;
                                                              RUS=Код группы ссылок] }
    { 11  ;   ;Link Line Code      ;Code10        ;OnValidate=BEGIN
                                                                ValidateChange("Link Line Code" <> xRec."Link Line Code");
                                                              END;

                                                   CaptionML=[ENU=Link Line Code;
                                                              RUS=Код строки ссылки] }
    { 12  ;   ;Dimensions Filters  ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Tax Reg. Norm Dim. Filter" WHERE (Norm Jurisdiction Code=FIELD(Norm Jurisdiction Code),
                                                                                                        Norm Group Code=FIELD(Norm Group Code),
                                                                                                        Line No.=FIELD(Line No.)));
                                                   CaptionML=[ENU=Dimensions Filters;
                                                              RUS=Фильтры измерений];
                                                   Editable=No }
    { 13  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              RUS=Фильтр по дате] }
    { 14  ;   ;Period              ;Code30        ;OnValidate=BEGIN
                                                                IF "Expression Type" <> "Expression Type"::Term THEN
                                                                  IF Period <> '' THEN
                                                                    ERROR(Text2001,FIELDCAPTION(Period),FIELDCAPTION("Expression Type"),"Expression Type");
                                                                ValidateChange(Period <> xRec.Period);
                                                              END;

                                                   CaptionML=[ENU=Period;
                                                              RUS=Период] }
    { 15  ;   ;Rounding Precision  ;Decimal       ;OnValidate=BEGIN
                                                                ValidateChange("Rounding Precision" <> xRec."Rounding Precision");
                                                              END;

                                                   CaptionML=[ENU=Rounding Precision;
                                                              RUS=Точность округления];
                                                   DecimalPlaces=0: }
    { 16  ;   ;Indentation         ;Integer       ;CaptionML=[ENU=Indentation;
                                                              RUS=Отступ] }
    { 17  ;   ;Bold                ;Boolean       ;CaptionML=[ENU=Bold;
                                                              RUS=Полужирный] }
  }
  KEYS
  {
    {    ;Norm Jurisdiction Code,Norm Group Code,Line No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      TaxRegNormGroup@1000 : Record 17221;
      TaxRegNormTemplateLine@1002 : Record 17239;
      TaxRegTermMgt@1005 : Codeunit 17200;
      Text2001@1007 : TextConst 'ENU=%1 must be empty if %2 is %3.;RUS="%1 должно быть пусто, если %2=%3."';

    PROCEDURE ValidateChange@1(Incident@1000 : Boolean);
    VAR
      TaxRegNormJurisdiction@1001 : Record 17220;
    BEGIN
      IF NOT Incident THEN
        EXIT;

      TaxRegNormJurisdiction.GET("Norm Jurisdiction Code");
    END;

    PROCEDURE GenerateProfile@2();
    VAR
      GenTemplateProfile@1000 : Record 17237;
      TaxRegNormAccumulation@1002 : Record 17242;
      TaxRegNormDimFilter@1003 : Record 17243;
    BEGIN
      IF GenTemplateProfile.GET(DATABASE::"Tax Reg. Norm Template Line") THEN
        EXIT;

      GenTemplateProfile."Template Line Table No." := DATABASE::"Tax Reg. Norm Template Line";
      GenTemplateProfile."Template Header Table No." := DATABASE::"Tax Register Norm Group";
      GenTemplateProfile."Term Header Table No." := DATABASE::"Tax Reg. Norm Term";
      GenTemplateProfile."Term Line Table No." := DATABASE::"Tax Reg. Norm Term Formula";
      GenTemplateProfile."Dim. Filter Table No." := DATABASE::"Tax Reg. Norm Dim. Filter";

      GenTemplateProfile."Section Code (Hdr)" := TaxRegNormGroup.FIELDNO("Norm Jurisdiction Code");
      GenTemplateProfile."Code (Hdr)" := TaxRegNormGroup.FIELDNO(Code);
      GenTemplateProfile."Check (Hdr)" := TaxRegNormGroup.FIELDNO(Check);
      GenTemplateProfile."Level (Hdr)" := TaxRegNormGroup.FIELDNO(Level);

      GenTemplateProfile."Section Code" := FIELDNO("Norm Jurisdiction Code");
      GenTemplateProfile.Code := FIELDNO("Norm Group Code");
      GenTemplateProfile."Line No." := FIELDNO("Line No.");
      GenTemplateProfile."Expression Type" := FIELDNO("Expression Type");
      GenTemplateProfile.Expression := FIELDNO(Expression);
      GenTemplateProfile."Line Code (Line)" := FIELDNO("Line Code");
      GenTemplateProfile."Norm Jurisd. Code (Line)" := FIELDNO("Jurisdiction Code");
      GenTemplateProfile."Link Code" := FIELDNO("Link Group Code");
      GenTemplateProfile."Date Filter" := FIELDNO("Date Filter");
      GenTemplateProfile.Period := FIELDNO(Period);
      GenTemplateProfile.Description := FIELDNO(Description);
      GenTemplateProfile."Rounding Precision" := FIELDNO("Rounding Precision");

      GenTemplateProfile."Header Code (Link)" := TaxRegNormAccumulation.FIELDNO("Norm Group Code");
      GenTemplateProfile."Line Code (Link)" := TaxRegNormAccumulation.FIELDNO("Template Line Code");
      GenTemplateProfile."Value (Link)" := TaxRegNormAccumulation.FIELDNO(Amount);

      GenTemplateProfile."Section Code (Dim)" := TaxRegNormDimFilter.FIELDNO("Norm Jurisdiction Code");
      GenTemplateProfile."Tax Register No. (Dim)" := TaxRegNormDimFilter.FIELDNO("Norm Group Code");
      GenTemplateProfile."Line No. (Dim)" := TaxRegNormDimFilter.FIELDNO("Line No.");
      GenTemplateProfile."Dimension Code (Dim)" := TaxRegNormDimFilter.FIELDNO("Dimension Code");
      GenTemplateProfile."Dimension Value Filter (Dim)" := TaxRegNormDimFilter.FIELDNO("Dimension Value Filter");

      GenTemplateProfile.INSERT;
    END;

    BEGIN
    END.
  }
}

