OBJECT Report 14940 Analytic Account Card by Dim.
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Analytic Account Card by Dim.;
               RUS=Карточка счета - аналитика по измерениям.];
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  ExcelTemplate@1210000 : Record 14919;
                BEGIN
                  IF GLCorrAnalysisViewCode = '' THEN
                    ERROR(Text002,Text008);

                  IF DimensionCode = '' THEN
                    ERROR(Text002,Text005);

                  IF StartDate = 0D THEN
                    ERROR(Text002,Text009);

                  IF EndDate = 0D THEN
                    ERROR(Text002,Text010);

                  GLSetup.GET;
                  GLSetup.TESTFIELD("Analytic Acc. Card Code");

                  FileName := ExcelTemplate.OpenTemplate(GLSetup."Analytic Acc. Card Code");

                  GLCorrAnalysisView.GET(GLCorrAnalysisViewCode);
                  ExcelMgt.OpenBook(FileName);
                  CreateSheets;
                END;

    OnPostReport=BEGIN
                   ExcelMgt.GiveUserControl;
                 END;

  }
  DATASET
  {
    { 3004;    ;DataItem;GLAccountBuffer     ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               SETRANGE(Number,1,SheetBuffer.COUNT);

                               IF TotalQty = 0 THEN BEGIN
                                 MESSAGE(Text007);
                                 ExcelMgt.CloseBook(FALSE);
                                 CurrReport.QUIT;
                               END;
                             END;

               OnAfterGetRecord=VAR
                                  GLCorrAnalysisViewEntry@1210001 : Record 14942;
                                BEGIN
                                  IF Number = 1 THEN
                                    SheetBuffer.FINDFIRST
                                  ELSE
                                    SheetBuffer.NEXT;

                                  GLAccount.GET(SheetBuffer."No.");
                                  ExcelMgt.OpenSheet(SheetBuffer."Search Name");
                                  FillSheetHeader;

                                  GLCorrAnalysisViewEntry.RESET;
                                  GLCorrAnalysisViewEntry.SETRANGE("G/L Corr. Analysis View Code",GLCorrAnalysisViewCode);
                                  GLCorrAnalysisViewEntry.SETFILTER("Business Unit Code",BusUnitFilter);
                                  GLCorrAnalysisViewEntry.SETRANGE("Debit Account No.",GLAccount."No.");
                                  SetDimensionFilters(GLCorrAnalysisViewEntry,'');
                                  GLCorrAnalysisViewEntry.SETFILTER("Posting Date",'..%1',StartDate - 1);
                                  GLCorrAnalysisViewEntry.CALCSUMS(Amount);
                                  BeginningBalanceAmount := GLCorrAnalysisViewEntry.Amount;
                                  GLCorrAnalysisViewEntry.SETRANGE("Debit Account No.");
                                  GLCorrAnalysisViewEntry.SETRANGE("Credit Account No.",GLAccount."No.");
                                  GLCorrAnalysisViewEntry.CALCSUMS(Amount);
                                  BeginningBalanceAmount -= GLCorrAnalysisViewEntry.Amount;
                                  IF BeginningBalanceAmount > 0 THEN
                                    ExcelMgt.FillCell('B8',FormatAmount(BeginningBalanceAmount))
                                  ELSE
                                    ExcelMgt.FillCell('C8',FormatAmount(-BeginningBalanceAmount));

                                  ExcelMgt.CopyRow(12);
                                  ExcelMgt.FillCell('A12',GLAccount."No." + ' ' + GLAccount.Name);

                                  TotalDimDebitAmount := 0;
                                  TotalDimCreditAmount := 0;
                                  TotalDebitAmount := 0;
                                  TotalCreditAmount := 0;

                                  Counter += 1;
                                  Window.UPDATE(2,ROUND(Counter / TotalQty * 10000,1));
                                END;
                                 }

    { 6363;1   ;DataItem;                    ;
               DataItemTable=Table349;
               DataItemTableView=SORTING(Dimension Code,Code);
               OnPreDataItem=BEGIN
                               SETRANGE("Dimension Code",DimensionCode);
                               CASE DimOption OF
                                 0:
                                   SETFILTER(Code,DebitDim1Filter);
                                 1:
                                   SETFILTER(Code,DebitDim2Filter);
                                 2:
                                   SETFILTER(Code,DebitDim3Filter);
                                 3:
                                   SETFILTER(Code,CreditDim1Filter);
                                 4:
                                   SETFILTER(Code,CreditDim2Filter);
                                 5:
                                   SETFILTER(Code,CreditDim3Filter);
                               END;

                               LineCounter := 13;
                             END;

               OnAfterGetRecord=BEGIN
                                  FillGLCorrBuffer(SheetBuffer."No.",Code);
                                  TotalDimDebitAmount := 0;
                                  TotalDimCreditAmount := 0;
                                END;

               OnPostDataItem=VAR
                                EndingBalanceAmount@1210000 : Decimal;
                              BEGIN
                                ExcelMgt.DeleteRows(LineCounter,LineCounter);
                                ExcelMgt.FillCell(
                                  'A' + FORMAT(LineCounter),
                                  STRSUBSTNO(Text004,SheetBuffer."No.",SheetBuffer.Name));
                                ExcelMgt.FillCell('B' + FORMAT(LineCounter),FormatAmount(TotalDebitAmount));
                                ExcelMgt.FillCell('C' + FORMAT(LineCounter),FormatAmount(TotalCreditAmount));
                                LineCounter += 2;

                                EndingBalanceAmount := BeginningBalanceAmount + TotalDebitAmount - TotalCreditAmount;

                                IF EndingBalanceAmount > 0 THEN
                                  ExcelMgt.FillCell('B' + FORMAT(LineCounter),FormatAmount(EndingBalanceAmount))
                                ELSE
                                  ExcelMgt.FillCell('C' + FORMAT(LineCounter),FormatAmount(-EndingBalanceAmount));
                              END;
                               }

    { 5444;2   ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               SETRANGE(Number,1,GLCorrBuffer.COUNT);

                               IF COUNT >= 1 THEN BEGIN
                                 ExcelMgt.CopyRow(LineCounter);
                                 ExcelMgt.FillCell('A' + FORMAT(LineCounter),"Dimension Value"."Dimension Code" + ' ' + "Dimension Value".Code);
                                 LineCounter += 1;
                               END;
                             END;

               OnAfterGetRecord=VAR
                                  GLCorrAnalysisViewEntry@1210000 : Record 14942;
                                BEGIN
                                  IF Number = 1 THEN
                                    GLCorrBuffer.FINDFIRST
                                  ELSE
                                    GLCorrBuffer.NEXT;

                                  ExcelMgt.CopyRow(LineCounter);

                                  GLCorrAnalysisViewEntry.SETRANGE("G/L Corr. Analysis View Code",GLCorrAnalysisViewCode);
                                  GLCorrAnalysisViewEntry.SETFILTER("Business Unit Code",BusUnitFilter);
                                  SetDimensionFilters(GLCorrAnalysisViewEntry,"Dimension Value".Code);
                                  GLCorrAnalysisViewEntry.SETRANGE("Posting Date",StartDate,EndDate);
                                  GLCorrAnalysisViewEntry.SETRANGE("Debit Account No.",GLCorrBuffer."Debit Account No.");
                                  GLCorrAnalysisViewEntry.SETRANGE("Credit Account No.",GLCorrBuffer."Credit Account No.");
                                  GLCorrAnalysisViewEntry.CALCSUMS(Amount);

                                  ExcelMgt.FillCell('A' + FORMAT(LineCounter),"Dimension Value".Code);
                                  ExcelMgt.FormatCell_Bold('A' + FORMAT(LineCounter),FALSE);
                                  ExcelMgt.FormatCell_Indent('A' + FORMAT(LineCounter),2);

                                  IF SheetBuffer."No." = GLCorrBuffer."Debit Account No." THEN BEGIN
                                    GLAccount.GET(GLCorrBuffer."Credit Account No.");
                                    ExcelMgt.FillCell('B' + FORMAT(LineCounter),FormatAmount(GLCorrAnalysisViewEntry.Amount));
                                    ExcelMgt.FillCell('E' + FORMAT(LineCounter),GLCorrBuffer."Credit Account No.");
                                    ExcelMgt.FillCell('F' + FORMAT(LineCounter),GLAccount.Name);
                                    ExcelMgt.FillCell('G' + FORMAT(LineCounter),FormatAmount(GLCorrAnalysisViewEntry.Amount));
                                    TotalDimDebitAmount += GLCorrAnalysisViewEntry.Amount;
                                  END ELSE BEGIN
                                    GLAccount.GET(GLCorrBuffer."Debit Account No.");
                                    ExcelMgt.FillCell('C' + FORMAT(LineCounter),FormatAmount(GLCorrAnalysisViewEntry.Amount));
                                    ExcelMgt.FillCell('D' + FORMAT(LineCounter),GLCorrBuffer."Debit Account No.");
                                    ExcelMgt.FillCell('F' + FORMAT(LineCounter),GLAccount.Name);
                                    ExcelMgt.FillCell('G' + FORMAT(LineCounter),FormatAmount(-GLCorrAnalysisViewEntry.Amount));
                                    TotalDimCreditAmount += GLCorrAnalysisViewEntry.Amount;
                                  END;

                                  LineCounter += 1;
                                END;

               OnPostDataItem=BEGIN
                                IF COUNT >= 1 THEN BEGIN
                                  ExcelMgt.CopyRow(LineCounter);
                                  ExcelMgt.FillCell(
                                    'A' + FORMAT(LineCounter),
                                    STRSUBSTNO(Text004,"Dimension Value"."Dimension Code","Dimension Value".Code));
                                  ExcelMgt.FillCell('B' + FORMAT(LineCounter),FormatAmount(TotalDimDebitAmount));
                                  ExcelMgt.FillCell('C' + FORMAT(LineCounter),FormatAmount(TotalDimCreditAmount));
                                  LineCounter += 1;
                                END;

                                TotalDebitAmount += TotalDimDebitAmount;
                                TotalCreditAmount += TotalDimCreditAmount;
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnInit=BEGIN
               CreditDim3FilterEnable := TRUE;
               CreditDim2FilterEnable := TRUE;
               CreditDim1FilterEnable := TRUE;
               DebitDim3FilterEnable := TRUE;
               DebitDim2FilterEnable := TRUE;
               DebitDim1FilterEnable := TRUE;
             END;

      OnOpenPage=BEGIN
                   IF UseHiddenParameters THEN BEGIN
                     GLCorrAnalysisViewCode := HidGLCorrAnalysisViewCode;
                     DimGroupType := HidDimGroupType;
                     DimensionCode := HidDimensionCode;
                     BusUnitFilter := HidBusUnitFilter;
                     GLAccountFilter := HidGLAccountFilter;
                     StartDate := HidStartDate;
                     EndDate := HidEndDate;
                     DebitDim1Filter := HidDebitDim1Filter;
                     DebitDim2Filter := HidDebitDim2Filter;
                     DebitDim3Filter := HidDebitDim3Filter;
                     CreditDim1Filter := HidCreditDim1Filter;
                     CreditDim2Filter := HidCreditDim2Filter;
                     CreditDim3Filter := HidCreditDim3Filter;
                   END;

                   ValidateLineDimCode;
                   UpdateFiltersControls;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             RUS=Параметры] }

      { 1210004;2;Group     ;
                  CaptionML=[ENU=General;
                             RUS=Общий] }

      { 1210000;3;Field     ;
                  CaptionML=[ENU=Starting Date;
                             RUS=Дата начала];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=StartDate }

      { 1210002;3;Field     ;
                  CaptionML=[ENU=Ending Date;
                             RUS=Дата окончания];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=EndDate }

      { 1210008;3;Field     ;
                  CaptionML=[ENU=G/L Corr. Analysis View Code;
                             RUS=Код аналит. отчета по корресп.];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=GLCorrAnalysisViewCode;
                  TableRelation="G/L Corr. Analysis View" }

      { 1210016;3;Field     ;
                  CaptionML=[ENU=Business Unit Filter;
                             RUS=Фильтр по филиалу];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=BusUnitFilter;
                  TableRelation="Business Unit" }

      { 1210010;3;Field     ;
                  CaptionML=[ENU=G/L Account Filter;
                             RUS=Фильтр по счету ГК];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=GLAccountFilter;
                  TableRelation="G/L Account" }

      { 1210018;3;Field     ;
                  CaptionML=[ENU=Dimension Group Type;
                             RUS=Тип группы измерения];
                  OptionCaptionML=[ENU=Debit,Credit;
                                   RUS=Дебет,Кредит];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=DimGroupType }

      { 1210014;3;Field     ;
                  CaptionML=[ENU=Dimension Code;
                             RUS=Код измерения];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=DimensionCode;
                  OnValidate=BEGIN
                               ValidateLineDimCode;
                             END;

                  OnLookup=VAR
                             NewCode@1210000 : Text[30];
                           BEGIN
                             NewCode := GetDimSelection(DimensionCode);
                             IF NewCode = DimensionCode THEN
                               EXIT(FALSE);

                             Text := NewCode;
                             DimensionCode := NewCode;
                             ValidateLineDimCode;
                             RequestOptionsPage.UPDATE;
                             EXIT(TRUE);
                           END;
                            }

      { 1210012;3;Field     ;
                  CaptionML=[ENU=Skip Zero Net Change Accounts;
                             RUS=Пропускать счета с нулевыми оборотами];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=SkipZeroNetChangeAccounts }

      { 1210006;2;Group     ;
                  CaptionML=[ENU=Debit Dimension Filters;
                             RUS=Фильтры дебетовых измерений] }

      { 1210023;3;Field     ;
                  Name=DebitDim1Filter;
                  CaptionML=[ENU=Debit Dimension 1 Filter;
                             RUS=Фильтр дебетового измерения 1];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=DebitDim1Filter;
                  CaptionClass=GetCaptionClass(1);
                  Enabled=DebitDim1FilterEnable;
                  OnLookup=BEGIN
                             EXIT(LookUpDimFilter(GLCorrAnalysisView."Debit Dimension 1 Code",Text));
                           END;
                            }

      { 1210021;3;Field     ;
                  Name=DebitDim2Filter;
                  CaptionML=[ENU=Debit Dimension 2 Filter;
                             RUS=Фильтр дебетового измерения 2];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=DebitDim2Filter;
                  CaptionClass=GetCaptionClass(2);
                  Enabled=DebitDim2FilterEnable;
                  OnLookup=BEGIN
                             EXIT(LookUpDimFilter(GLCorrAnalysisView."Debit Dimension 2 Code",Text));
                           END;
                            }

      { 1210007;3;Field     ;
                  Name=DebitDim3Filter;
                  CaptionML=[ENU=Debit Dimension 3 Filter;
                             RUS=Фильтр дебетового измерения 3];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=DebitDim3Filter;
                  CaptionClass=GetCaptionClass(3);
                  Enabled=DebitDim3FilterEnable;
                  OnLookup=BEGIN
                             EXIT(LookUpDimFilter(GLCorrAnalysisView."Debit Dimension 3 Code",Text));
                           END;
                            }

      { 1210025;2;Group     ;
                  CaptionML=[ENU=Credit Dimension Filters;
                             RUS=Фильтры кредитовых измерений] }

      { 1210030;3;Field     ;
                  Name=CreditDim1Filter;
                  CaptionML=[ENU=Credit Dimension 1 Filter;
                             RUS=Фильтр кредитового измерения 1];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=CreditDim1Filter;
                  CaptionClass=GetCaptionClass(4);
                  Enabled=CreditDim1FilterEnable;
                  OnLookup=BEGIN
                             EXIT(LookUpDimFilter(GLCorrAnalysisView."Credit Dimension 1 Code",Text));
                           END;
                            }

      { 1210028;3;Field     ;
                  Name=CreditDim2Filter;
                  CaptionML=[ENU=Credit Dimension 2 Filter;
                             RUS=Фильтр кредитового измерения 2];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=CreditDim2Filter;
                  CaptionClass=GetCaptionClass(5);
                  Enabled=CreditDim2FilterEnable;
                  OnLookup=BEGIN
                             EXIT(LookUpDimFilter(GLCorrAnalysisView."Credit Dimension 2 Code",Text));
                           END;
                            }

      { 1210026;3;Field     ;
                  Name=CreditDim3Filter;
                  CaptionML=[ENU=Credit Dimension 3 Filter;
                             RUS=Фильтр кредитового измерения 3];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=CreditDim3Filter;
                  CaptionClass=GetCaptionClass(6);
                  Enabled=CreditDim3FilterEnable;
                  OnLookup=BEGIN
                             EXIT(LookUpDimFilter(GLCorrAnalysisView."Credit Dimension 3 Code",Text));
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      GLAccount@1210022 : Record 15;
      SheetBuffer@1210029 : TEMPORARY Record 15;
      GLSetup@1210008 : Record 98;
      GLCorrAnalysisView@1210011 : Record 14940;
      GLCorrBuffer@1210021 : TEMPORARY Record 12400;
      ExcelMgt@1210013 : Codeunit 12416;
      Window@1210030 : Dialog;
      StartDate@1210004 : Date;
      EndDate@1210005 : Date;
      HidStartDate@1210003 : Date;
      HidEndDate@1210041 : Date;
      DimGroupType@1210017 : 'Debit,Credit';
      HidDimGroupType@1210037 : 'Debit,Credit';
      DimOption@1210015 : 'Debit Dimension 1,Debit Dimension 2,Debit Dimension 3,Credit Dimension 1,Credit Dimension 2,Credit Dimension 3';
      GLCorrAnalysisViewCode@1210000 : Code[10];
      DimensionCode@1210018 : Code[20];
      HidGLCorrAnalysisViewCode@1210035 : Code[10];
      HidDimensionCode@1210034 : Code[20];
      BusUnitFilter@1210002 : Code[250];
      DebitDim1Filter@1210049 : Code[250];
      DebitDim2Filter@1210048 : Code[250];
      DebitDim3Filter@1210047 : Code[250];
      CreditDim1Filter@1210046 : Code[250];
      CreditDim2Filter@1210045 : Code[250];
      CreditDim3Filter@1210033 : Code[250];
      HidDebitDim1Filter@1210061 : Code[250];
      HidDebitDim2Filter@1210060 : Code[250];
      HidDebitDim3Filter@1210059 : Code[250];
      HidCreditDim1Filter@1210058 : Code[250];
      HidCreditDim2Filter@1210057 : Code[250];
      HidCreditDim3Filter@1210056 : Code[250];
      HidBusUnitFilter@1210001 : Code[250];
      GLAccountFilter@1210007 : Text[250];
      Text002@1210010 : TextConst 'ENU=%1 must be filled in.;RUS=%1 должно быть заполнено.';
      HidGLAccountFilter@1210036 : Text[250];
      FileName@1210014 : Text;
      Text003@1210016 : TextConst 'ENU=%1 is not a valid dimension.;RUS=%1 не является допустимым измерением.';
      LineCounter@1210020 : Integer;
      Counter@1210031 : Integer;
      TotalQty@1210032 : Integer;
      BeginningBalanceAmount@1210027 : Decimal;
      TotalDimDebitAmount@1210012 : Decimal;
      TotalDimCreditAmount@1210023 : Decimal;
      TotalDebitAmount@1210024 : Decimal;
      TotalCreditAmount@1210025 : Decimal;
      Text004@1210026 : TextConst 'ENU=Total, %1 %2;RUS=Всего, %1 %2';
      Text005@1210028 : TextConst 'ENU=Dimension Code;RUS=Код измерения';
      SkipZeroNetChangeAccounts@1210038 : Boolean;
      Text006@1210044 : TextConst 'ENU=Sheets creating   @1@@@@@@@@@@@@@@\Sheets processing @2@@@@@@@@@@@@@@;RUS=Создаваемые листы @1@@@@@@@@@@@@@@\Обрабатываемые листы @2@@@@@@@@@@@@@@';
      Text007@1210039 : TextConst 'ENU=No entries are found according to specified filters on the request form. There is nothing to export!;RUS=Не найдены записи, соответствующие указанным фильтрам в форме запроса. Нечего экспортировать.';
      UseHiddenParameters@1210042 : Boolean;
      Text008@1210006 : TextConst 'ENU=G/L Corr. Analysis View Code;RUS=Код аналит. отчета по корресп.';
      Text009@1210040 : TextConst 'ENU=Starting Date;RUS=Дата начала';
      Text010@1210043 : TextConst 'ENU=Ending Date;RUS=Дата окончания';
      Text011@1210055 : TextConst 'ENU=1,6,,Debit Dimension 1 Filter;RUS=1,6,,Фильтр измерения 1 для дебета';
      Text012@1210054 : TextConst 'ENU=1,6,,Debit Dimension 2 Filter;RUS=1,6,,Фильтр измерения 2 для дебета';
      Text013@1210053 : TextConst 'ENU=1,6,,Debit Dimension 3 Filter;RUS=1,6,,Фильтр измерения 3 для дебета';
      Text014@1210052 : TextConst 'ENU=1,6,,Credit Dimension 1 Filter;RUS=1,6,,Фильтр измерения 1 для кредита';
      Text015@1210051 : TextConst 'ENU=1,6,,Credit Dimension 2 Filter;RUS=1,6,,Фильтр измерения 2 для кредита';
      Text016@1210050 : TextConst 'ENU=1,6,,Credit Dimension 3 Filter;RUS=1,6,,Фильтр измерения 3 для кредита';
      DebitDim1FilterEnable@1210065 : Boolean INDATASET;
      DebitDim2FilterEnable@1210064 : Boolean INDATASET;
      DebitDim3FilterEnable@1210063 : Boolean INDATASET;
      CreditDim1FilterEnable@1210062 : Boolean INDATASET;
      CreditDim2FilterEnable@1210019 : Boolean INDATASET;
      CreditDim3FilterEnable@1210009 : Boolean INDATASET;

    PROCEDURE SetParameters@1210001(NewGLCorrAnViewCode@1210000 : Code[20];NewDimGroupType@1210003 : 'Debit,Credit';NewDimCode@1210002 : Code[20];NewBusUnitFilter@1210012 : Code[250];NewGLAccNoFilter@1210001 : Code[250];NewStartDate@1210005 : Date;NewEndDate@1210004 : Date;NewDebitDim1Filter@1210011 : Code[250];NewDebitDim2Filter@1210010 : Code[250];NewDebitDim3Filter@1210009 : Code[250];NewCreditDim1Filter@1210008 : Code[250];NewCreditDim2Filter@1210007 : Code[250];NewCreditDim3Filter@1210006 : Code[250]);
    BEGIN
      HidGLCorrAnalysisViewCode := NewGLCorrAnViewCode;
      HidDimGroupType := NewDimGroupType;
      HidDimensionCode := NewDimCode;
      HidBusUnitFilter := NewBusUnitFilter;
      HidGLAccountFilter := NewGLAccNoFilter;
      HidStartDate := NewStartDate;
      HidEndDate := NewEndDate;
      HidDebitDim1Filter := NewDebitDim1Filter;
      HidDebitDim2Filter := NewDebitDim2Filter;
      HidDebitDim3Filter := NewDebitDim3Filter;
      HidCreditDim1Filter := NewCreditDim1Filter;
      HidCreditDim2Filter := NewCreditDim2Filter;
      HidCreditDim3Filter := NewCreditDim3Filter;

      UseHiddenParameters := TRUE;
    END;

    PROCEDURE CreateSheets@1210000();
    VAR
      SheetNo@1210001 : Integer;
      LastSheetName@1210004 : Text[30];
    BEGIN
      FillSheetBuffer;

      Window.OPEN(Text006);

      SheetBuffer.RESET;
      TotalQty := SheetBuffer.COUNT;

      IF SheetBuffer.FINDLAST THEN
        REPEAT
          SheetNo := SheetNo + 1;
          IF SheetNo = 1 THEN BEGIN
            ExcelMgt.OpenSheetByNumber(1);
            ExcelMgt.SetSheetName(SheetBuffer."Search Name");
          END ELSE BEGIN
            ExcelMgt.CopySheet(LastSheetName,LastSheetName,SheetBuffer."Search Name");
          END;
          LastSheetName := SheetBuffer."Search Name";
          Window.UPDATE(1,ROUND(SheetNo / TotalQty * 10000,1));
        UNTIL SheetBuffer.NEXT(-1) = 0;
    END;

    PROCEDURE FillSheetBuffer@1210006();
    BEGIN
      IF GLAccountFilter <> '' THEN
        GLAccount.SETFILTER("No.",GLAccountFilter);

      IF GLAccount.FINDSET THEN
        REPEAT
          IF CheckAccountNetChange(GLAccount."No.") THEN BEGIN
            SheetBuffer."No." := GLAccount."No.";
            SheetBuffer.Name := GLAccount.Name;
            SheetBuffer."Search Name" := GetSheetName(GLAccount."No.");
            SheetBuffer.INSERT;
          END;
        UNTIL GLAccount.NEXT = 0;
    END;

    PROCEDURE CheckAccountNetChange@1210003(AccountNo@1210001 : Code[20]) : Boolean;
    VAR
      GLCorrAnalysisViewEntry@1210000 : Record 14942;
    BEGIN
      IF NOT SkipZeroNetChangeAccounts THEN
        EXIT(TRUE);

      GLCorrAnalysisViewEntry.SETRANGE("G/L Corr. Analysis View Code",GLCorrAnalysisViewCode);
      GLCorrAnalysisViewEntry.SETRANGE("Debit Account No.",AccountNo);
      SetDimensionFilters(GLCorrAnalysisViewEntry,'');
      GLCorrAnalysisViewEntry.SETRANGE("Posting Date",StartDate,EndDate);
      GLCorrAnalysisViewEntry.CALCSUMS(Amount);
      IF (NOT GLCorrAnalysisViewEntry.ISEMPTY) AND
         (GLCorrAnalysisViewEntry.Amount <> 0)
      THEN
        EXIT(TRUE);

      GLCorrAnalysisViewEntry.SETRANGE("Debit Account No.");
      GLCorrAnalysisViewEntry.SETRANGE("Credit Account No.",AccountNo);
      GLCorrAnalysisViewEntry.CALCSUMS(Amount);
      IF (NOT GLCorrAnalysisViewEntry.ISEMPTY) AND
         (GLCorrAnalysisViewEntry.Amount <> 0)
      THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE FormatAccountNo@1210021(AccountNo@1210000 : Code[20]) : Code[20];
    BEGIN
      EXIT(CONVERTSTR(AccountNo,':\/?*[]','_______'));
    END;

    PROCEDURE GetSheetName@1210009(AccountNo@1210000 : Code[20]) SheetName : Code[50];
    BEGIN
      SheetName := FormatAccountNo(AccountNo);
      SheetBuffer.SETCURRENTKEY("Search Name");
      SheetBuffer.SETRANGE("Search Name",SheetName);
      IF NOT SheetBuffer.ISEMPTY THEN
        EXIT(GetSheetName(SheetName + '_'));
    END;

    PROCEDURE FillSheetHeader@1210011();
    VAR
      DebitDimFilters@1210000 : Text[1024];
      CreditDimFilters@1210001 : Text[1024];
    BEGIN
      ExcelMgt.FillCell('B2',STRSUBSTNO('%1..%2',StartDate,EndDate));
      ExcelMgt.FillCell('B3',GLAccountFilter);
      ExcelMgt.FillCell('B4',DimensionCode);

      IF DebitDim1Filter <> '' THEN
        AddStrValue(DebitDimFilters,GLCorrAnalysisView."Debit Dimension 1 Code" + ': ' + DebitDim1Filter);
      IF DebitDim2Filter <> '' THEN
        AddStrValue(DebitDimFilters,GLCorrAnalysisView."Debit Dimension 2 Code" + ': ' + DebitDim2Filter);
      IF DebitDim3Filter <> '' THEN
        AddStrValue(DebitDimFilters,GLCorrAnalysisView."Debit Dimension 3 Code" + ': ' + DebitDim3Filter);
      IF CreditDim1Filter <> '' THEN
        AddStrValue(CreditDimFilters,GLCorrAnalysisView."Credit Dimension 1 Code" + ': ' + CreditDim1Filter);
      IF CreditDim2Filter <> '' THEN
        AddStrValue(CreditDimFilters,GLCorrAnalysisView."Credit Dimension 2 Code" + ': ' + CreditDim2Filter);
      IF CreditDim3Filter <> '' THEN
        AddStrValue(CreditDimFilters,GLCorrAnalysisView."Credit Dimension 3 Code" + ': ' + CreditDim3Filter);

      ExcelMgt.FillCell('B5',DebitDimFilters);
      ExcelMgt.FillCell('B6',CreditDimFilters);
    END;

    LOCAL PROCEDURE DimCodeToOption@21(DimCode@1000 : Code[30];GroupType@1210000 : 'Debit,Credit') : Integer;
    BEGIN
      CASE GroupType OF
        GroupType::Debit:
          BEGIN
            CASE DimCode OF
              '':
                EXIT(-1);
              GLCorrAnalysisView."Debit Dimension 1 Code":
                EXIT(0);
              GLCorrAnalysisView."Debit Dimension 2 Code":
                EXIT(1);
              GLCorrAnalysisView."Debit Dimension 3 Code":
                EXIT(2);
              ELSE
                EXIT(-1);
            END;
          END;

        GroupType::Credit:
          BEGIN
            CASE DimCode OF
              '':
                EXIT(-1);
              GLCorrAnalysisView."Credit Dimension 1 Code":
                EXIT(3);
              GLCorrAnalysisView."Credit Dimension 2 Code":
                EXIT(4);
              GLCorrAnalysisView."Credit Dimension 3 Code":
                EXIT(5);
              ELSE
                EXIT(-1);
            END;
          END;
      END;
    END;

    PROCEDURE FindFirstDimension@1210007() : Code[20];
    BEGIN
      CASE DimGroupType OF
        DimGroupType::Debit:
          BEGIN
            IF GLCorrAnalysisView."Debit Dimension 1 Code" <> '' THEN
              EXIT(GLCorrAnalysisView."Debit Dimension 1 Code");
            IF GLCorrAnalysisView."Debit Dimension 2 Code" <> '' THEN
              EXIT(GLCorrAnalysisView."Debit Dimension 2 Code");
            IF GLCorrAnalysisView."Debit Dimension 3 Code" <> '' THEN
              EXIT(GLCorrAnalysisView."Debit Dimension 3 Code");
          END;

        DimGroupType::Credit:
          BEGIN
            IF GLCorrAnalysisView."Credit Dimension 1 Code" <> '' THEN
              EXIT(GLCorrAnalysisView."Credit Dimension 1 Code");
            IF GLCorrAnalysisView."Credit Dimension 2 Code" <> '' THEN
              EXIT(GLCorrAnalysisView."Credit Dimension 2 Code");
            IF GLCorrAnalysisView."Credit Dimension 3 Code" <> '' THEN
              EXIT(GLCorrAnalysisView."Credit Dimension 3 Code");
          END;
      END;

      EXIT('');
    END;

    LOCAL PROCEDURE GetDimSelection@3(OldDimSelCode@1000 : Text[30]) : Text[30];
    VAR
      DimSelection@1001 : Page 568;
    BEGIN
      CASE DimGroupType OF
        DimGroupType::Debit:
          BEGIN
            IF GLCorrAnalysisView."Debit Dimension 1 Code" <> '' THEN
              DimSelection.InsertDimSelBuf(FALSE,GLCorrAnalysisView."Debit Dimension 1 Code",'');
            IF GLCorrAnalysisView."Debit Dimension 2 Code" <> '' THEN
              DimSelection.InsertDimSelBuf(FALSE,GLCorrAnalysisView."Debit Dimension 2 Code",'');
            IF GLCorrAnalysisView."Debit Dimension 3 Code" <> '' THEN
              DimSelection.InsertDimSelBuf(FALSE,GLCorrAnalysisView."Debit Dimension 3 Code",'');
          END;

        DimGroupType::Credit:
          BEGIN
            IF GLCorrAnalysisView."Credit Dimension 1 Code" <> '' THEN
              DimSelection.InsertDimSelBuf(FALSE,GLCorrAnalysisView."Credit Dimension 1 Code",'');
            IF GLCorrAnalysisView."Credit Dimension 2 Code" <> '' THEN
              DimSelection.InsertDimSelBuf(FALSE,GLCorrAnalysisView."Credit Dimension 2 Code",'');
            IF GLCorrAnalysisView."Credit Dimension 3 Code" <> '' THEN
              DimSelection.InsertDimSelBuf(FALSE,GLCorrAnalysisView."Credit Dimension 3 Code",'');
          END;
      END;
      DimSelection.LOOKUPMODE := TRUE;
      IF DimSelection.RUNMODAL = ACTION::LookupOK THEN
        EXIT(DimSelection.GetDimSelCode);

      EXIT(OldDimSelCode);
    END;

    LOCAL PROCEDURE ValidateLineDimCode@19();
    BEGIN
      IF GLCorrAnalysisView.Code <> GLCorrAnalysisViewCode THEN
        GLCorrAnalysisView.GET(GLCorrAnalysisViewCode);
      IF (UPPERCASE(DimensionCode) <> GLCorrAnalysisView."Debit Dimension 1 Code") AND
         (UPPERCASE(DimensionCode) <> GLCorrAnalysisView."Debit Dimension 2 Code") AND
         (UPPERCASE(DimensionCode) <> GLCorrAnalysisView."Debit Dimension 3 Code") AND
         (UPPERCASE(DimensionCode) <> GLCorrAnalysisView."Credit Dimension 1 Code") AND
         (UPPERCASE(DimensionCode) <> GLCorrAnalysisView."Credit Dimension 2 Code") AND
         (UPPERCASE(DimensionCode) <> GLCorrAnalysisView."Credit Dimension 3 Code") AND
         (DimensionCode <> '')
      THEN BEGIN
        MESSAGE(Text003,DimensionCode);
        DimensionCode := '';
      END;
      DimOption := DimCodeToOption(DimensionCode,DimGroupType);
    END;

    PROCEDURE SetDimensionFilters@1210044(VAR GLCorrAnalysisViewEntry@1210001 : Record 14942;SelectedDimFilter@1210000 : Text[250]);
    BEGIN
      GLCorrAnalysisViewEntry.FILTERGROUP(2);
      IF DebitDim1Filter <> '' THEN
        GLCorrAnalysisViewEntry.SETFILTER("Debit Dimension 1 Value Code",DebitDim1Filter);
      IF DebitDim2Filter <> '' THEN
        GLCorrAnalysisViewEntry.SETFILTER("Debit Dimension 2 Value Code",DebitDim2Filter);
      IF DebitDim3Filter <> '' THEN
        GLCorrAnalysisViewEntry.SETFILTER("Debit Dimension 3 Value Code",DebitDim3Filter);
      IF CreditDim1Filter <> '' THEN
        GLCorrAnalysisViewEntry.SETFILTER("Credit Dimension 1 Value Code",CreditDim1Filter);
      IF CreditDim2Filter <> '' THEN
        GLCorrAnalysisViewEntry.SETFILTER("Credit Dimension 2 Value Code",CreditDim2Filter);
      IF CreditDim3Filter <> '' THEN
        GLCorrAnalysisViewEntry.SETFILTER("Credit Dimension 3 Value Code",CreditDim3Filter);
      GLCorrAnalysisViewEntry.FILTERGROUP(0);

      IF SelectedDimFilter <> '' THEN BEGIN
        CASE DimOption OF
          0:
            GLCorrAnalysisViewEntry.SETFILTER("Debit Dimension 1 Value Code",SelectedDimFilter);
          1:
            GLCorrAnalysisViewEntry.SETFILTER("Debit Dimension 2 Value Code",SelectedDimFilter);
          2:
            GLCorrAnalysisViewEntry.SETFILTER("Debit Dimension 3 Value Code",SelectedDimFilter);
          3:
            GLCorrAnalysisViewEntry.SETFILTER("Credit Dimension 1 Value Code",SelectedDimFilter);
          4:
            GLCorrAnalysisViewEntry.SETFILTER("Credit Dimension 2 Value Code",SelectedDimFilter);
          5:
            GLCorrAnalysisViewEntry.SETFILTER("Credit Dimension 3 Value Code",SelectedDimFilter);
        END;
      END ELSE BEGIN
        CASE DimOption OF
          0:
            GLCorrAnalysisViewEntry.SETRANGE("Debit Dimension 1 Value Code");
          1:
            GLCorrAnalysisViewEntry.SETRANGE("Debit Dimension 2 Value Code");
          2:
            GLCorrAnalysisViewEntry.SETRANGE("Debit Dimension 3 Value Code");
          3:
            GLCorrAnalysisViewEntry.SETRANGE("Credit Dimension 1 Value Code");
          4:
            GLCorrAnalysisViewEntry.SETRANGE("Credit Dimension 2 Value Code");
          5:
            GLCorrAnalysisViewEntry.SETRANGE("Credit Dimension 3 Value Code");
        END;
      END;
    END;

    PROCEDURE FormatAmount@1210078(Amount@1210000 : Decimal) : Text[30];
    BEGIN
      IF Amount <> 0 THEN
        EXIT(FORMAT(Amount,0,'<Sign><Integer><Decimals>'));

      EXIT('');
    END;

    PROCEDURE FillGLCorrBuffer@1210084(AccountNo@1210000 : Code[20];DimValue@1210002 : Code[20]);
    VAR
      GLCorrAnalysisViewEntry@1210001 : Record 14942;
    BEGIN
      GLCorrBuffer.RESET;
      GLCorrBuffer.DELETEALL;

      GLCorrAnalysisViewEntry.SETRANGE("G/L Corr. Analysis View Code",GLCorrAnalysisViewCode);
      GLCorrAnalysisViewEntry.SETRANGE("Debit Account No.",AccountNo);
      SetDimensionFilters(GLCorrAnalysisViewEntry,DimValue);
      GLCorrAnalysisViewEntry.SETRANGE("Posting Date",StartDate,EndDate);
      IF GLCorrAnalysisViewEntry.FINDSET THEN
        REPEAT
          IF NOT GLCorrBuffer.GET(
               GLCorrAnalysisViewEntry."Debit Account No.",
               GLCorrAnalysisViewEntry."Credit Account No.")
          THEN BEGIN
            GLCorrBuffer."Debit Account No." := GLCorrAnalysisViewEntry."Debit Account No.";
            GLCorrBuffer."Credit Account No." := GLCorrAnalysisViewEntry."Credit Account No.";
            GLCorrBuffer.INSERT;
            GLCorrAnalysisViewEntry.SETFILTER("Credit Account No.",'>%1',GLCorrAnalysisViewEntry."Credit Account No.");
          END;
        UNTIL GLCorrAnalysisViewEntry.NEXT = 0;

      GLCorrAnalysisViewEntry.SETRANGE("Debit Account No.");
      GLCorrAnalysisViewEntry.SETRANGE("Credit Account No.",AccountNo);
      IF GLCorrAnalysisViewEntry.FINDSET THEN
        REPEAT
          IF NOT GLCorrBuffer.GET(
               GLCorrAnalysisViewEntry."Debit Account No.",
               GLCorrAnalysisViewEntry."Credit Account No.")
          THEN BEGIN
            GLCorrBuffer."Debit Account No." := GLCorrAnalysisViewEntry."Debit Account No.";
            GLCorrBuffer."Credit Account No." := GLCorrAnalysisViewEntry."Credit Account No.";
            GLCorrBuffer.INSERT;
            GLCorrAnalysisViewEntry.SETFILTER("Debit Account No.",'>%1',GLCorrAnalysisViewEntry."Debit Account No.");
          END;
        UNTIL GLCorrAnalysisViewEntry.NEXT = 0;
    END;

    LOCAL PROCEDURE LookUpDimFilter@57(Dim@1000 : Code[20];VAR Text@1001 : Text[250]) : Boolean;
    VAR
      DimVal@1002 : Record 349;
      DimValList@1003 : Page 560;
    BEGIN
      IF Dim = '' THEN
        EXIT(FALSE);
      DimValList.LOOKUPMODE(TRUE);
      DimVal.SETRANGE("Dimension Code",Dim);
      DimValList.SETTABLEVIEW(DimVal);
      IF DimValList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        DimValList.GETRECORD(DimVal);
        Text := DimValList.GetSelectionFilter;
        EXIT(TRUE);
      END ELSE
        EXIT(FALSE)
    END;

    LOCAL PROCEDURE GetCaptionClass@12(GLCorrAnalysisViewDimType@1000 : Integer) : Text[250];
    BEGIN
      IF GLCorrAnalysisView.Code <> GLCorrAnalysisViewCode THEN
        IF NOT GLCorrAnalysisView.GET(GLCorrAnalysisViewCode) THEN
          EXIT('');
      CASE GLCorrAnalysisViewDimType OF
        1:
          BEGIN
            IF GLCorrAnalysisView."Debit Dimension 1 Code" <> '' THEN
              EXIT('1,6,' + GLCorrAnalysisView."Debit Dimension 1 Code");

            EXIT(Text011);
          END;
        2:
          BEGIN
            IF GLCorrAnalysisView."Debit Dimension 2 Code" <> '' THEN
              EXIT('1,6,' + GLCorrAnalysisView."Debit Dimension 2 Code");

            EXIT(Text012);
          END;
        3:
          BEGIN
            IF GLCorrAnalysisView."Debit Dimension 3 Code" <> '' THEN
              EXIT('1,6,' + GLCorrAnalysisView."Debit Dimension 3 Code");

            EXIT(Text013);
          END;
        4:
          BEGIN
            IF GLCorrAnalysisView."Credit Dimension 1 Code" <> '' THEN
              EXIT('1,6,' + GLCorrAnalysisView."Credit Dimension 1 Code");

            EXIT(Text014);
          END;
        5:
          BEGIN
            IF GLCorrAnalysisView."Credit Dimension 2 Code" <> '' THEN
              EXIT('1,6,' + GLCorrAnalysisView."Credit Dimension 2 Code");

            EXIT(Text015);
          END;
        6:
          BEGIN
            IF GLCorrAnalysisView."Credit Dimension 3 Code" <> '' THEN
              EXIT('1,6,' + GLCorrAnalysisView."Credit Dimension 3 Code");

            EXIT(Text016);
          END;
      END;
    END;

    PROCEDURE AddStrValue@1210008(VAR Str@1210000 : Text[1024];AddStr@1210001 : Text[250]);
    BEGIN
      IF AddStr <> '' THEN BEGIN
        IF Str <> '' THEN
          Str := Str + ', ' + AddStr
        ELSE
          Str := AddStr;
      END;
    END;

    PROCEDURE UpdateFiltersControls@1210002();
    BEGIN
      IF ISSERVICETIER THEN BEGIN
        PageUpdateFiltersControls;
        EXIT;
      END;
    END;

    LOCAL PROCEDURE PageUpdateFiltersControls@19033369();
    BEGIN
      DebitDim1FilterEnable := GLCorrAnalysisView."Debit Dimension 1 Code" <> '';
      DebitDim2FilterEnable := GLCorrAnalysisView."Debit Dimension 2 Code" <> '';
      DebitDim3FilterEnable := GLCorrAnalysisView."Debit Dimension 3 Code" <> '';
      CreditDim1FilterEnable := GLCorrAnalysisView."Credit Dimension 1 Code" <> '';
      CreditDim2FilterEnable := GLCorrAnalysisView."Credit Dimension 2 Code" <> '';
      CreditDim3FilterEnable := GLCorrAnalysisView."Credit Dimension 3 Code" <> '';
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

