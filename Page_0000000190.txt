OBJECT Page 190 Incoming Documents
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Incoming Documents;
               RUS=Входящие документы];
    SourceTable=Table130;
    DataCaptionFields=Description;
    PageType=List;
    CardPageID=Incoming Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Release,Status,Show;
                                RUS=Создать,Обработать,Отчет,Выпустить,Статус,Показать];
    OnOpenPage=BEGIN
                 IsDataExchTypeEditable := TRUE;
                 HasCamera := CameraProvider.IsAvailable;
                 IF HasCamera THEN
                   CameraProvider := CameraProvider.Create;
                 EnableReceiveFromOCR := WaitingToReceiveFromOCR;

                 FILTERGROUP(0);
                 SetProcessedDocumentsVisibility(GETFILTER(Processed) = FORMAT(TRUE));
               END;

    OnAfterGetRecord=BEGIN
                       URL := GetURL;
                       StatusStyleText := GetStatusStyleText;
                     END;

    OnNewRecord=BEGIN
                  URL := '';
                  StatusStyleText := GetStatusStyleText;
                END;

    OnAfterGetCurrRecord=BEGIN
                           IsDataExchTypeEditable := NOT (Status IN [Status::Created,Status::Posted]);
                           StatusStyleText := GetStatusStyleText;
                           SetControlVisibility;
                           CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromIncomingDocument(Rec);
                           SetToProcessedIsEnable := NOT Processed;
                         END;

    ActionList=ACTIONS
    {
      { 22      ;    ;ActionContainer;
                      CaptionML=[ENU=New;
                                 RUS=Создать];
                      ActionContainerType=NewDocumentItems }
      { 56      ;1   ;Action    ;
                      Name=CreateFromCamera;
                      CaptionML=[ENU=Create from Camera;
                                 RUS=Создать из камеры];
                      ToolTipML=[ENU=Create a new incoming document record by taking a picture.;
                                 RUS=Создание новой записи входящего документа с помощью камеры.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=HasCamera;
                      PromotedIsBig=Yes;
                      Image=Camera;
                      OnAction=VAR
                                 CameraOptions@1000 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=10.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.CameraOptions";
                               BEGIN
                                 IF NOT HasCamera THEN
                                   EXIT;
                                 CameraOptions := CameraOptions.CameraOptions;
                                 CameraOptions.Quality := 100; // 100%
                                 CameraProvider.RequestPictureAsync(CameraOptions);
                               END;
                                }
      { 50      ;1   ;Action    ;
                      Name=CreateFromAttachment;
                      CaptionML=[ENU=Create from File;
                                 RUS=Создать из файла];
                      ToolTipML=[ENU=Create a new incoming document record by first selecting the file it will be based on. The selected file will be attached.;
                                 RUS=Чтобы создать новую запись входящего документа, сначала выберите файл, на котором она будет основана. Выбранный файл будет добавлен в качестве вложения.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ExportAttachment;
                      OnAction=BEGIN
                                 CreateFromAttachment;
                               END;
                                }
      { 33      ;    ;ActionContainer;
                      CaptionML=[ENU=Related Information;
                                 RUS=Связанные сведения];
                      ActionContainerType=RelatedInformation }
      { 28      ;1   ;ActionGroup;
                      CaptionML=[ENU=Setup;
                                 RUS=Настройка] }
      { 32      ;2   ;Action    ;
                      Name=Setup;
                      CaptionML=[ENU=Setup;
                                 RUS=Настройка];
                      ToolTipML=[ENU=Define the general journal type to use when creating journal lines. You can also specify whether it requires approval to create documents and journal lines.;
                                 RUS=Определение типа финансового журнала, используемого при создании строк журнала. Кроме того, вы можете указать, требуется ли утверждение для создания документов и строк журнала.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 191;
                      Image=Setup;
                      PromotedCategory=Category5 }
      { 42      ;2   ;Action    ;
                      Name=DataExchangeTypes;
                      CaptionML=[ENU=Data Exchange Types;
                                 RUS=Типы обмена данными];
                      ToolTipML=[ENU=View the data exchange types that are available to convert electronic documents to documents in Dynamics NAV.;
                                 RUS=Просмотр типов обмена данными, доступных для преобразования электронных документов в документы в Dynamics NAV.];
                      RunObject=Page 1213;
                      Image=Entries;
                      PromotedCategory=Category5 }
      { 46      ;2   ;Action    ;
                      Name=OCRSetup;
                      CaptionML=[ENU=OCR Service Setup;
                                 RUS=Настройка OCR];
                      ToolTipML=[ENU=Open the OCR Service Setup window, for example to change credentials or enable the service.;
                                 RUS=Открытие окна настройки службы OCR, например для изменения учетных данных или включения службы.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 1270;
                      Visible=ShowOCRSetup;
                      Image=ServiceSetup;
                      OnAction=BEGIN
                                 PAGE.RUNMODAL(PAGE::"OCR Service Setup");
                                 CurrPage.UPDATE;
                                 IF CURRENTCLIENTTYPE = CLIENTTYPE::Web THEN
                                   IF OCRIsEnabled THEN BEGIN
                                     OnCloseIncomingDocumentsFromActions(Rec);
                                     CurrPage.CLOSE;
                                   END;
                               END;
                                }
      { 66      ;1   ;Action    ;
                      Name=ApprovalEntries;
                      AccessByPermission=TableData 454=R;
                      CaptionML=[ENU=Approvals;
                                 RUS=Утверждения];
                      ToolTipML=[ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                                 RUS=Просмотр списка записей, ожидающих утверждения. Например, вы можете видеть имя пользователя, запросившего утверждение записи, время отправки запроса и время, когда он должен быть утвержден.];
                      ApplicationArea=#Suite;
                      Image=Approvals;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.OpenApprovalEntriesPage(RECORDID);
                               END;
                                }
      { 29      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 54      ;1   ;ActionGroup;
                      CaptionML=[ENU=Process;
                                 RUS=Процесс] }
      { 45      ;2   ;Action    ;
                      Name=CreateDocument;
                      CaptionML=[ENU=Create Document;
                                 RUS=Создать документ];
                      ToolTipML=[ENU=Create a document, such as a purchase invoice, automatically by converting the electronic document that is attached to the incoming document record.;
                                 RUS=Автоматическое создание документа, например счета покупки, путем преобразования электронного документа, вложенного в запись входящего документа.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=AutomaticCreationActionsAreEnabled;
                      PromotedIsBig=Yes;
                      Image=CreateDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::CreateDocument);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 51      ;2   ;Action    ;
                      Name=CreateGenJnlLine;
                      CaptionML=[ENU=Create Journal Line;
                                 RUS=Создать строку журнала];
                      ToolTipML=[ENU=Create a journal line automatically by converting the electronic document that is attached to the incoming document record.;
                                 RUS=Автоматическое создание строки журнала путем преобразования электронного документа, вложенного в запись входящего документа.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=AutomaticCreationActionsAreEnabled;
                      PromotedIsBig=Yes;
                      Image=TransferToGeneralJournal;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::CreateGenJnlLineWithDataExchange);
                                 CurrPage.UPDATE;
                               END;
                                }
      { 63      ;2   ;Action    ;
                      Name=CreateManually;
                      CaptionML=[ENU=Create Manually;
                                 RUS=Создать вручную];
                      ToolTipML=[ENU=Create a document, such as a purchase invoice, manually from information in the file that is attached to the incoming document record.;
                                 RUS=Создание документа, например счета покупки, вручную на основе информации в файле, вложенном в запись входящего документа.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CreateCreditMemo;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::CreateManually);
                               END;
                                }
      { 39      ;2   ;Action    ;
                      Name=AttachFile;
                      CaptionML=[ENU=Attach File;
                                 RUS=Прикрепить файл];
                      ToolTipML=[ENU=Attach a file to the incoming document record.;
                                 RUS=Вложение файла в запись входящего документа.];
                      ApplicationArea=#Basic,#Suite;
                      Image=Attach;
                      PromotedCategory=Process;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 ImportAttachment(Rec);
                               END;
                                }
      { 49      ;2   ;Action    ;
                      Name=TextToAccountMapping;
                      CaptionML=[ENU=Map Text to Account;
                                 RUS=Определить соответствие текста счетам];
                      ToolTipML=[ENU=Create a mapping of text on incoming documents to identical text on specific debit, credit, and balancing accounts in the general ledger or on bank accounts so that the resulting document or journal lines are prefilled with the specified information.;
                                 RUS=Создание сопоставления между текстом во входящих документах и идентичным текстом в конкретных дебетовых, кредитовых и балансирующих счетах в главной книге или в банковских счетах, чтобы получаемые в результате строки документа или журнала были предварительно заполнены указанной информацией.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 1254;
                      Image=MapAccounts;
                      PromotedCategory=Category5 }
      { 53      ;1   ;ActionGroup;
                      CaptionML=[ENU=Release;
                                 RUS=Выпустить] }
      { 30      ;2   ;Action    ;
                      Name=Release;
                      CaptionML=[ENU=Release;
                                 RUS=Выпустить];
                      ToolTipML=[ENU=Release the incoming document to indicate that it has been approved by the incoming document approver. Note that this is not related to approval workflows.;
                                 RUS=Выпуск входящего документа, чтобы показать, что он был утвержден лицом, утверждающим входящие документы. Обратите внимание, что это не связано с рабочими процессами утверждения.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category4;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::Release);
                               END;
                                }
      { 67      ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=[ENU=Reopen;
                                 RUS=Открыть];
                      ToolTipML=[ENU=Reopen the incoming document record after it has been approved by the incoming document approver. Note that this is not related to approval workflows.;
                                 RUS=Повторное открытие записи входящего документа, после того как он был утвержден лицом, утверждающим входящие документы. Обратите внимание, что это не связано с рабочими процессами утверждения.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ReOpen;
                      PromotedCategory=Category4;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::Reopen);
                               END;
                                }
      { 31      ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=[ENU=Reject;
                                 RUS=Отклонить];
                      ToolTipML=[ENU=Reject to approve the incoming document. Note that this is not related to approval workflows.;
                                 RUS=Отказ в утверждении входящего документа. Обратите внимание, что это не связано с рабочими процессами утверждения.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category4;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::Reject);
                               END;
                                }
      { 68      ;1   ;ActionGroup;
                      CaptionML=[ENU=Status;
                                 RUS=Статус] }
      { 65      ;2   ;Action    ;
                      Name=SetToProcessed;
                      CaptionML=[ENU=Set To Processed;
                                 RUS=Установить состояние "Обработано"];
                      ToolTipML=[ENU=Set the incoming document to processed. It will then be shown in the Incoming Documents window when the Show All view is selected.;
                                 RUS=Установка для входящего документа состояния "Обработан". В этом случае документ будет отображаться в окне "Входящие документы", если выбрано представление "Показать все".];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=SetToProcessedIsEnable;
                      PromotedIsBig=Yes;
                      Image=Archive;
                      PromotedCategory=Category5;
                      Scope=Repeater;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(IncomingDocument);
                                 IncomingDocument.MODIFYALL(Processed,TRUE);
                               END;
                                }
      { 64      ;2   ;Action    ;
                      Name=SetToUnprocessed;
                      CaptionML=[ENU=Set To Unprocessed;
                                 RUS=Установить состояние "Не обработано"];
                      ToolTipML=[ENU=Set the incoming document to unprocessed. It will then be shown in the Incoming Documents window when the Show Unprocessed view is selected.;
                                 RUS=Установка для входящего документа состояния "Не обработан". В этом случае документ будет отображаться в окне "Входящие документы", если выбрано представление "Показать необработанные".];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=NOT SetToProcessedIsEnable;
                      PromotedIsBig=Yes;
                      Image=ReOpen;
                      PromotedCategory=Category5;
                      Scope=Repeater;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(IncomingDocument);
                                 IncomingDocument.MODIFYALL(Processed,FALSE);
                               END;
                                }
      { 61      ;1   ;ActionGroup;
                      CaptionML=[ENU=Request Approval;
                                 RUS=Утверждение запросов];
                      Image=SendApprovalRequest }
      { 60      ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=[ENU=Send A&pproval Request;
                                 RUS=Отправить &запрос на утверждение];
                      ToolTipML=[ENU=Request approval of the incoming document. You can send an approval request as part of a workflow if this has been set up in your organization.;
                                 RUS=Запрос утверждения входящего документа. Запрос утверждения можно отправить в рамках рабочего процесса, если он настроен в вашей организации.];
                      ApplicationArea=#Suite;
                      Enabled=NOT OpenApprovalEntriesExist;
                      Image=SendApprovalRequest;
                      Scope=Repeater;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 TestReadyForApproval;
                                 IF ApprovalsMgmt.CheckIncomingDocApprovalsWorkflowEnabled(Rec) THEN
                                   ApprovalsMgmt.OnSendIncomingDocForApproval(Rec);
                               END;
                                }
      { 59      ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=[ENU=Cancel Approval Re&quest;
                                 RUS=Отменить за&прос на утверждение];
                      ToolTipML=[ENU=Cancel requesting approval of the incoming document.;
                                 RUS=Отмена запроса утверждения входящего документа.];
                      ApplicationArea=#Suite;
                      Enabled=CanCancelApprovalForRecord;
                      Image=CancelApprovalRequest;
                      Scope=Repeater;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.OnCancelIncomingDocApprovalRequest(Rec);
                               END;
                                }
      { 57      ;1   ;ActionGroup;
                      CaptionML=[ENU=Incoming Documents;
                                 RUS=Входящие документы] }
      { 58      ;2   ;Action    ;
                      Name=OpenDocument;
                      CaptionML=[ENU=Open Record;
                                 RUS=Открыть запись];
                      ToolTipML=[ENU=Open the document, journal line, or entry that the incoming document is linked to.;
                                 RUS=Открытие документа, строки журнала или операции, с которыми связан входящий документ.];
                      ApplicationArea=#Basic,#Suite;
                      Image=ViewDetails;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 ShowNAVRecord;
                               END;
                                }
      { 40      ;2   ;Action    ;
                      Name=RemoveReferencedRecord;
                      CaptionML=[ENU=Remove Reference to Record;
                                 RUS=Удалить ссылку на запись];
                      ToolTipML=[ENU=Remove the link that exists from the incoming document to a document, journal line, or entry.;
                                 RUS=Удаление существующей связи между входящим документом и документом, строкой журнала или операцией.];
                      ApplicationArea=#Basic,#Suite;
                      PromotedIsBig=Yes;
                      Image=ClearLog;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 RemoveReferencedRecords;
                               END;
                                }
      { 55      ;2   ;Action    ;
                      Name=Navigate;
                      CaptionML=[ENU=Navigate;
                                 RUS=Навигатор];
                      ToolTipML=[ENU=Find all entries and documents that exist for the document number and posting date on the selected entry or document.;
                                 RUS=Поиск всех операций и документов, существующих для номера документа и даты учета в выбранной операции или в выбранном документе.];
                      ApplicationArea=#Basic,#Suite;
                      PromotedIsBig=Yes;
                      Image=Navigate;
                      Scope=Repeater;
                      OnAction=VAR
                                 NavigatePage@1000 : Page 344;
                               BEGIN
                                 TESTFIELD(Posted);
                                 NavigatePage.SetDoc("Posting Date","Document No.");
                                 NavigatePage.RUN;
                               END;
                                }
      { 52      ;2   ;ActionGroup;
                      Name=Document;
                      CaptionML=[ENU=Record;
                                 RUS=Запись];
                      Visible=FALSE;
                      Enabled=FALSE;
                      Image=Document }
      { 23      ;3   ;Action    ;
                      Name=Journal;
                      CaptionML=[ENU=Journal Line;
                                 RUS=Строка журнала];
                      Image=Journal;
                      Scope=Repeater;
                      OnAction=VAR
                                 GenJournalBatch@1001 : Record 232;
                                 GenJnlManagement@1002 : Codeunit 230;
                               BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::CreateGenJnlLine);
                                 IncomingDocumentsSetup.Fetch;
                                 GenJournalBatch.GET(IncomingDocumentsSetup."General Journal Template Name",IncomingDocumentsSetup."General Journal Batch Name");
                                 GenJnlManagement.TemplateSelectionFromBatch(GenJournalBatch);
                               END;
                                }
      { 26      ;3   ;Action    ;
                      Name=PurchaseInvoice;
                      CaptionML=[ENU=Purchase Invoice;
                                 RUS=Счет покупки];
                      Image=Purchase;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::CreatePurchInvoice);
                               END;
                                }
      { 27      ;3   ;Action    ;
                      Name=PurchaseCreditMemo;
                      CaptionML=[ENU=Purchase Credit Memo;
                                 RUS=Кредит-нота покупки];
                      Image=CreditMemo;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::CreatePurchCreditMemo);
                               END;
                                }
      { 24      ;3   ;Action    ;
                      Name=SalesInvoice;
                      CaptionML=[ENU=Sales Invoice;
                                 RUS=Счет продажи];
                      Image=Sales;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::CreateSalesInvoice);
                               END;
                                }
      { 25      ;3   ;Action    ;
                      Name=SalesCreditMemo;
                      CaptionML=[ENU=Sales Credit Memo;
                                 RUS=Кредит-нота продажи];
                      Image=CreditMemo;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::CreateSalesCreditMemo);
                               END;
                                }
      { 44      ;1   ;ActionGroup;
                      CaptionML=[ENU=OCR;
                                 RUS=OCR] }
      { 41      ;2   ;Action    ;
                      Name=SetReadyForOCR;
                      CaptionML=[ENU=Send to Job Queue;
                                 RUS=Отправить в очередь работ];
                      ToolTipML=[ENU=Set the incoming document to be sent to its recipient as soon as possible.;
                                 RUS=Установка входящего документа, как подлежащего отправке получателю в максимально короткие сроки.];
                      ApplicationArea=#Basic,#Suite;
                      Visible=OCRServiceIsEnabled;
                      Image=Translation;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::SetReadyForOcr);
                               END;
                                }
      { 43      ;2   ;Action    ;
                      Name=UndoSetReadyForOCR;
                      CaptionML=[ENU=Remove from Job Queue;
                                 RUS=Удалить из очереди на работу];
                      ToolTipML=[ENU=Remove the scheduled processing of this record from the job queue.;
                                 RUS=Удаление запланированной обработки этой записи из очереди работ.];
                      ApplicationArea=#Basic,#Suite;
                      Visible=OCRServiceIsEnabled;
                      Image=Translation;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::UndoReadyForOcr);
                               END;
                                }
      { 12      ;2   ;Action    ;
                      Name=SendToOcr;
                      CaptionML=[ENU=Send to OCR Service;
                                 RUS=Отправить в сервис OCR];
                      ToolTipML=[ENU=Send the attached PDF or image file to the OCR service immediately.;
                                 RUS=Немедленная отправка вложенного PDF-файла или файла изображения в службу OCR.];
                      ApplicationArea=#Basic,#Suite;
                      Visible=OCRServiceIsEnabled;
                      Image=Translations;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 IncomingDocumentMultiSelectAction(MultiSelectAction::SendToOcr);
                               END;
                                }
      { 47      ;2   ;Action    ;
                      Name=ReceiveFromOCR;
                      CaptionML=[ENU=Receive from OCR Service;
                                 RUS=Получить из сервиса OCR];
                      ToolTipML=[ENU=Get any electronic documents that are ready to receive from the OCR service.;
                                 RUS=Получение всех электронных документов, готовых к получению из службы OCR.];
                      ApplicationArea=#Basic,#Suite;
                      Visible=OCRServiceIsEnabled;
                      Enabled=EnableReceiveFromOCR;
                      PromotedIsBig=Yes;
                      Image=Import;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"OCR - Receive from Service");
                               END;
                                }
      { 73      ;1   ;ActionGroup;
                      CaptionML=[ENU=Set View;
                                 RUS=Установить представление] }
      { 71      ;2   ;Action    ;
                      Name=ShowAll;
                      CaptionML=[ENU=Show All;
                                 RUS=Показать все];
                      ToolTipML=[ENU=Show both processed and non-processed incoming documents.;
                                 RUS=Отображение как обработанных, так и необработанных входящих документов.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=NOT ShowAllDocsIsEnable;
                      PromotedIsBig=Yes;
                      Image=AllLines;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 SetProcessedDocumentsVisibility(TRUE);
                               END;
                                }
      { 72      ;2   ;Action    ;
                      Name=ShowUnprocessed;
                      CaptionML=[ENU=Show Unprocessed;
                                 RUS=Показать необработанные];
                      ToolTipML=[ENU=Show only unprocessed incoming documents.;
                                 RUS=Отображение только необработанных входящих документов.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=ShowAllDocsIsEnable;
                      PromotedIsBig=Yes;
                      Image=Document;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 SetProcessedDocumentsVisibility(FALSE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the entry number. This field is intended only for internal use.;
                           RUS=Определяет номер операции. Это поле предназначено только для внутреннего использования.];
                SourceExpr="Entry No.";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the description of the incoming document. You must enter the description manually.;
                           RUS=Определяет описание входящего документа. Описание должно вводиться вручную.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description }

    { 35  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the vendor on the incoming document. The field may be filled automatically.;
                           RUS=Определяет имя поставщика во входящем документе. Поле может заполняться автоматически.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Name" }

    { 36  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date that is printed on the incoming document. This is the date when the vendor created the invoice, for example. The field may be filled automatically.;
                           RUS=Определяет дату, напечатанную на входящем документе. Например, это может быть дата создания счета поставщиком. Поле может заполняться автоматически.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Date" }

    { 37  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the invoice number, if the document contains that number. The field may be filled automatically.;
                           RUS=Определяет номер счета, если документ содержит этот номер. Поле может заполняться автоматически.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Invoice No." }

    { 38  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the currency code, if the document contains that code. The field may be filled automatically.;
                           RUS=Определяет код валюты, если документ содержит этот код. Поле может заполняться автоматически.];
                ApplicationArea=#Suite;
                SourceExpr="Currency Code" }

    { 48  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount including VAT for the whole document. The field may be filled automatically.;
                           RUS=Определяет сумму с НДС по всему документу. Поле может заполняться автоматически.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Amount Incl. VAT" }

    { 34  ;2   ;Field     ;
                ExtendedDatatype=URL;
                CaptionML=[ENU=Link to Document;
                           RUS=Ссылка на документ];
                ToolTipML=[ENU=Specifies the location of the file that represents the incoming document.;
                           RUS=Указывает расположение файла, представляющего входящий документ.];
                SourceExpr=URL;
                Importance=Additional;
                Visible=FALSE;
                OnValidate=BEGIN
                             SetURL(URL);
                           END;
                            }

    { 140 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the data exchange type that is used to process the incoming document when it is an electronic document.;
                           RUS=Определяет тип обмена данными, который используется для обработки входящего документа, если он является электронным.];
                SourceExpr="Data Exchange Type";
                Visible=FALSE;
                Editable=IsDataExchTypeEditable }

    { 17  ;2   ;Field     ;
                DrillDown=Yes;
                ToolTipML=[ENU=Specifies the status of the incoming document record.;
                           RUS=Определяет состояние записи входящего документа.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Status;
                StyleExpr=StatusStyleText;
                OnDrillDown=VAR
                              ErrorMessage@1000 : Record 700;
                            BEGIN
                              ErrorMessage.SetContext(RECORDID);
                              ErrorMessage.ShowErrorMessages(FALSE);
                            END;
                             }

    { 62  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the status of the incoming document record when it takes part in the OCR process.;
                           RUS=Определяет состояние записи входящего документа, когда он используется в процессе OCR.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="OCR Status";
                OnDrillDown=VAR
                              OCRServiceSetup@1000 : Record 1270;
                            BEGIN
                              IF NOT OCRServiceSetup.FINDFIRST THEN
                                EXIT;

                              IF OCRServiceSetup.Enabled AND (OCRServiceSetup."Sign-in URL" <> '') THEN
                                HYPERLINK(OCRServiceSetup."Sign-in URL");
                            END;
                             }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies when the incoming document line was created.;
                           RUS=Определяет время создания строки входящего документа.];
                SourceExpr="Created Date-Time";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the user who created the incoming document line.;
                           RUS=Определяет имя пользователя, который создал строку входящего документа.];
                SourceExpr="Created By User Name";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies when the incoming document was approved.;
                           RUS=Определяет, когда был утвержден входящий документ.];
                SourceExpr="Released Date-Time";
                Visible=FALSE }

    { 9   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the user who approved the incoming document.;
                           RUS=Определяет имя пользователя, который утвердил входящий документ.];
                SourceExpr="Released By User Name";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies when the incoming document line was last modified.;
                           RUS=Определяет время последнего изменения строки входящего документа.];
                SourceExpr="Last Date-Time Modified";
                Visible=FALSE }

    { 11  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the user who last modified the incoming document line.;
                           RUS=Определяет имя пользователя, который последним изменил строку входящего документа.];
                SourceExpr="Last Modified By User Name";
                Visible=FALSE }

    { 13  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies when the related document or journal line was posted.;
                           RUS=Определяет время учета связанного документа или строки журнала.];
                SourceExpr="Posted Date-Time";
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of document or journal that the incoming document can be connected to.;
                           RUS=Определяет тип документа или журнала, с которым может быть связан входящий документ.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Type" }

    { 15  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the related document or journal line that is created for the incoming document.;
                           RUS=Определяет номер связанного документа или строки журнала, которые создаются для входящего документа.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document No." }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies when the document or journal line that relates to the incoming document was posted.;
                           RUS=Определяет время учета документа или строки журнала, которые связаны с входящим документом.];
                SourceExpr="Posting Date";
                Visible=FALSE }

    { 70  ;2   ;Field     ;
                DrillDown=Yes;
                ToolTipML=[ENU=Specifies if the incoming document has been processed.;
                           RUS=Определяет, был ли обработан входящий документ.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Processed;
                StyleExpr=StatusStyleText;
                OnDrillDown=VAR
                              ErrorMessage@1000 : Record 700;
                            BEGIN
                              ErrorMessage.SetContext(RECORDID);
                              ErrorMessage.ShowErrorMessages(FALSE);
                            END;
                             }

    { 18  ;0   ;Container ;
                ContainerType=FactBoxArea }

    { 7   ;1   ;Part      ;
                Name=IncomingDocAttachFactBox;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=Incoming Document Entry No.=FIELD(Entry No.);
                PagePartID=Page193;
                PartType=Page;
                ShowFilter=No }

    { 19  ;1   ;Part      ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

    { 20  ;1   ;Part      ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=MyNotes }

    { 21  ;1   ;Part      ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

  }
  CODE
  {
    VAR
      IncomingDocumentsSetup@1001 : Record 131;
      AutomaticProcessingQst@1005 : TextConst 'ENU=The Data Exchange Type field is filled on at least one of the selected Incoming Documents.\\Are you sure you want to create documents manually?;RUS=Поле "Тип обмена данными" заполнено минимум в одном из выбранных входящих документов.\\Действительно создать документы вручную?';
      CameraProvider@1008 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=10.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.CameraProvider" WITHEVENTS RUNONCLIENT;
      HasCamera@1003 : Boolean;
      URL@1006 : Text;
      StatusStyleText@1004 : Text;
      MultiSelectAction@1002 : 'CreateGenJnlLine,CreatePurchInvoice,CreatePurchCreditMemo,CreateSalesInvoice,CreateSalesCreditMemo,Release,Reopen,Reject,CreateDocument,SetReadyForOcr,UndoReadyForOcr,SendToOcr,CreateGenJnlLineWithDataExchange,CreateManually';
      IsDataExchTypeEditable@1000 : Boolean;
      OpenApprovalEntriesExist@1009 : Boolean;
      EnableReceiveFromOCR@1007 : Boolean;
      CanCancelApprovalForRecord@1010 : Boolean;
      ShowOCRSetup@1011 : Boolean;
      OCRServiceIsEnabled@1012 : Boolean;
      AutomaticCreationActionsAreEnabled@1013 : Boolean;
      SetToProcessedIsEnable@1014 : Boolean;
      ShowAllDocsIsEnable@1022 : Boolean;

    LOCAL PROCEDURE IncomingDocumentMultiSelectAction@10(ActionName@1000 : Option);
    VAR
      IncomingDocument@1001 : Record 130;
      ReleaseIncomingDocument@1002 : Codeunit 132;
    BEGIN
      IF NOT AskUserPermission(ActionName) THEN
        EXIT;

      CurrPage.SETSELECTIONFILTER(IncomingDocument);
      IF IncomingDocument.FINDSET THEN
        REPEAT
          CASE ActionName OF
            MultiSelectAction::CreateDocument:
              IncomingDocument.CreateDocumentWithDataExchange;
            MultiSelectAction::CreateManually:
              IncomingDocument.CreateManually;
            MultiSelectAction::CreateGenJnlLine:
              IncomingDocument.CreateGenJnlLine;
            MultiSelectAction::CreateGenJnlLineWithDataExchange:
              IncomingDocument.CreateGeneralJournalLineWithDataExchange;
            MultiSelectAction::CreatePurchInvoice:
              IncomingDocument.CreatePurchInvoice;
            MultiSelectAction::CreatePurchCreditMemo:
              IncomingDocument.CreatePurchCreditMemo;
            MultiSelectAction::CreateSalesInvoice:
              IncomingDocument.CreateSalesInvoice;
            MultiSelectAction::CreateSalesCreditMemo:
              IncomingDocument.CreateSalesCreditMemo;
            MultiSelectAction::Release:
              ReleaseIncomingDocument.PerformManualRelease(IncomingDocument);
            MultiSelectAction::Reopen:
              ReleaseIncomingDocument.PerformManualReopen(IncomingDocument);
            MultiSelectAction::Reject:
              ReleaseIncomingDocument.PerformManualReject(IncomingDocument);
            MultiSelectAction::SetReadyForOcr:
              IncomingDocument.SendToJobQueue(FALSE);
            MultiSelectAction::UndoReadyForOcr:
              IncomingDocument.RemoveFromJobQueue(FALSE);
            MultiSelectAction::SendToOcr:
              IncomingDocument.SendToOCR(FALSE);
          END;
        UNTIL IncomingDocument.NEXT = 0;
    END;

    LOCAL PROCEDURE AskUserPermission@7(ActionName@1000 : Option) : Boolean;
    VAR
      IncomingDocument@1001 : Record 130;
    BEGIN
      CurrPage.SETSELECTIONFILTER(IncomingDocument);
      IF ActionName IN [MultiSelectAction::Reject,
                        MultiSelectAction::Release,
                        MultiSelectAction::SetReadyForOcr,
                        MultiSelectAction::CreateDocument]
      THEN
        EXIT(TRUE);

      IF Status <> Status::New THEN
        EXIT(TRUE);

      IncomingDocument.SETFILTER("Data Exchange Type",'<>%1','');
      IF IncomingDocument.ISEMPTY THEN
        EXIT(TRUE);

      EXIT(CONFIRM(AutomaticProcessingQst));
    END;

    LOCAL PROCEDURE SetControlVisibility@9();
    VAR
      ApprovalsMgmt@1000 : Codeunit 1535;
    BEGIN
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
      EnableReceiveFromOCR := WaitingToReceiveFromOCR;
      OCRServiceIsEnabled := OCRIsEnabled;
      ShowOCRSetup := NOT OCRServiceIsEnabled;
      CanCancelApprovalForRecord := ApprovalsMgmt.CanCancelApprovalForRecord(RECORDID);
      AutomaticCreationActionsAreEnabled := "Data Exchange Type" <> '';
    END;

    [Integration(TRUE,TRUE)]
    LOCAL PROCEDURE OnCloseIncomingDocumentsFromActions@3(VAR IncomingDocument@1000 : Record 130);
    BEGIN
    END;

    LOCAL PROCEDURE SetProcessedDocumentsVisibility@1(ShowProcessedItems@1000 : Boolean);
    BEGIN
      FILTERGROUP(0);

      IF ShowProcessedItems THEN BEGIN
        SETRANGE(Processed);
        ShowAllDocsIsEnable := TRUE;
      END ELSE BEGIN
        SETRANGE(Processed,FALSE);
        ShowAllDocsIsEnable := FALSE;
      END;
    END;

    EVENT CameraProvider@1008::PictureAvailable@11(PictureName@1001 : Text;PictureFilePath@1000 : Text);
    BEGIN
      CreateIncomingDocumentFromServerFile(PictureName,PictureFilePath);
    END;

    BEGIN
    END.
  }
}

