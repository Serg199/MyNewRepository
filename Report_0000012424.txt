OBJECT Report 12424 Copy Payment Document
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Copy Payment Document;
               RUS=Копирование платежного документа];
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 7024;    ;DataItem;                    ;
               DataItemTable=Table81;
               DataItemTableView=SORTING(Journal Template Name,Journal Batch Name,Line No.);
               MaxIteration=1;
               OnAfterGetRecord=BEGIN
                                  TESTFIELD("Check Printed",FALSE);

                                  CheckLedgerEntry.RESET;
                                  CheckLedgerEntry.SETRANGE("Document No.",DocumentNo);
                                  CheckLedgerEntry.SETRANGE("Posting Date",PostingDate);
                                  IF CheckLedgerEntry.FIND('-') THEN BEGIN

                                    BankAccount.GET("Bal. Account No.");
                                    SourceAccType := BankAccount."Account Type";
                                    BankAccount.GET(CheckLedgerEntry."Bank Account No.");
                                    IF BankAccount."Account Type" <> SourceAccType THEN
                                      BankAccount.FIELDERROR("Account Type");

                                    "Posting Date" := PostingDate;
                                    "Document Type" := CheckLedgerEntry."Document Type";
                                    "Document No." := '';
                                    "Account Type" := CheckLedgerEntry."Bal. Account Type";
                                    VALIDATE("Account No.",CheckLedgerEntry."Bal. Account No.");
                                    Description := CheckLedgerEntry.Description;
                                    Correction :=
                                      (CheckLedgerEntry."Debit Amount" < 0) OR (CheckLedgerEntry."Credit Amount" < 0);
                                    VALIDATE(Amount,- CheckLedgerEntry.Amount);
                                    "Payment Purpose" := CheckLedgerEntry."Payment Purpose";
                                    "Cash Order Including" := CheckLedgerEntry."Cash Order Including";
                                    "Cash Order Supplement" := CheckLedgerEntry."Cash Order Supplement";
                                    "Payment Method" := CheckLedgerEntry."Payment Method";
                                    "Payment Date" := CheckLedgerEntry."Payment Before Date";
                                    "Payment Subsequence" := CheckLedgerEntry."Payment Subsequence";
                                    "Payment Code" := CheckLedgerEntry."Payment Code";
                                    "Payment Assignment" := CheckLedgerEntry."Payment Assignment";
                                    "Payment Type" := CheckLedgerEntry."Payment Type";
                                    "Beneficiary Bank Code" := CheckLedgerEntry."Beneficiary Bank Code";

                                    KBK := CheckLedgerEntry.KBK;
                                    OKATO := CheckLedgerEntry.OKATO;
                                    "Payment Reason Code" := CheckLedgerEntry."Payment Reason Code";
                                    "Reason Document Type" := CheckLedgerEntry."Reason Document Type";
                                    "Reason Document No." := CheckLedgerEntry."Reason Document No.";
                                    "Reason Document Date" := CheckLedgerEntry."Reason Document Date";
                                    "Tax Payment Type" := CheckLedgerEntry."Tax Payment Type";
                                    "Period Code" := CheckLedgerEntry."Period Code";
                                    "Tax Period" := CheckLedgerEntry."Tax Period";
                                    "Taxpayer Status" := CheckLedgerEntry."Taxpayer Status";

                                    CASE CheckLedgerEntry."Entry Status" OF
                                      CheckLedgerEntry."Entry Status"::Printed,
                                      CheckLedgerEntry."Entry Status"::"Test Print":BEGIN
                                        GenJnlLine.SETCURRENTKEY(
                                          "Journal Template Name","Journal Batch Name","Posting Date","Document No.");
                                        GenJnlLine.SETRANGE("Posting Date",PostingDate);
                                        GenJnlLine.SETRANGE("Document No.",DocumentNo);
                                        IF GenJnlLine.FIND('-') THEN BEGIN
                                          "Shortcut Dimension 1 Code" := GenJnlLine."Shortcut Dimension 1 Code";
                                          "Shortcut Dimension 2 Code" := GenJnlLine."Shortcut Dimension 2 Code";
                                          "Dimension Set ID" := GenJnlLine."Dimension Set ID";
                                        END;
                                      END ELSE BEGIN
                                        BankLedgEntry.SETCURRENTKEY("Document No.","Posting Date");
                                        BankLedgEntry.SETRANGE("Document No.",DocumentNo);
                                        BankLedgEntry.SETRANGE("Posting Date",PostingDate);
                                        IF BankLedgEntry.FIND('-') THEN BEGIN
                                          "Shortcut Dimension 1 Code" := BankLedgEntry."Global Dimension 1 Code";
                                          "Shortcut Dimension 2 Code" := BankLedgEntry."Global Dimension 2 Code";
                                          "Dimension Set ID" := GenJnlLine."Dimension Set ID";
                                        END;
                                      END;
                                    END;
                                    MODIFY;
                                  END ELSE
                                    ERROR(Text001);
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             RUS=Параметры] }

      { 1210002;2;Field     ;
                  CaptionML=[ENU=Document No.;
                             RUS=Номер документа];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=DocumentNo;
                  OnLookup=BEGIN
                             IF PAGE.RUNMODAL(PAGE::"Check Ledger Entries",CheckLedgerEntry) = ACTION::LookupOK THEN BEGIN
                               DocumentNo := CheckLedgerEntry."Document No.";
                               PostingDate := CheckLedgerEntry."Posting Date";
                             END;
                           END;
                            }

      { 1210000;2;Field     ;
                  CaptionML=[ENU=Posting Date;
                             RUS=Дата учета];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=PostingDate }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      GenJnlLine@1210000 : Record 81;
      CheckLedgerEntry@1210003 : Record 272;
      DocumentNo@1210001 : Code[20];
      PostingDate@1210002 : Date;
      Text001@1210004 : TextConst 'ENU=Document not found;RUS=Документ не найден';
      DimMgt@1470000 : Codeunit 408;
      BankLedgEntry@1470002 : Record 271;
      BankAccount@1470004 : Record 270;
      SourceAccType@1470005 : Integer;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

