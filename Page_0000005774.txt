OBJECT Page 5774 Warehouse Activity List
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Warehouse Activity List;
               RUS=Список складских заданий];
    SourceTable=Table5766;
    PageType=List;
    OnOpenPage=BEGIN
                 ErrorIfUserIsNotWhseEmployee;
               END;

    OnFindRecord=BEGIN
                   EXIT(FindFirstAllowedRec(Which));
                 END;

    OnNextRecord=BEGIN
                   EXIT(FindNextAllowedRec(Steps));
                 END;

    OnAfterGetCurrRecord=BEGIN
                           CurrPage.CAPTION := FormCaption;
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 17      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 RUS=&Строка];
                      Image=Line }
      { 18      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 RUS=Карточка];
                      Image=EditLines;
                      OnAction=BEGIN
                                 CASE Type OF
                                   Type::"Put-away":
                                     PAGE.RUN(PAGE::"Warehouse Put-away",Rec);
                                   Type::Pick:
                                     PAGE.RUN(PAGE::"Warehouse Pick",Rec);
                                   Type::Movement:
                                     PAGE.RUN(PAGE::"Warehouse Movement",Rec);
                                   Type::"Invt. Put-away":
                                     PAGE.RUN(PAGE::"Inventory Put-away",Rec);
                                   Type::"Invt. Pick":
                                     PAGE.RUN(PAGE::"Inventory Pick",Rec);
                                   Type::"Invt. Movement":
                                     PAGE.RUN(PAGE::"Inventory Movement",Rec);
                                 END;
                               END;
                                }
      { 1900000006;0 ;ActionContainer;
                      ActionContainerType=Reports }
      { 1903358206;1 ;Action    ;
                      CaptionML=[ENU=Put-away List;
                                 RUS=Список размещения];
                      RunObject=Report 5751;
                      Promoted=No;
                      Image=Report;
                      PromotedCategory=Report }
      { 1905733806;1 ;Action    ;
                      CaptionML=[ENU=Picking List;
                                 RUS=Сборочный лист];
                      RunObject=Report 5752;
                      Promoted=No;
                      Image=Report;
                      PromotedCategory=Report }
      { 1906867906;1 ;Action    ;
                      CaptionML=[ENU=Warehouse Movement List;
                                 RUS=Список складских перемещений];
                      RunObject=Report 7301;
                      Promoted=No;
                      Image=Report;
                      PromotedCategory=Report }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the warehouse header.;
                           RUS=Определяет номер складского заголовка.];
                SourceExpr="No." }

    { 25  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of document to which the line relates, including sales order, purchase order, or transfer order.;
                           RUS=Определяет тип документа, к которому относится строка, включая заказ на продажу, заказ на покупку или заказ на перемещение.];
                SourceExpr="Source Document" }

    { 27  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the source document from which the activity originated.;
                           RUS=Определяет номер исходного документа для задания.];
                SourceExpr="Source No." }

    { 15  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of activity, such as Put-away, that the warehouse performs on the lines that are attached to the header.;
                           RUS=Определяет тип задания, например размещение, выполняемого на складе над строками, относящимися к заголовку.];
                SourceExpr=Type;
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the location where the warehouse activity takes place.;
                           RUS=Определяет код склада, на котором выполняется складское задание.];
                SourceExpr="Location Code" }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies information about the type of destination, such as customer or vendor, associated with the warehouse activity.;
                           RUS=Определяет сведения о типе пункта назначения (например, клиент или поставщик), связанного с этим складским заданием.];
                SourceExpr="Destination Type" }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number or the code of the customer or vendor that the line is linked to.;
                           RUS=Определяет номер или код клиента или поставщика, с которым связана строка.];
                SourceExpr="Destination No." }

    { 23  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the external document number for the source document to which the warehouse activity is related.;
                           RUS=Определяет номер внешнего документа для документа-источника, с которым связано складское задание.];
                SourceExpr="External Document No." }

    { 19  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of the user who is responsible for the document.;
                           RUS=Определяет код пользователя, который отвечает за документ.];
                SourceExpr="Assigned User ID";
                Visible=FALSE }

    { 21  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of lines in the warehouse activity document.;
                           RUS=Определяет количество строк в документе складского задания.];
                SourceExpr="No. of Lines" }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the method by which the lines are sorted on the warehouse header, such as Item or Document.;
                           RUS=Определяет метод сортировки строк в заголовке склада, например по товару или по документу.];
                SourceExpr="Sorting Method";
                Visible=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Text000@1002 : TextConst 'ENU=Warehouse Put-away List;RUS=Список складских размещений';
      Text001@1003 : TextConst 'ENU=Warehouse Pick List;RUS=Список складских подборов';
      Text002@1004 : TextConst 'ENU=Warehouse Movement List;RUS=Список складских перемещений';
      Text003@1005 : TextConst 'ENU=Warehouse Activity List;RUS=Список складских заданий';
      Text004@1006 : TextConst 'ENU=Inventory Put-away List;RUS=Список товарных размещений';
      Text005@1007 : TextConst 'ENU=Inventory Pick List;RUS=Список товарных подборов';
      Text006@1000 : TextConst 'ENU=Inventory Movement List;RUS=Список перемещений запасов';

    LOCAL PROCEDURE FormCaption@1() : Text[250];
    BEGIN
      CASE Type OF
        Type::"Put-away":
          EXIT(Text000);
        Type::Pick:
          EXIT(Text001);
        Type::Movement:
          EXIT(Text002);
        Type::"Invt. Put-away":
          EXIT(Text004);
        Type::"Invt. Pick":
          EXIT(Text005);
        Type::"Invt. Movement":
          EXIT(Text006);
        ELSE
          EXIT(Text003);
      END;
    END;

    BEGIN
    END.
  }
}

