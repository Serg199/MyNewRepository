OBJECT Report 17441 Timesheet T-13
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Timesheet T-13;
               RUS=Табель учета времени Т-13];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   CLEAR(MarkExcelMap);
                   MarkExcelMap[1] := 'AW';
                   MarkExcelMap[2] := 'BA';
                   MarkExcelMap[3] := 'BE';
                   MarkExcelMap[4] := 'BI';
                   MarkExcelMap[5] := 'BM';
                   MarkExcelMap[6] := 'BQ';
                   MarkExcelMap[7] := 'BU';
                   MarkExcelMap[8] := 'BY';
                   MarkExcelMap[9] := 'CC';
                   MarkExcelMap[10] := 'CG';
                   MarkExcelMap[11] := 'CK';
                   MarkExcelMap[12] := 'CO';
                   MarkExcelMap[13] := 'CS';
                   MarkExcelMap[14] := 'CW';
                   MarkExcelMap[15] := 'DA';
                   MarkExcelMap[16] := 'DE';

                   HalfMonthDayConst := 16;
                 END;

    OnPreReport=VAR
                  HumResSetup@1210000 : Record 5218;
                BEGIN
                  CompanyInfo.GET;

                  HumResSetup.GET;
                  HumResSetup.TESTFIELD("T-13 Template Code");
                  FileName := ExcelTemplate.OpenTemplate(HumResSetup."T-13 Template Code");

                  CompanyInfo.GET;
                END;

    OnPostReport=BEGIN
                   ExcelMgt.DeleteSheet('1');
                   IF NOT TestMode THEN
                     ExcelMgt.GiveUserControl
                   ELSE
                     ExcelMgt.QuitXlApp;
                 END;

  }
  DATASET
  {
    { 3452;    ;DataItem;OrgUnitSheets       ;
               DataItemTable=Table12422;
               DataItemTableView=SORTING(Code)
                                 WHERE(Type=CONST(Unit));
               OnPreDataItem=BEGIN
                               ExcelMgt.OpenBook(FileName);
                             END;

               OnAfterGetRecord=BEGIN
                                  ExcelMgt.CopySheet('1','1',Code + ' ' + Name);
                                  OrgUnitName := Code + ' ' + Name;
                                END;

               ReqFilterFields=Code }

    { 6670;    ;DataItem;                    ;
               DataItemTable=Table12422;
               DataItemTableView=SORTING(Code)
                                 WHERE(Type=CONST(Unit));
               PrintOnlyIfDetail=Yes;
               OnPreDataItem=BEGIN
                               "Organizational Unit".COPYFILTERS(OrgUnitSheets);

                               LastDay := CALCDATE('<CM>',DMY2DATE(1,Month + 1,Year));
                               FirstDay := CALCDATE('<-CM>',DMY2DATE(1,Month + 1,Year));
                               MaxDayNo := LastDay - FirstDay + 1;
                             END;

               OnAfterGetRecord=VAR
                                  Employee@1210000 : Record 5200;
                                  LocalRepMgt@1210001 : Codeunit 12401;
                                BEGIN
                                  ExcelMgt.OpenSheet(Code + ' ' + Name);

                                  // header
                                  ExcelMgt.FillCell('A7',LocalRepMgt.GetCompanyName);
                                  ExcelMgt.FillCell('II7',CompanyInfo."OKPO Code");
                                  ExcelMgt.FillCell('A9',Name);
                                  ExcelMgt.FillCell('EA13',NumDocument);
                                  ExcelMgt.FillCell('ES13',FORMAT(LastDay));
                                  ExcelMgt.FillCell('FT13',FORMAT(FirstDay));
                                  ExcelMgt.FillCell('GG13',FORMAT(LastDay));

                                  // footer
                                  IF Employee.GET("Timesheet Owner") THEN BEGIN
                                    ExcelMgt.FillCell('X30',Employee.GetJobTitleName);
                                    ExcelMgt.FillCell('BO30',Employee.GetNameInitials);
                                  END;

                                  IF Employee.GET("Manager No.") THEN BEGIN
                                    ExcelMgt.FillCell('FG30',Employee.GetJobTitleName);
                                    ExcelMgt.FillCell('GW30',Employee.GetNameInitials);
                                  END;

                                  IF Employee.GET(CompanyInfo."HR Manager No.") THEN BEGIN
                                    ExcelMgt.FillCell('FG33',Employee.GetJobTitleName);
                                    ExcelMgt.FillCell('GW33',Employee.GetNameInitials);
                                  END;
                                  RowNo := 24;
                                END;
                                 }

    { 6071;1   ;DataItem;                    ;
               DataItemTable=Table17363;
               DataItemTableView=SORTING(Org. Unit Code,Job Title Code,Starting Date);
               OnPreDataItem=BEGIN
                               EmployeeReportNumber := 0;
                             END;

               OnAfterGetRecord=VAR
                                  Employee@1210000 : Record 5200;
                                  Position@1210002 : Record 17370;
                                BEGIN
                                  ExcelMgt.CopyRowsTo(RowNo,RowNo + 3,RowNo + 4);

                                  IF NOT (("Starting Date" <= LastDay) AND
                                          (("Ending Date" >= FirstDay) OR ("Ending Date" = 0D)))
                                  THEN
                                    CurrReport.BREAK;

                                  ExcelMgt.FillCell('A' + FORMAT(RowNo),FORMAT(EmployeeReportNumber));

                                  Employee.GET("Employee No.");
                                  ExcelMgt.FillCell('I' + FORMAT(RowNo),Employee.GetNameInitials + ' ' + Employee.GetJobTitleName);

                                  ExcelMgt.FillCell('AJ' + FORMAT(RowNo),"Employee No.");

                                  Position.GET("Position No.");
                                  ExcelMgt.FillCell('EA' + FORMAT(RowNo),Position."Job Title Code");
                                  ExcelMgt.FillCell('EK' + FORMAT(RowNo),Position."Posting Group");

                                  EmployeeReportNumber += 1;
                                END;

               DataItemLink=Org. Unit Code=FIELD(Code) }

    { 7191;2   ;DataItem;                    ;
               DataItemTable=Table17442;
               DataItemTableView=SORTING(Employee No.,Date,Time Activity Code);
               OnPreDataItem=BEGIN
                               SETFILTER(Date,'>=%1&<=%2',FirstDay,LastDay);

                               HoursFirstHalf := 0;
                               DaysFirstHalf := 0;
                               HoursSecondHalf := 0;
                               DaysSecondHalf := 0;
                               WorkingDaysFirstHalfMonth := 0;
                               WorkingDaysSecondHalfMonth := 0;

                               AbsenceBuffer.RESET;
                               AbsenceBuffer.DELETEALL;

                               IsFirstEntry := TRUE;
                               DayNo := 0;

                               ActivityCellText := '';
                               HoursCellText := '';
                             END;

               OnAfterGetRecord=VAR
                                  ActivityCode@1210001 : Code[10];
                                BEGIN
                                  IF (DayNo <> DATE2DMY(Date,1)) AND (DayNo <> 0) THEN BEGIN
                                    FillDayCells(DayNo,ActivityCellText,HoursCellText);
                                    ActivityCellText := '';
                                    HoursCellText := '';
                                    IsFirstEntry := TRUE;
                                  END;

                                  IF UseTimesheetCodes THEN
                                    ActivityCode := "Timesheet Code"
                                  ELSE
                                    ActivityCode := "Time Activity Code";

                                  IF NOT IsWorkingActivity("Time Activity Code") THEN
                                    InsertAbsenceActivity("Timesheet Detail",1,ActivityCode);

                                  IF IsFirstEntry THEN BEGIN
                                    ActivityCellText := ActivityCode;
                                    IF IsWorkingActivity("Time Activity Code") THEN
                                      HoursCellText := FORMAT("Actual Hours");
                                  END ELSE BEGIN
                                    ActivityCellText := ActivityCellText + '/' + ActivityCode;
                                    IF IsWorkingActivity("Time Activity Code") THEN
                                      HoursCellText := HoursCellText + '/' + FORMAT("Actual Hours");
                                  END;

                                  IF IsWorkingActivity("Time Activity Code") THEN
                                    IF DATE2DMY(Date,1) < HalfMonthDayConst THEN BEGIN
                                      HoursFirstHalf += "Actual Hours";
                                      WorkingDaysFirstHalfMonth += 1;
                                    END ELSE BEGIN
                                      HoursSecondHalf += "Actual Hours";
                                      WorkingDaysSecondHalfMonth += 1;
                                    END;
                                  IsFirstEntry := FALSE;

                                  DayNo := DATE2DMY(Date,1);
                                END;

               OnPostDataItem=BEGIN
                                IF DayNo <> 0 THEN
                                  FillDayCells(DayNo,ActivityCellText,HoursCellText);

                                ExcelMgt.FillCell('DI' + FORMAT(RowNo),FORMAT(WorkingDaysFirstHalfMonth));
                                ExcelMgt.FillCell('DI' + FORMAT(RowNo + 1),FORMAT(HoursFirstHalf));
                                ExcelMgt.FillCell('DI' + FORMAT(RowNo + 2),FORMAT(WorkingDaysSecondHalfMonth));
                                ExcelMgt.FillCell('DI' + FORMAT(RowNo + 3),FORMAT(HoursSecondHalf));

                                ExcelMgt.FillCell('DT' + FORMAT(RowNo),FORMAT(WorkingDaysFirstHalfMonth + WorkingDaysSecondHalfMonth));
                                ExcelMgt.FillCell('DT' + FORMAT(RowNo + 2),FORMAT(HoursSecondHalf + HoursFirstHalf));

                                ExcelMgt.FillCell('EZ' + FORMAT(RowNo),FORMAT(DaysFirstHalf + DaysSecondHalf));

                                FillAbsenceActivities;

                                RowNo += 4;
                              END;

               ReqFilterFields=Time Activity Code,Timesheet Code;
               DataItemLink=Employee No.=FIELD(Employee No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   Year := DATE2DMY(TODAY,3);
                   Month := DATE2DMY(TODAY,2) - 1;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             RUS=Параметры] }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Year;
                             RUS=Год];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=Year;
                  MinValue=1;
                  MaxValue=9999;
                  OnLookup=BEGIN
                             IF Year < 9999 THEN
                               Year := Year + 1;
                             RequestOptionsPage.UPDATE;
                           END;

                  OnDrillDown=BEGIN
                                IF Year > 1 THEN
                                  Year := Year - 1;
                                RequestOptionsPage.UPDATE;
                              END;
                               }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Month;
                             RUS=Месяц];
                  OptionCaptionML=[ENU=January,February,March,April,May,June,July,August,September,October,November,December;
                                   RUS=Январь,Февраль,Март,Апрель,Май,Июнь,Июль,Август,Сентябрь,Октябрь,Ноябрь,Декабрь];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=Month }

      { 6   ;2   ;Field     ;
                  CaptionML=[ENU=Document No.;
                             RUS=Номер документа];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=NumDocument }

      { 1210002;2;Field     ;
                  CaptionML=[ENU=Use Timesheet Codes;
                             RUS=Исп. табельные коды];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=UseTimesheetCodes }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CompanyInfo@1210000 : Record 79;
      AbsenceBuffer@1210012 : TEMPORARY Record 47;
      ExcelTemplate@1210022 : Record 14919;
      ExcelMgt@1210019 : Codeunit 12416;
      Month@1210007 : 'Январь,Февраль,Март,Апрель,Май,Июнь,Июль,Август,Сентябрь,Октябрь,Ноябрь,Декабрь';
      Year@1210008 : Integer;
      LastDay@1210020 : Date;
      FirstDay@1210021 : Date;
      NumDocument@1477000 : Text[30];
      OrgUnitName@1210038 : Text[60];
      RowNo@1210039 : Integer;
      MarkExcelMap@1210005 : ARRAY [16] OF Text[30];
      MaxDayNo@1210002 : Integer;
      FileName@1210001 : Text[1024];
      HoursFirstHalf@1210003 : Decimal;
      HoursSecondHalf@1210004 : Decimal;
      DaysFirstHalf@1210006 : Decimal;
      DaysSecondHalf@1210010 : Decimal;
      WorkingDaysFirstHalfMonth@1210009 : Decimal;
      WorkingDaysSecondHalfMonth@1210018 : Decimal;
      IsFirstEntry@1210011 : Boolean;
      ActivityCellText@1210013 : Text[250];
      HoursCellText@1210014 : Text[250];
      DayNo@1210015 : Integer;
      HalfMonthDayConst@1210016 : Integer;
      EmployeeReportNumber@1210017 : Integer;
      UseTimesheetCodes@1210023 : Boolean;
      TestMode@1210024 : Boolean;

    PROCEDURE FillAbsenceActivities@1210006();
    VAR
      AbsenceRowNo@1210000 : Integer;
    BEGIN
      AbsenceBuffer.RESET;
      IF NOT AbsenceBuffer.FINDSET THEN
        EXIT;

      REPEAT
        IF AbsenceRowNo <= 3 THEN BEGIN
          ExcelMgt.FillCell('GO' + FORMAT(RowNo + AbsenceRowNo),AbsenceBuffer."Currency Code");
          ExcelMgt.FillCell('HD' + FORMAT(RowNo + AbsenceRowNo),FORMAT(AbsenceBuffer."Column 1 Amt."));
        END ELSE BEGIN
          ExcelMgt.FillCell('HS' + FORMAT(RowNo + AbsenceRowNo - 4),AbsenceBuffer."Currency Code");
          ExcelMgt.FillCell('IH' + FORMAT(RowNo + AbsenceRowNo - 4),FORMAT(AbsenceBuffer."Column 1 Amt."));
        END;

        AbsenceRowNo += 1;
      UNTIL (AbsenceBuffer.NEXT = 0) OR (AbsenceRowNo >= 8);
    END;

    PROCEDURE InsertAbsenceActivity@1210012(VAR TimesheetDetail@1210001 : Record 17442;Days@1210000 : Integer;ActivityCode@1210003 : Code[10]) IsAbsenceActivity : Boolean;
    VAR
      TimeActivity@1210002 : Record 5206;
    BEGIN
      IF NOT CheckActivityCode(ActivityCode,TimesheetDetail.Date) THEN
        EXIT(FALSE);

      TimeActivity.GET(TimesheetDetail."Time Activity Code");

      AbsenceBuffer.RESET;
      IsAbsenceActivity := TRUE;

      IF TimeActivity."Time Activity Type" > 0 THEN
        IF AbsenceBuffer.GET(ActivityCode) THEN BEGIN
          AbsenceBuffer."Column 1 Amt." += Days;
          AbsenceBuffer.MODIFY;
        END ELSE BEGIN
          AbsenceBuffer.INIT;
          AbsenceBuffer."Currency Code" := ActivityCode;
          AbsenceBuffer."Column 1 Amt." := Days;
          AbsenceBuffer.INSERT;
        END
      ELSE
        IsAbsenceActivity := FALSE;

      EXIT(IsAbsenceActivity);
    END;

    PROCEDURE FillDayCells@1210056(DayNo@1210000 : Integer;ActivityCellText@1210001 : Text[250];HoursCellText@1210002 : Text[250]);
    BEGIN
      IF DayNo < HalfMonthDayConst THEN BEGIN
        ExcelMgt.FillCell(MarkExcelMap[DayNo] + FORMAT(RowNo),ActivityCellText);
        ExcelMgt.FillCell(MarkExcelMap[DayNo] + FORMAT(RowNo + 1),HoursCellText);

        DaysFirstHalf += 1;
      END ELSE BEGIN
        ExcelMgt.FillCell(MarkExcelMap[DayNo - (HalfMonthDayConst - 1)] + FORMAT(RowNo + 2),ActivityCellText);
        ExcelMgt.FillCell(MarkExcelMap[DayNo - (HalfMonthDayConst - 1)] + FORMAT(RowNo + 3),HoursCellText);

        DaysSecondHalf += 1;
      END;
    END;

    PROCEDURE CheckActivityCode@1210000(ActivityCode@1210000 : Code[10];ActivityDate@1210003 : Date) : Boolean;
    VAR
      HumResSetup@1210001 : Record 5218;
      TimeActivityGroup@1210002 : Record 17444;
    BEGIN
      HumResSetup.GET;

      IF TimeActivityGroup.GET(HumResSetup."T-13 Weekend Work Group code") THEN
        EXIT(NOT TimeActivityGroup.TimeActivityInGroup(ActivityCode,ActivityDate));

      EXIT(TRUE);
    END;

    PROCEDURE IsWorkingActivity@1210020(ActivityCode@1210001 : Code[10]) : Boolean;
    VAR
      TimeActivity@1210000 : Record 5206;
    BEGIN
      IF TimeActivity.GET(ActivityCode) THEN
        EXIT((TimeActivity."Time Activity Type" = TimeActivity."Time Activity Type"::Presence) OR
          (TimeActivity."Time Activity Type" = TimeActivity."Time Activity Type"::Travel));

      EXIT(FALSE);
    END;

    PROCEDURE SetTestMode@1210001(NewTestMode@1210000 : Boolean);
    BEGIN
      TestMode := NewTestMode;
      Year := DATE2DMY(WORKDATE,3) - 1;
      Month := 11;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

