OBJECT Table 114 Sales Cr.Memo Header
{
  OBJECT-PROPERTIES
  {
    Date=07.06.17;
    Time=17:33:00;
    Modified=Yes;
    Version List=NAVW110.00.00.15601,NAVRU10.00.00.15601,NOS-26;
  }
  PROPERTIES
  {
    DataCaptionFields=No.,Sell-to Customer Name;
    OnDelete=VAR
               PostedDeferralHeader@1002 : Record 1704;
               PostSalesDelete@1000 : Codeunit 363;
               DeferralUtilities@1001 : Codeunit 1720;
             BEGIN
               //NC MTF01 > PCH
               TESTFIELD("External Document ID",'');
               //NC MTF01 < PCH
               PostSalesDelete.IsDocumentDeletionAllowed("Posting Date");
               TESTFIELD("No. Printed");
               LOCKTABLE;
               PostSalesDelete.DeleteSalesCrMemoLines(Rec);

               SalesCommentLine.SETRANGE("Document Type",SalesCommentLine."Document Type"::"Posted Credit Memo");
               SalesCommentLine.SETRANGE("No.","No.");
               SalesCommentLine.DELETEALL;

               DocSignMgt.DeletePostedDocSign(DATABASE::"Sales Cr.Memo Header","No.");

               ApprovalsMgmt.DeletePostedApprovalEntries(RECORDID);
               PostedDeferralHeader.DeleteForDoc(DeferralUtilities.GetSalesDeferralDocType,'','',
                 SalesCommentLine."Document Type"::"Posted Credit Memo","No.");
             END;

    CaptionML=[ENU=Sales Cr.Memo Header;
               RUS=Заголовок кредит-ноты продажи];
    LookupPageID=Page144;
    DrillDownPageID=Page144;
  }
  FIELDS
  {
    { 2   ;   ;Sell-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Sell-to Customer No.;
                                                              RUS=Код клиента];
                                                   NotBlank=Yes }
    { 3   ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              RUS=Номер] }
    { 4   ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Bill-to Customer No.;
                                                              RUS=Код плательщика];
                                                   NotBlank=Yes }
    { 5   ;   ;Bill-to Name        ;Text50        ;CaptionML=[ENU=Bill-to Name;
                                                              RUS=Название плательщика] }
    { 6   ;   ;Bill-to Name 2      ;Text50        ;CaptionML=[ENU=Bill-to Name 2;
                                                              RUS=Название 2 плательщика] }
    { 7   ;   ;Bill-to Address     ;Text50        ;CaptionML=[ENU=Bill-to Address;
                                                              RUS=Адрес плательщика] }
    { 8   ;   ;Bill-to Address 2   ;Text50        ;CaptionML=[ENU=Bill-to Address 2;
                                                              RUS=Адрес 2 плательщика] }
    { 9   ;   ;Bill-to City        ;Text30        ;TableRelation="Post Code".City;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Bill-to City;
                                                              RUS=Город плательщика] }
    { 10  ;   ;Bill-to Contact     ;Text50        ;CaptionML=[ENU=Bill-to Contact;
                                                              RUS=Контакт плательщика] }
    { 11  ;   ;Your Reference      ;Text35        ;CaptionML=[ENU=Your Reference;
                                                              RUS=Ваша ссылка] }
    { 12  ;   ;Ship-to Code        ;Code10        ;TableRelation="Ship-to Address".Code WHERE (Customer No.=FIELD(Sell-to Customer No.));
                                                   CaptionML=[ENU=Ship-to Code;
                                                              RUS=Код получателя] }
    { 13  ;   ;Ship-to Name        ;Text50        ;CaptionML=[ENU=Ship-to Name;
                                                              RUS=Название получателя] }
    { 14  ;   ;Ship-to Name 2      ;Text50        ;CaptionML=[ENU=Ship-to Name 2;
                                                              RUS=Название 2 получателя] }
    { 15  ;   ;Ship-to Address     ;Text50        ;CaptionML=[ENU=Ship-to Address;
                                                              RUS=Адрес получателя] }
    { 16  ;   ;Ship-to Address 2   ;Text50        ;CaptionML=[ENU=Ship-to Address 2;
                                                              RUS=Адрес 2 получателя] }
    { 17  ;   ;Ship-to City        ;Text30        ;TableRelation="Post Code".City;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Ship-to City;
                                                              RUS=Город получателя] }
    { 18  ;   ;Ship-to Contact     ;Text50        ;CaptionML=[ENU=Ship-to Contact;
                                                              RUS=Контакт получателя] }
    { 20  ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              RUS=Дата учета] }
    { 21  ;   ;Shipment Date       ;Date          ;CaptionML=[ENU=Shipment Date;
                                                              RUS=Дата отгрузки] }
    { 22  ;   ;Posting Description ;Text50        ;CaptionML=[ENU=Posting Description;
                                                              RUS=Описание учета] }
    { 23  ;   ;Payment Terms Code  ;Code10        ;TableRelation="Payment Terms";
                                                   CaptionML=[ENU=Payment Terms Code;
                                                              RUS=Код условий платежа] }
    { 24  ;   ;Due Date            ;Date          ;CaptionML=[ENU=Due Date;
                                                              RUS=Срок оплаты] }
    { 25  ;   ;Payment Discount %  ;Decimal       ;CaptionML=[ENU=Payment Discount %;
                                                              RUS=Скидка оплаты (%)];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 26  ;   ;Pmt. Discount Date  ;Date          ;CaptionML=[ENU=Pmt. Discount Date;
                                                              RUS=Дата скидки оплаты] }
    { 27  ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   CaptionML=[ENU=Shipment Method Code;
                                                              RUS=Код метода поставки] }
    { 28  ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=[ENU=Location Code;
                                                              RUS=Код склада] }
    { 29  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              RUS=Код ярлыка измерения 1];
                                                   CaptionClass='1,2,1' }
    { 30  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              RUS=Код ярлыка измерения 2];
                                                   CaptionClass='1,2,2' }
    { 31  ;   ;Customer Posting Group;Code10      ;TableRelation="Customer Posting Group";
                                                   CaptionML=[ENU=Customer Posting Group;
                                                              RUS=Учетная группа клиента];
                                                   Editable=No }
    { 32  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              RUS=Код валюты];
                                                   Editable=No }
    { 33  ;   ;Currency Factor     ;Decimal       ;CaptionML=[ENU=Currency Factor;
                                                              RUS=Коэффициент курса валюты];
                                                   DecimalPlaces=0:15;
                                                   MinValue=0 }
    { 34  ;   ;Customer Price Group;Code10        ;TableRelation="Customer Price Group";
                                                   CaptionML=[ENU=Customer Price Group;
                                                              RUS=Ценовая группа клиента] }
    { 35  ;   ;Prices Including VAT;Boolean       ;CaptionML=[ENU=Prices Including VAT;
                                                              RUS=Цены с учетом НДС] }
    { 37  ;   ;Invoice Disc. Code  ;Code20        ;CaptionML=[ENU=Invoice Disc. Code;
                                                              RUS=Код скидки по счету] }
    { 40  ;   ;Customer Disc. Group;Code20        ;TableRelation="Customer Discount Group";
                                                   CaptionML=[ENU=Customer Disc. Group;
                                                              RUS=Группа скидки клиента] }
    { 41  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=[ENU=Language Code;
                                                              RUS=Код языка] }
    { 43  ;   ;Salesperson Code    ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=[ENU=Salesperson Code;
                                                              RUS=Код менеджера по продажам] }
    { 46  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Sales Comment Line" WHERE (Document Type=CONST(Posted Credit Memo),
                                                                                                 No.=FIELD(No.),
                                                                                                 Document Line No.=CONST(0)));
                                                   CaptionML=[ENU=Comment;
                                                              RUS=Комментарий];
                                                   Editable=No }
    { 47  ;   ;No. Printed         ;Integer       ;CaptionML=[ENU=No. Printed;
                                                              RUS=Число напечатанных];
                                                   Editable=No }
    { 51  ;   ;On Hold             ;Code3         ;CaptionML=[ENU=On Hold;
                                                              RUS=На удержании] }
    { 52  ;   ;Applies-to Doc. Type;Option        ;CaptionML=[ENU=Applies-to Doc. Type;
                                                              RUS=Примен. к док. - тип];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    RUS=" ,Платеж,Счет,Кредит-нота,Процент-нота,Напоминание,Возмещение"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 53  ;   ;Applies-to Doc. No. ;Code20        ;OnLookup=BEGIN
                                                              CustLedgEntry.SETCURRENTKEY("Document No.");
                                                              CustLedgEntry.SETRANGE("Document Type","Applies-to Doc. Type");
                                                              CustLedgEntry.SETRANGE("Document No.","Applies-to Doc. No.");
                                                              PAGE.RUN(0,CustLedgEntry);
                                                            END;

                                                   CaptionML=[ENU=Applies-to Doc. No.;
                                                              RUS=Примен. к док. - номер] }
    { 55  ;   ;Bal. Account No.    ;Code20        ;TableRelation=IF (Bal. Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Bank Account)) "Bank Account";
                                                   CaptionML=[ENU=Bal. Account No.;
                                                              RUS=Номер баланс. счета] }
    { 60  ;   ;Amount              ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Cr.Memo Line".Amount WHERE (Document No.=FIELD(No.)));
                                                   CaptionML=[ENU=Amount;
                                                              RUS=Сумма];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 61  ;   ;Amount Including VAT;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Cr.Memo Line"."Amount Including VAT" WHERE (Document No.=FIELD(No.)));
                                                   CaptionML=[ENU=Amount Including VAT;
                                                              RUS=Сумма с учетом НДС];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 70  ;   ;VAT Registration No.;Text20        ;CaptionML=[ENU=VAT Registration No.;
                                                              RUS=ИНН] }
    { 73  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              RUS=Код причины] }
    { 74  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              RUS=Общая бизнес-группа] }
    { 75  ;   ;EU 3-Party Trade    ;Boolean       ;CaptionML=[ENU=EU 3-Party Trade;
                                                              RUS=Торговля вне ЕС] }
    { 76  ;   ;Transaction Type    ;Code10        ;TableRelation="Transaction Type";
                                                   CaptionML=[ENU=Transaction Type;
                                                              RUS=Тип транзакции] }
    { 77  ;   ;Transport Method    ;Code10        ;TableRelation="Transport Method";
                                                   CaptionML=[ENU=Transport Method;
                                                              RUS=Метод перевозки] }
    { 78  ;   ;VAT Country/Region Code;Code10     ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=VAT Country/Region Code;
                                                              RUS=Код страны/региона уплаты НДС] }
    { 79  ;   ;Sell-to Customer Name;Text50       ;CaptionML=[ENU=Sell-to Customer Name;
                                                              RUS=Название клиента] }
    { 80  ;   ;Sell-to Customer Name 2;Text50     ;CaptionML=[ENU=Sell-to Customer Name 2;
                                                              RUS=Название 2 клиента] }
    { 81  ;   ;Sell-to Address     ;Text50        ;CaptionML=[ENU=Sell-to Address;
                                                              RUS=Адрес клиента] }
    { 82  ;   ;Sell-to Address 2   ;Text50        ;CaptionML=[ENU=Sell-to Address 2;
                                                              RUS=Адрес 2 клиента] }
    { 83  ;   ;Sell-to City        ;Text30        ;TableRelation="Post Code".City;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Sell-to City;
                                                              RUS=Город клиента] }
    { 84  ;   ;Sell-to Contact     ;Text50        ;CaptionML=[ENU=Sell-to Contact;
                                                              RUS=Контакт клиента] }
    { 85  ;   ;Bill-to Post Code   ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Bill-to Post Code;
                                                              RUS=Индекс плательщика] }
    { 86  ;   ;Bill-to County      ;Text30        ;CaptionML=[ENU=Bill-to County;
                                                              RUS=Район плательщика] }
    { 87  ;   ;Bill-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Bill-to Country/Region Code;
                                                              RUS=Код страны/региона плательщика] }
    { 88  ;   ;Sell-to Post Code   ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Sell-to Post Code;
                                                              RUS=Индекс клиента] }
    { 89  ;   ;Sell-to County      ;Text30        ;CaptionML=[ENU=Sell-to County;
                                                              RUS=Район клиента] }
    { 90  ;   ;Sell-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Sell-to Country/Region Code;
                                                              RUS=Код страны/региона клиента] }
    { 91  ;   ;Ship-to Post Code   ;Code20        ;TableRelation="Post Code";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Ship-to Post Code;
                                                              RUS=Индекс получателя] }
    { 92  ;   ;Ship-to County      ;Text30        ;CaptionML=[ENU=Ship-to County;
                                                              RUS=Район получателя] }
    { 93  ;   ;Ship-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Ship-to Country/Region Code;
                                                              RUS=Код страны/региона получателя] }
    { 94  ;   ;Bal. Account Type   ;Option        ;CaptionML=[ENU=Bal. Account Type;
                                                              RUS=Тип баланс. счета];
                                                   OptionCaptionML=[ENU=G/L Account,Bank Account;
                                                                    RUS=Счет ГК,Банковский счет];
                                                   OptionString=G/L Account,Bank Account }
    { 97  ;   ;Exit Point          ;Code10        ;TableRelation="Entry/Exit Point";
                                                   CaptionML=[ENU=Exit Point;
                                                              RUS=Пункт вывоза] }
    { 98  ;   ;Correction          ;Boolean       ;CaptionML=[ENU=Correction;
                                                              RUS=Корректировка] }
    { 99  ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              RUS=Дата документа] }
    { 100 ;   ;External Document No.;Code35       ;CaptionML=[ENU=External Document No.;
                                                              RUS=Номер внешнего документа] }
    { 101 ;   ;Area                ;Code10        ;TableRelation=Area;
                                                   CaptionML=[ENU=Area;
                                                              RUS=Область] }
    { 102 ;   ;Transaction Specification;Code10   ;TableRelation="Transaction Specification";
                                                   CaptionML=[ENU=Transaction Specification;
                                                              RUS=Спецификация транзакции] }
    { 104 ;   ;Payment Method Code ;Code10        ;TableRelation="Payment Method";
                                                   CaptionML=[ENU=Payment Method Code;
                                                              RUS=Код способа оплаты] }
    { 107 ;   ;Pre-Assigned No. Series;Code10     ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Pre-Assigned No. Series;
                                                              RUS=Серия номеров назначений] }
    { 108 ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              RUS=Серия номеров];
                                                   Editable=No }
    { 111 ;   ;Pre-Assigned No.    ;Code20        ;CaptionML=[ENU=Pre-Assigned No.;
                                                              RUS=Номер назначения] }
    { 112 ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              RUS=Код пользователя] }
    { 113 ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              RUS=Код источника] }
    { 114 ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=[ENU=Tax Area Code;
                                                              RUS=Код налоговой области] }
    { 115 ;   ;Tax Liable          ;Boolean       ;CaptionML=[ENU=Tax Liable;
                                                              RUS=Облагается налогом] }
    { 116 ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              RUS=НДС бизнес-группа] }
    { 119 ;   ;VAT Base Discount % ;Decimal       ;CaptionML=[ENU=VAT Base Discount %;
                                                              RUS=База НДС - скидка (%)];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 134 ;   ;Prepmt. Cr. Memo No. Series;Code10 ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Prepmt. Cr. Memo No. Series;
                                                              RUS=Серия номеров кредит-нот предоплаты] }
    { 136 ;   ;Prepayment Credit Memo;Boolean     ;CaptionML=[ENU=Prepayment Credit Memo;
                                                              RUS=Кредит-нота предоплаты] }
    { 137 ;   ;Prepayment Order No.;Code20        ;CaptionML=[ENU=Prepayment Order No.;
                                                              RUS=Номер заказа на предоплату] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              RUS=Код набора измерений];
                                                   Editable=No }
    { 710 ;   ;Document Exchange Identifier;Text50;CaptionML=[ENU=Document Exchange Identifier;
                                                              RUS=Идентификатор обмена документами] }
    { 711 ;   ;Document Exchange Status;Option    ;CaptionML=[ENU=Document Exchange Status;
                                                              RUS=Статус обмена документами];
                                                   OptionCaptionML=[ENU=Not Sent,Sent to Document Exchange Service,Delivered to Recipient,Delivery Failed,Pending Connection to Recipient;
                                                                    RUS=Не отправлено,Отправлено в службу обмена документами,Доставлено получателю,Доставка не удалась,Ожидает соединения с получателем];
                                                   OptionString=Not Sent,Sent to Document Exchange Service,Delivered to Recipient,Delivery Failed,Pending Connection to Recipient }
    { 712 ;   ;Doc. Exch. Original Identifier;Text50;
                                                   CaptionML=[ENU=Doc. Exch. Original Identifier;
                                                              RUS=Исходный идентификатор обмена документами] }
    { 1302;   ;Paid                ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=-Exist("Cust. Ledger Entry" WHERE (Entry No.=FIELD(Cust. Ledger Entry No.),
                                                                                                  Open=FILTER(Yes)));
                                                   CaptionML=[ENU=Paid;
                                                              RUS=Оплачено];
                                                   Editable=No }
    { 1303;   ;Remaining Amount    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Cust. Ledger Entry No.=FIELD(Cust. Ledger Entry No.)));
                                                   CaptionML=[ENU=Remaining Amount;
                                                              RUS=Сумма остатка];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 1304;   ;Cust. Ledger Entry No.;Integer     ;TableRelation="Cust. Ledger Entry"."Entry No.";
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Cust. Ledger Entry No.;
                                                              RUS=Номер операции книги клиентов];
                                                   Editable=No }
    { 1305;   ;Invoice Discount Amount;Decimal    ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Cr.Memo Line"."Inv. Discount Amount" WHERE (Document No.=FIELD(No.)));
                                                   CaptionML=[ENU=Invoice Discount Amount;
                                                              RUS=Сумма скидки по счету];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 1310;   ;Cancelled           ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Cancelled Document" WHERE (Source ID=CONST(114),
                                                                                                 Cancelled Doc. No.=FIELD(No.)));
                                                   CaptionML=[ENU=Cancelled;
                                                              RUS=Отменено];
                                                   Editable=No }
    { 1311;   ;Corrective          ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Cancelled Document" WHERE (Source ID=CONST(112),
                                                                                                 Cancelled By Doc. No.=FIELD(No.)));
                                                   CaptionML=[ENU=Corrective;
                                                              RUS=Корректирующий];
                                                   Editable=No }
    { 5050;   ;Campaign No.        ;Code20        ;TableRelation=Campaign;
                                                   CaptionML=[ENU=Campaign No.;
                                                              RUS=Код кампании] }
    { 5052;   ;Sell-to Contact No. ;Code20        ;TableRelation=Contact;
                                                   CaptionML=[ENU=Sell-to Contact No.;
                                                              RUS=Код контакта клиента] }
    { 5053;   ;Bill-to Contact No. ;Code20        ;TableRelation=Contact;
                                                   CaptionML=[ENU=Bill-to Contact No.;
                                                              RUS=Код контакта плательщика] }
    { 5055;   ;Opportunity No.     ;Code20        ;TableRelation=Opportunity;
                                                   CaptionML=[ENU=Opportunity No.;
                                                              RUS=Код возможности] }
    { 5700;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center";
                                                   CaptionML=[ENU=Responsibility Center;
                                                              RUS=Центр ответственности] }
    { 6601;   ;Return Order No.    ;Code20        ;AccessByPermission=TableData 6660=R;
                                                   CaptionML=[ENU=Return Order No.;
                                                              RUS=Номер возврата] }
    { 6602;   ;Return Order No. Series;Code10     ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Return Order No. Series;
                                                              RUS=Серия номеров возвратов] }
    { 7001;   ;Allow Line Disc.    ;Boolean       ;CaptionML=[ENU=Allow Line Disc.;
                                                              RUS=Разрешить скидку строки] }
    { 7200;   ;Get Return Receipt Used;Boolean    ;CaptionML=[ENU=Get Return Receipt Used;
                                                              RUS=Получить использованную возвратную накладную] }
    { 12400;  ;External Document Text;Text100     ;CaptionML=[ENU=External Document Text;
                                                              RUS=К плат.-расчетн. документу] }
    { 12410;  ;Consignor No.       ;Code20        ;TableRelation=Vendor;
                                                   CaptionML=[ENU=Consignor No.;
                                                              RUS=Код грузоотправителя] }
    { 12440;  ;Corrective Document ;Boolean       ;CaptionML=[ENU=Corrective Document;
                                                              RUS=Корректирующий документ] }
    { 12441;  ;Corrected Doc. Type ;Option        ;CaptionML=[ENU=Corrected Doc. Type;
                                                              RUS=Тип скорректированного док.];
                                                   OptionCaptionML=[ENU=" ,Invoice,Credit Memo";
                                                                    RUS=" ,Счет,Кредит-нота"];
                                                   OptionString=[ ,Invoice,Credit Memo] }
    { 12442;  ;Corrected Doc. No.  ;Code20        ;TableRelation=IF (Corrected Doc. Type=CONST(Invoice)) "Sales Invoice Header"
                                                                 ELSE IF (Corrected Doc. Type=CONST(Credit Memo)) "Sales Cr.Memo Header";
                                                   CaptionML=[ENU=Corrected Doc. No.;
                                                              RUS=Номер скорректированного док.] }
    { 12443;  ;Original Doc. Type  ;Option        ;CaptionML=[ENU=Original Doc. Type;
                                                              RUS=Тип исходного док.];
                                                   OptionCaptionML=[ENU=" ,Invoice,Credit Memo";
                                                                    RUS=" ,Счет,Кредит-нота"];
                                                   OptionString=[ ,Invoice,Credit Memo] }
    { 12444;  ;Original Doc. No.   ;Code20        ;CaptionML=[ENU=Original Doc. No.;
                                                              RUS=Номер исходного док.] }
    { 12445;  ;VAT Entry Type      ;Code15        ;CaptionML=[ENU=VAT Entry Type;
                                                              RUS=Тип операции НДС] }
    { 12446;  ;Corrective Doc. Type;Option        ;CaptionML=[ENU=Corrective Doc. Type;
                                                              RUS=Тип корректирующего док.];
                                                   OptionCaptionML=[ENU=" ,Correction,Revision";
                                                                    RUS=" ,Коррекция,Редакция"];
                                                   OptionString=[ ,Correction,Revision] }
    { 12447;  ;Revision No.        ;Code20        ;CaptionML=[ENU=Revision No.;
                                                              RUS=Номер редакции] }
    { 12451;  ;Act Signed by Name  ;Text30        ;CaptionML=[ENU=Act Signed by Name;
                                                              RUS=ФИО подписавшего акт] }
    { 12452;  ;Act Signed by Position;Text30      ;CaptionML=[ENU=Act Signed by Position;
                                                              RUS=Должность подписавшего акт] }
    { 12480;  ;KPP Code            ;Code10        ;CaptionML=[ENU=KPP Code;
                                                              RUS=КПП] }
    { 12485;  ;Orig. Invoice No.   ;Code20        ;CaptionML=[ENU=Orig. Invoice No.;
                                                              RUS=Номер исходного счета] }
    { 12486;  ;Include In Purch. VAT Ledger;Boolean;
                                                   CaptionML=[ENU=Include In Purch. VAT Ledger;
                                                              RUS=Включить в НДС книгу покупок] }
    { 12490;  ;Agreement No.       ;Code20        ;TableRelation="Customer Agreement".No. WHERE (Customer No.=FIELD(Bill-to Customer No.));
                                                   CaptionML=[ENU=Agreement No.;
                                                              RUS=Номер договора] }
    { 12498;  ;Additional VAT Ledger Sheet;Boolean;CaptionML=[ENU=Additional VAT Ledger Sheet;
                                                              RUS=Дополнительный лист книги НДС] }
    { 12499;  ;Corrected Document Date;Date       ;CaptionML=[ENU=Corrected Document Date;
                                                              RUS=Дата скорректированного документа] }
    { 50001;  ;Buffer Entry No.    ;Integer       ;TableRelation="Cons. Data Buffer"."Entry No." WHERE (Cons. Source Code=FIELD(Cons. Source Code));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Buffer Entry No.;
                                                              RUS=Буфер Операция Но.];
                                                   Description=NC MTF01 PCH }
    { 50002;  ;Cons. Source Code   ;Code20        ;TableRelation="Consolidation Source";
                                                   CaptionML=[ENU=Cons. Source Code;
                                                              RUS=Источник Консолидации];
                                                   Description=NC MTF01 PCH }
    { 50006;  ;Business Unit Code  ;Code20        ;TableRelation="Business Unit";
                                                   CaptionML=[ENU=Business Unit Code;
                                                              RUS=Код Филиала];
                                                   Description=NC MTF01 PCH }
    { 50122;  ;Transaction Type in Gen. Jrnl.;Option;
                                                   CaptionML=[ENU=Transaction Type in Gen. Jrnl.;
                                                              RUS=Тип Транзакции для Фин. Журнала];
                                                   OptionCaptionML=[ENU=Manual,Automatic;
                                                                    RUS=Ручная,Автоматическая];
                                                   OptionString=Manual,Automatic;
                                                   Description=NC MTF01 PCH }
    { 50123;  ;Not Consolidate     ;Boolean       ;CaptionML=[ENU=Not Consolidate;
                                                              RUS=Не Консолидировать];
                                                   Description=NC MTF01 PCH }
    { 54990;  ;External System ID  ;Code2         ;TableRelation="External System";
                                                   CaptionML=[ENU=External System ID;
                                                              RUS=Внешняя Система ID];
                                                   Description=NC MTF01 PCH }
    { 55000;  ;Export Cons. Source Code;Code20    ;TableRelation="Consolidation Source";
                                                   CaptionML=[ENU=Consolidation Source Code;
                                                              RUS=Код Выгрузки];
                                                   Description=NC MTF01 PCH }
    { 55001;  ;Source Entry No.    ;Integer       ;CaptionML=[ENU=Source Entry No.;
                                                              RUS=Источник Операция Но.];
                                                   Description=NC MTF01 PCH }
    { 55003;  ;Register No.        ;Integer       ;TableRelation="Consolidation Register".No.;
                                                   CaptionML=[ENU=Register No.;
                                                              RUS=Регистр Но.];
                                                   Description=NC MTF01 PCH }
    { 55005;  ;Export Register No. ;Integer       ;TableRelation="Consolidation Register".No.;
                                                   CaptionML=[ENU=Export Register No.;
                                                              RUS=Регистр Выгрузки Но.];
                                                   Description=NC MTF01 PCH }
    { 55012;  ;External Document ID;Code50        ;CaptionML=[ENU=External Document ID;
                                                              RUS=Внешний Документ ID];
                                                   Description=NC MTF01 PCH;
                                                   Editable=No }
    { 55014;  ;External Operation No;Integer      ;CaptionML=[ENU=External Operation No.;
                                                              RUS=Внешняя Операция Но.];
                                                   Description=NC MTF01 PCH;
                                                   Editable=No }
    { 55029;  ;Reposted            ;Boolean       ;CaptionML=[ENU=Reposted;
                                                              RUS=Изменено];
                                                   Description=NC MTF01 PCH }
    { 55030;  ;Removed             ;Boolean       ;CaptionML=[ENU=Removed;
                                                              RUS=Удалено];
                                                   Description=NC MTF01 PCH }
    { 55109;  ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              RUS=Описание 2];
                                                   Description=NC MTF01 PCH }
    { 55125;  ;Linked Document Type;Option        ;CaptionML=[ENU=Linked Document Type.;
                                                              RUS=Связанный Тип Документа];
                                                   OptionString=Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Posted Shipment,Posted Invoice,Posted Return Receipt,Posted Credit Memo;
                                                   Description=NC MTF01 PCH }
    { 55126;  ;Linked Document No. ;Code20        ;CaptionML=[ENU=Linked Document No.;
                                                              RUS=Связанный Документ Но.];
                                                   Description=NC MTF01 PCH }
    { 60000;  ;Bank Account No.    ;Code20        ;TableRelation="Bank Account" WHERE (Account Type=FILTER(Bank Account));
                                                   CaptionML=RUS=Банк. Счет Но.;
                                                   Description=TRD.RA }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Pre-Assigned No.                         }
    {    ;Return Order No.                         }
    {    ;Sell-to Customer No.                     }
    {    ;Prepayment Order No.                     }
    {    ;Bill-to Customer No.                     }
    {    ;Posting Date                             }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Sell-to Customer No.,Bill-to Customer No.,Posting Date,Posting Description }
    { 2   ;Brick               ;No.,Sell-to Customer Name,Amount,Due Date,Amount Including VAT }
  }
  CODE
  {
    VAR
      SalesCommentLine@1001 : Record 44;
      CustLedgEntry@1002 : Record 21;
      ApprovalsMgmt@1004 : Codeunit 1535;
      DimMgt@1005 : Codeunit 408;
      UserSetupMgt@1006 : Codeunit 5700;
      DocSignMgt@1210000 : Codeunit 12420;

    LOCAL PROCEDURE SendRecords@12(ShowRequestForm@1210005 : Boolean;SendAsEmail@1210006 : Boolean);
    VAR
      ReportSelection@1210004 : Record 77;
      SalesCrMemoHeader@1210003 : Record 114;
      ReportSelectionTmp@1210000 : TEMPORARY Record 77;
      TempSalesHeader@1210002 : TEMPORARY Record 36;
      CorrDocMgt@1210001 : Codeunit 12422;
    BEGIN
      WITH SalesCrMemoHeader DO BEGIN
        COPY(Rec);
        CorrDocMgt.FillSalesCrMemoCorrHeader(TempSalesHeader,SalesCrMemoHeader);
        IF CorrDocMgt.IsCorrDocument(TempSalesHeader) THEN BEGIN
          IF SendAsEmail THEN
             ReportSelection.SendEmailToCust(
               ReportSelection.Usage::CSCM,SalesCrMemoHeader,"No.",'',ShowRequestForm,"Bill-to Customer No.")
          ELSE
            ReportSelection.PrintWithGUIYesNo(
              ReportSelection.Usage::CSCM,SalesCrMemoHeader,ShowRequestForm,"Bill-to Customer No.");
        END ELSE BEGIN
          IF SendAsEmail THEN
             ReportSelection.SendEmailToCust(
               ReportSelection.Usage::SCM,SalesCrMemoHeader,"No.",'',ShowRequestForm,"Bill-to Customer No.")
          ELSE
            ReportSelection.PrintWithGUIYesNo(
              ReportSelection.Usage::SCM,SalesCrMemoHeader,ShowRequestForm,"Bill-to Customer No.");
        END;
      END;
    END;

    PROCEDURE SendProfile@6(VAR DocumentSendingProfile@1000 : Record 60);
    VAR
      DummyReportSelections@1002 : Record 77;
    BEGIN
      DocumentSendingProfile.Send(
        DummyReportSelections.Usage::SCM,Rec,"No.","Bill-to Customer No.",'',FIELDNO("Bill-to Customer No."),FIELDNO("No."));
    END;

    PROCEDURE PrintRecords@1(ShowRequestForm@1000 : Boolean);
    BEGIN
      SendRecords(ShowRequestForm,FALSE);
    END;

    PROCEDURE EmailRecords@17(ShowRequestForm@1000 : Boolean);
    BEGIN
      SendRecords(ShowRequestForm,TRUE);
    END;

    PROCEDURE Navigate@2();
    VAR
      NavigateForm@1000 : Page 344;
    BEGIN
      NavigateForm.SetDoc("Posting Date","No.");
      NavigateForm.RUN;
    END;

    PROCEDURE LookupAdjmtValueEntries@3();
    VAR
      ValueEntry@1000 : Record 5802;
    BEGIN
      ValueEntry.SETCURRENTKEY("Document No.");
      ValueEntry.SETRANGE("Document No.","No.");
      ValueEntry.SETRANGE("Document Type",ValueEntry."Document Type"::"Sales Credit Memo");
      ValueEntry.SETRANGE(Adjustment,TRUE);
      PAGE.RUNMODAL(0,ValueEntry);
    END;

    PROCEDURE GetCustomerVATRegistrationNumber@14() : Text;
    BEGIN
      EXIT("VAT Registration No.");
    END;

    PROCEDURE GetCustomerVATRegistrationNumberLbl@15() : Text;
    BEGIN
      EXIT(FIELDCAPTION("VAT Registration No."));
    END;

    PROCEDURE GetCustomerGlobalLocationNumber@8() : Text;
    BEGIN
      EXIT('');
    END;

    PROCEDURE GetCustomerGlobalLocationNumberLbl@10() : Text;
    BEGIN
      EXIT('');
    END;

    PROCEDURE GetLegalStatement@60() : Text;
    VAR
      SalesSetup@1000 : Record 311;
    BEGIN
      SalesSetup.GET;
      EXIT(SalesSetup.GetLegalStatement);
    END;

    PROCEDURE ShowDimensions@4();
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"No."));
    END;

    PROCEDURE SetSecurityFilterOnRespCenter@5();
    BEGIN
      IF UserSetupMgt.GetSalesFilter <> '' THEN BEGIN
        FILTERGROUP(2);
        SETRANGE("Responsibility Center",UserSetupMgt.GetSalesFilter);
        FILTERGROUP(0);
      END;
    END;

    PROCEDURE FindReturnReceipts@1210000(SalesCrMemoHeader@1210008 : Record 114);
    VAR
      ValueEntry@1210007 : Record 5802;
      ItemLedgEntry@1210006 : Record 32;
      ReturnReceiptHeader@1210005 : Record 6660;
      ReturnReceiptLine@1210004 : Record 6661;
      SalesCrMemoLine@1210002 : Record 115;
      DocNoFilter@1210001 : Text[250];
      I@1210000 : Integer;
      Text12400@1210003 : TextConst 'ENU=Length of the Document No. filter should not exceed 1024.;RUS=Длина фильтра по номеру документа не должна превышать 1024.';
    BEGIN
      DocNoFilter := '';
      I := 0;

      SalesCrMemoLine.RESET;
      SalesCrMemoLine.SETRANGE("Document No.",SalesCrMemoHeader."No.");
      SalesCrMemoLine.SETRANGE(Type,SalesCrMemoLine.Type::Item);
      SalesCrMemoLine.SETFILTER(Quantity,'>%1',0);
      IF SalesCrMemoLine.FIND('-') THEN
        REPEAT
          ValueEntry.RESET;
          ValueEntry.SETCURRENTKEY("Item No.","Posting Date","Document No.");
          ValueEntry.SETRANGE("Document No.",SalesCrMemoHeader."No.");
          ValueEntry.SETRANGE("Posting Date",SalesCrMemoHeader."Posting Date");
          ValueEntry.SETRANGE("Item No.",SalesCrMemoLine."No.");
          IF ValueEntry.FIND('-') THEN
            REPEAT
              ItemLedgEntry.GET(ValueEntry."Item Ledger Entry No.");
              ReturnReceiptHeader.GET(ItemLedgEntry."Document No.");
              I := I + 1;
              IF I = 1 THEN
                DocNoFilter := ReturnReceiptHeader."No."
              ELSE BEGIN
                IF STRPOS('|'+DocNoFilter+'|','|'+ReturnReceiptHeader."No."+'|') = 0 THEN
                  IF (STRLEN(DocNoFilter) + STRLEN(ReturnReceiptHeader."No.")) < MAXSTRLEN(DocNoFilter) THEN
                    DocNoFilter := DocNoFilter + '|' + ReturnReceiptHeader."No."
                  ELSE
                    ERROR(Text12400);
              END;
            UNTIL ValueEntry.NEXT = 0;
        UNTIL SalesCrMemoLine.NEXT = 0;
      IF DocNoFilter = '' THEN
        DocNoFilter := '.';
      ReturnReceiptHeader.RESET;
      ReturnReceiptHeader.SETFILTER("No.",DocNoFilter);
      PAGE.RUN(PAGE::"Posted Return Receipts",ReturnReceiptHeader);
    END;

    PROCEDURE GetDocExchStatusStyle@13() : Text;
    BEGIN
      CASE "Document Exchange Status" OF
        "Document Exchange Status"::"Not Sent":
          EXIT('Standard');
        "Document Exchange Status"::"Sent to Document Exchange Service":
          EXIT('Ambiguous');
        "Document Exchange Status"::"Delivered to Recipient":
          EXIT('Favorable');
        ELSE
          EXIT('Unfavorable');
      END;
    END;

    PROCEDURE ShowActivityLog@116();
    VAR
      ActivityLog@1000 : Record 710;
    BEGIN
      ActivityLog.ShowEntries(RECORDID);
    END;

    PROCEDURE DocExchangeStatusIsSent@112() : Boolean;
    BEGIN
      EXIT("Document Exchange Status" <> "Document Exchange Status"::"Not Sent");
    END;

    PROCEDURE ShowCanceledOrCorrInvoice@18();
    BEGIN
      CALCFIELDS(Cancelled,Corrective);
      CASE TRUE OF
        Cancelled:
          ShowCorrectiveInvoice;
        Corrective:
          ShowCancelledInvoice;
      END;
    END;

    PROCEDURE ShowCorrectiveInvoice@16();
    VAR
      CancelledDocument@1000 : Record 1900;
      SalesInvHeader@1001 : Record 112;
    BEGIN
      CALCFIELDS(Cancelled);
      IF NOT Cancelled THEN
        EXIT;

      IF CancelledDocument.FindSalesCancelledCrMemo("No.") THEN BEGIN
        SalesInvHeader.GET(CancelledDocument."Cancelled By Doc. No.");
        PAGE.RUN(PAGE::"Posted Sales Invoice",SalesInvHeader);
      END;
    END;

    PROCEDURE ShowCancelledInvoice@37();
    VAR
      CancelledDocument@1000 : Record 1900;
      SalesInvHeader@1001 : Record 112;
    BEGIN
      CALCFIELDS(Corrective);
      IF NOT Corrective THEN
        EXIT;

      IF CancelledDocument.FindSalesCorrectiveCrMemo("No.") THEN BEGIN
        SalesInvHeader.GET(CancelledDocument."Cancelled Doc. No.");
        PAGE.RUN(PAGE::"Posted Sales Invoice",SalesInvHeader);
      END;
    END;

    BEGIN
    {
      NC MTF01 PCH добаывлены поля для консолидации
      -----
      NC NOS-26 ENK
    }
    END.
  }
}

