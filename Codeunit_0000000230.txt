OBJECT Codeunit 230 GenJnlManagement
{
  OBJECT-PROPERTIES
  {
    Date=13.07.17;
    Time=16:49:00;
    Modified=Yes;
    Version List=NAVW19.00,NAVRU9.00,NOS-26;
  }
  PROPERTIES
  {
    Permissions=TableData 80=imd,
                TableData 232=imd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Fixed Asset G/L Journal;RUS=Журнал ГК ОС';
      Text001@1001 : TextConst 'ENU=%1 journal;RUS=Журнал %1';
      Text002@1002 : TextConst 'ENU=RECURRING;RUS=ТИПОВОЙ';
      Text003@1003 : TextConst 'ENU=Recurring General Journal;RUS=Типовой финансовый журнал';
      Text004@1004 : TextConst 'ENU=DEFAULT;RUS=СТАНДАРТ';
      Text005@1005 : TextConst 'ENU=Default Journal;RUS=Журнал по умолчанию';
      LastGenJnlLine@1006 : Record 81;
      OpenFromBatch@1007 : Boolean;
      SelectedLinesApprovedMsg@1101495002 : TextConst 'ENU=Selected lines have been successfully approved.;RUS=Выделенные строки были успешно утверждены.';
      SelectedLinesReopenedMsg@1101495001 : TextConst 'ENU=Selected lines have been successfully reopened.;RUS=Выделенные строки были успешно открыты.';
      NothingToApproveMsg@1101495000 : TextConst 'ENU=There is nothing to approve.;RUS=Здесь нечего утверждать.';

    PROCEDURE TemplateSelection@1(PageID@1005 : Integer;PageTemplate@1000 : 'General,Sales,Purchases,Cash Receipts,Payments,Assets,Intercompany,Jobs';RecurringJnl@1001 : Boolean;VAR GenJnlLine@1004 : Record 81;VAR JnlSelected@1003 : Boolean);
    VAR
      GenJnlTemplate@1002 : Record 80;
    BEGIN
      JnlSelected := TRUE;

      GenJnlTemplate.RESET;
      GenJnlTemplate.SETRANGE("Page ID",PageID);
      GenJnlTemplate.SETRANGE(Recurring,RecurringJnl);
      IF NOT RecurringJnl THEN
        GenJnlTemplate.SETRANGE(Type,PageTemplate);

      CASE GenJnlTemplate.COUNT OF
        0:
          BEGIN
            GenJnlTemplate.INIT;
            GenJnlTemplate.Type := PageTemplate;
            GenJnlTemplate.Recurring := RecurringJnl;
            IF NOT RecurringJnl THEN BEGIN
              GenJnlTemplate.Name := DELCHR(FORMAT(GenJnlTemplate.Type,MAXSTRLEN(GenJnlTemplate.Name)));
              IF PageTemplate = PageTemplate::Assets THEN
                GenJnlTemplate.Description := Text000
              ELSE
                GenJnlTemplate.Description := STRSUBSTNO(Text001,GenJnlTemplate.Type);
            END ELSE BEGIN
              GenJnlTemplate.Name := Text002;
              GenJnlTemplate.Description := Text003;
            END;
            GenJnlTemplate.VALIDATE(Type);
            GenJnlTemplate.INSERT;
            COMMIT;
          END;
        1:
          GenJnlTemplate.FINDFIRST;
        ELSE
          JnlSelected := PAGE.RUNMODAL(0,GenJnlTemplate) = ACTION::LookupOK;
      END;
      IF JnlSelected THEN BEGIN
        GenJnlLine.FILTERGROUP := 2;
        GenJnlLine.SETRANGE("Journal Template Name",GenJnlTemplate.Name);
        GenJnlLine.FILTERGROUP := 0;
        IF OpenFromBatch THEN BEGIN
          GenJnlLine."Journal Template Name" := '';
          PAGE.RUN(GenJnlTemplate."Page ID",GenJnlLine);
        END;
      END;
    END;

    PROCEDURE TemplateSelectionFromBatch@9(VAR GenJnlBatch@1000 : Record 232);
    VAR
      GenJnlLine@1002 : Record 81;
      GenJnlTemplate@1003 : Record 80;
    BEGIN
      OpenFromBatch := TRUE;
      GenJnlTemplate.GET(GenJnlBatch."Journal Template Name");
      GenJnlTemplate.TESTFIELD("Page ID");
      GenJnlBatch.TESTFIELD(Name);

      GenJnlLine.FILTERGROUP := 2;
      GenJnlLine.SETRANGE("Journal Template Name",GenJnlTemplate.Name);
      GenJnlLine.FILTERGROUP := 0;

      GenJnlLine."Journal Template Name" := '';
      GenJnlLine."Journal Batch Name" := GenJnlBatch.Name;
      PAGE.RUN(GenJnlTemplate."Page ID",GenJnlLine);
    END;

    PROCEDURE OpenJnl@2(VAR CurrentJnlBatchName@1000 : Code[10];VAR GenJnlLine@1001 : Record 81);
    BEGIN
      CheckTemplateName(GenJnlLine.GETRANGEMAX("Journal Template Name"),CurrentJnlBatchName);
      GenJnlLine.FILTERGROUP := 2;
      GenJnlLine.SETRANGE("Journal Batch Name",CurrentJnlBatchName);
      GenJnlLine.FILTERGROUP := 0;
    END;

    PROCEDURE OpenJnlBatch@10(VAR GenJnlBatch@1000 : Record 232);
    VAR
      GenJnlTemplate@1002 : Record 80;
      GenJnlLine@1004 : Record 81;
      JnlSelected@1003 : Boolean;
    BEGIN
      IF GenJnlBatch.GETFILTER("Journal Template Name") <> '' THEN
        EXIT;
      GenJnlBatch.FILTERGROUP(2);
      IF GenJnlBatch.GETFILTER("Journal Template Name") <> '' THEN BEGIN
        GenJnlBatch.FILTERGROUP(0);
        EXIT;
      END;
      GenJnlBatch.FILTERGROUP(0);

      IF NOT GenJnlBatch.FIND('-') THEN
        FOR GenJnlTemplate.Type := GenJnlTemplate.Type::General TO GenJnlTemplate.Type::Jobs DO BEGIN
          GenJnlTemplate.SETRANGE(Type,GenJnlTemplate.Type);
          IF NOT GenJnlTemplate.FINDFIRST THEN
            TemplateSelection(0,GenJnlTemplate.Type,FALSE,GenJnlLine,JnlSelected);
          IF GenJnlTemplate.FINDFIRST THEN
            CheckTemplateName(GenJnlTemplate.Name,GenJnlBatch.Name);
          IF GenJnlTemplate.Type = GenJnlTemplate.Type::General THEN BEGIN
            GenJnlTemplate.SETRANGE(Recurring,TRUE);
            IF NOT GenJnlTemplate.FINDFIRST THEN
              TemplateSelection(0,GenJnlTemplate.Type,TRUE,GenJnlLine,JnlSelected);
            IF GenJnlTemplate.FINDFIRST THEN
              CheckTemplateName(GenJnlTemplate.Name,GenJnlBatch.Name);
            GenJnlTemplate.SETRANGE(Recurring);
          END;
        END;

      GenJnlBatch.FIND('-');
      JnlSelected := TRUE;
      GenJnlBatch.CALCFIELDS("Template Type",Recurring);
      GenJnlTemplate.SETRANGE(Recurring,GenJnlBatch.Recurring);
      IF NOT GenJnlBatch.Recurring THEN
        GenJnlTemplate.SETRANGE(Type,GenJnlBatch."Template Type");
      IF GenJnlBatch.GETFILTER("Journal Template Name") <> '' THEN
        GenJnlTemplate.SETRANGE(Name,GenJnlBatch.GETFILTER("Journal Template Name"));
      CASE GenJnlTemplate.COUNT OF
        1:
          GenJnlTemplate.FINDFIRST;
        ELSE
          JnlSelected := PAGE.RUNMODAL(0,GenJnlTemplate) = ACTION::LookupOK;
      END;
      IF NOT JnlSelected THEN
        ERROR('');

      GenJnlBatch.FILTERGROUP(0);
      GenJnlBatch.SETRANGE("Journal Template Name",GenJnlTemplate.Name);
      GenJnlBatch.FILTERGROUP(2);
    END;

    LOCAL PROCEDURE CheckTemplateName@3(CurrentJnlTemplateName@1000 : Code[10];VAR CurrentJnlBatchName@1001 : Code[10]);
    VAR
      GenJnlBatch@1002 : Record 232;
    BEGIN
      GenJnlBatch.SETRANGE("Journal Template Name",CurrentJnlTemplateName);
      IF NOT GenJnlBatch.GET(CurrentJnlTemplateName,CurrentJnlBatchName) THEN BEGIN
        IF NOT GenJnlBatch.FINDFIRST THEN BEGIN
          GenJnlBatch.INIT;
          GenJnlBatch."Journal Template Name" := CurrentJnlTemplateName;
          GenJnlBatch.SetupNewBatch;
          GenJnlBatch.Name := Text004;
          GenJnlBatch.Description := Text005;
          GenJnlBatch.INSERT(TRUE);
          COMMIT;
        END;
        CurrentJnlBatchName := GenJnlBatch.Name
      END;
    END;

    PROCEDURE CheckName@4(CurrentJnlBatchName@1000 : Code[10];VAR GenJnlLine@1001 : Record 81);
    VAR
      GenJnlBatch@1002 : Record 232;
    BEGIN
      GenJnlBatch.GET(GenJnlLine.GETRANGEMAX("Journal Template Name"),CurrentJnlBatchName);
    END;

    PROCEDURE SetName@5(CurrentJnlBatchName@1000 : Code[10];VAR GenJnlLine@1001 : Record 81);
    BEGIN
      GenJnlLine.FILTERGROUP := 2;
      GenJnlLine.SETRANGE("Journal Batch Name",CurrentJnlBatchName);
      GenJnlLine.FILTERGROUP := 0;
      IF GenJnlLine.FIND('-') THEN;
    END;

    PROCEDURE LookupName@6(VAR CurrentJnlBatchName@1000 : Code[10];VAR GenJnlLine@1001 : Record 81);
    VAR
      GenJnlBatch@1002 : Record 232;
    BEGIN
      COMMIT;
      GenJnlBatch."Journal Template Name" := GenJnlLine.GETRANGEMAX("Journal Template Name");
      GenJnlBatch.Name := GenJnlLine.GETRANGEMAX("Journal Batch Name");
      GenJnlBatch.FILTERGROUP(2);
      GenJnlBatch.SETRANGE("Journal Template Name",GenJnlBatch."Journal Template Name");
      GenJnlBatch.FILTERGROUP(0);
      IF PAGE.RUNMODAL(0,GenJnlBatch) = ACTION::LookupOK THEN BEGIN
        CurrentJnlBatchName := GenJnlBatch.Name;
        SetName(CurrentJnlBatchName,GenJnlLine);
      END;
    END;

    PROCEDURE GetAccounts@7(VAR GenJnlLine@1000 : Record 81;VAR AccName@1001 : Text[50];VAR BalAccName@1002 : Text[50]);
    VAR
      GLAcc@1003 : Record 15;
      Cust@1004 : Record 18;
      Vend@1005 : Record 23;
      BankAcc@1006 : Record 270;
      FA@1007 : Record 5600;
      IC@1008 : Record 413;
    BEGIN
      IF (GenJnlLine."Account Type" <> LastGenJnlLine."Account Type") OR
         (GenJnlLine."Account No." <> LastGenJnlLine."Account No.")
      THEN BEGIN
        AccName := '';
        IF GenJnlLine."Account No." <> '' THEN
          CASE GenJnlLine."Account Type" OF
            GenJnlLine."Account Type"::"G/L Account":
              IF GLAcc.GET(GenJnlLine."Account No.") THEN
                AccName := GLAcc.Name;
            GenJnlLine."Account Type"::Customer:
              IF Cust.GET(GenJnlLine."Account No.") THEN
                AccName := Cust.Name;
            GenJnlLine."Account Type"::Vendor:
              IF Vend.GET(GenJnlLine."Account No.") THEN
                AccName := Vend.Name;
            GenJnlLine."Account Type"::"Bank Account":
              IF BankAcc.GET(GenJnlLine."Account No.") THEN
                AccName := BankAcc.Name;
            GenJnlLine."Account Type"::"Fixed Asset":
              IF FA.GET(GenJnlLine."Account No.") THEN
                AccName := FA.Description;
            GenJnlLine."Account Type"::"IC Partner":
              IF IC.GET(GenJnlLine."Account No.") THEN
                AccName := IC.Name;
          END;
      END;

      IF (GenJnlLine."Bal. Account Type" <> LastGenJnlLine."Bal. Account Type") OR
         (GenJnlLine."Bal. Account No." <> LastGenJnlLine."Bal. Account No.")
      THEN BEGIN
        BalAccName := '';
        IF GenJnlLine."Bal. Account No." <> '' THEN
          CASE GenJnlLine."Bal. Account Type" OF
            GenJnlLine."Bal. Account Type"::"G/L Account":
              IF GLAcc.GET(GenJnlLine."Bal. Account No.") THEN
                BalAccName := GLAcc.Name;
            GenJnlLine."Bal. Account Type"::Customer:
              IF Cust.GET(GenJnlLine."Bal. Account No.") THEN
                BalAccName := Cust.Name;
            GenJnlLine."Bal. Account Type"::Vendor:
              IF Vend.GET(GenJnlLine."Bal. Account No.") THEN
                BalAccName := Vend.Name;
            GenJnlLine."Bal. Account Type"::"Bank Account":
              IF BankAcc.GET(GenJnlLine."Bal. Account No.") THEN
                BalAccName := BankAcc.Name;
            GenJnlLine."Bal. Account Type"::"Fixed Asset":
              IF FA.GET(GenJnlLine."Bal. Account No.") THEN
                BalAccName := FA.Description;
            GenJnlLine."Bal. Account Type"::"IC Partner":
              IF IC.GET(GenJnlLine."Bal. Account No.") THEN
                BalAccName := IC.Name;
          END;
      END;

      LastGenJnlLine := GenJnlLine;
    END;

    PROCEDURE CalcBalance@8(VAR GenJnlLine@1000 : Record 81;LastGenJnlLine@1001 : Record 81;VAR Balance@1002 : Decimal;VAR TotalBalance@1003 : Decimal;VAR ShowBalance@1004 : Boolean;VAR ShowTotalBalance@1005 : Boolean);
    VAR
      TempGenJnlLine@1006 : Record 81;
    BEGIN
      TempGenJnlLine.COPYFILTERS(GenJnlLine);
      ShowTotalBalance := TempGenJnlLine.CALCSUMS("Balance (LCY)");
      IF ShowTotalBalance THEN BEGIN
        TotalBalance := TempGenJnlLine."Balance (LCY)";
        IF GenJnlLine."Line No." = 0 THEN
          TotalBalance := TotalBalance + LastGenJnlLine."Balance (LCY)";
      END;

      IF GenJnlLine."Line No." <> 0 THEN BEGIN
        TempGenJnlLine.SETRANGE("Line No.",0,GenJnlLine."Line No.");
        ShowBalance := TempGenJnlLine.CALCSUMS("Balance (LCY)");
        IF ShowBalance THEN
          Balance := TempGenJnlLine."Balance (LCY)";
      END ELSE BEGIN
        TempGenJnlLine.SETRANGE("Line No.",0,LastGenJnlLine."Line No.");
        ShowBalance := TempGenJnlLine.CALCSUMS("Balance (LCY)");
        IF ShowBalance THEN BEGIN
          Balance := TempGenJnlLine."Balance (LCY)";
          TempGenJnlLine.COPYFILTERS(GenJnlLine);
          TempGenJnlLine := LastGenJnlLine;
          IF TempGenJnlLine.NEXT = 0 THEN
            Balance := Balance + LastGenJnlLine."Balance (LCY)";
        END;
      END;
    END;

    PROCEDURE ApproveGenJnlLines@1170000000(VAR GenJournalLine@1101495000 : Record 81);
    VAR
      DocumentBuffer@1170000000 : TEMPORARY Record 81;
      GLSetup@1170000001 : Record 98;
    BEGIN
      // NC NCS-1880 ORM
      //ncs-2142>
      {
      PrepareDocumentBuffer(GenJournalLine,DocumentBuffer);
      IF DocumentBuffer.FINDSET THEN BEGIN
        REPEAT
          GenJournalLine.GET(
             DocumentBuffer."Journal Template Name",
             DocumentBuffer."Journal Batch Name",
             DocumentBuffer."Line No.");
          GenJournalLine.Approve;
        UNTIL DocumentBuffer.NEXT = 0;
        MESSAGE(SelectedLinesApprovedMsg);
      END;
      }
      GLSetup.GET;
      CASE GLSetup."4 Eyes Approval Type" OF
        GLSetup."4 Eyes Approval Type"::"By Document":
          ApproveGenJnlLinesByDocument(GenJournalLine);
        GLSetup."4 Eyes Approval Type"::"By Entry":
          ApproveGenJnlLinesByEntry(GenJournalLine);
      END;
      //ncs-2142<
    END;

    PROCEDURE ApproveGenJnlLinesByDocument@1170000003(VAR GenJournalLine@1101495000 : Record 81);
    VAR
      DocumentBuffer@1170000000 : TEMPORARY Record 81;
    BEGIN
      // NC NCS-2142 ORM
      PrepareDocumentBuffer(GenJournalLine,DocumentBuffer);
      IF DocumentBuffer.FINDSET THEN BEGIN
        REPEAT
          GenJournalLine.GET(
             DocumentBuffer."Journal Template Name",
             DocumentBuffer."Journal Batch Name",
             DocumentBuffer."Line No.");
          GenJournalLine.Approve;
        UNTIL DocumentBuffer.NEXT = 0;
        MESSAGE(SelectedLinesApprovedMsg);
      END;
    END;

    PROCEDURE ApproveGenJnlLinesByEntry@1170000005(VAR GenJournalLine@1101495000 : Record 81);
    VAR
      DocumentBuffer@1170000000 : TEMPORARY Record 81;
      TempErrorJournal@1170000001 : TEMPORARY Record 50023;
      ApprovedLinesQty@1170000002 : Integer;
    BEGIN
      // NC NCS-2142 ORM
      IF GenJournalLine.FINDSET THEN
        REPEAT
          IF GenJournalLine."Approved By" = '' THEN
            IF CODEUNIT.RUN(CODEUNIT::"Approve Gen. Journal Line",GenJournalLine) THEN
              ApprovedLinesQty += 1
            ELSE
              AddErrorToJournalBuffer(TempErrorJournal);
        UNTIL GenJournalLine.NEXT = 0;

      IF TempErrorJournal.COUNT = 0 THEN BEGIN
        IF ApprovedLinesQty > 0 THEN
          MESSAGE(SelectedLinesApprovedMsg)
        ELSE
          MESSAGE(NothingToApproveMsg);
      END ELSE
        PAGE.RUNMODAL(PAGE::"Error Journal",TempErrorJournal);
    END;

    PROCEDURE ReopenGenJnlLines@1170000001(VAR GenJournalLine@1101495000 : Record 81);
    VAR
      DocumentBuffer@1170000000 : TEMPORARY Record 81;
      ReopenedQty@1170000001 : Integer;
      GLSetup@1101495001 : Record 98;
    BEGIN
      //NC NCS-2300.1 > DP
      GLSetup.GET;
      CASE GLSetup."4 Eyes Approval Type" OF
        GLSetup."4 Eyes Approval Type"::"By Document":
        BEGIN
      //NC NCS-2300.1 < DP

      // NC NCS-1880 ORM
      PrepareDocumentBuffer(GenJournalLine,DocumentBuffer);
      IF DocumentBuffer.FINDSET THEN BEGIN
        REPEAT
          GenJournalLine.GET(
             DocumentBuffer."Journal Template Name",
             DocumentBuffer."Journal Batch Name",
             DocumentBuffer."Line No.");
         IF GenJournalLine.Reopen THEN
            ReopenedQty += 1;
        UNTIL DocumentBuffer.NEXT = 0;
        IF ReopenedQty <> 0 THEN
          MESSAGE(SelectedLinesReopenedMsg);
      END;

      //NC NCS-2300.1 > DP
        END;
        GLSetup."4 Eyes Approval Type"::"By Entry":
        BEGIN
          IF GenJournalLine.Reopen THEN
            ReopenedQty += 1;
          IF ReopenedQty <> 0 THEN
            MESSAGE(SelectedLinesReopenedMsg);
        END;
      END;
      //NC NCS-2300.1 < DP
    END;

    PROCEDURE PrepareDocumentBuffer@1170000004(VAR GenJournalLine@1170000000 : Record 81;VAR DocumentBuffer@1170000001 : Record 81);
    BEGIN
      // NC NCS-1880 ORM
      IF GenJournalLine.FINDSET THEN
        REPEAT
          AddDocumentToBuffer(GenJournalLine,DocumentBuffer);
        UNTIL GenJournalLine.NEXT = 0;
    END;

    PROCEDURE AddDocumentToBuffer@1170000002(GenJournalLine@1170000000 : Record 81;VAR DocumentBuffer@1170000001 : Record 81);
    VAR
      DocumentJournalLine@1170000002 : Record 81;
    BEGIN
      // NC NCS-1880 ORM
      DocumentJournalLine.SETRANGE("Journal Template Name",GenJournalLine."Journal Template Name");
      DocumentJournalLine.SETRANGE("Journal Batch Name",GenJournalLine."Journal Batch Name");
      DocumentJournalLine.SETRANGE("Document No.",GenJournalLine."Document No.");
      IF DocumentJournalLine.FINDSET THEN
        REPEAT
          IF NOT DocumentBuffer.GET(
             DocumentJournalLine."Journal Template Name",
             DocumentJournalLine."Journal Batch Name",
             DocumentJournalLine."Line No.")
          THEN BEGIN
            DocumentBuffer := DocumentJournalLine;
            DocumentBuffer.INSERT;
          END;
        UNTIL DocumentJournalLine.NEXT = 0;
    END;

    PROCEDURE AddErrorToJournalBuffer@1170000006(VAR ErrorJournal@1170000000 : Record 50023);
    VAR
      LineNo@1170000001 : Integer;
    BEGIN
      // NC NCS-2142 ORM
      //NC NOS-26 > SPA
      {
      IF ErrorJournal.FINDLAST THEN;
      LineNo := ErrorJournal."Line No." + 10000;
      }
      //NC NOS-26 < SPA

      ErrorJournal.INIT;
      //NC NOS-26 > SPA
      //ErrorJournal."Line No." := LineNo;
      ErrorJournal."Entry No." := 0;
      //NC NOS-26 < SPA
      ErrorJournal.Description := COPYSTR(GETLASTERRORTEXT,1,MAXSTRLEN(ErrorJournal.Description));
      ErrorJournal.INSERT;

      CLEARLASTERROR;
    END;

    BEGIN
    {
      NCS-1880 ORM
        Добавлены функции ApproveGenJnlLines, ReopenGenJnlLines, PrepareDocumentBuffer, AddDocumentToBuffer
      NCS-2142 ORM
        Добавлены функции ApproveGenJnlLinesByEntry, ApproveGenJnlLinesByDocument, AddErrorToJournalBuffer
      NC NCS-2300.1 DP Changed function ReopenGenJnlLines
    }
    END.
  }
}

