OBJECT Report 12463 Cash Order Journal CO-3
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Cash Order Journal CO-3;
               RUS=Журнал регистрации кассовых документов КО-3];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  CompanyInfo.GET;
                  InitReportTemplate;
                END;

    OnPostReport=BEGIN
                   ExcelReportBuilderMgr.ExportData;
                 END;

  }
  DATASET
  {
    { 4920;    ;DataItem;                    ;
               DataItemTable=Table271;
               DataItemTableView=SORTING(Bank Account No.,Posting Date);
               OnPreDataItem=BEGIN
                               IF BankAccount = '' THEN
                                 ERROR(CashCodeErr);

                               Year := DATE2DMY(EndingDate,3);

                               SETRANGE("Bank Account No.",BankAccount);
                               SETRANGE("Posting Date",StartingDate,EndingDate);

                               CLEAR(Idx);
                               TempAmt.DELETEALL;

                               FillTitle;
                             END;

               OnAfterGetRecord=VAR
                                  NextEntryNo@1470001 : Integer;
                                BEGIN
                                  IF "Debit Amount (LCY)" <> 0 THEN BEGIN
                                    Idx[1] := Idx[1] + 1;
                                    NextEntryNo := Idx[1] * 2 - 1;
                                  END ELSE BEGIN
                                    Idx[2] := Idx[2] + 1;
                                    NextEntryNo := Idx[2] * 2;
                                  END;
                                  TempAmt := "Bank Account Ledger Entry";
                                  TempAmt."Entry No." := NextEntryNo;
                                  TempAmt.INSERT;
                                END;
                                 }

    { 5444;    ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF Idx[1] > Idx[2] THEN
                                 K := Idx[1]
                               ELSE
                                 K := Idx[2];

                               SETRANGE(Number,1,K);
                               I := 0;
                             END;

               OnAfterGetRecord=BEGIN
                                  I := I + 1;
                                  BankLedgEntry[1].INIT;
                                  BankLedgEntry[2].INIT;
                                  IF I <= Idx[1] THEN BEGIN
                                    TempAmt.GET(I * 2 - 1);
                                    BankLedgEntry[1] := TempAmt;
                                  END;
                                  IF I <= Idx[2] THEN BEGIN
                                    TempAmt.GET(I * 2);
                                    BankLedgEntry[2] := TempAmt;
                                  END;

                                  FillBody;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   StartingDate := CALCDATE('<-1M-CM>',WORKDATE);
                   EndingDate := CALCDATE('<-1M+CM>',WORKDATE);
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             RUS=Параметры] }

      { 1210011;2;Field     ;
                  CaptionML=[ENU=Cash Account No.;
                             RUS=Код кассы];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=BankAccount;
                  TableRelation="Bank Account" WHERE (Account Type=CONST(Cash Account));
                  LookupPageID=Bank Account List }

      { 1210000;2;Field     ;
                  CaptionML=[ENU=Starting Date;
                             RUS=Дата начала];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=StartingDate;
                  OnValidate=BEGIN
                               StartingDateOnAfterValidate;
                             END;
                              }

      { 1210003;2;Field     ;
                  CaptionML=[ENU=Ending Date;
                             RUS=Дата окончания];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=EndingDate }

      { 1210004;2;Field     ;
                  CaptionML=[ENU=Employee No.;
                             RUS=Код сотрудника];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=EmployeeCode;
                  TableRelation=Employee }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CompanyInfo@1210004 : Record 79;
      TempAmt@1210008 : TEMPORARY Record 271;
      BankLedgEntry@1210006 : ARRAY [2] OF TEMPORARY Record 271;
      StdRepMgt@1210013 : Codeunit 12401;
      ExcelReportBuilderMgr@1210009 : Codeunit 14930;
      EmployeeCode@1210007 : Code[20];
      StartingDate@1210010 : Date;
      EndingDate@1210011 : Date;
      BankAccount@1210012 : Code[20];
      CashCodeErr@1210000 : TextConst 'ENU=Select the Cash Account No.;RUS=Выберите номер кассового счета';
      I@1470004 : Integer;
      K@1470001 : Integer;
      Idx@1470000 : ARRAY [2] OF Integer;
      PageTxt@1210014 : TextConst 'ENU=Page %1;RUS=Лист %1';
      Year@1210005 : Integer;

    LOCAL PROCEDURE StartingDateOnAfterValidate@19020273();
    BEGIN
      EndingDate := CALCDATE('<+CM>',StartingDate);
    END;

    LOCAL PROCEDURE InitReportTemplate@1210002();
    VAR
      GeneralLedgSetup@1210000 : Record 98;
      SheetName@1210001 : Text;
    BEGIN
      SheetName := 'Sheet1';
      GeneralLedgSetup.GET;
      GeneralLedgSetup.TESTFIELD("Cash Order KO3 Template Code");
      ExcelReportBuilderMgr.InitTemplate(GeneralLedgSetup."Cash Order KO3 Template Code");
      ExcelReportBuilderMgr.SetSheet(SheetName);
    END;

    LOCAL PROCEDURE FillTitle@1210000();
    BEGIN
      ExcelReportBuilderMgr.AddSection('TITLEPAGE');

      ExcelReportBuilderMgr.AddDataToSection('CompanyName',CompanyInfo.Name);
      ExcelReportBuilderMgr.AddDataToSection('CodeOKPO',CompanyInfo."OKPO Code");
      ExcelReportBuilderMgr.AddDataToSection('Year',FORMAT(Year));
      ExcelReportBuilderMgr.AddDataToSection('PersonTitle',StdRepMgt.GetEmpPosition(EmployeeCode));
      ExcelReportBuilderMgr.AddDataToSection('PersonName',StdRepMgt.GetEmpName(EmployeeCode));

      FillHeader;
    END;

    LOCAL PROCEDURE FillTransfooter@1210001();
    BEGIN
      ExcelReportBuilderMgr.AddDataToSection('CompanyNamePage',CompanyInfo.Name);
      ExcelReportBuilderMgr.AddDataToSection('PageNum',STRSUBSTNO(PageTxt,ExcelReportBuilderMgr.GetLastPageNo));
    END;

    LOCAL PROCEDURE FillHeader@1210005();
    BEGIN
      IF NOT ExcelReportBuilderMgr.TryAddSection('PAGEHEADER') THEN BEGIN
        ExcelReportBuilderMgr.AddPagebreak;
        ExcelReportBuilderMgr.AddSection('PAGEHEADER');
      END;

      FillTransfooter;
    END;

    LOCAL PROCEDURE FillBody@1210011();
    VAR
      LocMgt@1210000 : Codeunit 12400;
    BEGIN
      IF NOT ExcelReportBuilderMgr.TryAddSection('BODY') THEN BEGIN
        ExcelReportBuilderMgr.AddPagebreak;
        ExcelReportBuilderMgr.AddSection('PAGEHEADER');
        FillTransfooter;
        ExcelReportBuilderMgr.AddSection('BODY');
      END;

      ExcelReportBuilderMgr.AddDataToSection('PKOTransDate',LocMgt.Date2Text(BankLedgEntry[1]."Posting Date"));
      ExcelReportBuilderMgr.AddDataToSection('PKONum',BankLedgEntry[1]."Document No.");
      ExcelReportBuilderMgr.AddDataToSection(
        'PKOSum',
        StdRepMgt.FormatReportValue(BankLedgEntry[1]."Debit Amount (LCY)" - BankLedgEntry[1]."Credit Amount (LCY)",2));
      ExcelReportBuilderMgr.AddDataToSection('PKONotes',BankLedgEntry[1].Description);
      ExcelReportBuilderMgr.AddDataToSection('RKOTransDate',LocMgt.Date2Text(BankLedgEntry[2]."Posting Date"));
      ExcelReportBuilderMgr.AddDataToSection('RKONum',BankLedgEntry[2]."Document No.");
      ExcelReportBuilderMgr.AddDataToSection(
        'RKOSum',
        StdRepMgt.FormatReportValue(BankLedgEntry[2]."Credit Amount" - BankLedgEntry[2]."Debit Amount",2));
      ExcelReportBuilderMgr.AddDataToSection('RKONotes',BankLedgEntry[2].Description);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

