OBJECT Table 5621 FA Journal Line
{
  OBJECT-PROPERTIES
  {
    Date=13.07.17;
    Time=16:20:28;
    Modified=Yes;
    Version List=NAVW19.00,NAVRU9.00,NOS-26;
  }
  PROPERTIES
  {
    OnInsert=VAR
               FAJnlTemplate@1000 : Record 5619;
               FAJnlBatch@1001 : Record 5620;
             BEGIN
               LOCKTABLE;
               FAJnlTemplate.GET("Journal Template Name");
               "Source Code" := FAJnlTemplate."Source Code";
               FAJnlBatch.GET("Journal Template Name","Journal Batch Name");
               "Reason Code" := FAJnlBatch."Reason Code";

               ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
               ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
             END;

    CaptionML=[ENU=FA Journal Line;
               RUS=Строка журнала ОС];
  }
  FIELDS
  {
    { 1   ;   ;Journal Template Name;Code10       ;TableRelation="FA Journal Template";
                                                   CaptionML=[ENU=Journal Template Name;
                                                              RUS=Имя шаблона журнала] }
    { 2   ;   ;Journal Batch Name  ;Code10        ;TableRelation="FA Journal Batch".Name WHERE (Journal Template Name=FIELD(Journal Template Name));
                                                   CaptionML=[ENU=Journal Batch Name;
                                                              RUS=Код раздела журнала] }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              RUS=Номер строки] }
    { 4   ;   ;Depreciation Book Code;Code10      ;TableRelation="Depreciation Book";
                                                   OnValidate=BEGIN
                                                                IF ("FA No." = '') OR ("Depreciation Book Code" = '') THEN
                                                                  EXIT;
                                                                FADeprBook.GET("FA No.","Depreciation Book Code");
                                                                "FA Posting Group" := FADeprBook."FA Posting Group";
                                                              END;

                                                   CaptionML=[ENU=Depreciation Book Code;
                                                              RUS=Код книги амортизации] }
    { 5   ;   ;FA Posting Type     ;Option        ;OnValidate=BEGIN
                                                                IF "FA Posting Type" <> "FA Posting Type"::"Acquisition Cost" THEN
                                                                  TESTFIELD("Insurance No.",'');
                                                                IF "FA Posting Type" <> "FA Posting Type"::Maintenance THEN
                                                                  TESTFIELD("Maintenance Code",'');

                                                                "Depr. until FA Posting Date" := "FA Posting Type" = "FA Posting Type"::Disposal;
                                                              END;

                                                   CaptionML=[ENU=FA Posting Type;
                                                              RUS=Тип учета ОС];
                                                   OptionCaptionML=[ENU=Acquisition Cost,Depreciation,Write-Down,Appreciation,Custom 1,Custom 2,Disposal,Maintenance,Salvage Value,Transfer;
                                                                    RUS=Стоимость приобретения,Амортизация,Понижение стоимости,Повышение стоимости,Польз. метод 1,Польз. метод 2,Реализация,Обслуживание,Ликвидац. стоимость,Перемещение];
                                                   OptionString=Acquisition Cost,Depreciation,Write-Down,Appreciation,Custom 1,Custom 2,Disposal,Maintenance,Salvage Value,Transfer }
    { 6   ;   ;FA No.              ;Code20        ;TableRelation="Fixed Asset";
                                                   OnValidate=BEGIN
                                                                IF "FA No." = '' THEN BEGIN
                                                                  CreateDim(DATABASE::"Fixed Asset","FA No.");
                                                                  EXIT;
                                                                END;

                                                                FA.GET("FA No.");
                                                                FA.TESTFIELD(Blocked,FALSE);
                                                                FA.TESTFIELD(Inactive,FALSE);
                                                                Description := FA.Description;
                                                                IF "Depreciation Book Code" = '' THEN BEGIN
                                                                  FASetup.GET;
                                                                  "Depreciation Book Code" := GetDeprBookCode;
                                                                  IF NOT FADeprBook.GET("FA No.","Depreciation Book Code") THEN
                                                                    "Depreciation Book Code" := '';
                                                                END;
                                                                IF "Depreciation Book Code" <> '' THEN BEGIN
                                                                  FADeprBook.GET("FA No.","Depreciation Book Code");
                                                                  "FA Posting Group" := FADeprBook."FA Posting Group";
                                                                END;
                                                                IF "Location Code" = '' THEN
                                                                  "Location Code" := FA."FA Location Code";
                                                                IF "Employee No." = '' THEN
                                                                  "Employee No." := FA."Responsible Employee";
                                                                CreateDim(DATABASE::"Fixed Asset","FA No.");
                                                              END;

                                                   CaptionML=[ENU=FA No.;
                                                              RUS=Номер ОС] }
    { 7   ;   ;FA Posting Date     ;Date          ;CaptionML=[ENU=FA Posting Date;
                                                              RUS=Дата учета ОС] }
    { 8   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              RUS=Дата учета] }
    { 9   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              RUS=Тип документа];
                                                   OptionCaptionML=[ENU=" ,,Invoice,Credit Memo";
                                                                    RUS=" ,,Счет,Кредит-нота"];
                                                   OptionString=[ ,,Invoice,Credit Memo] }
    { 10  ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              RUS=Дата документа] }
    { 11  ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              RUS=Номер документа] }
    { 12  ;   ;External Document No.;Code35       ;CaptionML=[ENU=External Document No.;
                                                              RUS=Номер внешнего документа] }
    { 13  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 14  ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                IF ((Amount > 0) AND (NOT Correction)) OR
                                                                   ((Amount < 0) AND Correction)
                                                                THEN BEGIN
                                                                  "Debit Amount" := Amount;
                                                                  "Credit Amount" := 0
                                                                END ELSE BEGIN
                                                                  "Debit Amount" := 0;
                                                                  "Credit Amount" := -Amount;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Amount;
                                                              RUS=Сумма];
                                                   AutoFormatType=1 }
    { 15  ;   ;Debit Amount        ;Decimal       ;OnValidate=BEGIN
                                                                Correction := ("Debit Amount" < 0);
                                                                Amount := "Debit Amount";
                                                                VALIDATE(Amount);
                                                              END;

                                                   CaptionML=[ENU=Debit Amount;
                                                              RUS=Сумма по дебету];
                                                   AutoFormatType=1 }
    { 16  ;   ;Credit Amount       ;Decimal       ;OnValidate=BEGIN
                                                                Correction := ("Credit Amount" < 0);
                                                                Amount := -"Credit Amount";
                                                                VALIDATE(Amount);
                                                              END;

                                                   CaptionML=[ENU=Credit Amount;
                                                              RUS=Сумма по кредиту];
                                                   AutoFormatType=1 }
    { 17  ;   ;Salvage Value       ;Decimal       ;CaptionML=[ENU=Salvage Value;
                                                              RUS=Ликвидационная стоимость];
                                                   AutoFormatType=1 }
    { 18  ;   ;Quantity            ;Decimal       ;OnValidate=BEGIN
                                                                FA.GET("FA No.");
                                                                IF FA."Undepreciable FA" THEN BEGIN
                                                                  FADeprBook.GET("FA No.","Depreciation Book Code");
                                                                  FADeprBook.SETFILTER("FA Posting Date Filter",'..%1',"FA Posting Date");
                                                                  FADeprBook.CALCFIELDS(Quantity,"Book Value");
                                                                  IF FADeprBook.Quantity > 0 THEN BEGIN
                                                                    IF Quantity > FADeprBook.Quantity THEN
                                                                      Quantity := FADeprBook.Quantity;
                                                                    VALIDATE(Amount,FADeprBook."Book Value" * Quantity / FADeprBook.Quantity);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Quantity;
                                                              RUS=Кол-во];
                                                   DecimalPlaces=0:5 }
    { 19  ;   ;Correction          ;Boolean       ;OnValidate=BEGIN
                                                                VALIDATE(Amount);
                                                              END;

                                                   CaptionML=[ENU=Correction;
                                                              RUS=Корректировка] }
    { 20  ;   ;No. of Depreciation Days;Integer   ;CaptionML=[ENU=No. of Depreciation Days;
                                                              RUS=Число дней амортизации];
                                                   BlankZero=Yes }
    { 21  ;   ;Depr. until FA Posting Date;Boolean;CaptionML=[ENU=Depr. until FA Posting Date;
                                                              RUS=Амортизация до даты учета ОС] }
    { 22  ;   ;Depr. Acquisition Cost;Boolean     ;CaptionML=[ENU=Depr. Acquisition Cost;
                                                              RUS=Аморт. - стоим. приобретения] }
    { 24  ;   ;FA Posting Group    ;Code10        ;TableRelation="FA Posting Group";
                                                   CaptionML=[ENU=FA Posting Group;
                                                              RUS=Учетная группа ОС] }
    { 26  ;   ;Maintenance Code    ;Code10        ;TableRelation=Maintenance;
                                                   OnValidate=BEGIN
                                                                IF "Maintenance Code" <> '' THEN
                                                                  TESTFIELD("FA Posting Type","FA Posting Type"::Maintenance);
                                                              END;

                                                   CaptionML=[ENU=Maintenance Code;
                                                              RUS=Код обслуживания] }
    { 27  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              RUS=Код ярлыка измерения 1];
                                                   CaptionClass='1,2,1' }
    { 28  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              RUS=Код ярлыка измерения 2];
                                                   CaptionClass='1,2,2' }
    { 30  ;   ;Insurance No.       ;Code20        ;TableRelation=Insurance;
                                                   OnValidate=BEGIN
                                                                IF "Insurance No." <> '' THEN
                                                                  TESTFIELD("FA Posting Type","FA Posting Type"::"Acquisition Cost");
                                                              END;

                                                   CaptionML=[ENU=Insurance No.;
                                                              RUS=Номер страхования] }
    { 31  ;   ;Budgeted FA No.     ;Code20        ;TableRelation="Fixed Asset";
                                                   OnValidate=BEGIN
                                                                IF "Budgeted FA No." = '' THEN
                                                                  EXIT;
                                                                FA.GET("Budgeted FA No.");
                                                                FA.TESTFIELD("Budgeted Asset",TRUE);
                                                              END;

                                                   CaptionML=[ENU=Budgeted FA No.;
                                                              RUS=Номер бюджетного ОС] }
    { 32  ;   ;Use Duplication List;Boolean       ;OnValidate=BEGIN
                                                                "Duplicate in Depreciation Book" := '';
                                                              END;

                                                   CaptionML=[ENU=Use Duplication List;
                                                              RUS=Использ. список дублирования] }
    { 33  ;   ;Duplicate in Depreciation Book;Code10;
                                                   TableRelation="Depreciation Book";
                                                   OnValidate=BEGIN
                                                                "Use Duplication List" := FALSE;
                                                              END;

                                                   CaptionML=[ENU=Duplicate in Depreciation Book;
                                                              RUS=Дубл. в книге амортизации] }
    { 34  ;   ;FA Reclassification Entry;Boolean  ;CaptionML=[ENU=FA Reclassification Entry;
                                                              RUS=Операция реклассификации ОС] }
    { 35  ;   ;FA Error Entry No.  ;Integer       ;TableRelation="FA Ledger Entry";
                                                   CaptionML=[ENU=FA Error Entry No.;
                                                              RUS=Номер ошибочной операции ОС];
                                                   BlankZero=Yes }
    { 36  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              RUS=Код причины] }
    { 37  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              RUS=Код источника] }
    { 38  ;   ;Recurring Method    ;Option        ;CaptionML=[ENU=Recurring Method;
                                                              RUS=Метод повторения];
                                                   OptionCaptionML=[ENU=" ,F Fixed,V Variable";
                                                                    RUS=" ,F фиксир.,V перем."];
                                                   OptionString=[ ,F Fixed,V Variable] }
    { 39  ;   ;Recurring Frequency ;DateFormula   ;CaptionML=[ENU=Recurring Frequency;
                                                              RUS=Частота повторения] }
    { 41  ;   ;Expiration Date     ;Date          ;CaptionML=[ENU=Expiration Date;
                                                              RUS=Годен до] }
    { 42  ;   ;Index Entry         ;Boolean       ;CaptionML=[ENU=Index Entry;
                                                              RUS=Операция переоценки] }
    { 43  ;   ;Posting No. Series  ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Posting No. Series;
                                                              RUS=Учетная серия номеров] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              RUS=Код набора измерений];
                                                   Editable=No }
    { 481 ;   ;New Dimension Set ID;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=New Dimension Set ID;
                                                              RUS=Новый код набора измерений];
                                                   Editable=No }
    { 12400;  ;Location Code       ;Code10        ;TableRelation="FA Location";
                                                   CaptionML=[ENU=Location Code;
                                                              RUS=Код склада] }
    { 12401;  ;New Location Code   ;Code10        ;TableRelation="FA Location";
                                                   CaptionML=[ENU=New Location Code;
                                                              RUS=Новый код склада] }
    { 12402;  ;Reclas. without G/L ;Boolean       ;CaptionML=[ENU=Reclas. without G/L;
                                                              RUS=Рекласс. без ГК] }
    { 12403;  ;New Shortcut Dimension 1 Code;Code20;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateNewShortcutDimCode(1,"New Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=New Shortcut Dimension 1 Code;
                                                              RUS=Код нового ярлыка измерения 1];
                                                   CaptionClass='1,2,1,' + Text007 }
    { 12404;  ;New Shortcut Dimension 2 Code;Code20;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateNewShortcutDimCode(2,"New Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=New Shortcut Dimension 2 Code;
                                                              RUS=Код нового ярлыка измерения 2];
                                                   CaptionClass='1,2,2,' + Text007 }
    { 12410;  ;Employee No.        ;Code20        ;TableRelation=Employee;
                                                   CaptionML=[ENU=Employee No.;
                                                              RUS=Код сотрудника] }
    { 12411;  ;New Employee No.    ;Code20        ;TableRelation=Employee;
                                                   CaptionML=[ENU=New Employee No.;
                                                              RUS=Код нового сотрудника] }
    { 12429;  ;Prepmt. Diff. Appln. Entry No.;Integer;
                                                   CaptionML=[ENU=Prepmt. Diff. Appln. Entry No.;
                                                              RUS=Ном. операции примен. для предоплаты разн.];
                                                   Editable=No }
    { 12440;  ;FA Charge           ;Boolean       ;CaptionML=[ENU=FA Charge;
                                                              RUS=Издержка ОС] }
    { 12450;  ;Actual Quantity     ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Phys. Inventory");
                                                                CalcInventory;
                                                              END;

                                                   CaptionML=[ENU=Actual Quantity;
                                                              RUS=Фактическое количество] }
    { 12451;  ;Calc. Quantity      ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Phys. Inventory");
                                                                CalcInventory;
                                                              END;

                                                   CaptionML=[ENU=Calc. Quantity;
                                                              RUS=Расчетное количество];
                                                   Editable=No }
    { 12452;  ;Actual Amount       ;Decimal       ;CaptionML=[ENU=Actual Amount;
                                                              RUS=Фактическая сумма] }
    { 12453;  ;Calc. Amount        ;Decimal       ;CaptionML=[ENU=Calc. Amount;
                                                              RUS=Расчетная сумма];
                                                   Editable=No }
    { 12454;  ;Phys. Inventory     ;Boolean       ;CaptionML=[ENU=Phys. Inventory;
                                                              RUS=Инвентаризация] }
    { 12491;  ;Depr. Period Starting Date;Date    ;TableRelation="Accounting Period";
                                                   CaptionML=[ENU=Depr. Period Starting Date;
                                                              RUS=Дата начала периода амортизации] }
    { 17201;  ;Depr. Bonus         ;Boolean       ;CaptionML=[ENU=Depr. Bonus;
                                                              RUS=Аморт. премия] }
    { 17300;  ;Depr. Amount w/o Normalization;Decimal;
                                                   CaptionML=[ENU=Depr. Amount w/o Normalization;
                                                              RUS=Сумма амортиз. без нормализации];
                                                   BlankZero=Yes }
    { 17301;  ;Depr. Group Elimination;Boolean    ;CaptionML=[ENU=Depr. Group Elimination;
                                                              RUS=Исключение группы аморт.] }
    { 17302;  ;Actual  Remaining Amount;Decimal   ;CaptionML=[ENU=Actual  Remaining Amount;
                                                              RUS=Фактическая сумма остатка] }
    { 17303;  ;Tax Difference Code ;Code10        ;TableRelation="Tax Difference" WHERE (Source Code Mandatory=CONST(Yes),
                                                                                         Depreciation Bonus=CONST(No));
                                                   OnValidate=VAR
                                                                FALedgerEntry@1210000 : Record 5601;
                                                              BEGIN
                                                                IF "Tax Difference Code" <> xRec."Tax Difference Code" THEN
                                                                  IF "FA Error Entry No." <> 0 THEN BEGIN
                                                                    FALedgerEntry.GET("FA Error Entry No.");
                                                                    TESTFIELD("Tax Difference Code",FALedgerEntry."Tax Difference Code");
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=Tax Difference Code;
                                                              RUS=Код налоговой разницы] }
    { 50001;  ;Buffer Entry No.    ;Integer       ;CaptionML=RUS=Буфер Операция Но.;
                                                   Description=NC PIF001 }
    { 50002;  ;Cons. Source Code   ;Code20        ;TableRelation="Consolidation Source";
                                                   CaptionML=[ENU=Cons. Source Code;
                                                              RUS=Код Источника Консолидации];
                                                   Description=NC PIF001 }
    { 50003;  ;OVA No.             ;Code20        ;TableRelation="Fixed Asset";
                                                   CaptionML=RUS=Код ОВА;
                                                   Description=NC PIF001 }
    { 50004;  ;Cons. Register Error Entry No.;Integer;
                                                   TableRelation="Error Journal"."Entry No." WHERE (Error Group=CONST(Transformation),
                                                                                                    Cons. Source Code=FIELD(Cons. Source Code),
                                                                                                    Cons. Register=FIELD(Register No.));
                                                   CaptionML=[ENU=Cons. Register Error Entry No.;
                                                              RUS=Конс. Регистр Ошибка Операция Но.];
                                                   Description=NC PIF001 }
    { 50005;  ;Register No.        ;Integer       ;TableRelation="Consolidation Register".No.;
                                                   CaptionML=[ENU=Register No.;
                                                              RUS=Регистр Но.];
                                                   Description=NC MFA01 }
    { 50006;  ;FA Vendor No.       ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=BEGIN
                                                                //NC OFA001 > DP
                                                                FAJnlLine.TESTFIELD("FA Posting Type","FA Posting Type"::"Acquisition Cost");
                                                                //NC OFA001 < DP
                                                              END;

                                                   CaptionML=[ENU=FA Vendor No.;
                                                              RUS=ОС Поставщик Но.];
                                                   Description=NC OFA001 DP }
    { 50007;  ;Source FA Entry No. ;Integer       ;CaptionML=RUS=RAS ОС Операция Но.;
                                                   Description=NC MFA22 DP,MIO-9 DP }
    { 50008;  ;Cons. FA Export Type;Option        ;CaptionML=[ENU=GAAP FA Export Type;
                                                              RUS=GAAP ОС Экспорт Тип];
                                                   OptionCaptionML=[ENU=,Not Export,Acquisition,Release,Disposal;
                                                                    RUS=,Не Экспортировать,Приобретение,Ввод в Эксплуатацию,Реализация];
                                                   OptionString=,Not Export,Acquisition,Release,Disposal;
                                                   Description=NC MFA22 DP }
    { 50030;  ;FA Def. Dim. Change ;Boolean       ;CaptionML=[ENU=FA Def. Dim. Change;
                                                              RUS=ОС Станд. Измер. Изменить];
                                                   Description=NC MCO05 DP }
    { 50035;  ;FA Def. Dim. Code   ;Code20        ;TableRelation=Dimension;
                                                   CaptionML=[ENU=FA Def. Dim. Code;
                                                              RUS=ОС Станд. Измерение Код];
                                                   Description=NC MCO05 DP }
    { 50040;  ;FA Reclassification ;Boolean       ;CaptionML=[ENU=FA Reclassification;
                                                              RUS=ОС Реклассификация];
                                                   Description=NC MCO05.2 DP }
    { 50045;  ;FA Reclassification No.;Code20     ;TableRelation="Fixed Asset";
                                                   CaptionML=[ENU=FA Reclassification No.;
                                                              RUS=ОС Реклассификация Но.];
                                                   Description=NC MCO05.2 DP }
  }
  KEYS
  {
    {    ;Journal Template Name,Journal Batch Name,Line No.;
                                                   Clustered=Yes }
    {    ;Journal Template Name,Journal Batch Name,FA Posting Date;
                                                   MaintainSQLIndex=No }
    {    ;Buffer Entry No.,Cons. Source Code       }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      FASetup@1000 : Record 5603;
      FA@1001 : Record 5600;
      FAJnlTemplate@1002 : Record 5619;
      FAJnlBatch@1003 : Record 5620;
      FAJnlLine@1004 : Record 5621;
      FADeprBook@1005 : Record 5612;
      GLSetup@1210002 : Record 98;
      NoSeriesMgt@1006 : Codeunit 396;
      DimMgt@1007 : Codeunit 408;
      Text007@1210000 : TextConst 'ENU="New ";RUS="Новый "';
      Text12400@1210001 : TextConst 'ENU=You can''t create Acquisition.\Inventory is only for Write-Off.;RUS=Нельзя создать приобретение.\Запас предназначен только для списания.';

    PROCEDURE ConvertToLedgEntry@1(VAR FAJnlLine@1000 : Record 5621) : Option;
    VAR
      FALedgEntry@1001 : Record 5601;
    BEGIN
      WITH FALedgEntry DO BEGIN
        CASE FAJnlLine."FA Posting Type" OF
          FAJnlLine."FA Posting Type"::"Acquisition Cost":
            "FA Posting Type" := "FA Posting Type"::"Acquisition Cost";
          FAJnlLine."FA Posting Type"::Depreciation:
            "FA Posting Type" := "FA Posting Type"::Depreciation;
          FAJnlLine."FA Posting Type"::"Write-Down":
            "FA Posting Type" := "FA Posting Type"::"Write-Down";
          FAJnlLine."FA Posting Type"::Appreciation:
            "FA Posting Type" := "FA Posting Type"::Appreciation;
          FAJnlLine."FA Posting Type"::"Custom 1":
            "FA Posting Type" := "FA Posting Type"::"Custom 1";
          FAJnlLine."FA Posting Type"::"Custom 2":
            "FA Posting Type" := "FA Posting Type"::"Custom 2";
          FAJnlLine."FA Posting Type"::Disposal:
            "FA Posting Type" := "FA Posting Type"::"Proceeds on Disposal";
          FAJnlLine."FA Posting Type"::"Salvage Value":
            "FA Posting Type" := "FA Posting Type"::"Salvage Value";
          FAJnlLine."FA Posting Type"::Transfer:
            "FA Posting Type" := "FA Posting Type"::Transfer;
        END;
        EXIT("FA Posting Type");
      END;
    END;

    PROCEDURE SetUpNewLine@8(LastFAJnlLine@1000 : Record 5621);
    BEGIN
      FAJnlTemplate.GET("Journal Template Name");
      FAJnlBatch.GET("Journal Template Name","Journal Batch Name");
      FAJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
      FAJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
      IF FAJnlLine.FINDFIRST THEN BEGIN
        "FA Posting Date" := LastFAJnlLine."FA Posting Date";
        "Document No." := LastFAJnlLine."Document No.";
      END ELSE BEGIN
        "FA Posting Date" := WORKDATE;
        IF FAJnlBatch."No. Series" <> '' THEN BEGIN
          CLEAR(NoSeriesMgt);
          "Document No." := NoSeriesMgt.TryGetNextNo(FAJnlBatch."No. Series","FA Posting Date");
        END;
      END;
      "Recurring Method" := LastFAJnlLine."Recurring Method";
      "Source Code" := FAJnlTemplate."Source Code";
      "Reason Code" := FAJnlBatch."Reason Code";
      "Posting No. Series" := FAJnlBatch."Posting No. Series";
    END;

    PROCEDURE CreateDim@13(Type1@1000 : Integer;No1@1001 : Code[20]);
    VAR
      TableID@1002 : ARRAY [10] OF Integer;
      No@1003 : ARRAY [10] OF Code[20];
    BEGIN
      TableID[1] := Type1;
      No[1] := No1;
      "Shortcut Dimension 1 Code" := '';
      "Shortcut Dimension 2 Code" := '';
      "Dimension Set ID" :=
      //NC NOS-26 > SPA
      //  DimMgt.GetDefaultDimID(
        DimMgt.GetDefaultDimID_Jnl(
      //NC NOS-26 < SPA
          TableID,No,"Source Code",
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code",0,0,"Journal Template Name","Journal Batch Name");
    END;

    PROCEDURE ValidateShortcutDimCode@14(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    PROCEDURE LookupShortcutDimCode@18(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    PROCEDURE ShowShortcutDimCode@15(VAR ShortcutDimCode@1000 : ARRAY [20] OF Code[20]);
    BEGIN
      DimMgt.GetShortcutDimensions("Dimension Set ID",ShortcutDimCode);
    END;

    PROCEDURE ValidateNewShortcutDimCode@1210009(FieldNumber@1210001 : Integer;VAR NewShortcutDimCode@1210000 : Code[20]);
    BEGIN
      DimMgt.ValidateShortcutDimValues(FieldNumber,NewShortcutDimCode,"New Dimension Set ID");
    END;

    PROCEDURE LookupNewShortcutDimCode@1210010(FieldNumber@1210001 : Integer;VAR NewShortcutDimCode@1210000 : Code[20]);
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,NewShortcutDimCode);
      DimMgt.ValidateShortcutDimValues(FieldNumber,NewShortcutDimCode,"New Dimension Set ID");
    END;

    PROCEDURE ShowNewShortcutDimCode@1210016(VAR NewShortcutDimCode@1210000 : ARRAY [20] OF Code[20]);
    BEGIN
      DimMgt.GetShortcutDimensions("New Dimension Set ID",NewShortcutDimCode);
    END;

    PROCEDURE ShowDimensions@2();
    BEGIN
      DimMgt.SetObjectFrom(Rec); // NC NOS-26 SPA
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet2(
          "Dimension Set ID",STRSUBSTNO('%1 %2 %3',"Journal Template Name","Journal Batch Name","Line No."),
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    PROCEDURE ShowReclasDimensions@1210030();
    BEGIN
      DimMgt.EditReclasDimensionSet2(
        "Dimension Set ID","New Dimension Set ID",STRSUBSTNO('%1 %2 %3',"Journal Template Name","Journal Batch Name","Line No."),
        "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code","New Shortcut Dimension 1 Code","New Shortcut Dimension 2 Code");
    END;

    PROCEDURE CalcInventory@1210000();
    BEGIN
      IF ("Actual Quantity" - "Calc. Quantity") > 0 THEN
        ERROR(Text12400);
      Quantity := "Actual Quantity" - "Calc. Quantity";
      TESTFIELD("Calc. Quantity");
      "Actual Amount" := "Actual Quantity" * "Calc. Amount" / "Calc. Quantity";
      VALIDATE(Amount,"Actual Amount" - "Calc. Amount");
    END;

    LOCAL PROCEDURE GetDeprBookCode@1210001() : Code[10];
    BEGIN
      GLSetup.GET;
      IF GLSetup."Enable Russian Accounting" THEN
        EXIT(FASetup."Release Depr. Book");
      EXIT(FASetup."Default Depr. Book");
    END;

    PROCEDURE IsOpenedFromBatch@42() : Boolean;
    VAR
      FAJournalBatch@1002 : Record 5620;
      TemplateFilter@1001 : Text;
      BatchFilter@1000 : Text;
    BEGIN
      BatchFilter := GETFILTER("Journal Batch Name");
      IF BatchFilter <> '' THEN BEGIN
        TemplateFilter := GETFILTER("Journal Template Name");
        IF TemplateFilter <> '' THEN
          FAJournalBatch.SETFILTER("Journal Template Name",TemplateFilter);
        FAJournalBatch.SETFILTER(Name,BatchFilter);
        FAJournalBatch.FINDFIRST;
      END;

      EXIT((("Journal Batch Name" <> '') AND ("Journal Template Name" = '')) OR (BatchFilter <> ''));
    END;

    BEGIN
    {
      NC PIF001 DL добавлены поля Cons. Source Code, Buffer Entry No., OVA No.
      NC PIF001.1 DL Добавлен ключ Buffer Entry No.,Cons. Source Code
      NC MCO05 DP Добавлены поля "FA Def. Dim. Change", "FA Def. Dim. Code"
      NC MCO05.2 DP Добавлены поля "FA Reclassification","FA Reclassification No."
      NC MIO-9 DP Изменено наименование поля "Cons. Source FA Entry No."->"Source FA Entry No."
      NC NCS-2356 DP Changed dimension of array ShortcutDimCode 8->10 function ShowShortcutDimCode
      ---------------------
      NC NOS-26 SPA Миграция на NAV2017
    }
    END.
  }
}

