OBJECT Codeunit 229 Document-Print
{
  OBJECT-PROPERTIES
  {
    Date=23.02.17;
    Time=12:00:00;
    Version List=NAVW110.00.00.15601,NAVRU10.00.00.15601;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'ENU=%1 is missing for %2 %3.;RUS=%1 отсутствует для %2 %3.';
      Text002@1002 : TextConst 'ENU=%1 for %2 is missing in %3.;RUS=%1 для %2 отсутствует в %3.';
      SalesSetup@1003 : Record 311;
      PurchSetup@1004 : Record 312;
      QuoteTxt@1000 : TextConst 'ENU=Quote;RUS=Предлож.';
      OrderTxt@1005 : TextConst 'ENU=Order;RUS=Заказ';

    PROCEDURE EmailSalesHeader@12(SalesHeader@1000 : Record 36);
    BEGIN
      DoPrintSalesHeader(SalesHeader,TRUE);
    END;

    PROCEDURE PrintSalesHeader@1(SalesHeader@1000 : Record 36);
    BEGIN
      DoPrintSalesHeader(SalesHeader,FALSE);
    END;

    LOCAL PROCEDURE DoPrintSalesHeader@14(SalesHeader@1000 : Record 36;SendAsEmail@1002 : Boolean);
    VAR
      ReportSelections@1001 : Record 77;
      DocName@1003 : Text[10];
    BEGIN
      SalesHeader.SETRANGE("No.",SalesHeader."No.");
      CalcSalesDisc(SalesHeader);
      IF SendAsEmail THEN BEGIN
        CASE SalesHeader."Document Type" OF
          SalesHeader."Document Type"::Quote:
            DocName := QuoteTxt;
          SalesHeader."Document Type"::Order:
            DocName := OrderTxt;
        END;
        ReportSelections.SendEmailToCust(
          GetSalesDocTypeUsage(SalesHeader),SalesHeader,SalesHeader."No.",DocName,TRUE,SalesHeader."Bill-to Customer No.")
      END ELSE
        ReportSelections.Print(GetSalesDocTypeUsage(SalesHeader),SalesHeader,SalesHeader."Bill-to Customer No.");
    END;

    PROCEDURE PrintSalesInvoiceHeader@1210008(SalesInvoiceHeader@1210000 : Record 112;SendAsEmail@1210005 : Boolean;ShowRequestForm@1210003 : Boolean);
    VAR
      ReportSelections@1210006 : Record 77;
      SalesInvHeader@1210001 : Record 112;
      DocPrintBuffer@1210002 : Record 12430;
    BEGIN
      WITH SalesInvHeader DO BEGIN
        COPY(SalesInvoiceHeader);
        SETRECFILTER;

        InsertDocPrintBuffer(DocPrintBuffer,DATABASE::"Sales Invoice Header",0,"No.");

        COMMIT;
        IF SendAsEmail THEN
          ReportSelections.SendEmailToCust(
            GetSalesInvoiceDocTypeUsage(SalesInvHeader),SalesInvHeader,"No.",GetDefaultEmailDocumentName,
            ShowRequestForm,"Bill-to Customer No.")
        ELSE
          ReportSelections.PrintWithDocPrintOption(
            GetSalesInvoiceDocTypeUsage(SalesInvHeader),SalesInvHeader,"Bill-to Customer No.",ShowRequestForm,DocPrintBuffer);
      END;
    END;

    PROCEDURE PrintPurchHeader@5(PurchHeader@1000 : Record 38);
    VAR
      ReportSelections@1001 : Record 77;
    BEGIN
      PurchHeader.SETRANGE("No.",PurchHeader."No.");
      CalcPurchDisc(PurchHeader);

      ReportSelections.Print(GetPurchDocTypeUsage(PurchHeader),PurchHeader,'');
    END;

    PROCEDURE PrintBankAccStmt@10(BankAccStmt@1000 : Record 275);
    VAR
      ReportSelections@1001 : Record 77;
    BEGIN
      BankAccStmt.SETRECFILTER;

      ReportSelections.Print(ReportSelections.Usage::BS,BankAccStmt,'');
    END;

    PROCEDURE PrintCheck@11(VAR NewGenJnlLine@1000 : Record 81);
    VAR
      GenJnlLine@1001 : Record 81;
      ReportSelections@1002 : Record 77;
    BEGIN
      GenJnlLine.COPY(NewGenJnlLine);
      GenJnlLine.OnCheckGenJournalLinePrintCheckRestrictions;

      ReportSelections.Print(ReportSelections.Usage::BC,GenJnlLine,'');
    END;

    PROCEDURE PrintTransferHeader@2(TransHeader@1000 : Record 5740);
    VAR
      ReportSelections@1001 : Record 77;
    BEGIN
      TransHeader.SETRECFILTER;

      ReportSelections.Print(ReportSelections.Usage::Inv1,TransHeader,'');
    END;

    PROCEDURE PrintServiceContract@3(ServiceContract@1000 : Record 5965);
    VAR
      ReportSelection@1001 : Record 77;
    BEGIN
      ServiceContract.SETRANGE("Contract No.",ServiceContract."Contract No.");

      ReportSelection.FilterPrintUsage(GetServContractTypeUsage(ServiceContract));
      IF ReportSelection.ISEMPTY THEN
        ERROR(Text001,ReportSelection.TABLECAPTION,FORMAT(ServiceContract."Contract Type"),ServiceContract."Contract No.");

      ReportSelection.Print(GetServContractTypeUsage(ServiceContract),ServiceContract,ServiceContract."Bill-to Customer No.");
    END;

    PROCEDURE PrintServiceHeader@4(ServiceHeader@1000 : Record 5900);
    VAR
      ReportSelection@1001 : Record 77;
    BEGIN
      ServiceHeader.SETRANGE("No.",ServiceHeader."No.");
      CalcServDisc(ServiceHeader);

      ReportSelection.FilterPrintUsage(GetServHeaderDocTypeUsage(ServiceHeader));
      IF ReportSelection.ISEMPTY THEN
        ERROR(Text002,ReportSelection.FIELDCAPTION("Report ID"),ServiceHeader.TABLECAPTION,ReportSelection.TABLECAPTION);

      ReportSelection.Print(GetServHeaderDocTypeUsage(ServiceHeader),ServiceHeader,ServiceHeader."Customer No.");
    END;

    PROCEDURE PrintAsmHeader@9(AsmHeader@1000 : Record 900);
    VAR
      ReportSelections@1001 : Record 77;
    BEGIN
      AsmHeader.SETRANGE("No.",AsmHeader."No.");

      ReportSelections.Print(GetAsmHeaderDocTypeUsage(AsmHeader),AsmHeader,'');
    END;

    PROCEDURE PrintCashOrder@1210000(VAR NewGenJnlLine@1210000 : Record 81);
    VAR
      GenJnlLine@1210002 : Record 81;
      ReportSelection@1210001 : Record 77;
    BEGIN
      GenJnlLine.COPY(NewGenJnlLine);
      GenJnlLine.TESTFIELD(Amount);
      IF NewGenJnlLine."Credit Amount" <> 0 THEN
        ReportSelection.Print(ReportSelection.Usage::UCI,GenJnlLine,'')
      ELSE
        ReportSelection.Print(ReportSelection.Usage::UCO,GenJnlLine,'');
    END;

    PROCEDURE PrintSalesOrder@6(SalesHeader@1000 : Record 36;Usage@1001 : 'Order Confirmation,Work Order,Pick Instruction');
    VAR
      ReportSelection@1002 : Record 77;
    BEGIN
      IF SalesHeader."Document Type" <> SalesHeader."Document Type"::Order THEN
        EXIT;

      SalesHeader.SETRANGE("No.",SalesHeader."No.");
      CalcSalesDisc(SalesHeader);

      ReportSelection.PrintWithGUIYesNo(GetSalesOrderUsage(Usage),SalesHeader,GUIALLOWED,SalesHeader."Bill-to Customer No.");
    END;

    PROCEDURE PrintSalesHeaderArch@7(SalesHeaderArch@1000 : Record 5107);
    VAR
      ReportSelection@1001 : Record 77;
    BEGIN
      SalesHeaderArch.SETRECFILTER;

      ReportSelection.Print(GetSalesArchDocTypeUsage(SalesHeaderArch),SalesHeaderArch,SalesHeaderArch."Bill-to Customer No.");
    END;

    PROCEDURE PrintPurchHeaderArch@8(PurchHeaderArch@1000 : Record 5109);
    VAR
      ReportSelection@1001 : Record 77;
    BEGIN
      PurchHeaderArch.SETRECFILTER;

      ReportSelection.Print(GetPurchArchDocTypeUsage(PurchHeaderArch),PurchHeaderArch,'');
    END;

    PROCEDURE PrintAdvStmt@1210005(VAR NewPurchHeader@1210000 : Record 38);
    VAR
      PurchHeader@1210001 : Record 38;
      ReportSelection@1210002 : Record 77;
    BEGIN
      PurchHeader.COPY(NewPurchHeader);
      PurchHeader.SETRECFILTER;
      ReportSelection.Print(ReportSelection.Usage::UAS,PurchHeader,'');
    END;

    PROCEDURE PrintItemDoc@1210001(VAR NewItemDocHeader@1210000 : Record 12450);
    VAR
      ItemDocHeader@1470000 : Record 12450;
      ReportSelection@1210002 : Record 77;
      DocPrintBuffer@1210001 : Record 12430;
    BEGIN
      WITH ItemDocHeader DO BEGIN
        COPY(NewItemDocHeader);
        SETRECFILTER;

        InsertDocPrintBuffer(DocPrintBuffer,DATABASE::"Item Document Header","Document Type","No.");

        COMMIT;
        CASE "Document Type" OF
          "Document Type"::Shipment:
            ReportSelection.PrintWithDocPrintOption(ReportSelection.Usage::UIS,ItemDocHeader,'',TRUE,DocPrintBuffer);
          "Document Type"::Receipt:
            ReportSelection.PrintWithDocPrintOption(ReportSelection.Usage::UIR,ItemDocHeader,'',TRUE,DocPrintBuffer);
        END;
      END;
    END;

    PROCEDURE PrintItemReceipt@1210015(ItemReceiptHeader@1210001 : Record 12451;ShowRequestForm@1210000 : Boolean);
    VAR
      ReportSelections@1001 : Record 77;
      ItemRcptHeader@1002 : Record 12451;
      DocPrintBuffer@1210002 : Record 12430;
    BEGIN
      WITH ItemRcptHeader DO BEGIN
        COPY(ItemReceiptHeader);
        SETRECFILTER;

        InsertDocPrintBuffer(DocPrintBuffer,DATABASE::"Item Receipt Header",0,"No.");

        COMMIT;
        ReportSelections.PrintWithDocPrintOption(ReportSelections.Usage::IR,ItemRcptHeader,'',ShowRequestForm,DocPrintBuffer);
      END;
    END;

    PROCEDURE PrintItemJnlDoc@1470004(NewItemJnlLine@1000 : Record 83;Reclass@1470000 : Boolean);
    VAR
      ItemJnlLine@1210000 : Record 83;
      ReportSelection@1210002 : Record 77;
    BEGIN
      WITH ItemJnlLine DO BEGIN
        COPY(NewItemJnlLine);
        SETRANGE("Journal Template Name","Journal Template Name");
        SETRANGE("Journal Batch Name","Journal Batch Name");
        IF Reclass THEN
          ReportSelection.Print(ReportSelection.Usage::IRJ,ItemJnlLine,'')
        ELSE
          ReportSelection.Print(ReportSelection.Usage::PIJ,ItemJnlLine,'');
      END;
    END;

    PROCEDURE PrintFAJnlDoc@1210003(NewFAJnlLine@1000 : Record 5621);
    VAR
      FAJnlLine@1210000 : Record 5621;
      ReportSelection@1210002 : Record 77;
      DocPrintBuffer@1210001 : Record 12430;
    BEGIN
      WITH FAJnlLine DO BEGIN
        COPY(NewFAJnlLine);
        SETRANGE("Journal Template Name","Journal Template Name");
        SETRANGE("Journal Batch Name","Journal Batch Name");

        InsertJournalPrintBuffer(DocPrintBuffer,DATABASE::"FA Journal Line","Journal Template Name","Journal Batch Name");

        COMMIT;
        ReportSelection.PrintWithDocPrintOption(ReportSelection.Usage::FAJ,FAJnlLine,'',TRUE,DocPrintBuffer);
      END;
    END;

    PROCEDURE PrintFAReclassJnlDoc@1210004(NewFAReclassJnlLine@1000 : Record 5624);
    VAR
      FAReclassJnlLine@1210000 : Record 5624;
      ReportSelection@1210002 : Record 77;
    BEGIN
      WITH FAReclassJnlLine DO BEGIN
        COPY(NewFAReclassJnlLine);
        SETRANGE("Journal Template Name","Journal Template Name");
        SETRANGE("Journal Batch Name","Journal Batch Name");
        ReportSelection.Print(ReportSelection.Usage::FARJ,FAReclassJnlLine,'');
      END;
    END;

    LOCAL PROCEDURE InsertDocPrintBuffer@1210007(VAR DocPrintBuffer@1210003 : Record 12430;TableID@1210000 : Integer;DocType@1210001 : Option;DocNo@1210002 : Code[20]);
    BEGIN
      WITH DocPrintBuffer DO BEGIN
        INIT;
        "User ID" := USERID;
        "Table ID" := TableID;
        "Document Type" := DocType;
        "Document No." := DocNo;
        IF NOT MODIFY THEN
          INSERT;
      END;
    END;

    LOCAL PROCEDURE InsertJournalPrintBuffer@1210006(VAR DocPrintBuffer@1210003 : Record 12430;TableID@1210000 : Integer;JnlTemplate@1210001 : Code[10];JnlBatch@1210002 : Code[10]);
    BEGIN
      WITH DocPrintBuffer DO BEGIN
        INIT;
        "User ID" := USERID;
        "Table ID" := TableID;
        "Journal Template Name" := JnlTemplate;
        "Journal Batch Name" := JnlBatch;
        IF NOT MODIFY THEN
          INSERT;
      END;
    END;

    LOCAL PROCEDURE GetSalesDocTypeUsage@23(SalesHeader@1000 : Record 36) : Integer;
    VAR
      ReportSelections@1001 : Record 77;
      CopyOfSalesHeader@1210000 : Record 36;
      CorrDocMgt@1210001 : Codeunit 12422;
    BEGIN
      CASE SalesHeader."Document Type" OF
        SalesHeader."Document Type"::Quote:
          EXIT(ReportSelections.Usage::SQ);
        SalesHeader."Document Type"::"Blanket Order":
          EXIT(ReportSelections.Usage::SB);
        SalesHeader."Document Type"::Order:
          EXIT(ReportSelections.Usage::SO);
        SalesHeader."Document Type"::"Return Order":
          EXIT(ReportSelections.Usage::SRet);
        SalesHeader."Document Type"::Invoice:
          BEGIN
            CopyOfSalesHeader := SalesHeader;
            IF CorrDocMgt.IsCorrDocument(CopyOfSalesHeader) THEN
              EXIT(ReportSelections.Usage::UCSD);
            EXIT(ReportSelections.Usage::USI);
          END;
        SalesHeader."Document Type"::"Credit Memo":
          BEGIN
            CopyOfSalesHeader := SalesHeader;
            IF CorrDocMgt.IsCorrDocument(CopyOfSalesHeader) THEN
              EXIT(ReportSelections.Usage::UCSD);
            EXIT(ReportSelections.Usage::USCM);
          END;
        ELSE
          ERROR('');
      END;
    END;

    LOCAL PROCEDURE GetSalesInvoiceDocTypeUsage@1210009(SalesInvoiceHeader@1210000 : Record 112) : Integer;
    VAR
      ReportSelections@1210003 : Record 77;
      TempSalesHeader@1210002 : TEMPORARY Record 36;
      CorrectiveDocMgt@1210001 : Codeunit 12422;
    BEGIN
      CorrectiveDocMgt.FillSalesInvCorrHeader(TempSalesHeader,SalesInvoiceHeader);
      IF CorrectiveDocMgt.IsCorrDocument(TempSalesHeader) THEN
        EXIT(ReportSelections.Usage::CSI);
      EXIT(ReportSelections.Usage::SI);
    END;

    LOCAL PROCEDURE GetPurchDocTypeUsage@13(PurchHeader@1000 : Record 38) : Integer;
    VAR
      ReportSelections@1001 : Record 77;
    BEGIN
      CASE PurchHeader."Document Type" OF
        PurchHeader."Document Type"::Quote:
          EXIT(ReportSelections.Usage::PQ);
        PurchHeader."Document Type"::"Blanket Order":
          EXIT(ReportSelections.Usage::PB);
        PurchHeader."Document Type"::Order:
          EXIT(ReportSelections.Usage::PO);
        PurchHeader."Document Type"::Invoice:
          EXIT(ReportSelections.Usage::UPI);
        PurchHeader."Document Type"::"Credit Memo":
          EXIT(ReportSelections.Usage::UPCM);
        PurchHeader."Document Type"::"Return Order":
          EXIT(ReportSelections.Usage::PRet);
        ELSE
          ERROR('');
      END;
    END;

    LOCAL PROCEDURE GetServContractTypeUsage@21(ServiceContractHeader@1000 : Record 5965) : Integer;
    VAR
      ReportSelections@1001 : Record 77;
    BEGIN
      CASE ServiceContractHeader."Contract Type" OF
        ServiceContractHeader."Contract Type"::Quote:
          EXIT(ReportSelections.Usage::SMCQ);
        ServiceContractHeader."Contract Type"::Contract:
          EXIT(ReportSelections.Usage::SMC);
        ELSE
          ERROR('');
      END;
    END;

    LOCAL PROCEDURE GetServHeaderDocTypeUsage@22(ServiceHeader@1000 : Record 5900) : Integer;
    VAR
      ReportSelections@1001 : Record 77;
    BEGIN
      CASE ServiceHeader."Document Type" OF
        ServiceHeader."Document Type"::Quote:
          EXIT(ReportSelections.Usage::SMQ);
        ServiceHeader."Document Type"::Order:
          EXIT(ReportSelections.Usage::SMO);
        ServiceHeader."Document Type"::Invoice:
          EXIT(ReportSelections.Usage::SMI);
        ServiceHeader."Document Type"::"Credit Memo":
          EXIT(ReportSelections.Usage::SMCM);
        ELSE
          ERROR('');
      END;
    END;

    LOCAL PROCEDURE GetAsmHeaderDocTypeUsage@18(AsmHeader@1000 : Record 900) : Integer;
    VAR
      ReportSelections@1001 : Record 77;
    BEGIN
      CASE AsmHeader."Document Type" OF
        AsmHeader."Document Type"::Quote,
        AsmHeader."Document Type"::"Blanket Order",
        AsmHeader."Document Type"::Order:
          EXIT(ReportSelections.Usage::ASO);
        ELSE
          ERROR('');
      END;
    END;

    LOCAL PROCEDURE GetSalesOrderUsage@24(Usage@1001 : 'Order Confirmation,Work Order,Pick Instruction') : Integer;
    VAR
      ReportSelections@1000 : Record 77;
    BEGIN
      CASE Usage OF
        Usage::"Order Confirmation":
          EXIT(ReportSelections.Usage::SO);
        Usage::"Work Order":
          EXIT(ReportSelections.Usage::SWO);
        Usage::"Pick Instruction":
          EXIT(ReportSelections.Usage::SOPI);
        ELSE
          ERROR('');
      END;
    END;

    LOCAL PROCEDURE GetSalesArchDocTypeUsage@29(SalesHeaderArchive@1000 : Record 5107) : Integer;
    VAR
      ReportSelections@1001 : Record 77;
    BEGIN
      CASE SalesHeaderArchive."Document Type" OF
        SalesHeaderArchive."Document Type"::Quote:
          EXIT(ReportSelections.Usage::SAQ);
        SalesHeaderArchive."Document Type"::Order:
          EXIT(ReportSelections.Usage::SAO);
        SalesHeaderArchive."Document Type"::"Return Order":
          EXIT(ReportSelections.Usage::SARO);
        ELSE
          ERROR('');
      END
    END;

    LOCAL PROCEDURE GetPurchArchDocTypeUsage@35(PurchHeaderArchive@1000 : Record 5109) : Integer;
    VAR
      ReportSelections@1001 : Record 77;
    BEGIN
      CASE PurchHeaderArchive."Document Type" OF
        PurchHeaderArchive."Document Type"::Quote:
          EXIT(ReportSelections.Usage::PAQ);
        PurchHeaderArchive."Document Type"::Order:
          EXIT(ReportSelections.Usage::PAO);
        PurchHeaderArchive."Document Type"::"Return Order":
          EXIT(ReportSelections.Usage::PARO);
        ELSE
          ERROR('');
      END;
    END;

    LOCAL PROCEDURE CalcSalesDisc@25(VAR SalesHeader@1000 : Record 36);
    VAR
      SalesLine@1004 : Record 37;
    BEGIN
      SalesSetup.GET;
      IF SalesSetup."Calc. Inv. Discount" THEN BEGIN
        SalesLine.SETRANGE("Document Type",SalesHeader."Document Type");
        SalesLine.SETRANGE("Document No.",SalesHeader."No.");
        SalesLine.FINDFIRST;
        CODEUNIT.RUN(CODEUNIT::"Sales-Calc. Discount",SalesLine);
        SalesHeader.GET(SalesHeader."Document Type",SalesHeader."No.");
        COMMIT;
      END;
    END;

    LOCAL PROCEDURE CalcPurchDisc@28(VAR PurchHeader@1000 : Record 38);
    VAR
      PurchLine@1003 : Record 39;
    BEGIN
      PurchSetup.GET;
      IF PurchSetup."Calc. Inv. Discount" THEN BEGIN
        PurchLine.SETRANGE("Document Type",PurchHeader."Document Type");
        PurchLine.SETRANGE("Document No.",PurchHeader."No.");
        PurchLine.FINDFIRST;
        CODEUNIT.RUN(CODEUNIT::"Purch.-Calc.Discount",PurchLine);
        PurchHeader.GET(PurchHeader."Document Type",PurchHeader."No.");
        COMMIT;
      END;
    END;

    LOCAL PROCEDURE CalcServDisc@31(VAR ServHeader@1000 : Record 5900);
    VAR
      ServLine@1002 : Record 5902;
    BEGIN
      SalesSetup.GET;
      IF SalesSetup."Calc. Inv. Discount" THEN BEGIN
        ServLine.SETRANGE("Document Type",ServHeader."Document Type");
        ServLine.SETRANGE("Document No.",ServHeader."No.");
        ServLine.FINDFIRST;
        CODEUNIT.RUN(CODEUNIT::"Service-Calc. Discount",ServLine);
        ServHeader.GET(ServHeader."Document Type",ServHeader."No.");
        COMMIT;
      END;
    END;

    BEGIN
    END.
  }
}

