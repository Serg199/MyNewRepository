OBJECT Page 12422 Bank Payment Order
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Bank Payment Order;
               RUS=Платежное поручение];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table81;
    DataCaptionExpr="Document No.";
    PageType=Card;
    AutoSplitKey=Yes;
    OnOpenPage=BEGIN
                 CurrPage.EDITABLE("Export Status" <> "Export Status"::"Bank Statement Found");
               END;

    OnAfterGetRecord=BEGIN
                       CheckPrintedHideValue := FALSE;
                       CalcPayment;
                       CheckPrintedText := FORMAT("Check Printed");
                       CheckPrintedTextOnFormat(CheckPrintedText);
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1210104 ;1   ;ActionGroup;
                      CaptionML=[ENU=Functions;
                                 RUS=Функции];
                      Image=Action }
      { 1210105 ;2   ;Action    ;
                      CaptionML=[ENU=Add VAT Info;
                                 RUS=Добавить сведения по НДС];
                      ApplicationArea=#Basic,#Suite;
                      Image=VATEntries;
                      OnAction=BEGIN
                                 UpdatePaymentVATInfo(TRUE);
                               END;
                                }
      { 1210106 ;2   ;Action    ;
                      CaptionML=[ENU=Copy Document;
                                 RUS=Копировать документ];
                      ApplicationArea=#Basic,#Suite;
                      Image=CopyDocument;
                      OnAction=BEGIN
                                 GenJnlLine.RESET;
                                 GenJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
                                 GenJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
                                 GenJnlLine.SETRANGE("Line No.","Line No.");
                                 IF GenJnlLine.FINDFIRST THEN
                                   REPORT.RUNMODAL(REPORT::"Copy Payment Document",TRUE,TRUE,GenJnlLine);
                               END;
                                }
      { 1210004 ;2   ;Action    ;
                      CaptionML=[ENU=Cancel Export;
                                 RUS=Отменить экспорт];
                      ApplicationArea=#Basic,#Suite;
                      Image=Cancel;
                      OnAction=BEGIN
                                 ExportCancel;
                               END;
                                }
      { 1210103 ;1   ;Action    ;
                      Name=Print;
                      CaptionML=[ENU=&Print;
                                 RUS=&Печать];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF (BankAccNo <> '') AND (CorrAccNo <> '') THEN BEGIN
                                   GenJnlLine.RESET;
                                   GenJnlLine.COPY(Rec);
                                   GenJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
                                   GenJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
                                   GenJnlLine.SETRANGE("Line No.","Line No.");
                                   DocumentPrint.PrintCheck(GenJnlLine);
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1470000;1;Group     ;
                CaptionML=[ENU=Payment Order;
                           RUS=Платежное поручение] }

    { 1210000;2;Group     ;
                CaptionML=[ENU=General Info;
                           RUS=Общие сведения] }

    { 1210098;3;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. Account No.";
                Editable=FALSE }

    { 1210096;3;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Date";
                Editable=FALSE }

    { 1210094;3;Field     ;
                OptionCaptionML=[ENU=" ,Payment,,,,,Refund";
                                 RUS=" ,Оплата,,,,,Возмещение"];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Type";
                Editable=DocumentTypeEditable;
                OnValidate=BEGIN
                             DocumentTypeOnAfterValidate;
                           END;
                            }

    { 1210092;3;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Prepayment }

    { 1210089;3;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document No.";
                Editable=FALSE }

    { 1210087;3;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Date";
                Editable=FALSE }

    { 1210083;3;Field     ;
                OptionCaptionML=[ENU=G/L Account,Customer,Vendor,Bank Account;
                                 RUS=Счет ГК,Клиент,Поставщик,Банк. счет];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Account Type";
                OnValidate=BEGIN
                             CalcPayment;
                           END;
                            }

    { 1210081;3;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Account No.";
                OnValidate=BEGIN
                             AccountNoOnAfterValidate;
                           END;
                            }

    { 1210079;3;Field     ;
                ToolTipML=[ENU=Specifies the beneficiary bank code associated with the general journal line.;
                           RUS=Определяет код банка получателя, связанный со строкой финансового журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Beneficiary Bank Code";
                OnValidate=BEGIN
                             BeneficiaryBankCodeOnAfterVali;
                           END;
                            }

    { 1210077;3;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Currency Code" }

    { 1210053;3;Field     ;
                Name=DebitAmount;
                CaptionML=[ENU=Amount;
                           RUS=Сумма];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Debit Amount";
                MinValue=0;
                Editable=TRUE;
                OnValidate=BEGIN
                             DebitAmountOnAfterValidate;
                           END;
                            }

    { 1210029;3;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to Doc. Type" }

    { 1210050;3;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to Doc. No." }

    { 1210026;3;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bank Payment Type" }

    { 1210009;3;Field     ;
                ToolTipML=[ENU=Specifies the payment method associated with the general journal line.;
                           RUS=Определяет способ оплаты, связанный со строкой финансового журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Method" }

    { 1210011;3;Field     ;
                ToolTipML=[ENU=Specifies the payment type associated with the general journal line.;
                           RUS=Определяет тип платежа, связанный со строкой финансового журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Type" }

    { 1210003;3;Field     ;
                ToolTipML=[ENU=Specifies the payment assignment associated with the general journal line.;
                           RUS=Определяет назначение платежа, связанное со строкой финансового журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Assignment" }

    { 1210007;3;Field     ;
                ToolTipML=[ENU=Specifies the payment date associated with the general journal line.;
                           RUS=Определяет дату платежа, связанную со строкой финансового журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Date" }

    { 1210002;3;Field     ;
                ToolTipML=[ENU=Specifies the payment subsequence associated with the general journal line.;
                           RUS=Определяет очередность платежа, связанную со строкой финансового журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Subsequence" }

    { 1210001;3;Field     ;
                ToolTipML=[ENU=Specifies the payment purpose associated with the general journal line.;
                           RUS=Определяет цель платежа, связанную со строкой финансового журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Purpose" }

    { 1210008;3;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CheckPrintedText;
                CaptionClass=FIELDCAPTION("Check Printed");
                Editable=FALSE;
                HideValue=CheckPrintedHideValue;
                Style=Attention;
                StyleExpr=TRUE }

    { 1210006;3;Field     ;
                ToolTipML=[ENU=Specifies the payment code associated with the general journal line.;
                           RUS=Определяет код платежа, связанный со строкой финансового журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Code" }

    { 1210075;2;Group     ;
                CaptionML=[ENU=Payer;
                           RUS=Плательщик] }

    { 1210015;3;Field     ;
                CaptionML=[ENU=Debit Account;
                           RUS=Дебетовый счет];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BankAccNo;
                Editable=FALSE }

    { 1210046;3;Field     ;
                CaptionML=[ENU=INN, KPP;
                           RUS=ИНН, КПП];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PayerCode[CodeIndex::INN];
                Editable=FALSE }

    { 1210058;3;Field     ;
                CaptionML=[ENU=Payer Code;
                           RUS=Код плательщика];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PayerCode[CodeIndex::KPP];
                Editable=FALSE }

    { 1210064;3;Field     ;
                CaptionML=[ENU=Current Account;
                           RUS=Текущий счет];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PayerCode[CodeIndex::"Current Account"];
                Editable=FALSE }

    { 27  ;3   ;Field     ;
                CaptionML=[ENU=Payer Name;
                           RUS=Название плательщика];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PayerName;
                Editable=FALSE }

    { 35  ;3   ;Field     ;
                CaptionML=[ENU=Payer Bank;
                           RUS=Банк плательщика];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PayerCode[CodeIndex::BIC];
                Editable=FALSE }

    { 1210060;3;Field     ;
                CaptionML=[ENU=Corresp. Account;
                           RUS=Корреспондентский счет];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PayerCode[CodeIndex::"Corresp. Account"];
                CaptionClass=FORMAT(PayerBank);
                Editable=FALSE }

    { 1210091;2;Group     ;
                CaptionML=[ENU=Beneficiary;
                           RUS=Получатель] }

    { 1210036;3;Field     ;
                CaptionML=[ENU=Credit Account;
                           RUS=Кредитовый счет];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CorrAccNo;
                Editable=FALSE }

    { 1210068;3;Field     ;
                Name=INN;
                CaptionML=[ENU=INN, KPP;
                           RUS=ИНН, КПП];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BenefCode[CodeIndex::INN];
                Editable=FALSE }

    { 1210073;3;Field     ;
                CaptionML=[ENU=Beneficiary Code;
                           RUS=Код получателя];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BenefCode[CodeIndex::KPP];
                Editable=FALSE }

    { 1210074;3;Field     ;
                CaptionML=[ENU=Current Account;
                           RUS=Текущий счет];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BenefCode[CodeIndex::"Current Account"];
                Editable=FALSE }

    { 39  ;3   ;Field     ;
                CaptionML=[ENU=Beneficiary Name;
                           RUS=Название получателя];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BenefName;
                Editable=FALSE }

    { 1210070;3;Field     ;
                CaptionML=[ENU=Beneficiary Bank;
                           RUS=Банк получателя];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BenefCode[CodeIndex::BIC];
                Editable=FALSE }

    { 1210071;3;Field     ;
                CaptionML=[ENU=Corresp. Account;
                           RUS=Корреспондентский счет];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BenefCode[CodeIndex::"Corresp. Account"];
                CaptionClass=FORMAT(BenefBank);
                Editable=FALSE }

    { 1210019;3;Field     ;
                ToolTipML=[ENU=Specifies the agreement number associated with the general journal line.;
                           RUS=Определяет номер соглашения, связанный со строкой финансового журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Agreement No." }

    { 80  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="External Document No." }

    { 73  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Shortcut Dimension 1 Code" }

    { 76  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Shortcut Dimension 2 Code" }

    { 78  ;3   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Reason Code" }

    { 1210021;3;Field     ;
                ToolTipML=[ENU=Specifies the payer vendor number associated with the general journal line.;
                           RUS=Определяет код плательщика, связанный со строкой финансового журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payer Vendor No.";
                OnValidate=BEGIN
                             PayerVendorNoOnAfterValidate;
                           END;
                            }

    { 1210023;3;Field     ;
                ToolTipML=[ENU=Specifies the payer beneficiary bank code associated with the general journal line.;
                           RUS=Определяет код банка плательщика, связанный со строкой финансового журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payer Beneficiary Bank Code";
                OnValidate=BEGIN
                             PayerBeneficiaryBankCodeOnAfte;
                           END;
                            }

    { 1210030;3;Field     ;
                ToolTipML=[ENU=Specifies the status of a bank payment order. This value is set automatically.;
                           RUS=Определяет статус платежного поручения. Это значение устанавливается автоматически.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Export Status" }

    { 1902697801;1;Group  ;
                CaptionML=[ENU=Tax Information;
                           RUS=Сведения о налоге] }

    { 1210035;2;Field     ;
                ToolTipML=[ENU=Specifies the taxpayer status associated with the general journal line.;
                           RUS=Определяет статус налогоплательщика, связанный со строкой финансового журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Taxpayer Status" }

    { 1210038;2;Field     ;
                ToolTipML=[ENU=Specifies the payment reason code associated with the general journal line.;
                           RUS=Определяет код основания платежа, связанный со строкой финансового журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Reason Code" }

    { 1210048;2;Field     ;
                ToolTipML=[ENU=Specifies the reason document type associated with the general journal line.;
                           RUS=Определяет тип документа-основания, связанный со строкой финансового журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Reason Document Type" }

    { 1210034;2;Field     ;
                ToolTipML=[ENU=Specifies the reason document number associated with the general journal line.;
                           RUS=Определяет номер документа-основания, связанный со строкой финансового журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Reason Document No." }

    { 1210042;2;Field     ;
                ToolTipML=[ENU=Specifies the reason document date associated with the general journal line.;
                           RUS=Определяет дату документа-основания, связанную со строкой финансового журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Reason Document Date" }

    { 1210051;2;Field     ;
                ToolTipML=[ENU=Specifies the period code associated with the general journal line.;
                           RUS=Определяет код периода, связанный со строкой финансового журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Period Code" }

    { 1210055;2;Field     ;
                ToolTipML=[ENU=Specifies the tax period associated with the general journal line.;
                           RUS=Определяет налоговый период, связанный со строкой финансового журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Tax Period" }

    { 1210044;2;Field     ;
                ToolTipML=[ENU=Specifies the pay type associated with the general journal line.;
                           RUS=Определяет тип оплаты, связанный со строкой финансового журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Tax Payment Type" }

    { 1210005;2;Field     ;
                ToolTipML=[ENU=Specifies the KBK code associated with the general journal line.;
                           RUS=Определяет код KBK, связанный со строкой финансового журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=KBK }

    { 1210032;2;Field     ;
                ToolTipML=[ENU=Specifies the OKATO code associated with the general journal line.;
                           RUS=Определяет код ОКАТО, связанный со строкой финансового журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=OKATO }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

  }
  CODE
  {
    VAR
      CompanyInformation@1210000 : Record 79;
      GenJnlLine@1210001 : Record 81;
      BankAccount@1210002 : Record 270;
      BankAccPostingGr@1210005 : Record 277;
      CustPostGroup@1210006 : Record 92;
      VendPostGroup@1210007 : Record 93;
      VendorPayer@1210044 : Record 23;
      VendorBankPayer@1210042 : Record 288;
      DocumentPrint@1210011 : Codeunit 229;
      StandardReportManagement@1210014 : Codeunit 12401;
      AmountDocument@1210015 : Decimal;
      PayerCode@1210016 : ARRAY [5] OF Code[20];
      PayerText@1210017 : ARRAY [6] OF Text[100];
      BenefCode@1210018 : ARRAY [5] OF Code[30];
      BenefText@1210019 : ARRAY [6] OF Text[100];
      CodeIndex@1210020 : ',INN,BIC,Corresp. Account,Current Account,KPP';
      TextIndex@1210021 : ',Name,Name2,Bank,Bank2,Town';
      BankAccNo@1210023 : Code[20];
      CorrAccNo@1210024 : Code[20];
      PayerBank@1210028 : Text[100];
      PayerName@1210029 : Text[100];
      BenefBank@1210030 : Text[100];
      BenefName@1210031 : Text[100];
      Text008@1210046 : TextConst 'ENU=Printed;RUS=Напечатано';
      CheckPrintedHideValue@19004922 : Boolean INDATASET;
      CheckPrintedText@19033768 : Text[1024] INDATASET;
      DocumentTypeEditable@19007804 : Boolean INDATASET;

    LOCAL PROCEDURE CalcPayment@1();
    VAR
      BankAccountDetail@1210000 : Record 12436;
    BEGIN
      CompanyInformation.GET;
      BankAccount.INIT;
      BankAccNo := '';
      CorrAccNo := '';
      CLEAR(PayerCode);
      CLEAR(PayerText);
      CLEAR(BenefCode);
      CLEAR(BenefText);

      TESTFIELD("Bal. Account Type","Bal. Account Type"::"Bank Account");
      BankAccount.GET("Bal. Account No.");
      BankAccPostingGr.GET(BankAccount."Bank Acc. Posting Group");
      BankAccPostingGr.TESTFIELD("G/L Bank Account No.");
      BankAccNo := BankAccPostingGr."G/L Bank Account No.";

      IF "Credit Amount" <> 0 THEN
        VALIDATE("Debit Amount",-"Credit Amount");

      CorrAccNo := '';
      DocumentTypeEditable := TRUE;
      IF "Account No." <> '' THEN
        CASE "Account Type" OF
          "Account Type"::Customer:
            BEGIN
              CustPostGroup.GET("Posting Group");
              IF Prepayment THEN BEGIN
                CustPostGroup.TESTFIELD("Prepayment Account");
                CorrAccNo := CustPostGroup."Prepayment Account";
              END ELSE BEGIN
                CustPostGroup.TESTFIELD("Receivables Account");
                CorrAccNo := CustPostGroup."Receivables Account";
              END;
              DocumentTypeEditable := FALSE;
            END;
          "Account Type"::Vendor:
            BEGIN
              VendPostGroup.GET("Posting Group");
              IF Prepayment THEN BEGIN
                VendPostGroup.TESTFIELD("Prepayment Account");
                CorrAccNo := VendPostGroup."Prepayment Account";
              END ELSE BEGIN
                VendPostGroup.TESTFIELD("Payables Account");
                CorrAccNo := VendPostGroup."Payables Account";
              END;
              DocumentTypeEditable := FALSE;
            END;
          "Account Type"::"Bank Account":
            BEGIN
              BankAccount.GET("Account No.");
              BankAccPostingGr.GET(BankAccount."Bank Acc. Posting Group");
              BankAccPostingGr.TESTFIELD("G/L Bank Account No.");
              CorrAccNo := BankAccPostingGr."G/L Bank Account No.";
              DocumentTypeEditable := FALSE;
            END;
          "Account Type"::"G/L Account":
            BEGIN
              BankAccount.GET("Bal. Account No.");
              IF BankAccountDetail.GET("Beneficiary Bank Code") THEN
                IF BankAccount."Use Client-Bank" THEN BEGIN
                  CorrAccNo := BankAccountDetail."Transit No.";
                  DocumentTypeEditable := FALSE;
                END;
            END;
        END;

      IF (BankAccNo <> '') AND (CorrAccNo <> '') THEN
        StandardReportManagement.CheckAttributes(Rec,
          AmountDocument,PayerCode,PayerText,BenefCode,BenefText);

      IF ("Payer Vendor No." <> '') AND ("Payer Beneficiary Bank Code" <> '') THEN BEGIN
        VendorPayer.GET("Payer Vendor No.");
        VendorBankPayer.GET("Payer Vendor No.","Payer Beneficiary Bank Code");
        BenefCode[CodeIndex::BIC] := VendorBankPayer.BIC;
        BenefCode[CodeIndex::"Corresp. Account"] := VendorBankPayer."Bank Corresp. Account No.";
        IF VendorBankPayer.City <> '' THEN
          BenefText[TextIndex::Town] := VendorBankPayer."Abbr. City" + '. ' + VendorBankPayer.City;
        BenefText[TextIndex::Bank] := VendorBankPayer.Name;
        BenefText[TextIndex::Bank2] := VendorBankPayer."Name 2";
        BenefCode[CodeIndex::INN] := VendorPayer."VAT Registration No.";
        BenefCode[CodeIndex::"Current Account"] := VendorBankPayer."Bank Account No.";
        BenefText[TextIndex::Name] := VendorPayer.Name;
        BenefText[TextIndex::Name2] := VendorPayer."Name 2";
      END;

      IF ("Account Type" = "Account Type"::"G/L Account") AND ("Account No." <> '') THEN BEGIN
        BenefCode[CodeIndex::BIC] := DELCHR(BankAccountDetail."Bank BIC",'<>',' ');
        BenefCode[CodeIndex::"Corresp. Account"] := DELCHR(BankAccountDetail."Transit No.",'<>',' ');
        BenefText[TextIndex::Town] := DELCHR(BankAccountDetail."Bank City",'<>',' ');
        BenefText[TextIndex::Bank] := DELCHR(BankAccountDetail."Bank Name",'<>',' ');
        BenefText[TextIndex::Bank2] := '';
        BenefCode[CodeIndex::INN] := DELCHR(BankAccountDetail."VAT Registration No.",'<>',' ');
        BenefCode[CodeIndex::"Current Account"] := DELCHR(BankAccountDetail."Bank Account No.",'<>',' ');
        BenefText[TextIndex::Name] := BankAccountDetail."G/L Account Name";
        BenefText[TextIndex::Name2] := '';
      END;

      PayerBank :=
        COPYSTR(
          DELCHR(STRSUBSTNO('%1 %2',PayerText[TextIndex::Bank],PayerText[TextIndex::Bank2]),
            '<>',' '),1,MAXSTRLEN(PayerBank));
      PayerName :=
        COPYSTR(
          DELCHR(STRSUBSTNO('%1 %2',PayerText[TextIndex::Name],PayerText[TextIndex::Name2]),
            '<>',' '),1,MAXSTRLEN(PayerName));
      BenefBank :=
        COPYSTR(DELCHR(STRSUBSTNO('%1 %2',BenefText[TextIndex::Bank],BenefText[TextIndex::Bank2]),
            '<>',' '),1,MAXSTRLEN(BenefBank));
      BenefName :=
        COPYSTR(DELCHR(STRSUBSTNO('%1 %2',BenefText[TextIndex::Name],BenefText[TextIndex::Name2]),
            '<>',' '),1,MAXSTRLEN(BenefName));
    END;

    LOCAL PROCEDURE PayerVendorNoOnAfterValidate@19051016();
    BEGIN
      CalcPayment;
    END;

    LOCAL PROCEDURE PayerBeneficiaryBankCodeOnAfte@19079090();
    BEGIN
      CalcPayment;
    END;

    LOCAL PROCEDURE AccountNoOnAfterValidate@19049580();
    BEGIN
      CalcPayment;
    END;

    LOCAL PROCEDURE DocumentTypeOnAfterValidate@19030163();
    BEGIN
      CalcPayment;
    END;

    LOCAL PROCEDURE BeneficiaryBankCodeOnAfterVali@19026936();
    BEGIN
      CalcPayment;
    END;

    LOCAL PROCEDURE DebitAmountOnAfterValidate@19020375();
    BEGIN
      CalcPayment;
    END;

    LOCAL PROCEDURE CheckPrintedTextOnFormat@19015025(VAR Text@19042228 : Text[1024]);
    BEGIN
      IF "Check Printed" THEN
        Text := Text008
      ELSE
        CheckPrintedHideValue := TRUE;
    END;

    BEGIN
    END.
  }
}

