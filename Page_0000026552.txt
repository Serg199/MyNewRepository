OBJECT Page 26552 Statutory Report Tables
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Statutory Report Tables;
               RUS=Таблицы регламентного отчета];
    SourceTable=Table26552;
    DelayedInsert=Yes;
    SourceTableView=SORTING(Report Code,Sequence No.);
    DataCaptionFields=Report Code;
    PageType=List;
    OnAfterGetRecord=BEGIN
                       PageIndicRowNo := '';
                       IF "Page Indic. Requisite Line No." <> 0 THEN BEGIN
                         TableIndividualRequisite.GET("Report Code",Code,"Page Indic. Requisite Line No.");
                         PageIndicRowNo := TableIndividualRequisite."Row Code";
                       END;
                     END;

    OnInsertRecord=VAR
                     StatutoryReportTable@1210000 : Record 26552;
                     SequenceNo@1210001 : Integer;
                   BEGIN
                     StatutoryReportTable.SETCURRENTKEY("Report Code","Sequence No.");
                     StatutoryReportTable.SETRANGE("Report Code","Report Code");

                     IF BelowxRec THEN BEGIN
                       IF StatutoryReportTable.FINDLAST THEN;
                       "Sequence No." := StatutoryReportTable."Sequence No." + 1;
                     END ELSE BEGIN
                       SequenceNo := xRec."Sequence No.";

                       StatutoryReportTable.SETFILTER("Sequence No.",'%1..',SequenceNo);
                       IF StatutoryReportTable.FIND('+') THEN
                         REPEAT
                           StatutoryReportTable."Sequence No." := StatutoryReportTable."Sequence No." + 1;
                           StatutoryReportTable.MODIFY;
                         UNTIL StatutoryReportTable.NEXT(-1) = 0;
                       "Sequence No." := SequenceNo;
                     END;
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1210010 ;1   ;ActionGroup;
                      CaptionML=[ENU=&Table;
                                 RUS=Та&блица] }
      { 1210011 ;2   ;Action    ;
                      Name=RowsMenuItem;
                      CaptionML=[ENU=&Rows;
                                 RUS=Стр&оки];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 26553;
                      RunPageLink=Report Code=FIELD(Report Code),
                                  Table Code=FIELD(Code);
                      Promoted=Yes;
                      Image=GetLines;
                      PromotedCategory=Process }
      { 1210012 ;2   ;Action    ;
                      CaptionML=[ENU=&Columns;
                                 RUS=Сто&лбцы];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 26554;
                      RunPageLink=Report Code=FIELD(Report Code),
                                  Table Code=FIELD(Code);
                      Promoted=Yes;
                      Image=Column;
                      PromotedCategory=Process }
      { 1210037 ;2   ;Action    ;
                      CaptionML=[ENU=&Individual Requisites;
                                 RUS=&Индивидуальные показатели];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 26555;
                      RunPageLink=Report Code=FIELD(Report Code),
                                  Table Code=FIELD(Code);
                      Promoted=Yes;
                      Image=AdjustItemCost;
                      PromotedCategory=Process }
      { 1901979600;2 ;Action    ;
                      CaptionML=[ENU=Internal Data Source &Mapping;
                                 RUS=&Соответствие внутр. источника данных];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 26592;
                      RunPageLink=Report Code=FIELD(Report Code),
                                  Table Code=FIELD(Code);
                      Promoted=No;
                      Image=CheckRulesSyntax;
                      PromotedCategory=Process;
                      RunPageMode=Edit }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1210015 ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 RUS=Фун&кции];
                      Image=Action }
      { 1210020 ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create Account Schedule;
                                 RUS=Создать финансовый отчет];
                      ApplicationArea=#Basic,#Suite;
                      Image=NewChartOfAccounts;
                      OnAction=BEGIN
                                 CreateAccSchedule;
                               END;
                                }
      { 1210022 ;2   ;Separator  }
      { 1210061 ;2   ;Action    ;
                      CaptionML=[ENU=Update Internal Data Source Links;
                                 RUS=Обновить ссылки внутреннего источника данных];
                      ApplicationArea=#Basic,#Suite;
                      Image=Refresh;
                      OnAction=BEGIN
                                 UpdateIntSourceLinks;
                               END;
                                }
      { 1210060 ;2   ;Separator  }
      { 1210023 ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+W;
                      CaptionML=[ENU=Move Up;
                                 RUS=Сдвинуть вверх];
                      ApplicationArea=#Basic,#Suite;
                      Image=MoveUp;
                      OnAction=BEGIN
                                 MoveUp;
                               END;
                                }
      { 1210032 ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+S;
                      CaptionML=[ENU=Move Down;
                                 RUS=Сдвинуть вниз];
                      ApplicationArea=#Basic,#Suite;
                      Image=MoveDown;
                      OnAction=BEGIN
                                 MoveDown;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1210000;1;Group     ;
                GroupType=Repeater }

    { 1210001;2;Field     ;
                ToolTipML=[ENU=Specifies the code associated with the statutory report table.;
                           RUS=Определяет код, связанный с таблицей регламентного отчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Code }

    { 1210003;2;Field     ;
                ToolTipML=[ENU=Specifies the description of the statutory report table.;
                           RUS=Определяет описание таблицы регламентного отчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description }

    { 1210005;2;Field     ;
                ToolTipML=[ENU=Specifies the Microsoft Excel sheet name associated with the statutory report table.;
                           RUS=Определяет имя листа Microsoft Excel, связанное с таблицей регламентного отчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Excel Sheet Name" }

    { 1210017;2;Field     ;
                ToolTipML=[ENU=Specifies the rows quantity associated with the statutory report table.;
                           RUS=Определяет количество строк, связанное с таблицей регламентного отчета.];
                SourceExpr="Rows Quantity";
                Visible=FALSE }

    { 1210026;2;Field     ;
                ToolTipML=[ENU=Specifies the columns quantity associated with the statutory report table.;
                           RUS=Определяет количество столбцов, связанное с таблицей регламентного отчета.];
                SourceExpr="Columns Quantity";
                Visible=FALSE }

    { 1210018;2;Field     ;
                ToolTipML=[ENU=Specifies the scalable table associated with the statutory report table.;
                           RUS=Определяет расширяемую таблицу, связанную с таблицей регламентного отчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Scalable Table" }

    { 1210024;2;Field     ;
                ToolTipML=[ENU=Specifies the vertical table associated with the statutory report table.;
                           RUS=Определяет вертикальную таблицу, связанную с таблицей регламентного отчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vertical Table" }

    { 1210028;2;Field     ;
                ToolTipML=[ENU=Specifies the scalable table first row number associated with the statutory report table.;
                           RUS=Определяет номер первой строки расширяемой таблицы, связанный с таблицей регламентного отчета.];
                SourceExpr="Scalable Table First Row No.";
                Visible=FALSE }

    { 1210030;2;Field     ;
                ToolTipML=[ENU=Specifies the scalable table row step associated with the statutory report table.;
                           RUS=Определяет шаг строки расширяемой таблицы, связанный с таблицей регламентного отчета.];
                SourceExpr="Scalable Table Row Step";
                Visible=FALSE }

    { 1210040;2;Field     ;
                ToolTipML=[ENU=Specifies the scalable table rows maximum quantity associated with the statutory report table.;
                           RUS=Определяет максимальное количество строк расширяемой таблицы, связанное с таблицей регламентного отчета.];
                SourceExpr="Scalable Table Max Rows Qty";
                Visible=FALSE }

    { 1210033;2;Field     ;
                ToolTipML=[ENU=Specifies the multipage table associated with the statutory report table.;
                           RUS=Определяет многостраничную таблицу, связанную с таблицей регламентного отчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Multipage Table" }

    { 1210035;2;Field     ;
                ToolTipML=[ENU=Specifies the page indication text associated with the statutory report table.;
                           RUS=Определяет текст признака страницы, связанный с таблицей регламентного отчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Page Indication Text" }

    { 1210038;2;Field     ;
                ToolTipML=[ENU=Specifies the page indication Microsoft Excel cell name associated with the statutory report table.;
                           RUS=Определяет имя ячейки Microsoft Excel признака страницы, связанное с таблицей регламентного отчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Page Indic. Excel Cell Name" }

    { 1210042;2;Field     ;
                CaptionML=[ENU=Page Indic. Requisite Row Code;
                           RUS=Код строки показателя - признак страницы];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PageIndicRowNo;
                OnValidate=BEGIN
                             TESTFIELD("Multipage Table",TRUE);
                             StatutoryReport.GET("Report Code");
                             IF PageIndicRowNo <> '' THEN
                               IF StatutoryReport.IsXML THEN
                                 ERROR(Text001);

                             IF PageIndicRowNo <> '' THEN BEGIN
                               TableIndividualRequisite.SETRANGE("Report Code","Report Code");
                               TableIndividualRequisite.SETRANGE("Table Code",Code);
                               TableIndividualRequisite.SETRANGE("Row Code",PageIndicRowNo);
                               TableIndividualRequisite.FINDFIRST;
                               "Page Indic. Requisite Line No." := TableIndividualRequisite."Line No.";
                             END ELSE
                               "Page Indic. Requisite Line No." := 0;
                           END;

                OnLookup=BEGIN
                           TESTFIELD("Multipage Table",TRUE);
                           StatutoryReport.GET("Report Code");
                           IF StatutoryReport.IsXML THEN
                             ERROR(Text001);

                           TableIndividualRequisite.FILTERGROUP(2);
                           TableIndividualRequisite.SETRANGE("Report Code","Report Code");
                           TableIndividualRequisite.SETRANGE("Table Code",Code);
                           TableIndividualRequisite.FILTERGROUP(0);
                           IF PAGE.RUNMODAL(0,TableIndividualRequisite) = ACTION::LookupOK THEN BEGIN
                             "Page Indic. Requisite Line No." := TableIndividualRequisite."Line No.";
                             PageIndicRowNo := TableIndividualRequisite."Row Code";
                           END;
                         END;
                          }

    { 1210021;2;Field     ;
                CaptionML=[ENU=Page Indication for XML;
                           RUS=Признак страницы для XML];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GetPageIndicForXML;
                OnLookup=VAR
                           PageIndicationXMLElement@1210003 : Record 26571;
                         BEGIN
                           IF NOT ("Multipage Table" OR "Vertical Table") THEN
                             ERROR(Text003,
                               FIELDCAPTION("Multipage Table"),
                               FIELDCAPTION("Vertical Table"),
                               GetRecDescription);
                           StatutoryReport.GET("Report Code");
                           IF Text <> '' THEN
                             IF NOT StatutoryReport.IsXML THEN
                               ERROR(Text002);

                           PageIndicationXMLElement.FILTERGROUP(2);
                           PageIndicationXMLElement.SETRANGE("Report Code","Report Code");
                           PageIndicationXMLElement.SETRANGE("Table Code",Code);
                           PageIndicationXMLElement.FILTERGROUP(0);
                           PAGE.RUNMODAL(0,PageIndicationXMLElement);
                         END;
                          }

    { 1210044;2;Field     ;
                ToolTipML=[ENU=Specifies the table indication text associated with the statutory report table.;
                           RUS=Определяет текст признака таблицы, связанный с таблицей регламентного отчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Table Indication Text" }

    { 1210046;2;Field     ;
                ToolTipML=[ENU=Specifies the table indication Microsoft Excel cell name associated with the statutory report table.;
                           RUS=Определяет имя ячейки Microsoft Excel признака таблицы, связанное с таблицей регламентного отчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Table Indic. Excel Cell Name" }

    { 1210049;2;Field     ;
                ToolTipML=[ENU=Specifies the parent table code associated with the statutory report table.;
                           RUS=Определяет код родительской таблицы, связанный с таблицей регламентного отчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Parent Table Code" }

    { 1210062;2;Field     ;
                ToolTipML=[ENU=Specifies the internal source type of the statutory report table.;
                           RUS=Определяет тип внутреннего источника для таблицы регламентного отчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Int. Source Type" }

    { 1210065;2;Field     ;
                ToolTipML=[ENU=Specifies the internal source section code associated with the statutory report table.;
                           RUS=Определяет код раздела внутреннего источника, связанный с таблицей регламентного отчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Int. Source Section Code" }

    { 1210067;2;Field     ;
                ToolTipML=[ENU=Specifies the internal source number associated with the statutory report table.;
                           RUS=Определяет номер внутреннего источника, связанный с таблицей регламентного отчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Int. Source No." }

    { 1210002;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Exception }

  }
  CODE
  {
    VAR
      TableIndividualRequisite@1210008 : Record 26556;
      StatutoryReport@1210002 : Record 26550;
      PageIndicRowNo@1210007 : Code[10];
      Text001@1210010 : TextConst 'ENU=For XML reports Page Indication for XML should be used.;RUS=Для отчетов в формате XML необходимо использовать указание страницы для XML';
      Text002@1210011 : TextConst 'ENU=For TXT reports Page Indic. Requisite Row Code should be used.;RUS=Для отчетов в формате TXT необходимо использовать код строки показателей с указанием страницы.';
      Text003@1210012 : TextConst 'ENU=%1 or %2 should be Yes in %3.;RUS=%1 или %2 в %3 должно иметь значение "Да".';

    PROCEDURE MoveUp@1210000();
    VAR
      UpperStatutoryReportTable@1210000 : Record 26552;
      SequenceNo@1210001 : Integer;
    BEGIN
      UpperStatutoryReportTable.SETCURRENTKEY("Report Code","Sequence No.");
      UpperStatutoryReportTable.SETRANGE("Report Code","Report Code");
      UpperStatutoryReportTable.SETFILTER("Sequence No.",'..%1',"Sequence No." - 1);
      IF UpperStatutoryReportTable.FINDLAST THEN BEGIN
        SequenceNo := UpperStatutoryReportTable."Sequence No.";
        UpperStatutoryReportTable."Sequence No." := "Sequence No.";
        UpperStatutoryReportTable.MODIFY;

        "Sequence No." := SequenceNo;
        MODIFY;
      END;
    END;

    PROCEDURE MoveDown@1210008();
    VAR
      LowerStatutoryReportTable@1210002 : Record 26552;
      SequenceNo@1210001 : Integer;
    BEGIN
      LowerStatutoryReportTable.SETCURRENTKEY("Report Code","Sequence No.");
      LowerStatutoryReportTable.SETRANGE("Report Code","Report Code");
      LowerStatutoryReportTable.SETFILTER("Sequence No.",'%1..',"Sequence No." + 1);
      IF LowerStatutoryReportTable.FINDFIRST THEN BEGIN
        SequenceNo := LowerStatutoryReportTable."Sequence No.";
        LowerStatutoryReportTable."Sequence No." := "Sequence No.";
        LowerStatutoryReportTable.MODIFY;

        "Sequence No." := SequenceNo;
        MODIFY;
      END;
    END;

    PROCEDURE GetPageIndicForXML@1210001() PageIndicationForXML : Text[250];
    VAR
      PageIndicationXMLElement@1210000 : Record 26571;
    BEGIN
      PageIndicationForXML := '';
      PageIndicationXMLElement.SETRANGE("Report Code","Report Code");
      PageIndicationXMLElement.SETRANGE("Table Code",Code);
      IF PageIndicationXMLElement.FINDSET THEN
        REPEAT
          IF PageIndicationForXML = '' THEN
            PageIndicationForXML := PageIndicationXMLElement."XML Element Name"
          ELSE
            PageIndicationForXML := PageIndicationForXML + '|' + PageIndicationXMLElement."XML Element Name";
        UNTIL PageIndicationXMLElement.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

