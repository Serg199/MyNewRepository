OBJECT Table 17392 Person Income Header
{
  OBJECT-PROPERTIES
  {
    Date=18.12.13;
    Time=12:00:00;
    Version List=NAVRU7.10;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 HRSetup.GET;
                 TestNoSeries;
                 NoSeriesMgt.InitSeries(
                   HRSetup."Person Income Document Nos.",xRec."No. Series","Document Date",
                   "No.","No. Series");
               END;

               IF GETFILTER("Person No.") <> '' THEN
                 IF GETRANGEMIN("Person No.") = GETRANGEMAX("Person No.") THEN
                   VALIDATE("Person No.",GETRANGEMIN("Person No."));
             END;

    OnDelete=VAR
               PersonIncomeLine@1210000 : Record 17393;
             BEGIN
               PersonIncomeLine.RESET;
               PersonIncomeLine.SETRANGE("Document No.","No.");
               PersonIncomeLine.DELETEALL;

               PersonIncomeEntry.RESET;
               PersonIncomeEntry.SETRANGE("Person Income No.","No.");
               PersonIncomeEntry.DELETEALL;
             END;

    CaptionML=[ENU=Person Income Header;
               RUS=Заголовок личного дохода];
    LookupPageID=Page17497;
  }
  FIELDS
  {
    { 1   ;   ;Person No.          ;Code20        ;TableRelation=Person;
                                                   CaptionML=[ENU=Person No.;
                                                              RUS=Код физ. лица] }
    { 2   ;   ;Year                ;Integer       ;CaptionML=[ENU=Year;
                                                              RUS=Год] }
    { 3   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  HRSetup.GET;
                                                                  NoSeriesMgt.TestManual(HRSetup."Person Income Document Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              RUS=Номер] }
    { 4   ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              RUS=Дата документа] }
    { 5   ;   ;Calculation         ;Boolean       ;CaptionML=[ENU=Calculation;
                                                              RUS=Расчет];
                                                   Editable=No }
    { 14  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              RUS=Серия номеров];
                                                   Editable=No }
    { 40  ;   ;Total Taxable Income;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Person Income Entry".Base WHERE (Person Income No.=FIELD(No.),
                                                                                                     Entry Type=CONST(Taxable Income),
                                                                                                     Tax Code=FILTER(<>''),
                                                                                                     Advance Payment=CONST(No)));
                                                   CaptionML=[ENU=Total Taxable Income;
                                                              RUS=Общий налогооблагаемый доход];
                                                   Editable=No }
    { 41  ;   ;Total Tax Deductions;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Person Income Entry"."Tax Deduction Amount" WHERE (Person Income No.=FIELD(No.),
                                                                                                                       Entry Type=CONST(Tax Deduction)));
                                                   CaptionML=[ENU=Total Tax Deductions;
                                                              RUS=Всего налоговых вычетов];
                                                   Editable=No }
    { 42  ;   ;Total Annual Tax Deductions;Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Person Tax Deduction"."Deduction Amount" WHERE (Document No.=FIELD(No.)));
                                                   CaptionML=[ENU=Total Annual Tax Deductions;
                                                              RUS=Всего годовых налоговых вычетов];
                                                   Editable=No }
    { 43  ;   ;Total Accrued Tax   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Person Income Entry".Amount WHERE (Person Income No.=FIELD(No.),
                                                                                                       Entry Type=CONST(Accrued Income Tax),
                                                                                                       Interim=CONST(No)));
                                                   CaptionML=[ENU=Total Accrued Tax;
                                                              RUS=Общий исчисленный налог];
                                                   Editable=No }
    { 44  ;   ;Total Paid to Budget;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Person Income Entry".Amount WHERE (Person Income No.=FIELD(No.),
                                                                                                       Entry Type=CONST(Paid Income Tax)));
                                                   CaptionML=[ENU=Total Paid to Budget;
                                                              RUS=Всего оплачено в бюджет];
                                                   Editable=No }
    { 45  ;   ;Total Accrued Tax 13%;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Person Income Entry".Amount WHERE (Person Income No.=FIELD(No.),
                                                                                                       Entry Type=CONST(Accrued Income Tax),
                                                                                                       Tax %=FILTER(13),
                                                                                                       Interim=CONST(No)));
                                                   CaptionML=[ENU=Total Accrued Tax 13%;
                                                              RUS=Общий исчисленный налог, 13%];
                                                   Editable=No }
    { 46  ;   ;Total Accrued Tax 30%;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Person Income Entry".Amount WHERE (Person Income No.=FIELD(No.),
                                                                                                       Entry Type=CONST(Accrued Income Tax),
                                                                                                       Tax %=FILTER(30),
                                                                                                       Interim=CONST(No)));
                                                   CaptionML=[ENU=Total Accrued Tax 30%;
                                                              RUS=Общий исчисленный налог, 30%];
                                                   Editable=No }
    { 47  ;   ;Total Accrued Tax 35%;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Person Income Entry".Amount WHERE (Person Income No.=FIELD(No.),
                                                                                                       Entry Type=CONST(Accrued Income Tax),
                                                                                                       Tax %=FILTER(35),
                                                                                                       Interim=CONST(No)));
                                                   CaptionML=[ENU=Total Accrued Tax 35%;
                                                              RUS=Общий исчисленный налог, 35%];
                                                   Editable=No }
    { 48  ;   ;Total Accrued Tax 9%;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Person Income Entry".Amount WHERE (Person Income No.=FIELD(No.),
                                                                                                       Entry Type=CONST(Accrued Income Tax),
                                                                                                       Tax %=FILTER(9),
                                                                                                       Interim=CONST(No)));
                                                   CaptionML=[ENU=Total Accrued Tax 9%;
                                                              RUS=Общий исчисленный налог, 9%];
                                                   Editable=No }
    { 50  ;   ;Annual Tax Deductions;Boolean      ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Person Tax Deduction" WHERE (Document No.=FIELD(No.)));
                                                   CaptionML=[ENU=Annual Tax Deductions;
                                                              RUS=Годовые налоговые вычеты];
                                                   Editable=No }
    { 51  ;   ;Total Income (Doc)  ;Decimal       ;CaptionML=[ENU=Total Income (Doc);
                                                              RUS=Общий доход (док)] }
    { 52  ;   ;Taxable Income (Doc);Decimal       ;CaptionML=[ENU=Taxable Income (Doc);
                                                              RUS=Налогооблагаемый доход (док)] }
    { 53  ;   ;Income Tax Accrued (Doc);Decimal   ;CaptionML=[ENU=Income Tax Accrued (Doc);
                                                              RUS=Сумма налога исчисленная (док)] }
    { 54  ;   ;Income Tax Paid (Doc);Decimal      ;CaptionML=[ENU=Income Tax Paid (Doc);
                                                              RUS=Сумма налога удержанная (док)] }
    { 55  ;   ;Income Tax Return LY (Doc);Decimal ;CaptionML=[ENU=Income Tax Return LY (Doc);
                                                              RUS=Сумма возврата по налогу прошлых лет (док)] }
    { 56  ;   ;Tax Return Settled LY (Doc);Decimal;CaptionML=[ENU=Tax Return Settled LY (Doc);
                                                              RUS=Зачт. сумма по налогу прошлых лет (док)] }
    { 57  ;   ;Tax Return Paid LY (Doc);Decimal   ;CaptionML=[ENU=Tax Return Paid LY (Doc);
                                                              RUS=Удерж. сумма по налогу прошлых лет (док)] }
    { 58  ;   ;Income Tax Due (Doc);Decimal       ;CaptionML=[ENU=Income Tax Due (Doc);
                                                              RUS=Задолженность по налогу за налогоплательщиком (док)] }
    { 59  ;   ;Income Tax Overpaid (Doc);Decimal  ;CaptionML=[ENU=Income Tax Overpaid (Doc);
                                                              RUS=Сумма налога излишне удержанная (док)] }
    { 60  ;   ;Income Tax for Withdraw. (Doc);Decimal;
                                                   CaptionML=[ENU=Income Tax for Withdraw. (Doc);
                                                              RUS=Переданная сумма налога на взыскание (док)] }
    { 61  ;   ;Total Paid to Person;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Person Income Entry".Base WHERE (Person Income No.=FIELD(No.),
                                                                                                     Entry Type=CONST(Paid Taxable Income)));
                                                   CaptionML=[ENU=Total Paid to Person;
                                                              RUS=Всего оплачено физ. лицу];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Person No.,Year                          }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      HRSetup@1210000 : Record 5218;
      PersonIncomeHeader@1210002 : Record 17392;
      PersonIncomeLine@1210003 : Record 17393;
      PersonIncomeEntry@1210004 : Record 17398;
      NoSeriesMgt@1210001 : Codeunit 396;

    PROCEDURE AssistEdit@9(OldPersonIncomeHeader@1210000 : Record 17392) : Boolean;
    BEGIN
      PersonIncomeHeader.COPY(Rec);
      HRSetup.GET;
      TestNoSeries;
      IF NoSeriesMgt.SelectSeries(HRSetup."Person Income Document Nos.",OldPersonIncomeHeader."No. Series","No. Series") THEN BEGIN
        NoSeriesMgt.SetSeries("No.");
        Rec := PersonIncomeHeader;
        EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE TestNoSeries@1210002();
    BEGIN
      HRSetup.TESTFIELD("Person Income Document Nos.");
    END;

    PROCEDURE Recalculate@1210000();
    VAR
      Employee@1210000 : Record 5200;
      PayrollPeriod@1210002 : Record 17426;
      PstdPayrollDocHeader@1210003 : Record 17416;
      PstdPayrollDocLine@1210004 : Record 17417;
      PayrollCalcGroup@1210006 : Record 17402;
      PersonIncomeMgt@1210007 : Codeunit 17409;
    BEGIN
      TESTFIELD(Calculation);
      TESTFIELD(Year);
      TESTFIELD("Person No.");

      PersonIncomeLine.RESET;
      PersonIncomeLine.SETRANGE("Document No.","No.");
      PersonIncomeLine.SETRANGE(Calculation,TRUE);
      PersonIncomeLine.DELETEALL;

      PersonIncomeEntry.RESET;
      PersonIncomeEntry.SETRANGE("Person Income No.","No.");
      PersonIncomeEntry.SETRANGE(Calculation,TRUE);
      PersonIncomeEntry.DELETEALL;

      Employee.SETRANGE("Person No.","Person No.");
      IF Employee.FINDSET THEN
        REPEAT
          PayrollPeriod.RESET;
          PayrollPeriod.SETRANGE("Ending Date",DMY2DATE(1,1,Year),CALCDATE('<+CY>',DMY2DATE(1,12,Year)));
          IF PayrollPeriod.FINDSET THEN
            REPEAT
              PstdPayrollDocHeader.RESET;
              PstdPayrollDocHeader.SETRANGE("Employee No.",Employee."No.");
              PstdPayrollDocHeader.SETRANGE("Period Code",PayrollPeriod.Code);
              IF PstdPayrollDocHeader.FINDSET THEN
                REPEAT
                  PstdPayrollDocLine.RESET;
                  PstdPayrollDocLine.SETRANGE("Document No.",PstdPayrollDocHeader."No.");
                  IF PstdPayrollDocLine.FINDSET THEN
                    REPEAT
                      PersonIncomeMgt.SetDocNo("No.");
                      PersonIncomeMgt.CreateIncomeTaxLine(
                        PstdPayrollDocLine,PstdPayrollDocHeader."Posting Date",PstdPayrollDocHeader.Correction);
                    UNTIL PstdPayrollDocLine.NEXT = 0;
                  PersonIncomeMgt.CreatePaidToPerson("Person No.",PayrollPeriod);
                UNTIL PstdPayrollDocHeader.NEXT = 0;
            UNTIL PayrollPeriod.NEXT = 0;
        UNTIL Employee.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

