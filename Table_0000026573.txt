OBJECT Table 26573 Format Version
{
  OBJECT-PROPERTIES
  {
    Date=18.12.13;
    Time=12:00:00;
    Version List=NAVRU7.10;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               StatutoryReportSetup.GET;
               IF StatutoryReportSetup."Dflt. XML File Name Elem. Name" <> '' THEN
                 "XML File Name Element Name" := StatutoryReportSetup."Dflt. XML File Name Elem. Name";
             END;

    OnDelete=BEGIN
               IF HasLinkedReports THEN
                 ERROR(Text004,GetRecDescription);
             END;

    CaptionML=[ENU=Format Version;
               RUS=Версия формата];
    LookupPageID=Page26586;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=[ENU=Code;
                                                              RUS=Код];
                                                   NotBlank=Yes }
    { 2   ;   ;KND Code            ;Code10        ;OnValidate=BEGIN
                                                                CheckLinkedReports;
                                                              END;

                                                   CaptionML=[ENU=KND Code;
                                                              RUS=Код КНД] }
    { 3   ;   ;Report Description  ;Text250       ;CaptionML=[ENU=Report Description;
                                                              RUS=Описание отчета] }
    { 4   ;   ;Part No.            ;Code10        ;CaptionML=[ENU=Part No.;
                                                              RUS=Номер части] }
    { 5   ;   ;Version No.         ;Code10        ;CaptionML=[ENU=Version No.;
                                                              RUS=Номер версии] }
    { 6   ;   ;Report Type         ;Option        ;OnValidate=BEGIN
                                                                CheckLinkedReports;
                                                              END;

                                                   CaptionML=[ENU=Report Type;
                                                              RUS=Тип отчета];
                                                   OptionCaptionML=[ENU=" ,Tax,Accounting";
                                                                    RUS=" ,Налоговый,Бухгалтерский"];
                                                   OptionString=[ ,Tax,Accounting] }
    { 8   ;   ;Usage Starting Date ;Date          ;CaptionML=[ENU=Usage Starting Date;
                                                              RUS=Дата начала использования] }
    { 9   ;   ;Usage First Reporting Period;Text30;CaptionML=[ENU=Usage First Reporting Period;
                                                              RUS=Первый отчетный период использования] }
    { 10  ;   ;Usage Ending Date   ;Date          ;CaptionML=[ENU=Usage Ending Date;
                                                              RUS=Дата окончания использования] }
    { 11  ;   ;Register No.        ;Code20        ;CaptionML=[ENU=Register No.;
                                                              RUS=Номер по реестру форматов] }
    { 15  ;   ;Excel File Name     ;Text250       ;OnValidate=BEGIN
                                                                CheckLinkedReports;
                                                              END;

                                                   CaptionML=[ENU=Excel File Name;
                                                              RUS=Имя файла Excel] }
    { 16  ;   ;Report Template     ;BLOB          ;CaptionML=[ENU=Report Template;
                                                              RUS=Шаблон отчета] }
    { 17  ;   ;XML Schema File Name;Text250       ;OnValidate=BEGIN
                                                                CheckLinkedReports;
                                                              END;

                                                   CaptionML=[ENU=XML Schema File Name;
                                                              RUS=Имя файла XML схемы] }
    { 18  ;   ;XML Schema          ;BLOB          ;CaptionML=[ENU=XML Schema;
                                                              RUS=XML схема] }
    { 19  ;   ;Form Order No. & Appr. Date;Text250;OnValidate=BEGIN
                                                                CheckLinkedReports;
                                                              END;

                                                   CaptionML=[ENU=Form Order No. and Appr. Date;
                                                              RUS=Номер приказа и дата утверждения отчета] }
    { 20  ;   ;Format Order No. & Appr. Date;Text250;
                                                   OnValidate=BEGIN
                                                                CheckLinkedReports;
                                                              END;

                                                   CaptionML=[ENU=Format Order No. and Appr. Date;
                                                              RUS=Номер приказа и дата утверждения формата] }
    { 21  ;   ;Comment             ;Text250       ;CaptionML=[ENU=Comment;
                                                              RUS=Комментарий] }
    { 22  ;   ;XML File Name Element Name;Text100 ;OnValidate=BEGIN
                                                                CheckLinkedReports;
                                                              END;

                                                   CaptionML=[ENU=XML File Name Element Name;
                                                              RUS=XML-элемент для имени файла] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      StatutoryReport@1210001 : Record 26550;
      Text003@1210003 : TextConst 'ENU=You cannot modify %1 because there are linked reports.;RUS=Невозможно изменить %1, поскольку имеются связанные отчеты.';
      Text004@1210004 : TextConst 'ENU=You cannot delete %1 because there are linked reports.;RUS=Невозможно удалить %1, поскольку имеются связанные отчеты.';
      StatutoryReportSetup@1210000 : Record 26569;
      BLOBRef@1210006 : TEMPORARY Record 99008535;
      FileMgt@1210005 : Codeunit 419;
      ExcelMngt@1210002 : Codeunit 12416;

    PROCEDURE ImportExcelTemplate@1210000(FileName@1210000 : Text[250]);
    BEGIN
      CheckLinkedReports;

      CLEAR(BLOBRef);
      IF FileName = '' THEN
        FileName := FileMgt.BLOBImport(BLOBRef,'*.xls')
      ELSE
        ExcelMngt.BLOBImportSilent(BLOBRef,FileName);

      IF FileName <> '' THEN BEGIN
        "Excel File Name" := ParseFileName(FileName);
        "Report Template" := BLOBRef.Blob;
      END;
    END;

    PROCEDURE ImportXMLSchema@1210001(FileName@1210000 : Text[250]);
    BEGIN
      CheckLinkedReports;

      CLEAR(BLOBRef);
      IF FileName = '' THEN
        FileName := FileMgt.BLOBImport(BLOBRef,'*.xsd')
      ELSE
        ExcelMngt.BLOBImportSilent(BLOBRef,FileName);

      IF FileName <> '' THEN BEGIN
        "XML Schema File Name" := ParseFileName(FileName);
        "XML Schema" := BLOBRef.Blob;
      END;
    END;

    PROCEDURE ExportExcelTemplate@1210005(FileName@1210000 : Text[250]);
    BEGIN
      CALCFIELDS("Report Template");
      IF "Report Template".HASVALUE THEN BEGIN
        BLOBRef.Blob := "Report Template";
        FileMgt.BLOBExport(BLOBRef,FileName,TRUE);
      END;
    END;

    PROCEDURE ExportXMLSchema@1210006(FileName@1210000 : Text[250]);
    BEGIN
      CALCFIELDS("XML Schema");
      IF "XML Schema".HASVALUE THEN BEGIN
        BLOBRef.Blob := "XML Schema";
        FileMgt.BLOBExport(BLOBRef,FileName,TRUE);
      END;
    END;

    PROCEDURE GetRecDescription@1210004() : Text[250];
    BEGIN
      EXIT(STRSUBSTNO('%1 %2=''%3''',TABLECAPTION,
          FIELDCAPTION(Code),Code));
    END;

    PROCEDURE HasLinkedReports@1210003() : Boolean;
    BEGIN
      StatutoryReport.SETRANGE("Format Version Code",Code);
      EXIT(NOT StatutoryReport.ISEMPTY);
    END;

    PROCEDURE ParseFileName@1210002(FileName@1210000 : Text[250]) : Text[250];
    BEGIN
      WHILE STRPOS(FileName,'\') <> 0 DO
        FileName := COPYSTR(FileName,STRPOS(FileName,'\') + 1);
      EXIT(FileName);
    END;

    PROCEDURE CheckLinkedReports@1210007();
    BEGIN
      IF HasLinkedReports THEN
        ERROR(Text003,GetRecDescription);
    END;

    BEGIN
    END.
  }
}

