OBJECT Page 5984 Service Item Trend Lines
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Lines;
               RUS=Строки];
    LinksAllowed=No;
    SourceTable=Table2000000007;
    PageType=ListPart;
    OnOpenPage=BEGIN
                 RESET;
               END;

    OnFindRecord=BEGIN
                   EXIT(PeriodFormMgt.FindDate(Which,Rec,PeriodType));
                 END;

    OnNextRecord=BEGIN
                   EXIT(PeriodFormMgt.NextDate(Steps,Rec,PeriodType));
                 END;

    OnAfterGetRecord=BEGIN
                       SetDateFilter;
                       ServItem.CALCFIELDS("Invoiced Amount","Resources Used","Parts Used","Cost Used","Prepaid Amount");
                       Profit := ServItem."Invoiced Amount" - ServItem."Resources Used" - ServItem."Parts Used" - ServItem."Cost Used";
                       IF ServItem."Invoiced Amount" <> 0 THEN
                         ProfitPct := ROUND((Profit / ServItem."Invoiced Amount") * 100,0.01)
                       ELSE
                         ProfitPct := 0;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=Period Start;
                           RUS=Начало периода];
                SourceExpr="Period Start" }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Period Name;
                           RUS=Название периода];
                SourceExpr="Period Name" }

    { 18  ;2   ;Field     ;
                CaptionML=[ENU=Prepaid Income;
                           RUS=Доход будущих периодов];
                SourceExpr=ServItem."Prepaid Amount";
                OnDrillDown=BEGIN
                              ShowServLedgEntries(FALSE);
                            END;
                             }

    { 4   ;2   ;Field     ;
                DrillDown=Yes;
                CaptionML=[ENU=Posted Income;
                           RUS=Учтенный приход];
                SourceExpr=ServItem."Invoiced Amount";
                OnDrillDown=BEGIN
                              ShowServLedgEntries(TRUE);
                            END;
                             }

    { 8   ;2   ;Field     ;
                DrillDown=Yes;
                CaptionML=[ENU=Parts Used;
                           RUS=Использ. запчастей];
                SourceExpr=ServItem."Parts Used";
                OnDrillDown=BEGIN
                              ShowServLedgEntriesByType(ServLedgEntry.Type::Item);
                            END;
                             }

    { 10  ;2   ;Field     ;
                DrillDown=Yes;
                CaptionML=[ENU=Resources Used;
                           RUS=Использ. рес.];
                SourceExpr=ServItem."Resources Used";
                OnDrillDown=BEGIN
                              ShowServLedgEntriesByType(ServLedgEntry.Type::Resource);
                            END;
                             }

    { 12  ;2   ;Field     ;
                CaptionML=[ENU=Cost Used;
                           RUS=Использованная себестоимость];
                SourceExpr=ServItem."Cost Used";
                OnDrillDown=BEGIN
                              ShowServLedgEntriesByType(ServLedgEntry.Type::"Service Cost");
                            END;
                             }

    { 14  ;2   ;Field     ;
                CaptionML=[ENU=Profit;
                           RUS=Прибыль];
                SourceExpr=Profit;
                AutoFormatType=1 }

    { 16  ;2   ;Field     ;
                CaptionML=[ENU=Profit %;
                           RUS=Прибыль (%)];
                SourceExpr=ProfitPct }

  }
  CODE
  {
    VAR
      ServItem@1000 : Record 5940;
      ServLedgEntry@1001 : Record 5907;
      PeriodFormMgt@1002 : Codeunit 359;
      PeriodType@1003 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      AmountType@1004 : 'Net Change,Balance at Date';
      Profit@1005 : Decimal;
      ProfitPct@1006 : Decimal;

    PROCEDURE Set@1(VAR ServItem1@1000 : Record 5940;NewPeriodType@1001 : Integer;NewAmountType@1002 : 'Net Change,Balance at Date');
    BEGIN
      ServItem.COPY(ServItem1);
      PeriodType := NewPeriodType;
      AmountType := NewAmountType;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE SetDateFilter@4();
    BEGIN
      IF AmountType = AmountType::"Net Change" THEN
        ServItem.SETRANGE("Date Filter","Period Start","Period End")
      ELSE
        ServItem.SETRANGE("Date Filter",0D,"Period End");
    END;

    LOCAL PROCEDURE ShowServLedgEntries@2(Prepaid@1000 : Boolean);
    BEGIN
      SetDateFilter;
      ServLedgEntry.RESET;
      ServLedgEntry.SETCURRENTKEY("Service Item No. (Serviced)","Entry Type","Moved from Prepaid Acc.",Type,"Posting Date");
      ServLedgEntry.SETRANGE("Service Item No. (Serviced)",ServItem."No.");
      ServLedgEntry.SETRANGE("Entry Type",ServLedgEntry."Entry Type"::Sale);
      ServLedgEntry.SETRANGE("Moved from Prepaid Acc.",Prepaid);
      ServLedgEntry.SETRANGE(Open,FALSE);
      ServLedgEntry.SETFILTER("Posting Date",ServItem.GETFILTER("Date Filter"));
      PAGE.RUN(0,ServLedgEntry);
    END;

    LOCAL PROCEDURE ShowServLedgEntriesByType@5(Type@1000 : Option);
    BEGIN
      SetDateFilter;
      ServLedgEntry.RESET;
      ServLedgEntry.SETCURRENTKEY("Service Item No. (Serviced)","Entry Type","Moved from Prepaid Acc.",Type,"Posting Date");
      ServLedgEntry.SETRANGE("Service Item No. (Serviced)",ServItem."No.");
      ServLedgEntry.SETRANGE("Entry Type",ServLedgEntry."Entry Type"::Sale);
      ServLedgEntry.SETRANGE(Type,Type);
      ServLedgEntry.SETFILTER("Posting Date",ServItem.GETFILTER("Date Filter"));
      PAGE.RUN(0,ServLedgEntry);
    END;

    BEGIN
    END.
  }
}

