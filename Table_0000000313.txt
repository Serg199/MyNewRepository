OBJECT Table 313 Inventory Setup
{
  OBJECT-PROPERTIES
  {
    Date=15.09.15;
    Time=12:00:00;
    Version List=NAVW19.00,NAVRU9.00;
  }
  PROPERTIES
  {
    Permissions=TableData 5896=m;
    CaptionML=[ENU=Inventory Setup;
               RUS=Настройка модуля Запасы];
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=[ENU=Primary Key;
                                                              RUS=Первичный ключ] }
    { 2   ;   ;Automatic Cost Posting;Boolean     ;OnValidate=VAR
                                                                GLSetup@1000 : Record 98;
                                                              BEGIN
                                                                IF "Automatic Cost Posting" THEN BEGIN
                                                                  IF GLSetup.GET THEN
                                                                    IF NOT GLSetup."Use Legacy G/L Entry Locking" THEN
                                                                      MESSAGE(Text006,
                                                                        FIELDCAPTION("Automatic Cost Posting"),
                                                                        "Automatic Cost Posting",
                                                                        GLSetup.FIELDCAPTION("Use Legacy G/L Entry Locking"),
                                                                        GLSetup.TABLECAPTION,
                                                                        GLSetup."Use Legacy G/L Entry Locking");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Automatic Cost Posting;
                                                              RUS=Автомат. учет себест.] }
    { 3   ;   ;Location Mandatory  ;Boolean       ;AccessByPermission=TableData 14=R;
                                                   CaptionML=[ENU=Location Mandatory;
                                                              RUS=Склад обязателен] }
    { 4   ;   ;Item Nos.           ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Item Nos.;
                                                              RUS=Серия номеров товаров] }
    { 30  ;   ;Automatic Cost Adjustment;Option   ;OnValidate=BEGIN
                                                                IF "Automatic Cost Adjustment" <> "Automatic Cost Adjustment"::Never THEN BEGIN
                                                                  Item.SETCURRENTKEY("Cost is Adjusted","Allow Online Adjustment");
                                                                  Item.SETRANGE("Cost is Adjusted",FALSE);
                                                                  Item.SETRANGE("Allow Online Adjustment",FALSE);

                                                                  UpdateInvtAdjmtEntryOrder;

                                                                  InvtAdjmtEntryOrder.SETCURRENTKEY("Cost is Adjusted","Allow Online Adjustment");
                                                                  InvtAdjmtEntryOrder.SETRANGE("Cost is Adjusted",FALSE);
                                                                  InvtAdjmtEntryOrder.SETRANGE("Allow Online Adjustment",FALSE);
                                                                  InvtAdjmtEntryOrder.SETRANGE("Is Finished",TRUE);

                                                                  IF NOT (Item.ISEMPTY AND InvtAdjmtEntryOrder.ISEMPTY) THEN
                                                                    MESSAGE(Text000);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Automatic Cost Adjustment;
                                                              RUS=Автоматическая коррекция себестоимости];
                                                   OptionCaptionML=[ENU=Never,Day,Week,Month,Quarter,Year,Always;
                                                                    RUS=Никогда,День,Неделя,Месяц,Квартал,Год,Всегда];
                                                   OptionString=Never,Day,Week,Month,Quarter,Year,Always }
    { 40  ;   ;Prevent Negative Inventory;Boolean ;CaptionML=[ENU=Prevent Negative Inventory;
                                                              RUS=Запрещать отрицательные остатки] }
    { 5700;   ;Transfer Order Nos. ;Code10        ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 5740=R;
                                                   CaptionML=[ENU=Transfer Order Nos.;
                                                              RUS=Серия номеров заказов на перемещение] }
    { 5701;   ;Posted Transfer Shpt. Nos.;Code10  ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 5740=R;
                                                   CaptionML=[ENU=Posted Transfer Shpt. Nos.;
                                                              RUS=Серия номеров учт. расх. накл. на перемещение] }
    { 5702;   ;Posted Transfer Rcpt. Nos.;Code10  ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 5740=R;
                                                   CaptionML=[ENU=Posted Transfer Rcpt. Nos.;
                                                              RUS=Серия номеров учт. прих. накл. на перемещение] }
    { 5703;   ;Copy Comments Order to Shpt.;Boolean;
                                                   InitValue=Yes;
                                                   AccessByPermission=TableData 5740=R;
                                                   CaptionML=[ENU=Copy Comments Order to Shpt.;
                                                              RUS=Копир. комм. заказа в поставку] }
    { 5704;   ;Copy Comments Order to Rcpt.;Boolean;
                                                   InitValue=Yes;
                                                   AccessByPermission=TableData 5740=R;
                                                   CaptionML=[ENU=Copy Comments Order to Rcpt.;
                                                              RUS=Копир. комм. заказа в накл.] }
    { 5718;   ;Nonstock Item Nos.  ;Code10        ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 5718=R;
                                                   CaptionML=[ENU=Nonstock Item Nos.;
                                                              RUS=Серия номеров несклад. товаров] }
    { 5790;   ;Outbound Whse. Handling Time;DateFormula;
                                                   AccessByPermission=TableData 14=R;
                                                   CaptionML=[ENU=Outbound Whse. Handling Time;
                                                              RUS=Время исход. обработки на складе] }
    { 5791;   ;Inbound Whse. Handling Time;DateFormula;
                                                   AccessByPermission=TableData 14=R;
                                                   CaptionML=[ENU=Inbound Whse. Handling Time;
                                                              RUS=Время вход. обработки на складе] }
    { 5800;   ;Expected Cost Posting to G/L;Boolean;
                                                   OnValidate=VAR
                                                                ChangeExpCostPostToGL@1000 : Codeunit 5811;
                                                              BEGIN
                                                                IF "Expected Cost Posting to G/L" <> xRec."Expected Cost Posting to G/L" THEN
                                                                  IF ItemLedgEntry.FINDFIRST THEN BEGIN
                                                                    ChangeExpCostPostToGL.ChangeExpCostPostingToGL(Rec,"Expected Cost Posting to G/L");
                                                                    FIND;
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=Expected Cost Posting to G/L;
                                                              RUS=Учет ожидаемой себест. в ГК] }
    { 5804;   ;Average Cost Calc. Type;Option     ;InitValue=Item;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Average Cost Calc. Type");
                                                                IF "Average Cost Calc. Type" <> xRec."Average Cost Calc. Type" THEN
                                                                  UpdateAvgCostItemSettings(FIELDCAPTION("Average Cost Calc. Type"),FORMAT("Average Cost Calc. Type"));
                                                              END;

                                                   CaptionML=[ENU=Average Cost Calc. Type;
                                                              RUS=Тип расчета средней себестоимости];
                                                   OptionCaptionML=[ENU=" ,Item,Item & Location & Variant";
                                                                    RUS=" ,Товар,Товар и склад и вариант"];
                                                   OptionString=[ ,Item,Item & Location & Variant];
                                                   NotBlank=Yes }
    { 5805;   ;Average Cost Period ;Option        ;InitValue=Day;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Average Cost Period");
                                                                IF "Average Cost Period" <> xRec."Average Cost Period" THEN
                                                                  UpdateAvgCostItemSettings(FIELDCAPTION("Average Cost Period"),FORMAT("Average Cost Period"));
                                                              END;

                                                   CaptionML=[ENU=Average Cost Period;
                                                              RUS=Период расчета средней себестоимости];
                                                   OptionCaptionML=[ENU=" ,Day,Week,Month,Quarter,Year,Accounting Period";
                                                                    RUS=" ,День,Неделя,Месяц,Квартал,Год,Учетный период"];
                                                   OptionString=[ ,Day,Week,Month,Quarter,Year,Accounting Period];
                                                   NotBlank=Yes }
    { 7101;   ;Item Group Dimension Code;Code20   ;TableRelation=Dimension;
                                                   CaptionML=[ENU=Item Group Dimension Code;
                                                              RUS=Код измерения группы товаров] }
    { 7300;   ;Inventory Put-away Nos.;Code10     ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 7340=R;
                                                   CaptionML=[ENU=Inventory Put-away Nos.;
                                                              RUS=Серия номеров товарного размещения] }
    { 7301;   ;Inventory Pick Nos. ;Code10        ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 7342=R;
                                                   CaptionML=[ENU=Inventory Pick Nos.;
                                                              RUS=Серия номеров товарных подборов] }
    { 7302;   ;Posted Invt. Put-away Nos.;Code10  ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 7340=R;
                                                   CaptionML=[ENU=Posted Invt. Put-away Nos.;
                                                              RUS=Серия номеров учт. товарных размещений] }
    { 7303;   ;Posted Invt. Pick Nos.;Code10      ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 7342=R;
                                                   CaptionML=[ENU=Posted Invt. Pick Nos.;
                                                              RUS=Серия номеров учт. товарных подборов] }
    { 7304;   ;Inventory Movement Nos.;Code10     ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 7331=R;
                                                   CaptionML=[ENU=Inventory Movement Nos.;
                                                              RUS=Номера перемещений запасов] }
    { 7305;   ;Registered Invt. Movement Nos.;Code10;
                                                   TableRelation="No. Series";
                                                   AccessByPermission=TableData 7331=R;
                                                   CaptionML=[ENU=Registered Invt. Movement Nos.;
                                                              RUS=Зарегистрированные номера перемещений запасов] }
    { 7306;   ;Internal Movement Nos.;Code10      ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 7331=R;
                                                   CaptionML=[ENU=Internal Movement Nos.;
                                                              RUS=Номера внутренних перемещений] }
    { 12400;  ;Item Receipt Nos.   ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Item Receipt Nos.;
                                                              RUS=Серия номеров актов оприходования товаров] }
    { 12401;  ;Posted Item Receipt Nos.;Code10    ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Posted Item Receipt Nos.;
                                                              RUS=Серия номеров учт. актов оприходования товаров] }
    { 12402;  ;Item Shipment Nos.  ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Item Shipment Nos.;
                                                              RUS=Серия номеров актов списания товаров] }
    { 12403;  ;Posted Item Shipment Nos.;Code10   ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Posted Item Shipment Nos.;
                                                              RUS=Серия номеров учт. актов списания товаров] }
    { 12404;  ;CD Header Nos.      ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=CD Header Nos.;
                                                              RUS=Номера заголовка ДТ] }
    { 12405;  ;Posted Direct Transfer Nos.;Code10 ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Posted Direct Transfer Nos.;
                                                              RUS=Номера учтенных прямых перемещений] }
    { 12406;  ;Copy Comments to Item Doc.;Boolean ;CaptionML=[ENU=Copy Comments to Item Doc.;
                                                              RUS=Копировать комментарии в товарный док.] }
    { 12408;  ;Check Application Date;Boolean     ;CaptionML=[ENU=Check Application Date;
                                                              RUS=Контроль даты применения] }
    { 12410;  ;Unit of Measure Mandatory;Boolean  ;CaptionML=[ENU=Unit of Measure Mandatory;
                                                              RUS=Единица измерения обязательна] }
    { 12411;  ;Automatic Posting Date Adjmt.;Option;
                                                   CaptionML=[ENU=Automatic Posting Date Adjmt.;
                                                              RUS=Автоматическая коррекция даты учета];
                                                   OptionCaptionML=[ENU=None,Item Cost Only,Item Cost and Charge;
                                                                    RUS=Нет,Только себестоимость товара,Себестоимость товара и издержки];
                                                   OptionString=None,Item Cost Only,Item Cost and Charge }
    { 12412;  ;Employee No. Mandatory;Boolean     ;CaptionML=[ENU=Employee No. Mandatory;
                                                              RUS=Код сотрудника обязателен] }
    { 12414;  ;Adjmt. Rounding as Correction;Boolean;
                                                   CaptionML=[ENU=Adjmt. Rounding as Correction;
                                                              RUS=Коррекция (округл.) как сторно] }
    { 12415;  ;Enable Red Storno   ;Boolean       ;OnValidate=VAR
                                                                ItemJnlPostLine@1210000 : Codeunit 22;
                                                              BEGIN
                                                                IF "Enable Red Storno" THEN BEGIN
                                                                  IF CONFIRM(Text12400) THEN
                                                                    ItemJnlPostLine.EnableRedStorno
                                                                  ELSE
                                                                    ERROR('');

                                                                END ELSE
                                                                  IF CONFIRM(Text12401) THEN
                                                                    ItemJnlPostLine.DisableRedStorno
                                                                  ELSE
                                                                    ERROR('');
                                                              END;

                                                   CaptionML=[ENU=Enable Red Storno;
                                                              RUS=Применять красное сторно] }
    { 12416;  ;Check CD No. Format ;Boolean       ;CaptionML=[ENU=Check CD No. Format;
                                                              RUS=Проверить формат номера ДТ] }
    { 12450;  ;TORG-13 Template Code;Code10       ;TableRelation="Excel Template";
                                                   CaptionML=[ENU=TORG-13 Template Code;
                                                              RUS=Код шаблона ТОРГ-13] }
    { 12451;  ;Waybill 1-T Template Code;Code10   ;TableRelation="Excel Template";
                                                   CaptionML=[ENU=Waybill 1-T Template Code;
                                                              RUS=Код шаблона транспортной накладной 1-Т] }
    { 12452;  ;Item Document Template Code;Code10 ;TableRelation="Excel Template";
                                                   CaptionML=[ENU=Item Document Template Code;
                                                              RUS=Код шаблона товарного документа] }
    { 12454;  ;Shpt.Request M-11 Templ. Code;Code10;
                                                   TableRelation="Excel Template";
                                                   CaptionML=[ENU=Shpt.Request M-11 Templ. Code;
                                                              RUS=Код шаблона требования накладной M-11] }
    { 12455;  ;TORG-16 Template Code;Code10       ;TableRelation="Excel Template";
                                                   CaptionML=[ENU=TORG-16 Template Code;
                                                              RUS=Код шаблона ТОРГ-16] }
    { 12456;  ;INV-17 Template Code;Code10        ;TableRelation="Excel Template";
                                                   CaptionML=[ENU=INV-17 Template Code;
                                                              RUS=Код шаблона ИНВ-17] }
    { 12457;  ;INV-17 Appendix Template Code;Code10;
                                                   TableRelation="Excel Template";
                                                   CaptionML=[ENU=INV-17 Appendix Template Code;
                                                              RUS=Код шаблона приложения ИНВ-17] }
    { 12458;  ;Item Card M-17 Template Code;Code10;TableRelation="Excel Template";
                                                   CaptionML=[ENU=Item Card M-17 Template Code;
                                                              RUS=Код шаблона карточки товара M-17] }
    { 12459;  ;Phys.Inv. INV-3 Template Code;Code10;
                                                   TableRelation="Excel Template";
                                                   CaptionML=[ENU=Phys.Inv. INV-3 Template Code;
                                                              RUS=Код шаблона инвентаризации ИНВ-3] }
    { 12460;  ;Phys.Inv. INV-19 Template Code;Code10;
                                                   TableRelation="Excel Template";
                                                   CaptionML=[ENU=Phys.Inv. INV-19 Template Code;
                                                              RUS=Код шаблона ивентаризации ИНВ-19] }
    { 12461;  ;TORG-29 Template Code;Code10       ;TableRelation="Excel Template";
                                                   CaptionML=[ENU=TORG-29 Template Code;
                                                              RUS=Код шаблона ТОРГ-29] }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ItemLedgEntry@1000 : Record 32;
      Text000@1001 : TextConst 'ENU=Some unadjusted value entries will not be covered with the new setting. You must run the Adjust Cost - Item Entries batch job once to adjust these.;RUS=Действие новых настроек не распространяется на некоторые нескорректированные значения операций. Чтобы скорректировать их, необходимо один раз запустить пакетное задание "Коррекция себест. запасов".';
      Item@1002 : Record 27;
      InvtAdjmtEntryOrder@1003 : Record 5896;
      Text001@1005 : TextConst 'ENU=If you change the %1, the program must adjust all item entries.;RUS=Если изменить %1, программа должна будет скорректировать все товарные операции.';
      Text002@1006 : TextConst 'ENU=The adjustment of all entries can take several hours.\;RUS=Коррекция всех операций может потребовать значительное время.\';
      Text003@1007 : TextConst 'ENU=Do you really want to change the %1?;RUS=Действительно изменить %1?';
      Text004@1008 : TextConst 'ENU=The program has cancelled the change that would have caused an adjustment of all items.;RUS=Программа отменила изменение, которое могло привести к коррекции всех товаров.';
      Text005@1009 : TextConst 'ENU=%1 has been changed to %2. You should now run %3.;RUS=%1 изменено на %2. Теперь необходимо запустить %3.';
      ObjTransl@1011 : Record 377;
      Text006@1004 : TextConst 'ENU=The field %1 should not be set to %2 if field %3 in %4 table is set to %5 because of possibility of deadlocks.;RUS=Поле %1 не должно быть установлено в %2, если поле %3 в таблице %4 равно %5, для предотвращения взаимоблокировки.';
      Text12400@1210001 : TextConst 'ENU=Do you want to enable red storno?;RUS=Применять красное сторно?';
      Text12401@1210000 : TextConst 'ENU=Do you want to disable red storno?;RUS=Отключить применение красного сторно?';

    LOCAL PROCEDURE UpdateInvtAdjmtEntryOrder@2();
    VAR
      InvtAdjmtEntryOrder@1000 : Record 5896;
    BEGIN
      InvtAdjmtEntryOrder.SETCURRENTKEY("Cost is Adjusted","Allow Online Adjustment");
      InvtAdjmtEntryOrder.SETRANGE("Cost is Adjusted",FALSE);
      InvtAdjmtEntryOrder.SETRANGE("Allow Online Adjustment",FALSE);
      InvtAdjmtEntryOrder.SETRANGE("Is Finished",FALSE);
      InvtAdjmtEntryOrder.SETRANGE("Order Type",InvtAdjmtEntryOrder."Order Type"::Production);
      InvtAdjmtEntryOrder.MODIFYALL("Allow Online Adjustment",TRUE);
    END;

    LOCAL PROCEDURE UpdateAvgCostItemSettings@1(FieldCaption@1000 : Text[80];FieldValue@1001 : Text[80]);
    BEGIN
      IF NOT
         CONFIRM(
           STRSUBSTNO(
             Text001 +
             Text002 +
             Text003,FieldCaption),FALSE)
      THEN
        ERROR(Text004);

      CODEUNIT.RUN(CODEUNIT::"Change Average Cost Setting",Rec);

      MESSAGE(
        Text005,FieldCaption,FieldValue,
        ObjTransl.TranslateObject(ObjTransl."Object Type"::Report,REPORT::"Adjust Cost - Item Entries"));
    END;

    BEGIN
    END.
  }
}

