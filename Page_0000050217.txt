OBJECT Page 50217 Event Handling Templates
{
  OBJECT-PROPERTIES
  {
    Date=06.07.17;
    Time=14:44:25;
    Modified=Yes;
    Version List=NOS-26;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Event Handling Templates;
               RUS=Шаблон Проводок];
    SourceTable=Table50151;
    DelayedInsert=Yes;
    PageType=List;
    AutoSplitKey=Yes;
    ActionList=ACTIONS
    {
      { 1101495042;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1101495043;1 ;Action    ;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=[ENU=&Check Selected;
                                 RUS=&Проверить Выделенное];
                      Promoted=Yes;
                      Image=FilterLines;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 EventHandlingTemplate@1101495013 : Record 50151;
                                 BufferDealEntryTemp@1101495012 : TEMPORARY Record 50155;
                                 BufferDealDataSetTemp@1101495011 : TEMPORARY Record 50156;
                                 BufferDealEntryTemp2@1101495010 : TEMPORARY Record 50155;
                                 BufferDealDataSetTemp2@1101495009 : TEMPORARY Record 50156;
                                 Deal@1101495006 : Record 50037;
                                 FI@1101495005 : Record 50021;
                                 Dim@1101495004 : Record 348;
                                 DimValue@1101495003 : Record 349;
                                 GenJournalLineTemp@1101495002 : TEMPORARY Record 81;
                                 GV@1101495000 : Codeunit 50033;
                               BEGIN
                                 //NC #TODO# Нужно переработать функции в таблице
                                 {
                                 GV.ClearCU;

                                 Deal.FINDFIRST;
                                 FI.FINDFIRST;

                                 BufferDealEntryTemp.INIT;
                                 BufferDealEntryTemp."Entry No." := 1;
                                 BufferDealEntryTemp."Deal No." := Deal."Deal ID";
                                 BufferDealEntryTemp."Document ID" := 'TEST';
                                 BufferDealEntryTemp."FI No." := FI."No.";
                                 BufferDealEntryTemp."Currency Code" := '';
                                 BufferDealEntryTemp.Amount := 1000;
                                 BufferDealEntryTemp."Posting Date" := WORKDATE;
                                 BufferDealEntryTemp."Due Date" := WORKDATE;
                                 BufferDealEntryTemp."Undisc. Market Value" := 500;
                                 BufferDealEntryTemp."Qty. Data Set" := 1;
                                 BufferDealEntryTemp.Comment := 'Test Comment';

                                 BufferDealDataSetTemp.INIT;
                                 BufferDealDataSetTemp."Entry No." := 1;
                                 BufferDealDataSetTemp."Data Set No." := 1;
                                 BufferDealDataSetTemp.Amount := 1000;
                                 BufferDealDataSetTemp."Undisc_ Market Value" := 500;
                                 BufferDealDataSetTemp.INSERT;

                                 Dim.RESET;
                                 IF Dim.FINDSET THEN REPEAT
                                   DimValue.RESET;
                                   DimValue.SETRANGE("Dimension Code",Dim.Code);
                                   IF DimValue.FINDFIRST THEN BEGIN
                                     Dim1Temp.INIT;
                                     Dim1Temp."Table ID" := DATABASE::"G/L Entry";
                                     Dim1Temp."Entry No." := BufferDealEntryTemp."Entry No.";
                                     Dim1Temp."Dimension Code" := DimValue."Dimension Code";
                                     Dim1Temp."Dimension Value Code" := DimValue.Code;
                                     Dim1Temp.INSERT;
                                     Dim2Temp := Dim1Temp;
                                     Dim2Temp.INSERT;
                                   END;

                                 UNTIL Dim.NEXT = 0;


                                 //Проверка на пустые знчения
                                 BufferDealEntryTemp2.DELETEALL;
                                 BufferDealDataSetTemp2.DELETEALL;

                                 BufferDealEntryTemp2.INIT;
                                 BufferDealEntryTemp2."Entry No." := 1;
                                 BufferDealEntryTemp2."Deal No." := Deal."Deal ID";
                                 BufferDealEntryTemp2."Document ID" := '';
                                 BufferDealEntryTemp2."FI No." := '';
                                 BufferDealEntryTemp2."Currency Code" := '';
                                 BufferDealEntryTemp2.Amount := 0;
                                 BufferDealEntryTemp2."Posting Date" := 0D;
                                 BufferDealEntryTemp2."Due Date" := 0D;
                                 BufferDealEntryTemp2."Undisc. Market Value" := 0;
                                 BufferDealEntryTemp2."Qty. Data Set" := 1;
                                 BufferDealEntryTemp2.Comment := '';

                                 BufferDealDataSetTemp2.INIT;
                                 BufferDealDataSetTemp2."Entry No." := 1;
                                 BufferDealDataSetTemp2."Data Set No." := 1;
                                 BufferDealDataSetTemp2.Amount := 0;
                                 BufferDealDataSetTemp2."Undisc_ Market Value" := 0;
                                 BufferDealDataSetTemp2.INSERT;

                                 CurrForm.SETSELECTIONFILTER(EventHandlingTemplate);
                                 EventHandlingTemplate.MARKEDONLY(TRUE);
                                 IF EventHandlingTemplate.FINDSET THEN BEGIN
                                   EventHandlingTemplate.SetTestMode(TRUE);
                                   REPEAT
                                     EventHandlingTemplate.Run(BufferDealEntryTemp,BufferDealDataSetTemp,Dim1Temp,Dim2Temp,GenJournalLineTemp,DimGenJnlLineTemp);
                                     EventHandlingTemplate.Run(BufferDealEntryTemp2,BufferDealDataSetTemp2,Dim1Temp,Dim2Temp,GenJournalLineTemp,DimGenJnlLineTemp);
                                   UNTIL EventHandlingTemplate.NEXT = 0;
                                   MESSAGE(Text001,EventHandlingTemplate.COUNT);
                                   EventHandlingTemplate.SetTestMode(FALSE);
                                 END ELSE BEGIN
                                   SetTestMode(TRUE);
                                   Run(BufferDealEntryTemp,BufferDealDataSetTemp,Dim1Temp,Dim2Temp,GenJournalLineTemp,DimGenJnlLineTemp);
                                   Run(BufferDealEntryTemp2,BufferDealDataSetTemp2,Dim1Temp,Dim2Temp,GenJournalLineTemp,DimGenJnlLineTemp);
                                   MESSAGE(Text001,1);
                                   SetTestMode(FALSE);
                                 END;
                                 }
                               END;
                                }
      { 1101495044;1 ;Action    ;
                      CaptionML=[ENU=Check &All;
                                 RUS=Проверить &Все];
                      Promoted=Yes;
                      Image=AllLines;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 EventHandlingTemplate@1101495013 : Record 50151;
                                 BufferDealEntryTemp@1101495012 : TEMPORARY Record 50155;
                                 BufferDealDataSetTemp@1101495011 : TEMPORARY Record 50156;
                                 BufferDealEntryTemp2@1101495010 : TEMPORARY Record 50155;
                                 BufferDealDataSetTemp2@1101495009 : TEMPORARY Record 50156;
                                 Deal@1101495006 : Record 50037;
                                 FI@1101495005 : Record 50021;
                                 Dim@1101495004 : Record 348;
                                 DimValue@1101495003 : Record 349;
                                 GenJournalLineTemp@1101495002 : TEMPORARY Record 81;
                                 GV@1101495000 : Codeunit 50033;
                               BEGIN
                                 //NC #TODO# Нужно переработать функции в таблице
                                 {
                                 GV.ClearCU;

                                 Deal.FINDFIRST;
                                 FI.FINDFIRST;

                                 BufferDealEntryTemp.INIT;
                                 BufferDealEntryTemp."Entry No." := 1;
                                 BufferDealEntryTemp."Deal No." := Deal."Deal ID";
                                 BufferDealEntryTemp."Document ID" := 'TEST';
                                 BufferDealEntryTemp."FI No." := FI."No.";
                                 BufferDealEntryTemp."Currency Code" := '';
                                 BufferDealEntryTemp.Amount := 1000;
                                 BufferDealEntryTemp."Posting Date" := WORKDATE;
                                 BufferDealEntryTemp."Due Date" := WORKDATE;
                                 BufferDealEntryTemp."Undisc. Market Value" := 500;
                                 BufferDealEntryTemp."Qty. Data Set" := 1;
                                 BufferDealEntryTemp.Comment := 'Test Comment';

                                 BufferDealDataSetTemp.INIT;
                                 BufferDealDataSetTemp."Entry No." := 1;
                                 BufferDealDataSetTemp."Data Set No." := 1;
                                 BufferDealDataSetTemp.Amount := 1000;
                                 BufferDealDataSetTemp."Undisc_ Market Value" := 500;
                                 BufferDealDataSetTemp.INSERT;

                                 Dim.RESET;
                                 IF Dim.FINDSET THEN REPEAT
                                   DimValue.RESET;
                                   DimValue.SETRANGE("Dimension Code",Dim.Code);
                                   IF DimValue.FINDFIRST THEN BEGIN
                                     Dim1Temp.INIT;
                                     Dim1Temp."Table ID" := DATABASE::"G/L Entry";
                                     Dim1Temp."Entry No." := BufferDealEntryTemp."Entry No.";
                                     Dim1Temp."Dimension Code" := DimValue."Dimension Code";
                                     Dim1Temp."Dimension Value Code" := DimValue.Code;
                                     Dim1Temp.INSERT;
                                     Dim2Temp := Dim1Temp;
                                     Dim2Temp.INSERT;
                                   END;

                                 UNTIL Dim.NEXT = 0;


                                 //Проверка на пустые знчения
                                 BufferDealEntryTemp2.DELETEALL;
                                 BufferDealDataSetTemp2.DELETEALL;

                                 BufferDealEntryTemp2.INIT;
                                 BufferDealEntryTemp2."Entry No." := 1;
                                 BufferDealEntryTemp2."Deal No." := Deal."Deal ID";
                                 BufferDealEntryTemp2."Document ID" := '';
                                 BufferDealEntryTemp2."FI No." := '';
                                 BufferDealEntryTemp2."Currency Code" := '';
                                 BufferDealEntryTemp2.Amount := 0;
                                 BufferDealEntryTemp2."Posting Date" := 0D;
                                 BufferDealEntryTemp2."Due Date" := 0D;
                                 BufferDealEntryTemp2."Undisc. Market Value" := 0;
                                 BufferDealEntryTemp2."Qty. Data Set" := 1;
                                 BufferDealEntryTemp2.Comment := '';

                                 BufferDealDataSetTemp2.INIT;
                                 BufferDealDataSetTemp2."Entry No." := 1;
                                 BufferDealDataSetTemp2."Data Set No." := 1;
                                 BufferDealDataSetTemp2.Amount := 0;
                                 BufferDealDataSetTemp2."Undisc_ Market Value" := 0;
                                 BufferDealDataSetTemp2.INSERT;

                                 EventHandlingTemplate.SETVIEW(GETVIEW);
                                 IF EventHandlingTemplate.FINDSET THEN BEGIN
                                   EventHandlingTemplate.SetTestMode(TRUE);
                                   REPEAT
                                     EventHandlingTemplate.Run(BufferDealEntryTemp,BufferDealDataSetTemp,Dim1Temp,Dim2Temp,GenJournalLineTemp,DimGenJnlLineTemp);
                                     EventHandlingTemplate.Run(BufferDealEntryTemp2,BufferDealDataSetTemp2,Dim1Temp,Dim2Temp,GenJournalLineTemp,DimGenJnlLineTemp);
                                   UNTIL EventHandlingTemplate.NEXT = 0;
                                   MESSAGE(Text001,EventHandlingTemplate.COUNT);
                                   EventHandlingTemplate.SetTestMode(FALSE);
                                 END ELSE BEGIN
                                   SetTestMode(TRUE);
                                   Run(BufferDealEntryTemp,BufferDealDataSetTemp,Dim1Temp,Dim2Temp,GenJournalLineTemp,DimGenJnlLineTemp);
                                   Run(BufferDealEntryTemp2,BufferDealDataSetTemp2,Dim1Temp,Dim2Temp,GenJournalLineTemp,DimGenJnlLineTemp);
                                   MESSAGE(Text001,1);
                                   SetTestMode(FALSE);
                                 END;
                                 }
                               END;
                                }
      { 1101495045;1 ;Action    ;
                      CaptionML=[ENU=&Import-Export Event Template;
                                 RUS=&Загрузка/Выгрузка Шаблонов Событий];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ImportExport;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //NC #TODO# Перенести датапорт
                                 //DATAPORT.RUNMODAL(DATAPORT::"Import-Export Event Template",TRUE,Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1101495000;0;Container;
                ContainerType=ContentArea }

    { 1101495001;1;Group  ;
                Name=Group;
                GroupType=Repeater }

    { 1101495002;2;Field  ;
                SourceExpr="Mapping Code";
                Visible=FALSE }

    { 1101495003;2;Field  ;
                SourceExpr="Deal Type";
                Visible=FALSE }

    { 1101495004;2;Field  ;
                SourceExpr="Event Code";
                Visible=FALSE }

    { 1101495005;2;Field  ;
                SourceExpr="Line No." }

    { 1101495006;2;Field  ;
                SourceExpr="Processing Data Sets" }

    { 1101495007;2;Field  ;
                SourceExpr=Condition }

    { 1101495008;2;Field  ;
                SourceExpr=Type }

    { 1101495009;2;Field  ;
                SourceExpr="Goto Line No." }

    { 1101495010;2;Field  ;
                SourceExpr="Account Type" }

    { 1101495011;2;Field  ;
                SourceExpr="Account No." }

    { 1101495012;2;Field  ;
                SourceExpr="Posting Date" }

    { 1101495013;2;Field  ;
                SourceExpr="Document Type" }

    { 1101495014;2;Field  ;
                SourceExpr=Description }

    { 1101495015;2;Field  ;
                SourceExpr="Description 2" }

    { 1101495016;2;Field  ;
                SourceExpr="Currency Code" }

    { 1101495017;2;Field  ;
                SourceExpr="Debit Amount" }

    { 1101495018;2;Field  ;
                SourceExpr="Credit Amount" }

    { 1101495019;2;Field  ;
                SourceExpr="Posting Group" }

    { 1101495020;2;Field  ;
                SourceExpr="Source Code" }

    { 1101495021;2;Field  ;
                SourceExpr="Due Date" }

    { 1101495022;2;Field  ;
                SourceExpr=Quantity }

    { 1101495023;2;Field  ;
                SourceExpr="Gen. Posting Type" }

    { 1101495024;2;Field  ;
                SourceExpr="Gen. Bus. Posting Group" }

    { 1101495025;2;Field  ;
                SourceExpr="Gen. Prod. Posting Group" }

    { 1101495026;2;Field  ;
                SourceExpr="Document Date" }

    { 1101495027;2;Field  ;
                SourceExpr="External Document No." }

    { 1101495028;2;Field  ;
                SourceExpr="VAT Bus. Posting Group" }

    { 1101495029;2;Field  ;
                SourceExpr="VAT Prod. Posting Group" }

    { 1101495030;2;Field  ;
                SourceExpr="Additional-Currency Posting" }

    { 1101495031;2;Field  ;
                SourceExpr="VAT Amount" }

    { 1101495032;2;Field  ;
                SourceExpr="Reversing Entry" }

    { 1101495033;2;Field  ;
                SourceExpr="Allow Zero-Amount Posting" }

    { 1101495034;2;Field  ;
                SourceExpr="Debit Amount (LCY)" }

    { 1101495035;2;Field  ;
                SourceExpr="Credit Amount (LCY)" }

    { 1101495036;2;Field  ;
                SourceExpr="Agreement No." }

    { 1101495037;2;Field  ;
                SourceExpr="Source Historical Date" }

    { 1101495038;2;Field  ;
                SourceExpr="Currency Index Entry" }

    { 1101495039;2;Field  ;
                SourceExpr="Currency Index" }

    { 1101495040;2;Field  ;
                SourceExpr="Financial Instrument No." }

    { 1101495041;1;Part   ;
                CaptionML=[ENU=Dimensions;
                           RUS=Измерения];
                SubPageLink=Mapping Code=FIELD(Mapping Code),
                            Deal Type=FIELD(Deal Type),
                            Event Code=FIELD(Event Code),
                            Line No.=FIELD(Line No.);
                PagePartID=Page50218;
                PartType=Page }

  }
  CODE
  {
    VAR
      Text001@1101495000 : TextConst 'ENU=Checked lines %1.\Errors were found.;RUS=Проверено строк %1.\Ошибок не обнаружено.';

    BEGIN
    {
      NC S622 PCH
    }
    END.
  }
}

