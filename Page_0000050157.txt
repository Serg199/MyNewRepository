OBJECT Page 50157 Bank Turnover G/L
{
  OBJECT-PROPERTIES
  {
    Date=17.08.17;
    Time=11:58:58;
    Modified=Yes;
    Version List=NOS-26;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Bank Turnover;
               RUS=Банк Оборотная Ведомость];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table270;
    PageType=Worksheet;
    OnOpenPage=BEGIN
                 GLSetup.GET; // NC NOS-26 SPA
                 CASE TypeBankFilter OF
                   TypeBankFilter::" ": SETRANGE("Account Type");
                   TypeBankFilter::Bank: SETRANGE("Account Type","Account Type"::"Bank Account");
                   TypeBankFilter::Cash: SETRANGE("Account Type","Account Type"::"Cash Account");
                 END;

                 IF GLPeriodLength = GLPeriodLength::"Accounting Period" THEN
                   FindUserPeriod('')
                 ELSE
                   FindPeriod('');
               END;

    OnAfterGetRecord=BEGIN
                       CalculateBeginPeriodAmount;
                     END;

    ActionList=ACTIONS
    {
      { 1101495004;  ;ActionContainer;
                      Name=Bank Turnover G/L;
                      ActionContainerType=ActionItems }
      { 1101495014;1 ;ActionGroup;
                      CaptionML=[ENU=Navigate to;
                                 RUS=Перейти];
                      Image=Setup }
      { 1101495013;2 ;Action    ;
                      Name=Previous Period;
                      CaptionML=[ENU=Previous Period;
                                 RUS=Пред. период];
                      Promoted=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('<=');
                               END;
                                }
      { 1101495012;2 ;Action    ;
                      Name=Today;
                      CaptionML=[ENU=Today;
                                 RUS=Сегодня];
                      Promoted=Yes;
                      Image=Delegate;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 "Date Filter" :=  0D;   //workdate
                                 FindPeriod('');
                               END;
                                }
      { 1101495011;2 ;Action    ;
                      Name=Next Period;
                      CaptionML=[ENU=Next Period;
                                 RUS=След. период];
                      Promoted=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('>=');
                               END;
                                }
      { 1101495024;1 ;ActionGroup;
                      Name=Bank Account;
                      CaptionML=[ENU=Bank Account;
                                 RUS=Банк. Счет];
                      Image=BankAccount }
      { 1101495025;2 ;Action    ;
                      Name=Card;
                      ShortCutKey=Shift+F5;
                      CaptionML=[ENU=Bank Card;
                                 RUS=Карточка банка];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=BankAccount;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 CASE "Account Type" OF
                                   "Account Type"::"Bank Account": PAGE.RUN(PAGE::"Bank Account Card",Rec);
                                   "Account Type"::"Cash Account": PAGE.RUN(PAGE::"Cash Account Card",Rec);
                                 END;
                               END;
                                }
      { 1101495026;2 ;Action    ;
                      Name=Ledger Entries;
                      CaptionML=[ENU=Bank Ledger Entries;
                                 RUS=Банковские операции];
                      RunObject=Page 372;
                      RunPageLink=Bank Account No.=FIELD(No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=BankAccountLedger;
                      PromotedCategory=Report }
      { 1101495028;1 ;ActionGroup;
                      Name=Print;
                      CaptionML=[ENU=Print;
                                 RUS=Печать];
                      Image=Print }
      { 1101495029;2 ;Action    ;
                      Name=Bank Account Turnover;
                      CaptionML=[ENU=Print Bank Account Turnover;
                                 RUS=Печать Банк. Счет Оборотная Ведомость];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PrintAttachment;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 SearchText@1101495000 : Code[10];
                               BEGIN
                                 BankAccount.RESET;
                                 BankAccount.COPYFILTERS(Rec);
                                 REPORT.RUNMODAL(12447,TRUE,FALSE,BankAccount);
                               END;
                                }
      { 1101495030;2 ;Action    ;
                      Name=Bank Account Card;
                      CaptionML=[ENU=Print Bank Account Card;
                                 RUS=Печать Банк. Счет Карточка];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PrintDocument;
                      PromotedCategory=Report;
                      OnAction=BEGIN
                                 CurrPage.SETSELECTIONFILTER(BankAccount);
                                 REPORT.RUNMODAL(1404,TRUE,FALSE,BankAccount);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1101495000;0;Container;
                ContainerType=ContentArea }

    { 1101495018;1;Group  ;
                CaptionML=[ENU=Options;
                           RUS=Параметры] }

    { 1101495015;2;Field  ;
                Name=GLPeriodLength;
                CaptionML=[ENU=View by;
                           RUS=Просмотр по];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                 RUS=День,Неделя,Месяц,Квартал,Год,Учетный период];
                SourceExpr=GLPeriodLength;
                OnValidate=BEGIN
                             FindPeriod('');
                             CurrPage.UPDATE;
                           END;
                            }

    { 1101495017;2;Field  ;
                CaptionML=[ENU=Date Filter;
                           RUS=Дата Фильтр];
                SourceExpr=DateFilter;
                OnValidate=BEGIN
                             FindPeriod('');
                             CurrPage.UPDATE;
                           END;
                            }

    { 1101495021;2;Field  ;
                CaptionML=[ENU=Type Account Filter;
                           RUS=Тип Счета Фильтр];
                OptionCaptionML=[ENU=" ,Bank,Cash";
                                 RUS=" ,Банк,Касса"];
                DecimalPlaces=0:0;
                SourceExpr=TypeBankFilter }

    { 1101495006;2;Field  ;
                SourceExpr=GlobalDimension1CodeFilter;
                CaptionClass='1,3,1';
                OnValidate=BEGIN
                             //NC NOS-26 > SPA
                             SETFILTER("Global Dimension 1 Filter",GlobalDimension1CodeFilter);
                             CurrPage.UPDATE;
                             //NC NOS-26 < SPA
                           END;

                OnLookup=BEGIN
                           //NC NOS-26 > SPA
                           EXIT(LookUpDimFilter(GLSetup."Global Dimension 1 Code",Text));
                           //NC NOS-26 < SPA
                         END;
                          }

    { 1101495007;2;Field  ;
                SourceExpr=GlobalDimension2CodeFilter;
                CaptionClass='1,3,2';
                OnValidate=BEGIN
                             //NC NOS-26 > SPA
                             SETFILTER("Global Dimension 2 Filter",GlobalDimension2CodeFilter);
                             CurrPage.UPDATE;
                             //NC NOS-26 < SPA
                           END;

                OnLookup=BEGIN
                           //NC NOS-26 > SPA
                           EXIT(LookUpDimFilter(GLSetup."Global Dimension 2 Code",Text));
                           //NC NOS-26 < SPA
                         END;
                          }

    { 1101495001;1;Group  ;
                Name=Group;
                Editable=FALSE;
                GroupType=Repeater }

    { 1101495002;2;Field  ;
                SourceExpr="No." }

    { 1101495003;2;Field  ;
                SourceExpr=Name }

    { 1101495110;2;Field  ;
                SourceExpr="Bank Acc. Posting Group" }

    { 1101495005;2;Field  ;
                SourceExpr="Global Dimension 1 Code" }

    { 1101495019;2;Field  ;
                SourceExpr="Customer No." }

    { 1101495090;2;Field  ;
                SourceExpr="Currency Code" }

    { 1101495020;2;Field  ;
                SourceExpr=Blocked;
                Editable=FALSE }

    { 1101495027;2;Field  ;
                CaptionML=[ENU=Balance at Begin Period;
                           RUS=Начальное Сальдо];
                BlankZero=Yes;
                SourceExpr=BalanceBeginPeriod }

    { 1101495111;2;Field  ;
                SourceExpr="Debit Amount" }

    { 1101495112;2;Field  ;
                SourceExpr="Credit Amount" }

    { 1101495113;2;Field  ;
                SourceExpr="Balance at Date" }

    { 1101495046;2;Field  ;
                BlankZero=Yes;
                SourceExpr=BalanceBeginPeriodLCY;
                CaptionClass=['1,11,1,270,59' ] }

    { 1101495048;2;Field  ;
                SourceExpr="Debit Amount (LCY)" }

    { 1101495049;2;Field  ;
                SourceExpr="Credit Amount (LCY)" }

    { 1101495050;2;Field  ;
                BlankZero=Yes;
                SourceExpr="Balance at Date (LCY)" }

  }
  CODE
  {
    VAR
      ">MIGR2017"@1101495021 : Integer;
      GLPeriodLength@1101495020 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      BalanceBeginPeriod@1101495019 : Decimal;
      BalanceBeginPeriodACY@1101495018 : Decimal;
      BalanceEndPeriod@1101495017 : Decimal;
      BalanceEndPeriodACY@1101495016 : Decimal;
      GLAccount@1101495015 : Record 15;
      GLEntry@1101495014 : Record 17;
      UserSetup@1101495013 : Record 91;
      I@1101495012 : Integer;
      BalanceBeginPeriodCredit@1101495011 : Decimal;
      BalanceBeginPeriodDebit@1101495010 : Decimal;
      BalanceEndPeriodCredit@1101495009 : Decimal;
      BalanceEndPeriodDebit@1101495008 : Decimal;
      Vendor@1101495007 : Record 23;
      Customer@1101495006 : Record 18;
      OnDet@1101495005 : Boolean;
      BankAccountLedgerEntry@1101495004 : Record 271;
      BankAccount@1101495003 : Record 270;
      BalanceBeginPeriodLCY@1101495002 : Decimal;
      BalanceEndPeriodLCY@1101495001 : Decimal;
      TypeBankFilter@1101495000 : ' ,Bank,Cash';
      DateFilter@1101495022 : Text[30];
      GlobalDimension1CodeFilter@1101495023 : Text[250];
      GlobalDimension2CodeFilter@1101495024 : Text[250];
      GLSetup@1101495025 : Record 98;

    LOCAL PROCEDURE FindPeriod@1(SearchText@1210000 : Code[10]);
    VAR
      AccountingPeriod@1210002 : Record 50;
      PeriodFormManagement@1210003 : Codeunit 359;
      Calendar@1101495000 : Record 2000000007;
    BEGIN
      IF GETFILTER("Date Filter") <> '' THEN BEGIN
        Calendar.SETFILTER("Period Start",GETFILTER("Date Filter"));
        IF NOT PeriodFormManagement.FindDate('+',Calendar,GLPeriodLength) THEN
          PeriodFormManagement.FindDate('+',Calendar,GLPeriodLength::Day);
        Calendar.SETRANGE("Period Start");
      END;
      PeriodFormManagement.FindDate(SearchText,Calendar,GLPeriodLength);
      IF Calendar."Period Start" = Calendar."Period End" THEN
        SETRANGE("Date Filter",Calendar."Period Start")
      ELSE
        SETRANGE("Date Filter",Calendar."Period Start",Calendar."Period End");
      //NC NOS-26 > ENK
      CLEAR(DateFilter);
      DateFilter := FORMAT(Calendar."Period Start") + '..' + FORMAT(Calendar."Period End");
      //NC NOS-26 < ENK
    END;

    PROCEDURE CalculateBeginPeriodAmount@2();
    BEGIN
      BalanceBeginPeriod := 0;
      BalanceBeginPeriodLCY := 0;
      IF COPYSTR(GETFILTER("Date Filter"),1,2) <> '..' THEN
        IF GETRANGEMIN("Date Filter") <> 0D THEN BEGIN
          BankAccount.RESET;
          BankAccount.GET("No.");
          BankAccount.COPYFILTERS(Rec);
          BankAccount.SETRANGE("Date Filter",GETRANGEMIN("Date Filter") - 1);
          BankAccount.CALCFIELDS("Balance at Date", "Balance at Date (LCY)");
          BalanceBeginPeriod := BankAccount."Balance at Date";
          BalanceBeginPeriodLCY := BankAccount."Balance at Date (LCY)";
        END;
    END;

    LOCAL PROCEDURE FindUserPeriod@3(SearchText@1210000 : Code[10]);
    VAR
      Calendar@1210001 : Record 2000000007;
      "Accounting Period"@1210002 : Record 50;
      PeriodFormManagement@1210003 : Codeunit 359;
    BEGIN
      IF UserSetup.GET(USERID) THEN BEGIN
        SETRANGE("Date Filter",UserSetup."Allow Posting From",UserSetup."Allow Posting To");
        IF GETRANGEMIN("Date Filter") = GETRANGEMAX("Date Filter") THEN
          SETRANGE("Date Filter",GETRANGEMIN("Date Filter"));
      END ELSE BEGIN
        IF GETFILTER("Date Filter") <> '' THEN BEGIN
          Calendar.SETFILTER("Period Start",GETFILTER("Date Filter"));
          IF NOT PeriodFormManagement.FindDate('+',Calendar,GLPeriodLength) THEN
            PeriodFormManagement.FindDate('+',Calendar,GLPeriodLength::Day);
          Calendar.SETRANGE("Period Start");
        END;
        PeriodFormManagement.FindDate(SearchText,Calendar,GLPeriodLength);
        SETRANGE("Date Filter",Calendar."Period Start",Calendar."Period End");
        IF GETRANGEMIN("Date Filter") = GETRANGEMAX("Date Filter") THEN
          SETRANGE("Date Filter",GETRANGEMIN("Date Filter"));
      END;
    END;

    PROCEDURE DrillDown@5(Show@1210000 : 'Debit,Credit,ACYDebet,ACYCredit,BeginPeriod,ACYBeginPeriod');
    BEGIN
      BankAccountLedgerEntry.RESET;
      IF (GETFILTER("Global Dimension 1 Filter") <> '')
      OR (GETFILTER("Global Dimension 2 Filter") <> '')
      THEN
        BankAccountLedgerEntry.SETCURRENTKEY(BankAccountLedgerEntry."Bank Account No.","Global Dimension 1 Code",
        "Global Dimension 2 Code")
      ELSE
        BankAccountLedgerEntry.SETCURRENTKEY(BankAccountLedgerEntry."Bank Account No.","Posting Date");

        BankAccountLedgerEntry.SETRANGE(BankAccountLedgerEntry."Bank Account No.","No.");

      BankAccountLedgerEntry.SETFILTER("Posting Date",GETFILTER("Date Filter"));
      BankAccountLedgerEntry.SETFILTER("Global Dimension 1 Code",GETFILTER("Global Dimension 1 Filter"));
      BankAccountLedgerEntry.SETFILTER("Global Dimension 2 Code",GETFILTER("Global Dimension 2 Filter"));
      CASE Show OF
        Show::Debit: BankAccountLedgerEntry.SETFILTER("Debit Amount",'<>%1',0);
        Show::Credit: BankAccountLedgerEntry.SETFILTER("Credit Amount",'<>%1',0);
        Show::BeginPeriod,
        Show::ACYBeginPeriod:
          IF COPYSTR(GETFILTER("Date Filter"),1,2) <> '..' THEN BEGIN
            IF GETRANGEMIN("Date Filter") <> 0D THEN
              BankAccountLedgerEntry.SETRANGE("Posting Date",0D,GETRANGEMIN("Date Filter") - 1);
          END ELSE
            EXIT;
        ELSE
          ERROR('');
      END;
      PAGE.RUN(0,BankAccountLedgerEntry);
    END;

    LOCAL PROCEDURE LookUpDimFilter@1101495000(Dim@1101495000 : Code[20];VAR Text@1101495001 : Text[250]) : Boolean;
    VAR
      DimVal@1101495003 : Record 349;
      DimValList@1101495002 : Page 560;
    BEGIN
      //NC NOS-26 > SPA
      IF Dim = '' THEN
        EXIT(FALSE);
      DimValList.LOOKUPMODE(TRUE);
      DimVal.SETRANGE("Dimension Code",Dim);
      DimValList.SETTABLEVIEW(DimVal);
      IF DimValList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        DimValList.GETRECORD(DimVal);
        Text := DimValList.GetSelectionFilter;
      END;
      EXIT(TRUE);
      //NC NOS-26 < SPA
    END;

    BEGIN
    {
      NC OAM22 DP Изменено свойство Caption Class полей ..(LCY)
      NC NCS-1091 DP Выведено поле Blocked
      -----
      NC NOS-26 ENK
              Change function: FindPeriod.
              New global: DateFilter Text 30.
    }
    END.
  }
}

