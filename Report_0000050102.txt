OBJECT Report 50102 Create Currency Exchange Rate
{
  OBJECT-PROPERTIES
  {
    Date=05.07.17;
    Time=11:47:59;
    Modified=Yes;
    Version List=NOS-26;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Create Currency Exchange Rate;
               RUS=Создание Курсов Валют];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF (StartDate = 0D) OR (EndDate = 0D) THEN
                    ERROR(Text001);

                  IF (StartDate > EndDate) THEN
                    ERROR(Text002);

                  IF CurrencyFilter='' THEN
                    IF NOT CONFIRM(Text007) THEN
                      ERROR(Text008);

                  IsNewStatus := FALSE;

                  Wnd.OPEN(Text005 + '\' + Text006);

                  Currency.RESET;
                  IF CurrencyFilter <> '' THEN
                    Currency.SETFILTER(Code, CurrencyFilter);
                  Currency.SETRANGE("Search Method", Currency."Search Method"::"As of Date");
                  IF Currency.FINDSET THEN
                  REPEAT
                    IndexDate := StartDate;
                    REPEAT
                      BuffCurrExchRate.RESET;
                      BuffCurrExchRate.SETCURRENTKEY(Status,Code,Date);
                      BuffCurrExchRate.SETRANGE(Status, BuffCurrExchRate.Status::New);
                      BuffCurrExchRate.SETRANGE(Code, Currency.Code);
                      BuffCurrExchRate.SETRANGE(Date, IndexDate);
                      IF NOT BuffCurrExchRate.FINDFIRST THEN BEGIN
                        CompNo := 0;
                        Company.RESET;
                        IF Company.FINDSET THEN
                        REPEAT
                          CompNo += 1;
                          Wnd.UPDATE(2,ROUND(CompNo / Company.COUNT * 10000,1));

                          CurrExchRate.RESET;
                          CurrExchRate.CHANGECOMPANY(Company.Name);
                          CurrExchRate_Last.CHANGECOMPANY(Company.Name);
                          GLSetup.CHANGECOMPANY(Company.Name);
                          GLSetup.GET;

                          IF GLSetup."LCY Code" = Currency.Code THEN
                            LocalCurrency := ''
                          ELSE
                            LocalCurrency := Currency.Code;

                          IF GLSetup."LCY Code" = Currency."Relational Currency Code" THEN
                            LocalRelCurrencyCode := ''
                          ELSE
                            LocalRelCurrencyCode := Currency."Relational Currency Code";

                          IF (LocalCurrency = '') AND (LocalRelCurrencyCode <> '') THEN
                            CheckCurrExhRate(Company.Name, LocalRelCurrencyCode, IndexDate, LocalCurrency)
                          ELSE
                            CheckCurrExhRate(Company.Name, Currency.Code, IndexDate, LocalRelCurrencyCode);
                        UNTIL Company.NEXT = 0;
                      END ELSE
                        IsNewStatus := TRUE;
                      IndexDate := CALCDATE('<+1D>', IndexDate);
                    UNTIL IndexDate > EndDate;
                    CurrNo += 1;
                    Wnd.UPDATE(1,ROUND(CurrNo / Currency.COUNT * 10000,1));
                  UNTIL Currency.NEXT = 0;


                  MESSAGE(Text004);

                  IF IsNewStatus THEN
                    MESSAGE(Text003);

                  Wnd.CLOSE;
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1101495000;;Container;
                  ContainerType=ContentArea }

      { 1101495001;1;Group  ;
                  CaptionML=[ENU=Report options;
                             RUS=Параметры отчета];
                  GroupType=Group }

      { 1101495002;2;Field  ;
                  CaptionML=[ENU=Start Date;
                             RUS=Дата Начала];
                  SourceExpr=StartDate }

      { 1101495003;2;Field  ;
                  CaptionML=[ENU=End Date;
                             RUS=Дата Окончания];
                  SourceExpr=EndDate }

      { 1101495004;2;Field  ;
                  CaptionML=[ENU=Currency Filter;
                             RUS=Валютная Пара Фильтр];
                  SourceExpr=CurrencyFilter;
                  OnLookup=VAR
                             Currency@1101495001 : Record 4;
                             Currencies@1101495000 : Page 5;
                           BEGIN
                             Currencies.LOOKUPMODE(TRUE);
                             Currency.RESET;
                             Currency.SETRANGE("Search Method", Currency."Search Method"::"As of Date");
                             Currency.SETFILTER("Relational Currency Code", '<>%1','');
                             Currencies.SETTABLEVIEW(Currency);
                             IF NOT (Currencies.RUNMODAL = ACTION::LookupOK) THEN
                               EXIT(FALSE)
                             ELSE
                               Text := Currencies.GetSelectionFilter;

                             EXIT(TRUE);
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Currency@1101495018 : Record 4;
      LocalCurrency@1101495017 : Code[20];
      Company@1101495016 : Record 2000000006;
      CurrExchRate@1101495015 : Record 330;
      CurrExchRate_Last@1101495014 : Record 330;
      BuffCurrExchRate@1101495013 : Record 50056;
      StartDate@1101495012 : Date;
      EndDate@1101495011 : Date;
      IndexDate@1101495010 : Date;
      GLSetup@1101495009 : Record 98;
      IsNewStatus@1101495008 : Boolean;
      RelationalCurrency@1101495007 : Code[20];
      CurrencyFilter@1101495006 : Code[100];
      LocalCurrencyRec1@1101495005 : Record 4;
      LocalCurrencyCode1@1101495004 : Code[20];
      LocalRelCurrencyCode@1101495003 : Code[20];
      CurrNo@1101495002 : Integer;
      Wnd@1101495001 : Dialog;
      CompNo@1101495000 : Integer;
      Text001@1101495026 : TextConst 'RUS=Введите период';
      Text002@1101495025 : TextConst 'RUS=Дата конца не может быть больше даты начала';
      Text003@1101495024 : TextConst 'RUS=В буфере курсов валют за период есть курсы со статусом Новый. Для подобных ситуацция вставка значений курсов не произведена. Выполните синхронизаацию справочника.';
      Text004@1101495023 : TextConst 'RUS=Курсы валют были успешно созданы';
      Text005@1101495022 : TextConst 'RUS=Обработка валют \ @1@@@@@@@@@@@@@@@@@@@@@@@@@@';
      Text006@1101495021 : TextConst 'RUS=Обработка компаний \ @2@@@@@@@@@@@@@@@@@@@@@@@@@@';
      Text007@1101495020 : TextConst 'RUS=Задание обновит все курсы за период. Продолжить?';
      Text008@1101495019 : TextConst 'RUS=Обработка была прервана';

    PROCEDURE CheckCurrExhRate@1101495000(Firm@1101495003 : Text[30];CurrCode@1101495000 : Code[20];RateDate@1101495001 : Date;RelCurrCode@1101495002 : Code[20]);
    VAR
      CurrExchRate1@1101495004 : Record 330;
    BEGIN
      CurrExchRate.RESET;
      CurrExchRate.CHANGECOMPANY(Firm);
      CurrExchRate.SETRANGE("Currency Code", CurrCode);
      CurrExchRate.SETRANGE("Starting Date", RateDate);
      CurrExchRate.SETRANGE("Relational Currency Code", RelCurrCode);
      CurrExchRate.SETRANGE("System Create", FALSE);
      IF NOT CurrExchRate.FINDFIRST THEN BEGIN
        // ищем курс
        CurrExchRate_Last.RESET;
        CurrExchRate_Last.CHANGECOMPANY(Firm);
        CurrExchRate_Last.SETRANGE("Currency Code", CurrCode);
        CurrExchRate_Last.SETFILTER("Starting Date", '..%1', RateDate);
        CurrExchRate_Last.SETRANGE("Relational Currency Code", RelCurrCode);
        CurrExchRate_Last.SETRANGE("System Create", FALSE);
        IF CurrExchRate_Last.FINDLAST THEN BEGIN
          CurrExchRate1.CHANGECOMPANY(Firm);
          CurrExchRate1.INIT;
          CurrExchRate1."Currency Code" := CurrExchRate_Last."Currency Code";
          CurrExchRate1."Starting Date" := IndexDate;

          CurrExchRate1."Exchange Rate Amount" := CurrExchRate_Last."Exchange Rate Amount";
          CurrExchRate1."Relational Exch. Rate Amount" := CurrExchRate_Last."Relational Exch. Rate Amount";
          CurrExchRate1."Adjustment Exch. Rate Amount" := CurrExchRate_Last."Adjustment Exch. Rate Amount";
          CurrExchRate1."Relational Adjmt Exch Rate Amt" := CurrExchRate_Last."Relational Adjmt Exch Rate Amt";
          CurrExchRate1."Relational Currency Code" := CurrExchRate_Last."Relational Currency Code";
          CurrExchRate1."System Create" := TRUE;
          IF CurrExchRate1.INSERT(TRUE) THEN
            CurrExchRate1.MODIFY(TRUE);
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

