OBJECT Page 26591 Acc. Sched. Formula Drill-Down
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Acc. Sched. Formula Drill-Down;
               RUS=Детализация формул финансового отчета];
    DeleteAllowed=No;
    SourceTable=Table26585;
    PageType=Worksheet;
    SourceTableTemporary=Yes;
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1470008;1;Field     ;
                CaptionML=[ENU=Formula;
                           RUS=Формула];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Formula;
                Editable=FALSE }

    { 1470000;1;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 1470012;2;Field     ;
                ToolTipML=[ENU=This field is used internally.;
                           RUS=Это поле предназначено для внутреннего использования.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Row No." }

    { 1210000;2;Field     ;
                DrillDown=No;
                ToolTipML=[ENU=This field is used internally.;
                           RUS=Это поле предназначено для внутреннего использования.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description }

    { 1470010;2;Field     ;
                ToolTipML=[ENU=This field is used internally.;
                           RUS=Это поле предназначено для внутреннего использования.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Totaling Type" }

    { 1470001;2;Field     ;
                ToolTipML=[ENU=This field is used internally.;
                           RUS=Это поле предназначено для внутреннего использования.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Totaling }

    { 1470003;2;Field     ;
                ToolTipML=[ENU=This field is used internally.;
                           RUS=Это поле предназначено для внутреннего использования.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Amount;
                OnDrillDown=VAR
                              GLAcc@1470011 : Record 15;
                              GLAccAnalysisView@1470010 : Record 376;
                              AccSchedLine@1470009 : Record 85;
                              GLCorrespondenceEntry@1210003 : Record 12401;
                              GLCorrespondenceEntries@1210001 : Page 12401;
                              ChartofAccAnalysisView@1470004 : Page 569;
                              FormulaDrillDown@1470002 : Page 26591;
                            BEGIN
                              AccSchedName.GET(SourceAccScheduleLine."Schedule Name");
                              AccSchedLine.GET("Schedule Name","Acc. Schedule Line No.");
                              AccSchedLine.COPYFILTERS(SourceAccScheduleLine);
                              StartDate := AccSchedLine.GETRANGEMIN("Date Filter");
                              EndDate := AccSchedLine.GETRANGEMAX("Date Filter");

                              AccSchedManagement.SetDateParameters(StartDate,EndDate);

                              IF SourceColumnLayout."Column Type" = SourceColumnLayout."Column Type"::Formula THEN
                                MESSAGE(Text001,SourceColumnLayout.Formula)
                              ELSE
                                IF (SourceColumnLayout."Ledger Entry Type" = SourceColumnLayout."Ledger Entry Type"::"Corr. Entries") AND
                                   ("Totaling Type" <> "Totaling Type"::Formula)
                                THEN BEGIN
                                  GLCorrespondenceEntry.SETFILTER("Debit Account No.",AccSchedLine.Totaling);
                                  GLCorrespondenceEntry.SETFILTER("Credit Account No.",AccSchedLine."Corr. Totaling");
                                  AccSchedLine.COPYFILTER("Dimension 1 Filter",GLCorrespondenceEntry."Debit Global Dimension 1 Code");
                                  AccSchedLine.COPYFILTER("Dimension 2 Filter",GLCorrespondenceEntry."Debit Global Dimension 2 Code");
                                  AccSchedLine.COPYFILTER("Corr. Dimension 1 Filter",GLCorrespondenceEntry."Credit Global Dimension 1 Code");
                                  AccSchedLine.COPYFILTER("Corr. Dimension 2 Filter",GLCorrespondenceEntry."Credit Global Dimension 2 Code");
                                  GLCorrespondenceEntry.FILTERGROUP(2);
                                  GLCorrespondenceEntry.SETFILTER(
                                    "Debit Global Dimension 1 Code",
                                    AccSchedManagement.GetDimTotalingFilter(1,AccSchedLine."Dimension 1 Totaling"));
                                  GLCorrespondenceEntry.SETFILTER(
                                    "Debit Global Dimension 2 Code",
                                    AccSchedManagement.GetDimTotalingFilter(2,AccSchedLine."Dimension 2 Totaling"));
                                  GLCorrespondenceEntry.SETFILTER(
                                    "Credit Global Dimension 1 Code",
                                    AccSchedManagement.GetDimTotalingFilter(1,AccSchedLine."Dimension 1 Corr. Totaling"));
                                  GLCorrespondenceEntry.SETFILTER(
                                    "Credit Global Dimension 2 Code",
                                    AccSchedManagement.GetDimTotalingFilter(2,AccSchedLine."Dimension 2 Corr. Totaling"));
                                  GLCorrespondenceEntry.FILTERGROUP(6);
                                  GLCorrespondenceEntry.SETFILTER(
                                    "Debit Global Dimension 1 Code",
                                    AccSchedManagement.GetDimTotalingFilter(1,SourceColumnLayout."Dimension 1 Totaling"));
                                  GLCorrespondenceEntry.SETFILTER(
                                    "Debit Global Dimension 2 Code",
                                    AccSchedManagement.GetDimTotalingFilter(2,SourceColumnLayout."Dimension 2 Totaling"));
                                  GLCorrespondenceEntry.SETFILTER(
                                    "Credit Global Dimension 1 Code",
                                    AccSchedManagement.GetDimTotalingFilter(1,SourceColumnLayout."Dimension 1 Corr. Totaling"));
                                  GLCorrespondenceEntry.SETFILTER(
                                    "Credit Global Dimension 2 Code",
                                    AccSchedManagement.GetDimTotalingFilter(2,SourceColumnLayout."Dimension 2 Corr. Totaling"));
                                  GLCorrespondenceEntry.FILTERGROUP(0);

                                  GLCorrespondenceEntry.SETFILTER("Posting Date",
                                    AccSchedManagement.GetPostingDateFilter(AccSchedLine,SourceColumnLayout));
                                  GLCorrespondenceEntries.SETTABLEVIEW(GLCorrespondenceEntry);
                                  GLCorrespondenceEntries.RUN;
                                END ELSE
                                  CASE "Totaling Type" OF
                                    "Totaling Type"::Constant:
                                      MESSAGE(Text003,Totaling);
                                    "Totaling Type"::Formula:
                                      BEGIN
                                        FormulaDrillDown.InitParameters(AccSchedLine,SourceColumnLayout,AccSchedCellValue);
                                        FormulaDrillDown.RUN;
                                      END;
                                    "Totaling Type"::Custom:
                                      AccSchedExtensionManagement.DrillDownAmount(
                                        AccSchedLine,
                                        SourceColumnLayout,
                                        Totaling,
                                        StartDate,
                                        EndDate);
                                    "Totaling Type"::"Set Base For Percent":
                                      MESSAGE(Text002,Totaling);
                                    ELSE
                                      IF Totaling <> '' THEN BEGIN
                                        AccSchedLine.COPYFILTER("Business Unit Filter",GLAcc."Business Unit Filter");
                                        AccSchedLine.COPYFILTER("G/L Budget Filter",GLAcc."Budget Filter");
                                        AccSchedManagement.SetGLAccRowFilters(GLAcc,AccSchedLine);
                                        AccSchedManagement.SetGLAccColumnFilters(GLAcc,AccSchedLine,SourceColumnLayout);
                                        IF AccSchedName."Analysis View Name" = '' THEN BEGIN
                                          AccSchedLine.COPYFILTER("Dimension 1 Filter",GLAcc."Global Dimension 1 Filter");
                                          AccSchedLine.COPYFILTER("Dimension 2 Filter",GLAcc."Global Dimension 2 Filter");
                                          AccSchedLine.COPYFILTER("Business Unit Filter",GLAcc."Business Unit Filter");
                                          GLAcc.FILTERGROUP(2);
                                          GLAcc.SETFILTER("Global Dimension 1 Filter",
                                            AccSchedManagement.GetDimTotalingFilter(1,AccSchedLine."Dimension 1 Totaling"));
                                          GLAcc.SETFILTER("Global Dimension 2 Filter",
                                            AccSchedManagement.GetDimTotalingFilter(2,AccSchedLine."Dimension 2 Totaling"));
                                          GLAcc.FILTERGROUP(6);
                                          GLAcc.SETFILTER(
                                            "Global Dimension 1 Filter",
                                            AccSchedManagement.GetDimTotalingFilter(1,SourceColumnLayout."Dimension 1 Totaling"));
                                          GLAcc.SETFILTER(
                                            "Global Dimension 2 Filter",
                                            AccSchedManagement.GetDimTotalingFilter(2,SourceColumnLayout."Dimension 2 Totaling"));
                                          GLAcc.SETFILTER("Business Unit Filter",SourceColumnLayout."Business Unit Totaling");
                                          GLAcc.FILTERGROUP(0);
                                          PAGE.RUN(PAGE::"Chart of Accounts (G/L)",GLAcc)
                                        END ELSE BEGIN
                                          GLAcc.COPYFILTER("Date Filter",GLAccAnalysisView."Date Filter");
                                          GLAcc.COPYFILTER("Budget Filter",GLAccAnalysisView."Budget Filter");
                                          GLAcc.COPYFILTER("Business Unit Filter",GLAccAnalysisView."Business Unit Filter");
                                          GLAccAnalysisView.SETRANGE("Analysis View Filter",AccSchedName."Analysis View Name");
                                          AccSchedLine.COPYFILTER("Dimension 1 Filter",GLAccAnalysisView."Dimension 1 Filter");
                                          AccSchedLine.COPYFILTER("Dimension 2 Filter",GLAccAnalysisView."Dimension 2 Filter");
                                          AccSchedLine.COPYFILTER("Dimension 3 Filter",GLAccAnalysisView."Dimension 3 Filter");
                                          AccSchedLine.COPYFILTER("Dimension 4 Filter",GLAccAnalysisView."Dimension 4 Filter");
                                          GLAccAnalysisView.FILTERGROUP(2);
                                          GLAccAnalysisView.SETFILTER(
                                            "Dimension 1 Filter",
                                            AccSchedManagement.GetDimTotalingFilter(1,AccSchedLine."Dimension 1 Totaling"));
                                          GLAccAnalysisView.SETFILTER(
                                            "Dimension 2 Filter",
                                            AccSchedManagement.GetDimTotalingFilter(2,AccSchedLine."Dimension 2 Totaling"));
                                          GLAccAnalysisView.SETFILTER(
                                            "Dimension 3 Filter",
                                            AccSchedManagement.GetDimTotalingFilter(3,AccSchedLine."Dimension 3 Totaling"));
                                          GLAccAnalysisView.SETFILTER(
                                            "Dimension 4 Filter",
                                            AccSchedManagement.GetDimTotalingFilter(4,AccSchedLine."Dimension 4 Totaling"));
                                          GLAccAnalysisView.FILTERGROUP(6);
                                          GLAccAnalysisView.SETFILTER(
                                            "Dimension 1 Filter",
                                            AccSchedManagement.GetDimTotalingFilter(1,SourceColumnLayout."Dimension 1 Totaling"));
                                          GLAccAnalysisView.SETFILTER(
                                            "Dimension 2 Filter",
                                            AccSchedManagement.GetDimTotalingFilter(2,SourceColumnLayout."Dimension 2 Totaling"));
                                          GLAccAnalysisView.SETFILTER(
                                            "Dimension 3 Filter",
                                            AccSchedManagement.GetDimTotalingFilter(3,SourceColumnLayout."Dimension 3 Totaling"));
                                          GLAccAnalysisView.SETFILTER(
                                            "Dimension 4 Filter",
                                            AccSchedManagement.GetDimTotalingFilter(4,SourceColumnLayout."Dimension 4 Totaling"));
                                          GLAccAnalysisView.SETFILTER("Business Unit Filter",SourceColumnLayout."Business Unit Totaling");
                                          GLAccAnalysisView.FILTERGROUP(0);
                                          CLEAR(ChartofAccAnalysisView);
                                          ChartofAccAnalysisView.InsertTempGLAccAnalysisViews(GLAcc);
                                          ChartofAccAnalysisView.SETTABLEVIEW(GLAccAnalysisView);
                                          ChartofAccAnalysisView.RUN;
                                        END;
                                      END;
                                  END;
                            END;
                             }

  }
  CODE
  {
    VAR
      GLSetup@1470004 : Record 98;
      AccSchedName@1470015 : Record 84;
      SourceAccScheduleLine@1470002 : Record 85;
      SourceColumnLayout@1470007 : Record 334;
      AccSchedCellValue@1470006 : TEMPORARY Record 342;
      AccSchedManagement@1470005 : Codeunit 8;
      AccSchedExtensionManagement@1470000 : Codeunit 26581;
      Text001@1470001 : TextConst 'ENU=Column formula: %1.;RUS=Формула столбца: %1.';
      Text002@1470009 : TextConst 'ENU=Row formula: %1.;RUS=Формула строки: %1.';
      Text003@1470008 : TextConst 'ENU=Row constant: %1.;RUS=Константа строки: %1.';
      Formula@1470011 : Text[250];
      StartDate@1470012 : Date;
      EndDate@1470013 : Date;
      EntryNo@1210000 : Integer;

    PROCEDURE InitParameters@1470009(VAR AccSchedLine@1470000 : Record 85;ColumnLayout@1470002 : Record 334;VAR Buffer@1470003 : Record 342);
    BEGIN
      SourceAccScheduleLine.COPY(AccSchedLine);
      AccSchedLine.TESTFIELD("Totaling Type",AccSchedLine."Totaling Type"::Formula);
      SourceColumnLayout := ColumnLayout;
      Formula := AccSchedLine.Totaling;

      IF Buffer.FINDSET THEN
        REPEAT
          AccSchedCellValue.TRANSFERFIELDS(Buffer);
          IF AccSchedCellValue.INSERT THEN;
        UNTIL Buffer.NEXT = 0;

      EvaluateExpression(TRUE,AccSchedLine.Totaling,AccSchedLine,SourceColumnLayout);
    END;

    LOCAL PROCEDURE EvaluateExpression@9(IsAccSchedLineExpression@1000 : Boolean;Expression@1001 : Text[250];AccSchedLine@1002 : Record 85;ColumnLayout@1003 : Record 334) : Decimal;
    VAR
      Result@1005 : Decimal;
      Parantheses@1006 : Integer;
      Operator@1007 : Char;
      LeftOperand@1008 : Text[250];
      RightOperand@1009 : Text[250];
      LeftResult@1010 : Decimal;
      RightResult@1011 : Decimal;
      i@1012 : Integer;
      IsExpression@1013 : Boolean;
      IsFilter@1014 : Boolean;
      Operators@1015 : Text[8];
      OperatorNo@1016 : Integer;
      AccSchedLineID@1017 : Integer;
    BEGIN
      Result := 0;

      GLSetup.GET;

      Expression := DELCHR(Expression,'<>',' ');
      IF STRLEN(Expression) > 0 THEN BEGIN
        Parantheses := 0;
        IsExpression := FALSE;
        Operators := '+-*/^%';
        OperatorNo := 1;
        REPEAT
          i := STRLEN(Expression);
          REPEAT
            IF Expression[i] = '(' THEN
              Parantheses := Parantheses + 1
            ELSE
              IF Expression[i] = ')' THEN
                Parantheses := Parantheses - 1;
            IF (Parantheses = 0) AND (Expression[i] = Operators[OperatorNo]) THEN
              IsExpression := TRUE
            ELSE
              i := i - 1;
          UNTIL IsExpression OR (i <= 0);
          IF NOT IsExpression THEN
            OperatorNo := OperatorNo + 1;
        UNTIL (OperatorNo > STRLEN(Operators)) OR IsExpression;
        IF IsExpression THEN BEGIN
          IF i > 1 THEN
            LeftOperand := COPYSTR(Expression,1,i - 1)
          ELSE
            LeftOperand := '';
          IF i < STRLEN(Expression) THEN
            RightOperand := COPYSTR(Expression,i + 1)
          ELSE
            RightOperand := '';
          Operator := Expression[i];
          LeftResult :=
            EvaluateExpression(
              IsAccSchedLineExpression,LeftOperand,AccSchedLine,ColumnLayout);
          RightResult :=
            EvaluateExpression(
              IsAccSchedLineExpression,RightOperand,AccSchedLine,ColumnLayout);
          CASE Operator OF
            '^':
              Result := POWER(LeftResult,RightResult);
            '%':
              IF RightResult = 0 THEN
                Result := 0
              ELSE
                Result := 100 * LeftResult / RightResult;
            '*':
              Result := LeftResult * RightResult;
            '/':
              IF RightResult = 0 THEN
                Result := 0
              ELSE
                Result := LeftResult / RightResult;
            '+':
              Result := LeftResult + RightResult;
            '-':
              Result := LeftResult - RightResult;
          END;
        END ELSE
          IF (Expression[1] = '(') AND (Expression[STRLEN(Expression)] = ')') THEN
            Result :=
              EvaluateExpression(
                IsAccSchedLineExpression,COPYSTR(Expression,2,STRLEN(Expression) - 2),
                AccSchedLine,ColumnLayout)
          ELSE BEGIN
            IsFilter :=
              (STRPOS(Expression,'..') +
               STRPOS(Expression,'|') +
               STRPOS(Expression,'<') +
               STRPOS(Expression,'>') +
               STRPOS(Expression,'&') +
               STRPOS(Expression,'=') > 0);
            IF (STRLEN(Expression) > 20) AND (NOT IsFilter) THEN
              EVALUATE(Result,Expression)
            ELSE
              IF IsAccSchedLineExpression THEN BEGIN
                AccSchedLine.SETRANGE("Schedule Name",AccSchedLine."Schedule Name");
                AccSchedLine.SETFILTER("Row No.",Expression);
                AccSchedLineID := AccSchedLine."Line No.";
                IF AccSchedLine.FINDSET THEN
                  REPEAT
                    IF AccSchedLine."Line No." <> AccSchedLineID THEN
                      Result := Result + CalcCellValue(AccSchedLine,ColumnLayout);
                  UNTIL AccSchedLine.NEXT = 0
                ELSE BEGIN
                  AccSchedLine.SETRANGE("Schedule Name",GLSetup."Shared Account Schedule");
                  IF AccSchedLine.FINDFIRST THEN
                    REPEAT
                      Result := Result + CalcCellValue(AccSchedLine,ColumnLayout);
                    UNTIL AccSchedLine.NEXT = 0;
                END
              END ELSE BEGIN
                ColumnLayout.SETRANGE("Column Layout Name",ColumnLayout."Column Layout Name");
                ColumnLayout.SETFILTER("Column No.",Expression);
                AccSchedLineID := ColumnLayout."Line No.";
                IF ColumnLayout.FINDSET THEN
                  REPEAT
                    IF ColumnLayout."Line No." <> AccSchedLineID THEN
                      Result := Result + CalcCellValue(AccSchedLine,ColumnLayout);
                  UNTIL ColumnLayout.NEXT = 0
              END;
          END;
      END;
      EXIT(Result);
    END;

    LOCAL PROCEDURE CalcCellValue@6(AccSchedLine@1000 : Record 85;ColumnLayout@1001 : Record 334) : Decimal;
    VAR
      Result@1003 : Decimal;
    BEGIN
      Result := 0;
      IF AccSchedCellValue.GET(AccSchedLine."Schedule Name",AccSchedLine."Line No.",ColumnLayout."Line No.") THEN
        Result := AccSchedCellValue.Value;

      AddFormulasExpression(AccSchedLine,Result);
      EXIT(Result);
    END;

    PROCEDURE AddFormulasExpression@1470007(AccSchedLine@1470000 : Record 85;Result@1470001 : Decimal);
    BEGIN
      EntryNo += 1;

      INIT;
      "Entry No." := EntryNo;
      Totaling := AccSchedLine.Totaling;
      Amount := Result;
      "Row No." := AccSchedLine."Row No.";
      "Totaling Type" := AccSchedLine."Totaling Type";
      "Schedule Name" := AccSchedLine."Schedule Name";
      "Acc. Schedule Line No." := AccSchedLine."Line No.";
      INSERT;
    END;

    BEGIN
    END.
  }
}

