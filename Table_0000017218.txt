OBJECT Table 17218 Tax Register Dim. Filter
{
  OBJECT-PROPERTIES
  {
    Date=18.12.13;
    Time=12:00:00;
    Version List=NAVRU7.10;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TaxRegSection.GET("Section Code");
               TaxRegSection.ValidateChangeDeclaration;

               TaxRegDimFilter.SETCURRENTKEY("Section Code","Entry No.");
               TaxRegDimFilter.SETRANGE("Section Code","Section Code");
               IF TaxRegDimFilter.FINDLAST THEN
                 "Entry No." := TaxRegDimFilter."Entry No." + 1
               ELSE
                 "Entry No." := 1;
             END;

    OnModify=BEGIN
               IF "Dimension Value Filter" <> xRec."Dimension Value Filter" THEN BEGIN
                 TaxRegSection.GET("Section Code");
                 TaxRegSection.ValidateChangeDeclaration;
               END;
             END;

    OnDelete=BEGIN
               TaxRegSection.GET("Section Code");
               TaxRegSection.ValidateChangeDeclaration;
             END;

    OnRename=BEGIN
               ERROR(Text1001,TABLECAPTION);
             END;

    CaptionML=[ENU=Tax Register Dim. Filter;
               RUS=Фильтр изм. налогового регистра];
    LookupPageID=Page17241;
  }
  FIELDS
  {
    { 1   ;   ;Section Code        ;Code10        ;TableRelation="Tax Register Section";
                                                   CaptionML=[ENU=Section Code;
                                                              RUS=Код секции];
                                                   NotBlank=Yes }
    { 2   ;   ;Tax Register No.    ;Code10        ;TableRelation="Tax Register".No.;
                                                   CaptionML=[ENU=Tax Register No.;
                                                              RUS=Код налог. регистра];
                                                   NotBlank=Yes }
    { 3   ;   ;Define              ;Option        ;CaptionML=[ENU=Define;
                                                              RUS=Определить];
                                                   OptionCaptionML=[ENU=Template,Entry Setup;
                                                                    RUS=шаблон,настройку операций];
                                                   OptionString=Template,Entry Setup }
    { 4   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              RUS=Номер строки] }
    { 5   ;   ;Dimension Code      ;Code20        ;TableRelation=Dimension;
                                                   OnLookup=BEGIN
                                                              Dimension.RESET;
                                                              Dimension.FILTERGROUP(2);
                                                              FILTERGROUP(2);
                                                              COPYFILTER("Dimension Code",Dimension.Code);
                                                              Dimension.FILTERGROUP(0);
                                                              FILTERGROUP(0);
                                                              IF ACTION::LookupOK = PAGE.RUNMODAL(0,Dimension) THEN
                                                                "Dimension Code" := Dimension.Code;
                                                            END;

                                                   CaptionML=[ENU=Dimension Code;
                                                              RUS=Код измерения];
                                                   NotBlank=Yes }
    { 6   ;   ;Dimension Value Filter;Code250     ;TableRelation="Dimension Value".Code WHERE (Dimension Code=FIELD(Dimension Code));
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Dimension Value Filter;
                                                              RUS=Фильтр по значению измерения] }
    { 7   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              RUS=Номер операции] }
    { 8   ;   ;If No Value         ;Option        ;OnValidate=BEGIN
                                                                IF Define = Define::Template THEN
                                                                  "If No Value" := "If No Value"::Ignore;
                                                              END;

                                                   CaptionML=[ENU=If No Value;
                                                              RUS=Если нет значения];
                                                   OptionCaptionML=[ENU=Ignore,Skip,Confirm,Error;
                                                                    RUS=Игнорировать,Пропустить,Подтвердить,Ошибка];
                                                   OptionString=Ignore,Skip,Confirm,Error }
    { 9   ;   ;Dimension Name      ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Dimension.Name WHERE (Code=FIELD(Dimension Code)));
                                                   CaptionML=[ENU=Dimension Name;
                                                              RUS=Название измерения];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Section Code,Tax Register No.,Define,Line No.,Dimension Code;
                                                   Clustered=Yes }
    {    ;Section Code,Entry No.                   }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Dimension@1000 : Record 348;
      TaxRegDimFilter@1002 : Record 17218;
      Text1001@1003 : TextConst 'ENU=You can''t rename an %1.;RUS=Нельзя переименовать %1.';
      TaxRegSection@1004 : Record 17207;

    PROCEDURE TaxRegDescription@1() : Text[250];
    VAR
      TaxRegName@1000 : Record 17200;
    BEGIN
      IF TaxRegName.GET("Section Code","Tax Register No.") THEN
        EXIT(TaxRegName.Description);
    END;

    BEGIN
    END.
  }
}

