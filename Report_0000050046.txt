OBJECT Report 50046 Import Directory General
{
  OBJECT-PROPERTIES
  {
    Date=27.03.17;
    Time=14:18:03;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Import Directory General;
               RUS=Загрузка Общих Справочников];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   JobProcStatusTemp."Company No." := COMPANYNAME;
                   JobProcStatusTemp."Line No." := 0;
                   JobProcStatusTemp.Blocked := FALSE;
                   JobProcStatusTemp.Process := '';
                   JobProcStatusTemp.Description := '';
                   JobProcStatusTemp."Auto Start" := FALSE;
                   JobProcStatusTemp.Dependency := 0;
                   JobProcStatusTemp."Type Processing" := JobProcStatusTemp."Type Processing"::Reference;
                   JobProcStatusTemp."Type Reference" := JobProcStatusTemp."Type Reference"::General;
                   JobProcStatusTemp.Processor := '';
                   JobProcStatusTemp."Status Monitor" := JobProcStatusTemp."Status Monitor"::"Loading Buffer";
                   //JobProcStatusTemp."Import Format" := ;
                   //JobProcStatusTemp."External Source" := ConsSource."External System";
                   JobProcStatusTemp."Name Service NAS" := '';
                   JobProcStatusTemp."Transaction No." := 0;
                   JobProcStatusTemp.Status := JobProcStatusTemp.Status::Working;
                   JobProcStatusTemp."Time Status" := CREATEDATETIME(TODAY,TIME);
                   JobProcStatusTemp."Cons. Register" := 0;
                   //JobProcStatusTemp."Object No."
                   //JobProcStatusTemp."Record ID"

                   LoadElementRef.GetReferenceList(TableNo);
                   JobProcStatusTemp."Processing Mode" := JobProcStatusTemp."Processing Mode"::Test;
                   InitTableNo[1] := TRUE;
                   InitTableNo[2] := TRUE;
                   InitTableNo[3] := TRUE;
                   InitTableNo[4] := TRUE;
                   InitTableNo[5] := TRUE;
                   InitTableNo[6] := TRUE;
                   InitTableNo[7] := TRUE;
                   InitTableNo[8] := TRUE;
                   InitTableNo[9] := TRUE;
                   InitTableNo[10] := TRUE;
                   InitTableNo[11] := TRUE;
                   InitTableNo[12] := TRUE;
                   InitTableNo[13] := FALSE;
                   InitTableNo[14] := TRUE;
                   //NC MTF01 > PCH
                   InitTableNo[15] := TRUE;
                   //NC MTF01 < PCH
                   Execute(JobProcStatusTemp,InitTableNo,SelectionTableNo);
                 END;

    OnPreReport=BEGIN

                  JobProcStatusTemp."Processing Mode" := JobProcStatusTemp."Processing Mode"::Load;
                  Execute(JobProcStatusTemp,SelectionTableNo,ResultTableNo);
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      LoadElementRef@1000000002 : Codeunit 50013;
      TableNo@1000000001 : ARRAY [15] OF Integer;
      InitTableNo@1000000000 : ARRAY [15] OF Boolean;
      SelectionTableNo@1000000003 : ARRAY [15] OF Boolean;
      ResultTableNo@1000000014 : ARRAY [15] OF Boolean;
      JobProcStatusTemp@1000000007 : TEMPORARY Record 50063;
      Text001@1000000009 : TextConst 'ENU=Download of directories...;RUS=Загрузка Справочников...';
      Text002@1000000010 : TextConst 'ENU=Directories:        #1################################;RUS=Справочник:         #1################################';
      Text003@1000000011 : TextConst 'ENU=Process:            @2@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;RUS=Процент выполнения: @2@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@';
      Text004@1000000012 : TextConst 'ENU=Initializing ...;RUS=Инициализация...';
      Text005@1000000013 : TextConst 'ENU=When you start the directory %1 error %2;RUS=При загрузке справочника %1 возникла ошибка %2';

    PROCEDURE Execute@1000000017(VAR JobPrStatusTemp@1000000000 : TEMPORARY Record 50063;VAR SelTableNo@1000000007 : ARRAY [15] OF Boolean;VAR CompTableNo@1000000001 : ARRAY [15] OF Boolean);
    VAR
      CodeunitNo@1000000006 : Integer;
      i@1000000005 : Integer;
      iCount@1000000004 : Integer;
      Indicator@1000000003 : Dialog;
      Object@1000000002 : Record 2000000001;
    BEGIN
      iCount := ARRAYLEN(TableNo);

      IF GUIALLOWED THEN BEGIN
        IF JobProcStatusTemp."Processing Mode" = JobProcStatusTemp."Processing Mode"::Load THEN
          Indicator.OPEN(Text001   + '\' +
                         Text002 + '\' +
                         Text003)
        ELSE
          Indicator.OPEN(Text004   + '\' +
                         Text002 + '\' +
                         Text003);
      END;

      FOR i := 1 TO iCount DO BEGIN
        CompTableNo[i] := FALSE;
        JobPrStatusTemp.isOK := FALSE;
        Object.GET(Object.Type::Table,'',TableNo[i]);
        Object.CALCFIELDS(Caption);
        Indicator.UPDATE(1,Object.Caption);
        IF GUIALLOWED THEN BEGIN
          Indicator.UPDATE(1,Object.Caption);
          Indicator.UPDATE(2, ROUND((i/iCount)*10000, 1));
        END;
        IF SelTableNo[i] THEN BEGIN
          JobPrStatusTemp."Object No." := TableNo[i];
          IF JobPrStatusTemp."Object No." = DATABASE::"Buffer Operation Closing" THEN
            CodeunitNo := CODEUNIT::"Load Closing Operation"
          ELSE
            CodeunitNo := CODEUNIT::"Load Reference";

          IF NOT CODEUNIT.RUN(CodeunitNo,JobPrStatusTemp) THEN BEGIN
            MESSAGE(Text005,Object.Caption,GETLASTERRORTEXT);
            CompTableNo[i] := FALSE;
          END ELSE
            CompTableNo[i] := JobPrStatusTemp.isOK;
        END;
      END;

      IF GUIALLOWED THEN
        Indicator.CLOSE;
    END;

    BEGIN
    {
      NC MDB01 PCH создан отчет
      Список:
      TableNo[1] := DATABASE::"Buffer Dimension Value";
      TableNo[2] := DATABASE::"Buffer Country/Region";
      TableNo[3] := DATABASE::"Buffer Industry Group";
      TableNo[4] := DATABASE::"Buffer Stock Exchange";
      TableNo[5] := DATABASE::"Buffer Currency Exchange Rate";
      TableNo[6] := DATABASE::"Buffer Operation Closing";
      TableNo[7] := DATABASE::"Buffer Customer";
      TableNo[8] := DATABASE::"Buffer Customer Credit Rating";
      TableNo[9] := DATABASE::"Buffer Bank Account";
      TableNo[10] := DATABASE::"Buffer Financial Instrument";
      TableNo[11] := DATABASE::"Buffer FI Rates";
      TableNo[12] := DATABASE::"Buffer Deal";
      TableNo[13] := DATABASE::"Buffer FA"; // Не грузится
      TableNo[14] := DATABASE::"Buffer FI Value";
      //NC MTF01 > PCH
      TableNo[15] := DATABASE::"Buffer FI Value";
      //NC MTF01 < PCH
    }
    END.
  }
  RDLDATA
  {
  }
}

