OBJECT Page 981 Payment Registration
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Payment Registration;
               RUS=Регистрация платежей];
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table981;
    DataCaptionExpr=BalAccCaption;
    PageType=Worksheet;
    SourceTableTemporary=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Post,Navigate,Search,Setup;
                                RUS=Создать,Обработать,Отчет,Учесть,Перейти,Поиск,Настроить];
    OnOpenPage=BEGIN
                 PaymentRegistrationMgt.RunSetup;
                 FormatPageCaption;
               END;

    OnFindRecord=BEGIN
                   Reload;
                   PaymentRegistrationMgt.CalculateBalance(PostedBalance,UnpostedBalance);
                   TotalBalance := PostedBalance + UnpostedBalance;
                   EXIT(FIND(Which));
                 END;

    OnAfterGetRecord=BEGIN
                       SetUserInteractions;
                     END;

    OnQueryClosePage=BEGIN
                       EXIT(PaymentRegistrationMgt.ConfirmClose(Rec));
                     END;

    ActionList=ACTIONS
    {
      { 37      ;    ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 21      ;1   ;ActionGroup;
                      CaptionML=[ENU=Related Information;
                                 RUS=Связанные сведения];
                      Image=Navigate }
      { 30      ;2   ;Action    ;
                      Name=Navigate;
                      CaptionML=[ENU=Navigate;
                                 RUS=Навигатор];
                      ToolTipML=[ENU=Find all entries and documents that exist for the document number and posting date on the selected entry or document.;
                                 RUS=Поиск всех операций и документов, существующих для номера документа и даты учета в выбранной операции или в выбранном документе.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Navigate;
                      PromotedCategory=Category5;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 Navigate;
                               END;
                                }
      { 28      ;2   ;Action    ;
                      Name=Details;
                      CaptionML=[ENU=Details;
                                 RUS=Подробности];
                      ToolTipML=[ENU=View additional information about the document on the selected line and link to the related customer card.;
                                 RUS=Просмотр дополнительных сведений о документе в выбранной строке и связывание с соответствующей карточкой клиента.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ViewDetails;
                      PromotedCategory=Category5;
                      Scope=Repeater;
                      OnAction=BEGIN
                                 PAGE.RUNMODAL(PAGE::"Payment Registration Details",Rec);
                               END;
                                }
      { 46      ;1   ;ActionGroup;
                      CaptionML=[ENU=Search;
                                 RUS=Поиск] }
      { 16      ;2   ;Action    ;
                      Name=SearchCustomer;
                      CaptionML=[ENU=Search Customers;
                                 RUS=Поиск клиентов];
                      ToolTipML=[ENU=Open the list of customers, for example, to check for missing payments from a specific customer.;
                                 RUS=Открытие списка клиентов, например для проверки отсутствующих платежей от определенного клиента.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 22;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Navigate;
                      PromotedCategory=Category6 }
      { 17      ;2   ;Action    ;
                      Name=SearchDocument;
                      CaptionML=[ENU=Search Documents;
                                 RUS=Поиск документов];
                      ToolTipML=[ENU=Find documents that are not fully invoiced, for example, to post an invoice so that the received payment can be processed.;
                                 RUS=Поиск документов, по которым счета выставлены не полностью, например для учета счета, который позволит обработать полученный платеж.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 985;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Navigate;
                      PromotedCategory=Category6 }
      { 13      ;0   ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 14      ;1   ;ActionGroup;
                      CaptionML=[ENU=Post;
                                 RUS=Учет];
                      Image=Post }
      { 15      ;2   ;Action    ;
                      Name=PostPayments;
                      ShortCutKey=F9;
                      CaptionML=[ENU=Post Payments;
                                 RUS=Учесть платежи];
                      ToolTipML=[ENU=Post payment of amounts on the lines where the Payment Made check box is selected.;
                                 RUS=Учет оплаты сумм в строках с установленным флажком "Оплата выполнена".];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 PaymentRegistrationMgt.ConfirmPost(Rec);
                               END;
                                }
      { 22      ;2   ;Action    ;
                      Name=PostAsLump;
                      CaptionML=[ENU=Post as Lump Payment;
                                 RUS=Учет в качестве единовременного платежа];
                      ToolTipML=[ENU=Post payment as a lump sum of amounts on lines where the Payment Made check box is selected.;
                                 RUS=Учет платежа как единовременной оплаты сумм из строк с установленным флажком "Оплата выполнена".];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=PostBatch;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 PaymentRegistrationMgt.ConfirmPostLumpPayment(Rec);
                               END;
                                }
      { 25      ;2   ;Action    ;
                      Name=PreviewPayments;
                      CaptionML=[ENU=Preview Posting Payments;
                                 RUS=Предварительный просмотр учета платежей];
                      ToolTipML=[ENU=Review the different types of entries that will be created when you post the document or journal.;
                                 RUS=Просмотр различных типов операций, которые будут созданы в результате учета документа или журнала.];
                      ApplicationArea=#Basic,#Suite;
                      Image=ViewPostedOrder;
                      OnAction=VAR
                                 PaymentRegistrationMgt@1000 : Codeunit 980;
                               BEGIN
                                 PaymentRegistrationMgt.Preview(Rec,FALSE);
                               END;
                                }
      { 39      ;2   ;Action    ;
                      Name=PreviewLump;
                      CaptionML=[ENU=Preview Posting Payments as Lump;
                                 RUS=Предварительный просмотр учета в качестве единовременного платежа];
                      ToolTipML=[ENU=Review the different types of entries that will be created when you post the document or journal as a lump sum of amounts.;
                                 RUS=Просмотр различных типов операций, которые будут созданы в результате учета документа или журнала как единовременного платежа сумм.];
                      ApplicationArea=#Basic,#Suite;
                      Image=ViewPostedOrder;
                      OnAction=VAR
                                 PaymentRegistrationMgt@1000 : Codeunit 980;
                               BEGIN
                                 PaymentRegistrationMgt.Preview(Rec,TRUE);
                               END;
                                }
      { 38      ;1   ;ActionGroup;
                      CaptionML=[ENU=New Documents;
                                 RUS=Новые документы] }
      { 19      ;2   ;Action    ;
                      Name=OpenGenJnl;
                      CaptionML=[ENU=General Journal;
                                 RUS=Финансовый журнал];
                      ToolTipML=[ENU=Open the general journal, for example, to record or post a payment that has no related document.;
                                 RUS=Открытие финансового журнала, например для записи или учета платежа, у которого нет связанного документа.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=GLRegisters;
                      OnAction=BEGIN
                                 PaymentRegistrationMgt.OpenGenJnl
                               END;
                                }
      { 18      ;2   ;Action    ;
                      Name=FinanceChargeMemo;
                      CaptionML=[ENU=Finance Charge Memo;
                                 RUS=Процент-нота];
                      ToolTipML=[ENU=Create a finance charge memo for the customer on the selected line, for example, to issue a finance charge for late payment.;
                                 RUS=Создание процент-ноты для клиента в выбранной строке, например для отправки процент-ноты за просрочку оплаты.];
                      RunObject=Page 446;
                      RunPageLink=Customer No.=FIELD(Source No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=FinChargeMemo;
                      RunPageMode=Create;
                      Scope=Repeater }
      { 36      ;1   ;ActionGroup;
                      CaptionML=[ENU=Setup;
                                 RUS=Настройка];
                      Image=Setup }
      { 31      ;2   ;Action    ;
                      Name=Setup;
                      CaptionML=[ENU=Setup;
                                 RUS=Настройка];
                      ToolTipML=[ENU=Adjust how payments are posted and which balancing account to use.;
                                 RUS=Настройка способа учета платежей и используемого балансирующего счета.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Setup;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 IF PAGE.RUNMODAL(PAGE::"Payment Registration Setup") = ACTION::LookupOK THEN
                                   FormatPageCaption
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the customer or vendor that the payment relates to.;
                           RUS=Определяет номер клиента или поставщика, к которым относится платеж.];
                SourceExpr="Source No.";
                Visible=FALSE;
                Editable=FALSE }

    { 4   ;2   ;Field     ;
                DrillDown=Yes;
                ToolTipML=[ENU=Specifies the name of the customer or vendor that the payment relates to.;
                           RUS=Определяет имя клиента или поставщика, к которым относится платеж.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Name;
                Editable=FALSE;
                OnDrillDown=VAR
                              Customer@1000 : Record 18;
                            BEGIN
                              Customer.GET("Source No.");
                              PAGE.RUN(PAGE::"Customer Card",Customer);
                            END;
                             }

    { 20  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the document that the payment relates to.;
                           RUS=Определяет номер документа, к которому относится платеж.];
                SourceExpr="Document No.";
                Visible=FALSE;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              Navigate;
                            END;
                             }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of document that the payment relates to.;
                           RUS=Определяет тип документа, к которому относится платеж.];
                SourceExpr="Document Type";
                Visible=FALSE;
                Editable=FALSE }

    { 7   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the invoice transaction that the payment relates to.;
                           RUS=Определяет транзакцию по счету, к которой относится платеж.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                Editable=FALSE }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the payment due date on the related document.;
                           RUS=Определяет крайний срок оплаты по связанному документу.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Due Date";
                Editable=FALSE;
                StyleExpr=DueDateStyle }

    { 9   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount that remains to be paid on the document.;
                           RUS=Определяет сумму, которую осталось оплатить по документу.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Remaining Amount";
                Editable=FALSE;
                StyleExpr=PmtDiscStyle }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if you have received or made payment for the document.;
                           RUS=Указывает, получен или сделан платеж по документу.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Made";
                OnValidate=BEGIN
                             SetUserInteractions;
                           END;
                            }

    { 11  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the payment was made.;
                           RUS=Определяет дату, когда был осуществлен платеж.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Date Received";
                StyleExpr=DueDateStyle;
                OnValidate=BEGIN
                             SetUserInteractions;
                           END;
                            }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount that is paid in the bank account.;
                           RUS=Определяет сумму, оплаченную для этого банковского счета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Amount Received";
                OnValidate=BEGIN
                             SetUserInteractions;
                           END;
                            }

    { 29  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the amount on the document must be paid before the payment discount is granted.;
                           RUS=Определяет дату, когда сумма по документу должна быть оплачена, прежде чем будет предоставлена скидка по оплате.];
                SourceExpr="Pmt. Discount Date";
                AutoFormatType=1;
                Visible=FALSE;
                StyleExpr=PmtDiscStyle;
                OnValidate=BEGIN
                             SetUserInteractions
                           END;
                            }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Rem Amount Incl. Discount;
                           RUS=Сумма остатка, включая скидку];
                ToolTipML=[ENU=Specifies the remaining amount after the payment discount is deducted.;
                           RUS=Определяет оставшуюся сумму после вычета скидки по оплате.];
                SourceExpr="Rem. Amt. after Discount";
                Visible=FALSE;
                Editable=FALSE }

    { 32  ;1   ;Group     ;
                CaptionML=[ENU=Bal. Account Details;
                           RUS=Сведения о балансовом счете];
                GroupType=GridLayout }

    { 33  ;2   ;Field     ;
                Name=PostedBalance;
                CaptionML=[ENU=Posted Balance;
                           RUS=Учтенное сальдо];
                ToolTipML=[ENU=Specifies the balance of payments posted to the balancing account that is being used in the Payment Registration window.;
                           RUS=Определяет баланс платежей, учтенный на балансирующем счету, который используется в окне "Регистрация платежей".];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PostedBalance;
                Editable=FALSE }

    { 34  ;2   ;Field     ;
                Name=UnpostedBalance;
                CaptionML=[ENU=Unposted Balance;
                           RUS=Неучтенное сальдо];
                ToolTipML=[ENU=Specifies the amount that exists on unposted journal lines with the same balancing account as the one used in the Payment Registration window.;
                           RUS=Определяет сумму в неучтенных строках журнала с тем же балансирующим счетом, который используется в окне "Регистрация платежей".];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=UnpostedBalance;
                Editable=FALSE }

    { 35  ;2   ;Field     ;
                Name=TotalBalance;
                CaptionML=[ENU=Total Balance;
                           RUS=Общее сальдо];
                ToolTipML=[ENU=Specifies the sum of posted amounts and unposted journal line amounts for the balancing account that is being used on the Payment Registration page. The value in this field is the sum of values in the Posted Balance and the Unposted Balance fields.;
                           RUS=Определяет сумму учтенных сумм и неучтенных сумм строк журнала для балансирующего счета, используемого на странице "Регистрация платежей". Значение в этом поле представляет собой сумму значений в полях "Учтенное сальдо" и "Неучтенное сальдо".];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=TotalBalance;
                Importance=Promoted;
                Editable=FALSE }

    { 27  ;1   ;Group      }

    { 26  ;2   ;Group     ;
                GroupType=FixedLayout }

    { 24  ;3   ;Group     ;
                GroupType=Group }

    { 23  ;4   ;Field     ;
                ToolTipML=[ENU=Specifies a warning about the payment, such as past due date.;
                           RUS=Определяет предупреждение о платеже, например после истечения срока оплаты.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Warning;
                Editable=FALSE;
                Style=Unfavorable;
                StyleExpr=TRUE }

  }
  CODE
  {
    VAR
      PaymentRegistrationMgt@1001 : Codeunit 980;
      BalAccCaption@1002 : Text;
      PmtDiscStyle@1000 : Text;
      DueDateStyle@1004 : Text;
      Warning@1003 : Text;
      PostedBalance@1005 : Decimal;
      UnpostedBalance@1006 : Decimal;
      TotalBalance@1007 : Decimal;

    LOCAL PROCEDURE FormatPageCaption@1();
    VAR
      PaymentRegistrationSetup@1000 : Record 980;
    BEGIN
      PaymentRegistrationSetup.GET(USERID);
      BalAccCaption := FORMAT(PaymentRegistrationSetup."Bal. Account Type") + ' - ' + PaymentRegistrationSetup."Bal. Account No.";
    END;

    LOCAL PROCEDURE SetUserInteractions@2();
    BEGIN
      PmtDiscStyle := GetPmtDiscStyle;
      DueDateStyle := GetDueDateStyle;
      Warning := GetWarning;
    END;

    BEGIN
    END.
  }
}

