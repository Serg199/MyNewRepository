OBJECT Report 17362 Salary Reference
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Salary Reference;
               RUS=Ссылка на оклад];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF DocumentDate = 0D THEN
                    ERROR(Text000);

                  HumanResSetup.GET;
                  CompanyInfo.GET;

                  HumanResSetup.TESTFIELD("Salary Reference Template Code");
                  FileName := ExcelTemplate.OpenTemplate(HumanResSetup."Salary Reference Template Code");

                  ExcelMgt.OpenBook(FileName);
                  ExcelMgt.OpenSheet('TDSheet');
                END;

    OnPostReport=BEGIN
                   IF NOT TestMode THEN
                     ExcelMgt.GiveUserControl
                   ELSE
                     ExcelMgt.QuitXlApp;
                 END;

  }
  DATASET
  {
    { 1709;    ;DataItem;                    ;
               DataItemTable=Table17350;
               DataItemTableView=SORTING(No.);
               OnAfterGetRecord=VAR
                                  PersonDocument@1210003 : Record 17352;
                                  CompanyAddr@1210005 : Record 12425;
                                  LocalReportMgt@1210004 : Codeunit 12401;
                                  CompanyName@1210006 : Text[60];
                                  RowNo@1210007 : Integer;
                                  StartYear@1210008 : Integer;
                                  EndYear@1210009 : Integer;
                                BEGIN
                                  Employee.SETRANGE("Person No.","No.");
                                  IF NOT Employee.FINDFIRST THEN
                                    ExcelMgt.ErrorExcelProcessing(STRSUBSTNO(Text026,"No."));

                                  EndYear := DATE2DMY(DocumentDate,3);
                                  StartYear := FindPeriodStartYear("No.",EndYear);

                                  ExcelMgt.FillCell('C9',FORMAT(DocumentDate));

                                  ExcelMgt.FillCell('F13',LocalReportMgt.GetCompanyName);
                                  CompanyAddr.RESET;
                                  CompanyAddr.SETRANGE("Address Type",CompanyAddr."Address Type"::"Medical Fund");
                                  IF CompanyAddr.FINDFIRST THEN BEGIN
                                    CompanyName := CompanyAddr.Name;
                                    IF CompanyAddr."Name 2" <> '' THEN
                                      CompanyName := CompanyName + ' ' + DELCHR(CompanyAddr."Name 2",'<');
                                    ExcelMgt.FillCell('A14',CompanyName);
                                  END;

                                  ExcelMgt.FillCell('F19',CompanyInfo."FSI Registration No.");
                                  ExcelMgt.FillCell('E21',CompanyInfo."Social Insurance Code");
                                  ExcelMgt.FillCell('J21',CompanyInfo."VAT Registration No." + '/' + CompanyInfo."KPP Code");
                                  ExcelMgt.FillCell('A24',LocalReportMgt.GetLegalAddress);
                                  ExcelMgt.FillCell('D25',CompanyInfo."Phone No.");
                                  ExcelMgt.FillCell('E28',Employee.GetFullNameOnDate(DocumentDate));
                                  Person.GetIdentityDoc(CALCDATE('<CY>',DocumentDate),PersonDocument);
                                  ExcelMgt.FillCell('B30',PersonDocument."Document Series");
                                  ExcelMgt.FillCell('F30',PersonDocument."Document No.");
                                  ExcelMgt.FillCell('A31',PersonDocument."Issue Authority" + ' ' + FORMAT(PersonDocument."Issue Date"));
                                  FillPersonAddrInfo("No.");
                                  ExcelMgt.FillCell('B38',"Social Security No.");

                                  RowNo := 40;
                                  FillPersonJobHistoryInfo("No.",StartYear,EndYear,RowNo);

                                  RowNo += 2;
                                  FillSalaryInfo("No.",StartYear,EndYear,RowNo);

                                  RowNo += 1;
                                  FillAbsenceInfo("No.",StartYear,EndYear,RowNo);

                                  RowNo += 3;
                                  ExcelMgt.FillCell('J' + FORMAT(RowNo),CompanyInfo."Director Name");
                                  RowNo += 3;
                                  ExcelMgt.FillCell('J' + FORMAT(RowNo),CompanyInfo."Accountant Name");
                                END;

               ReqFilterFields=No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   DocumentDate := TODAY;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             RUS=Параметры] }

      { 5   ;2   ;Field     ;
                  CaptionML=[ENU=Document Date;
                             RUS=Дата документа];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=DocumentDate }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1470108 : TextConst 'ENU=Enter Create Date.;RUS=Введите дату создания';
      Text016@1470123 : TextConst 'ENU=Registration address is missing for employee %1.;RUS=Адрес регистрации для сотрудника %1 отсутствует.';
      Text017@1470124 : TextConst 'ENU=Registration post code is missing for employee %1.;RUS=Почтовый индекс регистрации для сотрудника %1 отсутствует.';
      Text026@1210024 : TextConst 'ENU=There is no Employee No. associated with Person No. %1.;RUS=Нет кода сотрудника, соответствующего коду физического лица %1.';
      HumanResSetup@1210000 : Record 5218;
      CompanyInfo@1210001 : Record 79;
      ExcelTemplate@1210004 : Record 14919;
      Employee@1210006 : Record 5200;
      ExcelMgt@1210005 : Codeunit 12416;
      DocumentDate@1210002 : Date;
      FileName@1210003 : Text[250];
      SalaryRefFormatTxt@1210007 : TextConst 'ENU=%1 (%2);RUS=%1 (%2)';
      TestMode@1210008 : Boolean;

    LOCAL PROCEDURE ChildCareLeaveInPeriodExists@1210009(PersonNo@1210002 : Code[20];YearNo@1210000 : Integer) : Boolean;
    VAR
      AbsenceEntry@1210001 : Record 17389;
    BEGIN
      WITH AbsenceEntry DO BEGIN
        SETCURRENTKEY("Employee No.","Time Activity Code","Entry Type","Start Date");
        SETRANGE("Person No.",PersonNo);
        SETRANGE("Entry Type","Entry Type"::Usage);
        SETFILTER(
          "Sick Leave Type",
          '%1|%2|%3',
          "Sick Leave Type"::"Pregnancy Leave","Sick Leave Type"::"Child Care 1.5 years","Sick Leave Type"::"Child Care 3 years");
        SETFILTER("Start Date",'<=%1',LastDayOfYear(YearNo));
        SETFILTER("End Date",'>=%1',FirstDayOfYear(YearNo));

        EXIT(NOT ISEMPTY)
      END;
    END;

    LOCAL PROCEDURE GetEmployeWorkStartYear@1210007(PersonNo@1210000 : Code[20]) : Integer;
    VAR
      PersonLabContractDate@1210001 : Date;
      PersonPreviousJobDate@1210003 : Date;
    BEGIN
      PersonLabContractDate := GetLaborContractStartDate(PersonNo);
      PersonPreviousJobDate := GetPreviousJobStartDate(PersonNo);

      IF PersonPreviousJobDate = 0D THEN
        EXIT(DATE2DMY(PersonLabContractDate,3));

      EXIT(DATE2DMY(MinOfTwoDates(PersonLabContractDate,PersonPreviousJobDate),3));
    END;

    LOCAL PROCEDURE GetLaborContractStartDate@1210012(PersonNo@1210001 : Code[20]) : Date;
    VAR
      LaborContract@1210000 : Record 17360;
    BEGIN
      WITH LaborContract DO BEGIN
        SETCURRENTKEY("Contract Type","Person No.","Starting Date");
        SETRANGE("Contract Type","Contract Type"::"Labor Contract");
        SETRANGE("Person No.",PersonNo);
        SETFILTER(Status,'%1|%2',Status::Approved,Status::Closed);
        FINDFIRST;

        EXIT("Starting Date");
      END;
    END;

    LOCAL PROCEDURE GetPreviousJobStartDate@1210018(PersonNo@1210000 : Code[20]) : Date;
    VAR
      PersonJobHistory@1210001 : Record 17354;
    BEGIN
      WITH PersonJobHistory DO BEGIN
        SETRANGE("Person No.",PersonNo);
        IF FINDFIRST THEN
          EXIT("Starting Date");

        EXIT(0D);
      END;
    END;

    LOCAL PROCEDURE DuplicateExcelLines@1210000(FirstRowNo@1210000 : Integer;LastRowNo@1210003 : Integer;LineCount@1210001 : Integer);
    VAR
      i@1210002 : Integer;
    BEGIN
      FOR i := 1 TO LineCount DO
        ExcelMgt.CopyRowsTo(FirstRowNo,LastRowNo,LastRowNo + 1);
    END;

    LOCAL PROCEDURE FillAbsenceInfo@1210004(PersonNo@1210003 : Code[20];StartYear@1210002 : Integer;EndYear@1210001 : Integer;VAR RowNo@1210000 : Integer);
    VAR
      PayrollPeriod@1210014 : Record 17426;
      PersonExcludedDays@1210012 : Record 17399;
      DateRec@1210004 : Record 2000000007;
      ExcludedDaysPerYear@1210010 : Integer;
      AbsenceLineNo@1210011 : Integer;
    BEGIN
      DateRec.SETRANGE("Period Type",DateRec."Period Type"::Year);
      DateRec.SETRANGE("Period No.",StartYear,EndYear);
      IF DateRec.FINDSET THEN BEGIN
        DuplicateExcelLines(RowNo,RowNo + 3,DateRec.COUNT - 1);

        REPEAT
          ExcelMgt.FillCell('A' + FORMAT(RowNo),FORMAT(DateRec."Period No."));
          ExcludedDaysPerYear := 0;
          AbsenceLineNo := 0;

          PersonExcludedDays.SETRANGE("Person No.",PersonNo);
          PersonExcludedDays.SETFILTER(
            "Period Code",'%1..%2',
            PayrollPeriod.PeriodByDate(DateRec."Period Start"),PayrollPeriod.PeriodByDate(NORMALDATE(DateRec."Period End")));
          IF PersonExcludedDays.FIND('+') THEN
            REPEAT
              AbsenceLineNo += 1;
              IF AbsenceLineNo > 1 THEN
                DuplicateExcelLines(RowNo + 2,RowNo + 3,1);

              ExcludedDaysPerYear += PersonExcludedDays."Calendar Days";
              ExcelMgt.FillCell('B' + FORMAT(RowNo + 2),FORMAT(PersonExcludedDays."Absence Starting Date"));
              ExcelMgt.FillCell('F' + FORMAT(RowNo + 2),FORMAT(PersonExcludedDays."Absence Ending Date"));
              ExcelMgt.FillCell('J' + FORMAT(RowNo + 2),FORMAT(PersonExcludedDays."Calendar Days"));
              ExcelMgt.FillCell('M' + FORMAT(RowNo + 2),PersonExcludedDays.Description);
            UNTIL PersonExcludedDays.NEXT(-1) = 0;

          ExcelMgt.FillCell('E' + FORMAT(RowNo),FORMAT(ExcludedDaysPerYear));
          // Template always contains one line for absence. Need to take take it into account for correct shift calculation.
          IF AbsenceLineNo = 0 THEN
            AbsenceLineNo := 1;
          RowNo += (AbsenceLineNo + 1) * 2;
        UNTIL DateRec.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE FillPersonJobHistoryInfo@1210001(PersonNo@1210004 : Code[20];StartYear@1210001 : Integer;EndYear@1210002 : Integer;VAR RowNo@1210000 : Integer);
    VAR
      JobHistoryBuff@1210006 : TEMPORARY Record 17354;
    BEGIN
      FillPersonPreviousJobInfo(PersonNo,StartYear,EndYear,JobHistoryBuff);
      FillLaborContractInfo(PersonNo,StartYear,EndYear,JobHistoryBuff);

      JobHistoryBuff.FINDSET;
      DuplicateExcelLines(RowNo,RowNo,JobHistoryBuff.COUNT - 1);
      IF JobHistoryBuff.FINDSET THEN
        REPEAT
          FillJobHistoryDates(RowNo,JobHistoryBuff."Starting Date",JobHistoryBuff."Ending Date");
        UNTIL JobHistoryBuff.NEXT = 0;
    END;

    LOCAL PROCEDURE FillLaborContractInfo@1210026(PersonNo@1210004 : Code[20];StartYear@1210001 : Integer;EndYear@1210002 : Integer;VAR JobHistoryBuff@1210006 : TEMPORARY Record 17354);
    VAR
      LaborContract@1210003 : Record 17360;
      LaborContractLine@1210005 : Record 17361;
    BEGIN
      LaborContractSetFilter(LaborContract,PersonNo,StartYear,EndYear);
      IF LaborContract.FINDSET THEN
        REPEAT
          LaborContractLine.RESET;
          LaborContractLine.SETRANGE("Contract No.",LaborContract."No.");
          LaborContractLine.SETRANGE("Operation Type",LaborContractLine."Operation Type"::Dismissal);
          IF LaborContractLine.FINDSET THEN
            ExcelMgt.FillCell('N9',LaborContract."No.");
          FillJobHistoryBuff(JobHistoryBuff,PersonNo,LaborContract."Starting Date",LaborContract."Ending Date");
        UNTIL LaborContract.NEXT = 0;
    END;

    LOCAL PROCEDURE FillPersonPreviousJobInfo@1210019(PersonNo@1210005 : Code[20];StartYear@1210004 : Integer;EndYear@1210003 : Integer;VAR JobHistoryBuff@1210006 : TEMPORARY Record 17354);
    VAR
      PersonJobHistory@1210001 : Record 17354;
    BEGIN
      PersonJobHistory.SETRANGE("Person No.",PersonNo);
      PersonJobHistory.SETFILTER("Starting Date",'<=%1',LastDayOfYear(EndYear));
      PersonJobHistory.SETFILTER("Ending Date",'>=%1|=%2',FirstDayOfYear(StartYear),0D);

      IF PersonJobHistory.FINDSET THEN
        REPEAT
          FillJobHistoryBuff(
            JobHistoryBuff,PersonNo,PersonJobHistory."Starting Date",PersonJobHistory."Ending Date");
        UNTIL PersonJobHistory.NEXT = 0;
    END;

    LOCAL PROCEDURE FillJobHistoryBuff@1210023(VAR JobHistoryBuff@1210000 : TEMPORARY Record 17354;PersonNo@1210003 : Code[20];StartingDate@1210001 : Date;EndingDate@1210002 : Date);
    BEGIN
      WITH JobHistoryBuff DO BEGIN
        INIT;
        "Person No." := PersonNo;
        "Starting Date" := StartingDate;
        "Ending Date" := EndingDate;
        INSERT;
      END;
    END;

    LOCAL PROCEDURE FillJobHistoryDates@1210020(VAR RowNo@1210000 : Integer;StartingDate@1210001 : Date;EndingDate@1210002 : Date);
    BEGIN
      ExcelMgt.FillCell('B' + FORMAT(RowNo),FORMAT(StartingDate));
      ExcelMgt.FillCell('G' + FORMAT(RowNo),FORMAT(EndingDate));
      RowNo += 1;
    END;

    PROCEDURE FillPersonAddrInfo@1210002(PersonNo@1210001 : Code[20]);
    VAR
      AltAddr@1210000 : Record 5201;
    BEGIN
      AltAddr.RESET;
      AltAddr.SETRANGE("Person No.",PersonNo);
      AltAddr.SETRANGE("Address Type",AltAddr."Address Type"::Registration);
      IF AltAddr.FINDLAST THEN BEGIN
        IF AltAddr."Post Code" <> '' THEN
          ExcelMgt.FillCell('D34',AltAddr."Post Code")
        ELSE
          ExcelMgt.ErrorExcelProcessing(STRSUBSTNO(Text017,GetEmployeeByPersonNo(PersonNo)));
        IF AltAddr."KLADR Code" <> '' THEN BEGIN
          ExcelMgt.FillCell('A35',AltAddr.Region);
          ExcelMgt.FillCell('F35',AltAddr.City);
          ExcelMgt.FillCell('A36',AltAddr.Street);
          ExcelMgt.FillCell('H36',AltAddr.House);
          ExcelMgt.FillCell('K36',AltAddr.Building);
          ExcelMgt.FillCell('N36',AltAddr.Apartment);
        END;
      END ELSE
        ExcelMgt.ErrorExcelProcessing(STRSUBSTNO(Text016,GetEmployeeByPersonNo(PersonNo)));
    END;

    PROCEDURE FillSalaryInfo@1210003(PersonNo@1210001 : Code[20];StartYear@1210005 : Integer;EndYear@1210006 : Integer;VAR RowNo@1210002 : Integer);
    VAR
      PersonIncomeFSI@1210000 : Record 17396;
      DateRec@1210007 : Record 2000000007;
      LocMgt@1210004 : Codeunit 12400;
      AddShift@1210008 : Integer;
    BEGIN
      DateRec.SETRANGE("Period Type",DateRec."Period Type"::Year);
      DateRec.SETRANGE("Period No.",StartYear,EndYear);
      IF DateRec.FINDSET THEN BEGIN
        IF DateRec.COUNT > 3 THEN
          DuplicateExcelLines(RowNo,RowNo + 1,DateRec.COUNT - 3)
        ELSE
          AddShift := (3 - DateRec.COUNT) * 2;

        REPEAT
          PersonIncomeFSI.RESET;
          PersonIncomeFSI.SETCURRENTKEY("Person No.",Year);
          PersonIncomeFSI.SETRANGE("Person No.",PersonNo);
          PersonIncomeFSI.SETRANGE(Year,DateRec."Period No.");
          PersonIncomeFSI.CALCSUMS(Amount);
          ExcelMgt.FillCell('A' + FORMAT(RowNo),FORMAT(DateRec."Period No."));
          ExcelMgt.FillCell(
            'E' + FORMAT(RowNo),
            STRSUBSTNO(SalaryRefFormatTxt,FORMAT(PersonIncomeFSI.Amount),LocMgt.Amount2Text('',PersonIncomeFSI.Amount)));
          RowNo += 2;
        UNTIL DateRec.NEXT = 0;

        RowNo += AddShift;
      END;
    END;

    LOCAL PROCEDURE FindPeriodStartYear@1210005(PersonNo@1210004 : Code[20];EndYear@1210002 : Integer) : Integer;
    VAR
      FullYearsCount@1210000 : Integer;
      Year@1210001 : Integer;
      WorkStartYear@1210003 : Integer;
      PeriodFound@1210005 : Boolean;
    BEGIN
      WorkStartYear := GetEmployeWorkStartYear(PersonNo);

      Year := EndYear;
      REPEAT
        IF WorkYearWithoutChildCareLeave(PersonNo,Year) THEN
          FullYearsCount += 1;

        PeriodFound := (FullYearsCount = 3) OR (Year = WorkStartYear);
        IF NOT PeriodFound THEN
          Year -= 1;
      UNTIL PeriodFound;

      EXIT(Year);
    END;

    LOCAL PROCEDURE FirstDayOfYear@1210013(YearNo@1210000 : Integer) : Date;
    VAR
      DateRec@1210001 : Record 2000000007;
    BEGIN
      DateRec.SETRANGE("Period Type",DateRec."Period Type"::Year);
      DateRec.SETRANGE("Period No.",YearNo);
      DateRec.FINDFIRST;
      EXIT(DateRec."Period Start");
    END;

    LOCAL PROCEDURE GetEmployeeByPersonNo@1210030(PersonNo@1210001 : Code[20]) : Code[20];
    VAR
      Employee@1210000 : Record 5200;
    BEGIN
      Employee.SETRANGE("Person No.",PersonNo);
      Employee.FINDFIRST;
      EXIT(Employee."No.");
    END;

    LOCAL PROCEDURE LastDayOfYear@1210014(YearNo@1210000 : Integer) : Date;
    VAR
      DateRec@1210001 : Record 2000000007;
    BEGIN
      DateRec.SETRANGE("Period Type",DateRec."Period Type"::Year);
      DateRec.SETRANGE("Period No.",YearNo);
      DateRec.FINDFIRST;
      EXIT(NORMALDATE(DateRec."Period End"));
    END;

    LOCAL PROCEDURE MinOfTwoDates@1210017(Date1@1210001 : Date;Date2@1210000 : Date) : Date;
    BEGIN
      IF Date1 < Date2 THEN
        EXIT(Date1);

      EXIT(Date2);
    END;

    LOCAL PROCEDURE WorkYearWithoutChildCareLeave@1210006(PersonNo@1210001 : Code[20];YearNo@1210000 : Integer) : Boolean;
    BEGIN
      EXIT(NOT ChildCareLeaveInPeriodExists(PersonNo,YearNo));
    END;

    LOCAL PROCEDURE LaborContractSetFilter@1210021(VAR LaborContract@1210000 : Record 17360;PersonNo@1210001 : Code[20];StartYear@1210002 : Integer;EndYear@1210003 : Integer);
    BEGIN
      WITH LaborContract DO BEGIN
        SETCURRENTKEY("Contract Type","Person No.","Starting Date");
        SETRANGE("Contract Type","Contract Type"::"Labor Contract");
        SETRANGE("Person No.",PersonNo);
        SETFILTER("Starting Date",'<=%1',LastDayOfYear(EndYear));
        SETFILTER("Ending Date",'>=%1|=%2',FirstDayOfYear(StartYear),0D);
      END;
    END;

    PROCEDURE SetTestMode@1210008(NewTestMode@1210000 : Boolean);
    BEGIN
      TestMode := NewTestMode;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

