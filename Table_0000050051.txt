OBJECT Table 50051 FI Type
{
  OBJECT-PROPERTIES
  {
    Date=24.02.16;
    Time=13:31:08;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    OnInsert=BEGIN
               VALIDATE("INC.TAX Product Level");
             END;

    OnModify=BEGIN
               VALIDATE("INC.TAX Product Level");
             END;

    CaptionML=[ENU=FI Type;
               RUS=Вид Финансового Инструмента];
    LookupPageID=Page50087;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=[ENU=Code;
                                                              RUS=Код];
                                                   NotBlank=Yes }
    { 5   ;   ;Parent Code         ;Code20        ;TableRelation="FI Type";
                                                   CaptionML=[ENU=Parent Code;
                                                              RUS=Код Элемента Родителя] }
    { 10  ;   ;Name                ;Text100       ;CaptionML=[ENU=Name;
                                                              RUS=Наименование] }
    { 13  ;   ;Name 2              ;Text100       ;CaptionML=[ENU=Name 2;
                                                              RUS=Наименование 2] }
    { 15  ;   ;Change Original Currency;Boolean   ;CaptionML=[ENU=Change Original Currency;
                                                              RUS=Менять Оригинальную Валюту] }
    { 20  ;   ;Value Type          ;Option        ;OnValidate=BEGIN
                                                                {
                                                                IF ("Dimension Value Type" <> "Dimension Value Type"::Standard) AND
                                                                   (xRec."Dimension Value Type" = xRec."Dimension Value Type"::Standard)
                                                                THEN
                                                                  IF CheckIfDimValueUsed("Dimension Code",Code) THEN
                                                                    ERROR(Text004,GetCheckDimErr);
                                                                }
                                                                Totaling := '';
                                                              END;

                                                   CaptionML=[ENU=Value Type;
                                                              RUS=Тип Значения];
                                                   OptionCaptionML=[ENU=Standard,Heading,Total,Begin-Total,End-Total;
                                                                    RUS=Стандартное,Заголовок,Сумма,От-Сумма,До-Сумма];
                                                   OptionString=Standard,Heading,Total,Begin-Total,End-Total }
    { 25  ;   ;Totaling            ;Text250       ;TableRelation=IF (Value Type=CONST(Total)) "FI Type".Code;
                                                   OnValidate=BEGIN
                                                                IF NOT ("Value Type" IN
                                                                  ["Value Type"::Total,"Value Type"::"End-Total"]) AND (Totaling <> '')
                                                                THEN
                                                                  FIELDERROR("Value Type");
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Totaling;
                                                              RUS=Группировка] }
    { 30  ;   ;Indentation         ;Integer       ;CaptionML=[ENU=Indentation;
                                                              RUS=Отступ] }
    { 60  ;   ;Adjust Debit Acc. No.;Code20       ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=Adjust Debit Account;
                                                              RUS=Переоценка Счет Дебет];
                                                   Description=NC NCS-1310 DP }
    { 70  ;   ;Adjust Credit Acc. No.;Code20      ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=Adjust Credit Account;
                                                              RUS=Переоценка Счет Кредит];
                                                   Description=NC NCS-1310 DP }
    { 50010;  ;Loan Ext. Interest Rate;Boolean    ;CaptionML=[ENU=Loan Ext. Interest Rate;
                                                              RUS=Кредит/Займ Внеш. Процент Ставка];
                                                   Description=NC MLN02.1 DP }
    { 50100;  ;FI Posting Group    ;Code10        ;TableRelation="FI Posting Group".Code;
                                                   CaptionML=[ENU=FI Posting Group;
                                                              RUS=ФИ Учетная Группа];
                                                   Description=MTF02 }
    { 50101;  ;Calc NKD            ;Boolean       ;CaptionML=[ENU=Cupon Calculate;
                                                              RUS=Рассчитывать %];
                                                   Description=MTF02 }
    { 50103;  ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              RUS=Общая Товарная Группа];
                                                   Description=MTF02 }
    { 50104;  ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              RUS=НДС Товарная Группа];
                                                   Description=MTF02 }
    { 50105;  ;INC.TAX Product Level;Code20       ;TableRelation="Dimension Value".Code WHERE (Dimension Code=CONST(INC.TAX));
                                                   OnValidate=BEGIN
                                                                //NC NCS-1310.2 > DP
                                                                CheckParent2(Rec,Indentation,"INC.TAX Product Level");
                                                                {
                                                                CheckParent(Indentation);
                                                                }
                                                                //NC NCS-1310.2 > DP

                                                                CheckChild;
                                                              END;

                                                   CaptionML=[ENU=INC.TAX Product Level;
                                                              RUS=INC.TAX Product Level];
                                                   Description=RD }
    { 50107;  ;Balance Account No. ;Code20        ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=Balance Account No.;
                                                              RUS=Баланс. Счет Но.];
                                                   Description=NCM1 }
    { 50110;  ;Use UA Rate         ;Boolean       ;CaptionML=[ENU=Use UA Rate;
                                                              RUS=Исп. Котировку Базового Актива];
                                                   Description=NC NCS-821 RD }
    { 50120;  ;FiRe Value          ;Integer       ;CaptionML=[ENU=FiRe Value;
                                                              RUS=Значение для FiRe];
                                                   Description=NCS-1897 ORM }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE CheckParent@1000000000(Indent@1000000003 : Integer);
    VAR
      FIType@1000000000 : Record 50051;
      Text001@1000000002 : TextConst 'ENU=An Unexisting Parent Element Code Is Defined For Current FI Type;RUS=Для Типа ФИ Задан Несуществующий Код Элемента Родителя';
      Text002@1000000001 : TextConst 'ENU="INC.TAX Product Level For Current FI Type Is Defined By Parent Element ";RUS=INC.TAX Product Level Для Данного Типа Определен Элементом Родителя';
    BEGIN
        IF "Parent Code" <> '' THEN
          IF FIType.GET("Parent Code") THEN

            //NC NCS-1310.1 > DP
            {
            IF FIType."INC.TAX Product Level" <> '' THEN ERROR(Text002) ELSE
            }
            IF (FIType."INC.TAX Product Level" <> '') AND
              ("INC.TAX Product Level"<>FIType."INC.TAX Product Level") THEN ERROR(Text002) ELSE
            //NC NCS-1310.1 < DP

              FIType.CheckParent(Indent)
          ELSE ERROR(Text001);

        IF "Parent Code" = '' THEN
          IF Indentation < Indent THEN
            //NC NCS-1310.1 > DP
            {
            IF "INC.TAX Product Level" <> '' THEN ERROR(Text002);
            }
            IF ("INC.TAX Product Level" <> '') AND
              ("INC.TAX Product Level"<>FIType."INC.TAX Product Level") THEN ERROR(Text002);
            //NC NCS-1310.1 < DP
    END;

    PROCEDURE CheckChild@1000000003();
    VAR
      FIType@1000000000 : Record 50051;
      Text001@1000000002 : TextConst 'ENU=It Is Necessary To Clear INC.TAX Product Level For Subordinate FI Types;RUS=Необходимо Очистить INC.TAX Product Level Для Подчиненных Типов';
    BEGIN
      FIType.RESET;
      FIType.SETRANGE("Parent Code", Code);
      //FIType.SETFILTER("INC.TAX Product Level", '<> ''''');
      //IF FIType.FINDFIRST THEN ERROR(Text001);
      IF FIType.FIND('-') THEN
        REPEAT
          IF "INC.TAX Product Level" <> '' THEN BEGIN
            FIType."INC.TAX Product Level" := "INC.TAX Product Level";
            IF FIType.MODIFY THEN FIType.CheckChild;
            END;
        UNTIL FIType.NEXT = 0
    END;

    PROCEDURE GetIncTax@1000000001() IncTaxCode : Code[20];
    VAR
      FITypeCheck@1000000002 : Record 50051;
      FITypeCode@1000000000 : Code[20];
    BEGIN
      FITypeCheck.RESET;
      FITypeCheck.TRANSFERFIELDS(Rec);
      FITypeCode := FITypeCheck.Code;

      WHILE FITypeCheck."Parent Code" <> '' DO BEGIN
        IF FITypeCheck.GET(FITypeCheck."Parent Code") THEN
          IF FITypeCheck."INC.TAX Product Level" <> '' THEN
            FITypeCode := FITypeCheck.Code;
      END;

      FITypeCheck.GET(FITypeCode);
      IncTaxCode := FITypeCheck."INC.TAX Product Level";
    END;

    PROCEDURE CheckParent2@1101495001(FIType2@1101495000 : Record 50051;Indent@1000000003 : Integer;INCTAXCode@1101495001 : Code[20]);
    VAR
      FIType@1000000000 : Record 50051;
      Text001@1000000002 : TextConst 'ENU=An Unexisting Parent Element Code Is Defined For Current FI Type;RUS=Для Типа ФИ Задан Несуществующий Код Элемента Родителя';
      Text002@1000000001 : TextConst 'ENU="INC.TAX Product Level For Current FI Type Is Defined By Parent Element ";RUS=INC.TAX Product Level Для Данного Типа Определен Элементом Родителя';
    BEGIN
       //NC NCS-1310.2 > DP
        IF FIType2."Parent Code" <> '' THEN
          IF FIType.GET(FIType2."Parent Code") THEN
            IF (FIType."INC.TAX Product Level" <> '') AND
              (INCTAXCode<>FIType."INC.TAX Product Level") THEN ERROR(Text002) ELSE
               FIType.CheckParent2(FIType,Indent,INCTAXCode)
          ELSE ERROR(Text001);

        IF FIType2."Parent Code" = '' THEN
          IF FIType2.Indentation < Indent THEN
            IF (FIType2."INC.TAX Product Level" <> '') AND
            (INCTAXCode<>FIType2."INC.TAX Product Level") THEN ERROR(Text002);
      //NC NCS-1310.2 < DP
    END;

    BEGIN
    {
      NC MDB01 PCH Создана таблица
      NC MTF02 II Новые поля
      NC MLN02.1 DP Добавлено поле Loan Ext. Rate
      NC NCS-821 RD Добавлено поле Use UA Rate
      NC NCS-1310 DP Добавлены поля "Adjust Debit Acc. No.", "Adjust Credit Acc. No."
      NC NCS-1310.1 DP Изменена функция CheckParent
      NC NCS-1310.2 DP Дбавлена функция CheckParent2
      NC NCS-1897 ORM Добавлено поле FiRe Value
    }
    END.
  }
}

