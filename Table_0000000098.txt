OBJECT Table 98 General Ledger Setup
{
  OBJECT-PROPERTIES
  {
    Date=18.04.17;
    Time=13:12:08;
    Modified=Yes;
    Version List=NAVW110.00,NAVRU10.00,NOS-26;
  }
  PROPERTIES
  {
    CaptionML=[ENU=General Ledger Setup;
               RUS=Настройка ГК];
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=[ENU=Primary Key;
                                                              RUS=Первичный ключ] }
    { 2   ;   ;Allow Posting From  ;Date          ;CaptionML=[ENU=Allow Posting From;
                                                              RUS=Разрешить учет с] }
    { 3   ;   ;Allow Posting To    ;Date          ;CaptionML=[ENU=Allow Posting To;
                                                              RUS=Разрешить учет по] }
    { 4   ;   ;Register Time       ;Boolean       ;CaptionML=[ENU=Register Time;
                                                              RUS=Учитывать время] }
    { 28  ;   ;Pmt. Disc. Excl. VAT;Boolean       ;OnValidate=BEGIN
                                                                IF "Pmt. Disc. Excl. VAT" THEN
                                                                  TESTFIELD("Adjust for Payment Disc.",FALSE)
                                                                ELSE
                                                                  TESTFIELD("VAT Tolerance %",0);
                                                              END;

                                                   CaptionML=[ENU=Pmt. Disc. Excl. VAT;
                                                              RUS=Скидка оплаты, без НДС] }
    { 41  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              RUS=Фильтр по дате] }
    { 42  ;   ;Global Dimension 1 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Dimension Code=FIELD(Global Dimension 1 Code));
                                                   CaptionML=[ENU=Global Dimension 1 Filter;
                                                              RUS=Фильтр глобального измерения 1];
                                                   CaptionClass='1,3,1' }
    { 43  ;   ;Global Dimension 2 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Dimension Code=FIELD(Global Dimension 2 Code));
                                                   CaptionML=[ENU=Global Dimension 2 Filter;
                                                              RUS=Фильтр глобального измерения 2];
                                                   CaptionClass='1,3,2' }
    { 44  ;   ;Cust. Balances Due  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                      Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                      Initial Entry Due Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Cust. Balances Due;
                                                              RUS=Дебиторская задолженность];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 45  ;   ;Vendor Balances Due ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE (Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                        Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                        Initial Entry Due Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Vendor Balances Due;
                                                              RUS=Кредиторская задолженность];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 48  ;   ;Unrealized VAT      ;Boolean       ;OnValidate=BEGIN
                                                                IF NOT "Unrealized VAT" THEN BEGIN
                                                                  VATPostingSetup.SETFILTER(
                                                                    "Unrealized VAT Type",'>=%1',VATPostingSetup."Unrealized VAT Type"::Percentage);
                                                                  IF VATPostingSetup.FINDFIRST THEN
                                                                    ERROR(
                                                                      Text000,VATPostingSetup.TABLECAPTION,
                                                                      VATPostingSetup."VAT Bus. Posting Group",VATPostingSetup."VAT Prod. Posting Group",
                                                                      VATPostingSetup.FIELDCAPTION("Unrealized VAT Type"),VATPostingSetup."Unrealized VAT Type");
                                                                  TaxJurisdiction.SETFILTER(
                                                                    "Unrealized VAT Type",'>=%1',TaxJurisdiction."Unrealized VAT Type"::Percentage);
                                                                  IF TaxJurisdiction.FINDFIRST THEN
                                                                    ERROR(
                                                                      Text001,TaxJurisdiction.TABLECAPTION,
                                                                      TaxJurisdiction.Code,TaxJurisdiction.FIELDCAPTION("Unrealized VAT Type"),
                                                                      TaxJurisdiction."Unrealized VAT Type");
                                                                END;
                                                                IF "Unrealized VAT" THEN
                                                                  "Prepayment Unrealized VAT" := TRUE
                                                                ELSE
                                                                  "Prepayment Unrealized VAT" := FALSE;
                                                              END;

                                                   CaptionML=[ENU=Unrealized VAT;
                                                              RUS=Нереализованный НДС] }
    { 49  ;   ;Adjust for Payment Disc.;Boolean   ;OnValidate=BEGIN
                                                                IF "Adjust for Payment Disc." THEN BEGIN
                                                                  TESTFIELD("Pmt. Disc. Excl. VAT",FALSE);
                                                                  TESTFIELD("VAT Tolerance %",0);
                                                                END ELSE BEGIN
                                                                  VATPostingSetup.SETRANGE("Adjust for Payment Discount",TRUE);
                                                                  IF VATPostingSetup.FINDFIRST THEN
                                                                    ERROR(
                                                                      Text002,VATPostingSetup.TABLECAPTION,
                                                                      VATPostingSetup."VAT Bus. Posting Group",VATPostingSetup."VAT Prod. Posting Group",
                                                                      VATPostingSetup.FIELDCAPTION("Adjust for Payment Discount"));
                                                                  TaxJurisdiction.SETRANGE("Adjust for Payment Discount",TRUE);
                                                                  IF TaxJurisdiction.FINDFIRST THEN
                                                                    ERROR(
                                                                      Text003,TaxJurisdiction.TABLECAPTION,
                                                                      TaxJurisdiction.Code,TaxJurisdiction.FIELDCAPTION("Adjust for Payment Discount"));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Adjust for Payment Disc.;
                                                              RUS=Коррекция для скидки оплаты] }
    { 56  ;   ;Mark Cr. Memos as Corrections;Boolean;
                                                   CaptionML=[ENU=Mark Cr. Memos as Corrections;
                                                              RUS=Помечать кредит-ноты как корректировки] }
    { 57  ;   ;Local Address Format;Option        ;CaptionML=[ENU=Local Address Format;
                                                              RUS=Локальный формат адреса];
                                                   OptionCaptionML=[ENU=Post Code+City,City+Post Code,City+County+Post Code,Blank Line+Post Code+City;
                                                                    RUS=Индекс+Город,Город+Индекс,Город+Район+Индекс,Пустая строка+Индекс+Город];
                                                   OptionString=Post Code+City,City+Post Code,City+County+Post Code,Blank Line+Post Code+City }
    { 58  ;   ;Inv. Rounding Precision (LCY);Decimal;
                                                   OnValidate=BEGIN
                                                                IF "Amount Rounding Precision" <> 0 THEN
                                                                  IF "Inv. Rounding Precision (LCY)" <> ROUND("Inv. Rounding Precision (LCY)","Amount Rounding Precision") THEN
                                                                    ERROR(
                                                                      Text004,
                                                                      FIELDCAPTION("Inv. Rounding Precision (LCY)"),"Amount Rounding Precision");
                                                              END;

                                                   CaptionML=[ENU=Inv. Rounding Precision (LCY);
                                                              RUS=Точность округления счета (руб.)];
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,98,58' }
    { 59  ;   ;Inv. Rounding Type (LCY);Option    ;CaptionML=[ENU=Inv. Rounding Type (LCY);
                                                              RUS=Тип округления счета (руб.)];
                                                   OptionCaptionML=[ENU=Nearest,Up,Down;
                                                                    RUS=Ближайшее,Большее,Меньшее];
                                                   OptionString=Nearest,Up,Down;
                                                   CaptionClass='1,11,1,98,59' }
    { 60  ;   ;Local Cont. Addr. Format;Option    ;InitValue=After Company Name;
                                                   CaptionML=[ENU=Local Cont. Addr. Format;
                                                              RUS=Локальный формат адреса контакта];
                                                   OptionCaptionML=[ENU=First,After Company Name,Last,Local Format;
                                                                    RUS=В начале,После назв. организации,В конце,Локальный Формат];
                                                   OptionString=First,After Company Name,Last,Local Format }
    { 63  ;   ;Bank Account Nos.   ;Code10        ;TableRelation="No. Series";
                                                   AccessByPermission=TableData 270=R;
                                                   CaptionML=[ENU=Bank Account Nos.;
                                                              RUS=Серия номеров банк. счетов] }
    { 65  ;   ;Summarize G/L Entries;Boolean      ;CaptionML=[ENU=Summarize G/L Entries;
                                                              RUS=Подводить итоги операций ГК] }
    { 66  ;   ;Amount Decimal Places;Text5        ;InitValue=2:2;
                                                   OnValidate=BEGIN
                                                                CheckDecimalPlacesFormat("Amount Decimal Places");
                                                              END;

                                                   CaptionML=[ENU=Amount Decimal Places;
                                                              RUS=Десятичные знаки суммы] }
    { 67  ;   ;Unit-Amount Decimal Places;Text5   ;InitValue=2:5;
                                                   OnValidate=BEGIN
                                                                CheckDecimalPlacesFormat("Unit-Amount Decimal Places");
                                                              END;

                                                   CaptionML=[ENU=Unit-Amount Decimal Places;
                                                              RUS=Десятичные знаки цены] }
    { 68  ;   ;Additional Reporting Currency;Code10;
                                                   TableRelation=Currency;
                                                   OnValidate=BEGIN
                                                                IF ("Additional Reporting Currency" <> xRec."Additional Reporting Currency") AND
                                                                   ("Additional Reporting Currency" <> '')
                                                                THEN BEGIN
                                                                  AdjAddReportingCurr.SetAddCurr("Additional Reporting Currency");
                                                                  AdjAddReportingCurr.RUNMODAL;
                                                                  IF NOT AdjAddReportingCurr.IsExecuted THEN
                                                                    "Additional Reporting Currency" := xRec."Additional Reporting Currency";
                                                                END;
                                                                IF ("Additional Reporting Currency" <> xRec."Additional Reporting Currency") AND
                                                                   AdjAddReportingCurr.IsExecuted
                                                                THEN
                                                                  DeleteIntrastatJnl;
                                                                IF ("Additional Reporting Currency" <> xRec."Additional Reporting Currency") AND
                                                                   ("Additional Reporting Currency" <> '') AND
                                                                   AdjAddReportingCurr.IsExecuted
                                                                THEN
                                                                  DeleteAnalysisView;
                                                              END;

                                                   CaptionML=[ENU=Additional Reporting Currency;
                                                              RUS=Дополнительная отчетная валюта] }
    { 69  ;   ;VAT Tolerance %     ;Decimal       ;OnValidate=BEGIN
                                                                IF "VAT Tolerance %" <> 0 THEN BEGIN
                                                                  TESTFIELD("Adjust for Payment Disc.",FALSE);
                                                                  TESTFIELD("Pmt. Disc. Excl. VAT",TRUE);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=VAT Tolerance %;
                                                              RUS=Отклонение НДС (%)];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 70  ;   ;EMU Currency        ;Boolean       ;CaptionML=[ENU=EMU Currency;
                                                              RUS=Валюта ЕС] }
    { 71  ;   ;LCY Code            ;Code10        ;OnValidate=VAR
                                                                Currency@1000 : Record 4;
                                                              BEGIN
                                                                IF "Local Currency Symbol" = '' THEN
                                                                  "Local Currency Symbol" := Currency.ResolveCurrencySymbol("LCY Code");
                                                              END;

                                                   CaptionML=[ENU=LCY Code;
                                                              RUS=Код локальной валюты] }
    { 72  ;   ;VAT Exchange Rate Adjustment;Option;CaptionML=[ENU=VAT Exchange Rate Adjustment;
                                                              RUS=Коррекция валютного курса НДС];
                                                   OptionCaptionML=[ENU=No Adjustment,Adjust Amount,Adjust Additional-Currency Amount;
                                                                    RUS=Без коррекции,Коррекция суммы,Коррекция суммы (ДОВ)];
                                                   OptionString=No Adjustment,Adjust Amount,Adjust Additional-Currency Amount }
    { 73  ;   ;Amount Rounding Precision;Decimal  ;InitValue=0,01;
                                                   OnValidate=BEGIN
                                                                IF "Amount Rounding Precision" <> 0 THEN
                                                                  "Inv. Rounding Precision (LCY)" := ROUND("Inv. Rounding Precision (LCY)","Amount Rounding Precision");
                                                                RoundingErrorCheck(FIELDCAPTION("Amount Rounding Precision"));
                                                                IF HideDialog THEN
                                                                  MESSAGE(Text021);
                                                              END;

                                                   CaptionML=[ENU=Amount Rounding Precision;
                                                              RUS=Точность округления суммы];
                                                   DecimalPlaces=0:5 }
    { 74  ;   ;Unit-Amount Rounding Precision;Decimal;
                                                   InitValue=0,00001;
                                                   OnValidate=BEGIN
                                                                IF HideDialog THEN
                                                                  MESSAGE(Text022);
                                                              END;

                                                   CaptionML=[ENU=Unit-Amount Rounding Precision;
                                                              RUS=Точность округления цены];
                                                   DecimalPlaces=0:9 }
    { 75  ;   ;Appln. Rounding Precision;Decimal  ;CaptionML=[ENU=Appln. Rounding Precision;
                                                              RUS=Точность округления при применении];
                                                   MinValue=0;
                                                   AutoFormatType=1 }
    { 79  ;   ;Global Dimension 1 Code;Code20     ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                "Shortcut Dimension 1 Code" := "Global Dimension 1 Code";
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              RUS=Код глобального измерения 1];
                                                   Editable=No }
    { 80  ;   ;Global Dimension 2 Code;Code20     ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                "Shortcut Dimension 2 Code" := "Global Dimension 2 Code";
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              RUS=Код глобального измерения 2];
                                                   Editable=No }
    { 81  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation=Dimension;
                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              RUS=Код ярлыка измерения 1];
                                                   Editable=No }
    { 82  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation=Dimension;
                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              RUS=Код ярлыка измерения 2];
                                                   Editable=No }
    { 83  ;   ;Shortcut Dimension 3 Code;Code20   ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                UpdateDimValueGlobalDimNo(xRec."Shortcut Dimension 3 Code","Shortcut Dimension 3 Code",3);
                                                              END;

                                                   AccessByPermission=TableData 350=R;
                                                   CaptionML=[ENU=Shortcut Dimension 3 Code;
                                                              RUS=Код ярлыка измерения 3] }
    { 84  ;   ;Shortcut Dimension 4 Code;Code20   ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                UpdateDimValueGlobalDimNo(xRec."Shortcut Dimension 4 Code","Shortcut Dimension 4 Code",4);
                                                              END;

                                                   AccessByPermission=TableData 350=R;
                                                   CaptionML=[ENU=Shortcut Dimension 4 Code;
                                                              RUS=Код ярлыка измерения 4] }
    { 85  ;   ;Shortcut Dimension 5 Code;Code20   ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                UpdateDimValueGlobalDimNo(xRec."Shortcut Dimension 5 Code","Shortcut Dimension 5 Code",5);
                                                              END;

                                                   AccessByPermission=TableData 350=R;
                                                   CaptionML=[ENU=Shortcut Dimension 5 Code;
                                                              RUS=Код ярлыка измерения 5] }
    { 86  ;   ;Shortcut Dimension 6 Code;Code20   ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                UpdateDimValueGlobalDimNo(xRec."Shortcut Dimension 6 Code","Shortcut Dimension 6 Code",6);
                                                              END;

                                                   AccessByPermission=TableData 350=R;
                                                   CaptionML=[ENU=Shortcut Dimension 6 Code;
                                                              RUS=Код ярлыка измерения 6] }
    { 87  ;   ;Shortcut Dimension 7 Code;Code20   ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                UpdateDimValueGlobalDimNo(xRec."Shortcut Dimension 7 Code","Shortcut Dimension 7 Code",7);
                                                              END;

                                                   AccessByPermission=TableData 350=R;
                                                   CaptionML=[ENU=Shortcut Dimension 7 Code;
                                                              RUS=Код ярлыка измерения 7] }
    { 88  ;   ;Shortcut Dimension 8 Code;Code20   ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                UpdateDimValueGlobalDimNo(xRec."Shortcut Dimension 8 Code","Shortcut Dimension 8 Code",8);
                                                              END;

                                                   AccessByPermission=TableData 350=R;
                                                   CaptionML=[ENU=Shortcut Dimension 8 Code;
                                                              RUS=Код ярлыка измерения 8] }
    { 89  ;   ;Max. VAT Difference Allowed;Decimal;OnValidate=BEGIN
                                                                IF "Max. VAT Difference Allowed" <> ROUND("Max. VAT Difference Allowed") THEN
                                                                  ERROR(
                                                                    Text004,
                                                                    FIELDCAPTION("Max. VAT Difference Allowed"),"Amount Rounding Precision");

                                                                "Max. VAT Difference Allowed" := ABS("Max. VAT Difference Allowed");
                                                              END;

                                                   CaptionML=[ENU=Max. VAT Difference Allowed;
                                                              RUS=Максимальная разрешенная разница НДС];
                                                   AutoFormatType=1 }
    { 90  ;   ;VAT Rounding Type   ;Option        ;CaptionML=[ENU=VAT Rounding Type;
                                                              RUS=Тип округления НДС];
                                                   OptionCaptionML=[ENU=Nearest,Up,Down;
                                                                    RUS=Ближайшее,Большее,Меньшее];
                                                   OptionString=Nearest,Up,Down }
    { 92  ;   ;Pmt. Disc. Tolerance Posting;Option;CaptionML=[ENU=Pmt. Disc. Tolerance Posting;
                                                              RUS=Учет отклонения в скидках оплаты];
                                                   OptionCaptionML=[ENU=Payment Tolerance Accounts,Payment Discount Accounts;
                                                                    RUS=Счета отклонений в оплате,Счета скидок оплаты];
                                                   OptionString=Payment Tolerance Accounts,Payment Discount Accounts }
    { 93  ;   ;Payment Discount Grace Period;DateFormula;
                                                   CaptionML=[ENU=Payment Discount Grace Period;
                                                              RUS=Период отсрочки скидки оплаты] }
    { 94  ;   ;Payment Tolerance % ;Decimal       ;CaptionML=[ENU=Payment Tolerance %;
                                                              RUS=Отклонение в оплате (%)];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   Editable=No }
    { 95  ;   ;Max. Payment Tolerance Amount;Decimal;
                                                   CaptionML=[ENU=Max. Payment Tolerance Amount;
                                                              RUS=Макс. сумма отклонения оплаты];
                                                   MinValue=0;
                                                   Editable=No }
    { 96  ;   ;Adapt Main Menu to Permissions;Boolean;
                                                   InitValue=Yes;
                                                   CaptionML=[ENU=Adapt Main Menu to Permissions;
                                                              RUS=Адаптировать главное меню к правам доступа] }
    { 97  ;   ;Allow G/L Acc. Deletion Before;Date;CaptionML=[ENU=Allow G/L Acc. Deletion Before;
                                                              RUS=Разрешить удаление счета ГК до] }
    { 98  ;   ;Check G/L Account Usage;Boolean    ;CaptionML=[ENU=Check G/L Account Usage;
                                                              RUS=Проверка использования счета ГК] }
    { 99  ;   ;Payment Tolerance Posting;Option   ;CaptionML=[ENU=Payment Tolerance Posting;
                                                              RUS=Учет отклонений в оплате];
                                                   OptionCaptionML=[ENU=Payment Tolerance Accounts,Payment Discount Accounts;
                                                                    RUS=Счета отклонений в оплате,Счета скидок оплаты];
                                                   OptionString=Payment Tolerance Accounts,Payment Discount Accounts }
    { 100 ;   ;Pmt. Disc. Tolerance Warning;Boolean;
                                                   CaptionML=[ENU=Pmt. Disc. Tolerance Warning;
                                                              RUS=Предупреждение об отклонениях в скидках оплаты] }
    { 101 ;   ;Payment Tolerance Warning;Boolean  ;CaptionML=[ENU=Payment Tolerance Warning;
                                                              RUS=Предупреждение об отклонении в оплате] }
    { 102 ;   ;Last IC Transaction No.;Integer    ;CaptionML=[ENU=Last IC Transaction No.;
                                                              RUS=Номер последней транзакции МФ] }
    { 103 ;   ;Bill-to/Sell-to VAT Calc.;Option   ;CaptionML=[ENU=Bill-to/Sell-to VAT Calc.;
                                                              RUS=Расчет НДС плательщика/клиента];
                                                   OptionCaptionML=[ENU=Bill-to/Pay-to No.,Sell-to/Buy-from No.;
                                                                    RUS=Код плательщика/получ. оплаты,Код клиента/поставщика];
                                                   OptionString=Bill-to/Pay-to No.,Sell-to/Buy-from No. }
    { 110 ;   ;Acc. Sched. for Balance Sheet;Code10;
                                                   TableRelation="Acc. Schedule Name";
                                                   CaptionML=[ENU=Acc. Sched. for Balance Sheet;
                                                              RUS=Финансовый отчет для балансового отчета] }
    { 111 ;   ;Acc. Sched. for Income Stmt.;Code10;TableRelation="Acc. Schedule Name";
                                                   CaptionML=[ENU=Acc. Sched. for Income Stmt.;
                                                              RUS=Финансовый отчет для отчета о прибылях и убытках] }
    { 112 ;   ;Acc. Sched. for Cash Flow Stmt;Code10;
                                                   TableRelation="Acc. Schedule Name";
                                                   CaptionML=[ENU=Acc. Sched. for Cash Flow Stmt;
                                                              RUS=Финансовый отчет для отчета о движении денежных средств] }
    { 113 ;   ;Acc. Sched. for Retained Earn.;Code10;
                                                   TableRelation="Acc. Schedule Name";
                                                   CaptionML=[ENU=Acc. Sched. for Retained Earn.;
                                                              RUS=Финансовый отчет для нераспределенной прибыли] }
    { 150 ;   ;Print VAT specification in LCY;Boolean;
                                                   CaptionML=[ENU=Print VAT specification in LCY;
                                                              RUS=Печать спецификации НДС в руб.] }
    { 151 ;   ;Prepayment Unrealized VAT;Boolean  ;OnValidate=BEGIN
                                                                IF "Unrealized VAT" AND xRec."Prepayment Unrealized VAT" THEN
                                                                  ERROR(DependentFieldActivatedErr,FIELDCAPTION("Prepayment Unrealized VAT"),FIELDCAPTION("Unrealized VAT"));

                                                                IF NOT "Prepayment Unrealized VAT" THEN BEGIN
                                                                  VATPostingSetup.SETFILTER(
                                                                    "Unrealized VAT Type",'>=%1',VATPostingSetup."Unrealized VAT Type"::Percentage);
                                                                  IF VATPostingSetup.FINDFIRST THEN
                                                                    ERROR(
                                                                      Text000,VATPostingSetup.TABLECAPTION,
                                                                      VATPostingSetup."VAT Bus. Posting Group",VATPostingSetup."VAT Prod. Posting Group",
                                                                      VATPostingSetup.FIELDCAPTION("Unrealized VAT Type"),VATPostingSetup."Unrealized VAT Type");
                                                                  TaxJurisdiction.SETFILTER(
                                                                    "Unrealized VAT Type",'>=%1',TaxJurisdiction."Unrealized VAT Type"::Percentage);
                                                                  IF TaxJurisdiction.FINDFIRST THEN
                                                                    ERROR(
                                                                      Text001,TaxJurisdiction.TABLECAPTION,
                                                                      TaxJurisdiction.Code,TaxJurisdiction.FIELDCAPTION("Unrealized VAT Type"),
                                                                      TaxJurisdiction."Unrealized VAT Type");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Prepayment Unrealized VAT;
                                                              RUS=Нереализованный НДС при предоплате] }
    { 152 ;   ;Use Legacy G/L Entry Locking;Boolean;
                                                   OnValidate=VAR
                                                                InventorySetup@1000 : Record 313;
                                                              BEGIN
                                                                IF NOT "Use Legacy G/L Entry Locking" THEN BEGIN
                                                                  IF InventorySetup.GET THEN
                                                                    IF InventorySetup."Automatic Cost Posting" THEN
                                                                      ERROR(Text025,
                                                                        FIELDCAPTION("Use Legacy G/L Entry Locking"),
                                                                        "Use Legacy G/L Entry Locking",
                                                                        InventorySetup.FIELDCAPTION("Automatic Cost Posting"),
                                                                        InventorySetup.TABLECAPTION,
                                                                        InventorySetup."Automatic Cost Posting");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Use Legacy G/L Entry Locking;
                                                              RUS=Использовать блокирование операций ГК предыдущих версий] }
    { 160 ;   ;Payroll Trans. Import Format;Code20;TableRelation="Data Exch. Def" WHERE (Type=CONST(Payroll Import));
                                                   CaptionML=[ENU=Payroll Trans. Import Format;
                                                              RUS=Формат импорта транзакций зарплаты] }
    { 161 ;   ;VAT Reg. No. Validation URL;Text250;CaptionML=[ENU=VAT Reg. No. Validation URL;
                                                              RUS=URL-адрес проверки ИНН] }
    { 162 ;   ;Local Currency Symbol;Text10       ;CaptionML=[ENU=Local Currency Symbol;
                                                              RUS=Символ курса местной валюты] }
    { 12401;  ;VAT Purch. Ledger No. Series;Code10;TableRelation="No. Series";
                                                   CaptionML=[ENU=VAT Purch. Ledger No. Series;
                                                              RUS=НДС - серия ном. книги покупок] }
    { 12402;  ;VAT Sales Ledger No. Series;Code10 ;TableRelation="No. Series";
                                                   CaptionML=[ENU=VAT Sales Ledger No. Series;
                                                              RUS=НДС - серия ном. книги продаж] }
    { 12412;  ;Summarize Gains/Losses;Boolean     ;CaptionML=[ENU=Summarize Gains/Losses;
                                                              RUS=Суммировать прибыли/убытки] }
    { 12414;  ;Automatic G/L Correspondence;Boolean;
                                                   CaptionML=[ENU=Automatic G/L Correspondence;
                                                              RUS=Авт. корреспонденция] }
    { 12419;  ;Allow VAT Set. before FA Rel.;Boolean;
                                                   CaptionML=[ENU=Allow VAT Set. before FA Rel.;
                                                              RUS=Разрешить зачет НДС перед вводом в экспл. ОС] }
    { 12425;  ;Cancel Curr. Prepmt. Adjmt.;Boolean;OnValidate=BEGIN
                                                                IF NOT "Cancel Curr. Prepmt. Adjmt." THEN
                                                                  TESTFIELD("Cancel Prepmt. Adjmt. in TA",FALSE);

                                                                CheckPrepmtAdjmtSetup;
                                                              END;

                                                   CaptionML=[ENU=Cancel Curr. Prepmt. Adjmt.;
                                                              RUS=Отменить корр. валютн. предопл.] }
    { 12426;  ;Cancel Prepmt. Adjmt. in TA;Boolean;OnValidate=BEGIN
                                                                IF "Cancel Prepmt. Adjmt. in TA" THEN
                                                                  TESTFIELD("Cancel Curr. Prepmt. Adjmt.");
                                                              END;

                                                   CaptionML=[ENU=Cancel Prepmt. Adjmt. in TA;
                                                              RUS=Отменить корр. предопл. в налог. учете] }
    { 12430;  ;Shared Account Schedule;Code10     ;TableRelation="Acc. Schedule Name";
                                                   CaptionML=[ENU=Shared Account Schedule;
                                                              RUS=Совместный финансовый отчет] }
    { 12440;  ;Analytic Acc. Card Code;Code10     ;TableRelation="Excel Template";
                                                   CaptionML=[ENU=Analytic Acc. Card Code;
                                                              RUS=Код карточки аналит. счета] }
    { 12450;  ;Bank Payment Order Tmpl. Code;Code10;
                                                   TableRelation="Excel Template";
                                                   CaptionML=[ENU=Bank Payment Order Tmpl. Code;
                                                              RUS=Код шабл. платежного поручения] }
    { 12451;  ;Cash Outgoin Order Tmpl. Code;Code10;
                                                   TableRelation="Excel Template";
                                                   CaptionML=[ENU=Cash Outgoin Order Tmpl. Code;
                                                              RUS=Код шабл. расх. кассового ордера] }
    { 12452;  ;Cash Ingoing Order Tmpl. Code;Code10;
                                                   TableRelation="Excel Template";
                                                   CaptionML=[ENU=Cash Ingoing Order Tmpl. Code;
                                                              RUS=Код шабл. прих. кассового ордера] }
    { 12453;  ;Cash Order KO3 Template Code;Code10;TableRelation="Excel Template";
                                                   CaptionML=[ENU=Cash Order KO3 Template Code;
                                                              RUS=Код шаблона кассового ордера KO3] }
    { 12454;  ;Cash Order KO4 Template Code;Code10;TableRelation="Excel Template";
                                                   CaptionML=[ENU=Cash Order KO4 Template Code;
                                                              RUS=Код шаблона кассового ордера KO4] }
    { 12455;  ;Cash Reg. (Month) Tmpl. Code;Code10;TableRelation="Excel Template";
                                                   CaptionML=[ENU=Cash Reg. (Month) Tmpl. Code;
                                                              RUS=Код шабл. рег. кассовых ордеров (месяц)] }
    { 12456;  ;C/V Recon. Act Template Code;Code10;TableRelation="Excel Template";
                                                   CaptionML=[ENU=C/V Recon. Act Template Code;
                                                              RUS=Код шаблона акта выверки клиента/поставщика] }
    { 12489;  ;Contractor Invent. Act Nos.;Code10 ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Contractor Invent. Act Nos.;
                                                              RUS=Серия ном. актов инв. расч. с контрагентами] }
    { 12494;  ;Void Payment as Correction;Boolean ;CaptionML=[ENU=Void Payment as Correction;
                                                              RUS=Аннулировать платеж как коррекцию] }
    { 12495;  ;Short-Term Due Period;DateFormula  ;CaptionML=[ENU=Short-Term Due Period;
                                                              RUS=Период краткосрочной задолженности] }
    { 12496;  ;Enable Russian Tax Accounting;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Enable Russian Tax Accounting" THEN
                                                                  TESTFIELD("Enable Russian Accounting");
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF NOT "Enable Russian Accounting" THEN
                                                                "Enable Russian Tax Accounting" := FALSE;
                                                            END;

                                                   CaptionML=[ENU=Enable Russian Tax Accounting;
                                                              RUS=Включить налоговый учет в России] }
    { 12497;  ;Enable Russian Accounting;Boolean  ;CaptionML=[ENU=Enable Russian Accounting;
                                                              RUS=Включить учет в России] }
    { 12498;  ;Currency Adjmt with Correction;Boolean;
                                                   CaptionML=[ENU=Currency Adjmt with Correction;
                                                              RUS=Корр. валютных курсов как сторно] }
    { 14929;  ;Red Storno VAT Reinstatement;Boolean;
                                                   CaptionML=[ENU=Red Storno VAT Reinstatement;
                                                              RUS=Восстановление НДС красного сторно] }
    { 50001;  ;Extern. LCY Code    ;Code10        ;CaptionML=[ENU=Extern. LCY Code;
                                                              RUS=Внеш. Код Валюты Баланса] }
    { 50002;  ;Excel Number Format ;Text30        ;CaptionML=[ENU=Excel Number Format;
                                                              RUS=Excel Число Формат];
                                                   Description=NC PIF001.4 }
    { 50005;  ;Detail Post Prevew  ;Boolean       ;CaptionML=[ENU=Detail Post Prevew;
                                                              RUS=Детально Предпросмотр Учета];
                                                   Description=NC M2 DP }
    { 50010;  ;Tax Currency Code   ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Tax Currency Code;
                                                              RUS=Валюта Налогов];
                                                   Description=NC NCS-2296 DP }
    { 50020;  ;User Account Check  ;Boolean       ;CaptionML=[ENU=User Account Check;
                                                              RUS=Пользователь Счет Проверка];
                                                   Description=NC TR217 DP }
    { 50025;  ;User Correspondence Check;Boolean  ;CaptionML=[ENU=User Correspondence Check;
                                                              RUS=Пользователь Корреспонд. Проверка];
                                                   Description=NC TR218 DP }
    { 50030;  ;User Amount Post. Check;Boolean    ;CaptionML=[ENU=User Amount Post. Check;
                                                              RUS=Пользователь Сумма Учета Проверка];
                                                   Description=NC TR220 DP }
    { 50035;  ;Use Application Postfix;Boolean    ;CaptionML=[ENU=Use Application Posfix;
                                                              RUS=Использовать Применение Постфикс];
                                                   Description=NC OCPM01 DP }
    { 50040;  ;Tax Dimension Code  ;Code20        ;TableRelation=Dimension;
                                                   CaptionML=[ENU=Taxable Dimension Code;
                                                              RUS=Налог Тип Код Измерения];
                                                   Description=NC OAM02 DP }
    { 50050;  ;Calc. FX Add. Curr. Amount;Boolean ;CaptionML=[ENU=Calc. FX Add. Curr. Amount;
                                                              RUS=Расчет ДОВ Суммы Курс. Разниц];
                                                   Description=NC OAM44 DP }
    { 50060;  ;Loan Calc. First Date;Date         ;CaptionML=[ENU=Loan Calc. First Date;
                                                              RUS=Кредит Расчет Первая Дата];
                                                   Description=NC }
    { 50070;  ;Use Payment Check   ;Boolean       ;CaptionML=[ENU=Use Payment Check;
                                                              RUS=Использовать Плат. Чеки];
                                                   Description=NC NCS-1108 }
    { 50080;  ;Not Post FX G/L from Date;Date     ;CaptionML=[ENU=Not Post Cust./Vend. FX G/L from Date;
                                                              RUS=Не Учитывать Переоценку Клиент/Поставщик  ГК с Даты];
                                                   Description=NC MIO-28 DP }
    { 50100;  ;Check Account Dimension;Boolean    ;CaptionML=[ENU=Check Account Dimension;
                                                              RUS=Контроль Значений Измерений для Фин. Счета];
                                                   Description=NC MDTC07 MP }
    { 50110;  ;Use Bus.Unit for Separ. Trans.;Boolean;
                                                   CaptionML=[ENU=Use Bus.Unit for Separ. Trans.;
                                                              RUS=Использовать Код Филиала для Разделения Транзакций];
                                                   Description=NCS-1893 PCH }
    { 50120;  ;Default Business Unit Code;Code20  ;TableRelation="Business Unit";
                                                   CaptionML=[ENU=Default Business Unit Code;
                                                              RUS=Код Филиала по умолчанию];
                                                   Description=NCS-1893 PCH }
    { 50130;  ;Shortcut Dimension 9 Code;Code20   ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                //NC NOS-26 > SPA
                                                                {
                                                                //NC NCS-2356 > DP
                                                                 IF Dim.CheckIfDimUsed("Shortcut Dimension 9 Code",23,'','',0) THEN
                                                                  ERROR(Text023,Dim.GetCheckDimErr);
                                                                 MODIFY;
                                                                //NC NCS-2356 < DP
                                                                }

                                                                UpdateDimValueGlobalDimNo(xRec."Shortcut Dimension 9 Code","Shortcut Dimension 9 Code",9);
                                                                //NC NOS-26 < SPA
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 9 Code;
                                                              RUS=Ярлык Измерение 9 Код];
                                                   Description=NCS-2356 DP }
    { 50140;  ;Shortcut Dimension 10 Code;Code20  ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                //NC NOS-26 > SPA
                                                                {
                                                                //NC NCS-2356 > DP
                                                                IF Dim.CheckIfDimUsed("Shortcut Dimension 10 Code",24,'','',0) THEN
                                                                  ERROR(Text023,Dim.GetCheckDimErr);
                                                                MODIFY;
                                                                //NC NCS-2356 < DP
                                                                }

                                                                UpdateDimValueGlobalDimNo(xRec."Shortcut Dimension 10 Code","Shortcut Dimension 10 Code",10);
                                                                //NC NOS-26 < SPA
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 10 Code;
                                                              RUS=Ярлык Измерение 10 Код];
                                                   Description=NCS-2356 DP }
    { 51000;  ;Display Hierarchical PL Lines;Boolean;
                                                   CaptionML=[ENU=Display Hierarchical PL Lines;
                                                              RUS=Отображать в Иерархическом Виде Статьи PL];
                                                   Description=NCS1954 PCH,TDRANCS-723 }
    { 53000;  ;Approval for Gen. Journal Line;Boolean;
                                                   CaptionML=[ENU=Approval for Gen. Journal Line;
                                                              RUS=Утверждение для фин. журналов];
                                                   Description=NCS-1880 ORM }
    { 53010;  ;4 Eyes Approval Type;Option        ;CaptionML=[ENU=4 Eyes Approval Type;
                                                              RUS=Тип утверждения 4 глаза];
                                                   OptionCaptionML=[ENU=By Document,By Entry;
                                                                    RUS=По документу,По операции];
                                                   OptionString=By Document,By Entry;
                                                   Description=NCS-2142 ORM }
    { 53050;  ;FI Posting Revision ;Option        ;OptionString=1.0,2.0;
                                                   Description=NCS-2360 }
    { 54001;  ;Cover Sheets No. Series;Code10     ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Cover Sheets No. Series;
                                                              RUS=Шаблон Распределения СН];
                                                   Description=NC PIF001 }
    { 54002;  ;Allocation Dimension 1 Code;Code20 ;TableRelation=Dimension;
                                                   CaptionML=[ENU=Allocation Dimension 1 Code;
                                                              RUS=Распределение Измерение 1 Код];
                                                   Description=NC PIF001 }
    { 54003;  ;Allocation Dimension 2 Code;Code20 ;TableRelation=Dimension;
                                                   CaptionML=[ENU=Allocation Dimension 2 Code;
                                                              RUS=Распределение Измерение 2 Код];
                                                   Description=NC PIF001 }
    { 54004;  ;Alloc. View Analysis Filter;Text50 ;CaptionML=[ENU=Alloc. View Analysis Filter;
                                                              RUS=Распред. Анализ Измер. Фильтр];
                                                   Description=NC PIF001.4 }
    { 54005;  ;Allocate Only Dimension 1;Boolean  ;CaptionML=[ENU=Allocate Only Dimension 1;
                                                              RUS=Распределение Только по Измерению 1];
                                                   Description=NC PIF036 }
    { 54006;  ;Allocation Level Dim. Code;Code20  ;TableRelation=Dimension;
                                                   CaptionML=[ENU=Allocation Level Dimension Code;
                                                              RUS=Распределение Уровни Измерение Код];
                                                   Description=NC PIF036 }
    { 55008;  ;Currency Dimension Code;Code20     ;TableRelation=Dimension;
                                                   CaptionML=[ENU=Currency Dimension Code;
                                                              RUS=Валюта Код Измерения];
                                                   Description=NC MDTA01 MP }
    { 55009;  ;Add Currency Dim. at Posting;Boolean;
                                                   CaptionML=[ENU=Add Currency Dim. at Posting;
                                                              RUS=Добавлять Измерение Валюта при Учете];
                                                   Description=NC MDTA01 MP }
    { 55010;  ;LCY Currency Dimension Value;Code20;TableRelation="Dimension Value".Code WHERE (Dimension Code=FIELD(Currency Dimension Code));
                                                   OnValidate=VAR
                                                                "NCV>"@1000000000 : Integer;
                                                                DimValue@1000000001 : Record 349;
                                                              BEGIN
                                                                //NC MDTA01 > MP
                                                                IF "LCY Currency Dimension Value" <> '' THEN BEGIN
                                                                  DimValue.GET("Currency Dimension Code", "LCY Currency Dimension Value");
                                                                END;
                                                                //NC MDTA01 < MP
                                                              END;

                                                   OnLookup=VAR
                                                              "NCV>"@1000000000 : Integer;
                                                              DimValue@1000000001 : Record 349;
                                                            BEGIN
                                                              //NC MDTA01 > MP
                                                              TESTFIELD("Currency Dimension Code");
                                                              DimValue.RESET;
                                                              DimValue.SETRANGE("Dimension Code", "Currency Dimension Code");
                                                              IF DimValue.GET("Currency Dimension Code", "LCY Currency Dimension Value") THEN;
                                                              IF PAGE.RUNMODAL(PAGE::"Dimension Value List", DimValue) = ACTION::LookupOK THEN BEGIN
                                                                VALIDATE("LCY Currency Dimension Value", DimValue.Code);
                                                              END;
                                                              //NC MDTA01 < MP
                                                            END;

                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=LCY Currency Dimension Value;
                                                              RUS=Лок. Вал. Измерение Значение];
                                                   Description=NC MDTA01 MP }
    { 55020;  ;Business Unit Code Mandatory;Boolean;
                                                   CaptionML=[ENU=Business Unit Code Mandatory;
                                                              RUS=Код Филиала Обязателен];
                                                   Description=NC MDC02 MP }
    { 55030;  ;Allow Transformation From;Date     ;CaptionML=[ENU=Allow Transformation From;
                                                              RUS=Разрешить Трансформацию От];
                                                   Description=NC MAU02 MP }
    { 55040;  ;Amount Post Check   ;Boolean       ;CaptionML=[ENU=Amount Post Check;
                                                              RUS=Сумма Учета Контроль];
                                                   Description=NC TR219 EB }
    { 55041;  ;Not Consolidate Closing Year;Boolean;
                                                   CaptionML=[ENU=Not Consolidate Closing Year;
                                                              RUS=Закрытие Года Не Консолидировать];
                                                   Description=NC TR237 EB }
    { 55042;  ;Not Consolidate Revaluation;Boolean;CaptionML=[ENU=Not Consolidate Revaluation;
                                                              RUS=Переоценка Не Консолидировать];
                                                   Description=NC TR237 EB }
    { 55043;  ;Not Consolidate Exch. Diff.;Boolean;CaptionML=[ENU=Not Consolidate Exchange Amount Difference;
                                                              RUS=Курсовые Разницы Не Консолидировать];
                                                   Description=NC TR237 EB }
    { 55045;  ;Taxable Dimension Code;Code20      ;TableRelation=Dimension;
                                                   CaptionML=[ENU=Taxable Dimension Code;
                                                              RUS=Налог на Прибыль Тип Код Измерения];
                                                   Description=NC OBM003 EB }
    { 55046;  ;Mixed Taxable Dimension Value;Code20;
                                                   TableRelation="Dimension Value".Code WHERE (Dimension Code=FIELD(Taxable Dimension Code));
                                                   CaptionML=[ENU=Mixed Taxable Dimension Value;
                                                              RUS=Смешанные Доходы/Расходы Измерение Значение];
                                                   Description=NC OBM003 EB }
    { 55050;  ;User's Gen. Jnl. Templ.;Code10     ;TableRelation="Gen. Journal Template";
                                                   CaptionML=[ENU=User's Gen. Jnl. Templ.;
                                                              RUS=Пользовательский Шаблон Фин. Журнала];
                                                   Description=TDRANCS-901 }
    { 55051;  ;Create Deal for Agreement;Boolean  ;CaptionML=[ENU=Create Deal for Agreement;
                                                              RUS=Создавать Сделку для Договора];
                                                   Description=TDRANCS-1405 }
    { 55060;  ;Dflt.Exp.Mapping Trans. Scheme;Code20;
                                                   TableRelation=Mapping;
                                                   CaptionML=[ENU=Dflt.Exp.Mapping Trans. Scheme;
                                                              RUS=Схема тран. мэпинга для экспорта];
                                                   Description=NCS-1897 ORM }
    { 55070;  ;Create Export Mapping;Boolean      ;OnValidate=BEGIN
                                                                // NC NCS-1897 > ORM
                                                                IF "Create Export Mapping" THEN
                                                                  TESTFIELD("Dflt.Exp.Mapping Trans. Scheme");
                                                                // NC NCS-1897 < ORM
                                                              END;

                                                   CaptionML=[ENU=Create Export Mapping;
                                                              RUS=Создавать экспортный мэпинг];
                                                   Description=NCS-1897 ORM }
    { 55080;  ;Disable Post.With No Ext.Mpng.;Boolean;
                                                   OnValidate=BEGIN
                                                                // NC NCS-1897 > ORM
                                                                IF "Disable Post.With No Ext.Mpng." THEN
                                                                  TESTFIELD("Create Export Mapping",TRUE);
                                                                // NC NCS-1897 < ORM
                                                              END;

                                                   CaptionML=[ENU=Disable Post.With No Ext.Mpng.;
                                                              RUS=Запретить учет без эксп. мэпинга];
                                                   Description=NCS-1897 ORM }
    { 55090;  ;Employee Expenses Post. Group;Code10;
                                                   TableRelation="Vendor Posting Group";
                                                   CaptionML=[ENU=Employee Expenses Post. Group;
                                                              RUS=Учетная группа затрат сотрудников];
                                                   Description=NCS-1924 ORM }
    { 55100;  ;Employee Exp. EXP. OP Dim.;Code20  ;TableRelation="Dimension Value".Code WHERE (Dimension Code=CONST(EXP.OP));
                                                   CaptionML=[ENU=Employee Exp. EXP. OP Dim.;
                                                              RUS=Измерение EXP. OP затрат сотрудников];
                                                   Description=NCS-1924 ORM }
    { 55110;  ;Employee Expenses Nos.;Code10      ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Employee Expenses Nos.;
                                                              RUS=Серия номеров затрат сотрудников];
                                                   Description=NCS-1924 ORM }
    { 55111;  ;Reverse Source Account;Boolean     ;CaptionML=[ENU=Reverse Source Account;
                                                              RUS=Реверс Источник Фин. Счет];
                                                   Description=NCS-2036 PCH }
    { 55112;  ;Source Account Type ;Option        ;CaptionML=[ENU=Source Account Type;
                                                              RUS=Исходный Счет Тип];
                                                   OptionCaptionML=[ENU=NAV Account,FiRe Account;
                                                                    RUS=NAV Счет,FiRe Счет];
                                                   OptionString=NAV Account,FiRe Account;
                                                   Description=NCS-2055 AAP }
    { 55113;  ;TAX FI Posting Book ;Code20        ;TableRelation="FI Posting Book";
                                                   CaptionML=RUS=ФИ Книга Учета Код;
                                                   Description=NCS-2360 AAP }
    { 55114;  ;TAX FI Posting Portfolio;Code20    ;TableRelation="FI Portfolio";
                                                   CaptionML=RUS=ФИ Портфель Код;
                                                   Description=NCS-2360 AAP }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=%1 %2 %3 have %4 to %5.;RUS=%1 %2 %3 имеет %4 для %5.';
      Text001@1001 : TextConst 'ENU=%1 %2 have %3 to %4.;RUS=%1 %2 имеют %3 для %4.';
      Text002@1002 : TextConst 'ENU=%1 %2 %3 use %4.;RUS=%1 %2 %3 используют %4.';
      Text003@1003 : TextConst 'ENU=%1 %2 use %3.;RUS=%1 %2 используют %3.';
      Text004@1004 : TextConst 'ENU=%1 must be rounded to the nearest %2.;RUS=%1 должно быть округлено до ближайшего %2.';
      Text016@1013 : TextConst 'ENU="Enter one number or two numbers separated by a colon. ";RUS="Введите одно число или два числа через двоеточие. "';
      Text017@1014 : TextConst 'ENU=The online Help for this field describes how you can fill in the field.;RUS=Справка для этого поля описывает, как заполнять поле.';
      Text018@1015 : TextConst 'ENU=You cannot change the contents of the %1 field because there are posted ledger entries.;RUS=Нельзя изменить содержимое поля %1, поскольку существуют учтенные операции ГК.';
      Text021@1018 : TextConst 'ENU=You must close the program and start again in order to activate the amount-rounding feature.;RUS=Чтобы активировать функцию округления сумм, необходимо завершить работу программы и запустить ее заново.';
      Text022@1019 : TextConst 'ENU=You must close the program and start again in order to activate the unit-amount rounding feature.;RUS=Чтобы активировать функцию округления цены единицы, необходимо завершить работу программы и запустить ее заново.';
      Text023@1020 : TextConst 'ENU=%1\You cannot use the same dimension twice in the same setup.;RUS=%1\Нельзя дважды использовать одно измерение в одной настройке.';
      Dim@1021 : Record 348;
      GLEntry@1022 : Record 17;
      ItemLedgerEntry@1023 : Record 32;
      JobLedgEntry@1024 : Record 169;
      ResLedgEntry@1025 : Record 203;
      FALedgerEntry@1026 : Record 5601;
      MaintenanceLedgerEntry@1027 : Record 5625;
      InsCoverageLedgerEntry@1028 : Record 5629;
      VATPostingSetup@1029 : Record 325;
      TaxJurisdiction@1030 : Record 320;
      AnalysisView@1032 : Record 363;
      AnalysisViewEntry@1033 : Record 365;
      AnalysisViewBudgetEntry@1034 : Record 366;
      AdjAddReportingCurr@1005 : Report 86;
      ErrorMessage@1036 : Boolean;
      DependentFieldActivatedErr@1009 : TextConst 'ENU=You cannot change %1 because %2 is selected.;RUS=Нельзя изменить %1, так как выбран %2.';
      Text025@1016 : TextConst 'ENU=The field %1 should not be set to %2 if field %3 in %4 table is set to %5 because deadlocks can occur.;RUS=Поле %1 не должно быть установлено в %2, если поле %3 в таблице %4 равно %5, иначе могут возникнуть взаимоблокировки.';

    PROCEDURE CheckDecimalPlacesFormat@1(VAR DecimalPlaces@1000 : Text[5]);
    VAR
      OK@1001 : Boolean;
      ColonPlace@1002 : Integer;
      DecimalPlacesPart1@1003 : Integer;
      DecimalPlacesPart2@1004 : Integer;
      Check@1005 : Text[5];
    BEGIN
      OK := TRUE;
      ColonPlace := STRPOS(DecimalPlaces,':');

      IF ColonPlace = 0 THEN BEGIN
        IF NOT EVALUATE(DecimalPlacesPart1,DecimalPlaces) THEN
          OK := FALSE;
        IF (DecimalPlacesPart1 < 0) OR (DecimalPlacesPart1 > 9) THEN
          OK := FALSE;
      END ELSE BEGIN
        Check := COPYSTR(DecimalPlaces,1,ColonPlace - 1);
        IF Check = '' THEN
          OK := FALSE;
        IF NOT EVALUATE(DecimalPlacesPart1,Check) THEN
          OK := FALSE;
        Check := COPYSTR(DecimalPlaces,ColonPlace + 1,STRLEN(DecimalPlaces));
        IF Check = '' THEN
          OK := FALSE;
        IF NOT EVALUATE(DecimalPlacesPart2,Check) THEN
          OK := FALSE;
        IF DecimalPlacesPart1 > DecimalPlacesPart2 THEN
          OK := FALSE;
        IF (DecimalPlacesPart1 < 0) OR (DecimalPlacesPart1 > 9) THEN
          OK := FALSE;
        IF (DecimalPlacesPart2 < 0) OR (DecimalPlacesPart2 > 9) THEN
          OK := FALSE;
      END;

      IF NOT OK THEN
        ERROR(
          Text016 +
          Text017);

      IF ColonPlace = 0 THEN
        DecimalPlaces := FORMAT(DecimalPlacesPart1)
      ELSE
        DecimalPlaces := STRSUBSTNO('%1:%2',DecimalPlacesPart1,DecimalPlacesPart2);
    END;

    PROCEDURE GetCurrencyCode@6(CurrencyCode@1000 : Code[10]) : Code[10];
    BEGIN
      CASE CurrencyCode OF
        '':
          EXIT("LCY Code");
        "LCY Code":
          EXIT('');
        ELSE
          EXIT(CurrencyCode);
      END;
    END;

    PROCEDURE GetCurrencySymbol@8() : Text[10];
    BEGIN
      IF "Local Currency Symbol" <> '' THEN
        EXIT("Local Currency Symbol");

      EXIT("LCY Code");
    END;

    LOCAL PROCEDURE RoundingErrorCheck@2(NameOfField@1000 : Text[100]);
    BEGIN
      ErrorMessage := FALSE;
      IF GLEntry.FINDFIRST THEN
        ErrorMessage := TRUE;
      IF ItemLedgerEntry.FINDFIRST THEN
        ErrorMessage := TRUE;
      IF JobLedgEntry.FINDFIRST THEN
        ErrorMessage := TRUE;
      IF ResLedgEntry.FINDFIRST THEN
        ErrorMessage := TRUE;
      IF FALedgerEntry.FINDFIRST THEN
        ErrorMessage := TRUE;
      IF MaintenanceLedgerEntry.FINDFIRST THEN
        ErrorMessage := TRUE;
      IF InsCoverageLedgerEntry.FINDFIRST THEN
        ErrorMessage := TRUE;
      IF ErrorMessage THEN
        ERROR(
          Text018,
          NameOfField);
    END;

    LOCAL PROCEDURE DeleteIntrastatJnl@3();
    VAR
      IntrastatJnlBatch@1000 : Record 262;
      IntrastatJnlLine@1001 : Record 263;
    BEGIN
      IntrastatJnlBatch.SETRANGE(Reported,FALSE);
      IntrastatJnlBatch.SETRANGE("Amounts in Add. Currency",TRUE);
      IF IntrastatJnlBatch.FIND('-') THEN
        REPEAT
          IntrastatJnlLine.SETRANGE("Journal Template Name",IntrastatJnlBatch."Journal Template Name");
          IntrastatJnlLine.SETRANGE("Journal Batch Name",IntrastatJnlBatch.Name);
          IntrastatJnlLine.DELETEALL;
        UNTIL IntrastatJnlBatch.NEXT = 0;
    END;

    LOCAL PROCEDURE DeleteAnalysisView@33();
    BEGIN
      IF AnalysisView.FIND('-') THEN
        REPEAT
          IF AnalysisView.Blocked = FALSE THEN BEGIN
            AnalysisViewEntry.SETRANGE("Analysis View Code",AnalysisView.Code);
            AnalysisViewEntry.DELETEALL;
            AnalysisViewBudgetEntry.SETRANGE("Analysis View Code",AnalysisView.Code);
            AnalysisViewBudgetEntry.DELETEALL;
            AnalysisView."Last Entry No." := 0;
            AnalysisView."Last Budget Entry No." := 0;
            AnalysisView."Last Date Updated" := 0D;
            AnalysisView.MODIFY;
          END ELSE BEGIN
            AnalysisView."Refresh When Unblocked" := TRUE;
            AnalysisView.MODIFY;
          END;
        UNTIL AnalysisView.NEXT = 0;
    END;

    PROCEDURE IsPostingAllowed@22(PostingDate@1000 : Date) : Boolean;
    BEGIN
      EXIT(PostingDate >= "Allow Posting From");
    END;

    PROCEDURE OptimGLEntLockForMultiuserEnv@4() : Boolean;
    VAR
      InventorySetup@1000 : Record 313;
    BEGIN
      IF "Use Legacy G/L Entry Locking" THEN
        EXIT(FALSE);

      IF InventorySetup.GET THEN
        IF InventorySetup."Automatic Cost Posting" THEN
          EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE FirstAllowedPostingDate@78() AllowedPostingDate : Date;
    VAR
      InvtPeriod@1000 : Record 5814;
    BEGIN
      AllowedPostingDate := "Allow Posting From";
      IF NOT InvtPeriod.IsValidDate(AllowedPostingDate) THEN
        AllowedPostingDate := CALCDATE('<+1D>',AllowedPostingDate);
    END;

    PROCEDURE UpdateDimValueGlobalDimNo@7(xDimCode@1001 : Code[20];DimCode@1002 : Code[20];ShortcutDimNo@1003 : Integer);
    VAR
      DimensionValue@1000 : Record 349;
    BEGIN
      IF Dim.CheckIfDimUsed(DimCode,ShortcutDimNo,'','',0) THEN
        ERROR(Text023,Dim.GetCheckDimErr);
      IF xDimCode <> '' THEN BEGIN
        DimensionValue.SETRANGE("Dimension Code",xDimCode);
        DimensionValue.MODIFYALL("Global Dimension No.",0);
      END;
      IF DimCode <> '' THEN BEGIN
        DimensionValue.SETRANGE("Dimension Code",DimCode);
        DimensionValue.MODIFYALL("Global Dimension No.",ShortcutDimNo);
      END;
      MODIFY;
    END;

    LOCAL PROCEDURE HideDialog@5() : Boolean;
    BEGIN
      EXIT((CurrFieldNo = 0) OR NOT GUIALLOWED);
    END;

    PROCEDURE CheckPrepmtAdjmtSetup@1210000();
    VAR
      SalesSetup@1210000 : Record 311;
      PurchSetup@1210001 : Record 312;
    BEGIN
      IF "Enable Russian Accounting" THEN
        IF "Cancel Curr. Prepmt. Adjmt." THEN BEGIN
          SalesSetup.GET;
          SalesSetup.TESTFIELD("Shipment on Invoice");
          SalesSetup.TESTFIELD("Return Receipt on Credit Memo");
          PurchSetup.GET;
          PurchSetup.TESTFIELD("Receipt on Invoice");
          PurchSetup.TESTFIELD("Return Shipment on Credit Memo");
        END;
    END;

    PROCEDURE IsGLAccountingOnly@1101495001() : Boolean;
    VAR
      CompanyRec@1101495000 : Record 2000000006;
    BEGIN
      //NC MIO-11 AES
      CompanyRec.GET(COMPANYNAME);
      EXIT(CompanyRec."G/L Accounting Only");
    END;

    BEGIN
    {
      Version List NAVW15.00.01,NAVRU5.00.01.03,

      NC PIF001 DL Добавлено поле 1C LCY Code
      NC MDTC07 MP Новое поле Check Account Dimension
      NC MDC02 MP Новое поле Business Code Mandatory
      NC MAU02 MP Новое поле Allow Transformation From
      ------------
      NC BLD01 Eb создан билд, вкл модификации NCPIF001,PIF036,MDTC07,MDTA01,MDC02,MAU02
      NC TR219 EB поле Amount Post Check
      NC TR237 EB поля "Not Consolidate Closing Year","Not Consolidate Revaluation","Not Consolidate Exch. Diff."
      NC OCPM01 DP Добавлено поле "Use Application Posfix"
      NC OBM003 EB поля "Taxable Dimension Code","Mixed Taxable Dimension Value"
      NC OFA002 DP Добалено поле "Tax Dimension Code"
      NC OAM22 DP Изменено свойство Caption Class полей ..(LCY)
      TD BMN 21.01.2013 NCS-833 "Создать алерт на изменение разрешенного периода учета"
      TDRANCS-901
        ADD Filed "User's Gen. Jnl. Templ."
      NC NCS-1108 DP Поле "Use Payment Check"
      NC MIO-11 AES:
        Новые переменные: CompanyRec [Rec]
        Новые функции:    IsGLAccountingOnly
      TDRANCS-1405
        added field "Create Deal for Agreement"
      NC MIO-28 DP
        Added Field "Not Post  FX G/L from Date"
      TDVYNCS-1475 > Modification alert
      TDRANCS-1586
      NCS-1893 PCH Добавлены поля: "Use Bus.Unit for Separ. Trans.", "Default Business Unit Code"
      NCS-1897 ORM Добавлены поля: "Dflt.Exp.Mapping Trans. Scheme", "Create Export Mapping", "Disable Post.With No Ext.Mpng."
      NCS-1880 ORM Добавлено поле "Approval for Gen. Journal Line"
      BLD003 NCBLD02,APCOC56,S-901,S-1108,S-1405,MIO-11,MIO-28,S-1475,s1586
      NCS-1924 ORM Добавлены поля "Employee Expenses Post. Group", "Employee Exp. EXP. OP Dim.", "Employee Expenses Nos."
      NC S1954 PCH TDRANCS-723> Added Field "Display Hierarchical PL Lines"
      NC S2036 PCH Добавлено поле Reverse Source Account
      NC S2055 AAP Added field "Source Account Type"
      NCS-2142 ORM Added field "4 Eyes Approval Type"
      NCS-2360 ORM Added field "FI Posting Revision"
      NCS-2360 AAP Added field "TAX FI Posting Book", "TAX FI Posting Portfolio"
      NC NCS-2296 DP added field "Tax Currency Code"
      NC NCS-2356 DP added field "Shortcut Dimension 9 Code", "Shortcut Dimension 10 Code"
    }
    END.
  }
}

