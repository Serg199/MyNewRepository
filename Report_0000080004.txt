OBJECT Report 80004 ImportCustomersFromExcel
{
  OBJECT-PROPERTIES
  {
    Date=27.03.17;
    Time=14:18:25;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    Permissions=TableData 50045=rimd;
    CaptionML=[ENU=ImportCustomersFromExcel;
               RUS=Импорт Customers из Excel];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  ExcelBuf.DELETEALL;
                  ReadExcelSheet;
                  AnalyzeData;
                END;

  }
  DATASET
  {
    { 6325;    ;DataItem;BudgetBuf           ;
               DataItemTable=Table371;
               DataItemTableView=SORTING(G/L Account No.,Dimension Value Code 1,Dimension Value Code 2,Dimension Value Code 3,Dimension Value Code 4,Dimension Value Code 5,Dimension Value Code 6,Dimension Value Code 7,Dimension Value Code 8,Date);
               OnPostDataItem=BEGIN
                                MESSAGE(Text001);
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'ENU=Do you want to create %1 %2.;RUS=Импорт завершен';
      Text002@1007 : TextConst 'ENU=Analyzing Data...\\;RUS=Анализ Данных...\\';
      ExcelBuf@1027 : Record 370;
      FileName@1037 : Text[250];
      SheetName@1038 : Text[250];
      EntryNo@1041 : Integer;
      TotalRecNo@1044 : Integer;
      RecNo@1045 : Integer;
      Window@1046 : Dialog;
      Description@1047 : Text[50];
      ImportOption@1054 : 'Replace entries,Add entries';
      RowNo@1000000000 : Integer;
      Customer@1000000001 : Record 50045;
      Text006@1000000002 : TextConst 'ENU=Import Excel File;RUS=Импорт Файл Excel';
      texty@1000000003 : Text[50];

    LOCAL PROCEDURE ReadExcelSheet@1();
    BEGIN
      ExcelBuf.OpenBook(FileName,SheetName);
      ExcelBuf.ReadSheet;
    END;

    LOCAL PROCEDURE AnalyzeData@2();
    VAR
      TempExcelBuf@1000 : TEMPORARY Record 370;
      BudgetBuf@1001 : Record 371;
      TempBudgetBuf@1002 : TEMPORARY Record 371;
      HeaderRowNo@1003 : Integer;
      CountDim@1004 : Integer;
      TestDate@1005 : Date;
      OldRowNo@1006 : Integer;
      DimRowNo@1007 : Integer;
      DimCode3@1008 : Code[20];
    BEGIN
      Window.OPEN(
        Text002 +
        '@1@@@@@@@@@@@@@@@@@@@@@@@@@\');
      Window.UPDATE(1,0);
      TotalRecNo := ExcelBuf.COUNT;
      RecNo := 0;
      RowNo := 1;

      IF ExcelBuf.FIND('-') THEN BEGIN
        REPEAT
          RecNo := RecNo + 1;
          Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));

            CASE ExcelBuf."Column No." OF
              1:
                BEGIN
                  Customer.INIT;
                  Customer."Id External System" := ExcelBuf."Cell Value as Text";
                END;
              2: Customer."No.":=  ExcelBuf."Cell Value as Text";
              3:
                BEGIN
                 IF ExcelBuf."Cell Value as Text" = 'нет' THEN Customer."Relationship to the Group" :=  FALSE
                 ELSE Customer."Relationship to the Group" :=  TRUE;
                END;
              4:
                BEGIN
                  CASE ExcelBuf."Cell Value as Text" OF
                    'Банки': Customer."Counterparty Category" := 0;
                    'Брокеры': Customer."Counterparty Category" := 1;
                    'Биржи': Customer."Counterparty Category" := 2;
                    'Прочие фин. институты': Customer."Counterparty Category" := 3;
                    'Клиенты/Контрагенты': Customer."Counterparty Category" := 4;
                  END;
                END;
              5: Customer.Name :=  ExcelBuf."Cell Value as Text";
              6:
                BEGIN
                  CASE ExcelBuf."Cell Value as Text" OF
                    'ФЛ': Customer."Counterparty Type" := 0;
                    'ЮЛ': Customer."Counterparty Type" := 1;
                  END;
                END;
              7: Customer."Country of Registration" :=  ExcelBuf."Cell Value as Text";
              8: Customer.Industry :=  ExcelBuf."Cell Value as Text";
              9: Customer."Customer Segment" :=  ExcelBuf."Cell Value as Text";
              10:
                BEGIN
                  Customer."Customer ID" :=  ExcelBuf."Cell Value as Text";
                  InsertCustomerInBuffer(Customer);
              END;
            END;
        UNTIL ExcelBuf.NEXT = 0;
        END;

      Window.CLOSE;
    END;

    PROCEDURE InsertCustomerInBuffer@1000000039(CustomerInBuffer@1000000000 : Record 50045);
    VAR
      customer@1000000001 : Record 50045;
    BEGIN
      CustomerInBuffer.INSERT;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

