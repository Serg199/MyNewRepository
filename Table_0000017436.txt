OBJECT Table 17436 Vacation Schedule Line
{
  OBJECT-PROPERTIES
  {
    Date=15.09.15;
    Time=12:00:00;
    Version List=NAVRU9.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Vacation Schedule Line;
               RUS=Строка графика отпусков];
  }
  FIELDS
  {
    { 1   ;   ;Year                ;Integer       ;CaptionML=[ENU=Year;
                                                              RUS=Год] }
    { 2   ;   ;Employee No.        ;Code20        ;TableRelation=Employee;
                                                   OnValidate=BEGIN
                                                                UpdateEmployee("Start Date");

                                                                IF ("Start Date" <> 0D) AND ("End Date" <> 0D) THEN BEGIN
                                                                  VacationScheduleLine.RESET;
                                                                  VacationScheduleLine.SETRANGE(Year,Year);
                                                                  VacationScheduleLine.SETRANGE("Employee No.","Employee No.");
                                                                  VacationScheduleLine.SETFILTER("Line No.",'<>%1',"Line No.");
                                                                  IF VacationScheduleLine.FINDSET THEN
                                                                    REPEAT
                                                                      IF (("Start Date" <= VacationScheduleLine."Start Date") AND
                                                                          ("End Date" >= VacationScheduleLine."Start Date")) OR
                                                                         (("Start Date" <= VacationScheduleLine."End Date") AND
                                                                          ("End Date" >= VacationScheduleLine."End Date"))
                                                                      THEN
                                                                        ERROR(Text001,
                                                                          VacationScheduleLine."Start Date",VacationScheduleLine."End Date",VacationScheduleLine."Line No.");
                                                                    UNTIL VacationScheduleLine.NEXT = 0;

                                                                  Employee.GetJobEntry("Employee No.","Start Date",EmployeeJobEntry);
                                                                  "Calendar Days" :=
                                                                    CalendarMgt.GetPeriodInfo(
                                                                      EmployeeJobEntry."Calendar Code","Start Date","End Date",1) -
                                                                    CalendarMgt.GetPeriodInfo(
                                                                      EmployeeJobEntry."Calendar Code","Start Date","End Date",4);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Employee No.;
                                                              RUS=Код сотрудника] }
    { 3   ;   ;Start Date          ;Date          ;OnValidate=BEGIN
                                                                IF DATE2DMY("Start Date",3) <> Year THEN
                                                                  ERROR(Text000,FIELDCAPTION("Start Date"),Year);

                                                                VALIDATE("Employee No.");
                                                              END;

                                                   CaptionML=[ENU=Start Date;
                                                              RUS=Дата начала] }
    { 4   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              RUS=Номер строки] }
    { 5   ;   ;Calendar Days       ;Decimal       ;CaptionML=[ENU=Calendar Days;
                                                              RUS=Календарные дни];
                                                   Editable=No }
    { 6   ;   ;Actual Start Date   ;Date          ;CaptionML=[ENU=Actual Start Date;
                                                              RUS=Фактическая дата начала] }
    { 7   ;   ;Carry Over Reason   ;Text30        ;CaptionML=[ENU=Carry Over Reason;
                                                              RUS=Основание переноса] }
    { 8   ;   ;Estimated Start Date;Date          ;CaptionML=[ENU=Estimated Start Date;
                                                              RUS=Ожидаемая дата начала] }
    { 9   ;   ;End Date            ;Date          ;OnValidate=BEGIN
                                                                VALIDATE("Employee No.");
                                                              END;

                                                   CaptionML=[ENU=End Date;
                                                              RUS=Дата окончания] }
    { 10  ;   ;Org. Unit Code      ;Code10        ;TableRelation="Organizational Unit";
                                                   OnValidate=BEGIN
                                                                OrganizationalUnit.GET("Org. Unit Code");
                                                                OrganizationalUnit.TESTFIELD(Blocked,FALSE);
                                                              END;

                                                   CaptionML=[ENU=Org. Unit Code;
                                                              RUS=Код подразделения] }
    { 11  ;   ;Org. Unit Name      ;Text50        ;CaptionML=[ENU=Org. Unit Name;
                                                              RUS=Название подразделения] }
    { 12  ;   ;Job Title Code      ;Code10        ;TableRelation="Job Title";
                                                   OnValidate=BEGIN
                                                                JobTitle.GET("Job Title Code");
                                                                JobTitle.TESTFIELD(Blocked,FALSE);
                                                              END;

                                                   CaptionML=[ENU=Job Title Code;
                                                              RUS=Код должности] }
    { 13  ;   ;Job Title Name      ;Text50        ;CaptionML=[ENU=Job Title Name;
                                                              RUS=Название должности] }
    { 14  ;   ;Employee Name       ;Text90        ;CaptionML=[ENU=Employee Name;
                                                              RUS=Имя сотрудника] }
    { 15  ;   ;Comments            ;Text30        ;CaptionML=[ENU=Comments;
                                                              RUS=Комментарии] }
  }
  KEYS
  {
    {    ;Year,Line No.                           ;Clustered=Yes }
    {    ;Year,Employee No.,Start Date             }
    {    ;Year,Org. Unit Code                      }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Employee@1210001 : Record 5200;
      Text000@1210000 : TextConst 'ENU=You should select %1 within current year %2.;RUS=Необходимо выбрать %1 в текущем году %2.';
      VacationScheduleLine@1210002 : Record 17436;
      Text001@1210003 : TextConst 'ENU=Current period overlap with period from %1 to %2 in line %3.;RUS=Текущий период перекрывается с периодом %1 - %2 в строке %3.';
      EmployeeJobEntry@1210004 : Record 17363;
      OrganizationalUnit@1210006 : Record 12422;
      JobTitle@1210007 : Record 12423;
      CalendarMgt@1210005 : Codeunit 17430;

    PROCEDURE UpdateEmployee@1210002(Date@1210000 : Date);
    BEGIN
      IF Employee.GET("Employee No.") THEN BEGIN
        VALIDATE("Org. Unit Code",Employee."Org. Unit Code");
        "Org. Unit Name" := Employee.GetDepartmentName;
        VALIDATE("Job Title Code",Employee."Job Title Code");
        "Job Title Name" := Employee.GetJobTitleName;
        "Employee Name" := COPYSTR(Employee.GetFullNameOnDate(Date),1,MAXSTRLEN("Employee Name"));
      END;
    END;

    PROCEDURE SuggestEmployees@1210001(Year@1210000 : Integer);
    VAR
      VacationScheduleLine2@1210002 : Record 17436;
      StartDate@1210001 : Date;
      LineNo@1210003 : Integer;
    BEGIN
      VacationScheduleLine2.RESET;
      VacationScheduleLine2.SETRANGE(Year,Year);
      IF VacationScheduleLine2.FINDLAST THEN
        LineNo := VacationScheduleLine2."Line No." + 10000;

      StartDate := DMY2DATE(1,1,Year);
      Employee.RESET;
      IF Employee.FINDSET THEN
        REPEAT
          IF Employee.IsEmployed(StartDate) THEN BEGIN
            VacationScheduleLine2.RESET;
            VacationScheduleLine2.SETRANGE(Year,Year);
            VacationScheduleLine2.SETRANGE("Employee No.",Employee."No.");
            IF VacationScheduleLine2.ISEMPTY THEN BEGIN
              VacationScheduleLine2.INIT;
              VacationScheduleLine2.VALIDATE(Year,Year);
              VacationScheduleLine2.VALIDATE("Employee No.",Employee."No.");
              VacationScheduleLine2."Line No." := LineNo;
              VacationScheduleLine2.INSERT;

              LineNo += 10000;
            END;
          END;
        UNTIL Employee.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

