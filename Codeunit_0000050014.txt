OBJECT Codeunit 50014 Create Log File
{
  OBJECT-PROPERTIES
  {
    Date=11.04.14;
    Time=10:34:28;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    SingleInstance=Yes;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      VarFile@1000000001 : File;
      VarFileName@1000000002 : Text[1024];
      StartTime@1000000003 : Time;
      WorkTime@1000000004 : Time;
      Text55000@1000000005 : TextConst 'RUS="%1; %2; %3; d=%4; %5"';
      LastTime@1000000000 : ARRAY [5] OF Time;
      LastTimeCounter@1101495000 : ARRAY [55] OF Time;
      TimeCounter@1101495001 : ARRAY [55] OF Integer;
      Text55001@1101495002 : TextConst 'RUS="%1[%2]; Counter=%3 (%4 %)"';
      IsActive@1000000006 : Boolean;

    PROCEDURE SetIsActive@1000000003(NewIsActive@1000000000 : Boolean);
    BEGIN
      //EXIT;
      IsActive := NewIsActive;
    END;

    PROCEDURE WriteLogFile@1000000000(txtLogMessage@1000000000 : Text[1024];FirstRun@1101495000 : Boolean;VarClose@1000000003 : Boolean;iSub@1000000004 : Integer);
    VAR
      Lenght@1000000001 : Integer;
      Pos@1000000002 : Integer;
      txtLogLine@1000000005 : Text[1024];
      iSubCounter@1101495001 : Integer;
      i@1101495002 : Integer;
    BEGIN
      IF NOT IsActive THEN
        EXIT;
      IF iSub > ARRAYLEN(LastTime) THEN BEGIN
        iSubCounter := ABS(iSub) -  ARRAYLEN(LastTime);
      END ELSE IF iSub < 0 THEN BEGIN
        iSub := ABS(iSub);
        LastTime[iSub] := TIME;
      END;
      IF FirstRun = TRUE THEN
        BEGIN
          FOR i := 1 TO ARRAYLEN(LastTime) DO
            LastTime[i] := 0T;
          FOR i := 1 TO ARRAYLEN(LastTimeCounter) DO
            LastTimeCounter[i] := 0T;
          FOR i := 1 TO ARRAYLEN(TimeCounter) DO
            TimeCounter[i] := 0;

          VarFileName := 'C:\TEMP\' + txtLogMessage + '.txt';
          VarFile.WRITEMODE(TRUE);
          VarFile.TEXTMODE(TRUE);
          VarFile.QUERYREPLACE(FALSE);
          VarFile.CREATE(VarFileName);
          FirstRun := TRUE;
          StartTime := TIME;
          txtLogLine := STRSUBSTNO(Text55000, TODAY, StartTime, 0, 0, txtLogMessage);
          VarFile.WRITE(txtLogLine);
          LastTime[iSub] := TIME;
        END
      ELSE IF iSub = 0 THEN
        BEGIN
          VarFile.WRITE(txtLogMessage);
        END
      ELSE IF iSub > ARRAYLEN(LastTime) THEN
        BEGIN
          txtLogLine := STRSUBSTNO(Text55001, txtLogMessage, iSub, TimeCounter[iSubCounter],
                                              ROUND(100 * TimeCounter[iSubCounter]/(TIME - StartTime)) );
          VarFile.WRITE(txtLogLine);
        END
      ELSE
        BEGIN
          txtLogLine := STRSUBSTNO(Text55000, TODAY, TIME, (TIME - StartTime)/1000, TIME - LastTime[iSub], txtLogMessage);
          VarFile.WRITE(txtLogLine);
          LastTime[iSub] := TIME;
        END;

      IF VarClose THEN VarFile.CLOSE;
    END;

    PROCEDURE StartCounter@1101495011(iSubCounter@1101495000 : Integer);
    BEGIN
      IF NOT IsActive THEN
        EXIT;
      IF iSubCounter < 0 THEN BEGIN
        iSubCounter := ABS(iSubCounter) -  ARRAYLEN(LastTime);
        LastTimeCounter[iSubCounter] := TIME;
      END ELSE BEGIN
        iSubCounter := ABS(iSubCounter) -  ARRAYLEN(LastTime);
        IF LastTimeCounter[iSubCounter] <> 0T THEN BEGIN
          TimeCounter[iSubCounter] += TIME - LastTimeCounter[iSubCounter];
          LastTimeCounter[iSubCounter] := 0T;
        END;
      END;
    END;

    BEGIN
    {
      NC MIO-10.8 DP Изменена размерность переменных LastTimeCounter, TimeCounter (40->55)
    }
    END.
  }
}

