OBJECT Page 12403 G/L Corresp. General Ledger
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=G/L Corresp. General Ledger;
               RUS=Корреспонденция Главной книги];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table12401;
    PageType=Worksheet;
    SourceTableTemporary=Yes;
    ShowFilter=No;
    OnOpenPage=BEGIN
                 GLSetup.GET;
                 IF PeriodType = PeriodType::"Accounting Period" THEN
                   FindUserPeriod('')
                 ELSE
                   FindPeriod('');
                 SetColumnNames;
                 CreateView;
                 ModifyView;
               END;

    OnAfterGetRecord=BEGIN
                       CLEAR(GLAccount);
                       CLEAR(BalanceAmounts);

                       DebitAmount := CalcDebitCreditAmount(TRUE);
                       CreditAmount := CalcDebitCreditAmount(FALSE);

                       IF "Transaction No." = 0 THEN BEGIN
                         GLAccount.GET("Debit Source No.");
                         GLAccMakeFilters;
                         GLAccount.CalculateAmounts(BalanceAmounts);
                         GLAccount.CALCFIELDS("Net Change");
                       END;

                       Emphasize := EmphasizeLine;
                       IsTotaling := GLAccount."Account Type" <> GLAccount."Account Type"::Posting;
                     END;

    ActionList=ACTIONS
    {
      { 19      ;    ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 22      ;1   ;ActionGroup;
                      CaptionML=[ENU=Sho&w;
                                 RUS=Пока&зать];
                      Image=Action }
      { 20      ;1   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=C&ard;
                                 RUS=К&арточка];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 17;
                      RunPageLink=No.=FIELD(Debit Source No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Card;
                      PromotedCategory=Process }
      { 21      ;1   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Ledger E&ntries;
                                 RUS=&Книга операций];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 20;
                      RunPageLink=G/L Account No.=FIELD(Debit Source No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=GeneralLedger;
                      PromotedCategory=Process }
      { 24      ;1   ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 RUS=Ко&мментарии];
                      RunObject=Page 124;
                      RunPageLink=Table Name=CONST(G/L Account),
                                  No.=FIELD(Debit Source No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ViewComments;
                      PromotedCategory=Process }
      { 17      ;1   ;Action    ;
                      Name=PreviousPeriod;
                      CaptionML=[ENU=Previous Period;
                                 RUS=Предыдущий период];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('<=');
                                 ModifyView;
                               END;
                                }
      { 18      ;1   ;Action    ;
                      Name=NextPeriod;
                      CaptionML=[ENU=Next Period;
                                 RUS=Следующий период];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('>=');
                                 ModifyView;
                               END;
                                }
      { 23      ;1   ;Separator  }
      { 1210003 ;1   ;Action    ;
                      Name=ForceRecalculation;
                      CaptionML=[ENU=Force Recalculation;
                                 RUS=Принудительный перерасчет];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Refresh;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ForceRecalculate;
                               END;
                                }
      { 32      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 25      ;1   ;ActionGroup;
                      CaptionML=[ENU=B&alance;
                                 RUS=С&альдо] }
      { 26      ;2   ;Action    ;
                      CaptionML=[ENU=G/L Account Balance;
                                 RUS=Сальдо счета ГК];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 415;
                      RunPageLink=No.=FIELD(Debit Source No.),
                                  Global Dimension 1 Filter=FIELD(Debit Global Dimension 1 Code),
                                  Global Dimension 2 Filter=FIELD(Debit Global Dimension 2 Code);
                      Image=GLAccountBalance;
                      OnAction=BEGIN
                                 GLAccMakeFilters;
                                 PAGE.RUNMODAL(PAGE::"G/L Account Balance",GLAccount);
                               END;
                                }
      { 27      ;2   ;Action    ;
                      CaptionML=[ENU=G/L Balance;
                                 RUS=Сальдо ГК];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 414;
                      Image=GLBalance }
      { 33      ;2   ;Action    ;
                      CaptionML=[ENU=G/L Balance by Dimension;
                                 RUS=Сальдо ГК по измерению];
                      ApplicationArea=#Suite;
                      RunObject=Page 408;
                      Image=GLBalanceDimension }
      { 28      ;2   ;Action    ;
                      CaptionML=[ENU=G/L Account Balance/Budget;
                                 RUS=Сальдо/бюджет по счету ГК];
                      ApplicationArea=#Suite;
                      RunObject=Page 154;
                      RunPageLink=No.=FIELD(Debit Source No.);
                      Image=GLAccountBalance;
                      OnAction=BEGIN
                                 GLAccMakeFilters;
                                 PAGE.RUNMODAL(PAGE::"G/L Account Balance/Budget",GLAccount);
                               END;
                                }
      { 29      ;2   ;Action    ;
                      CaptionML=[ENU=G/L Balance/Budget;
                                 RUS=Сальдо/бюджет ГК];
                      ApplicationArea=#Suite;
                      RunObject=Page 422;
                      Image=GLBalance }
      { 30      ;2   ;Action    ;
                      CaptionML=[ENU=Customer G/L Turnover;
                                 RUS=Оборотная ведомость клиента по ГК];
                      ApplicationArea=#Basic,#Suite;
                      Image=CustomerLedger;
                      OnAction=VAR
                                 Customer@1000 : Record 18;
                               BEGIN
                                 Customer.SETFILTER("G/L Account Filter","Debit Source No.");
                                 Customer.SETFILTER("Date Filter",DateFilter);
                                 PAGE.RUNMODAL(PAGE::"Customer G/L Turnover",Customer);
                               END;
                                }
      { 31      ;2   ;Action    ;
                      CaptionML=[ENU=Vendor G/L Turnover;
                                 RUS=Оборотная ведомость поставщика по ГК];
                      ApplicationArea=#Basic,#Suite;
                      Image=VendorLedger;
                      OnAction=VAR
                                 Vendor@1000 : Record 23;
                               BEGIN
                                 Vendor.SETFILTER("G/L Account Filter","Debit Source No.");
                                 Vendor.SETFILTER("Date Filter",DateFilter);
                                 PAGE.RUNMODAL(PAGE::"Vendor G/L Turnover",Vendor);
                               END;
                                }
      { 36      ;1   ;ActionGroup;
                      CaptionML=[ENU=P&rint;
                                 RUS=П&ечать] }
      { 37      ;2   ;Action    ;
                      Name=General Ledger;
                      CaptionML=[ENU=General Ledger;
                                 RUS=Главная книга];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 GLAcc@1000 : Record 15;
                               BEGIN
                                 GLAcc.RESET;
                                 GLAcc.SETRANGE("No.","Debit Source No.");
                                 REPORT.RUNMODAL(REPORT::"G/L Corresp. General Ledger",TRUE,FALSE,GLAcc);
                               END;
                                }
      { 38      ;2   ;Action    ;
                      Name=G/L Account Turnover;
                      CaptionML=[ENU=G/L Account Turnover;
                                 RUS=Оборотная ведомость по ГК];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Report 12436;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report }
      { 39      ;2   ;Action    ;
                      Name=G/L Account Card;
                      CaptionML=[ENU=G/L Account Card;
                                 RUS=Карточка счета ГК];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report;
                      OnAction=VAR
                                 GLAcc@1000 : Record 15;
                               BEGIN
                                 GLAcc.RESET;
                                 GLAcc.SETRANGE("No.","Debit Source No.");
                                 REPORT.RUNMODAL(REPORT::"G/L Account Card",TRUE,FALSE,GLAcc);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                ContainerType=ContentArea }

    { 9   ;1   ;Group     ;
                CaptionML=[ENU=Filters;
                           RUS=Фильтры];
                GroupType=Group }

    { 10  ;2   ;Field     ;
                Name=Date Filter;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DateFilter;
                OnValidate=VAR
                             ApplicationManagement@1000 : Codeunit 1;
                           BEGIN
                             IF ApplicationManagement.MakeDateFilter(DateFilter) = 0 THEN;
                             GLAccount.SETFILTER("Date Filter",DateFilter);
                             DateFilter := GLAccount.GETFILTER("Date Filter");
                             ModifyView;
                           END;
                            }

    { 45  ;2   ;Field     ;
                CaptionML=[ENU=View by;
                           RUS=Просмотр по];
                ToolTipML=[ENU=Day;
                           RUS=День];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                 RUS=День,Неделя,Месяц,Квартал,Год,Учетный период];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             IF PeriodType = PeriodType::"Accounting Period" THEN
                               FindUserPeriod('')
                             ELSE
                               FindPeriod('');
                             ModifyView;
                           END;
                            }

    { 3   ;2   ;Field     ;
                Name=G/L Account Filter;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GLAccountFilter;
                TableRelation="G/L Account".No.;
                OnValidate=BEGIN
                             UpdateView;
                           END;
                            }

    { 11  ;2   ;Field     ;
                Name=Business Unit Filter;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BusinessUnitFilter;
                TableRelation="Business Unit";
                OnValidate=BEGIN
                             ModifyView;
                           END;
                            }

    { 12  ;2   ;Field     ;
                Name=Global Dimension 1 Filter;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GlobalDimension1Filter;
                CaptionClass='1,3,1';
                OnValidate=BEGIN
                             ModifyView;
                           END;

                OnLookup=BEGIN
                           EXIT(GLAccount.LookUpDimFilter(GLSetup."Global Dimension 1 Code",Text));
                         END;
                          }

    { 13  ;2   ;Field     ;
                Name=Global Dimension 2 Filter;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GlobalDimension2Filter;
                CaptionClass='1,3,2';
                OnValidate=BEGIN
                             ModifyView;
                           END;

                OnLookup=BEGIN
                           EXIT(GLAccount.LookUpDimFilter(GLSetup."Global Dimension 2 Code",Text));
                         END;
                          }

    { 34  ;2   ;Field     ;
                Name=Switch Debit/Credit;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SwitchAccounts;
                OnValidate=BEGIN
                             SetColumnNames;
                             SwitchGLCorr;
                           END;
                            }

    { 6   ;1   ;Group     ;
                Editable=FALSE;
                IndentationColumnName="Transaction No.";
                ShowAsTree=Yes;
                GroupType=Repeater }

    { 15  ;2   ;Field     ;
                CaptionML=[ENU=G/L Account No.;
                           RUS=Номер счета ГК];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GLAccount."No.";
                Importance=Promoted }

    { 16  ;2   ;Field     ;
                CaptionML=[ENU=G/L Account Name;
                           RUS=Название счета ГК];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GLAccount.Name;
                Style=Strong;
                StyleExpr=IsTotaling }

    { 35  ;2   ;Field     ;
                CaptionML=[ENU=Starting Balance;
                           RUS=Начальное сальдо];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr=BalanceAmounts[BalanceType::StartBal];
                OnDrillDown=BEGIN
                              DrillDownGLEntry(Show::BeginPeriod);
                            END;
                             }

    { 40  ;2   ;Field     ;
                Name=StartingBalanceDebit;
                CaptionML=[ENU=Starting Balance Debit;
                           RUS=Начальное сальдо - дебет];
                BlankZero=Yes;
                SourceExpr=BalanceAmounts[BalanceType::StartBalDebit];
                Visible=FALSE }

    { 41  ;2   ;Field     ;
                Name=StartingBalanceCredit;
                CaptionML=[ENU=Starting Balance Credit;
                           RUS=Начальное сальдо - кредит];
                BlankZero=Yes;
                SourceExpr=BalanceAmounts[BalanceType::StartBalCredit];
                Visible=FALSE }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the debit account number associated with this correspondence entry.;
                           RUS=Определяет номер дебетового счета, связанный с этой операцией корреспонденции.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Debit Account No.";
                CaptionClass=DebitAccNoColumnName;
                Style=Strong;
                StyleExpr=Emphasize }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the credit account number associated with this correspondence entry.;
                           RUS=Определяет номер кредитного счета, связанный с этой операцией корреспонденции.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Credit Account No.";
                CaptionClass=CreditAccNoColumnName;
                Style=Strong;
                StyleExpr=Emphasize }

    { 7   ;2   ;Field     ;
                CaptionML=[ENU=Debit Amount;
                           RUS=Сумма по дебету];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr=DebitAmount;
                CaptionClass=DebitAmountColumnName;
                Style=Strong;
                StyleExpr=Emphasize;
                OnDrillDown=BEGIN
                              DrillDownDebitCredit(TRUE);
                            END;
                             }

    { 8   ;2   ;Field     ;
                CaptionML=[ENU=Credit Amount;
                           RUS=Сумма по кредиту];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr=CreditAmount;
                CaptionClass=CreditAmountColumnName;
                Style=Strong;
                StyleExpr=Emphasize;
                OnDrillDown=BEGIN
                              DrillDownDebitCredit(FALSE);
                            END;
                             }

    { 42  ;2   ;Field     ;
                Name=EndingBalance;
                CaptionML=[ENU=Ending Balance;
                           RUS=Конечное сальдо];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr=BalanceAmounts[BalanceType::EndBal];
                OnDrillDown=BEGIN
                              DrillDownGLEntry(Show::EndPeriod);
                            END;
                             }

    { 43  ;2   ;Field     ;
                Name=EndingBalanceDebit;
                CaptionML=[ENU=Ending Balance Debit;
                           RUS=Конечное сальдо - дебет];
                BlankZero=Yes;
                SourceExpr=BalanceAmounts[BalanceType::EndBalDebit];
                Visible=FALSE }

    { 44  ;2   ;Field     ;
                Name=EndingBalanceCredit;
                CaptionML=[ENU=Ending Balance Credit;
                           RUS=Конечное сальдо - кредит];
                BlankZero=Yes;
                SourceExpr=BalanceAmounts[BalanceType::EndBalCredit];
                Visible=FALSE }

    { 5   ;2   ;Field     ;
                CaptionML=[ENU=Net Change;
                           RUS=Оборот];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr=GLAccount."Net Change";
                OnDrillDown=BEGIN
                              DrillDownGLAccount(DateFilter,FALSE,TRUE);
                            END;
                             }

  }
  CODE
  {
    VAR
      GLSetup@1008 : Record 98;
      GLAccount@1005 : Record 15;
      DateFilter@1000 : Text;
      DebitAccNoColumnName@1014 : Text;
      CreditAccNoColumnName@1021 : Text;
      DebitAmountColumnName@1022 : Text;
      CreditAmountColumnName@1023 : Text;
      GLAccountFilter@1007 : Code[250];
      BusinessUnitFilter@1001 : Code[250];
      GlobalDimension1Filter@1002 : Code[250];
      GlobalDimension2Filter@1003 : Code[250];
      BalanceAmounts@1018 : ARRAY [7] OF Decimal;
      DebitAmount@1010 : Decimal;
      CreditAmount@1013 : Decimal;
      PeriodType@1011 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      Show@1012 : 'Debit,Credit,ACYDebet,ACYCredit,BeginPeriod,ACYBeginPeriod,EndPeriod';
      BalanceType@1017 : ',StartBal,StartBalACY,StartBalCredit,StartBalDebit,EndBalCredit,EndBalDebit,EndBal';
      SwitchAccounts@1004 : Boolean;
      Emphasize@1006 : Boolean;
      IsTotaling@1009 : Boolean;
      DebitAccountNoCap@1015 : TextConst 'ENU=Debit Account No.;RUS=Номер дебетового счета';
      CreditAccountNoCap@1016 : TextConst 'ENU=Credit Account No.;RUS=Номер кредитового счета';
      DebitAmountCap@1019 : TextConst 'ENU=Debit Amount;RUS=Сумма по дебету';
      CreditAmountCap@1020 : TextConst 'ENU=Credit Amount;RUS=Сумма по кредиту';

    PROCEDURE CreateView@1();
    VAR
      GLAcc@1003 : Record 15;
      GLCorr@1000 : Record 12400;
      EntryNo@1001 : Integer;
    BEGIN
      GLAcc.FINDSET;
      REPEAT
        EntryNo += 1;
        InsertRec('','',GLAcc."No.",EntryNo,0,FALSE);

        GLCorr.RESET;
        IF GLAcc.Totaling = '' THEN
          GLCorr.SETRANGE("Debit Account No.",GLAcc."No.")
        ELSE
          GLCorr.SETFILTER("Debit Account No.",GLAcc.Totaling);
        IF GLCorr.FINDSET THEN
          REPEAT
            EntryNo += 1;
            InsertRec(GLCorr."Debit Account No.",GLCorr."Credit Account No.",GLAcc."No.",EntryNo,1,TRUE);
          UNTIL GLCorr.NEXT = 0;

        GLCorr.RESET;
        IF GLAcc.Totaling = '' THEN
          GLCorr.SETRANGE("Credit Account No.",GLAcc."No.")
        ELSE
          GLCorr.SETFILTER("Credit Account No.",GLAcc.Totaling);
        IF GLCorr.FINDSET THEN
          REPEAT
            EntryNo += 1;
            InsertRec(GLCorr."Debit Account No.",GLCorr."Credit Account No.",GLAcc."No.",EntryNo,1,FALSE);
          UNTIL GLCorr.NEXT = 0;
      UNTIL GLAcc.NEXT = 0;
    END;

    PROCEDURE ModifyView@24();
    BEGIN
      RESET;
      SETRANGE("Transaction No.",1);
      MODIFYALL("Debit Entry No.",1);

      IF FINDSET THEN
        REPEAT
          IF CalcCorrAmount(TRUE) <> 0 THEN
            "Debit Entry No." := 0
          ELSE
            IF CalcCorrAmount(FALSE) <> 0 THEN
              "Debit Entry No." := 0;
          MODIFY;
        UNTIL NEXT = 0;
      UpdateView;
    END;

    PROCEDURE UpdateView@7();
    BEGIN
      FILTERGROUP(6);
      RESET;
      SETRANGE("Debit Entry No.",0);
      SETFILTER("Debit Source No.",GLAccountFilter);
      FILTERGROUP(0);
      FINDFIRST;

      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE InsertRec@4(DebitAccNo@1000 : Code[20];CreditAccNo@1004 : Code[20];SourceAccountNo@1005 : Code[20];EntryNo@1002 : Integer;Indentation@1003 : Integer;IsDebit@1006 : Boolean);
    BEGIN
      INIT;
      "Entry No." := EntryNo;                 // defines sorting order
      "Debit Account No." := DebitAccNo;
      "Credit Account No." := CreditAccNo;
      "Debit Source No." := SourceAccountNo;
      "Transaction No." := Indentation;       // Level indentation
      Positive := IsDebit;                    // reversed debit/credit for line
      INSERT;

      // "Debit Entry No." this field is used for filtering non-zero amount
    END;

    PROCEDURE CalcDebitCreditAmount@2(IsDebit@1000 : Boolean) : Decimal;
    VAR
      CalcAmount@1001 : Decimal;
    BEGIN
      CLEAR(GLAccount);
      IF "Transaction No." = 0 THEN BEGIN
        GLAccount.GET("Debit Source No.");
        GLAccMakeFilters;
        IF IsDebit XOR SwitchAccounts THEN BEGIN
          GLAccount.CALCFIELDS("Debit Amount");
          CalcAmount := GLAccount."Debit Amount";
        END ELSE BEGIN
          GLAccount.CALCFIELDS("Credit Amount");
          CalcAmount := GLAccount."Credit Amount";
        END;
        EXIT(CalcAmount);
      END;

      EXIT(CalcCorrAmount(IsDebit));
    END;

    PROCEDURE CalcCorrAmount@8(IsDebit@1001 : Boolean) : Decimal;
    VAR
      GLCorr@1000 : Record 12400;
    BEGIN
      GLCorrMakeFilters(GLCorr,IsDebit);

      GLCorr.CALCFIELDS(Amount);
      EXIT(GLCorr.Amount);
    END;

    PROCEDURE GLAccMakeFilters@10();
    BEGIN
      GLAccount.SETFILTER("Date Filter",DateFilter);
      GLAccount.SETFILTER("Business Unit Filter",BusinessUnitFilter);
      GLAccount.SETFILTER("Global Dimension 1 Filter",GlobalDimension1Filter);
      GLAccount.SETFILTER("Global Dimension 2 Filter",GlobalDimension2Filter);
    END;

    PROCEDURE GLCorrMakeFilters@9(VAR GLCorr@1000 : Record 12400;IsDebit@1001 : Boolean);
    BEGIN
      CLEAR(GLCorr);
      IF IsDebit AND Positive OR
         NOT IsDebit AND NOT Positive
      THEN
        IF NOT SwitchAccounts THEN BEGIN
          GLCorr.SETFILTER("Debit Account No.","Debit Account No.");
          GLCorr.SETFILTER("Credit Account No.","Credit Account No.");
        END ELSE BEGIN
          GLCorr.SETFILTER("Debit Account No.","Credit Account No.");
          GLCorr.SETFILTER("Credit Account No.","Debit Account No.");
        END
      ELSE BEGIN
        GLCorr.SETRANGE("Debit Account No.",'');
        GLCorr.SETRANGE("Credit Account No.",'');
      END;
      IF GLCorr.FINDFIRST THEN;

      GLCorr.SETFILTER("Date Filter",DateFilter);
      GLCorr.SETFILTER("Business Unit Filter",BusinessUnitFilter);
      GLCorr.SETFILTER("Debit Global Dim. 1 Filter",GlobalDimension1Filter);
      GLCorr.SETFILTER("Credit Global Dim. 1 Filter",GlobalDimension1Filter);
      GLCorr.SETFILTER("Debit Global Dim. 2 Filter",GlobalDimension2Filter);
      GLCorr.SETFILTER("Credit Global Dim. 2 Filter",GlobalDimension2Filter);
    END;

    LOCAL PROCEDURE DrillDownDebitCredit@15(IsDebit@1000 : Boolean);
    VAR
      GLCorr@1001 : Record 12400;
    BEGIN
      CASE "Transaction No." OF
        0:
          DrillDownGLAccount(DateFilter,IsDebit,FALSE);
        1:
          BEGIN
            GLCorrMakeFilters(GLCorr,IsDebit);
            DrillDownGLCorrEntry(GLCorr."Debit Account No.",GLCorr."Credit Account No.");
          END;
      END;
    END;

    PROCEDURE DrillDownGLCorrEntry@1470001(DebitNo@1001 : Code[20];CreditNo@1002 : Code[20]);
    VAR
      GLCorrEntry@1000 : Record 12401;
    BEGIN
      GLCorrEntry.SETCURRENTKEY("Debit Account No.","Credit Account No.");
      GLCorrEntry.SETRANGE("Debit Account No.",DebitNo);
      GLCorrEntry.SETRANGE("Credit Account No.",CreditNo);
      GLCorrEntry.SETFILTER("Debit Global Dimension 1 Code",GlobalDimension1Filter);
      GLCorrEntry.SETFILTER("Debit Global Dimension 2 Code",GlobalDimension2Filter);
      GLCorrEntry.SETFILTER("Business Unit Code",BusinessUnitFilter);
      GLCorrEntry.SETFILTER("Posting Date",DateFilter);
      PAGE.RUNMODAL(0,GLCorrEntry);
    END;

    PROCEDURE DrillDownGLAccount@6(AppliedDateFilter@1002 : Text;IsDebit@1001 : Boolean;NetChange@1003 : Boolean);
    VAR
      GLEntry@1000 : Record 17;
    BEGIN
      IF GLAccount.Totaling = '' THEN
        GLEntry.SETFILTER("G/L Account No.","Debit Source No.")
      ELSE
        GLEntry.SETFILTER("G/L Account No.",GLAccount.Totaling);
      GLEntry.SETFILTER("Posting Date",AppliedDateFilter);
      GLEntry.SETFILTER("Global Dimension 1 Code",GlobalDimension1Filter);
      GLEntry.SETFILTER("Global Dimension 2 Code",GlobalDimension2Filter);
      GLEntry.SETFILTER("Business Unit Code",BusinessUnitFilter);
      IF NOT NetChange THEN
        IF IsDebit THEN
          GLEntry.SETFILTER("Debit Amount",'<>0')
        ELSE
          GLEntry.SETFILTER("Credit Amount",'<>0');
      PAGE.RUNMODAL(0,GLEntry);
    END;

    PROCEDURE DrillDownGLEntry@14(Show@1210000 : 'Debit,Credit,ACYDebet,ACYCredit,BeginPeriod,ACYBeginPeriod,EndPeriod');
    VAR
      GLEntry@1000 : Record 17;
    BEGIN
      GLEntry.RESET;
      IF (BusinessUnitFilter <> '') OR
         (GlobalDimension1Filter <> '') OR
         (GlobalDimension2Filter <> '')
      THEN
        GLEntry.SETCURRENTKEY(
          "G/L Account No.","Business Unit Code","Global Dimension 1 Code","Global Dimension 2 Code")
      ELSE
        GLEntry.SETCURRENTKEY("G/L Account No.","Posting Date");
      IF GLAccount.Totaling = '' THEN
        GLEntry.SETRANGE("G/L Account No.",GLAccount."No.")
      ELSE
        GLEntry.SETFILTER("G/L Account No.",GLAccount.Totaling);
      GLEntry.SETFILTER("Posting Date",DateFilter);
      GLEntry.SETFILTER("Global Dimension 1 Code",GlobalDimension1Filter);
      GLEntry.SETFILTER("Global Dimension 2 Code",GlobalDimension2Filter);
      GLEntry.SETFILTER("Business Unit Code",BusinessUnitFilter);
      CASE Show OF
        Show::Debit:
          GLEntry.SETFILTER("Debit Amount",'<>%1',0);
        Show::Credit:
          GLEntry.SETFILTER("Credit Amount",'<>%1',0);
        Show::ACYDebet:
          GLEntry.SETFILTER("Add.-Currency Debit Amount",'<>%1',0);
        Show::ACYCredit:
          GLEntry.SETFILTER("Add.-Currency Credit Amount",'<>%1',0);
        Show::BeginPeriod,
        Show::ACYBeginPeriod:
          IF COPYSTR(GLAccount.GETFILTER("Date Filter"),1,2) <> '..' THEN BEGIN
            IF GLAccount.GETRANGEMIN("Date Filter") <> 0D THEN
              GLEntry.SETRANGE("Posting Date",0D,CLOSINGDATE(GLAccount.GETRANGEMIN("Date Filter") - 1));
          END ELSE
            EXIT;
        Show::EndPeriod:
          IF COPYSTR(GLAccount.GETFILTER("Date Filter"),1,2) <> '..' THEN BEGIN
            IF GLAccount.GETRANGEMAX("Date Filter") <> 0D THEN
              GLEntry.SETRANGE("Posting Date",0D,CLOSINGDATE(GLAccount.GETRANGEMAX("Date Filter")));
          END ELSE
            EXIT;
        ELSE
          ERROR('');
      END;
      PAGE.RUN(0,GLEntry);
    END;

    PROCEDURE SetColumnNames@18();
    BEGIN
      IF NOT SwitchAccounts THEN BEGIN
        DebitAccNoColumnName := DebitAccountNoCap;
        CreditAccNoColumnName := CreditAccountNoCap;
        DebitAmountColumnName := DebitAmountCap;
        CreditAmountColumnName := CreditAmountCap;
      END ELSE BEGIN
        DebitAccNoColumnName := CreditAccountNoCap;
        CreditAccNoColumnName := DebitAccountNoCap;
        DebitAmountColumnName := CreditAmountCap;
        CreditAmountColumnName := DebitAmountCap;
      END;
    END;

    PROCEDURE SwitchGLCorr@3();
    VAR
      GLAccNo@1000 : Code[20];
    BEGIN
      RESET;
      SETRANGE("Transaction No.",1);

      IF FINDSET THEN
        REPEAT
          GLAccNo := "Debit Account No.";
          "Debit Account No." := "Credit Account No.";
          "Credit Account No." := GLAccNo;
          Positive := NOT Positive;
          MODIFY;
        UNTIL NEXT = 0;

      UpdateView;
    END;

    PROCEDURE EmphasizeLine@5() : Boolean;
    BEGIN
      EXIT("Transaction No." = 0);
    END;

    PROCEDURE FindPeriod@12(SearchText@1210000 : Code[10]);
    VAR
      Calendar@1210001 : Record 2000000007;
      PeriodFormManagement@1210003 : Codeunit 359;
    BEGIN
      IF DateFilter <> '' THEN BEGIN
        Calendar.SETFILTER("Period Start",DateFilter);
        IF NOT PeriodFormManagement.FindDate('+',Calendar,PeriodType) THEN
          PeriodFormManagement.FindDate('+',Calendar,PeriodType::Day);
        Calendar.SETRANGE("Period Start");
      END;
      PeriodFormManagement.FindDate(SearchText,Calendar,PeriodType);

      IF Calendar."Period Start" = Calendar."Period End" THEN
        DateFilter := FORMAT(Calendar."Period Start")
      ELSE
        DateFilter := STRSUBSTNO('%1..%2',Calendar."Period Start",Calendar."Period End");
    END;

    PROCEDURE FindUserPeriod@11(SearchText@1210000 : Code[10]);
    VAR
      UserSetup@1000 : Record 91;
      GLAcc@1002 : Record 15;
    BEGIN
      IF UserSetup.GET(USERID) THEN BEGIN
        GLAcc.SETRANGE("Date Filter",UserSetup."Allow Posting From",UserSetup."Allow Posting To");
        IF GLAcc.GETRANGEMIN("Date Filter") = GLAcc.GETRANGEMAX("Date Filter") THEN
          GLAcc.SETRANGE("Date Filter",GLAcc.GETRANGEMIN("Date Filter"));
        IF DateFilter <> '' THEN
          DateFilter := GLAcc.GETFILTER("Date Filter");
      END ELSE
        FindPeriod(SearchText);
    END;

    LOCAL PROCEDURE ForceRecalculate@1210000();
    BEGIN
      RESET;
      DELETEALL;
      CreateView;
      ModifyView;
    END;

    BEGIN
    END.
  }
}

