OBJECT Table 1221 Data Exch. Field
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00,NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Data Exch. Field;
               RUS=Поле обмена данными];
  }
  FIELDS
  {
    { 1   ;   ;Data Exch. No.      ;Integer       ;TableRelation="Data Exch.";
                                                   CaptionML=[ENU=Data Exch. No.;
                                                              RUS=Номер обмена данными];
                                                   NotBlank=Yes }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              RUS=Номер строки];
                                                   NotBlank=Yes }
    { 3   ;   ;Column No.          ;Integer       ;CaptionML=[ENU=Column No.;
                                                              RUS=Номер столбца];
                                                   NotBlank=Yes }
    { 4   ;   ;Value               ;Text250       ;CaptionML=[ENU=Value;
                                                              RUS=Значение] }
    { 5   ;   ;Node ID             ;Text250       ;CaptionML=[ENU=Node ID;
                                                              RUS=Код узла] }
    { 6   ;   ;Data Exch. Line Def Code;Code20    ;TableRelation="Data Exch. Line Def".Code;
                                                   CaptionML=[ENU=Data Exch. Line Def Code;
                                                              RUS=Код определения строки обмена данными] }
    { 10  ;   ;Parent Node ID      ;Text250       ;CaptionML=[ENU=Parent Node ID;
                                                              RUS=Код родительского узла] }
    { 11  ;   ;Data Exch. Def Code ;Code20        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Data Exch."."Data Exch. Def Code" WHERE (Entry No.=FIELD(Data Exch. No.)));
                                                   CaptionML=[ENU=Data Exch. Def Code;
                                                              RUS=Код определения обмена данными] }
    { 12400;  ;Column Name         ;Text250       ;CaptionML=[ENU=Column Name;
                                                              RUS=Имя столбца] }
    { 12401;  ;Column Type         ;Option        ;CaptionML=[ENU=Column Type;
                                                              RUS=Тип столбца];
                                                   OptionCaptionML=[ENU=" ,Header,Footer";
                                                                    RUS=" ,Заголовок,Нижний колонтитул"];
                                                   OptionString=[ ,Header,Footer] }
  }
  KEYS
  {
    {    ;Data Exch. No.,Line No.,Column No.,Node ID;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE InsertRec@2(DataExchNo@1000 : Integer;LineNo@1001 : Integer;ColumnNo@1002 : Integer;NewValue@1003 : Text[250];DataExchLineDefCode@1004 : Code[20]);
    BEGIN
      INIT;
      VALIDATE("Data Exch. No.",DataExchNo);
      VALIDATE("Line No.",LineNo);
      VALIDATE("Column No.",ColumnNo);
      VALIDATE(Value,NewValue);
      VALIDATE("Data Exch. Line Def Code",DataExchLineDefCode);
      INSERT;
    END;

    PROCEDURE InsertRecXMLField@1(DataExchNo@1000 : Integer;LineNo@1001 : Integer;ColumnNo@1002 : Integer;NodeId@1004 : Text[250];NodeValue@1003 : Text;DataExchLineDefCode@1005 : Code[20]);
    BEGIN
      InsertRecXMLFieldWithParentNodeID(DataExchNo,LineNo,ColumnNo,NodeId,'',NodeValue,DataExchLineDefCode)
    END;

    PROCEDURE InsertRecXMLFieldWithParentNodeID@4(DataExchNo@1000 : Integer;LineNo@1001 : Integer;ColumnNo@1002 : Integer;NodeId@1004 : Text[250];ParentNodeId@1006 : Text[250];NodeValue@1003 : Text;DataExchLineDefCode@1005 : Code[20]);
    BEGIN
      INIT;
      VALIDATE("Data Exch. No.",DataExchNo);
      VALIDATE("Line No.",LineNo);
      VALIDATE("Column No.",ColumnNo);
      VALIDATE("Node ID",NodeId);
      VALIDATE(Value,COPYSTR(NodeValue,1,MAXSTRLEN(Value)));
      VALIDATE("Parent Node ID",ParentNodeId);
      VALIDATE("Data Exch. Line Def Code",DataExchLineDefCode);
      INSERT;
    END;

    PROCEDURE InsertRecXMLFieldDefinition@5(DataExchNo@1000 : Integer;LineNo@1001 : Integer;NodeId@1004 : Text[250];ParentNodeId@1006 : Text[250];NewValue@1003 : Text[250];DataExchLineDefCode@1005 : Code[20]);
    BEGIN
      // this record represents the line definition and it has ColumnNo set to -1
      // even if we are not extracting anything from the line, we need to insert the definition
      // so that the child nodes can hook up to their parent.
      InsertRecXMLFieldWithParentNodeID(DataExchNo,LineNo,-1,NodeId,ParentNodeId,NewValue,DataExchLineDefCode)
    END;

    PROCEDURE GetFieldName@1060() : Text;
    VAR
      DataExchColumnDef@1060 : Record 1223;
      DataExch@1061 : Record 1220;
    BEGIN
      DataExch.GET("Data Exch. No.");
      IF DataExchColumnDef.GET(DataExch."Data Exch. Def Code",DataExch."Data Exch. Line Def Code","Column No.") THEN
        EXIT(DataExchColumnDef.Name);
      EXIT('');
    END;

    PROCEDURE DeleteRelatedRecords@3(DataExchNo@1000 : Integer;LineNo@1001 : Integer);
    BEGIN
      SETRANGE("Data Exch. No.",DataExchNo);
      SETRANGE("Line No.",LineNo);
      DELETEALL(TRUE);
    END;

    BEGIN
    END.
  }
}

