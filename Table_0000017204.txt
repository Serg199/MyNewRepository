OBJECT Table 17204 Tax Register Term
{
  OBJECT-PROPERTIES
  {
    Date=18.12.13;
    Time=12:00:00;
    Version List=NAVRU7.10;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TaxRegSection.GET("Section Code");
               TaxRegSection.ValidateChangeDeclaration;
             END;

    OnDelete=BEGIN
               TaxRegSection.GET("Section Code");
               TaxRegSection.ValidateChangeDeclaration;

               TaxRegisterTermFormula.RESET;
               TaxRegisterTermFormula.SETRANGE("Section Code","Section Code");
               TaxRegisterTermFormula.SETRANGE("Term Code","Term Code");
               TaxRegisterTermFormula.DELETEALL;
             END;

    CaptionML=[ENU=Tax Register Term;
               RUS=Термин налогового регистра];
    LookupPageID=Page17207;
  }
  FIELDS
  {
    { 1   ;   ;Term Code           ;Code20        ;CaptionML=[ENU=Term Code;
                                                              RUS=Код термина];
                                                   NotBlank=Yes }
    { 3   ;   ;Expression Type     ;Option        ;OnValidate=BEGIN
                                                                IF "Expression Type" <> xRec."Expression Type" THEN
                                                                  IF xRec."Expression Type" = xRec."Expression Type"::Compare THEN BEGIN
                                                                    IF NOT CONFIRM(Text21000900,FALSE,xRec."Expression Type") THEN
                                                                      ERROR('');
                                                                    TaxRegSection.GET("Section Code");
                                                                    TaxRegSection.ValidateChangeDeclaration;
                                                                    TaxRegisterTermFormula.RESET;
                                                                    TaxRegisterTermFormula.SETRANGE("Section Code","Section Code");
                                                                    TaxRegisterTermFormula.SETRANGE("Term Code","Term Code");
                                                                    TaxRegisterTermFormula.DELETEALL;
                                                                    VALIDATE(Expression,'');
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=Expression Type;
                                                              RUS=Тип выражения];
                                                   OptionCaptionML=[ENU=Plus/Minus,Multiply/Divide,Compare;
                                                                    RUS=Сложение/вычитание,Умножение/деление,Сравнение];
                                                   OptionString=Plus/Minus,Multiply/Divide,Compare }
    { 4   ;   ;Expression          ;Text250       ;OnLookup=BEGIN
                                                              IF "Term Code" = '' THEN
                                                                EXIT;

                                                              TaxRegisterTermFormula.RESET;
                                                              TaxRegisterTermFormula.FILTERGROUP(2);
                                                              TaxRegisterTermFormula.SETRANGE("Section Code","Section Code");
                                                              TaxRegisterTermFormula.FILTERGROUP(0);
                                                              TaxRegisterTermFormula.SETRANGE("Term Code","Term Code");
                                                              IF ("Expression Type" = "Expression Type"::Compare) AND NOT (TaxRegisterTermFormula.COUNT = 3) THEN BEGIN
                                                                IF NOT (TaxRegisterTermFormula.COUNT = 0) THEN
                                                                  TaxRegisterTermFormula.DELETEALL;
                                                                TaxRegisterTermFormula.INIT;
                                                                TaxRegisterTermFormula."Section Code" := "Section Code";
                                                                TaxRegisterTermFormula."Term Code" := "Term Code";
                                                                TaxRegisterTermFormula."Account Type" := TaxRegisterTermFormula."Account Type"::Term;
                                                                TaxRegisterTermFormula.Operation := TaxRegisterTermFormula.Operation::Negative;
                                                                TaxRegisterTermFormula."Line No." := 10000;
                                                                TaxRegisterTermFormula.INSERT;
                                                                TaxRegisterTermFormula.Operation := TaxRegisterTermFormula.Operation::Zero;
                                                                TaxRegisterTermFormula."Line No." := 20000;
                                                                TaxRegisterTermFormula.INSERT;
                                                                TaxRegisterTermFormula.Operation := TaxRegisterTermFormula.Operation::Positive;
                                                                TaxRegisterTermFormula."Line No." := 30000;
                                                                TaxRegisterTermFormula.INSERT;
                                                                TaxRegisterTermFormula."Line No." := 10000;
                                                                TaxRegisterTermFormula.FIND;
                                                                COMMIT;
                                                              END;
                                                              PAGE.RUNMODAL(0,TaxRegisterTermFormula);
                                                              Expression :=
                                                                TaxRegTermMgt.MakeTermExpressionText("Term Code","Section Code",
                                                                  DATABASE::"Tax Register Term",DATABASE::"Tax Register Term Formula");
                                                            END;

                                                   CaptionML=[ENU=Expression;
                                                              RUS=Выражение] }
    { 5   ;   ;Check               ;Boolean       ;CaptionML=[ENU=Check;
                                                              RUS=Проверка] }
    { 6   ;   ;Process Sign        ;Option        ;OnValidate=BEGIN
                                                                IF "Process Sign" <> xRec."Process Sign" THEN BEGIN
                                                                  TaxRegSection.GET("Section Code");
                                                                  TaxRegSection.ValidateChangeDeclaration;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Process Sign;
                                                              RUS=Обработка знака];
                                                   OptionCaptionML=[ENU=" ,Skip Negative,Skip Positive,Always Positive,Always Negative";
                                                                    RUS=" ,Пропустить отрицательные,Пропустить положительные,Только положительные,Только отрицательные"];
                                                   OptionString=[ ,Skip Negative,Skip Positive,Always Positive,Always Negative] }
    { 8   ;   ;Description         ;Text150       ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 9   ;   ;Rounding Precision  ;Decimal       ;OnValidate=BEGIN
                                                                IF "Rounding Precision" <> xRec."Rounding Precision" THEN BEGIN
                                                                  TaxRegSection.GET("Section Code");
                                                                  TaxRegSection.ValidateChangeDeclaration;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Rounding Precision;
                                                              RUS=Точность округления];
                                                   DecimalPlaces=0: }
    { 12  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              RUS=Фильтр по дате] }
    { 13  ;   ;Section Code        ;Code10        ;TableRelation="Tax Register Section";
                                                   CaptionML=[ENU=Section Code;
                                                              RUS=Код секции];
                                                   NotBlank=Yes }
  }
  KEYS
  {
    {    ;Section Code,Term Code                  ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Term Code,Description                    }
  }
  CODE
  {
    VAR
      TaxRegisterTermFormula@1000 : Record 17205;
      TaxRegSection@1002 : Record 17207;
      TaxRegTermMgt@1003 : Codeunit 17200;
      Text21000900@1004 : TextConst 'ENU=Delete linked line for expression type %1?;RUS=Удалить связанную строку для типа выражения %1?';

    PROCEDURE GenerateProfile@1();
    VAR
      GenTermProfile@1000 : Record 17238;
    BEGIN
      IF NOT GenTermProfile.GET(DATABASE::"Tax Register Term") THEN BEGIN
        GenTermProfile."Table No." := DATABASE::"Tax Register Term";
        GenTermProfile."Section Code (Hdr)" := FIELDNO("Section Code");
        GenTermProfile."Term Code (Hdr)" := FIELDNO("Term Code");
        GenTermProfile."Expression Type (Hdr)" := FIELDNO("Expression Type");
        GenTermProfile."Expression (Hdr)" := FIELDNO(Expression);
        GenTermProfile."Description (Hdr)" := FIELDNO(Description);
        GenTermProfile."Check (Hdr)" := FIELDNO(Check);
        GenTermProfile."Process Sign (Hdr)" := FIELDNO("Process Sign");
        GenTermProfile."Rounding Precision (Hdr)" := FIELDNO("Rounding Precision");
        GenTermProfile."Date Filter (Hdr)" := FIELDNO("Date Filter");

        GenTermProfile."Section Code (Line)" := TaxRegisterTermFormula.FIELDNO("Section Code");
        GenTermProfile."Term Code (Line)" := TaxRegisterTermFormula.FIELDNO("Term Code");
        GenTermProfile."Line No. (Line)" := TaxRegisterTermFormula.FIELDNO("Line No.");
        GenTermProfile."Expression Type (Line)" := TaxRegisterTermFormula.FIELDNO("Expression Type");
        GenTermProfile."Operation (Line)" := TaxRegisterTermFormula.FIELDNO(Operation);
        GenTermProfile."Account Type (Line)" := TaxRegisterTermFormula.FIELDNO("Account Type");
        GenTermProfile."Account No. (Line)" := TaxRegisterTermFormula.FIELDNO("Account No.");
        GenTermProfile."Amount Type (Line)" := TaxRegisterTermFormula.FIELDNO("Amount Type");
        GenTermProfile."Bal. Account No. (Line)" := TaxRegisterTermFormula.FIELDNO("Bal. Account No.");
        GenTermProfile."Norm Jurisd. Code (Line)" := TaxRegisterTermFormula.FIELDNO("Norm Jurisdiction Code");
        GenTermProfile."Process Sign (Line)" := TaxRegisterTermFormula.FIELDNO("Process Sign");
        GenTermProfile."Process Division by Zero(Line)" := TaxRegisterTermFormula.FIELDNO("Process Division by Zero");
        GenTermProfile.INSERT;
      END;
    END;

    BEGIN
    END.
  }
}

