OBJECT Report 50036 Import Cov. Sh. Batch from Exc
{
  OBJECT-PROPERTIES
  {
    Date=27.03.17;
    Time=14:18:03;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Import Cover Sheet Batch from Excel;
               RUS=Импорт Раздела Распределения из Excel];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  ExcelBuf.LOCKTABLE;
                  GLSetup.GET;
                  ReadExcelSheet;
                  CSBatchHeader.GET(TemplateCode,BatchCode);
                  CSBatchHeader.TESTFIELD("Y Dimension");
                  CSBatchHeader.TESTFIELD("X Dimension");
                  DimCodeFrom := CSBatchHeader."Y Dimension";
                  DimCodeTo := CSBatchHeader."X Dimension";
                  CSBatchLine.SETRANGE("Template Code",TemplateCode);
                  CSBatchLine.SETRANGE("Batch Code",BatchCode);
                  CSBatchLine.DELETEALL;
                END;

    OnPostReport=BEGIN
                   //ExcelBuf.DELETEALL;
                   MESSAGE(Text55005);
                 END;

  }
  DATASET
  {
    { 5444;    ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               ExcelBuf.RESET;
                               ExcelBuf.SETRANGE("Column No.",1);
                               TotalRows := ExcelBuf.COUNT;
                               Window.OPEN(
                                 Text007 +
                                 '@1@@@@@@@@@@@@@@@@@@@@@@@@@\');
                               Window.UPDATE(1,0);
                               RecNo := 0;
                             END;

               OnAfterGetRecord=VAR
                                  CoefSumm@1101495000 : Decimal;
                                BEGIN
                                  CoefSumm := 0;
                                  IF ExcelBuf.FINDSET THEN BEGIN
                                    REPEAT
                                      RecNo += 1;
                                      Window.UPDATE(1,ROUND(RecNo / TotalRows * 10000,1));
                                      IF ExcelBuffer2.GET(RecNo,3) THEN BEGIN
                                        IF ExcelBuffer2."Cell Value as Text"<>'' THEN BEGIN
                                        Coeff :=  ROUND(ExcelBuffer2.GetNumber(ExcelBuffer2."Cell Value as Text"),0.000000001);
                                        IF Coeff <> 0 THEN BEGIN
                                          //Проверяем, что значение измерения 1 есть у нас в базе

                                          ExcelBuffer3.GET(RecNo,2);

                                          YDimValue :=DELCHR(ExcelBuf."Cell Value as Text",'==',', ');
                                          XDimValue :=DELCHR(ExcelBuffer3."Cell Value as Text",'==',', ');
                                          IF NOT DimValue.GET(DimCodeFrom,UPPERCASE(YDimValue)) THEN
                                            ERROR(Text55010,UPPERCASE(YDimValue),DimCodeFrom,
                                              YDimValue,
                                              XDimValue,
                                              ExcelBuffer2."Cell Value as Text");
                                          //Проверяем, что значение измерения 2 есть у нас в базе
                                          IF NOT DimValue.GET(DimCodeTo,UPPERCASE(XDimValue)) THEN
                                            ERROR(Text55010,UPPERCASE(XDimValue),DimCodeTo,
                                              YDimValue,
                                              XDimValue,
                                              ExcelBuffer2."Cell Value as Text");
                                          CSBatchLine.INIT;
                                          CSBatchLine."Template Code" := TemplateCode;
                                          CSBatchLine."Batch Code" := BatchCode;
                                          CSBatchLine."X Dimension Code" := DimCodeTo;
                                          CSBatchLine."X Dimension Value" := UPPERCASE(XDimValue);
                                          CSBatchLine."Y Dimension Code" := DimCodeFrom;
                                          CSBatchLine."Y Dimension Value" := UPPERCASE(YDimValue);
                                          CSBatchLine.Coefficient := Coeff;
                                          CSBatchLine.INSERT;
                                        END;
                                        CoefSumm += Coeff;
                                        END;
                                      END;
                                    UNTIL ExcelBuf.NEXT = 0;
                                  END;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text006@1210019 : TextConst 'ENU=Import Excel File;RUS=Импорт Файл Excel';
      Text007@1007 : TextConst 'ENU=Importing Data...\\;RUS=Импорт Данных...\\';
      ExcelBuf@1027 : Record 370;
      GLSetup@1034 : Record 98;
      FileName@1037 : Text[250];
      SheetName@1038 : Text[250];
      TotalRecNo@1044 : Integer;
      RecNo@1045 : Integer;
      Window@1046 : Dialog;
      ConsSetup@1210000 : Record 50000;
      Text55001@1210008 : TextConst 'ENU=Cannot find column %1 in the Excel.;RUS=Невозможно идентифицировать столбец %1 в файле.';
      Text55002@1210009 : TextConst 'ENU=Columns in Excel do not match Transformation Table.;RUS=Столбцы в файле Excel не соответствуют трансформационной таблице.';
      XLSRowNo@1210010 : Integer;
      XLSColNo@1210011 : Integer;
      MaxColNo@1210012 : Integer;
      Text55003@1210015 : TextConst 'ENU=Rows in Excel do not match Transformation Table.;RUS=Строки в файле Excel не соответствуют трансформационной таблице.';
      Text55004@1210016 : TextConst 'ENU=No row %1 in Excel.;RUS=Нет строки %1 в файле Excel.';
      TotalRows@1210017 : Integer;
      Text55005@1210018 : TextConst 'ENU=File with Coefficients was imported successfully.;RUS=Файл c коэффициентами импортирован успешно.';
      Text55006@1210024 : TextConst 'ENU=You cannot enter corrections in this row. Please use subsidiary table.;RUS=Вы не можете вводить корректировки в данной строке. Используйте подчиненную таблицу.';
      Text55007@1210023 : TextConst 'ENU=In String %1 Account Schedule %2 you must define field %3.;RUS=В настройке строки %1 Фин. Отчета %2 необходимо заполнить поле %3.';
      Text55008@1210022 : TextConst 'ENU=Date %1 was blocked to correction posting.;RUS=Дата %1 блокирована для учета корректировок.';
      Text55009@1210021 : TextConst 'ENU=Nothing to Post.;RUS=Нечего учитывать.';
      TemplateCode@1000000001 : Code[20];
      BatchCode@1000000000 : Code[20];
      CSBatchHeader@1000000003 : Record 50014;
      CSBatchLine@1000000004 : Record 50013;
      DimValueFrom@1000000005 : Record 349;
      DimValueTo@1000000006 : Record 349;
      DimCodeFrom@1000000007 : Code[20];
      DimCodeTo@1000000008 : Code[20];
      ExcelBuffer2@1000000009 : Record 370;
      ExcelBuffer3@1000000011 : Record 370;
      Coeff@1000000010 : Decimal;
      DimValue@1000000012 : Record 349;
      Text55010@1000000013 : TextConst 'ENU="Value %1 of Dimension %2 does not exist in NAV.\File String: %3; %4; %5.";RUS="Значения %1 Измерения %2 не существует NAV.\Строка файла: %3; %4; %5."';
      YDimValue@1101495000 : Code[20];
      XDimValue@1101495001 : Code[20];

    LOCAL PROCEDURE ReadExcelSheet@1();
    BEGIN
      ExcelBuf.OpenBook(FileName,SheetName);
      ExcelBuf.ReadSheet;
    END;

    PROCEDURE SetParameters@1210000(TemplateCode2@1210000 : Code[20];BatchCode2@1210001 : Code[20]);
    BEGIN
      TemplateCode := TemplateCode2;
      BatchCode := BatchCode2;
    END;

    LOCAL PROCEDURE AnalyzeData@2();
    VAR
      TempExcelBuf@1000 : TEMPORARY Record 370;
      BudgetBuf@1001 : Record 371;
      TempBudgetBuf@1002 : TEMPORARY Record 371;
      HeaderRowNo@1003 : Integer;
      CountDim@1004 : Integer;
      TestDate@1005 : Date;
      OldRowNo@1006 : Integer;
      DimRowNo@1007 : Integer;
      DimCode3@1008 : Code[20];
    BEGIN
      {
      }
    END;

    BEGIN
    {
      NC NCS-1820 DP Перенос функциональности MIS
    }
    END.
  }
  RDLDATA
  {
  }
}

