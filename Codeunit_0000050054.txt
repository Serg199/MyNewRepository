OBJECT Codeunit 50054 TD Func
{
  OBJECT-PROPERTIES
  {
    Date=02.12.13;
    Time=16:24:44;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            //IF CONFIRM('Запустить функцию?') THEN BEGIN
            //  ValidateFADimForSync();
            //  ValidateFAForSync();
            //  ValidateDeal();
            //END;

            //IF CONFIRM('Запустить функцию DeleteFI?') THEN DeleteFI;
          END;

  }
  CODE
  {
    VAR
      Company@1000000000 : Record 2000000006;
      SyncLog@1000000001 : Record 50121;
      SyncTableSetup@1000000002 : Record 50122;
      SyncTableSetupFilter@1000000003 : Record 50123;
      SyncFA@1000000004 : Record 50131;

    PROCEDURE ValidateCurrExchRate@1000000005();
    VAR
      CurrExchRate@1000000005 : Record 330;
      W@1000000004 : Dialog;
      Counter@1000000000 : Integer;
    BEGIN
      {
      W.OPEN('Обработано записей: #1########');

      Counter := 0;

      CurrExchRate.RESET;
      CurrExchRate.SETFILTER("Starting Date",'%1..', 010312D);

      IF CurrExchRate.FINDFIRST THEN REPEAT
        Counter += 1;
        CurrExchRate.VALIDATE("Relational Adjmt Exch Rate Amt");
        W.UPDATE(1, Counter);
        CurrExchRate.MODIFY(TRUE);
      UNTIL CurrExchRate.NEXT = 0;
      W.CLOSE;
      }
    END;

    PROCEDURE ValidateDealDim@1000000000();
    VAR
      DimValue@1000000005 : Record 349;
      W@1000000004 : Dialog;
      Counter@1000000000 : Integer;
    BEGIN
      W.OPEN('Обработано записей: #1########');

      Counter := 0;

      DimValue.RESET;
      DimValue.SETRANGE("Dimension Code", 'DEAL');
      DimValue.SETRANGE(Marked, TRUE);

      IF DimValue.FINDFIRST THEN REPEAT
        Counter += 1;
      //  DimValue.VALIDATE(Marked);
        W.UPDATE(1, Counter);
        DimValue.MODIFY(TRUE);
      UNTIL DimValue.NEXT = 0;
      W.CLOSE;
    END;

    PROCEDURE CopyDealCardIntoCompanies@1000000001();
    VAR
      Company@1000000002 : Record 2000000006;
      Deal@1000000001 : Record 50037;
      Deal2@1000000000 : Record 50037;
    BEGIN
      {
      Company.RESET;
      Company.SETRANGE("Company Type", Company."Company Type"::Standalone);
      Company.SETFILTER(Name, '<>%1', COMPANYNAME);

      Deal.RESET;
      Deal.SETRANGE("Deal ID", 'INCOMING BALANCE');
      IF Deal.FINDFIRST THEN BEGIN
        IF Company.FINDFIRST THEN
          REPEAT
            Deal2.CHANGECOMPANY(Company.Name);
            Deal2.INIT;
            Deal2.COPY(Deal);
            IF NOT Deal2.INSERT(TRUE) THEN
              Deal2.MODIFY;
          UNTIL Company.NEXT = 0;
      END;
      }
    END;

    PROCEDURE ValidateFAForSync@1000000002();
    VAR
      FA@1000000000 : Record 5600;
      W@1000000001 : Dialog;
      Counter@1000000002 : Integer;
      FADeprBook@1000000003 : Record 5612;
    BEGIN
      // Заполнение буфера синхронизации ОС для создания карточек ОС в IFRS

      W.OPEN('Обработано записей: #1########');

      FA.RESET;
      FADeprBook.RESET;

      Counter := 0;
      FADeprBook.SETFILTER("Depreciation Book Code", 'PE|FA|IA');
      IF FADeprBook.FINDFIRST THEN REPEAT
        Counter += 1;
        W.UPDATE(1, Counter);
        FADeprBook.MODIFY(TRUE);
      UNTIL FADeprBook.NEXT = 0;
      W.CLOSE;
    END;

    PROCEDURE ValidateFADimForSync@1000000003();
    VAR
      FADim@1000000003 : Record 349;
      W@1000000002 : Dialog;
      Counter@1000000001 : Integer;
      Company@1000000000 : Record 2000000006;
    BEGIN

      // Заполнение буфера синхронизации измерения ОС/РБП

      W.OPEN('Обработано записей: #1########');

      Counter := 0;
      FADim.RESET;
      FADim.SETFILTER("Dimension Code", 'FA|DF.EXPENSE');
      IF FADim.FINDFIRST THEN REPEAT
        Counter += 1;
        FADim.VALIDATE(FADim.Name);
        W.UPDATE(1, Counter);
        FADim.MODIFY(TRUE);
      UNTIL FADim.NEXT = 0;
      W.CLOSE;
    END;

    PROCEDURE RunJobProcess@1000000004();
    VAR
      cu_RunJobProc@1000000000 : Codeunit 50031;
      t_JobProcessStatus@1000000001 : Record 50063;
    BEGIN
      //t_JobProcessStatus.GET(953702);
      //cu_RunJobProc.RUN(t_JobProcessStatus);
    END;

    PROCEDURE ValidateDeal@1000000006();
    VAR
      AD@1000000005 : Record 50096;
      W@1000000004 : Dialog;
      Counter@1000000000 : Integer;
      CA@1000000001 : Record 14902;
      VA@1000000002 : Record 14901;
    BEGIN
      W.OPEN('Обработано записей: #1########');
      Counter := 0;

      {
      AD.RESET;
      AD.SETRANGE("Agreement Type", AD."Agreement Type"::Loans);
      IF AD.FINDFIRST THEN REPEAT
        Counter += 1;
        W.UPDATE(1, Counter);
        AD.MODIFY(TRUE);
      UNTIL AD.NEXT = 0;
      }

      CA.RESET;
      CA.SETRANGE("Agreement Type", 2);
      IF CA.FINDFIRST THEN REPEAT
        Counter += 1;
        W.UPDATE(1, Counter);
        CA."Type Deal" := 'LOAN';
        CA.MODIFY(TRUE);
      UNTIL CA.NEXT = 0;

      VA.RESET;
      VA.SETRANGE("Agreement Type", 2);
      IF VA.FINDFIRST THEN REPEAT
        Counter += 1;
        W.UPDATE(1, Counter);
        VA."Type Deal" := 'LOAN';
        VA.MODIFY(TRUE);
      UNTIL VA.NEXT = 0;

      W.CLOSE;
    END;

    PROCEDURE DeleteFI@1000000008();
    VAR
      txt1@1000000000 : TextConst 'RUS=RUB RU O/N AVG M 3M|RUB RU O/N CMP A 1M|RUB RU O/N CMP A 1W|RUB RU O/N CMP A 1Y|RUB RU O/N CMP A 2M|RUB RU O/N CMP A 2W|RUB RU O/N CMP A 3M|RUB RU O/N CMP A 6M|RUB RU O/N CMP A 9M|SEK MP A 3M|SEK SR A 3M|TRY TRR A 3M|TRY TRR Q 3M|USD BS LR 1M 3M|USD CTCS 10Y3M|USD FFA 1Y AVG|USD LR A 1Y|USD LR A 3M|USD LR Q 1Y|USD LR Q 3M|USD LR S 1M|USD LR S 3M6M|USD LR S 6M|USD/CHF FD S 6M|USD/RUB FD M 1M|USD/RUB FD Q 3M|USD/RUB FD S 6M|USD/RUB LR Q 3M|USD/RUB LR1M - A|USD/RUB LR1M - M|USD/RUB LR1M - MP3M|USD/RUB LR3M - A|USD/RUB LR3M - MP3M|USD/RUB LR6M - MP3M|USD/RUB MP Q 3M|USD/TRY LR3M - A|USD/TRY TRR Q 3M|ZAR JR Q 3M';
      txt2@1000000001 : TextConst 'RUS=AUD BB Q 3M|AUD BB S 6M|CAD CB S 3M|CHF LR A 3M|CHF LR A 6M|CZK PR A 1M|CZK PR A 3M|CZK PR A 6M|CZK PR M 1M|CZK PR Q 3M|DKK CR A 3M|DKK CR A 6M|EUR CS10Y 6M6M|EUR LR A 1M|EUR LR A 1Y|EUR LR A 3M|EUR LR A 6M|EUR TC CTCS 10Y3M|EUR/CZK ER 3M - A|EUR/HRK ER 3M - A|EUR/HUF ER3M-HUFBR3M|EUR/RUB FD S 6M|EUR/USD ER3M-USDLR3M|ER A 1M|ER A 1Y|ER A 3M|ER A 6M|ER A 6M AVG|ER M 1M|ER Q 3M|ER S 6M|GBP CT CS 10Y1Y|GBP LR A 3M|GBP LR Q 3M|GBP LR S 6M|HKD HR Q 3M|HUF BS BR 3M 6M|HUF BR A 3M|HUF BR A 6M|HUF BR Q 3M|ILS TR A 3M|JPY LR S 6M|JPY TBR A 3M|JPY TBR S 6M|JPY/RUB FD Q 3M|NOK OR A 3M|NOK OR A 6M|NZD BB S 3M|PLN WR A 3M|PLN WR A 6M|RUB MP A 3M|RUB MP O/N AVG M 1M|RUB MP O/N CMP A 1M|RUB MP Q 3M|RUB NF A 3M|RUB NF A 6M|RUB NF S 3M|RUB RX A 3M|RUB RU O/N AVG M 1M';
      FI@1000000002 : Record 50021;
      txt@1000000003 : ARRAY [99] OF Text[30];
      i@1000000004 : Integer;
    BEGIN
      txt[1] := 'AUD BB Q 3M';
      txt[2] := 'AUD BB S 6M';
      txt[3] := 'CAD CB S 3M';
      txt[4] := 'CHF LR A 3M';
      txt[5] := 'CHF LR A 6M';
      txt[6] := 'CZK PR A 1M';
      txt[7] := 'CZK PR A 3M';
      txt[8] := 'CZK PR A 6M';
      txt[9] := 'CZK PR M 1M';
      txt[10] := 'CZK PR Q 3M';
      txt[11] := 'DKK CR A 3M';
      txt[12] := 'DKK CR A 6M';
      txt[13] := 'EUR CS10Y 6M6M';
      txt[14] := 'EUR LR A 1M';
      txt[15] := 'EUR LR A 1Y';
      txt[16] := 'EUR LR A 3M';
      txt[17] := 'EUR LR A 6M';
      txt[18] := 'EUR TC CTCS 10Y3M';
      txt[19] := 'EUR/CZK ER 3M - A';
      txt[20] := 'EUR/HRK ER 3M - A';
      txt[21] := 'EUR/HUF ER3M-HUFBR3M';
      txt[22] := 'EUR/RUB FD S 6M';
      txt[23] := 'EUR/USD ER3M-USDLR3M';
      txt[24] := 'ER A 1M';
      txt[25] := 'ER A 1Y';
      txt[26] := 'ER A 3M';
      txt[27] := 'ER A 6M';
      txt[28] := 'ER A 6M AVG';
      txt[29] := 'ER M 1M';
      txt[30] := 'ER Q 3M';
      txt[31] := 'ER S 6M';
      txt[32] := 'GBP CT CS 10Y1Y';
      txt[33] := 'GBP LR A 3M';
      txt[34] := 'GBP LR Q 3M';
      txt[35] := 'GBP LR S 6M';
      txt[36] := 'HKD HR Q 3M';
      txt[37] := 'HUF BS BR 3M 6M';
      txt[38] := 'HUF BR A 3M';
      txt[39] := 'HUF BR A 6M';
      txt[40] := 'HUF BR Q 3M';
      txt[41] := 'ILS TR A 3M';
      txt[42] := 'JPY LR S 6M';
      txt[43] := 'JPY TBR A 3M';
      txt[44] := 'JPY TBR S 6M';
      txt[45] := 'JPY/RUB FD Q 3M';
      txt[46] := 'NOK OR A 3M';
      txt[47] := 'NOK OR A 6M';
      txt[48] := 'NZD BB S 3M';
      txt[49] := 'PLN WR A 3M';
      txt[50] := 'PLN WR A 6M';
      txt[51] := 'RUB MP A 3M';
      txt[52] := 'RUB MP O/N AVG M 1M';
      txt[53] := 'RUB MP O/N CMP A 1M';
      txt[54] := 'RUB MP Q 3M';
      txt[55] := 'RUB NF A 3M';
      txt[56] := 'RUB NF A 6M';
      txt[57] := 'RUB NF S 3M';
      txt[58] := 'RUB RX A 3M';
      txt[59] := 'RUB RU O/N AVG M 1M';
      txt[60] := 'RUB RU O/N AVG M 3M';
      txt[61] := 'RUB RU O/N CMP A 1M';
      txt[62] := 'RUB RU O/N CMP A 1W';
      txt[63] := 'RUB RU O/N CMP A 1Y';
      txt[64] := 'RUB RU O/N CMP A 2M';
      txt[65] := 'RUB RU O/N CMP A 2W';
      txt[66] := 'RUB RU O/N CMP A 3M';
      txt[67] := 'RUB RU O/N CMP A 6M';
      txt[68] := 'RUB RU O/N CMP A 9M';
      txt[69] := 'SEK MP A 3M';
      txt[70] := 'SEK SR A 3M';
      txt[71] := 'TRY TRR A 3M';
      txt[72] := 'TRY TRR Q 3M';
      txt[73] := 'USD BS LR 1M 3M';
      txt[74] := 'USD CTCS 10Y3M';
      txt[75] := 'USD FFA 1Y AVG';
      txt[76] := 'USD LR A 1Y';
      txt[77] := 'USD LR A 3M';
      txt[78] := 'USD LR Q 1Y';
      txt[79] := 'USD LR Q 3M';
      txt[80] := 'USD LR S 1M';
      txt[82] := 'USD LR S 3M6M';
      txt[83] := 'USD LR S 6M';
      txt[85] := 'USD/CHF FD S 6M';
      txt[86] := 'USD/RUB FD M 1M';
      txt[87] := 'USD/RUB FD Q 3M';
      txt[88] := 'USD/RUB FD S 6M';
      txt[89] := 'USD/RUB LR Q 3M';
      txt[90] := 'USD/RUB LR1M - A';
      txt[91] := 'USD/RUB LR1M - M';
      txt[92] := 'USD/RUB LR1M - MP3M';
      txt[93] := 'USD/RUB LR3M - A';
      txt[94] := 'USD/RUB LR3M - MP3M';
      txt[95] := 'USD/RUB LR6M - MP3M';
      txt[96] := 'USD/RUB MP Q 3M';
      txt[97] := 'USD/TRY LR3M - A';
      txt[98] := 'USD/TRY TRR Q 3M';
      txt[99] := 'ZAR JR Q 3M';

      FOR i := 1 TO 99 DO BEGIN
        IF txt[i] <> '' THEN BEGIN
          FI.SETRANGE(FI."No.",txt[i]);
          IF FI.FINDFIRST THEN
            FI.DELETE(TRUE);
        END;
      END;
    END;

    BEGIN
    END.
  }
}

