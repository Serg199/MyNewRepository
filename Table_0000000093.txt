OBJECT Table 93 Vendor Posting Group
{
  OBJECT-PROPERTIES
  {
    Date=27.06.17;
    Time=10:23:02;
    Modified=Yes;
    Version List=NAVW19.00,NAVRU9.00,NOS-26;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    CaptionML=[ENU=Vendor Posting Group;
               RUS=Учетная группа поставщика];
    LookupPageID=Page111;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              RUS=Код];
                                                   NotBlank=Yes }
    { 2   ;   ;Payables Account    ;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Payables Account",FALSE,FALSE);
                                                              END;

                                                   CaptionML=[ENU=Payables Account;
                                                              RUS=Счет кредиторской задолженности] }
    { 7   ;   ;Service Charge Acc. ;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Service Charge Acc.",TRUE,TRUE);
                                                              END;

                                                   CaptionML=[ENU=Service Charge Acc.;
                                                              RUS=Счет платы за сервисное обслуживание] }
    { 8   ;   ;Payment Disc. Debit Acc.;Code20    ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Payment Disc. Debit Acc.",FALSE,FALSE);
                                                              END;

                                                   CaptionML=[ENU=Payment Disc. Debit Acc.;
                                                              RUS=Дебетовый счет скидки оплаты] }
    { 9   ;   ;Invoice Rounding Account;Code20    ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Invoice Rounding Account",TRUE,FALSE);
                                                              END;

                                                   CaptionML=[ENU=Invoice Rounding Account;
                                                              RUS=Счет ГК округления счета] }
    { 10  ;   ;Debit Curr. Appln. Rndg. Acc.;Code20;
                                                   TableRelation="G/L Account";
                                                   CaptionML=[ENU=Debit Curr. Appln. Rndg. Acc.;
                                                              RUS=Деб. счет округл. при прим. валюты] }
    { 11  ;   ;Credit Curr. Appln. Rndg. Acc.;Code20;
                                                   TableRelation="G/L Account";
                                                   CaptionML=[ENU=Credit Curr. Appln. Rndg. Acc.;
                                                              RUS=Кр. счет округл. при прим. валюты] }
    { 12  ;   ;Debit Rounding Account;Code20      ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=Debit Rounding Account;
                                                              RUS=Дебетовый счет округления] }
    { 13  ;   ;Credit Rounding Account;Code20     ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=Credit Rounding Account;
                                                              RUS=Кредитовый счет округления] }
    { 16  ;   ;Payment Disc. Credit Acc.;Code20   ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Payment Disc. Credit Acc.",FALSE,FALSE);
                                                              END;

                                                   CaptionML=[ENU=Payment Disc. Credit Acc.;
                                                              RUS=Кредитовый счет скидки оплаты] }
    { 17  ;   ;Payment Tolerance Debit Acc.;Code20;TableRelation="G/L Account";
                                                   CaptionML=[ENU=Payment Tolerance Debit Acc.;
                                                              RUS=Дебетовый счет отклонений в оплате] }
    { 18  ;   ;Payment Tolerance Credit Acc.;Code20;
                                                   TableRelation="G/L Account";
                                                   CaptionML=[ENU=Payment Tolerance Credit Acc.;
                                                              RUS=Кредитовый счет отклонений в оплате] }
    { 12400;  ;Prepayment Account  ;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Prepayment Account",FALSE,FALSE);
                                                              END;

                                                   CaptionML=[ENU=Prepayment Account;
                                                              RUS=Счет ГК предоплаты] }
    { 12401;  ;KPP Code Mandatory  ;Boolean       ;CaptionML=[ENU=KPP Code Mandatory;
                                                              RUS=Код КПП обязателен] }
    { 12402;  ;Skip Posting        ;Boolean       ;CaptionML=[ENU=Skip Posting;
                                                              RUS=Без разноски] }
    { 12403;  ;VAT Invoice Mandatory;Boolean      ;CaptionML=[ENU=VAT Invoice Mandatory;
                                                              RUS=Счет-фактура обязательна] }
    { 12410;  ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 50001;  ;Loan Interest Account;Code20       ;TableRelation="G/L Account" WHERE (Income/Balance=CONST(Income Statement));
                                                   OnValidate=BEGIN
                                                                //NC LN09 > DP
                                                                //DescriptionDefine := FALSE;
                                                                //NC LN09 < DP

                                                                CheckGLAcc("Loan Interest Account",TRUE,FALSE);
                                                              END;

                                                   CaptionML=[ENU=Loan Interest Account;
                                                              RUS=Кредиты Начисл. Проценты Фин. Счет];
                                                   Description=NC MLN09 DP }
    { 50002;  ;Loan Sale Gains Account;Code20     ;TableRelation="G/L Account" WHERE (Income/Balance=CONST(Income Statement));
                                                   CaptionML=[ENU=Loan Sale Gains Account;
                                                              RUS=Кредиты Продажа Прибыль Фин. Счет Но.];
                                                   Description=NC MLN08 DP }
    { 50003;  ;Loan Sale Losses Account;Code20    ;TableRelation="G/L Account" WHERE (Income/Balance=CONST(Income Statement));
                                                   CaptionML=[ENU=Loan Sale Losses Account;
                                                              RUS=Кредиты Продажа Убыток Фин. Счет];
                                                   Description=NC MLN08 DP }
    { 50004;  ;Loan Princ/Int. Posting Group;Code10;
                                                   TableRelation="Vendor Posting Group".Code;
                                                   CaptionML=[ENU=Loan Princ/Int. Posting Group;
                                                              RUS=Тело/Проценты Учетная Группа];
                                                   Description=NC MLN09 DP }
    { 50005;  ;Loan Interest       ;Boolean       ;CaptionML=[ENU=Loan Interest;
                                                              RUS=Кредит Проценты];
                                                   Description=NC MLN09 DP }
    { 50006;  ;Loan Reserve        ;Boolean       ;CaptionML=[ENU=Loan Reserve;
                                                              RUS=Кредит Резерв];
                                                   Description=NC NCS-1268 DP }
    { 50007;  ;Loan Reserve Posting Group;Code10  ;TableRelation="Vendor Posting Group".Code;
                                                   CaptionML=[ENU=Loan Reserve Posting Group;
                                                              RUS=Кредит Резерв Учетная Группа];
                                                   Description=NC NCS-1268 DP }
    { 50008;  ;Loan Reserve Account;Code20        ;TableRelation="G/L Account" WHERE (Income/Balance=CONST(Income Statement));
                                                   CaptionML=[ENU=Loan Reserve Account;
                                                              RUS=Кредит Резерв Фин. Счет Но.];
                                                   Description=NC NCS-1268 DP }
    { 50009;  ;Default             ;Boolean       ;OnValidate=VAR
                                                                VendPostGroup@1101495000 : Record 93;
                                                                DefDim2@1101495002 : Record 352;
                                                                DefDim@1101495003 : Record 352;
                                                                PurchSetup@1101495001 : Record 312;
                                                              BEGIN
                                                                //NC NCS-1600 > USE
                                                                PurchSetup.GET;
                                                                PurchSetup.TESTFIELD("Use Default Posting Group",TRUE);
                                                                IF  Default THEN BEGIN
                                                                  VendPostGroup.RESET;
                                                                  VendPostGroup.SETRANGE(Default,TRUE);
                                                                  VendPostGroup.SETFILTER(Code,'<>%1',Code);
                                                                  IF VendPostGroup.FINDFIRST THEN
                                                                    REPEAT
                                                                      VendPostGroup.Default:=FALSE;
                                                                      VendPostGroup.MODIFY;
                                                                    UNTIL VendPostGroup.NEXT=0;
                                                                  DefDim.RESET;
                                                                  DefDim.SETRANGE("Table ID",DATABASE::"G/L Account");
                                                                  DefDim.SETRANGE("No.","Payables Account");
                                                                  DefDim.SETFILTER("Value Posting",'%1|%2',DefDim."Value Posting"::"Code Mandatory",DefDim."Value Posting"::"Same Code");
                                                                  IF DefDim.FINDFIRST THEN
                                                                    REPEAT
                                                                      DefDim2."Table ID" := DATABASE::"Vendor Posting Group";
                                                                      DefDim2."No." := Code;
                                                                      DefDim2."Dimension Code" := DefDim."Dimension Code";
                                                                      DefDim2."Dimension Value Code" := DefDim."Dimension Value Code";
                                                                      DefDim2."Value Posting" := DefDim."Value Posting";
                                                                      IF NOT DefDim2.INSERT(TRUE) THEN;
                                                                    UNTIL DefDim.NEXT=0;
                                                                END;
                                                                //NC NCS-1600 < USE
                                                              END;

                                                   CaptionML=[ENU=Default;
                                                              RUS=По умолчанию];
                                                   Description=NC NCS-1600 USE }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;Brick               ;Code                                     }
  }
  CODE
  {

    LOCAL PROCEDURE CheckGLAcc@2(AccNo@1000 : Code[20];CheckProdPostingGroup@1001 : Boolean;CheckDirectPosting@1002 : Boolean);
    VAR
      GLAcc@1003 : Record 15;
    BEGIN
      IF AccNo <> '' THEN BEGIN
        GLAcc.GET(AccNo);
        GLAcc.CheckGLAcc;
        IF CheckProdPostingGroup THEN
          GLAcc.TESTFIELD("Gen. Prod. Posting Group");
        IF CheckDirectPosting THEN
          GLAcc.TESTFIELD("Direct Posting",TRUE);
      END;
    END;

    PROCEDURE GetPayablesAccount@6() : Code[20];
    BEGIN
      TESTFIELD("Payables Account");
      EXIT("Payables Account");
    END;

    PROCEDURE GetPmtDiscountAccount@1(Debit@1000 : Boolean) : Code[20];
    BEGIN
      IF Debit THEN BEGIN
        TESTFIELD("Payment Disc. Debit Acc.");
        EXIT("Payment Disc. Debit Acc.");
      END;
      TESTFIELD("Payment Disc. Credit Acc.");
      EXIT("Payment Disc. Credit Acc.");
    END;

    PROCEDURE GetPmtToleranceAccount@3(Debit@1000 : Boolean) : Code[20];
    BEGIN
      IF Debit THEN BEGIN
        TESTFIELD("Payment Tolerance Debit Acc.");
        EXIT("Payment Tolerance Debit Acc.");
      END;
      TESTFIELD("Payment Tolerance Credit Acc.");
      EXIT("Payment Tolerance Credit Acc.");
    END;

    PROCEDURE GetRoundingAccount@4(Debit@1000 : Boolean) : Code[20];
    BEGIN
      IF Debit THEN BEGIN
        TESTFIELD("Debit Rounding Account");
        EXIT("Debit Rounding Account");
      END;
      TESTFIELD("Credit Rounding Account");
      EXIT("Credit Rounding Account");
    END;

    PROCEDURE GetApplRoundingAccount@5(Debit@1000 : Boolean) : Code[20];
    BEGIN
      IF Debit THEN BEGIN
        TESTFIELD("Debit Curr. Appln. Rndg. Acc.");
        EXIT("Debit Curr. Appln. Rndg. Acc.");
      END;
      TESTFIELD("Credit Curr. Appln. Rndg. Acc.");
      EXIT("Credit Curr. Appln. Rndg. Acc.");
    END;

    PROCEDURE GetPrepaymentAccount@1210000(Prepayment@1210000 : Boolean) : Code[20];
    BEGIN
      IF Prepayment THEN BEGIN
        TESTFIELD("Prepayment Account");
        EXIT("Prepayment Account");
      END;
      TESTFIELD("Payables Account");
      EXIT("Payables Account");
    END;

    BEGIN
    {
      NC LN09 DP Добавлено поле Accrual Interest Account
      NC NCS-964 DP Контроль использвания учетной группы в карточках
      NC NCS-964.1 DP Контроль использвания учетной группы в договорах
      NC NCS-1268 DP Добавлены поля "Loan Reserve", "Loan Reserve Posting Group", "Loan Reserve Account"
      NC NCS-1600 USE Добавлено поле Default
    }
    END.
  }
}

