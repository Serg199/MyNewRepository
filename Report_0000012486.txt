OBJECT Report 12486 FA Phys. Inventory INV-1
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=FA Phys. Inventory INV-1;
               RUS=ОС - инвентарная опись ИНВ-1];
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  FASetup@1210000 : Record 5603;
                BEGIN
                  FASetup.GET;
                  FASetup.TESTFIELD("INV-1 Template Code");
                  ExcelReportBuilderMgr.InitTemplate(FASetup."INV-1 Template Code");
                END;

    OnPostReport=BEGIN
                   IF FileName <> '' THEN
                     ExcelReportBuilderMgr.ExportDataToClientFile(FileName)
                   ELSE
                     ExcelReportBuilderMgr.ExportData;
                 END;

  }
  DATASET
  {
    { 3215;    ;DataItem;                    ;
               DataItemTable=Table5621;
               DataItemTableView=SORTING(Journal Template Name,Journal Batch Name,Line No.);
               OnPreDataItem=BEGIN
                               CompanyInf.GET;
                               IF FINDFIRST THEN
                                 InvSheetNo := "Document No.";

                               IF FALocation.GET(GETFILTER("Location Code")) THEN;

                               IF NOT Employee.GET(GETFILTER("Employee No.")) THEN
                                 IF Employee.GET(FALocation."Employee No.") THEN;

                               ExcelReportBuilderMgr.SetSheet('Sheet1');
                               FillFirstPage;
                               ExcelReportBuilderMgr.AddSection('MAINPAGEHEADER');
                             END;

               OnAfterGetRecord=BEGIN
                                  FixetAsset.GET("FA No.");

                                  IF NOT ExcelReportBuilderMgr.TryAddSectionWithPlaceForFooter('MAINPAGEBODY','MAINPAGEFOOTER') THEN BEGIN
                                    ExcelReportBuilderMgr.AddSection('MAINPAGEFOOTER');
                                    FillMainPageTotals;

                                    ExcelReportBuilderMgr.AddPagebreak;
                                    ExcelReportBuilderMgr.AddSection('MAINPAGEHEADER');
                                    ExcelReportBuilderMgr.AddSection('MAINPAGEBODY');

                                    NumberPPPage := 0;
                                    CLEAR(PageAmounts);
                                  END;

                                  NumberPP += 1;
                                  NumberPPPage += 1;
                                  AddTotals(PageAmounts,"Actual Quantity","Actual Amount","Calc. Quantity","Calc. Amount");
                                  AddTotals(TotalAmounts,"Actual Quantity","Actual Amount","Calc. Quantity","Calc. Amount");

                                  ExcelReportBuilderMgr.AddDataToSection('LineNum',FORMAT(NumberPP));
                                  ExcelReportBuilderMgr.AddDataToSection('AssetName',Description);
                                  ExcelReportBuilderMgr.AddDataToSection('ManufacturingYear',FORMAT(FixetAsset."Manufacturing Year"));
                                  ExcelReportBuilderMgr.AddDataToSection('InventoryNumber',FixetAsset."Inventory Number");
                                  ExcelReportBuilderMgr.AddDataToSection('FactoryNumber',FixetAsset."Factory No.");
                                  ExcelReportBuilderMgr.AddDataToSection('PassportNo',FixetAsset."Passport No.");
                                  ExcelReportBuilderMgr.AddDataToSection('FactQty',StdRepMgt.FormatReportValue("Actual Quantity",2));
                                  ExcelReportBuilderMgr.AddDataToSection('FactAmount',StdRepMgt.FormatReportValue("Actual Amount",2));
                                  ExcelReportBuilderMgr.AddDataToSection('CalcQty',StdRepMgt.FormatReportValue("Calc. Quantity",2));
                                  ExcelReportBuilderMgr.AddDataToSection('CalcAmount',StdRepMgt.FormatReportValue("Calc. Amount",2));
                                END;

               OnPostDataItem=BEGIN
                                ExcelReportBuilderMgr.AddSection('MAINPAGEFOOTER');
                                FillMainPageTotals;
                                ExcelReportBuilderMgr.AddPagebreak;

                                FillLastPage;
                              END;

               ReqFilterFields=Journal Template Name,Journal Batch Name,Document No.,Location Code,Employee No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   CreatDate := WORKDATE;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             RUS=Параметры] }

      { 1210019;2;Field     ;
                  CaptionML=[ENU=Inventory Date;
                             RUS=Дата инвентаризации];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=CreatDate }

      { 1210015;2;Field     ;
                  CaptionML=[ENU=Document No.;
                             RUS=Номер документа];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=DocumentNo }

      { 1210012;2;Field     ;
                  CaptionML=[ENU=Document Date;
                             RUS=Дата документа];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=DocumentDate }

      { 1210010;2;Field     ;
                  CaptionML=[ENU=Starting Date;
                             RUS=Дата начала];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=StartDate }

      { 1210008;2;Field     ;
                  CaptionML=[ENU=Ending Date;
                             RUS=Дата окончания];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=EndDate }

      { 1210006;2;Field     ;
                  CaptionML=[ENU=Chairman;
                             RUS=Председатель];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=Chairman;
                  TableRelation=Employee }

      { 1210004;2;Field     ;
                  CaptionML=[ENU=Commission Member1;
                             RUS=Член комиссии1];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=Commission1;
                  TableRelation=Employee }

      { 1210002;2;Field     ;
                  CaptionML=[ENU=Commission Member2;
                             RUS=Член комиссии2];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=Commission2;
                  TableRelation=Employee }

      { 1210001;2;Field     ;
                  CaptionML=[ENU=Commission Member3;
                             RUS=Член комиссии3];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=Commission3;
                  TableRelation=Employee }

      { 1210000;2;Field     ;
                  CaptionML=[ENU=Checked by;
                             RUS=Код проверяющего];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=WhoCheck;
                  TableRelation=Employee }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CompanyInf@1210000 : Record 79;
      FALocation@1210010 : Record 5609;
      FixetAsset@1210012 : Record 5600;
      Employee@1210001 : Record 5200;
      LocMgt@1210005 : Codeunit 12400;
      StdRepMgt@1210004 : Codeunit 12401;
      ExcelReportBuilderMgr@1210003 : Codeunit 14930;
      StartDate@1210014 : Date;
      EndDate@1210015 : Date;
      DocumentNo@1210017 : Code[10];
      DocumentDate@1210018 : Date;
      CreatDate@1210026 : Date;
      Chairman@1210032 : Text[250];
      Commission1@1210033 : Text[250];
      Commission2@1210034 : Text[250];
      Commission3@1210035 : Text[250];
      WhoCheck@1210036 : Text[250];
      FileName@1210002 : Text;
      InvSheetNo@1210057 : Code[10];
      ValueIndex@1210008 : ',FactQty,FactAmt,CalcQty,CalcAmt';
      PageAmounts@1210011 : ARRAY [4] OF Decimal;
      TotalAmounts@1210009 : ARRAY [4] OF Decimal;
      NumberPP@1210013 : Integer;
      NumberPPPage@1210016 : Integer;

    PROCEDURE SetFileNameSilent@1210007(NewFileName@1210001 : Text);
    BEGIN
      FileName := NewFileName;
    END;

    LOCAL PROCEDURE AddTotals@1210014(VAR TotalArr@1210000 : ARRAY [4] OF Decimal;FactQty@1210001 : Decimal;FactAmt@1210002 : Decimal;CalcQty@1210003 : Decimal;CalcAmt@1210004 : Decimal);
    BEGIN
      TotalArr[ValueIndex::FactQty] += FactQty;
      TotalArr[ValueIndex::FactAmt] += FactAmt;
      TotalArr[ValueIndex::CalcQty] += CalcQty;
      TotalArr[ValueIndex::CalcAmt] += CalcAmt;
    END;

    LOCAL PROCEDURE FillFirstPage@1210002();
    BEGIN
      ExcelReportBuilderMgr.AddSection('FIRSTPAGE');

      ExcelReportBuilderMgr.AddDataToSection('InventJournalNum',InvSheetNo);
      ExcelReportBuilderMgr.AddDataToSection('CompanyName',StdRepMgt.GetCompanyName);
      ExcelReportBuilderMgr.AddDataToSection('DepartmentName',StdRepMgt.GetEmpDepartment(Employee."No."));
      ExcelReportBuilderMgr.AddDataToSection('OKPO',CompanyInf."OKPO Code");
      ExcelReportBuilderMgr.AddDataToSection('DocumentNo',DocumentNo);
      ExcelReportBuilderMgr.AddDataToSection('DocumentDate',FORMAT(DocumentDate));
      ExcelReportBuilderMgr.AddDataToSection('InventStartDate',FORMAT(StartDate));
      ExcelReportBuilderMgr.AddDataToSection('InventEndDate',FORMAT(EndDate));
      ExcelReportBuilderMgr.AddDataToSection('LocationName',FALocation.Name);
      ExcelReportBuilderMgr.AddDataToSection('RespFirstPageTitle1',StdRepMgt.GetEmpPosition(Employee."No."));
      ExcelReportBuilderMgr.AddDataToSection('RespFirstPageName1',StdRepMgt.GetEmpName(Employee."No."));
      ExcelReportBuilderMgr.AddPagebreak;
    END;

    LOCAL PROCEDURE FillMainPageTotals@1210029();
    BEGIN
      ExcelReportBuilderMgr.AddDataToSection('FactQtyTotal',StdRepMgt.FormatReportValue(PageAmounts[ValueIndex::FactQty],2));
      ExcelReportBuilderMgr.AddDataToSection('FactCostTotal',StdRepMgt.FormatReportValue(PageAmounts[ValueIndex::FactAmt],2));
      ExcelReportBuilderMgr.AddDataToSection('AccountingQtyTotal',
        StdRepMgt.FormatReportValue(PageAmounts[ValueIndex::CalcQty],2));
      ExcelReportBuilderMgr.AddDataToSection('AccountingCostTotal',
        StdRepMgt.FormatReportValue(PageAmounts[ValueIndex::CalcAmt],2));

      ExcelReportBuilderMgr.AddDataToSection('LineNumPageTotalStr',LocMgt.Integer2Text(NumberPPPage,2,'','',''));
      ExcelReportBuilderMgr.AddDataToSection('FactQtyPageTxt',LocMgt.Integer2Text(PageAmounts[ValueIndex::FactQty],2,'','',''));

      ExcelReportBuilderMgr.AddDataToSection('FactCostPageTxt',LocMgt.Amount2Text('',PageAmounts[ValueIndex::FactAmt]));
    END;

    LOCAL PROCEDURE FillLastPage@1210003();
    BEGIN
      ExcelReportBuilderMgr.AddSection('LASTPAGE');

      ExcelReportBuilderMgr.AddDataToSection('LineNumTotalStr',LocMgt.Integer2Text(NumberPP,2,'','',''));
      ExcelReportBuilderMgr.AddDataToSection('FactQtyTxt',LocMgt.Integer2Text(TotalAmounts[ValueIndex::FactQty],2,'','',''));
      ExcelReportBuilderMgr.AddDataToSection('FactCostTxt',LocMgt.Amount2Text('',TotalAmounts[ValueIndex::FactAmt]));
      ExcelReportBuilderMgr.AddDataToSection('TotalNumStr',FORMAT(NumberPP));

      ExcelReportBuilderMgr.AddDataToSection('Chairman',StdRepMgt.GetEmpPosition(Chairman));
      ExcelReportBuilderMgr.AddDataToSection('ChairmanName',StdRepMgt.GetEmpName(Chairman));
      ExcelReportBuilderMgr.AddDataToSection('Member1',StdRepMgt.GetEmpPosition(Commission1));
      ExcelReportBuilderMgr.AddDataToSection('MemberName1',StdRepMgt.GetEmpName(Commission1));
      ExcelReportBuilderMgr.AddDataToSection('Member2',StdRepMgt.GetEmpPosition(Commission2));
      ExcelReportBuilderMgr.AddDataToSection('MemberName2',StdRepMgt.GetEmpName(Commission2));
      ExcelReportBuilderMgr.AddDataToSection('Member3',StdRepMgt.GetEmpPosition(Commission3));
      ExcelReportBuilderMgr.AddDataToSection('MemberName3',StdRepMgt.GetEmpName(Commission3));
      ExcelReportBuilderMgr.AddDataToSection('RespLastPageTitle1',StdRepMgt.GetEmpPosition(FALocation."Employee No."));
      ExcelReportBuilderMgr.AddDataToSection('RespLastPageName1',StdRepMgt.GetEmpName(FALocation."Employee No."));
      ExcelReportBuilderMgr.AddDataToSection('CheckedByTitleLastPage',StdRepMgt.GetEmpPosition(WhoCheck));
      ExcelReportBuilderMgr.AddDataToSection('CheckedByNameLastPage',StdRepMgt.GetEmpName(WhoCheck));
      ExcelReportBuilderMgr.AddPagebreak;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

