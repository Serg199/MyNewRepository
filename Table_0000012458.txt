OBJECT Table 12458 Direct Transfer Header
{
  OBJECT-PROPERTIES
  {
    Date=09.09.14;
    Time=12:00:00;
    Version List=NAVRU8.00;
  }
  PROPERTIES
  {
    DataCaptionFields=No.;
    OnDelete=VAR
               InvtCommentLine@1000 : Record 5748;
               DirectTransLine@1001 : Record 12459;
               PostedDocSignature@1470000 : Record 12421;
               MoveEntries@1002 : Codeunit 361;
             BEGIN
               DirectTransLine.SETRANGE("Document No.","No.");
               DirectTransLine.DELETEALL;

               InvtCommentLine.SETRANGE("Document Type",InvtCommentLine."Document Type"::"Posted Direct Transfer");
               InvtCommentLine.SETRANGE("No.","No.");
               InvtCommentLine.DELETEALL;

               PostedDocSignature.SETRANGE("Table ID",DATABASE::"Direct Transfer Header");
               PostedDocSignature.SETRANGE("Document No.","No.");
               PostedDocSignature.DELETEALL;

               ItemTrackingMgt.DeleteItemEntryRelation(
                 DATABASE::"Direct Transfer Line",0,"No.",'',0,0,TRUE);

               MoveEntries.MoveDocRelatedEntries(DATABASE::"Direct Transfer Header","No.");
             END;

    CaptionML=[ENU=Direct Transfer Header;
               RUS=Заголовок прямого перемещения];
    LookupPageID=Page14982;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              RUS=Номер] }
    { 2   ;   ;Transfer-from Code  ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=[ENU=Transfer-from Code;
                                                              RUS=Код склада-источника] }
    { 3   ;   ;Transfer-from Name  ;Text50        ;CaptionML=[ENU=Transfer-from Name;
                                                              RUS=Название склада-источника] }
    { 4   ;   ;Transfer-from Name 2;Text50        ;CaptionML=[ENU=Transfer-from Name 2;
                                                              RUS=Название 2 склада-источника] }
    { 5   ;   ;Transfer-from Address;Text50       ;CaptionML=[ENU=Transfer-from Address;
                                                              RUS=Адрес склада-источника] }
    { 6   ;   ;Transfer-from Address 2;Text50     ;CaptionML=[ENU=Transfer-from Address 2;
                                                              RUS=Адрес 2 склада-источника] }
    { 7   ;   ;Transfer-from Post Code;Code20     ;TableRelation="Post Code";
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(
                                                                  "Transfer-from City","Transfer-from Post Code",
                                                                  "Transfer-from County","Trsf.-from Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   CaptionML=[ENU=Transfer-from Post Code;
                                                              RUS=Индекс склада-источника] }
    { 8   ;   ;Transfer-from City  ;Text30        ;OnValidate=BEGIN
                                                                PostCode.ValidateCity(
                                                                  "Transfer-from City","Transfer-from Post Code",
                                                                  "Transfer-from County","Trsf.-from Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   CaptionML=[ENU=Transfer-from City;
                                                              RUS=Город склада-источника] }
    { 9   ;   ;Transfer-from County;Text30        ;CaptionML=[ENU=Transfer-from County;
                                                              RUS=Район склада-источника] }
    { 10  ;   ;Trsf.-from Country/Region Code;Code10;
                                                   TableRelation=Country/Region;
                                                   CaptionML=[ENU=Trsf.-from Country/Region Code;
                                                              RUS=Код страны/региона источника перемещения] }
    { 11  ;   ;Transfer-to Code    ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=[ENU=Transfer-to Code;
                                                              RUS=Код склада-назначения] }
    { 12  ;   ;Transfer-to Name    ;Text50        ;CaptionML=[ENU=Transfer-to Name;
                                                              RUS=Название склада-назначения] }
    { 13  ;   ;Transfer-to Name 2  ;Text50        ;CaptionML=[ENU=Transfer-to Name 2;
                                                              RUS=Название 2 склада-назначения] }
    { 14  ;   ;Transfer-to Address ;Text50        ;CaptionML=[ENU=Transfer-to Address;
                                                              RUS=Адрес склада-назначения] }
    { 15  ;   ;Transfer-to Address 2;Text50       ;CaptionML=[ENU=Transfer-to Address 2;
                                                              RUS=Адрес 2 склада-назначения] }
    { 16  ;   ;Transfer-to Post Code;Code20       ;TableRelation="Post Code";
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(
                                                                  "Transfer-to City","Transfer-to Post Code","Transfer-to County",
                                                                  "Trsf.-to Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   CaptionML=[ENU=Transfer-to Post Code;
                                                              RUS=Индекс склада-назначения] }
    { 17  ;   ;Transfer-to City    ;Text30        ;OnValidate=BEGIN
                                                                PostCode.ValidateCity(
                                                                  "Transfer-to City","Transfer-to Post Code","Transfer-to County",
                                                                  "Trsf.-to Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   CaptionML=[ENU=Transfer-to City;
                                                              RUS=Город склада-назначения] }
    { 18  ;   ;Transfer-to County  ;Text30        ;CaptionML=[ENU=Transfer-to County;
                                                              RUS=Район склада-назначения] }
    { 19  ;   ;Trsf.-to Country/Region Code;Code10;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Trsf.-to Country/Region Code;
                                                              RUS=Код страны/региона назначения перемещения] }
    { 20  ;   ;Transfer Order Date ;Date          ;CaptionML=[ENU=Transfer Order Date;
                                                              RUS=Дата заказа] }
    { 21  ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              RUS=Дата учета] }
    { 22  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Inventory Comment Line" WHERE (Document Type=CONST(Posted Transfer Receipt),
                                                                                                     No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              RUS=Комментарий];
                                                   Editable=No }
    { 23  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              RUS=Код ярлыка измерения 1];
                                                   CaptionClass='1,2,1' }
    { 24  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              RUS=Код ярлыка измерения 2];
                                                   CaptionClass='1,2,2' }
    { 25  ;   ;Transfer Order No.  ;Code20        ;TableRelation="Transfer Header";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Transfer Order No.;
                                                              RUS=Номер заказа на перемещение] }
    { 26  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              RUS=Серия номеров] }
    { 30  ;   ;Transfer-from Contact;Text50       ;CaptionML=[ENU=Transfer-from Contact;
                                                              RUS=Контакт склада-источника] }
    { 31  ;   ;Transfer-to Contact ;Text50        ;CaptionML=[ENU=Transfer-to Contact;
                                                              RUS=Контакт склада-назначения] }
    { 32  ;   ;External Document No.;Code35       ;CaptionML=[ENU=External Document No.;
                                                              RUS=Номер внешнего документа] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              RUS=Код набора измерений] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Transfer-from Code,Transfer-to Code,Posting Date,Transfer Order Date }
  }
  CODE
  {
    VAR
      PostCode@1002 : Record 225;
      DimMgt@1000 : Codeunit 408;
      ItemTrackingMgt@1001 : Codeunit 6500;

    PROCEDURE Navigate@2();
    VAR
      NavigatePage@1000 : Page 344;
    BEGIN
      NavigatePage.SetDoc("Posting Date","No.");
      NavigatePage.RUN;
    END;

    PROCEDURE PrintRecords@3(ShowRequestForm@1000 : Boolean);
    VAR
      ReportSelection@1001 : Record 77;
      DirectTransHeader@1002 : Record 12458;
      ReportSelectionTmp@1470000 : TEMPORARY Record 77;
    BEGIN
      WITH DirectTransHeader DO BEGIN
        COPY(Rec);
        ReportSelection.SETRANGE(Usage,ReportSelection.Usage::DT);
        ReportSelection.SETFILTER("Report ID",'<>0');
        ReportSelection.FIND('-');
        CASE ReportSelection.COUNT OF
          1:
            REPORT.RUNMODAL(ReportSelection."Report ID",ShowRequestForm,FALSE,DirectTransHeader);
          ELSE BEGIN
            ReportSelectionTmp.RESET;
            ReportSelectionTmp.DELETEALL;
            REPEAT
              ReportSelectionTmp.INIT;
              ReportSelectionTmp := ReportSelection;
              ReportSelectionTmp.INSERT;
            UNTIL ReportSelection.NEXT = 0;
            COMMIT;
            ReportSelectionTmp.FIND('-');
            IF PAGE.RUNMODAL(PAGE::"Report Selection - Print",ReportSelectionTmp) = ACTION::LookupOK THEN BEGIN
              ReportSelectionTmp.SETRANGE(Default,TRUE);
              IF ReportSelectionTmp.FIND('-') THEN
                REPEAT
                  REPORT.RUNMODAL(ReportSelectionTmp."Report ID",ShowRequestForm,FALSE,DirectTransHeader)
                UNTIL ReportSelectionTmp.NEXT = 0;
              ReportSelectionTmp.DELETEALL;
            END;
          END;
        END;
      END;
    END;

    PROCEDURE ShowDimensions@1();
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"No."));
    END;

    BEGIN
    END.
  }
}

