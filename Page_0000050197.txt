OBJECT Page 50197 Op. Facts Dispatcher
{
  OBJECT-PROPERTIES
  {
    Date=10.07.17;
    Time=13:53:39;
    Modified=Yes;
    Version List=NOS-26;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Operation Facts Loading Dispatcher;
               RUS=Диспетчер Загрузки Фактов Операций];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table50005;
    PageType=List;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Post;
                                RUS=Новый,Обработка,Отчет,Учет];
    OnInit=BEGIN
             //NC NOS-26 > SPA
             NewFactsEnable := TRUE;
             FactsWithErrorsEnable := TRUE;
             UnpostedJLRegEnable := TRUE;
             UnpostedPurchaseRegEnable := TRUE;
             UnpostedSalesRegEnable := TRUE;
             //NC NOS-26 < SPA
           END;

    OnOpenPage=BEGIN
                 //NC PIF001 > DP
                 SetInitialFilters;
                 SetRegisterFilters;
                 UpdateFigures;
                 //NC PIF001 < DP
                 //NC MDF01 > RD
                 NewFacts := 0;
                 ModifiedFacts := 0;
                 DeletedFacts := 0;
                 FactsWithErrors :=0;
                 UnpostedSalesDocsReg := 0;
                 UnpostedPurchaseDocsReg := 0;
                 UnpostedJournalLinesReg := 0;
                 //NC MDF01 < RD
               END;

    OnAfterGetRecord=BEGIN
                       //NC PIF001 > DP
                       CalcAllFields;
                       //NC PIF001 < DP
                     END;

    OnAfterGetCurrRecord=VAR
                           FactsBufEntry@1101495001 : Record 50082;
                           FactsPreBufEntry@1101495000 : Record 50081;
                         BEGIN
                           //NC PIF001 > DP
                           CalcAllFields;
                           //NC PIF001 < DP
                           //NC MDF01 > RD
                           IF ConsolSource.GET(ConsolSourceF) THEN BEGIN
                             IF ConsolSource."Import Format" = ConsolSource."Import Format"::OperationFromExtSystem THEN BEGIN
                               //NC NOS-26 > SPA
                               {
                               CurrForm.ctrl_FactsWithErrors.ENABLED(TRUE);
                               CurrForm.ctrl_UnpostedJLReg.ENABLED(FALSE);
                               CurrForm.ctrl_UnpostedPurchaseReg.ENABLED(FALSE);
                               CurrForm.ctrl_UnpostedSalesReg.ENABLED(FALSE);
                               }
                               FactsWithErrorsEnable := TRUE;
                               UnpostedJLRegEnable := FALSE;
                               UnpostedPurchaseRegEnable := FALSE;
                               UnpostedSalesRegEnable := FALSE;
                               //NC NOS-26 < SPA
                               Company.GET(COMPANYNAME);
                               FactsPreBufEntry.RESET;
                               FactsPreBufEntry.SETCURRENTKEY("Id Legal Entity","Cons. Source Code","Consolidation Register",Type);
                               FactsPreBufEntry.SETFILTER("Id Legal Entity", Company."Legal Entity Id");
                               FactsPreBufEntry.SETFILTER("Id External System", ConsolSource."External System");
                               FactsPreBufEntry.SETFILTER("Consolidation Register", '%1', Rec."No.");
                               FactsPreBufEntry.SETFILTER(Type, '%1', FactsPreBufEntry.Type::New);
                               NewFacts := FactsPreBufEntry.COUNT;
                               FactsPreBufEntry.SETFILTER(Type, '%1', FactsPreBufEntry.Type::Modify);
                               ModifiedFacts := FactsPreBufEntry.COUNT;
                               FactsPreBufEntry.SETFILTER(Type, '%1', FactsPreBufEntry.Type::Delete);
                               DeletedFacts := FactsPreBufEntry.COUNT;
                               FactsPreBufEntry.SETRANGE(Type);
                               FactsPreBufEntry.SETCURRENTKEY(Status,"Id Legal Entity","Cons. Source Code","Consolidation Register");
                               FactsPreBufEntry.SETFILTER(Status, '%1', FactsPreBufEntry.Status::"Processing Canceled");
                               FactsWithErrors := FactsPreBufEntry.COUNT;
                             END;
                             IF ConsolSource."Import Format" = ConsolSource."Import Format"::OperationFromBuffer THEN BEGIN
                               //NC NOS-26 > SPA
                               {
                               CurrForm.ctrl_FactsWithErrors.ENABLED(FALSE);
                               CurrForm.ctrl_UnpostedJLReg.ENABLED(TRUE);
                               CurrForm.ctrl_UnpostedPurchaseReg.ENABLED(TRUE);
                               CurrForm.ctrl_UnpostedSalesReg.ENABLED(TRUE);
                               }
                               FactsWithErrorsEnable := FALSE;
                               UnpostedJLRegEnable := TRUE;
                               UnpostedPurchaseRegEnable := TRUE;
                               UnpostedSalesRegEnable := TRUE;
                               //NC NOS-26 < SPA
                               Company.GET(COMPANYNAME);
                               FactsBufEntry.RESET;
                               FactsBufEntry.SETCURRENTKEY("Export Cons. Source Code","Export Consolidation Register",Type);
                               FactsBufEntry.SETFILTER("Export Cons. Source Code",'%1',ConsolSource.Code);
                               FactsBufEntry.SETFILTER("Export Consolidation Register", '%1', Rec."No.");
                               FactsBufEntry.SETFILTER(Type, '%1', FactsBufEntry.Type::New);
                               NewFacts := FactsBufEntry.COUNT;
                               FactsBufEntry.SETFILTER(Type, '%1', FactsBufEntry.Type::Modify);
                               ModifiedFacts := FactsBufEntry.COUNT;
                               FactsBufEntry.SETFILTER(Type, '%1', FactsBufEntry.Type::Delete);
                               DeletedFacts := FactsBufEntry.COUNT;
                               GenJnlLine.RESET;
                               GenJnlLine.SETFILTER("Export Cons. Source Code", ConsolSource.Code);
                               GenJnlLine.SETFILTER("Export Register No.", '%1', Rec."No.");
                               UnpostedJournalLinesReg := GenJnlLine.COUNT;
                               PurchaseHeader.RESET;
                               PurchaseHeader.SETFILTER("Export Cons. Source Code", ConsolSource.Code);
                               PurchaseHeader.SETFILTER("Export Register No.", '%1', Rec."No.");
                               UnpostedPurchaseDocsReg := PurchaseHeader.COUNT;
                               SalesHeader.RESET;
                               SalesHeader.SETFILTER("Export Cons. Source Code", ConsolSource.Code);
                               SalesHeader.SETFILTER("Export Register No.", '%1', Rec."No.");
                               UnpostedSalesDocsReg := SalesHeader.COUNT;
                             END;
                           END;
                           //NC MDF01 < RD
                         END;

    ActionList=ACTIONS
    {
      { 1101495025;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1101495045;1 ;Action    ;
                      ShortCutKey=F11;
                      CaptionML=[ENU=Consolidate;
                                 RUS=Запуск Консолидации];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Start;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ConsolidSource@1101495001 : Record 50001;
                                 Comp@1101495000 : Record 2000000006;
                               BEGIN
                                 //NC PIF001 > DP
                                 //NC PIF001 > DP
                                 IF CompanyFilter <> COMPANYNAME THEN
                                   ERROR(Text00006,ConsolSourceF,CompanyFilter);
                                 //NC PIF001 < DP
                                 ConsolidSource.GET(ConsolSourceF);
                                 Comp.GET(CompanyFilter);
                                 IF (ConsolidSource."Import Format" = ConsolidSource."Import Format"::FromExtSystem) AND
                                     ConsolidSource."Use External File"
                                 THEN BEGIN
                                   //NC NOS-26 > SPA #TODO# перенести отчет Start Import
                                   {
                                   StartImport.SetConsSource(ConsolSourceF);
                                   StartImport.RUNMODAL;
                                   CLEAR(StartImport);
                                   }
                                 END ELSE BEGIN
                                   //NC PIF001 > DP
                                   //IF Comp.Type <> Comp.Type::"4" THEN BEGIN
                                   IF Comp."Company Type" <> Comp."Company Type"::Consolidation THEN BEGIN
                                     //NC NOS-26 > SPA #TODO# перенести отчет Start Transformation
                                     {
                                     CLEAR(StartCons);
                                     StartCons.SetParam(ConsolSourceF);
                                     StartCons.RUNMODAL;
                                     CLEAR(StartCons);
                                     }
                                   END ELSE BEGIN
                                   //NC PIF001 < DP
                                     //NC MDM03 > PCH
                                     {
                                     CLEAR(ConsReport);
                                     ConsReport.SetParameters(ConsolSourceF);
                                     ConsReport.RUNMODAL;
                                     CLEAR(ConsReport);
                                     }
                                     Consolidation.RunConsolidation(ConsolSourceF);
                                     //NC MDM03 < PCH
                                   END;
                                 END;
                                 UpdateFigures;
                                 //NC PIF010 > MP
                                 IF NOT FINDLAST THEN;
                                 //NC PIF010 < MP

                                 //NC PIF001 < DP
                               END;
                                }
      { 1101495047;1 ;Action    ;
                      CaptionML=[ENU=Error Journal;
                                 RUS=Журнал Ошибок];
                      Promoted=Yes;
                      Image=ErrorLog;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ErrorJnl@1101495001 : Record 50023;
                               BEGIN
                                 ErrorJnl.RESET;
                                 ErrorJnl.SETRANGE("Company Name",CompanyFilter);
                                 ErrorJnl.SETRANGE("Cons. Source Code","Cons. Source Code");
                                 ErrorJnl.SETRANGE("Cons. Register","No.");
                                 //NC NOS-26 > SPA #TODO# перенести Page 50042
                                 {
                                 ErrJnlForm.SETTABLEVIEW(ErrorJnl);

                                 ErrJnlForm.RUN;
                                 }
                               END;
                                }
      { 1101495048;1 ;Action    ;
                      CaptionML=[ENU=General Journal;
                                 RUS=Финансовый журнал];
                      Promoted=Yes;
                      Image=GeneralLedger;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 //NC MDF01 > RD
                                 ConsolSource.RESET;
                                 ConsolSource.GET(ConsolSourceF);
                                 ConsolSource.TESTFIELD("Import Format", ConsolSource."Import Format"::OperationFromBuffer);
                                 IF NOT CONFIRM (Text00009) THEN
                                   EXIT;

                                 //NC NOS-26 SPA #TODO# переработать автоматизацию
                                 //RunJobProcess.PostJnlConsSource(ConsolSource.Code, JobProcStatusTemp);

                                 //NC MDF01 < RD
                               END;
                                }
      { 1101495049;1 ;Action    ;
                      CaptionML=[ENU=Purchase Documents;
                                 RUS=Документы Покупки];
                      Promoted=Yes;
                      Image=PurchaseInvoice;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 PostPurchaseInvoices@1101495001 : Report 497;
                                 PostPurchaseCreditMemos@1101495000 : Report 498;
                               BEGIN
                                 //NC MDF01 > RD
                                 ConsolSource.RESET;
                                 ConsolSource.GET(ConsolSourceF);
                                 ConsolSource.TESTFIELD("Import Format", ConsolSource."Import Format"::OperationFromBuffer);
                                 IF NOT CONFIRM (Text00010) THEN
                                   EXIT;
                                 IF UnpostedPurchaseDocs = 0 THEN BEGIN
                                   MESSAGE(Text00012);
                                   EXIT;
                                 END;
                                 PurchaseHeader.RESET;
                                 PurchaseHeader.SETFILTER("Export Cons. Source Code", ConsolSource.Code);
                                 PostPurchaseInvoices.USEREQUESTPAGE(FALSE);
                                 PostPurchaseCreditMemos.USEREQUESTPAGE(FALSE);
                                 PostPurchaseInvoices.SETTABLEVIEW(SalesHeader);
                                 PostPurchaseCreditMemos.SETTABLEVIEW(SalesHeader);
                                 PostPurchaseInvoices.RUNMODAL;
                                 PostPurchaseCreditMemos.RUNMODAL;
                                 //NC MDF01 < RD
                               END;
                                }
      { 1101495050;1 ;Action    ;
                      CaptionML=[ENU=Sales Documents;
                                 RUS=Документы Продажи];
                      Promoted=Yes;
                      Image=SalesInvoice;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 PostSalesInvoices@1101495001 : Report 297;
                                 PostSalesCreditMemos@1101495000 : Report 298;
                               BEGIN
                                 //NC MDF01 > RD
                                 ConsolSource.RESET;
                                 ConsolSource.GET(ConsolSourceF);
                                 ConsolSource.TESTFIELD("Import Format", ConsolSource."Import Format"::OperationFromBuffer);
                                 IF NOT CONFIRM (Text00011) THEN
                                   EXIT;
                                 IF UnpostedSalesDocs = 0 THEN BEGIN
                                   MESSAGE(Text00012);
                                   EXIT;
                                 END;
                                 SalesHeader.RESET;
                                 SalesHeader.SETFILTER("Export Cons. Source Code", ConsolSource.Code);
                                 PostSalesInvoices.USEREQUESTPAGE(FALSE);
                                 PostSalesCreditMemos.USEREQUESTPAGE(FALSE);
                                 PostSalesInvoices.SETTABLEVIEW(SalesHeader);
                                 PostSalesCreditMemos.SETTABLEVIEW(SalesHeader);
                                 PostSalesInvoices.RUNMODAL;
                                 PostSalesCreditMemos.RUNMODAL;
                                 //NC MDF01 < RD
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1101495000;0;Container;
                ContainerType=ContentArea }

    { 1101495039;1;Group  ;
                CaptionML=[ENU=Information;
                           RUS=Информация];
                GroupType=Group;
                Layout=Columns }

    { 1101495027;2;Group  ;
                CaptionML=[ENU=General;
                           RUS=Общее];
                GroupType=Group;
                Layout=Columns }

    { 1101495041;3;Group  ;
                GroupType=GridLayout;
                Layout=Columns }

    { 1101495042;4;Group  ;
                GroupType=Group;
                Layout=Columns }

    { 1101495028;5;Field  ;
                CaptionML=[ENU=Company Filter;
                           RUS=Компания Фильтр];
                SourceExpr=CompanyFilter;
                TableRelation=Company;
                Editable=FALSE;
                OnValidate=BEGIN
                             //NC PIF001 > DP
                             IF CompanyFilter = '' THEN
                               ERROR(Text00001);
                             IF xCompanyFilter <> CompanyFilter THEN BEGIN
                               xCompanyFilter := CompanyFilter;
                               ConsolSourceF := '';
                               UpdateFigures;
                               SetRegisterFilters;
                             END;
                             //NC PIF001 < DP
                             CurrPage.UPDATE;
                           END;
                            }

    { 1101495029;5;Field  ;
                CaptionML=[ENU=Source Cons. Filter;
                           RUS=Источник Консолидации Фильтр];
                SourceExpr=ConsolSourceF;
                Editable=FALSE;
                OnValidate=BEGIN
                             //NC PIF001 > DP
                             IF ConsolSourceF <> '' THEN BEGIN
                               ConsolidationSource.GET(ConsolSourceF);
                             END;
                             SetRegisterFilters;
                             UpdateFigures;
                             //NC PIF001 < DP
                             CurrPage.UPDATE;
                           END;

                OnLookup=BEGIN
                           //NC PIF001 > DP
                           ConsolidationSource.RESET;
                           //ConsolidationSource.SETRANGE("Receive Company",CompanyFilter);
                           //NC MDF01 >RD
                           CountUnprocessed := 0;
                           ConsolidationSource.SETRANGE("Import Format",
                             ConsolidationSource."Import Format"::OperationFromExtSystem,
                             ConsolidationSource. "Import Format"::OperationFromBuffer);
                           //NC MDF01 <RD
                           IF PAGE.RUNMODAL(0,ConsolidationSource) = ACTION::LookupOK THEN BEGIN
                             Text := ConsolidationSource.Code;
                             UpdateFigures;
                             EXIT(TRUE);
                           END;
                           //NC PIF001 < DP
                         END;
                          }

    { 1101495030;5;Field  ;
                CaptionML=[ENU=Import Format;
                           RUS=Формат Импорта];
                SourceExpr=ImportFormat;
                Editable=FALSE }

    { 1101495031;2;Group  ;
                CaptionML=[ENU=General Stats;
                           RUS=Общая статистика];
                GroupType=Group;
                Layout=Columns }

    { 1101495040;3;Group  ;
                GroupType=GridLayout;
                Layout=Columns }

    { 1101495026;4;Group  ;
                GroupType=Group;
                Layout=Columns }

    { 1101495032;5;Field  ;
                CaptionML=[ENU=Unprocessed Operations in Buffer;
                           RUS=Необр. Операций в Буфере];
                SourceExpr=CountUnprocessed;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              //NC MDF01 > RD
                              IF ConsolSourceF <> '' THEN BEGIN
                                ConsolSource.GET(ConsolSourceF);
                                IF ConsolSource."Import Format" = ConsolSource."Import Format"::OperationFromExtSystem THEN BEGIN
                                  Company.GET(COMPANYNAME);
                                  PreBufferFact.RESET;
                                  PreBufferFact.SETCURRENTKEY(Status,"Id External System","Id Legal Entity");
                                  PreBufferFact.SETFILTER("Id Legal Entity",Company."Legal Entity Id");
                                  PreBufferFact.SETFILTER(Status,'%1|%2', PreBufferFact.Status::New, PreBufferFact.Status::"Processing Canceled");
                                  PreBufferFact.SETFILTER("Id External System", ConsolSource."External System");
                                  PAGE.RUNMODAL(0,PreBufferFact);
                                END;
                                IF ConsolSource."Import Format" = ConsolSource."Import Format"::OperationFromBuffer THEN BEGIN
                                  Company.GET(COMPANYNAME);
                                  BufferFact.RESET;
                                  BufferFact.SETCURRENTKEY("Export Cons. Source Code","Export Consolidation Register");
                                  BufferFact.SETFILTER(BufferFact."Export Cons. Source Code",'%1',ConsolSource.Code);
                                  BufferFact.SETFILTER(BufferFact."Export Consolidation Register",'0');
                                  PAGE.RUNMODAL(0,BufferFact);
                                  END;
                              END;
                              //NC MDF01 < RD
                            END;
                             }

    { 1101495033;5;Field  ;
                CaptionML=[ENU=Number of New Operations;
                           RUS=Новых Операций в Буфере];
                SourceExpr=CountNew;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              //NC MDF01 > RD
                              IF ConsolSourceF <> '' THEN BEGIN
                                ConsolSource.GET(ConsolSourceF);
                                IF ConsolSource."Import Format" = ConsolSource."Import Format"::OperationFromExtSystem THEN BEGIN
                                  Company.GET(COMPANYNAME);
                                  PreBufferFact.RESET;
                                  PreBufferFact.SETCURRENTKEY(Status,"Id External System","Id Legal Entity");
                                  PreBufferFact.SETFILTER("Id Legal Entity",Company."Legal Entity Id");
                                  PreBufferFact.SETFILTER(Status,'%1', PreBufferFact.Status::New);
                                  PreBufferFact.SETFILTER("Id External System", ConsolSource."External System");
                                  PAGE.RUNMODAL(0,PreBufferFact);
                                END;
                                IF ConsolSource."Import Format" = ConsolSource."Import Format"::OperationFromBuffer THEN BEGIN
                                  Company.GET(COMPANYNAME);
                                  BufferFact.RESET;
                                  BufferFact.SETCURRENTKEY("Export Cons. Source Code","Export Consolidation Register");
                                  BufferFact.SETFILTER(BufferFact."Export Cons. Source Code",'%1',ConsolSource.Code);
                                  BufferFact.SETFILTER(BufferFact."Export Consolidation Register",'0');
                                  BufferFact.SETFILTER(BufferFact."Error in Import",'0');
                                  PAGE.RUNMODAL(0,BufferFact);
                                END;
                              END;
                              //NC MDF01 < RD
                            END;
                             }

    { 1101495034;5;Field  ;
                CaptionML=[ENU=Number of Postponed Operations in Buffer;
                           RUS=Отлож. Операций в Буфере];
                SourceExpr=CountPostponed;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              //NC MDF01 > RD
                              IF ConsolSourceF <> '' THEN BEGIN
                                ConsolSource.GET(ConsolSourceF);
                                IF ConsolSource."Import Format" = ConsolSource."Import Format"::OperationFromExtSystem THEN BEGIN
                                  Company.GET(COMPANYNAME);
                                  PreBufferFact.RESET;
                                  PreBufferFact.SETCURRENTKEY(Status,"Id External System","Id Legal Entity");
                                  PreBufferFact.SETFILTER("Id Legal Entity",Company."Legal Entity Id");
                                  PreBufferFact.SETFILTER(Status,'%1', PreBufferFact.Status::"Processing Canceled");
                                  PreBufferFact.SETFILTER("Id External System", ConsolSource."External System");
                                  PAGE.RUNMODAL(0,PreBufferFact);
                                END;
                                IF ConsolSource."Import Format" = ConsolSource."Import Format"::OperationFromBuffer THEN BEGIN
                                  Company.GET(COMPANYNAME);
                                  BufferFact.RESET;
                                  BufferFact.SETCURRENTKEY("Export Cons. Source Code","Export Consolidation Register");
                                  BufferFact.SETFILTER(BufferFact."Export Cons. Source Code",'%1',ConsolSource.Code);
                                  BufferFact.SETFILTER(BufferFact."Export Consolidation Register",'0');
                                  BufferFact.SETFILTER(BufferFact."Error in Import",'1');
                                  PAGE.RUNMODAL(0,BufferFact);
                                END;
                              END;
                              //NC MDF01 < RD
                            END;
                             }

    { 1101495021;4;Group  ;
                GroupType=Group;
                Layout=Columns }

    { 1101495035;5;Field  ;
                CaptionML=[ENU=" Number of Unposted Entries In General Journal";
                           RUS=Неучтенных строк в фин. журналах];
                SourceExpr=UnpostedJournalLines;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              IF ConsolSourceF <> '' THEN BEGIN
                                GenJournalBatch.RESET;
                                GenJournalBatch.CHANGECOMPANY(COMPANYNAME);
                                GenJournalBatch.SETFILTER("Qty. Entries",'<>%1',0);
                                GenJournalBatch.SETFILTER("Account No. Filter",'<>%1','');
                                ConsolSource.GET(ConsolSourceF);
                                IF ConsolSource."Import Format" = ConsolSource."Import Format"::OperationFromBuffer THEN
                                  GenJournalBatch.SETFILTER("Consolidation Source Filter", ConsolSource.Code);
                                IF ConsolSource."Import Format" = ConsolSource."Import Format"::OperationFromExtSystem THEN
                                  GenJournalBatch.SETFILTER("Consolidation Source Filter", ConsolSource."Export Cons. Source");
                                IF GenJournalBatch.FINDFIRST THEN BEGIN
                                  //NC NOS-26 SPA #TODO# перенести объект Page50027
                                  {
                                  GeneralJournalBatchesSelect.SETTABLEVIEW(GenJournalBatch);
                                  GeneralJournalBatchesSelect.EDITABLE(FALSE);
                                  GeneralJournalBatchesSelect.RUN;
                                  }

                                END;
                              END;
                            END;
                             }

    { 1101495036;5;Field  ;
                CaptionML=[ENU=" Unposted Purchase Documents";
                           RUS=Неучтенных документов покупки];
                SourceExpr=UnpostedPurchaseDocs;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              //NC MDF01 > RD
                              IF ConsolSourceF <> '' THEN BEGIN
                                ConsolSource.GET(ConsolSourceF);
                                IF ConsolSource."Import Format" = ConsolSource."Import Format"::OperationFromExtSystem THEN BEGIN
                                  Company.GET(COMPANYNAME);
                                  PurchaseHeader.RESET;
                                  PurchaseHeader.SETFILTER("Export Cons. Source Code",ConsolSource."Export Cons. Source");
                                  PAGE.RUNMODAL(0,PurchaseHeader);
                                END;
                                IF ConsolSource."Import Format" = ConsolSource."Import Format"::OperationFromBuffer THEN BEGIN
                                  Company.GET(COMPANYNAME);
                                  PurchaseHeader.RESET;
                                  PurchaseHeader.SETFILTER("Export Cons. Source Code",ConsolSource.Code);
                                  PAGE.RUNMODAL(0,PurchaseHeader);
                                END;
                              END;
                              //NC MDF01 < RD
                            END;
                             }

    { 1101495037;5;Field  ;
                CaptionML=[ENU=Unposted Sales Documents;
                           RUS=Неучтенных документов продажи];
                SourceExpr=UnpostedSalesDocs;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              //NC MDF01 > RD
                              IF ConsolSourceF <> '' THEN BEGIN
                                ConsolSource.GET(ConsolSourceF);
                                IF ConsolSource."Import Format" = ConsolSource."Import Format"::OperationFromExtSystem THEN BEGIN
                                  Company.GET(COMPANYNAME);
                                  SalesHeader.RESET;
                                  SalesHeader.SETFILTER("Export Cons. Source Code",ConsolSource."Export Cons. Source");
                                  PAGE.RUNMODAL(0,SalesHeader);
                                END;
                                IF ConsolSource."Import Format" = ConsolSource."Import Format"::OperationFromBuffer THEN BEGIN
                                  Company.GET(COMPANYNAME);
                                  SalesHeader.RESET;
                                  SalesHeader.SETFILTER("Export Cons. Source Code",ConsolSource.Code);
                                  PAGE.RUNMODAL(0,SalesHeader);
                                END;
                              END;
                              //NC MDF01 < RD
                            END;
                             }

    { 1101495001;1;Group  ;
                Name=Group;
                CaptionML=[ENU=Lines;
                           RUS=Строки];
                GroupType=Repeater }

    { 1101495002;2;Field  ;
                SourceExpr="No." }

    { 1101495003;2;Field  ;
                SourceExpr="Cons. Source Code" }

    { 1101495004;2;Field  ;
                SourceExpr="Consolidation Date" }

    { 1101495005;2;Field  ;
                SourceExpr="Consolidation Time" }

    { 1101495006;2;Field  ;
                SourceExpr="User ID" }

    { 1101495007;2;Field  ;
                SourceExpr="From Entry No.";
                Visible=FALSE }

    { 1101495008;2;Field  ;
                SourceExpr="To Entry No.";
                Visible=FALSE }

    { 1101495009;2;Field  ;
                SourceExpr="From Posting Date" }

    { 1101495010;2;Field  ;
                SourceExpr="To Posting Date" }

    { 1101495011;2;Field  ;
                SourceExpr="Total Entries In Session" }

    { 1101495012;2;Field  ;
                SourceExpr="Total Success Loaded In Sess" }

    { 1101495013;2;Field  ;
                SourceExpr="Total Exception In Sess" }

    { 1101495014;2;Field  ;
                SourceExpr="Total Loaded without Jnl" }

    { 1101495015;2;Field  ;
                SourceExpr="Total Unloaded In Session" }

    { 1101495016;1;Group  ;
                CaptionML=[ENU=Consolidation Register Stats;
                           RUS=Статистика сеанса консолидации];
                GroupType=Group }

    { 1101495024;2;Group  ;
                GroupType=Group }

    { 1101495038;3;Group  ;
                GroupType=GridLayout;
                Layout=Rows }

    { 1101495043;4;Group  ;
                GroupType=Group;
                Layout=Rows }

    { 1101495017;5;Field  ;
                CaptionML=[ENU=New Facts Processed;
                           RUS=Новых фактов обработано];
                SourceExpr=NewFacts;
                Enabled=NewFactsEnable;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              //NC MDF01 > RD
                              IF ConsolSource.GET(ConsolSourceF) THEN BEGIN
                                IF ConsolSource."Import Format" = ConsolSource."Import Format"::OperationFromExtSystem THEN BEGIN
                                  FactsWithErrorsEnable := TRUE;
                                  Company.GET(COMPANYNAME);
                                  PreBufferFact.RESET;
                                  PreBufferFact.SETCURRENTKEY("Id Legal Entity","Cons. Source Code","Consolidation Register",Type);
                                  PreBufferFact.SETFILTER("Id Legal Entity", Company."Legal Entity Id");
                                  PreBufferFact.SETFILTER("Id External System", ConsolSource."External System");
                                  PreBufferFact.SETFILTER("Consolidation Register", '%1', Rec."No.");
                                  PreBufferFact.SETFILTER(Type, '%1', PreBufferFact.Type::New);
                                  PAGE.RUNMODAL(0, PreBufferFact);
                                END;
                                IF ConsolSource."Import Format" = ConsolSource."Import Format"::OperationFromBuffer THEN BEGIN
                                  FactsWithErrorsEnable := FALSE;
                                  Company.GET(COMPANYNAME);
                                  BufferFact.RESET;
                                  BufferFact.SETCURRENTKEY("Export Cons. Source Code","Export Consolidation Register",Type);
                                  BufferFact.SETFILTER("Export Cons. Source Code",'%1',ConsolSource.Code);
                                  BufferFact.SETFILTER("Export Consolidation Register", '%1', Rec."No.");
                                  BufferFact.SETFILTER(Type, '%1', BufferFact.Type::New);
                                  PAGE.RUNMODAL(0, BufferFact);
                                END;
                              END;
                              //NC MDF01 < RD
                            END;
                             }

    { 1101495018;5;Field  ;
                CaptionML=[ENU=Modified Facts Processed;
                           RUS=Измененных фактов обработано];
                SourceExpr=ModifiedFacts;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              //NC MDF01 > RD
                              IF ConsolSource.GET(ConsolSourceF) THEN BEGIN
                                IF ConsolSource."Import Format" = ConsolSource."Import Format"::OperationFromExtSystem THEN BEGIN
                                  FactsWithErrorsEnable := TRUE;
                                  Company.GET(COMPANYNAME);
                                  PreBufferFact.RESET;
                                  PreBufferFact.SETCURRENTKEY("Id Legal Entity","Cons. Source Code","Consolidation Register",Type);
                                  PreBufferFact.SETFILTER("Id Legal Entity", Company."Legal Entity Id");
                                  PreBufferFact.SETFILTER("Id External System", ConsolSource."External System");
                                  PreBufferFact.SETFILTER("Consolidation Register", '%1', Rec."No.");
                                  PreBufferFact.SETFILTER(Type, '%1', PreBufferFact.Type::Modify);
                                  PAGE.RUNMODAL(0, PreBufferFact);
                                END;
                                IF ConsolSource."Import Format" = ConsolSource."Import Format"::OperationFromBuffer THEN BEGIN
                                  FactsWithErrorsEnable := FALSE;
                                  Company.GET(COMPANYNAME);
                                  BufferFact.RESET;
                                  BufferFact.SETCURRENTKEY("Export Cons. Source Code","Export Consolidation Register",Type);
                                  BufferFact.SETFILTER("Export Cons. Source Code",'%1',ConsolSource.Code);
                                  BufferFact.SETFILTER("Export Consolidation Register", '%1', Rec."No.");
                                  BufferFact.SETFILTER(Type, '%1', BufferFact.Type::Modify);
                                  PAGE.RUNMODAL(0, BufferFact);
                                END;
                              END;
                              //NC MDF01 < RD
                            END;
                             }

    { 1101495019;5;Field  ;
                CaptionML=[ENU=Deleted Facts Processed;
                           RUS=Удаленных фактов обработано];
                SourceExpr=DeletedFacts;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              //NC MDF01 > RD
                              IF ConsolSource.GET(ConsolSourceF) THEN BEGIN
                                IF ConsolSource."Import Format" = ConsolSource."Import Format"::OperationFromExtSystem THEN BEGIN
                                  FactsWithErrorsEnable := TRUE;
                                  Company.GET(COMPANYNAME);
                                  PreBufferFact.RESET;
                                  PreBufferFact.SETCURRENTKEY("Id Legal Entity","Cons. Source Code","Consolidation Register",Type);
                                  PreBufferFact.SETFILTER("Id Legal Entity", Company."Legal Entity Id");
                                  PreBufferFact.SETFILTER("Id External System", ConsolSource."External System");
                                  PreBufferFact.SETFILTER("Consolidation Register", '%1', Rec."No.");
                                  PreBufferFact.SETFILTER(Type, '%1', PreBufferFact.Type::Delete);
                                  PAGE.RUNMODAL(0, PreBufferFact);
                                END;
                                IF ConsolSource."Import Format" = ConsolSource."Import Format"::OperationFromBuffer THEN BEGIN
                                  FactsWithErrorsEnable := FALSE;
                                  Company.GET(COMPANYNAME);
                                  BufferFact.RESET;
                                  BufferFact.SETCURRENTKEY("Export Cons. Source Code","Export Consolidation Register",Type);
                                  BufferFact.SETFILTER("Export Cons. Source Code",'%1',ConsolSource.Code);
                                  BufferFact.SETFILTER("Export Consolidation Register", '%1', Rec."No.");
                                  BufferFact.SETFILTER(Type, '%1', BufferFact.Type::Delete);
                                  PAGE.RUNMODAL(0, BufferFact);
                                END;
                              END;
                              //NC MDF01 < RD
                            END;
                             }

    { 1101495020;5;Field  ;
                CaptionML=[ENU=Errors in Buffer;
                           RUS=Ошибочных фактов обработано];
                SourceExpr=FactsWithErrors;
                Enabled=FactsWithErrorsEnable;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              //NC MDF01 > RD
                              IF ConsolSource.GET(ConsolSourceF) THEN
                                IF ConsolSource."Import Format" = ConsolSource."Import Format"::OperationFromExtSystem THEN BEGIN
                                  FactsWithErrorsEnable := TRUE;
                                  Company.GET(COMPANYNAME);
                                  PreBufferFact.RESET;
                                  PreBufferFact.SETCURRENTKEY(Status,"Id Legal Entity","Cons. Source Code","Consolidation Register");
                                  PreBufferFact.SETFILTER("Id Legal Entity", Company."Legal Entity Id");
                                  PreBufferFact.SETFILTER("Id External System", ConsolSource."External System");
                                  PreBufferFact.SETFILTER("Consolidation Register", '%1', Rec."No.");
                                  PreBufferFact.SETFILTER(Status, '%1', PreBufferFact.Status::"Processing Canceled");
                                  PAGE.RUNMODAL(0, PreBufferFact);
                                END;
                              //NC MDF01 < RD
                            END;
                             }

    { 1101495046;4;Group  ;
                GroupType=Group;
                Layout=Rows }

    { 1101495044;5;Field  ;
                CaptionML=[ENU=" Number of Unposted Entries In General Journal";
                           RUS=Неучтенных строк в фин. журналах];
                SourceExpr=UnpostedJournalLinesReg;
                Enabled=UnpostedJLRegEnable;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              IF ConsolSourceF <> '' THEN BEGIN
                                IF ConsolSource."Import Format" = ConsolSource."Import Format"::OperationFromBuffer THEN BEGIN
                                  GenJournalBatch.RESET;
                                  GenJournalBatch.CHANGECOMPANY(COMPANYNAME);
                                  GenJournalBatch.SETFILTER("Qty. Entries",'<>%1',0);
                                  GenJournalBatch.SETFILTER("Account No. Filter",'<>%1','');
                                  ConsolSource.GET(ConsolSourceF);
                                  GenJournalBatch.SETFILTER("Consolidation Source Filter", ConsolSource.Code);
                                  GenJournalBatch.SETFILTER("Consolidation Register Filter",'%1', Rec."No.");
                                END;
                                IF GenJournalBatch.FINDFIRST THEN BEGIN
                                  // #TODO#
                                  {
                                  GeneralJournalBatchesSelect.SETTABLEVIEW(GenJournalBatch);
                                  GeneralJournalBatchesSelect.EDITABLE(FALSE);
                                  GeneralJournalBatchesSelect.RUN;
                                  }
                                END;
                              END;
                            END;
                             }

    { 1101495022;5;Field  ;
                CaptionML=[ENU=" Unposted Purchase Documents";
                           RUS=Неучтенных документов покупки];
                SourceExpr=UnpostedPurchaseDocsReg;
                Enabled=UnpostedPurchaseRegEnable;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              //NC MDF01 > RD
                              IF ConsolSourceF <> '' THEN BEGIN
                                ConsolSource.GET(ConsolSourceF);
                                IF ConsolSource."Import Format" = ConsolSource."Import Format"::OperationFromBuffer THEN BEGIN
                                  Company.GET(COMPANYNAME);
                                  PurchaseHeader.RESET;
                                  PurchaseHeader.SETFILTER("Export Cons. Source Code",ConsolSource.Code);
                                  PurchaseHeader.SETFILTER("Export Register No.",'%1', Rec."No.");
                                  PAGE.RUNMODAL(0,PurchaseHeader);
                                END;
                              END;
                              //NC MDF01 < RD
                            END;
                             }

    { 1101495023;5;Field  ;
                CaptionML=[ENU=Unposted Sales Documents;
                           RUS=Неучтенных документов продажи];
                SourceExpr=UnpostedSalesDocsReg;
                Enabled=UnpostedSalesRegEnable;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              //NC MDF01 > RD
                              IF ConsolSourceF <> '' THEN BEGIN
                                ConsolSource.GET(ConsolSourceF);
                                IF ConsolSource."Import Format" = ConsolSource."Import Format"::OperationFromBuffer THEN BEGIN
                                  Company.GET(COMPANYNAME);
                                  SalesHeader.RESET;
                                  SalesHeader.SETFILTER("Export Cons. Source Code",ConsolSource.Code);
                                  SalesHeader.SETFILTER("Export Register No.",'%1', Rec."No.");
                                  PAGE.RUNMODAL(0,SalesHeader);
                                END;
                              END;
                              //NC MDF01 < RD
                            END;
                             }

  }
  CODE
  {
    VAR
      CompanyFilter@1101495040 : Text[60];
      xCompanyFilter@1101495039 : Text[60];
      ConsolSourceF@1101495038 : Code[20];
      ConsolidationSource@1101495037 : Record 50001;
      NeedConsolidateEntry@1101495036 : Boolean;
      NewEntries@1101495033 : Integer;
      ImportFormat@1101495032 : ' ,Импорт данных из файла,Загрузка данных из Буфера,Загрузка из фирмы Navision,Загрузка Операций из Буфера,Загрузка Операций из Внеш. Системы';
      GenJnlLinePost@1101495031 : Record 81;
      ConsSetup@1101495030 : Record 50000;
      ConsolSource@1101495029 : Record 50001;
      EliminationType@1101495028 : ' ,Subsidiary,InterCompany,Both';
      PostRes@1101495027 : Integer;
      ConsolidationSetup@1101495025 : Record 50000;
      FileTable@1101495024 : Record 2000000022;
      ConsRegisterRec@1101495023 : Record 50005;
      GenJnlLine@1101495022 : Record 81;
      ConsSource2@1101495021 : Record 50001;
      ConsReport@1101495020 : Report 50019;
      Consolidation@1101495019 : Codeunit 50027;
      CountUnprocessed@1101495018 : Integer;
      CountNew@1101495017 : Integer;
      CountPostponed@1101495016 : Integer;
      Company@1101495015 : Record 2000000006;
      PreBufferFact@1101495014 : Record 50081;
      BufferFact@1101495013 : Record 50082;
      NewFacts@1101495012 : Integer;
      ModifiedFacts@1101495011 : Integer;
      DeletedFacts@1101495010 : Integer;
      FactsWithErrors@1101495009 : Integer;
      UnpostedJournalLines@1101495008 : Integer;
      GenJournalBatch@1101495007 : Record 232;
      UnpostedSalesDocs@1101495006 : Integer;
      UnpostedPurchaseDocs@1101495005 : Integer;
      PurchaseHeader@1101495004 : Record 38;
      SalesHeader@1101495003 : Record 36;
      UnpostedSalesDocsReg@1101495002 : Integer;
      UnpostedPurchaseDocsReg@1101495001 : Integer;
      UnpostedJournalLinesReg@1101495000 : Integer;
      Text00001@1101495049 : TextConst 'ENU=Company Filter can not be empty;RUS=Компания Фильтр не может быть пустым';
      Text00002@1101495048 : TextConst 'ENU=Batch %1 has not new data (for consolidation register: %2);RUS=В разделе %1 нет новых данных (по регистру консолидации: %2)';
      Text00003@1101495047 : TextConst 'ENU=Batches have not new data  (for consolidation register: %1);RUS=Ни в одном из разделов нет новых данных (по регистру консолидации: %1)';
      Text00004@1101495046 : TextConst 'ENU=All Batch Lines were succsefully posted.;RUS=Строки во всех разделах успешно учтены.';
      Text00005@1101495045 : TextConst 'ENU=Do You want to post All Batch Lines?;RUS=Вы уверены, что хотите учесть строки во всех разделах?';
      Text00006@1101495044 : TextConst 'ENU=Source Consolidation %1 should run in Company %2;RUS=Консолидацию по источнику %1 необходимо запускать в фирме %2.';
      Text00007@1101495043 : TextConst 'ENU=Data Loading should run in Company %1;RUS=Импорт данных по компании необходимо запускать в фирме %1.';
      Text00008@1101495042 : TextConst 'ENU=Do You want to import data for Company?;RUS=Вы действительно хотите запустить импорт данных по компании?';
      Text00009@1101495041 : TextConst 'ENU=Post General Journal Lines?;RUS=Учесть строки финасового журнала?';
      Text00010@1101495035 : TextConst 'ENU=Post Purchase Documents?;RUS=Учесть все документы покупки?';
      Text00011@1101495034 : TextConst 'ENU=Post Sales Documents?;RUS=Учесть все документы продажи?';
      Text00012@1101495026 : TextConst 'RUS=Нечего учитывать';
      EmpryString@1101495050 : TextConst 'RUS="                                                                                                                                                                                                                     "';
      NewFactsEnable@1101495051 : Boolean INDATASET;
      FactsWithErrorsEnable@1101495052 : Boolean INDATASET;
      UnpostedJLRegEnable@1101495053 : Boolean INDATASET;
      UnpostedPurchaseRegEnable@1101495054 : Boolean INDATASET;
      UnpostedSalesRegEnable@1101495055 : Boolean INDATASET;
      ttt1@1101495056 : TextConst 'RUS=Компания Фильтр';
      ttt2@1101495057 : TextConst 'RUS=Источник Консолидации Фильтр';
      ttt3@1101495058 : TextConst 'RUS=Формат Импорта';

    PROCEDURE "NC PIF001 > DP"@1000000000();
    BEGIN
    END;

    PROCEDURE SetInitialFilters@1101495020();
    BEGIN
      //NC PIF001 > DP
      CompanyFilter := COMPANYNAME;
      xCompanyFilter := COMPANYNAME;
      ConsolidationSource.RESET;
      //ConsolidationSource.SETRANGE("Receive Company",COMPANYNAME);
      IF ConsolidationSource.COUNT  = 1 THEN BEGIN
        ConsolidationSource.FIND('-');
        ConsolSourceF := ConsolidationSource.Code;
      END ELSE
        ConsolSourceF := '';
      //NC PIF001 < DP
    END;

    PROCEDURE SetRegisterFilters@1101495000();
    BEGIN
      //NC PIF001 > DP
      RESET;
      CHANGECOMPANY(CompanyFilter);
      FILTERGROUP(2);
      SETRANGE("Cons. Source Code",ConsolSourceF);
      FILTERGROUP(0);
      //SETRANGE("User ID",USERID);
      //NC PIF001 < DP
    END;

    PROCEDURE CheckBuffNewEntry@1000000017(ConsCode@1000000001 : Code[20]) NewEntry : Boolean;
    VAR
      ConsBuffer@1000000000 : Record 50008;
      ConsSource1@1000000002 : Record 50001;
    BEGIN
      //NC PIF001 > DP
      {Возвращает TRUE, если в буферной таблице по источнику есть новые операции}
      NewEntry := FALSE;
      IF ConsCode <> '' THEN BEGIN
        ConsSource1.GET(ConsCode);
        IF ConsSource1."Import Format" = ConsSource1."Import Format"::FromBuffer THEN BEGIN
          ConsBuffer.SETRANGE("Cons. Source Code");
          //ConsBuffer.SETRANGE("Export Consolidation Register",0);
          ConsBuffer.SETRANGE("Consolidation Register",0);
          IF ConsBuffer.FIND('-') THEN
            NewEntry := TRUE;
        END;
      END;
      //NC PIF001 < DP
    END;

    PROCEDURE CheckEntryNewEntry@1000000004(ConsCode@1000000001 : Code[20];VAR NewEntries1@1000000003 : Integer) NewEntry : Boolean;
    VAR
      SourceEntry@1000000000 : Record 17;
      ConsSource1@1000000002 : Record 50001;
      CurrCompany@1210000 : Record 2000000006;
    BEGIN
      //NC PIF001 > DP
      NewEntry := FALSE;
      NewEntries1 := 0;
      IF ConsCode <> '' THEN BEGIN
        ConsSource1.GET(ConsCode);
        IF ConsSource1."Import Format" = ConsSource1."Import Format"::FromNavision THEN BEGIN
          SourceEntry.CHANGECOMPANY(ConsSource1."Company Name");
          CurrCompany.GET(COMPANYNAME);
          //NC PIF001 > DP Не включая ОС операции
          //NC PIF001 > DP только в фирмах с валютой USD
          //IF CurrCompany.Type IN [CurrCompany.Type::"2",CurrCompany.Type::"3"]
          //IF CurrCompany."Posting Type" IN [CurrCompany."Posting Type"::IFRS,CurrCompany."Posting Type"::MIS]
          //THEN BEGIN
          //  SourceEntry.SETCURRENTKEY("FA Operation");
          //NC PIF001 < DP только в фирмах с валютой USD
          //SourceEntry.SETRANGE("FA Operation",FALSE);
          //NC PIF001 > DP только в фирмах с валютой USD
          //END;
          //NC PIF001 < DP только в фирмах с валютой USD
          //NC PIF001 < DP
          IF SourceEntry.FINDLAST THEN
            IF SourceEntry."Entry No." > ConsSource1."Last G/L Entry No." THEN BEGIN
              NewEntry := TRUE;
              SourceEntry.SETFILTER("Entry No.", '>%1',ConsSource1."Last G/L Entry No.");
              NewEntries := SourceEntry.COUNT;
            END;
        END;
      END;
      //NC PIF001 < DP
    END;

    PROCEDURE CalcAllFields@1000000002();
    BEGIN
      //NC PIF001 > DP
      CALCFIELDS("New Entry in Buffer");
      CALCFIELDS("Count Unloaded Entry In Buffer");
      //NC NOS-26 > SPA
      {
      CALCFIELDS("Unloaded Entries From Date");
      CALCFIELDS("Unloaded Entries To Date");
      }
      //NC NOS-26 < SPA
      CALCFIELDS("Entry in Buffer");
      CALCFIELDS("Count Entry in Buffer");

      CALCFIELDS("Count Entry");
      //CALCFIELDS("Count Elimination");
      CALCFIELDS("Count  Reposted");
      CALCFIELDS("Count Removed");
      //NC PIF001 > DP
      CALCFIELDS("Count Exception");
      CALCFIELDS("Count Closed Period");

      CALCFIELDS("Count Balance Entry");
      CALCFIELDS("Count Balance Reposted");
      CALCFIELDS("Count Balance Removed");
      CALCFIELDS("Count Balance Exception");
      CALCFIELDS("Count Balance Closed Period");
      //NC PIF001 < DP

      CALCFIELDS("Post Count Entry");
      //CALCFIELDS("Post Count Elimination");
      CALCFIELDS("Post Count  Reposted");
      CALCFIELDS("Post Count Removed");

      CALCFIELDS("Count Load Entry in Buffer");
      CALCFIELDS("Count New Entry in Buffer");
      CALCFIELDS("Count Change Entry in Buffer");
      CALCFIELDS("Count Rem Entry in Buffer");
      CALCFIELDS("Count Error Entry in PreBuffer");

      //NC MTD06 > AIG
      CALCFIELDS("Count Offset Entry");
      CALCFIELDS("Count Speshial Entry");
      CALCFIELDS("Count Balance Offset Entry");
      CALCFIELDS("Count Balance Speshial Entry");
      CALCFIELDS("Post Count Offset Entry");
      CALCFIELDS("Post Count Speshial Entry");
      //NC MTD06 < AIG

      IF ConsolSource.GET(ConsolSourceF) THEN;
      "Need Jnl Elimination" := CheckJnlElimNeed(ConsolSource."Gen. Journal Batch");
      "Need Entry Elimination" := CheckEntryElimNeed(ConsolSource."Gen. Journal Batch");
      //NC PIF001 < DP
    END;

    PROCEDURE UpdateFigures@1000000003();
    VAR
      ComsolSource1@1000000000 : Record 50001;
      EntryDataBuffer@1000000002 : Record 50082;
      EntryDataPreBuffer@1000000001 : Record 50081;
      GenJournalLine@1000000003 : Record 81;
    BEGIN
      //NC MDF01 > RD
      CountUnprocessed := 0;
      CountPostponed := 0;
      CountNew := 0;
      UnpostedJournalLines := 0;
      UnpostedSalesDocs := 0;
      UnpostedPurchaseDocs :=0;
      //NC MDF01 < RD
      //NC PIF001 > DP
      NeedConsolidateEntry := CheckEntryNewEntry(ConsolSourceF,NewEntries);
      IF ConsolSource.GET(ConsolSourceF) THEN;
      //"Need Jnl Elimination" := CheckJnlElimNeed(ConsolSource."Gen. Journal Batch");
      //"Need Entry Elimination" := CheckEntryElimNeed(ConsolSource."Gen. Journal Batch");
      //CheckElimType;
      ImportFormat := ImportFormat::" ";
      IF ConsolSourceF <> '' THEN BEGIN
        ComsolSource1.GET(ConsolSourceF);
        IF ComsolSource1."Import Format" = ComsolSource1."Import Format"::FromExtSystem THEN
          ImportFormat := ImportFormat::"Импорт данных из файла";
        IF ComsolSource1."Import Format" = ComsolSource1."Import Format"::FromBuffer THEN
          ImportFormat := ImportFormat::"Загрузка данных из Буфера";
      //NC MDF01 > RD
        IF ComsolSource1."Import Format" = ComsolSource1."Import Format"::OperationFromBuffer THEN BEGIN
          ImportFormat := ImportFormat::"Загрузка Операций из Буфера";
          GenJournalLine.RESET;
          GenJournalLine.SETRANGE(GenJournalLine."Export Cons. Source Code", ComsolSource1.Code);
          UnpostedJournalLines := GenJournalLine.COUNT;
          EntryDataBuffer.SETCURRENTKEY("Export Cons. Source Code","Export Consolidation Register");
          EntryDataBuffer.SETFILTER(EntryDataBuffer."Export Cons. Source Code",'%1',ComsolSource1.Code);
          EntryDataBuffer.SETFILTER(EntryDataBuffer."Export Consolidation Register",'0');
          CountUnprocessed := EntryDataBuffer.COUNT;
          EntryDataBuffer.SETFILTER(EntryDataBuffer."Error in Import",'1');
          CountPostponed := EntryDataBuffer.COUNT;
          EntryDataBuffer.SETFILTER(EntryDataBuffer."Error in Import",'0');
          CountNew := EntryDataBuffer.COUNT;
          PurchaseHeader.RESET;
          PurchaseHeader.SETFILTER("Export Cons. Source Code",ComsolSource1.Code);
          UnpostedPurchaseDocs := PurchaseHeader.COUNT;
          SalesHeader.RESET;
          SalesHeader.SETFILTER("Export Cons. Source Code",ComsolSource1.Code);
          UnpostedSalesDocs := SalesHeader.COUNT;
        END;

        IF ComsolSource1."Import Format" = ComsolSource1."Import Format"::OperationFromExtSystem THEN BEGIN
          ImportFormat := ImportFormat::"Загрузка Операций из Внеш. Системы";
          GenJournalLine.RESET;
          GenJournalLine.SETRANGE(GenJournalLine."Export Cons. Source Code", ComsolSource1."Export Cons. Source");
          UnpostedJournalLines := GenJournalLine.COUNT;
          EntryDataPreBuffer.SETCURRENTKEY(Status,"Id External System","Id Legal Entity");
          Company.GET(COMPANYNAME);
          EntryDataPreBuffer.SETFILTER("Id Legal Entity", '%1',Company."Legal Entity Id");
          EntryDataPreBuffer.SETFILTER("Id External System", '%1', ComsolSource1."External System");
          EntryDataPreBuffer.SETFILTER(Status,'%1|%2', EntryDataPreBuffer.Status::New, EntryDataPreBuffer.Status::"Processing Canceled")
      ;
          CountUnprocessed := EntryDataPreBuffer.COUNT;
          EntryDataPreBuffer.SETFILTER(Status,'%1', EntryDataPreBuffer.Status::New);
          CountNew := EntryDataPreBuffer.COUNT;
          EntryDataPreBuffer.SETFILTER(Status,'%1', EntryDataPreBuffer.Status::"Processing Canceled");
          CountPostponed := EntryDataPreBuffer.COUNT;
          PurchaseHeader.RESET;
          PurchaseHeader.SETFILTER("Export Cons. Source Code",ConsolSource."Export Cons. Source");
          UnpostedPurchaseDocs := PurchaseHeader.COUNT;
          SalesHeader.RESET;
          SalesHeader.SETFILTER("Export Cons. Source Code",ConsolSource."Export Cons. Source");
          UnpostedSalesDocs := SalesHeader.COUNT;
         END;
      //NC MDF01 < RD
        IF ComsolSource1."Import Format" = ComsolSource1."Import Format"::FromNavision THEN BEGIN
          ImportFormat := ImportFormat::"Загрузка из фирмы Navision";
          //CurrForm."Count Exception".VISIBLE(TRUE);
        END;
      END;// ELSE
        //CurrForm."Count Exception".VISIBLE(FALSE);
      //NC PIF001 < DP
    END;

    PROCEDURE PostJnl@1000000072(PostBatch@1000000000 : Code[10]);
    BEGIN
      //NC PIF001 > DP
      ConsSetup.GET;
      GenJnlLinePost.RESET;
      GenJnlLinePost.SETRANGE("Journal Template Name", ConsSetup."Gen. Jnl. Template");
      GenJnlLinePost.SETRANGE("Journal Batch Name", PostBatch);
      GenJnlLinePost.SETRANGE("Export Register No.", "No.");
      IF GenJnlLinePost.FIND('-') THEN BEGIN
        CODEUNIT.RUN(CODEUNIT::"Gen. Jnl.-Post",GenJnlLinePost);
      END ELSE
        MESSAGE(Text00002,PostBatch,"No.");
      //NC PIF001 < DP
    END;

    PROCEDURE BatchPostJnl@1000000010(PostBatch@1000000000 : Code[10]);
    BEGIN
    END;

    PROCEDURE CheckElimType@1000000022();
    VAR
      ConsSetup1@1000000000 : Record 50000;
    BEGIN
      //NC PIF001 > DP
      EliminationType := EliminationType::" ";
      ConsSetup1.CHANGECOMPANY(CompanyFilter);
      ConsSetup1.GET;
      IF ConsSetup1."Eliminate Intercompany Oper" AND ConsSetup1."Eliminate Subsidiary Oper" THEN
        EliminationType := EliminationType::Both;
      IF ConsSetup1."Eliminate Subsidiary Oper" THEN
        EliminationType := EliminationType::Subsidiary;
      IF ConsSetup1."Eliminate Intercompany Oper" THEN
        EliminationType := EliminationType::InterCompany;
      //NC PIF001 < DP
    END;

    PROCEDURE CheckJnlElimNeed@1000000005(PostBatch@1000000001 : Code[10]) Need1 : Boolean;
    VAR
      GenJnlLine@1000000000 : Record 81;
    BEGIN
    END;

    PROCEDURE CheckEntryElimNeed@1000000052(PostBatch@1000000001 : Code[10]) Need1 : Boolean;
    VAR
      GLEntry@1000000000 : Record 17;
    BEGIN
    END;

    PROCEDURE PostJnl1@1000000006(PostBatch@1000000000 : Code[10]) res : Integer;
    VAR
      GenJnlPost@1000000002 : Codeunit 231;
    BEGIN
      //NC PIF001 > DP
      ConsSetup.GET;
      GenJnlLinePost.RESET;
      GenJnlLinePost.SETRANGE("Journal Template Name", ConsSetup."Gen. Jnl. Template");
      GenJnlLinePost.SETRANGE("Journal Batch Name", PostBatch);
      GenJnlLinePost.SETRANGE("Export Register No.", "No.");
      IF GenJnlLinePost.FIND('-') THEN BEGIN
        GenJnlPost.SetNoMessage(TRUE);
        GenJnlPost.RUN(GenJnlLinePost);
        res := 1;
      END ELSE
        res := 0;
      //NC PIF001 < DP
    END;

    PROCEDURE BatchPostJnl1@1000000007();
    BEGIN
    END;

    PROCEDURE "NC PIF001 < DP"@1000000001();
    BEGIN
    END;

    BEGIN
    {
      NC PIF001 AK Создана форма Диспетчера Консолидации
      NC PIF001.01 Закомментирован код для функции импорта
      NC MP 28.02.07 Новые поля на закладке "Конс. из Буфера"
      NC MP 28.02.07 Новое поле Count Exception, изменена ф-ция UpdateFigures()
      NC PIF001 MP Изменения в функции вызова задания по очистке буфера
      NC PIF001 MP Изменения в функции вызова консолидации
      NC MDM03 PCH Добавлен вызов консолидации через механизм интеграции
      NC MTD06 AIG Добавлена статистика по Offset счетам
      NC MDF01 Создана форма Диспетчера Загрузки Фактов Операций
      -------------------------
      NC NOS-26 SPA Миграция на NAV2017
    }
    END.
  }
}

