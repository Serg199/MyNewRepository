OBJECT Page 26578 Copy Requisites Groups
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Copy Requisites Groups;
               RUS=Копировать группы показателей];
    SaveValues=Yes;
    SourceTable=Table26557;
    SourceTableView=SORTING(Report Code,Sequence No.);
    PageType=Worksheet;
    OnOpenPage=BEGIN
                 FilterSections;
               END;

    OnQueryClosePage=BEGIN
                       IF CloseAction = ACTION::LookupOK THEN
                         LookupOKOnPush;
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1210010 ;1   ;Action    ;
                      CaptionML=[ENU=Requisites;
                                 RUS=Показатели];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 26558;
                      RunPageLink=Report Code=FIELD(Report Code),
                                  Requisites Group Name=FIELD(Name);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=EntriesList;
                      PromotedCategory=Process }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1210008;1;Field     ;
                CaptionML=[ENU=Copy from Report Code;
                           RUS=Копировать из отчета - код];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=StatutoryReportCode;
                TableRelation="Statutory Report";
                OnValidate=BEGIN
                             StatutoryReportCodeOnAfterVali;
                           END;

                OnLookup=BEGIN
                           IF StatutoryReportCode <> '' THEN
                             StatutoryReport.GET(StatutoryReportCode);

                           IF PAGE.RUNMODAL(0,StatutoryReport) = ACTION::LookupOK THEN BEGIN
                             StatutoryReportCode := StatutoryReport.Code;
                             FilterSections;
                             CurrPage.UPDATE(FALSE);
                           END;
                         END;
                          }

    { 1210000;1;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 1210001;2;Field     ;
                ToolTipML=[ENU=Specifies the name associated with the statutory report requisites group.;
                           RUS=Определяет имя, связанное с группой показателей регламентного отчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Name }

    { 1210003;2;Field     ;
                ToolTipML=[ENU=Specifies the description of the statutory report requisites group.;
                           RUS=Определяет описание группы показателей регламентного отчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description }

  }
  CODE
  {
    VAR
      StatutoryReport@1210002 : Record 26550;
      TempStatReportRequisitesGroup@1210001 : TEMPORARY Record 26557;
      StatutoryReportCode@1210000 : Code[20];

    PROCEDURE FilterSections@1210002();
    BEGIN
      SETRANGE("Report Code",StatutoryReportCode);
    END;

    PROCEDURE GetSectionBuffer@1210001(VAR StatReportRequisitesGroupBuffe@1210000 : Record 26557);
    BEGIN
      IF TempStatReportRequisitesGroup.FINDSET THEN
        REPEAT
          StatReportRequisitesGroupBuffe := TempStatReportRequisitesGroup;
          StatReportRequisitesGroupBuffe.INSERT;
        UNTIL TempStatReportRequisitesGroup.NEXT = 0;
    END;

    LOCAL PROCEDURE StatutoryReportCodeOnAfterVali@19072459();
    BEGIN
      FilterSections;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE LookupOKOnPush@19031339();
    VAR
      StatReportRequisitesGroup@1210000 : Record 26557;
    BEGIN
      CurrPage.SETSELECTIONFILTER(StatReportRequisitesGroup);
      IF StatReportRequisitesGroup.FINDSET THEN
        REPEAT
          TempStatReportRequisitesGroup := StatReportRequisitesGroup;
          TempStatReportRequisitesGroup.INSERT;
        UNTIL StatReportRequisitesGroup.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

