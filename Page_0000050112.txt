OBJECT Page 50112 Import BIK_
{
  OBJECT-PROPERTIES
  {
    Date=28.07.17;
    Time=12:37:44;
    Modified=Yes;
    Version List=NOS-26;
  }
  PROPERTIES
  {
    CaptionML=RUS=Импорт Справочника БИК;
    PageType=StandardDialog;
    OnOpenPage=BEGIN
                 g_BICName := 'bnkseek.dbf';
               END;

    OnQueryClosePage=BEGIN
                       CLEARLASTERROR;
                       IF NOT ImportBIC THEN
                         MESSAGE(GETLASTERRORTEXT);
                       EXIT(TRUE);
                     END;

  }
  CONTROLS
  {
    { 1101495002;0;Container;
                ContainerType=ContentArea }

    { 1101495001;1;Group  ;
                CaptionML=[ENU=General;
                           RUS=Общее] }

    { 1101495000;2;Field  ;
                Name=g_txtPathToFolder;
                AssistEdit=Yes;
                CaptionML=RUS=Путь к Справочнику БИК;
                SourceExpr=g_txtPathToFolder;
                OnAssistEdit=BEGIN
                               FileMgt.SelectFolderDialog(WindowTitleTxt,g_txtPathToFolder);
                             END;
                              }

  }
  CODE
  {
    VAR
      FileMgt@1101495007 : Codeunit 419;
      g_txtPathToFolder@1101495006 : Text[250];
      i@1101495002 : Integer;
      g_recBIC@1101495001 : Record 12409;
      g_BICName@1101495000 : Text[250];
      Text000@1101495014 : TextConst 'RUS=*.dbf';
      Text002@1101495013 : TextConst 'RUS=Импорт Справочника БИК #1###########################################';
      Text009@1101495012 : TextConst 'RUS=Соединение с %1';
      Text010@1101495011 : TextConst 'RUS=Импорт данных из %1';
      Text011@1101495010 : TextConst 'RUS=В указанном каталоге отсутсвует файл %1';
      Dos@1101495009 : TextConst 'RUS=└р┴с┬т├у─ф┼хи╕╞ц╟ч╚ш╔щ╩ъ╦ы╠ь═э╬ю╧я╨Ё╤ё╥Є╙є╘Ї╩ъ╓Ў╫ў╪°┘∙█√▄№┌·╒ї▌¤▐■▀ ';
      Win_@1101495008 : TextConst 'RUS=АаБбВвГгДдЕеЁёЖжЗзИиЙйКкЛлМмНнОоПпРрСсТтУуФфКкЦцЧчШшЩщЫыЬьЪъХхЭэЮюЯя';
      SQLMgt@1101495003 : Codeunit 50024;
      WindowTitleTxt@1101495004 : TextConst 'ENU=Select file;RUS=Выберите директорию';

    [TryFunction]
    PROCEDURE ImportBIC@1470005();
    VAR
      l_txt@1000000000 : Text[250];
      l_codeBIC@1000000001 : Code[9];
      SqlConnection@1101495000 : DotNet "'System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Data.Odbc.OdbcConnection" RUNONCLIENT;
      SqlCommand@1101495001 : DotNet "'System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Data.Odbc.OdbcCommand" RUNONCLIENT;
      SqlReader@1101495002 : DotNet "'System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Data.Odbc.OdbcDataReader" RUNONCLIENT;
      FieldValueTxt@1101495003 : Text;
    BEGIN
      IF NOT FileMgt.ClientFileExists(g_txtPathToFolder + '\' + g_BICName) THEN
        ERROR(Text011,g_BICName);

      GetConnection(g_txtPathToFolder,SqlConnection);
      SqlCommand := SqlCommand.OdbcCommand;
      SqlCommand.Connection(SqlConnection);
      SqlCommand.CommandText('select * from '+g_BICName);
      SqlReader := SqlCommand.ExecuteReader;
      IF NOT ISNULL(SqlReader) THEN
        IF SqlReader.HasRows THEN
          WHILE SqlReader.Read DO BEGIN
            l_codeBIC := FORMAT(SqlReader.Item('NEWNUM'));

            IF NOT g_recBIC.GET(l_codeBIC) THEN BEGIN
              g_recBIC.INIT;

              // БИК
              g_recBIC.BIC := l_codeBIC;

              // Кор. Счет
              FieldValueTxt := FORMAT(SqlReader.Item('KSNP'));
              IF (FieldValueTxt <> '') AND
                 (UPPERCASE(FieldValueTxt) <> 'NULL')
              THEN
                g_recBIC."Corr. Account No." := FieldValueTxt;

              // Краткое наименование
              FieldValueTxt := FORMAT(SqlReader.Item('NAMEN'));
              IF (FieldValueTxt <> '') AND
                 (UPPERCASE(FieldValueTxt) <> 'NULL')
              THEN
                g_recBIC."Short Name" := FieldValueTxt;

              // Полное наименование
              FieldValueTxt := FORMAT(SqlReader.Item('NAMEP'));
              IF (FieldValueTxt <> '') AND
                 (UPPERCASE(FieldValueTxt) <> 'NULL')
              THEN
                g_recBIC."Full Name" := FieldValueTxt;

              // Регион
              FieldValueTxt := FORMAT(SqlReader.Item('RGN'));
              IF (FieldValueTxt <> '') AND
                 (UPPERCASE(FieldValueTxt) <> 'NULL')
              THEN
                g_recBIC."Region Code" := FieldValueTxt;

              // Почтовый Индекс
              FieldValueTxt := FORMAT(SqlReader.Item('IND'));
              IF (FieldValueTxt <> '') AND
                 (UPPERCASE(FieldValueTxt) <> 'NULL')
              THEN
                g_recBIC."Post Code" := FieldValueTxt;

              // Тип населенного пункта
              FieldValueTxt := FORMAT(SqlReader.Item('TNP'));
              IF (FieldValueTxt <> '') AND
                 (UPPERCASE(FieldValueTxt) <> 'NULL')
              THEN
                EVALUATE(g_recBIC."Area Type",FieldValueTxt);

              // Наименование населенного пункта
              FieldValueTxt := FORMAT(SqlReader.Item('NNP'));
              IF (FieldValueTxt <> '') AND
                 (UPPERCASE(FieldValueTxt) <> 'NULL')
              THEN
                g_recBIC."Area Name" := FieldValueTxt;

              // Адрес Банка
              FieldValueTxt := FORMAT(SqlReader.Item('ADR'));
              IF (FieldValueTxt <> '') AND
                 (UPPERCASE(FieldValueTxt) <> 'NULL')
              THEN
                g_recBIC.Address := FieldValueTxt;

              // Телефон Банка
              FieldValueTxt := FORMAT(SqlReader.Item('TELEF'));
              IF (FieldValueTxt <> '') AND
                 (UPPERCASE(FieldValueTxt) <> 'NULL')
              THEN
                g_recBIC.Telephone := FieldValueTxt;

              FieldValueTxt := FORMAT(SqlReader.Item('OKPO'));
              IF (FieldValueTxt <> '') AND
                 (UPPERCASE(FieldValueTxt) <> 'NULL')
              THEN
                g_recBIC.OKPO := FieldValueTxt;

              // БИК РКЦ
              FieldValueTxt := FORMAT(SqlReader.Item('RKC'));
              IF (FieldValueTxt <> '') AND
                 (UPPERCASE(FieldValueTxt) <> 'NULL')
              THEN
                g_recBIC.RKC := FieldValueTxt;

              // Дата последней модификации
              FieldValueTxt := FORMAT(SqlReader.Item('DT_IZM'));
              IF (FieldValueTxt <> '') AND
                 (UPPERCASE(FieldValueTxt) <> 'NULL')
              THEN
                EVALUATE(g_recBIC."Last Modify Date",FieldValueTxt); // Дата изменения

              g_recBIC.INSERT;
            END;
          END;
      CLEAR(SqlCommand);
      SqlReader.Close;
      SqlConnection.Close;

      MESSAGE('Импорт завершен.');
    END;

    PROCEDURE GetConnection@1470008(Path@1470000 : Text[250];VAR SqlConnection@1101495000 : DotNet "'System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Data.Odbc.OdbcConnection" RUNONCLIENT);
    VAR
      l_txtConnStr@1470002 : Text[1024];
    BEGIN
      CLEAR(SqlConnection);
      l_txtConnStr := 'Provider=Microsoft.Jet.OLEDB.4.0;Data Source='+Path+';Extended Properties=DBASE IV;'; //'Dsn=DBF';
      SqlConnection := SqlConnection.OdbcConnection(l_txtConnStr);
      SqlConnection.Open;
      //SQLMgt.OpenSqlConnection(l_txtConnStr,SqlConnection);
    END;

    BEGIN
    {
      NCS-1767
      -----
      NC NOS-26 SP Миграция на NAV2017
    }
    END.
  }
}

