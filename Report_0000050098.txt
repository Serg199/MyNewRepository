OBJECT Report 50098 GL Entry With Dim To Excel
{
  OBJECT-PROPERTIES
  {
    Date=25.07.17;
    Time=14:20:18;
    Modified=Yes;
    Version List=NOS-26;
  }
  PROPERTIES
  {
    TransactionType=Browse;
    CaptionML=RUS=Фин. Книга С Измер-ями в Excel;
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   g_char1 := 10;
                   g_char2 := 13;
                   g_dateBegin := 0D;
                   g_dateEnd := TODAY;

                   g_recMovingDataSetup.GET;


                   {
                   g_recDimCode.RESET;
                   g_recDimCode.FILTERGROUP(250);
                   g_recDimCode.SETFILTER(g_recDimCode.Code,
                                'COSTCENTER|BOOK|ACCRUAL.TYPE|AC.COMP|REVAL.TYPE|COUNTERPARTY|COUNTERPARTY.REAL|DEAL|FIN.INSTR|IC|BANK.ACC'+
                                '|RECONC.TYPE|INC.TAX');
                   g_recDimCode.FILTERGROUP(0);
                   }
                 END;

    OnPreReport=BEGIN
                  IF NOT CONFIRM(STRSUBSTNO(g_Text004, g_dateBegin,g_dateEnd, g_codeAccountFilter)) THEN
                    CurrReport.QUIT;
                END;

  }
  DATASET
  {
    { 1101495000;;DataItem;                  ;
               DataItemTable=Table15;
               DataItemTableView=SORTING(No.);
               OnPreDataItem=BEGIN
                               //TDRANCS-2366>
                               g_txtAccountFilter := g_codeAccountFilter;
                               CurrReport.BREAK;
                               //TDRANCS-2366<

                               SETRANGE("Account Type", "Account Type"::Posting);
                               g_txtAccountFilter := '';

                               IF g_codeAccountFilter <> '' THEN
                                 SETFILTER("No.",g_codeAccountFilter)
                               ELSE
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  //TDRANCS-2366>
                                  CurrReport.BREAK;
                                  //TDRANCS-2366<

                                  IF g_codeAccountFilter <> '' THEN BEGIN
                                    IF g_txtAccountFilter = '' THEN
                                      g_txtAccountFilter := '''''' + "No." + ''''''
                                    ELSE
                                      g_txtAccountFilter += ',' + ''''''+ "No." +'''''';
                                  END;
                                END;
                                 }

    { 1101495001;;DataItem;DimValue1         ;
               DataItemTable=Table349;
               DataItemTableView=SORTING(Dimension Code,Code)
                                 ORDER(Ascending);
               OnPreDataItem=BEGIN
                               IF (g_codeDimCode1 <> '') AND (g_codeDimFilter1 <> '') THEN BEGIN
                                 SETRANGE("Dimension Code", g_codeDimCode1);
                                 SETFILTER(Code, g_codeDimFilter1);
                               END ELSE
                                 CurrReport.BREAK;

                               g_codeDimFilter1 := '';
                             END;

               OnAfterGetRecord=BEGIN
                                  IF g_codeDimFilter1 = '' THEN
                                    g_codeDimFilter1 := '''''' + DimValue1.Code + ''''''
                                  ELSE
                                    g_codeDimFilter1 := g_codeDimFilter1 +','+ '''''' + DimValue1.Code + '''''';

                                  //g_codeDimFilter1 := CONVERTSTR(g_codeDimFilter1, '#', '°');
                                END;
                                 }

    { 1101495002;;DataItem;DimValue2         ;
               DataItemTable=Table349;
               DataItemTableView=SORTING(Dimension Code,Code)
                                 ORDER(Ascending);
               OnPreDataItem=BEGIN
                               IF (g_codeDimCode2 <> '') AND (g_codeDimFilter2 <> '') THEN BEGIN
                                 DimValue2.SETRANGE("Dimension Code", g_codeDimCode2);
                                 DimValue2.SETFILTER(Code, g_codeDimFilter2);
                               END ELSE
                                 CurrReport.BREAK;

                               g_codeDimFilter2 := ''
                             END;

               OnAfterGetRecord=BEGIN
                                  IF g_codeDimFilter2 = '' THEN
                                    g_codeDimFilter2 := '''''' + DimValue2.Code + ''''''
                                  ELSE
                                    g_codeDimFilter2 := g_codeDimFilter2 +','+ '''''' + DimValue2.Code + '''''';

                                  //g_codeDimFilter2 := CONVERTSTR(g_codeDimFilter2, '#', '°');
                                END;
                                 }

    { 1101495003;;DataItem;DimValue3         ;
               DataItemTable=Table349;
               DataItemTableView=SORTING(Dimension Code,Code)
                                 ORDER(Ascending);
               OnPreDataItem=BEGIN
                               IF (g_codeDimCode3 <> '') AND (g_codeDimFilter3 <> '') THEN BEGIN
                                 DimValue3.SETRANGE("Dimension Code", g_codeDimCode3);
                                 DimValue3.SETFILTER(Code, g_codeDimFilter3);
                               END ELSE
                                 CurrReport.BREAK;

                               g_codeDimFilter3 :='';
                             END;

               OnAfterGetRecord=BEGIN
                                  IF g_codeDimFilter3 = '' THEN
                                    g_codeDimFilter3 := '''''' + DimValue3.Code + ''''''
                                  ELSE
                                    g_codeDimFilter3 := g_codeDimFilter3 +','+ '''''' + DimValue3.Code + '''''';

                                  //g_codeDimFilter3 := CONVERTSTR(g_codeDimFilter3, '#', '°');
                                END;
                                 }

    { 1101495004;0;DataItem;                 ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               //NC NCS-1226 > DP
                               // IF NOT CREATE(XlApp,TRUE) THEN
                               //  ERROR('Excel не установлен.');
                               // g_delimeter := FORMAT(XlApp.International(5));
                               //NC NOS-26 > SPA
                               CultureInfo := CultureInfo.CultureInfo('en-US');
                               Thread.CurrentThread.CurrentCulture(CultureInfo);
                               //NC NOS-26 < SPA
                               xlApp := xlApp.ApplicationClass;
                               IF ISNULL(xlApp) THEN
                                 ERROR('Excel не установлен.');
                               g_delimeter := FORMAT(xlApp.International(5));
                               //NC NCS-1226 < DP

                               g_txtCompanyName := COMPANYNAME;
                               IF g_dateBegin = 0D THEN
                                 g_dateBegin := 01011900D;
                               IF g_dateEnd = 0D THEN
                                 g_dateEnd := TODAY;

                               g_dlgWindow.OPEN(g_Text001 + ' ' + '#1##########' +
                                          '\'+  g_Text002 + '                     ' + '#2##########');

                               g_recDataMovSetup.GET;

                               //g_ConnectionString := g_cuAdoFunc.ConnectByWindowAutentification(g_recDataMovSetup."Windows Autentification");
                               //g_cuAdoFunc.AdoOpen(g_AdoConnection,g_ConnectionString);
                               g_cuAdoFunc.OpenSqlConnection('', g_AdoConnection);

                               //NC NCS-1226 > DP
                               IF g_boolWOReval THEN
                                 g_boolWOReval2 :=1
                               ELSE
                                 g_boolWOReval2 :=0;
                               //NC NCS-1226 < DP

                               IF g_optMode = g_optMode::Period THEN
                               {
                                 g_Script := STRSUBSTNO('Exec TD_GLWithDim ''%1'',''%2'',''%3'',''%4'',''%5'',''%6'',''%7'',''%8'',''%9'',''%10''',
                                                                  g_txtCompanyName,
                                                                  FORMAT(g_dateBegin,0,9),
                                                                  FORMAT(g_dateEnd,0,9),
                                                                  g_txtAccountFilter,
                                                                  g_codeDimCode1,
                                                                  g_codeDimFilter1,
                                                                  g_codeDimCode2,
                                                                  g_codeDimFilter2,
                                                                  g_codeDimCode3,
                                                                  g_codeDimFilter3)
                               }
                                 g_Script := 'Exec TD_GLWithDim '''+
                                                                  g_txtCompanyName +''','''+
                                                                  FORMAT(g_dateBegin,0,9) +''','''+
                                                                  FORMAT(g_dateEnd,0,9) +''','''+
                                                                  g_txtAccountFilter +''','''+
                                                                  g_codeDimCode1 +''','''+
                                                                  g_codeDimFilter1 +''','''+
                                                                  g_codeDimCode2 +''','''+
                                                                  g_codeDimFilter2 +''','''+
                                                                  g_codeDimCode3 +''','''+

                                                                  //NC NCS-1226 > DP
                                                                  {
                                                                  g_codeDimFilter3 +''' '
                                                                  }
                                                                  g_codeDimFilter3 +''',' +
                                                                  FORMAT(g_boolWOReval2)
                                                                  //NC NCS-1226 < DP
                                                                  //TDRANCS-2244>
                                                                  + ',' +
                                                                  FORMAT(g_boolOCYnot0,0,2)
                                                                  + ',' +
                                                                  FORMAT(g_boolWithoutQty,0,2)
                                                                  //TDRANCS-2244<
                                                                  //TDRANCS-2271>
                                                                  + ',' +
                                                                  FORMAT(g_boolWOLocAcc,0,2)
                                                                  //TDRANCS-2271<

                               ELSE
                               {
                                 g_Script := STRSUBSTNO('Exec TD_GLWithGroupByDim ''%1'',''%2'',''%3'',''%4'',''%5'',''%6''',
                                                                  g_txtCompanyName,
                                                                  FORMAT(g_dateEnd,0,9),
                                                                  g_txtAccountFilter,
                                                                  g_codeDimCode1,
                                                                  g_codeDimCode2,
                                                                  g_codeDimCode3);
                               }
                                 g_Script := 'Exec TD_GLWithGroupByDim '''+
                                                                  g_txtCompanyName +''','''+
                                                                  FORMAT(g_dateEnd,0,9) +''','''+
                                                                  g_txtAccountFilter +''','''+
                                                                  g_codeDimCode1 +''','''+
                                                                  g_codeDimCode2 +''','''+

                                                                  //NC NCS-1226 > DP
                                                                  {
                                                                  g_codeDimCode3 +''' ';
                                                                  }
                                                                  //ncs-2231>
                                                                  g_codeDimCode3  +''','''+
                                                                  g_codeDimFilter1 +''','''+
                                                                  g_codeDimFilter2 +''','''+
                                                                  g_codeDimFilter3  +''',' +
                                                                  //ncs-2231<
                                                                  FORMAT(g_boolWOReval2)
                                                                  //NC NCS-1226 < DP
                                                                  //ncs-2246>
                                                                  + ',' +
                                                                  FORMAT(g_boolBU,0,2)
                                                                  //ncs-2246<
                                                                  //TDRANCS-2244>
                                                                  + ',' +
                                                                  FORMAT(g_boolOCYnot0,0,2)
                                                                  + ',' +
                                                                  FORMAT(g_boolWithoutQty,0,2)
                                                                  //TDRANCS-2244<
                                                                  //TDRANCS-2271>
                                                                  + ',' +
                                                                  FORMAT(g_boolWOLocAcc,0,2);
                                                                  //TDRANCS-2271<


                               //CREATE(g_RecSet);
                               //NC NOS-26 > SPA
                               sqlCommand := sqlCommand.SqlCommand(g_Script, g_AdoConnection);
                               sqlCommand.CommandTimeout(0); //Timeout set to indefinitely
                               g_RecSet := sqlCommand.ExecuteReader;
                               //NC NOS-26 < SPA

                               //g_AdoConnection.CommandTimeout(0); //Timeout set to indefinitely
                               //ERROR(g_Script);
                               //g_RecSet := g_AdoConnection.Execute(g_Script);

                               // NC NOS-26 SPA : System.Data.SqlClient.SqlReader не выводит кол-во строк в датасете!
                               //   Подсчет строк будет происходить непосредственно по мере извлечения данных
                               //g_intCntTotal := g_RecSet.RecordCount();

                               //IF g_intCntTotal > 1000000 THEN
                               //  ERROR(g_Text005);

                               g_dlgWindow.UPDATE(2,g_intCntTotal);

                               //g_txtFileName :=  ENVIRON('TEMP') + '\GL_' + COPYSTR(FORMAT(CREATEGUID), 2, 8) + '.csv';
                               g_txtFileName := FileMgt.ServerTempFileName('.csv');

                               g_FileGLEntry.CREATE(g_txtFileName);
                               g_FileGLEntry.CREATEOUTSTREAM(g_streamGL);
                               g_FileGLEntry.TEXTMODE(TRUE);

                               // NCS-1142 > g_txtGLEntry := fn_DOStoWIN('Фин. Счет Фильтр:');
                               g_txtGLEntry := fn_DOStoWIN(g_Lable001);   //<NCS-1142
                               g_streamGL.WRITETEXT(g_txtGLEntry);
                               g_streamGL.WRITETEXT();
                               g_txtGLEntry := g_codeAccountFilter;
                               g_streamGL.WRITETEXT(g_txtGLEntry);
                               g_streamGL.WRITETEXT();

                               //g_txtGLEntry := fn_DOStoWIN('Измерение 1 Фильтр:');
                               g_txtGLEntry := fn_DOStoWIN(g_Lable002);
                               g_streamGL.WRITETEXT(g_txtGLEntry);
                               g_streamGL.WRITETEXT();
                               g_txtGLEntry := g_codeDimCode1 + ' : ' + CONVERTSTR(g_codeDimFilter1, '°', '#');
                               g_streamGL.WRITETEXT(g_txtGLEntry);
                               g_streamGL.WRITETEXT();

                               //g_txtGLEntry := fn_DOStoWIN('Измерение 2 Фильтр:');
                               g_txtGLEntry := fn_DOStoWIN(g_Lable003);
                               g_streamGL.WRITETEXT(g_txtGLEntry);
                               g_streamGL.WRITETEXT();
                               g_txtGLEntry := g_codeDimCode2 + ' : ' + CONVERTSTR(g_codeDimFilter2, '°', '#');
                               g_streamGL.WRITETEXT(g_txtGLEntry);
                               g_streamGL.WRITETEXT();

                               //g_txtGLEntry := fn_DOStoWIN('Измерение 3 Фильтр:');
                               g_txtGLEntry := fn_DOStoWIN(g_Lable004);
                               g_streamGL.WRITETEXT(g_txtGLEntry);
                               g_streamGL.WRITETEXT();
                               g_txtGLEntry := g_codeDimCode3 + ' : ' + CONVERTSTR(g_codeDimFilter3, '°', '#');
                               g_streamGL.WRITETEXT(g_txtGLEntry);
                               g_streamGL.WRITETEXT();

                               //g_txtGLEntry := fn_DOStoWIN('Дата Начала:');
                               g_txtGLEntry := fn_DOStoWIN(g_Lable005);
                               g_streamGL.WRITETEXT(g_txtGLEntry);
                               g_streamGL.WRITETEXT();

                               g_txtGLEntry := FORMAT(g_dateBegin);
                               g_streamGL.WRITETEXT(g_txtGLEntry);
                               g_streamGL.WRITETEXT();

                               //g_txtGLEntry := fn_DOStoWIN('Дата Окончания:');
                               g_txtGLEntry := fn_DOStoWIN(g_Lable006);
                               g_streamGL.WRITETEXT(g_txtGLEntry);
                               g_streamGL.WRITETEXT();

                               g_txtGLEntry := FORMAT(g_dateEnd);
                               g_streamGL.WRITETEXT(g_txtGLEntry);
                               g_streamGL.WRITETEXT();

                               //NCS-2246>
                               g_txtGLEntry := fn_DOStoWIN(g_Lable007);
                               g_txtGLEntry += g_delimeter;
                               g_txtGLEntry += FORMAT(g_boolBU,0,9);
                               g_streamGL.WRITETEXT(g_txtGLEntry);
                               g_streamGL.WRITETEXT();

                               //NCS-2246<
                               //NCS-2244>
                               g_txtGLEntry := fn_DOStoWIN(g_Lable008);
                               g_txtGLEntry += g_delimeter;
                               g_txtGLEntry += FORMAT(g_boolWithoutQty,0,9);
                               g_streamGL.WRITETEXT(g_txtGLEntry);
                               g_streamGL.WRITETEXT();

                               g_txtGLEntry := fn_DOStoWIN(g_Lable009);
                               g_txtGLEntry += g_delimeter;
                               g_txtGLEntry += FORMAT(g_boolOCYnot0,0,9);
                               g_streamGL.WRITETEXT(g_txtGLEntry);
                               g_streamGL.WRITETEXT();

                               //NCS-2244<

                               //NCS-2271>
                               g_txtGLEntry := fn_DOStoWIN(g_Lable010);
                               g_txtGLEntry += g_delimeter;
                               g_txtGLEntry += FORMAT(g_boolWOLocAcc,0,9);
                               g_streamGL.WRITETEXT(g_txtGLEntry);
                               g_streamGL.WRITETEXT();

                               //NCS-2271<
                             END;

               OnAfterGetRecord=VAR
                                  I@1101495000 : Integer;
                                BEGIN
                                  //IF g_intCntTotal > 0 THEN BEGIN
                                  IF g_RecSet.HasRows THEN BEGIN
                                    //g_RecSet.MoveFirst;
                                    //g_RecSetFields := g_RecSet.Fields;

                                    g_txtGLEntry := '';
                                    //FOR i:= 0 TO g_RecSetFields.Count-1 DO BEGIN
                                    FOR I := 0 TO g_RecSet.FieldCount - 1 DO BEGIN
                                      //g_RecSetField := g_RecSetFields.Item(i);
                                      g_txtGLEntry := g_txtGLEntry +
                                        //FORMAT(g_RecSetField.Name) +
                                        g_RecSet.GetName(I) +
                                        g_delimeter;
                                    END;
                                    g_txtGLEntry := fn_DOStoWIN(g_txtGLEntry);
                                    g_streamGL.WRITETEXT(g_txtGLEntry);
                                    g_streamGL.WRITETEXT();

                                    //WHILE (NOT g_RecSet.EOF) AND (g_intCnt <= 1000000) DO BEGIN
                                    WHILE g_RecSet.Read AND (g_intCnt <= 1000000) DO BEGIN
                                      IF (g_intCnt MOD 100) = 0 THEN
                                        g_dlgWindow.UPDATE(1, g_intCnt);

                                      g_txtGLEntry := '';
                                      //FOR i:= 0 TO g_RecSetFields.Count-1 DO BEGIN
                                      FOR I := 0 TO g_RecSet.FieldCount - 1 DO BEGIN
                                        //g_RecSetField := g_RecSetFields.Item(i);
                                        //TDRANCS-2274>
                                        IF  (  (FORMAT(g_RecSet.GetName(I)) = 'COUNTERPARTY')
                                            OR (FORMAT(g_RecSet.GetName(I)) = 'COUNTERPARTY.REAL')
                                            OR (FORMAT(g_RecSet.GetName(I)) = 'DEAL')
                                            OR (FORMAT(g_RecSet.GetName(I)) = 'BANK.ACC')
                                            OR (FORMAT(g_RecSet.GetName(I)) = 'LocalGLAccNo')
                                            OR (FORMAT(g_RecSet.GetName(I)) = 'OriginalGLAccNo')
                                            )
                                            AND (DELCHR(FORMAT(g_RecSet.Item(I)),'=',FORMAT(g_char2)) <> '')
                                        THEN
                                          g_txtGLEntry2 := '="'  + DELCHR(FORMAT(g_RecSet.Item(I)),'=',FORMAT(g_char2)) + '"'
                                        ELSE
                                          g_txtGLEntry2 := DELCHR(FORMAT(g_RecSet.Item(I)),'=',FORMAT(g_char2));
                                        //TDRANCS-2274<
                                        g_txtGLEntry2 := DELCHR(g_txtGLEntry2,'=',FORMAT(g_char1));
                                        g_txtGLEntry2 := DELCHR(g_txtGLEntry2,'=',';');
                                        //TDRANCS-2274>
                                        IF  NOT ((  (FORMAT(g_RecSet.GetName(I)) = 'COUNTERPARTY')
                                            OR (FORMAT(g_RecSet.GetName(I)) = 'COUNTERPARTY.REAL')
                                            OR (FORMAT(g_RecSet.GetName(I)) = 'DEAL')
                                            OR (FORMAT(g_RecSet.GetName(I)) = 'BANK.ACC')
                                            OR (FORMAT(g_RecSet.GetName(I)) = 'LocalGLAccNo')
                                            OR (FORMAT(g_RecSet.GetName(I)) = 'OriginalGLAccNo')
                                            )
                                            AND (DELCHR(FORMAT(g_RecSet.Item(I)),'=',FORMAT(g_char2)) <> ''))
                                        THEN
                                          g_txtGLEntry2 := DELCHR(g_txtGLEntry2,'=','"');
                                        //TDRANCS-2274<
                                        g_txtGLEntry := g_txtGLEntry + g_txtGLEntry2 + g_delimeter;
                                      END;

                                      g_txtGLEntry := fn_DOStoWIN(g_txtGLEntry);
                                      g_streamGL.WRITETEXT(g_txtGLEntry);
                                      g_streamGL.WRITETEXT();
                                      g_intCnt += 1;
                                    END;
                                  END;
                                  g_AdoConnection.Close;

                                  CLEAR(g_RecSet);
                                  CLEAR(g_AdoConnection);
                                  //CLEAR(g_RecSetFields);
                                  //CLEAR(g_RecSetField);
                                END;

               OnPostDataItem=VAR
                                ClientFileName@1101495000 : Text;
                              BEGIN
                                g_FileGLEntry.CLOSE;

                                //NC NCS-1226 > DP
                                {
                                IF NOT CREATE(XlApp,TRUE) THEN
                                  ERROR('Excel ia onoaiiaeai.');
                                }
                                //NC NCS-1226 < DP
                                {
                                XlApp.Workbooks.OpenText(g_txtFileName);

                                XlWrkBk := XlApp.ActiveWorkbook;
                                XlWrkSht := XlWrkBk.ActiveSheet;

                                //NCS-2244,2246,2271>
                                XlWrkSht.Range('17:17').WrapText := TRUE;
                                XlWrkSht.Range('17:17').Font.Bold := TRUE;
                                XlWrkSht.Range('17:17').EntireColumn.AutoFit;
                                //NCS-2244,2246,2271<

                                XlApp.Visible(TRUE);
                                XlApp.UserControl(TRUE);

                                CLEAR(XlApp);

                                //HYPERLINK(g_txtFileName);
                                }

                                //NC NOS-26 > SPA
                                ClientFileName := FileMgt.DownloadTempFile(g_txtFileName);
                                ClientFileName := FileMgt.MoveAndRenameClientFile(ClientFileName,'Book1.csv',FORMAT(CREATEGUID));
                                xlApp.Workbooks.OpenText(ClientFileName, TypeMissing.GetMissingValue, TypeMissing.GetMissingValue, TypeMissing.GetMissingValue,
                                  TypeMissing.GetMissingValue, TypeMissing.GetMissingValue, TypeMissing.GetMissingValue, TypeMissing.GetMissingValue,
                                  TypeMissing.GetMissingValue, TypeMissing.GetMissingValue, TypeMissing.GetMissingValue, TypeMissing.GetMissingValue,
                                  TypeMissing.GetMissingValue, TypeMissing.GetMissingValue, TypeMissing.GetMissingValue, TypeMissing.GetMissingValue,
                                  TypeMissing.GetMissingValue, TypeMissing.GetMissingValue);

                                xlWrkBook := xlApp.ActiveWorkbook;
                                xlWrkSht := xlWrkBook.ActiveSheet;

                                xlWrkSht.Range('A17','ZZ17').WrapText(TRUE);
                                xlWrkSht.Range('A17','ZZ17').Font.Bold(TRUE);
                                xlWrkSht.Range('A17','ZZ17').EntireColumn.AutoFit;

                                xlApp.Visible := TRUE;
                                xlApp.UserControl := TRUE;
                                CLEAR(xlApp);
                                //NC NOS-26 < SPA

                                CLEARALL;
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   BUEditable := FALSE;
                   //ncs-2244>
                   g_boolOCYnot0 := FALSE;
                   g_boolWithoutQty := FALSE;
                   //ncs-2244<

                   BoolCheck[1] := TRUE;
                   BoolCheck[2] := FALSE;
                   BDEditable := TRUE;
                   g_optMode := g_optMode::Period;
                   AFEditable := FALSE;
                   OCYEditable := TRUE;
                 END;

    }
    CONTROLS
    {
      { 1101495000;;Container;
                  ContainerType=ContentArea }

      { 1101495001;1;Group  ;
                  CaptionML=[ENU=Mode;
                             RUS=Режим];
                  GroupType=Group }

      { 1101495002;2;Field  ;
                  CaptionML=[ENU=For Period;
                             RUS=За Период];
                  SourceExpr=BoolCheck[1];
                  OnValidate=BEGIN
                               BUEditable := FALSE;
                               BoolCheck[2] := FALSE;
                               BDEditable := TRUE;
                               g_optMode := g_optMode::Period;
                               RequestOptionsPage.UPDATE;
                             END;
                              }

      { 1101495003;2;Field  ;
                  CaptionML=[ENU=At Date With Grouping;
                             RUS=На Дату С Группировкой];
                  SourceExpr=BoolCheck[2];
                  OnValidate=BEGIN
                               BUEditable := TRUE;
                               BoolCheck[1] := FALSE;
                               g_optMode := g_optMode::Date;
                               BDEditable := FALSE;

                               g_dateBegin := 0D;
                               g_codeDimFilter1 := '';
                               g_codeDimFilter2 := '';
                               g_codeDimFilter3 := '';

                               RequestOptionsPage.UPDATE;
                             END;
                              }

      { 1101495019;1;Group  ;
                  CaptionML=[ENU=Run's options;
                             RUS=Параметры запуска];
                  GroupType=Group }

      { 1101495004;2;Field  ;
                  CaptionML=[ENU=From Date;
                             RUS=Дата Начала];
                  SourceExpr=g_dateBegin;
                  Editable=BDEditable }

      { 1101495005;2;Field  ;
                  CaptionML=[ENU=To Date;
                             RUS=Дата Окончания];
                  SourceExpr=g_dateEnd }

      { 1101495006;2;Field  ;
                  CaptionML=[ENU=G/L Mode;
                             RUS=Тип Проверки];
                  OptionCaptionML=RUS=Account Filter,FI Trade Debts,Derivative Trade Debts,REPO Debts,Postion Accounts,Derivatives;
                  SourceExpr=g_optionMode;
                  OnValidate=BEGIN
                               AFEditable := FALSE;
                               CASE g_optionMode OF
                                 g_optionMode::"Account Filter":
                                   BEGIN
                                     g_codeAccountFilter := '';
                                     AFEditable := TRUE;
                                   END;
                                 g_optionMode::"FI Trade Debts":
                                   g_codeAccountFilter := g_AccFilterFIDebt;
                                 g_optionMode::"Derivative Trade Debts":
                                   g_codeAccountFilter := g_AccFilterDerivDebt;
                                 g_optionMode::"REPO Debts":
                                   g_codeAccountFilter := g_AccFilterRepoDebt;
                                 g_optionMode::"Postion Accounts":
                                   g_codeAccountFilter := g_AccFilterPos;
                                 g_optionMode::Derivatives:
                                   g_codeAccountFilter := g_AccFilterDer;
                               END;
                             END;
                              }

      { 1101495007;2;Field  ;
                  CaptionML=[ENU=G/L Account Filter;
                             RUS=Фин. Счет Фильтр];
                  SourceExpr=g_codeAccountFilter;
                  Editable=AFEditable;
                  OnLookup=VAR
                             l_recGLAccount@1101495000 : Record 15;
                           BEGIN
                             IF AFEditable THEN BEGIN
                               RequestOptionsPage.SAVERECORD;
                               IF PAGE.RUNMODAL(PAGE::"G/L Account List",l_recGLAccount) = ACTION::LookupOK THEN
                                 IF g_codeAccountFilter <> '' THEN BEGIN
                                   IF (l_recGLAccount."Account Type"= l_recGLAccount."Account Type"::Total)
                                      AND (l_recGLAccount.Totaling <> '') THEN
                                      g_codeAccountFilter := g_codeAccountFilter +'|'+ l_recGLAccount.Totaling
                                    ELSE
                                      g_codeAccountFilter := g_codeAccountFilter +'|'+ l_recGLAccount."No.";
                                 END
                                 ELSE BEGIN
                                   IF (l_recGLAccount."Account Type"= l_recGLAccount."Account Type"::Total)
                                      AND (l_recGLAccount.Totaling <> '') THEN
                                     g_codeAccountFilter := l_recGLAccount.Totaling
                                   ELSE
                                     g_codeAccountFilter := l_recGLAccount."No.";
                                 END;
                             END;
                           END;
                            }

      { 1101495008;2;Field  ;
                  CaptionML=[ENU=Dimension 1 Code;
                             RUS=Измерение 1 Код];
                  SourceExpr=g_codeDimCode1;
                  OnLookup=BEGIN
                             RequestOptionsPage.SAVERECORD;

                             IF PAGE.RUNMODAL(0,g_recDimCode) = ACTION::LookupOK THEN
                               g_codeDimCode1 := g_recDimCode.Code;
                           END;
                            }

      { 1101495009;2;Field  ;
                  CaptionML=[ENU=Dimension 1 Filter;
                             RUS=Измерение 1 Фильтр];
                  SourceExpr=g_codeDimFilter1;
                  OnLookup=BEGIN
                             RequestOptionsPage.SAVERECORD;

                             IF g_codeDimCode1 <> '' THEN BEGIN
                               g_recDimValue.FILTERGROUP(250);
                               g_recDimValue.SETRANGE("Dimension Code", g_codeDimCode1);
                               g_recDimValue.FILTERGROUP(0);
                               IF PAGE.RUNMODAL(0,g_recDimValue) = ACTION::LookupOK THEN BEGIN
                                 IF g_codeDimFilter1 <> '' THEN
                                   g_codeDimFilter1 := g_codeDimFilter1 +'|'+ FORMAT(g_recDimValue.Code,0)
                                 ELSE
                                   g_codeDimFilter1 := FORMAT(g_recDimValue.Code,0)
                               END;
                             END;
                           END;
                            }

      { 1101495010;2;Field  ;
                  CaptionML=[ENU=Dimension 2 Code;
                             RUS=Измерение 2 Код];
                  SourceExpr=g_codeDimCode2;
                  OnLookup=BEGIN
                             RequestOptionsPage.SAVERECORD;

                             IF PAGE.RUNMODAL(0,g_recDimCode) = ACTION::LookupOK THEN
                               g_codeDimCode2 := g_recDimCode.Code;
                           END;
                            }

      { 1101495011;2;Field  ;
                  CaptionML=[ENU=Dimension 2 Filter;
                             RUS=Измерение 2 Фильтр];
                  SourceExpr=g_codeDimFilter2;
                  OnLookup=BEGIN
                             RequestOptionsPage.SAVERECORD;

                             IF g_codeDimCode2 <> '' THEN BEGIN
                               g_recDimValue.FILTERGROUP(250);
                               g_recDimValue.SETRANGE("Dimension Code", g_codeDimCode2);
                               g_recDimValue.FILTERGROUP(0);
                               IF PAGE.RUNMODAL(0,g_recDimValue) = ACTION::LookupOK THEN BEGIN
                                 IF g_codeDimFilter2 <> '' THEN
                                   g_codeDimFilter2 := g_codeDimFilter2 +'|'+ g_recDimValue.Code
                                 ELSE
                                   g_codeDimFilter2 := g_recDimValue.Code
                               END;
                             END;
                           END;
                            }

      { 1101495012;2;Field  ;
                  CaptionML=[ENU=Dimension 3 Code;
                             RUS=Измерение 3 Код];
                  SourceExpr=g_codeDimCode3;
                  OnLookup=BEGIN
                             RequestOptionsPage.SAVERECORD;

                             IF PAGE.RUNMODAL(0,g_recDimCode) = ACTION::LookupOK THEN
                               g_codeDimCode3 := g_recDimCode.Code;
                           END;
                            }

      { 1101495013;2;Field  ;
                  CaptionML=[ENU=Dimension 3 Filter;
                             RUS=Измерение 3 Фильтр];
                  SourceExpr=g_codeDimFilter3;
                  OnLookup=BEGIN
                             RequestOptionsPage.SAVERECORD;

                             IF g_codeDimCode3 <> '' THEN BEGIN
                               g_recDimValue.FILTERGROUP(250);
                               g_recDimValue.SETRANGE("Dimension Code", g_codeDimCode3);
                               g_recDimValue.FILTERGROUP(0);
                               IF PAGE.RUNMODAL(0,g_recDimValue) = ACTION::LookupOK THEN BEGIN
                                 IF g_codeDimFilter3 <> '' THEN
                                   g_codeDimFilter3 := g_codeDimFilter3 +'|'+ g_recDimValue.Code
                                 ELSE
                                   g_codeDimFilter3 := g_recDimValue.Code
                               END;
                             END;
                           END;
                            }

      { 1101495014;2;Field  ;
                  CaptionML=[ENU=Exclude Revaluation;
                             RUS=Исключать Переоценку];
                  SourceExpr=g_boolWOReval;
                  OnValidate=BEGIN
                               //ncs-2244>
                               IF g_boolWOReval THEN BEGIN
                                 OCYEditable := FALSE;
                                 g_boolOCYnot0 := FALSE;
                               END ELSE BEGIN
                                 OCYEditable := TRUE;
                               END;
                               RequestOptionsPage.UPDATE;
                               //ncs-2244<
                             END;
                              }

      { 1101495015;2;Field  ;
                  CaptionML=[ENU=Group by BU;
                             RUS=Группировать по Филиалу];
                  SourceExpr=g_boolBU;
                  Editable=BUEditable }

      { 1101495016;2;Field  ;
                  CaptionML=[ENU=Without Quantity;
                             RUS=Без учета Кол-ва];
                  SourceExpr=g_boolWithoutQty;
                  OnValidate=BEGIN
                               //TDRANCS-2244>
                               IF g_boolOCYnot0 THEN
                                 g_boolWOReval := FALSE;
                               //TDRANCS-2244<
                             END;
                              }

      { 1101495017;2;Field  ;
                  CaptionML=[ENU=Only amount OCY not 0;
                             RUS=Только ненулевые суммы OCY];
                  ToolTipML=[ENU=Only OCY <> 0;
                             RUS=Выгрузка только OCY <> 0, ACY/LCY/QTY не проверяются];
                  SourceExpr=g_boolOCYnot0;
                  Editable=OCYEditable }

      { 1101495018;2;Field  ;
                  CaptionML=[ENU=Without Local Account;
                             RUS=Без учета локального счета];
                  SourceExpr=g_boolWOLocAcc }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      g_FileGLEntry@1101495043 : File;
      g_streamGL@1101495042 : OutStream;
      g_recMovingDataSetup@1101495041 : Record 50064;
      g_dlgWindow@1101495040 : Dialog;
      g_intCntTotal@1101495039 : Integer;
      g_intCnt@1101495038 : Integer;
      g_dateBegin@1101495037 : Date;
      g_dateEnd@1101495036 : Date;
      g_txtGLEntry@1101495035 : Text[1024];
      g_txtGLEntry2@1101495034 : Text[1024];
      g_txtFileName@1101495033 : Text[1024];
      g_txtCompanyName@1101495032 : Text[30];
      g_txtAccountFilter@1101495031 : Text[1024];
      g_codeAccountFilter@1101495030 : Code[250];
      g_char1@1101495029 : Char;
      g_char2@1101495028 : Char;
      g_boolCheck@1101495027 : Boolean;
      g_txtWhere@1101495026 : Text[1024];
      g_codeDimCode1@1101495025 : Code[20];
      g_codeDimFilter1@1101495024 : Code[150];
      g_codeDimCode2@1101495023 : Code[20];
      g_codeDimFilter2@1101495022 : Code[150];
      g_codeDimCode3@1101495021 : Code[20];
      g_codeDimFilter3@1101495020 : Code[150];
      g_recDimValue@1101495019 : Record 349;
      g_recDimCode@1101495018 : Record 348;
      g_AdoConnection@1101495017 : DotNet "'System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Data.SqlClient.SqlConnection";
      g_ConnectionString@1101495016 : Text[500];
      g_Script@1101495015 : Text[1024];
      g_recDataMovSetup@1101495014 : Record 50064;
      g_cuAdoFunc@1101495013 : Codeunit 50024;
      g_RecSet@1101495012 : DotNet "'System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Data.SqlClient.SqlDataReader";
      g_optionMode@1101495011 : 'Account Filter,FI Trade Debts,Derivative Trade Debts,REPO Debts,Postion Accounts,Derivatives';
      g_varValue@1101495008 : Variant;
      g_optMode@1101495007 : 'Period,Date';
      g_boolWOReval@1101495006 : Boolean;
      g_boolBU@1101495005 : Boolean;
      g_boolOCYnot0@1101495004 : Boolean;
      g_boolWithoutQty@1101495003 : Boolean;
      g_boolWOReval2@1101495002 : Integer;
      g_boolWOLocAcc@1101495001 : Boolean;
      g_delimeter@1101495000 : Text[30];
      g_Text001@1101495063 : TextConst 'ENU=Processed Entries:;RUS="Обработано Операций:  "';
      g_Text002@1101495062 : TextConst 'ENU=From;RUS=Из';
      g_Text003@1101495061 : TextConst 'ENU=There are too many G/L Accounts in the list. Please change G/L Account Filter.;RUS=Отобрано слишком много счетов. Измените значение в Фин. Счет Фильтр.';
      g_Text004@1101495060 : TextConst 'ENU=Export G/L Entries?\From Date: %1\To Date: %2\G/L Account Filter: %3;RUS=Выгрузить операции?\Дата Начала: %1\Дата Окончания: %2\Фин. Счет Фильтр: %3';
      g_Text005@1101495059 : TextConst 'ENU=There are more than 1000000 entris selected for export. Please correct filters.;RUS=Количество записей по заданным условиям больше 1000000. Измените условия отбора.';
      g_AccFilterFIDebt@1101495058 : TextConst 'RUS=10601000|20401000';
      g_AccFilterDerivDebt@1101495057 : TextConst 'RUS=10602000|20402000';
      g_AccFilterRepoDebt@1101495056 : TextConst 'RUS=105010*|105020*|203010*|203020*';
      g_AccFilterPos@1101495055 : TextConst 'RUS=103010*|104010*|1170*|201010*|2020*';
      g_AccFilterDer@1101495054 : TextConst 'RUS=103030*|201020*';
      g_Lable001@1101495053 : TextConst 'ENU=G/L Account Filter:;RUS=Фин. Счет Фильтр:';
      g_Lable002@1101495052 : TextConst 'ENU=Dimension 1 Filter:;RUS=Измерение 1 Фильтр:';
      g_Lable003@1101495051 : TextConst 'ENU=Dimension 2 Filter:;RUS=Измерение 2 Фильтр:';
      g_Lable004@1101495050 : TextConst 'ENU=Dimension 3 Filter:;RUS=Измерение 3 Фильтр:';
      g_Lable005@1101495049 : TextConst 'ENU=From Date:;RUS=Дата Начала:';
      g_Lable006@1101495048 : TextConst 'ENU=To Date:;RUS=Дата Окончания:';
      g_Lable007@1101495047 : TextConst 'ENU=Group by BU:;RUS="Группировать по филиалу: "';
      g_Lable008@1101495046 : TextConst 'ENU=Without Qty;RUS=Без учета Количества';
      g_Lable009@1101495045 : TextConst 'ENU=Only amount OCY not 0:;RUS=Только ненулевые суммы OCY:';
      g_Lable010@1101495044 : TextConst 'ENU=Without Local Account;RUS=Без учета локального счета:';
      sqlCommand@1101495010 : DotNet "'System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Data.SqlClient.SqlCommand";
      xlApp@1101495009 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.ApplicationClass" RUNONCLIENT;
      xlWrkBook@1101495066 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook" RUNONCLIENT;
      xlWrkSht@1101495069 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Worksheet" RUNONCLIENT;
      TypeMissing@1101495068 : DotNet "'Microsoft.Dynamics.Nav.Integration.Office, Version=10.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Integration.Helper" RUNONCLIENT;
      CultureInfo@1101495074 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Globalization.CultureInfo" RUNONCLIENT;
      Thread@1101495073 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Threading.Thread" RUNONCLIENT;
      FileMgt@1101495064 : Codeunit 419;
      BoolCheck@1101495065 : ARRAY [2] OF Boolean;
      BUEditable@1101495067 : Boolean INDATASET;
      BDEditable@1101495070 : Boolean INDATASET;
      AFEditable@1101495071 : Boolean INDATASET;
      OCYEditable@1101495072 : Boolean INDATASET;

    PROCEDURE fn_DOStoWIN@1000000021(p_txtStrDOS@1000000000 : Text[1024]) : Text[1024];
    VAR
      l_txtANSIstr@1000000001 : Text[100];
      l_txtASCIIstr@1000000002 : Text[100];
    BEGIN
      l_txtASCIIstr:=' АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№|';
      l_txtANSIstr:= ' └┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ N ';
      l_txtANSIstr[66]:=185;
      l_txtANSIstr[67]:=160;
      EXIT(CONVERTSTR(p_txtStrDOS, l_txtASCIIstr, l_txtANSIstr));
    END;

    EVENT xlApp@1101495009::AppEvents_Event_NewWorkbook@424(Wb@1101495000 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook");
    BEGIN
    END;

    EVENT xlApp@1101495009::SheetSelectionChange@425(Sh@1101495001 : Variant;Target@1101495000 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range");
    BEGIN
    END;

    EVENT xlApp@1101495009::SheetBeforeDoubleClick@426(Sh@1101495002 : Variant;Target@1101495001 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range";VAR Cancel@1101495000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1101495009::SheetBeforeRightClick@427(Sh@1101495002 : Variant;Target@1101495001 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range";VAR Cancel@1101495000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1101495009::SheetActivate@428(Sh@1101495000 : Variant);
    BEGIN
    END;

    EVENT xlApp@1101495009::SheetDeactivate@429(Sh@1101495000 : Variant);
    BEGIN
    END;

    EVENT xlApp@1101495009::SheetCalculate@430(Sh@1101495000 : Variant);
    BEGIN
    END;

    EVENT xlApp@1101495009::SheetChange@431(Sh@1101495001 : Variant;Target@1101495000 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range");
    BEGIN
    END;

    EVENT xlApp@1101495009::WorkbookOpen@432(Wb@1101495000 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook");
    BEGIN
    END;

    EVENT xlApp@1101495009::WorkbookActivate@433(Wb@1101495000 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook");
    BEGIN
    END;

    EVENT xlApp@1101495009::WorkbookDeactivate@434(Wb@1101495000 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook");
    BEGIN
    END;

    EVENT xlApp@1101495009::WorkbookBeforeClose@435(Wb@1101495001 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook";VAR Cancel@1101495000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1101495009::WorkbookBeforeSave@436(Wb@1101495002 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook";SaveAsUI@1101495001 : Boolean;VAR Cancel@1101495000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1101495009::WorkbookBeforePrint@437(Wb@1101495001 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook";VAR Cancel@1101495000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1101495009::WorkbookNewSheet@438(Wb@1101495001 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook";Sh@1101495000 : Variant);
    BEGIN
    END;

    EVENT xlApp@1101495009::WorkbookAddinInstall@439(Wb@1101495000 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook");
    BEGIN
    END;

    EVENT xlApp@1101495009::WorkbookAddinUninstall@440(Wb@1101495000 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook");
    BEGIN
    END;

    EVENT xlApp@1101495009::WindowResize@441(Wb@1101495001 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook";Wn@1101495000 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Window");
    BEGIN
    END;

    EVENT xlApp@1101495009::WindowActivate@442(Wb@1101495001 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook";Wn@1101495000 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Window");
    BEGIN
    END;

    EVENT xlApp@1101495009::WindowDeactivate@443(Wb@1101495001 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook";Wn@1101495000 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Window");
    BEGIN
    END;

    EVENT xlApp@1101495009::SheetFollowHyperlink@444(Sh@1101495001 : Variant;Target@1101495000 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Hyperlink");
    BEGIN
    END;

    EVENT xlApp@1101495009::SheetPivotTableUpdate@445(Sh@1101495001 : Variant;Target@1101495000 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.PivotTable");
    BEGIN
    END;

    EVENT xlApp@1101495009::WorkbookPivotTableCloseConnection@446(Wb@1101495001 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook";Target@1101495000 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.PivotTable");
    BEGIN
    END;

    EVENT xlApp@1101495009::WorkbookPivotTableOpenConnection@447(Wb@1101495001 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook";Target@1101495000 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.PivotTable");
    BEGIN
    END;

    EVENT xlApp@1101495009::WorkbookSync@448(Wb@1101495001 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook";SyncEventType@1101495000 : DotNet "'office, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Core.MsoSyncEventType");
    BEGIN
    END;

    EVENT xlApp@1101495009::WorkbookBeforeXmlImport@449(Wb@1101495004 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook";Map@1101495003 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.XmlMap";Url@1101495002 : Text;IsRefresh@1101495001 : Boolean;VAR Cancel@1101495000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1101495009::WorkbookAfterXmlImport@450(Wb@1101495003 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook";Map@1101495002 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.XmlMap";IsRefresh@1101495001 : Boolean;Result@1101495000 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.XlXmlImportResult");
    BEGIN
    END;

    EVENT xlApp@1101495009::WorkbookBeforeXmlExport@451(Wb@1101495003 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook";Map@1101495002 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.XmlMap";Url@1101495001 : Text;VAR Cancel@1101495000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1101495009::WorkbookAfterXmlExport@452(Wb@1101495003 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook";Map@1101495002 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.XmlMap";Url@1101495001 : Text;Result@1101495000 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.XlXmlExportResult");
    BEGIN
    END;

    EVENT xlApp@1101495009::WorkbookRowsetComplete@453(Wb@1101495003 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook";Description@1101495002 : Text;Sheet@1101495001 : Text;Success@1101495000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1101495009::AfterCalculate@454();
    BEGIN
    END;

    EVENT xlApp@1101495009::SheetPivotTableAfterValueChange@455(Sh@1101495002 : Variant;TargetPivotTable@1101495001 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.PivotTable";TargetRange@1101495000 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Range");
    BEGIN
    END;

    EVENT xlApp@1101495009::SheetPivotTableBeforeAllocateChanges@456(Sh@1101495004 : Variant;TargetPivotTable@1101495003 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.PivotTable";ValueChangeStart@1101495002 : Integer;ValueChangeEnd@1101495001 : Integer;VAR Cancel@1101495000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1101495009::SheetPivotTableBeforeCommitChanges@457(Sh@1101495004 : Variant;TargetPivotTable@1101495003 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.PivotTable";ValueChangeStart@1101495002 : Integer;ValueChangeEnd@1101495001 : Integer;VAR Cancel@1101495000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1101495009::SheetPivotTableBeforeDiscardChanges@458(Sh@1101495003 : Variant;TargetPivotTable@1101495002 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.PivotTable";ValueChangeStart@1101495001 : Integer;ValueChangeEnd@1101495000 : Integer);
    BEGIN
    END;

    EVENT xlApp@1101495009::ProtectedViewWindowOpen@459(Pvw@1101495000 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.ProtectedViewWindow");
    BEGIN
    END;

    EVENT xlApp@1101495009::ProtectedViewWindowBeforeEdit@460(Pvw@1101495001 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.ProtectedViewWindow";VAR Cancel@1101495000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1101495009::ProtectedViewWindowBeforeClose@461(Pvw@1101495002 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.ProtectedViewWindow";Reason@1101495001 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.XlProtectedViewCloseReason";VAR Cancel@1101495000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1101495009::ProtectedViewWindowResize@462(Pvw@1101495000 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.ProtectedViewWindow");
    BEGIN
    END;

    EVENT xlApp@1101495009::ProtectedViewWindowActivate@463(Pvw@1101495000 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.ProtectedViewWindow");
    BEGIN
    END;

    EVENT xlApp@1101495009::ProtectedViewWindowDeactivate@464(Pvw@1101495000 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.ProtectedViewWindow");
    BEGIN
    END;

    EVENT xlApp@1101495009::WorkbookAfterSave@465(Wb@1101495001 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook";Success@1101495000 : Boolean);
    BEGIN
    END;

    EVENT xlApp@1101495009::WorkbookNewChart@466(Wb@1101495001 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook";Ch@1101495000 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Chart");
    BEGIN
    END;

    EVENT xlApp@1101495009::SheetLensGalleryRenderComplete@467(Sh@1101495000 : Variant);
    BEGIN
    END;

    EVENT xlApp@1101495009::SheetTableUpdate@468(Sh@1101495001 : Variant;Target@1101495000 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.TableObject");
    BEGIN
    END;

    EVENT xlApp@1101495009::WorkbookModelChange@469(Wb@1101495001 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.Workbook";Changes@1101495000 : DotNet "'Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c'.Microsoft.Office.Interop.Excel.ModelChanges");
    BEGIN
    END;

    EVENT xlApp@1101495009::SheetBeforeDelete@470(Sh@1101495000 : Variant);
    BEGIN
    END;

    EVENT sqlCommand@1101495010::StatementCompleted@59(sender@1101495001 : Variant;e@1101495000 : DotNet "'System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Data.StatementCompletedEventArgs");
    BEGIN
    END;

    EVENT sqlCommand@1101495010::Disposed@60(sender@1101495001 : Variant;e@1101495000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.EventArgs");
    BEGIN
    END;

    BEGIN
    {
      TD BMN 05.12.2012 JIRA::NCS-668 "Отчет сгруппированная в разрезе обязательных аналитик фин. книга операций в Excel"
      TD GNE 31.07.2012 JIRA::NCS-1142 Translate Captions, Change Text to Text Constants in the function Integer - OnAfterGetRecord()
      NC NCS-1226 DP Excel output w/o revaluation
      TDRANCS-2231 Dim Filter for Group
      TDRANCS-2246 BU group
      TDRANCS-2244 OCY and Qty Filter
      TDRANCS-2271 Without Local Acc Modified Integer - OnPreDataItem()
      TDRANCS-2274 Modified Integer - OnAfterGetRecord()
      TDRANCS-2366 Modified G/L Account - OnAfterGetRecord()
      ---------------------------------------
      NC NOS-26 SPA Миграция на новую версию
    }
    END.
  }
  RDLDATA
  {
  }
}

