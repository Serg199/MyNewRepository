OBJECT Table 17361 Labor Contract Line
{
  OBJECT-PROPERTIES
  {
    Date=18.12.13;
    Time=12:00:00;
    Version List=NAVRU7.10;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               CheckContractStatus;

               IF ("Operation Type" = "Operation Type"::Transfer) AND ("Supplement No." = '') THEN
                 IF xRec."Supplement No." = '' THEN
                   "Supplement No." := '001'
                 ELSE
                   "Supplement No." := INCSTR(xRec."Supplement No.");

               VALIDATE("Operation Type");

               LaborContractLine.RESET;
               LaborContractLine.SETRANGE("Contract No.","Contract No.");
               IF LaborContractLine.ISEMPTY THEN
                 TESTFIELD("Operation Type","Operation Type"::Hire);
             END;

    OnDelete=BEGIN
               TESTFIELD(Status,Status::Open);
               CheckContractStatus;

               LaborContractTerms.RESET;
               LaborContractTerms.SETRANGE("Labor Contract No.","Contract No.");
               LaborContractTerms.SETRANGE("Operation Type","Operation Type");
               LaborContractTerms.SETRANGE("Supplement No.","Supplement No.");
               LaborContractTerms.DELETEALL;
             END;

    OnRename=BEGIN
               ERROR('');
             END;

    CaptionML=[ENU=Labor Contract Line;
               RUS=Строка трудового договора];
  }
  FIELDS
  {
    { 1   ;   ;Contract No.        ;Code20        ;TableRelation="Labor Contract";
                                                   CaptionML=[ENU=Contract No.;
                                                              RUS=Номер договора] }
    { 2   ;   ;Supplement No.      ;Code10        ;OnValidate=BEGIN
                                                                CheckContractStatus;
                                                                TESTFIELD(Status,Status::Open);
                                                                TESTFIELD("Operation Type","Operation Type"::Transfer);
                                                              END;

                                                   CaptionML=[ENU=Supplement No.;
                                                              RUS=Номер приложения] }
    { 3   ;   ;Operation Type      ;Option        ;OnValidate=BEGIN
                                                                CheckContractStatus;
                                                                TESTFIELD(Status,Status::Open);

                                                                GetContract;
                                                                LaborContract.TESTFIELD("Person No.");
                                                                "Person No." := LaborContract."Person No.";

                                                                CASE "Operation Type" OF
                                                                  "Operation Type"::Hire:
                                                                    BEGIN
                                                                      LaborContract.TESTFIELD("Starting Date");
                                                                      "Starting Date" := LaborContract."Starting Date";
                                                                      "Ending Date" := LaborContract."Ending Date";
                                                                    END;
                                                                  "Operation Type"::Dismissal:
                                                                    BEGIN
                                                                      LaborContract.TESTFIELD("Ending Date");
                                                                      "Starting Date" := LaborContract."Ending Date";
                                                                      "Ending Date" := LaborContract."Ending Date";
                                                                      Employee.GET(LaborContract."Employee No.");
                                                                      "Position No." := Employee."Position No.";
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Operation Type;
                                                              RUS=Тип операции];
                                                   OptionCaptionML=[ENU=Hire,Transfer,Combination,Dismissal;
                                                                    RUS=Найм,Перевод,Совмещение,Увольнение];
                                                   OptionString=Hire,Transfer,Combination,Dismissal }
    { 4   ;   ;Person No.          ;Code20        ;TableRelation=Person;
                                                   OnValidate=BEGIN
                                                                CheckContractStatus;
                                                                TESTFIELD(Status,Status::Open);
                                                              END;

                                                   CaptionML=[ENU=Person No.;
                                                              RUS=Код физ. лица] }
    { 5   ;   ;Description         ;Text250       ;OnValidate=BEGIN
                                                                CheckContractStatus;
                                                                TESTFIELD(Status,Status::Open);
                                                              END;

                                                   CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 6   ;   ;Order Date          ;Date          ;OnValidate=BEGIN
                                                                CheckContractStatus;
                                                                TESTFIELD(Status,Status::Open);
                                                              END;

                                                   CaptionML=[ENU=Order Date;
                                                              RUS=Дата приказа] }
    { 7   ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                CheckContractStatus;
                                                                TESTFIELD(Status,Status::Open);

                                                                GetContract;
                                                                IF "Operation Type" = "Operation Type"::Hire THEN BEGIN
                                                                  LaborContract.TESTFIELD("Starting Date");
                                                                  "Starting Date" := LaborContract."Starting Date";
                                                                END;
                                                                IF "Operation Type" = "Operation Type"::Dismissal THEN
                                                                  TESTFIELD("Starting Date",0D);

                                                                IF ("Starting Date" <> 0D) AND ("Starting Date" < LaborContract."Starting Date") THEN
                                                                  ERROR(Text14704,
                                                                    "Starting Date",
                                                                    LaborContract.FIELDCAPTION("Starting Date"),
                                                                    LaborContract.TABLECAPTION);
                                                              END;

                                                   CaptionML=[ENU=Starting Date;
                                                              RUS=Дата начала] }
    { 8   ;   ;Ending Date         ;Date          ;OnValidate=BEGIN
                                                                CheckContractStatus;
                                                                IF "Operation Type" <> "Operation Type"::Combination THEN
                                                                  TESTFIELD(Status,Status::Open);

                                                                GetContract;
                                                                IF "Operation Type" = "Operation Type"::Dismissal THEN BEGIN
                                                                  LaborContract.TESTFIELD("Ending Date");
                                                                  TESTFIELD("Ending Date",LaborContract."Ending Date");
                                                                END ELSE
                                                                  IF ("Ending Date" <> 0D) AND (LaborContract."Ending Date" <> 0D) AND
                                                                     ("Ending Date" > LaborContract."Ending Date")
                                                                  THEN
                                                                    ERROR(Text14705,
                                                                      "Ending Date",
                                                                      LaborContract.FIELDCAPTION("Ending Date"),
                                                                      LaborContract.TABLECAPTION);

                                                                ValidateFieldValue(CurrFieldNo);
                                                              END;

                                                   CaptionML=[ENU=Ending Date;
                                                              RUS=Дата окончания] }
    { 10  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              RUS=Статус];
                                                   OptionCaptionML=[ENU=Open,Approved;
                                                                    RUS=Открыто,Утверждено];
                                                   OptionString=Open,Approved;
                                                   Editable=No }
    { 11  ;   ;Position No.        ;Code20        ;TableRelation=Position;
                                                   OnValidate=BEGIN
                                                                CheckContractStatus;
                                                                TESTFIELD(Status,Status::Open);
                                                                IF "Position No." <> '' THEN BEGIN
                                                                  TESTFIELD("Starting Date");
                                                                  ValidateFieldValue(CurrFieldNo);

                                                                  Position.GET("Position No.");
                                                                  Position.TESTFIELD(Status,Position.Status::Approved);
                                                                  Position.TESTFIELD("Budgeted Position",FALSE);
                                                                  Position.TESTFIELD("Job Title Code");
                                                                  Position.TESTFIELD("Org. Unit Code");
                                                                  Position.TESTFIELD("Category Code");
                                                                  Position.TESTFIELD("Kind of Work");
                                                                  Position.TESTFIELD("Conditions of Work");
                                                                  Position.TESTFIELD("Calc Group Code");
                                                                  Position.TESTFIELD("Posting Group");
                                                                  Position.TESTFIELD(Rate);
                                                                  Position.CALCFIELDS("Filled Rate");

                                                                  GetContract;
                                                                  CASE LaborContract."Contract Type" OF
                                                                    LaborContract."Contract Type"::"Labor Contract":
                                                                      Position.TESTFIELD("Out-of-Staff",FALSE);
                                                                    LaborContract."Contract Type"::"Civil Contract":
                                                                      Position.TESTFIELD("Out-of-Staff",TRUE);
                                                                  END;

                                                                  IF (("Operation Type" = "Operation Type"::Hire) OR ("Operation Type" = "Operation Type"::Transfer)) AND
                                                                     ("Position Rate" = 0)
                                                                  THEN
                                                                    "Position Rate" := Position.Rate;

                                                                  IF "Position No." <> xRec."Position No." THEN BEGIN
                                                                    LaborContractTerms.RESET;
                                                                    LaborContractTerms.SETRANGE("Labor Contract No.","Contract No.");
                                                                    LaborContractTerms.SETRANGE("Operation Type","Operation Type");
                                                                    LaborContractTerms.SETRANGE("Supplement No.","Supplement No.");
                                                                    IF NOT LaborContractTerms.ISEMPTY THEN
                                                                      IF CONFIRM(Text14706,TRUE,LaborContractTerms.TABLECAPTION) THEN BEGIN
                                                                        LaborContractTerms.DELETEALL;
                                                                        CheckFillRate;
                                                                      END ELSE
                                                                        "Position No." := xRec."Position No."
                                                                    ELSE
                                                                      CheckFillRate;
                                                                  END;

                                                                  IF Position."Use Trial Period" THEN BEGIN
                                                                    Position.TESTFIELD("Trial Period Formula");
                                                                    "Trial Period Start Date" := "Starting Date";
                                                                    "Trial Period End Date" := CALCDATE(Position."Trial Period Formula","Starting Date");
                                                                    "Trial Period Description" := Position."Trial Period Description";
                                                                  END ELSE BEGIN
                                                                    "Trial Period Start Date" := 0D;
                                                                    "Trial Period End Date" := 0D;
                                                                    "Trial Period Description" := '';
                                                                  END;
                                                                END ELSE BEGIN
                                                                  "Position Rate" := 0;

                                                                  "Trial Period Start Date" := 0D;
                                                                  "Trial Period End Date" := 0D;
                                                                  "Trial Period Description" := '';

                                                                  LaborContractTerms.RESET;
                                                                  LaborContractTerms.SETRANGE("Labor Contract No.","Contract No.");
                                                                  LaborContractTerms.SETRANGE("Operation Type","Operation Type");
                                                                  LaborContractTerms.SETRANGE("Supplement No.","Supplement No.");
                                                                  IF NOT LaborContractTerms.ISEMPTY THEN
                                                                    LaborContractTerms.DELETEALL;
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              TempPosition@1210001 : TEMPORARY Record 17370;
                                                            BEGIN
                                                              CASE Status OF
                                                                Status::Open:
                                                                  BEGIN
                                                                    TESTFIELD(Status,Status::Open);
                                                                    IF "Operation Type" = "Operation Type"::Hire THEN BEGIN
                                                                      GetContract;
                                                                      LaborContract.TESTFIELD("Starting Date");
                                                                      "Starting Date" := LaborContract."Starting Date";
                                                                    END;
                                                                    IF "Operation Type" = "Operation Type"::Combination THEN
                                                                      TESTFIELD("Ending Date");

                                                                    GetContract;

                                                                    TempPosition.DELETEALL;
                                                                    TempPosition.RESET;

                                                                    Position.RESET;
                                                                    Position.SETRANGE(Status,Position.Status::Approved);
                                                                    Position.SETRANGE("Budgeted Position",FALSE);
                                                                    CASE LaborContract."Contract Type" OF
                                                                      LaborContract."Contract Type"::"Labor Contract":
                                                                        Position.SETRANGE("Out-of-Staff",FALSE);
                                                                      LaborContract."Contract Type"::"Civil Contract":
                                                                        Position.SETRANGE("Out-of-Staff",TRUE);
                                                                    END;
                                                                    Position.SETRANGE("Starting Date",0D,"Starting Date");
                                                                    Position.SETFILTER("Ending Date",'%1|%2..',0D,"Starting Date");
                                                                    IF Position.FINDSET THEN
                                                                      REPEAT
                                                                        Position.CALCFIELDS("Filled Rate");
                                                                        IF Position.Rate - Position."Filled Rate" >= "Position Rate" THEN BEGIN
                                                                          TempPosition := Position;
                                                                          TempPosition.INSERT;
                                                                        END;
                                                                      UNTIL Position.NEXT = 0;

                                                                    IF "Position No." <> '' THEN
                                                                      TempPosition.GET("Position No.");
                                                                    IF PAGE.RUNMODAL(PAGE::"Open Positions",TempPosition) = ACTION::LookupOK THEN
                                                                      VALIDATE("Position No.",TempPosition."No.");
                                                                  END;
                                                                Status::Approved:
                                                                  BEGIN
                                                                    Position.RESET;
                                                                    Position.GET("Position No.");
                                                                    PAGE.RUNMODAL(0,Position);
                                                                  END;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Position No.;
                                                              RUS=Номер позиции] }
    { 14  ;   ;Dismissal Reason    ;Code10        ;TableRelation="Grounds for Termination";
                                                   OnValidate=BEGIN
                                                                CheckContractStatus;

                                                                TESTFIELD(Status,Status::Open);
                                                                TESTFIELD("Operation Type","Operation Type"::Dismissal);
                                                                ValidateFieldValue(CurrFieldNo);

                                                                IF "Dismissal Reason" <> xRec."Dismissal Reason" THEN BEGIN
                                                                  IF TerminationGround.GET(xRec."Dismissal Reason") THEN BEGIN
                                                                    LaborContractTerms.RESET;
                                                                    LaborContractTerms.SETRANGE("Labor Contract No.","Contract No.");
                                                                    LaborContractTerms.SETRANGE("Operation Type","Operation Type");
                                                                    LaborContractTerms.SETRANGE("Supplement No.","Supplement No.");
                                                                    LaborContractTerms.SETRANGE("Element Code",TerminationGround."Element Code");
                                                                    LaborContractTerms.DELETEALL;
                                                                  END;
                                                                  IF TerminationGround.GET("Dismissal Reason") THEN
                                                                    IF TerminationGround."Element Code" <> '' THEN BEGIN
                                                                      LaborContractTerms.RESET;
                                                                      LaborContractTerms."Labor Contract No." := "Contract No.";
                                                                      LaborContractTerms."Operation Type" := "Operation Type";
                                                                      LaborContractTerms."Supplement No." := "Supplement No.";
                                                                      LaborContractTerms."Line Type" := LaborContractTerms."Line Type"::"Payroll Element";
                                                                      LaborContractTerms.VALIDATE("Element Code",TerminationGround."Element Code");
                                                                      LaborContractTerms.VALIDATE("Starting Date","Starting Date");
                                                                      LaborContractTerms.VALIDATE("Ending Date","Ending Date");
                                                                      LaborContractTerms.VALIDATE(Quantity,1);
                                                                      Employee.GET(LaborContract."Employee No.");
                                                                      Position.GET(Employee."Position No.");
                                                                      LaborContractTerms.VALIDATE("Posting Group",Position."Posting Group");
                                                                      LaborContractTerms.INSERT;
                                                                    END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Dismissal Reason;
                                                              RUS=Причина увольнения] }
    { 15  ;   ;Dismissal Document  ;Text50        ;OnValidate=BEGIN
                                                                CheckContractStatus;
                                                                TESTFIELD(Status,Status::Open);
                                                                ValidateFieldValue(CurrFieldNo);
                                                              END;

                                                   CaptionML=[ENU=Dismissal Document;
                                                              RUS=Документ увольнения] }
    { 16  ;   ;Position Rate       ;Decimal       ;OnValidate=BEGIN
                                                                CheckContractStatus;
                                                                TESTFIELD(Status,Status::Open);
                                                              END;

                                                   CaptionML=[ENU=Position Rate;
                                                              RUS=Ставка позиции] }
    { 17  ;   ;Salary Terms        ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Labor Contract Terms" WHERE (Labor Contract No.=FIELD(Contract No.),
                                                                                                   Supplement No.=FIELD(Supplement No.),
                                                                                                   Operation Type=FIELD(Operation Type),
                                                                                                   Line Type=CONST(Payroll Element)));
                                                   CaptionML=[ENU=Salary Terms;
                                                              RUS=Условия зарплаты];
                                                   Editable=No }
    { 18  ;   ;Vacation Terms      ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Labor Contract Terms" WHERE (Labor Contract No.=FIELD(Contract No.),
                                                                                                   Supplement No.=FIELD(Supplement No.),
                                                                                                   Operation Type=FIELD(Operation Type),
                                                                                                   Line Type=CONST(Vacation Accrual)));
                                                   CaptionML=[ENU=Vacation Terms;
                                                              RUS=Условия отпуска];
                                                   Editable=No }
    { 20  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              RUS=Серия номеров] }
    { 22  ;   ;Order No.           ;Code20        ;OnValidate=BEGIN
                                                                CheckContractStatus;
                                                                TESTFIELD(Status,Status::Open);
                                                              END;

                                                   CaptionML=[ENU=Order No.;
                                                              RUS=Номер приказа] }
    { 30  ;   ;Trial Period Start Date;Date       ;OnValidate=BEGIN
                                                                CheckContractStatus;
                                                                TESTFIELD(Status,Status::Open);
                                                                ValidateFieldValue(CurrFieldNo);
                                                              END;

                                                   CaptionML=[ENU=Trial Period Start Date;
                                                              RUS=Дата начала испытательного срока] }
    { 31  ;   ;Trial Period End Date;Date         ;OnValidate=BEGIN
                                                                CheckContractStatus;
                                                                TESTFIELD(Status,Status::Open);
                                                                ValidateFieldValue(CurrFieldNo);
                                                              END;

                                                   CaptionML=[ENU=Trial Period End Date;
                                                              RUS=Дата окончания испытательного срока] }
    { 32  ;   ;Trial Period Description;Text50    ;OnValidate=BEGIN
                                                                CheckContractStatus;
                                                                TESTFIELD(Status,Status::Open);
                                                                ValidateFieldValue(CurrFieldNo);
                                                              END;

                                                   CaptionML=[ENU=Trial Period Description;
                                                              RUS=Описание испытательного срока] }
    { 35  ;   ;Territorial Conditions;Code20      ;TableRelation="General Directory".Code WHERE (Type=FILTER(Territor. Condition));
                                                   OnValidate=BEGIN
                                                                CheckContractStatus;
                                                                TESTFIELD(Status,Status::Open);
                                                              END;

                                                   CaptionML=[ENU=Territorial Conditions;
                                                              RUS=Территориальные условия] }
    { 36  ;   ;Special Conditions  ;Code20        ;TableRelation="General Directory".Code WHERE (Type=FILTER(Special Work Condition));
                                                   OnValidate=BEGIN
                                                                CheckContractStatus;
                                                                TESTFIELD(Status,Status::Open);
                                                              END;

                                                   CaptionML=[ENU=Special Conditions;
                                                              RUS=Особые условия] }
    { 37  ;   ;Record of Service Reason;Code20    ;TableRelation="General Directory".Code WHERE (Type=FILTER(Countable Service Reason));
                                                   OnValidate=BEGIN
                                                                CheckContractStatus;
                                                                TESTFIELD(Status,Status::Open);
                                                              END;

                                                   CaptionML=[ENU=Calc Seniority: Reason;
                                                              RUS=Исчисл. труд. стаж: основание] }
    { 38  ;   ;Record of Service Additional;Code20;TableRelation="General Directory".Code WHERE (Type=FILTER(Countable Service Addition));
                                                   OnValidate=BEGIN
                                                                CheckContractStatus;
                                                                TESTFIELD(Status,Status::Open);
                                                              END;

                                                   CaptionML=[ENU=Calc Seniority: Addition;
                                                              RUS=Исчисл. труд. стаж: доп. свед.] }
    { 39  ;   ;Service Years Reason;Code20        ;TableRelation="General Directory".Code WHERE (Type=FILTER(Long Service Reason));
                                                   OnValidate=BEGIN
                                                                CheckContractStatus;
                                                                TESTFIELD(Status,Status::Open);
                                                              END;

                                                   CaptionML=[ENU=Long Service: Reason;
                                                              RUS=Выслуга лет: основание] }
    { 40  ;   ;Service Years Additional;Code20    ;TableRelation="General Directory".Code WHERE (Type=FILTER(Long Service Addition));
                                                   OnValidate=BEGIN
                                                                CheckContractStatus;
                                                                TESTFIELD(Status,Status::Open);
                                                              END;

                                                   CaptionML=[ENU=Long Service: Addition;
                                                              RUS=Выслуга лет: дополнение] }
  }
  KEYS
  {
    {    ;Contract No.,Operation Type,Supplement No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      LaborContract@1210008 : Record 17360;
      LaborContractLine@1210015 : Record 17361;
      LaborContractTerms@1210006 : Record 17362;
      Position@1210000 : Record 17370;
      Text14700@1210004 : TextConst 'ENU=Filled Rate must be 0 for position %1.;RUS=Значение занятых ставок должно быть равно 0 для позиции %1.';
      Text14704@1210016 : TextConst 'ENU=%1 should not be earlier than %2 in %3.;RUS=%1 не должна быть раньше %2 в %3.';
      Text14705@1210017 : TextConst 'ENU=%1 should not be later than %2 in %3.;RUS=%1 не должна быть позже %2 в %3.';
      Text14706@1210005 : TextConst 'ENU=%1 will be deleted. Continue?;RUS=%1 будет удален. Продолжить?';
      Text14707@1210019 : TextConst 'ENU=First contract line must have Operation Type %1.;RUS=Первая строка договора должна иметь тип операции %1 .';
      Text14708@1210009 : TextConst 'ENU=%1 cannot be changed if Operation Type is %2.;RUS=Невозможно изменить %1, если тип операции - %2.';
      Text14709@1210010 : TextConst 'ENU=Amount and Quantity should not be equal 0 simultaneously.;RUS=Сумма и количество не должны быть равны 0 одновременно.';
      Employee@1210001 : Record 5200;
      TerminationGround@1210002 : Record 5217;

    PROCEDURE GetContract@1210010();
    BEGIN
      IF LaborContract."No." <> "Contract No." THEN
        LaborContract.GET("Contract No.");
    END;

    PROCEDURE CheckPosition@1210007(LaborContractLine@1210000 : Record 17361);
    BEGIN
      WITH LaborContractLine DO BEGIN
        Position.GET("Position No.");
        Position.TESTFIELD("Job Title Code");
        Position.TESTFIELD("Org. Unit Code");
        Position.TESTFIELD(Status,Position.Status::Approved);
        Position.TESTFIELD(Rate);
        Position.TESTFIELD("Base Salary");
        Position.TESTFIELD("Monthly Salary");
        Position.TESTFIELD("Category Code");
        Position.TESTFIELD("Statistical Group Code");
        Position.TESTFIELD("Calendar Code");
        Position.TESTFIELD("Calc Group Code");
        Position.TESTFIELD("Posting Group");
        Position.TESTFIELD("Kind of Work");
        Position.TESTFIELD("Conditions of Work");
        Position.TESTFIELD("Starting Date");
        CheckFillRate;
      END;
    END;

    PROCEDURE CheckFillRate@1210015();
    BEGIN
      Position.CALCFIELDS("Filled Rate");
      IF Position."Filled Rate" <> 0 THEN
        ERROR(Text14700,"Position No.");
    END;

    PROCEDURE CheckLine@1210011();
    VAR
      Vendor@1210002 : Record 23;
      Person@1210001 : Record 17350;
      VendorAgreement@1210000 : Record 14901;
    BEGIN
      GetContract;
      LaborContract.TESTFIELD("Person No.");
      LaborContract.TESTFIELD("Starting Date");

      TESTFIELD("Position Rate");
      TESTFIELD("Position No.");
      TESTFIELD("Starting Date");
      CheckContractStatus;
      TESTFIELD(Status,Status::Open);

      Person.GET(LaborContract."Person No.");
      Person.TESTFIELD("Vendor No.");
      Vendor.GET(Person."Vendor No.");
      IF Vendor."Agreement Posting" = Vendor."Agreement Posting"::Mandatory THEN
        LaborContract.TESTFIELD("Vendor Agreement No.");

      IF LaborContract."Vendor Agreement No." <> '' THEN BEGIN
        VendorAgreement.GET(Vendor."No.",LaborContract."Vendor Agreement No.");
        IF "Starting Date" < VendorAgreement."Starting Date" THEN
          ERROR(Text14704,
            FIELDCAPTION("Starting Date"),VendorAgreement.FIELDCAPTION("Starting Date"),VendorAgreement.TABLECAPTION);
      END;

      IF "Starting Date" < LaborContract."Starting Date" THEN
        ERROR(Text14704,
          FIELDCAPTION("Starting Date"),LaborContract.FIELDCAPTION("Starting Date"),LaborContract.TABLECAPTION);

      IF ("Starting Date" > LaborContract."Ending Date") AND (LaborContract."Ending Date" <> 0D) THEN
        ERROR(Text14705,
          FIELDCAPTION("Starting Date"),LaborContract.FIELDCAPTION("Ending Date"),LaborContract.TABLECAPTION);

      IF ("Ending Date" > LaborContract."Ending Date") AND (LaborContract."Ending Date" <> 0D) THEN
        ERROR(Text14704,
          FIELDCAPTION("Ending Date"),LaborContract.FIELDCAPTION("Ending Date"),LaborContract.TABLECAPTION);

      IF "Operation Type" <> "Operation Type"::Hire THEN BEGIN
        LaborContractLine.RESET;
        LaborContractLine.SETRANGE("Contract No.","Contract No.");
        LaborContractLine.FINDFIRST;
        IF LaborContractLine."Operation Type" <> LaborContractLine."Operation Type"::Hire THEN
          ERROR(Text14707,"Operation Type"::Hire);
      END;

      LaborContractTerms.RESET;
      LaborContractTerms.SETRANGE("Labor Contract No.","Contract No.");
      LaborContractTerms.SETRANGE("Operation Type","Operation Type");
      LaborContractTerms.SETRANGE("Supplement No.","Supplement No.");
      IF LaborContractTerms.FINDSET THEN
        REPEAT
          LaborContractTerms.TESTFIELD("Element Code");
          LaborContractTerms.TESTFIELD("Starting Date");
          CASE LaborContractTerms."Line Type" OF
            LaborContractTerms."Line Type"::"Payroll Element":
              IF (LaborContractTerms.Amount = 0) AND (LaborContractTerms.Quantity = 0) THEN
                ERROR(Text14709);
            LaborContractTerms."Line Type"::"Vacation Accrual":
              BEGIN
                LaborContractTerms.TESTFIELD(Amount,0);
                LaborContractTerms.TESTFIELD(Quantity);
              END;
          END;
        UNTIL LaborContractTerms.NEXT = 0;
    END;

    PROCEDURE CheckDateOrder@1210013();
    BEGIN
      LaborContractLine.RESET;
      LaborContractLine.SETRANGE("Contract No.","Contract No.");
      IF LaborContractLine.FINDLAST THEN
        IF LaborContractLine."Starting Date" > "Starting Date" THEN
          ERROR(Text14704,
            FIELDCAPTION("Starting Date"),LaborContractLine.TABLECAPTION,LaborContractLine.FIELDCAPTION("Starting Date"));
    END;

    PROCEDURE ShowContractTerms@1210001();
    VAR
      LaborContractTerms@1210000 : Record 17362;
      LaborContractTermsPage@1210001 : Page 17370;
    BEGIN
      LaborContractTerms.RESET;
      LaborContractTerms.SETRANGE("Labor Contract No.","Contract No.");
      LaborContractTerms.SETRANGE("Operation Type","Operation Type");
      LaborContractTerms.SETRANGE("Supplement No.","Supplement No.");
      LaborContractTermsPage.SETTABLEVIEW(LaborContractTerms);
      LaborContractTermsPage.RUN;
      CLEAR(LaborContractTermsPage);
    END;

    PROCEDURE ShowComments@1210000();
    VAR
      HRComment@1210000 : Record 5208;
      HRCommentList@1210001 : Page 5223;
    BEGIN
      HRComment.RESET;
      HRComment.SETRANGE("Table Name",HRComment."Table Name"::"Labor Contract");
      HRComment.SETRANGE("No.","Contract No.");
      HRComment.SETRANGE("Alternative Address Code","Supplement No.");
      HRCommentList.SETTABLEVIEW(HRComment);
      HRCommentList.RUN;
      CLEAR(HRCommentList);
    END;

    PROCEDURE PrintOrder@1210003();
    VAR
      LaborContractLine@1210000 : Record 17361;
      HROrderPrint@1210001 : Codeunit 17372;
    BEGIN
      LaborContractLine.RESET;
      LaborContractLine.SETRANGE("Contract No.","Contract No.");
      LaborContractLine.SETRANGE("Operation Type","Operation Type");
      LaborContractLine.SETRANGE("Supplement No.","Supplement No.");
      IF LaborContractLine.FINDFIRST THEN
        CASE "Operation Type" OF
          "Operation Type"::Hire:
            HROrderPrint.PrintFormT1(LaborContractLine);
          "Operation Type"::Transfer:
            HROrderPrint.PrintFormT5(LaborContractLine);
          "Operation Type"::Combination:
            ;
          "Operation Type"::Dismissal:
            HROrderPrint.PrintFormT8(LaborContractLine);
        END;
    END;

    PROCEDURE ValidateFieldValue@1210002(FieldNumber@1210000 : Integer);
    VAR
      Field@1210001 : Record 2000000041;
      UpdateForbidden@1210002 : Boolean;
    BEGIN
      IF FieldNumber = 0 THEN
        EXIT;

      IF NOT IsValueChanged(FieldNumber) THEN
        EXIT;

      Field.GET(DATABASE::"Labor Contract Line",FieldNumber);

      CASE "Operation Type" OF
        "Operation Type"::Hire,
        "Operation Type"::Transfer:
          UpdateForbidden := FieldNumber IN [
                                             FIELDNO("Dismissal Reason"),
                                             FIELDNO("Dismissal Document")
                                             ];
        "Operation Type"::Combination:
          UpdateForbidden := FieldNumber IN [
                                             FIELDNO("Dismissal Reason"),
                                             FIELDNO("Dismissal Document"),
                                             FIELDNO("Dismissal Reason"),
                                             FIELDNO("Trial Period Start Date"),
                                             FIELDNO("Trial Period End Date"),
                                             FIELDNO("Trial Period Description")
                                             ];
        "Operation Type"::Dismissal:
          UpdateForbidden := FieldNumber IN [
                                             FIELDNO("Starting Date"),
                                             FIELDNO("Position No."),
                                             FIELDNO("Trial Period Start Date"),
                                             FIELDNO("Trial Period End Date"),
                                             FIELDNO("Trial Period Description")
                                             ];
      END;

      IF UpdateForbidden THEN
        ERROR(Text14708,Field."Field Caption","Operation Type");
    END;

    PROCEDURE IsValueChanged@1210004(FieldNumber@1210000 : Integer) : Boolean;
    VAR
      RecRef@1210001 : RecordRef;
      xRecRef@1210002 : RecordRef;
      FieldRef@1210003 : FieldRef;
      xFieldRef@1210004 : FieldRef;
    BEGIN
      RecRef.GETTABLE(Rec);
      xRecRef.GETTABLE(xRec);
      FieldRef := RecRef.FIELD(FieldNumber);
      xFieldRef := xRecRef.FIELD(FieldNumber);
      EXIT(FORMAT(FieldRef.VALUE) <> FORMAT(xFieldRef.VALUE));
    END;

    PROCEDURE CheckContractStatus@1210005();
    BEGIN
      GetContract;
      IF LaborContract.Status = LaborContract.Status::Closed THEN
        LaborContract.FIELDERROR(Status);
    END;

    PROCEDURE CheckTransferDate@1210006(SupplementNo@1210000 : Code[10];OrderNo@1210001 : Code[20];OrderDate@1210002 : Date);
    BEGIN
      LaborContractLine.RESET;
      LaborContractLine.SETRANGE("Contract No.","Contract No.");
      LaborContractLine.SETRANGE(
        "Operation Type",
        LaborContractLine."Operation Type"::Hire,
        LaborContractLine."Operation Type"::Transfer);
      LaborContractLine.SETRANGE("Supplement No.",SupplementNo);
      LaborContractLine.SETRANGE("Order No.",OrderNo);
      LaborContractLine.SETRANGE("Order Date",OrderDate);
      IF LaborContractLine.FINDLAST THEN
        IF LaborContractLine."Starting Date" > "Starting Date" THEN
          ERROR(
            Text14704,
            FIELDCAPTION("Starting Date"),LaborContractLine.TABLECAPTION,LaborContractLine.FIELDCAPTION("Starting Date"));
    END;

    PROCEDURE HasSpecialWorkConditions@1170000000() : Boolean;
    VAR
      GeneralDirectory@1170000000 : Record 17359;
    BEGIN
      IF (GetGeneralDirectoryXMLType("Territorial Conditions",GeneralDirectory.Type::"Territor. Condition") > 0) OR
         (GetGeneralDirectoryXMLType("Special Conditions",GeneralDirectory.Type::"Special Work Condition") > 0) OR
         (GetGeneralDirectoryXMLType("Record of Service Reason",GeneralDirectory.Type::"Countable Service Reason") > 0) OR
         (GetGeneralDirectoryXMLType("Record of Service Additional",GeneralDirectory.Type::"Countable Service Addition") > 0)
      THEN
        EXIT(TRUE);

      EXIT(FALSE);
    END;

    PROCEDURE GetGeneralDirectoryXMLType@1170000002(GeneralDirectoryCode@1210000 : Code[20];GeneralDirectoryType@1210002 : Option) : Integer;
    VAR
      GeneralDirectory@1210001 : Record 17359;
    BEGIN
      IF GeneralDirectoryCode <> '' THEN BEGIN
        GeneralDirectory.SETRANGE(Code,GeneralDirectoryCode);
        GeneralDirectory.SETRANGE(Type,GeneralDirectoryType);
        GeneralDirectory.FINDFIRST;
        EXIT(GeneralDirectory."XML Element Type");
      END;
      EXIT(GeneralDirectory."XML Element Type"::" ");
    END;

    BEGIN
    END.
  }
}

