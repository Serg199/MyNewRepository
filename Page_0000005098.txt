OBJECT Page 5098 To-do Card
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=To-do Card;
               RUS=Карточка задач];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table5080;
    PageType=Card;
    OnInit=BEGIN
             CalcDueDateFromEnable := TRUE;
             RecurringDateIntervalEnable := TRUE;
             CompletedByEnable := TRUE;
             AttendeesAcceptedNoEnable := TRUE;
             NoOfAttendeesEnable := TRUE;
             AllDayEventEnable := TRUE;
             LocationEnable := TRUE;
             DurationEnable := TRUE;
             EndingTimeEnable := TRUE;
             StartTimeEnable := TRUE;
             CompletedByEditable := TRUE;
             CalcDueDateFromEditable := TRUE;
             RecurringDateIntervalEditable := TRUE;
             ContactNoEditable := TRUE;
           END;

    OnOpenPage=BEGIN
                 IF GETFILTER("No.") = '' THEN
                   CurrPage.EDITABLE := FALSE;
               END;

    OnAfterGetRecord=BEGIN
                       ContactCompanyNameHideValue := FALSE;
                       ContactNameHideValue := FALSE;
                       SwitchCardControls;
                       IF "No." <> "Organizer To-do No." THEN
                         CurrPage.EDITABLE := FALSE
                       ELSE
                         CurrPage.EDITABLE := TRUE;
                       SetRecurringEditable;
                       EnableFields;
                       ContactNoOnFormat(FORMAT("Contact No."));
                       ContactNameOnFormat;
                       ContactCompanyNameOnFormat;
                     END;

    OnModifyRecord=BEGIN
                     IF ("Team Code" = '') AND ("Salesperson Code" = '') THEN
                       ERROR(
                         Text000,TABLECAPTION,FIELDCAPTION("Salesperson Code"),FIELDCAPTION("Team Code"));

                     IF (Type = Type::Meeting) AND (NOT "All Day Event") THEN BEGIN
                       IF "Start Time" = 0T THEN
                         ERROR(Text002,TABLECAPTION,Type,FIELDCAPTION("Start Time"));
                       IF Duration = 0 THEN
                         ERROR(Text002,TABLECAPTION,Type,FIELDCAPTION(Duration));
                     END;
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 29      ;1   ;ActionGroup;
                      CaptionML=[ENU=To-&do;
                                 RUS=&Задача];
                      Image=Task }
      { 33      ;2   ;Action    ;
                      CaptionML=[ENU=Co&mment;
                                 RUS=Ко&мментарий];
                      ToolTipML=[ENU=View or add comments.;
                                 RUS=Просмотр или добавление комментариев.];
                      RunObject=Page 5072;
                      RunPageLink=Table Name=CONST(To-do),
                                  No.=FIELD(Organizer To-do No.),
                                  Sub No.=CONST(0);
                      Image=ViewComments }
      { 34      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Interaction Log E&ntries;
                                 RUS=Журналы &взаимодействий];
                      ToolTipML=[ENU=View interaction log entries for the to-do.;
                                 RUS=Просмотр операций журнала взаимодействий для задачи.];
                      RunObject=Page 5076;
                      RunPageView=SORTING(To-do No.);
                      RunPageLink=To-do No.=FIELD(Organizer To-do No.);
                      Image=InteractionLog }
      { 69      ;2   ;Action    ;
                      CaptionML=[ENU=Postponed &Interactions;
                                 RUS=Отложенные &взаимодействия];
                      ToolTipML=[ENU=View postponed interactions for the to-do.;
                                 RUS=Просмотр отложенных взаимодействий для задачи.];
                      RunObject=Page 5082;
                      RunPageView=SORTING(To-do No.);
                      RunPageLink=To-do No.=FIELD(Organizer To-do No.);
                      Image=PostponedInteractions }
      { 70      ;2   ;Action    ;
                      CaptionML=[ENU=A&ttendee Scheduling;
                                 RUS=Планирование у&частников];
                      ToolTipML=[ENU=View the status of a scheduled meeting.;
                                 RUS=Просмотр статуса запланированной встречи.];
                      Image=ProfileCalender;
                      OnAction=BEGIN
                                 IF Type <> Type::Meeting THEN
                                   ERROR(Text003,FORMAT(Type));

                                 PAGE.RUNMODAL(PAGE::"Attendee Scheduling",Rec);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 30      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 RUS=Ф&ункции];
                      Image=Action }
      { 35      ;2   ;Action    ;
                      CaptionML=[ENU=Assign Activities;
                                 RUS=Назначить действия];
                      ToolTipML=[ENU=View all the to-dos that have been assigned to salespeople and teams. A to-do can be organizing meetings, making phone calls, and so on.;
                                 RUS=Просмотр всех задач, которые были назначены менеджерам по продажам и командам. В роли задач могут выступать организация встречи, телефонный звонок и т. д.];
                      Image=Allocate;
                      OnAction=VAR
                                 TempToDo@1001 : TEMPORARY Record 5080;
                               BEGIN
                                 TempToDo.AssignActivityFromToDo(Rec)
                               END;
                                }
      { 36      ;2   ;Action    ;
                      CaptionML=[ENU=Make &Phone Call;
                                 RUS=&Позвонить];
                      ToolTipML=[ENU=Call the selected contact.;
                                 RUS=Телефонный звонок выбранному контакту.];
                      Image=Calls;
                      OnAction=VAR
                                 SegmentLine@1001 : TEMPORARY Record 5077;
                               BEGIN
                                 IF "Contact No." = '' THEN BEGIN
                                   IF (Type = Type::Meeting) AND ("Team Code" = '') THEN
                                     ERROR(Text005);
                                   ERROR(Text006);
                                 END;
                                 SegmentLine."To-do No." := "No.";
                                 SegmentLine."Contact No." := "Contact No.";
                                 SegmentLine."Contact Company No." := "Contact Company No.";
                                 SegmentLine."Campaign No." := "Campaign No.";
                                 SegmentLine.CreateCall;
                               END;
                                }
      { 31      ;1   ;Action    ;
                      CaptionML=[ENU=&Create To-do;
                                 RUS=&Создать задачу];
                      ToolTipML=[ENU=Create a new to-do.;
                                 RUS=Создание новой задачи.];
                      Promoted=Yes;
                      Image=NewToDo;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 TempToDo@1001 : TEMPORARY Record 5080;
                               BEGIN
                                 TempToDo.CreateToDoFromToDo(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           RUS=Общее] }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the to-do.;
                           RUS=Определяет номер задачи.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="No." }

    { 20  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the description of the to-do.;
                           RUS=Определяет описание задачи.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Description }

    { 67  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the location where the meeting will take place.;
                           RUS=Определяет место проведения встречи.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Location;
                Enabled=LocationEnable }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the salesperson assigned to the to-do.;
                           RUS=Определяет код менеджера по продажам, назначенного для выполнения задачи.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Salesperson Code";
                OnValidate=BEGIN
                             SalespersonCodeOnAfterValidate;
                           END;
                            }

    { 71  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of attendees for the meeting. click the field to view the Attendee Scheduling card.;
                           RUS=Определяет количество участников встречи. Для просмотра карточки "Планирование участников" щелкните поле.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="No. of Attendees";
                Enabled=NoOfAttendeesEnable;
                OnDrillDown=BEGIN
                              MODIFY;
                              COMMIT;
                              PAGE.RUNMODAL(PAGE::"Attendee Scheduling",Rec);
                              GET("No.");
                              CurrPage.UPDATE;
                            END;
                             }

    { 73  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of attendees that have confirmed their participation in the meeting.;
                           RUS=Определяет количество участников, подтвердивших участие в встрече.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Attendees Accepted No.";
                Enabled=AttendeesAcceptedNoEnable;
                OnDrillDown=BEGIN
                              MODIFY;
                              COMMIT;
                              PAGE.RUNMODAL(PAGE::"Attendee Scheduling",Rec);
                              GET("No.");
                              CurrPage.UPDATE;
                            END;
                             }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the contact linked to the to-do.;
                           RUS=Определяет номер контакта, связанного с задачей.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Contact No.";
                Editable=ContactNoEditable;
                OnValidate=BEGIN
                             ContactNoOnAfterValidate;
                           END;

                OnLookup=VAR
                           Todo@1005 : Record 5080;
                           Cont@1003 : Record 5050;
                         BEGIN
                           IF Type = Type::Meeting THEN BEGIN
                             Todo.SETRANGE("No.","No.");
                             PAGE.RUNMODAL(PAGE::"Attendee Scheduling",Todo);
                           END ELSE BEGIN
                             IF Cont.GET("Contact No.") THEN;
                             IF PAGE.RUNMODAL(0,Cont) = ACTION::LookupOK THEN BEGIN
                               VALIDATE("Contact No.",Cont."No.");
                               CurrPage.UPDATE;
                             END;
                           END;
                         END;
                          }

    { 47  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the contact to which this to-do has been assigned.;
                           RUS=Определяет имя контакта, которому назначена задача.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Contact Name";
                Editable=FALSE;
                HideValue=ContactNameHideValue }

    { 49  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the company for which the contact involved in the to-do works.;
                           RUS=Определяет название организации, в которой работает контакт, участвующий в решении этой задачи.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Contact Company Name";
                Editable=FALSE;
                HideValue=ContactCompanyNameHideValue }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the team to which the to-do is assigned.;
                           RUS=Определяет код команды, которой назначена задача.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Team Code";
                OnValidate=BEGIN
                             TeamCodeOnAfterValidate;
                           END;
                            }

    { 76  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the salesperson who completed this team to-do.;
                           RUS=Определяет менеджера по продажам, выполнившего эту задачу команды.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Completed By";
                Enabled=CompletedByEnable;
                Editable=CompletedByEditable;
                OnValidate=BEGIN
                             SwitchCardControls
                           END;
                            }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the status of the to-do. There are five options: Not Started, In Progress, Completed, Waiting and Postponed.;
                           RUS=Определяет статус задачи. Возможно пять вариантов: "Не начато", "В работе", "Завершено", "Ожидание" и "Отложено".];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Status }

    { 18  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the priority of the to-do. There are three options:;
                           RUS=Определяет приоритет задачи. Возможны три варианта:];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Priority }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of the to-do.;
                           RUS=Определяет тип задачи.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Type;
                OnValidate=BEGIN
                             TypeOnAfterValidate;
                           END;
                            }

    { 64  ;2   ;Field     ;
                Name=AllDayEvent;
                CaptionML=[ENU=All Day Event;
                           RUS=На весь день];
                ToolTipML=[ENU=Specifies that the to-do of the Meeting type is an all-day event, which is an activity that lasts 24 hours or longer.;
                           RUS=Определяет, что задача типа "Встреча" является задачей на весь день, т. е. продолжается 24 часа или более.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="All Day Event";
                Enabled=AllDayEventEnable;
                OnValidate=BEGIN
                             AllDayEventOnAfterValidate;
                           END;
                            }

    { 14  ;2   ;Field     ;
                Name=Date;
                ToolTipML=[ENU=Specifies the date when the to-do should be started. There are certain rules for how dates should be entered found in How to: Enter Dates and Times.;
                           RUS=Определяет дату, когда должно начаться выполнение задачи. Существуют определенные правила ввода дат, описанные в разделе о вводе значений даты и времени.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Date }

    { 56  ;2   ;Field     ;
                Name=StartTime;
                ToolTipML=[ENU=Specifies the time when the to-do of the Meeting type should be started.;
                           RUS=Определяет время начала задачи типа "Встреча".];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Start Time";
                Enabled=StartTimeEnable }

    { 58  ;2   ;Field     ;
                Name=Duration;
                ToolTipML=[ENU=Specifies the duration of the to-do of the Meeting type.;
                           RUS=Определяет длительность задачи типа "Встреча".];
                ApplicationArea=#RelationshipMgmt;
                BlankZero=Yes;
                SourceExpr=Duration;
                Enabled=DurationEnable }

    { 63  ;2   ;Field     ;
                Name=EndingDate;
                CaptionML=[ENU=Ending Date;
                           RUS=Дата окончания];
                ToolTipML=[ENU=Specifies the date of when the to-do should end. There are certain rules for how dates should be entered. For more information, see How to: Enter Dates and Times.;
                           RUS=Определяет дату, когда должно завершиться выполнение задачи. Существуют определенные правила ввода дат. Дополнительные сведения см. в разделе о вводе значений даты и времени.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Ending Date" }

    { 61  ;2   ;Field     ;
                Name=EndingTime;
                CaptionML=[ENU=Ending Time;
                           RUS=Время окончания];
                ToolTipML=[ENU=Specifies the time of when the to-do of the Meeting type should end.;
                           RUS=Определяет время завершения задачи типа "Встреча".];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Ending Time";
                Enabled=EndingTimeEnable }

    { 26  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that the to-do has been canceled.;
                           RUS=Определяет, что задача была отменена.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Canceled;
                OnValidate=BEGIN
                             SwitchCardControls
                           END;
                            }

    { 22  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that the to-do is closed.;
                           RUS=Указывает, что задача закрыта.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Closed;
                OnValidate=BEGIN
                             SwitchCardControls
                           END;
                            }

    { 24  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date the to-do was closed.;
                           RUS=Определяет дату закрытия задачи.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Date Closed" }

    { 1905354401;1;Group  ;
                CaptionML=[ENU=Related Activities;
                           RUS=Связанные действия] }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the campaign to which the to-do is linked.;
                           RUS=Определяет номер кампании, с которой связана задача.];
                SourceExpr="Campaign No.";
                OnValidate=BEGIN
                             CampaignNoOnAfterValidate;
                           END;
                            }

    { 51  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the description of the campaign to which the to-do is linked.;
                           RUS=Определяет описание кампании, с которой связана задача.];
                SourceExpr="Campaign Description";
                Editable=FALSE }

    { 45  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the opportunity to which the to-do is linked.;
                           RUS=Определяет номер возможности, с которой связана задача.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Opportunity No.";
                OnValidate=BEGIN
                             OpportunityNoOnAfterValidate;
                           END;
                            }

    { 53  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a description of the opportunity related to the to-do. The description is copied from the opportunity card.;
                           RUS=Определяет описание возможности, связанной с задачей. Описание копируется из карточки возможности.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Opportunity Description";
                Editable=FALSE }

    { 1904441601;1;Group  ;
                CaptionML=[ENU=Recurring;
                           RUS=Типовой] }

    { 39  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that the to-do occurs periodically.;
                           RUS=Указывает, что задание выполняется с определенной периодичностью.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr=Recurring;
                OnValidate=BEGIN
                             RecurringOnPush;
                           END;
                            }

    { 41  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date formula to assign automatically a recurring to-do to a salesperson or team.;
                           RUS=Определяет формулу даты, которая используется для автоматического назначения повторяющейся задачи менеджеру по продажам или команде.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Recurring Date Interval";
                Enabled=RecurringDateIntervalEnable;
                Editable=RecurringDateIntervalEditable }

    { 43  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date to use to calculate the date on which the next to-do should be completed.;
                           RUS=Определяет дату, которую требуется использовать для расчета даты завершения следующей задачи.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Calc. Due Date From";
                Enabled=CalcDueDateFromEnable;
                Editable=CalcDueDateFromEditable }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=The %1 will always have either the %2 or %3 assigned.;RUS=%1 будет всегда назначено %2 или %3.';
      Text002@1002 : TextConst 'ENU=The %1 of the %2 type must always have the %3 assigned.;RUS=%1 типа %2 требует постоянного назначения %3.';
      Text003@1005 : TextConst 'ENU=You cannot select attendees for a to-do of the ''%1'' type.;RUS=Вам нельзя выбирать участников для задачи типа ''%1''.';
      Text005@1007 : TextConst 'ENU=The Make Phone Call function for this to-do is available only in the Attendee Scheduling window.;RUS=Функция "Позвонить" для этой задачи доступна только в окне "Планирование участников".';
      Text006@1008 : TextConst 'ENU=You must assign a contact to this to-do before you can use the Make Phone Call function.;RUS=Прежде чем использовать функцию "Позвонить", данной задаче должен быть присвоен контакт.';
      Text007@1009 : TextConst 'ENU=(Multiple);RUS=(несколько)';
      ContactNameHideValue@19061599 : Boolean INDATASET;
      ContactCompanyNameHideValue@19040407 : Boolean INDATASET;
      ContactNoEditable@19030566 : Boolean INDATASET;
      RecurringDateIntervalEditable@19051941 : Boolean INDATASET;
      CalcDueDateFromEditable@19052355 : Boolean INDATASET;
      CompletedByEditable@19071171 : Boolean INDATASET;
      StartTimeEnable@19008764 : Boolean INDATASET;
      EndingTimeEnable@19050392 : Boolean INDATASET;
      DurationEnable@19035217 : Boolean INDATASET;
      LocationEnable@19013618 : Boolean INDATASET;
      AllDayEventEnable@19049519 : Boolean INDATASET;
      NoOfAttendeesEnable@19000329 : Boolean INDATASET;
      AttendeesAcceptedNoEnable@19007606 : Boolean INDATASET;
      CompletedByEnable@19024761 : Boolean INDATASET;
      RecurringDateIntervalEnable@19019953 : Boolean INDATASET;
      CalcDueDateFromEnable@19036769 : Boolean INDATASET;

    PROCEDURE SetRecurringEditable@1();
    BEGIN
      RecurringDateIntervalEditable := Recurring;
      CalcDueDateFromEditable := Recurring;
    END;

    LOCAL PROCEDURE EnableFields@2();
    BEGIN
      RecurringDateIntervalEnable := Recurring;
      CalcDueDateFromEnable := Recurring;

      IF NOT Recurring THEN BEGIN
        EVALUATE("Recurring Date Interval",'');
        CLEAR("Calc. Due Date From");
      END;

      IF Type = Type::Meeting THEN BEGIN
        StartTimeEnable := NOT "All Day Event";
        EndingTimeEnable := NOT "All Day Event";
        DurationEnable := NOT "All Day Event";
        LocationEnable := TRUE;
        AllDayEventEnable := TRUE;
      END ELSE BEGIN
        StartTimeEnable := FALSE;
        EndingTimeEnable := FALSE;
        LocationEnable := FALSE;
        DurationEnable := FALSE;
        AllDayEventEnable := FALSE;
      END;

      GetEndDateTime;
    END;

    LOCAL PROCEDURE SwitchCardControls@3();
    BEGIN
      IF Type = Type::Meeting THEN BEGIN
        ContactNoEditable := FALSE;

        NoOfAttendeesEnable := TRUE;
        AttendeesAcceptedNoEnable := TRUE;
      END ELSE BEGIN
        ContactNoEditable := TRUE;

        NoOfAttendeesEnable := FALSE;
        AttendeesAcceptedNoEnable := FALSE;
      END;
      IF "Team Code" = '' THEN
        CompletedByEnable := FALSE
      ELSE BEGIN
        CompletedByEnable := TRUE;
        CompletedByEditable := NOT Closed
      END
    END;

    LOCAL PROCEDURE TeamCodeOnAfterValidate@19070305();
    BEGIN
      SwitchCardControls;
      CALCFIELDS(
        "No. of Attendees",
        "Attendees Accepted No.",
        "Contact Name",
        "Contact Company Name",
        "Campaign Description",
        "Opportunity Description")
    END;

    LOCAL PROCEDURE ContactNoOnAfterValidate@19009577();
    BEGIN
      CALCFIELDS("Contact Name","Contact Company Name");
    END;

    LOCAL PROCEDURE TypeOnAfterValidate@19069045();
    BEGIN
      EnableFields;
    END;

    LOCAL PROCEDURE AllDayEventOnAfterValidate@19020274();
    BEGIN
      EnableFields;
    END;

    LOCAL PROCEDURE SalespersonCodeOnAfterValidate@19011896();
    BEGIN
      SwitchCardControls;
      CALCFIELDS(
        "No. of Attendees",
        "Attendees Accepted No.",
        "Contact Name",
        "Contact Company Name",
        "Campaign Description",
        "Opportunity Description");
    END;

    LOCAL PROCEDURE CampaignNoOnAfterValidate@19036822();
    BEGIN
      CALCFIELDS("Campaign Description");
    END;

    LOCAL PROCEDURE OpportunityNoOnAfterValidate@19076180();
    BEGIN
      CALCFIELDS("Opportunity Description");
    END;

    LOCAL PROCEDURE RecurringOnPush@19040619();
    BEGIN
      SetRecurringEditable;
    END;

    LOCAL PROCEDURE ContactNoOnFormat@19025756(Text@19019593 : Text[1024]);
    BEGIN
      IF Type = Type::Meeting THEN
        Text := Text007;
    END;

    LOCAL PROCEDURE ContactNameOnFormat@19032823();
    BEGIN
      IF Type = Type::Meeting THEN
        ContactNameHideValue := TRUE;
    END;

    LOCAL PROCEDURE ContactCompanyNameOnFormat@19053256();
    BEGIN
      IF Type = Type::Meeting THEN
        ContactCompanyNameHideValue := TRUE;
    END;

    BEGIN
    END.
  }
}

