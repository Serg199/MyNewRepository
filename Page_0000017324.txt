OBJECT Page 17324 Tax Calc. Calc. Buffer
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Tax Calc. Calc. Buffer;
               RUS=Буфер расчета налогового расчета];
    SourceTable=Table17206;
    PageType=List;
    SourceTableTemporary=Yes;
    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 102     ;1   ;ActionGroup;
                      CaptionML=[ENU=Line;
                                 RUS=Строка];
                      Image=Line }
      { 103     ;2   ;Action    ;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 RUS=Измерения];
                      ApplicationArea=#Basic,#Suite;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 DimensionsFilters;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Line Code" }

    { 4   ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Expression Type" }

    { 6   ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Expression }

    { 8   ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=2:;
                SourceExpr=Amount;
                OnDrillDown=BEGIN
                              DrillDownAmount;
                            END;
                             }

    { 10  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description }

    { 100 ;2   ;Field     ;
                SourceExpr="Dimensions Filters";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Term Type" }

    { 14  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Operation }

    { 16  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Account Type" }

    { 18  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Amount Type" }

    { 20  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Account No." }

    { 22  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. Account No." }

    { 24  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Process Sign" }

  }
  CODE
  {
    VAR
      Text1000@1210000 : TextConst 'ENU=Filtering by Global Dimensions only.;RUS=Фильтры только по глобальным измерениям.';

    PROCEDURE BuildTmpCalcBuffer@1(TaxCalcAccumulation@1000 : Record 17314);
    VAR
      TaxCalcLine@1001 : Record 17310;
      TaxCalcAccumulation2@1002 : Record 17314;
      TaxRegTermMgt@1210000 : Codeunit 17200;
      TaxCalcRecordRef@1003 : RecordRef;
      AccumulateRecordRef@1004 : RecordRef;
      TaxCalcFieldRef@1005 : FieldRef;
    BEGIN
      WITH TaxCalcAccumulation DO
        IF TaxCalcLine.GET("Section Code","Register No.","Template Line No.") THEN BEGIN
          TaxCalcRecordRef.GETTABLE(TaxCalcLine);
          TaxCalcFieldRef := TaxCalcRecordRef.FIELD(TaxCalcLine.FIELDNO("Date Filter"));
          TaxCalcFieldRef.SETRANGE("Starting Date","Ending Date");
          TaxCalcAccumulation2 := TaxCalcAccumulation;
          TaxCalcAccumulation2.SETCURRENTKEY("Section Code","Register No.");
          TaxCalcAccumulation2.SETRANGE("Ending Date","Ending Date");
          TaxCalcAccumulation2.SETRANGE("Section Code","Section Code");
          AccumulateRecordRef.GETTABLE(TaxCalcAccumulation2);
          AccumulateRecordRef.SETVIEW(TaxCalcAccumulation2.GETVIEW(FALSE));
          TaxRegTermMgt.ShowExpressionValue(TaxCalcRecordRef,Rec,AccumulateRecordRef);
        END;
    END;

    PROCEDURE DimensionsFilters@2();
    VAR
      TaxCalcDimFilter@1000 : Record 17313;
    BEGIN
      CALCFIELDS("Dimensions Filters");
      IF "Dimensions Filters" THEN BEGIN
        TaxCalcDimFilter.FILTERGROUP(2);
        TaxCalcDimFilter.SETRANGE("Section Code","Section Code");
        TaxCalcDimFilter.SETRANGE("Register No.","Tax Register No.");
        TaxCalcDimFilter.SETRANGE(Define,TaxCalcDimFilter.Define::Template);
        TaxCalcDimFilter.FILTERGROUP(0);
        TaxCalcDimFilter.SETRANGE("Line No.","Template Line No.");
        IF ACTION::None = PAGE.RUNMODAL(0,TaxCalcDimFilter) THEN ;
      END;
    END;

    LOCAL PROCEDURE DrillDownAmount@3();
    VAR
      TaxRegTermName@1000 : Record 17311;
      TaxRegTermLine@1001 : Record 17312;
      GLEntry@1002 : Record 17;
      GLCorrespondEntry@1003 : Record 12401;
      TaxCalcAccumulation@1004 : Record 17314;
      TempDimBuf0@1005 : TEMPORARY Record 360;
      TempGLEntryGlobalDimFilter@1006 : TEMPORARY Record 17;
      TaxRegTermMgt@1007 : Codeunit 17200;
      NoGlobalDimFilterNeed@1008 : Boolean;
    BEGIN
      IF "Expression Type" = "Expression Type"::Term THEN
        IF TaxRegTermName.GET("Section Code",Expression) THEN
          IF (TaxRegTermName."Expression Type" <> TaxRegTermName."Expression Type"::Compare) AND
             ("Term Type" < "Term Type"::Compare)
          THEN
            IF TaxRegTermLine.GET("Section Code",Expression,"Term Line No.") THEN BEGIN
              TaxRegTermMgt.CopyTemplateDimFilters(TempDimBuf0,"Section Code","Tax Register No.","Template Line No.");
              NoGlobalDimFilterNeed := TaxRegTermMgt.SetDimFilters2GLEntry(TempGLEntryGlobalDimFilter,TempDimBuf0);
              IF NoGlobalDimFilterNeed THEN
                MESSAGE(Text1000);
              CASE TaxRegTermLine."Account Type" OF
                TaxRegTermLine."Account Type"::"GL Acc":
                  BEGIN
                    GLEntry.RESET;
                    IF TempGLEntryGlobalDimFilter.GETFILTERS = '' THEN BEGIN
                      GLEntry.SETCURRENTKEY("G/L Account No.","Posting Date");
                      GLEntry.SETFILTER("G/L Account No.",TaxRegTermLine."Account No.");
                      GLEntry.SETFILTER("Posting Date","Date Filter");
                    END ELSE BEGIN
                      GLEntry.SETCURRENTKEY(
                        "G/L Account No.","Business Unit Code",
                        "Global Dimension 1 Code","Global Dimension 2 Code");
                      GLEntry.SETFILTER("G/L Account No.",TaxRegTermLine."Account No.");
                      TempGLEntryGlobalDimFilter.COPYFILTER(
                        "Global Dimension 1 Code",GLEntry."Global Dimension 1 Code");
                      TempGLEntryGlobalDimFilter.COPYFILTER(
                        "Global Dimension 2 Code",GLEntry."Global Dimension 2 Code");
                    END;
                    GLEntry.SETFILTER("Posting Date","Date Filter");
                    IF TaxRegTermLine."Amount Type" = TaxRegTermLine."Amount Type"::Debit THEN
                      GLEntry.SETFILTER("Debit Amount",'<>%1',0);
                    IF TaxRegTermLine."Amount Type" = TaxRegTermLine."Amount Type"::Credit THEN
                      GLEntry.SETFILTER("Credit Amount",'<>%1',0);
                    PAGE.RUNMODAL(0,GLEntry);
                  END;
                TaxRegTermLine."Account Type"::"Net Change":
                  BEGIN
                    GLCorrespondEntry.RESET;
                    IF TempGLEntryGlobalDimFilter.GETFILTERS = '' THEN BEGIN
                      GLCorrespondEntry.SETCURRENTKEY("Debit Account No.","Credit Account No.");
                      GLCorrespondEntry.SETFILTER("Debit Account No.",TaxRegTermLine."Account No.");
                      GLCorrespondEntry.SETFILTER("Credit Account No.",TaxRegTermLine."Bal. Account No.");
                    END ELSE BEGIN
                      GLCorrespondEntry.SETCURRENTKEY(
                        "Debit Account No.","Credit Account No.",
                        "Debit Global Dimension 1 Code","Debit Global Dimension 2 Code",
                        "Business Unit Code","Posting Date");
                      GLCorrespondEntry.SETFILTER("Debit Account No.",TaxRegTermLine."Account No.");
                      GLCorrespondEntry.SETFILTER("Credit Account No.",TaxRegTermLine."Bal. Account No.");
                      TempGLEntryGlobalDimFilter.COPYFILTER(
                        "Global Dimension 1 Code",GLCorrespondEntry."Debit Global Dimension 1 Code");
                      TempGLEntryGlobalDimFilter.COPYFILTER(
                        "Global Dimension 2 Code",GLCorrespondEntry."Debit Global Dimension 2 Code");
                    END;
                    GLCorrespondEntry.SETFILTER("Posting Date","Date Filter");
                    PAGE.RUNMODAL(0,GLCorrespondEntry);
                  END;
              END;
            END;
      IF "Expression Type" = "Expression Type"::Total THEN BEGIN
        IF STRPOS("Date Filter",'..') > 0 THEN BEGIN
          IF NOT EVALUATE(TaxCalcAccumulation."Starting Date",COPYSTR("Date Filter",1,STRPOS("Date Filter",'..') - 1)) THEN
            EXIT;
          IF NOT EVALUATE(TaxCalcAccumulation."Ending Date",COPYSTR("Date Filter",STRPOS("Date Filter",'..') + 2)) THEN
            EXIT;
        END ELSE BEGIN
          IF NOT EVALUATE(TaxCalcAccumulation."Ending Date","Date Filter") THEN
            EXIT;
          TaxCalcAccumulation."Starting Date" := 0D;
        END;
        TaxCalcAccumulation."Template Line No." := "Template Line No.";
        TaxCalcAccumulation."Register No." := "Tax Register No.";
        TaxCalcAccumulation."Section Code" := "Section Code";
        TaxCalcAccumulation.SETRANGE("Date Filter",TaxCalcAccumulation."Starting Date",TaxCalcAccumulation."Ending Date");
        TaxCalcAccumulation.DrillDownAmount;
      END;
    END;

    BEGIN
    END.
  }
}

