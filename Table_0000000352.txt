OBJECT Table 352 Default Dimension
{
  OBJECT-PROPERTIES
  {
    Date=11.07.17;
    Time=13:20:27;
    Modified=Yes;
    Version List=NAVW110.00,NAVRU10.00,NOS-26;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    OnInsert=BEGIN
               GLSetup.GET;
               IF "Dimension Code" = GLSetup."Global Dimension 1 Code" THEN
                 UpdateGlobalDimCode(1,"Table ID","No.","Dimension Value Code");
               IF "Dimension Code" = GLSetup."Global Dimension 2 Code" THEN
                 UpdateGlobalDimCode(2,"Table ID","No.","Dimension Value Code");
               DimMgt.DefaultDimOnInsert(Rec);

               //NC PIF001.1 > DP
               FillLinkedDimensions("Table ID","No.","Dimension Code","Dimension Value Code");
               MovingDataSetup.GET;
               IF (MovingDataSetup."FI Dimension Code" <> '') AND ("Table ID" = 15) AND ("Dimension Code" = MovingDataSetup."FI Dimension Code")
                  AND ("Value Posting" IN ["Value Posting"::"Code Mandatory", "Value Posting"::"Same Code"])
               THEN BEGIN
                 IF GLAccount.GET("No.") THEN BEGIN
                   GLAccount."FI Required" := TRUE;
                   GLAccount.MODIFY;
                 END;
               END;
               //NC PIF001.1 < DP
             END;

    OnModify=BEGIN
               GLSetup.GET;
               IF "Dimension Code" = GLSetup."Global Dimension 1 Code" THEN
                 UpdateGlobalDimCode(1,"Table ID","No.","Dimension Value Code");
               IF "Dimension Code" = GLSetup."Global Dimension 2 Code" THEN
                 UpdateGlobalDimCode(2,"Table ID","No.","Dimension Value Code");
               DimMgt.DefaultDimOnModify(Rec);

               //NC PIF001.1 > DP
               FillLinkedDimensions("Table ID","No.","Dimension Code","Dimension Value Code");
               MovingDataSetup.GET;
               IF (MovingDataSetup."FI Dimension Code" <> '') AND ("Table ID" = 15) AND ("Dimension Code" = MovingDataSetup."FI Dimension Code")
                  AND ("Value Posting" IN ["Value Posting"::"Code Mandatory", "Value Posting"::"Same Code"])
               THEN BEGIN
                 IF GLAccount.GET("No.") THEN BEGIN
                   GLAccount."FI Required" := TRUE;
                   GLAccount.MODIFY;
                 END;
               END;
               //NC PIF001.1 < DP

               //NC NCS-2379 > DP
               IF "Value Posting" IN ["Value Posting"::"Code Mandatory","Value Posting"::"Same Code"] THEN BEGIN

                 //NC NCS-2379.1 > DP
                 IF "Exclude from FX Reval" THEN
                   TESTFIELD("FX Reval. Value Code");
                 //NC NCS-2379.1 < DP

                 IF "Exclude from ACY Reval" THEN
                   TESTFIELD("ACY Reval. Value Code");
               END;
               //NC NCS-2379 < DP
             END;

    OnDelete=BEGIN
               GLSetup.GET;
               IF "Dimension Code" = GLSetup."Global Dimension 1 Code" THEN
                 UpdateGlobalDimCode(1,"Table ID","No.",'');
               IF "Dimension Code" = GLSetup."Global Dimension 2 Code" THEN
                 UpdateGlobalDimCode(2,"Table ID","No.",'');
               DimMgt.DefaultDimOnDelete(Rec);

               //NC PIF001.1 > MP
               MovingDataSetup.GET;
               IF (MovingDataSetup."FI Dimension Code" <> '') AND ("Table ID" = 15) AND ("Dimension Code" = MovingDataSetup."FI Dimension Code")
                  AND ("Value Posting" IN ["Value Posting"::"Code Mandatory", "Value Posting"::"Same Code"])
               THEN BEGIN
                 IF GLAccount.GET("No.") THEN BEGIN
                   GLAccount."FI Required" := FALSE;
                   GLAccount.MODIFY;
                 END;
               END;
               //NC PIF001.1 < MP
             END;

    OnRename=BEGIN
               //ERROR(Text000,TABLECAPTION);
             END;

    CaptionML=[ENU=Default Dimension;
               RUS=Измерение по умолчанию];
  }
  FIELDS
  {
    { 1   ;   ;Table ID            ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(Table));
                                                   OnValidate=VAR
                                                                TempAllObjWithCaption@1000 : TEMPORARY Record 2000000058;
                                                              BEGIN
                                                                CALCFIELDS("Table Caption");
                                                                DimMgt.SetupObjectNoList(TempAllObjWithCaption);
                                                                TempAllObjWithCaption."Object Type" := TempAllObjWithCaption."Object Type"::Table;
                                                                TempAllObjWithCaption."Object ID" := "Table ID";
                                                                IF NOT TempAllObjWithCaption.FIND THEN
                                                                  FIELDERROR("Table ID");
                                                              END;

                                                   OnLookup=VAR
                                                              TempAllObjWithCaption@1000 : TEMPORARY Record 2000000058;
                                                            BEGIN
                                                              CLEAR(TempAllObjWithCaption);
                                                              DimMgt.SetupObjectNoList(TempAllObjWithCaption);
                                                              IF PAGE.RUNMODAL(PAGE::Objects,TempAllObjWithCaption) = ACTION::LookupOK THEN BEGIN
                                                                "Table ID" := TempAllObjWithCaption."Object ID";
                                                                VALIDATE("Table ID");
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Table ID;
                                                              RUS=Код таблицы];
                                                   NotBlank=Yes }
    { 2   ;   ;No.                 ;Code20        ;TableRelation=IF (Table ID=CONST(13)) Salesperson/Purchaser
                                                                 ELSE IF (Table ID=CONST(15)) "G/L Account"
                                                                 ELSE IF (Table ID=CONST(18)) Customer
                                                                 ELSE IF (Table ID=CONST(23)) Vendor
                                                                 ELSE IF (Table ID=CONST(27)) Item
                                                                 ELSE IF (Table ID=CONST(152)) "Resource Group"
                                                                 ELSE IF (Table ID=CONST(156)) Resource
                                                                 ELSE IF (Table ID=CONST(167)) Job
                                                                 ELSE IF (Table ID=CONST(270)) "Bank Account"
                                                                 ELSE IF (Table ID=CONST(413)) "IC Partner"
                                                                 ELSE IF (Table ID=CONST(5071)) Campaign
                                                                 ELSE IF (Table ID=CONST(5200)) Employee
                                                                 ELSE IF (Table ID=CONST(5600)) "Fixed Asset"
                                                                 ELSE IF (Table ID=CONST(5628)) Insurance
                                                                 ELSE IF (Table ID=CONST(5903)) "Service Order Type"
                                                                 ELSE IF (Table ID=CONST(5904)) "Service Item Group"
                                                                 ELSE IF (Table ID=CONST(5940)) "Service Item"
                                                                 ELSE IF (Table ID=CONST(5714)) "Responsibility Center"
                                                                 ELSE IF (Table ID=CONST(5800)) "Item Charge"
                                                                 ELSE IF (Table ID=CONST(99000754)) "Work Center"
                                                                 ELSE IF (Table ID=CONST(5105)) "Customer Template";
                                                   CaptionML=[ENU=No.;
                                                              RUS=Номер] }
    { 3   ;   ;Dimension Code      ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                IF NOT DimMgt.CheckDim("Dimension Code") THEN
                                                                  ERROR(DimMgt.GetDimErr);
                                                              END;

                                                   CaptionML=[ENU=Dimension Code;
                                                              RUS=Код измерения];
                                                   NotBlank=Yes }
    { 4   ;   ;Dimension Value Code;Code20        ;TableRelation="Dimension Value".Code WHERE (Dimension Code=FIELD(Dimension Code));
                                                   OnValidate=BEGIN
                                                                IF NOT DimMgt.CheckDimValue("Dimension Code","Dimension Value Code") THEN
                                                                  ERROR(DimMgt.GetDimErr);
                                                                IF "Value Posting" = "Value Posting"::"No Code" THEN
                                                                  TESTFIELD("Dimension Value Code",'');
                                                              END;

                                                   CaptionML=[ENU=Dimension Value Code;
                                                              RUS=Код значения измерения] }
    { 5   ;   ;Value Posting       ;Option        ;OnValidate=BEGIN
                                                                IF "Value Posting" = "Value Posting"::"No Code" THEN
                                                                  TESTFIELD("Dimension Value Code",'');
                                                              END;

                                                   CaptionML=[ENU=Value Posting;
                                                              RUS=Учет значения];
                                                   OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                                                    RUS=" ,Обязательный код,Единый код,Нет кода"];
                                                   OptionString=[ ,Code Mandatory,Same Code,No Code] }
    { 6   ;   ;Table Caption       ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Table),
                                                                                                                Object ID=FIELD(Table ID)));
                                                   CaptionML=[ENU=Table Caption;
                                                              RUS=Метка таблицы];
                                                   Editable=No }
    { 7   ;   ;Multi Selection Action;Option      ;CaptionML=[ENU=Multi Selection Action;
                                                              RUS=Действие множественного выбора];
                                                   OptionCaptionML=[ENU=" ,Change,Delete";
                                                                    RUS=" ,Изменить,Удалить"];
                                                   OptionString=[ ,Change,Delete] }
    { 50001;  ;Exclude from FX Reval;Boolean      ;OnValidate=BEGIN
                                                                //NC NCS-2379.1 > DP
                                                                IF NOT "Exclude from FX Reval" THEN
                                                                  "FX Reval. Value Code" :='';
                                                                //NC NCS-2379.1 < DP
                                                              END;

                                                   CaptionML=[ENU=Exclude from FX Reval;
                                                              RUS=Исключить из FX Переоценки];
                                                   Description=NC NCS-2379.1 DP }
    { 50002;  ;FX Reval. Value Code;Code20        ;TableRelation="Dimension Value".Code WHERE (Dimension Code=FIELD(Dimension Code));
                                                   OnValidate=BEGIN
                                                                //NC NCS-2379.1 > DP
                                                                TESTFIELD("Exclude from FX Reval",TRUE);
                                                                //NC NCS-2379.1 < DP
                                                              END;

                                                   CaptionML=[ENU=FX Reval. Value Code;
                                                              RUS=FX Переоценка Значение Код];
                                                   Description=NC NCS-2379.1 DP }
    { 50003;  ;Exclude from ACY Reval;Boolean     ;OnValidate=BEGIN
                                                                //NC NCS-2379 > DP
                                                                IF NOT "Exclude from ACY Reval" THEN
                                                                  "ACY Reval. Value Code" :='';
                                                                //NC NCS-2379 < DP
                                                              END;

                                                   CaptionML=[ENU=Exclude from ACY Reval;
                                                              RUS=Исключить из ДОВ Переоценки];
                                                   Description=NC NCS-2379 DP }
    { 50004;  ;ACY Reval. Value Code;Code20       ;TableRelation="Dimension Value".Code WHERE (Dimension Code=FIELD(Dimension Code));
                                                   OnValidate=BEGIN
                                                                //NC NCS-2379 > DP
                                                                TESTFIELD("Exclude from ACY Reval",TRUE);
                                                                //NC NCS-2379 < DP
                                                              END;

                                                   CaptionML=[ENU=ACY Reval. Value Code;
                                                              RUS=ДОВ Переоценка Значение Код];
                                                   Description=NC NCS-2379 DP }
    { 50005;  ;Close Inc. Statement Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Dimension Code=FIELD(Dimension Code));
                                                   CaptionML=[ENU=Close Inc. Statement Value Code;
                                                              RUS=Фин. Год Закрытие Значение Код];
                                                   Description=NC NCS-2414 DP }
  }
  KEYS
  {
    {    ;Table ID,No.,Dimension Code             ;Clustered=Yes }
    {    ;Dimension Code                           }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You can''t rename a %1.;RUS=Нельзя переименовать %1.';
      GLSetup@1001 : Record 98;
      DimMgt@1002 : Codeunit 408;
      "NCV>"@1101495002 : Integer;
      MovingDataSetup@1101495001 : Record 50064;
      GLAccount@1101495000 : Record 15;

    PROCEDURE GetCaption@3() : Text[250];
    VAR
      ObjTransl@1000 : Record 377;
      CurrTableID@1001 : Integer;
      NewTableID@1002 : Integer;
      NewNo@1003 : Code[20];
      SourceTableName@1004 : Text[100];
    BEGIN
      IF NOT EVALUATE(NewTableID,GETFILTER("Table ID")) THEN
        EXIT('');

      IF NewTableID = 0 THEN
        IF GETRANGEMIN("Table ID") = GETRANGEMAX("Table ID") THEN
          NewTableID := GETRANGEMIN("Table ID")
        ELSE
          NewTableID := 0;

      IF NewTableID <> CurrTableID THEN
        SourceTableName := ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,NewTableID);
      CurrTableID := NewTableID;

      IF GETFILTER("No.") <> '' THEN
        IF GETRANGEMIN("No.") = GETRANGEMAX("No.") THEN
          NewNo := GETRANGEMIN("No.")
        ELSE
          NewNo := '';

      IF NewTableID <> 0 THEN
        EXIT(STRSUBSTNO('%1 %2',SourceTableName,NewNo));

      EXIT('');
    END;

    LOCAL PROCEDURE UpdateGlobalDimCode@25(GlobalDimCodeNo@1000 : Integer;TableID@1001 : Integer;AccNo@1002 : Code[20];NewDimValue@1003 : Code[20]);
    BEGIN
      CASE TableID OF
        DATABASE::"G/L Account":
          UpdateGLAccGLobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::Customer:
          UpdateCustGLobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::Vendor:
          UpdateVendGLobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::Item:
          UpdateItemGLobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::"Resource Group":
          UpdateResGrGLobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::Resource:
          UpdateResGLobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::Job:
          UpdateJobGLobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::"Bank Account":
          UpdateBankGLobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::Employee:
          UpdateEmpoyeeGLobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::"Fixed Asset":
          UpdateFAGLobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::Insurance:
          UpdateInsuranceGLobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::"Responsibility Center":
          UpdateRespCenterGLobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::"Work Center":
          UpdateWorkCenterGLobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::"Salesperson/Purchaser":
          UpdateSalesPurchGLobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::Campaign:
          UpdateCampaignGLobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::"Customer Template":
          UpdateCustTempGLobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::"Cash Flow Manual Expense":
          UpdateNeutrPayGLobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::"Cash Flow Manual Revenue":
          UpdateNeutrRevGLobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::"FA Charge":
          UpdateFAChargeGLobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::"Customer Agreement":
          UpdateCustAgrmtGLobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
        DATABASE::"Vendor Agreement":
          UpdateVendAgrmtGLobalDimCode(GlobalDimCodeNo,AccNo,NewDimValue);
      END;
    END;

    LOCAL PROCEDURE UpdateGLAccGLobalDimCode@26(GlobalDimCodeNo@1003 : Integer;GLAccNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      GLAcc@1004 : Record 15;
    BEGIN
      IF GLAcc.GET(GLAccNo) THEN BEGIN
        CASE GlobalDimCodeNo OF
          1:
            GLAcc."Global Dimension 1 Code" := NewDimValue;
          2:
            GLAcc."Global Dimension 2 Code" := NewDimValue;
        END;
        GLAcc.MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE UpdateCustGLobalDimCode@27(GlobalDimCodeNo@1003 : Integer;CustNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      Cust@1004 : Record 18;
    BEGIN
      IF Cust.GET(CustNo) THEN BEGIN
        CASE GlobalDimCodeNo OF
          1:
            Cust."Global Dimension 1 Code" := NewDimValue;
          2:
            Cust."Global Dimension 2 Code" := NewDimValue;
        END;
        Cust.MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE UpdateVendGLobalDimCode@28(GlobalDimCodeNo@1003 : Integer;VendNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      Vend@1004 : Record 23;
    BEGIN
      IF Vend.GET(VendNo) THEN BEGIN
        CASE GlobalDimCodeNo OF
          1:
            Vend."Global Dimension 1 Code" := NewDimValue;
          2:
            Vend."Global Dimension 2 Code" := NewDimValue;
        END;
        Vend.MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE UpdateItemGLobalDimCode@29(GlobalDimCodeNo@1003 : Integer;ItemNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      Item@1004 : Record 27;
    BEGIN
      IF Item.GET(ItemNo) THEN BEGIN
        CASE GlobalDimCodeNo OF
          1:
            Item."Global Dimension 1 Code" := NewDimValue;
          2:
            Item."Global Dimension 2 Code" := NewDimValue;
        END;
        Item.MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE UpdateResGrGLobalDimCode@30(GlobalDimCodeNo@1003 : Integer;ResGrNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      ResGr@1004 : Record 152;
    BEGIN
      IF ResGr.GET(ResGrNo) THEN BEGIN
        CASE GlobalDimCodeNo OF
          1:
            ResGr."Global Dimension 1 Code" := NewDimValue;
          2:
            ResGr."Global Dimension 2 Code" := NewDimValue;
        END;
        ResGr.MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE UpdateResGLobalDimCode@31(GlobalDimCodeNo@1003 : Integer;ResNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      Res@1004 : Record 156;
    BEGIN
      IF Res.GET(ResNo) THEN BEGIN
        CASE GlobalDimCodeNo OF
          1:
            Res."Global Dimension 1 Code" := NewDimValue;
          2:
            Res."Global Dimension 2 Code" := NewDimValue;
        END;
        Res.MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE UpdateJobGLobalDimCode@32(GlobalDimCodeNo@1003 : Integer;JobNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      Job@1004 : Record 167;
    BEGIN
      IF Job.GET(JobNo) THEN BEGIN
        CASE GlobalDimCodeNo OF
          1:
            Job."Global Dimension 1 Code" := NewDimValue;
          2:
            Job."Global Dimension 2 Code" := NewDimValue;
        END;
        Job.MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE UpdateBankGLobalDimCode@33(GlobalDimCodeNo@1003 : Integer;BankAccNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      BankAcc@1004 : Record 270;
    BEGIN
      IF BankAcc.GET(BankAccNo) THEN BEGIN
        CASE GlobalDimCodeNo OF
          1:
            BankAcc."Global Dimension 1 Code" := NewDimValue;
          2:
            BankAcc."Global Dimension 2 Code" := NewDimValue;
        END;
        BankAcc.MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE UpdateEmpoyeeGLobalDimCode@34(GlobalDimCodeNo@1003 : Integer;EmployeeNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      Employee@1004 : Record 5200;
    BEGIN
      IF Employee.GET(EmployeeNo) THEN BEGIN
        CASE GlobalDimCodeNo OF
          1:
            Employee."Global Dimension 1 Code" := NewDimValue;
          2:
            Employee."Global Dimension 2 Code" := NewDimValue;
        END;
        Employee.MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE UpdateFAGLobalDimCode@35(GlobalDimCodeNo@1003 : Integer;FANo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      FA@1004 : Record 5600;
    BEGIN
      IF FA.GET(FANo) THEN BEGIN
        CASE GlobalDimCodeNo OF
          1:
            FA."Global Dimension 1 Code" := NewDimValue;
          2:
            FA."Global Dimension 2 Code" := NewDimValue;
        END;
        FA.MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE UpdateInsuranceGLobalDimCode@36(GlobalDimCodeNo@1003 : Integer;InsuranceNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      Insurance@1004 : Record 5628;
    BEGIN
      IF Insurance.GET(InsuranceNo) THEN BEGIN
        CASE GlobalDimCodeNo OF
          1:
            Insurance."Global Dimension 1 Code" := NewDimValue;
          2:
            Insurance."Global Dimension 2 Code" := NewDimValue;
        END;
        Insurance.MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE UpdateRespCenterGLobalDimCode@37(GlobalDimCodeNo@1003 : Integer;RespCenterNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      RespCenter@1004 : Record 5714;
    BEGIN
      IF RespCenter.GET(RespCenterNo) THEN BEGIN
        CASE GlobalDimCodeNo OF
          1:
            RespCenter."Global Dimension 1 Code" := NewDimValue;
          2:
            RespCenter."Global Dimension 2 Code" := NewDimValue;
        END;
        RespCenter.MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE UpdateWorkCenterGLobalDimCode@38(GlobalDimCodeNo@1003 : Integer;WorkCenterNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      WorkCenter@1004 : Record 99000754;
    BEGIN
      IF WorkCenter.GET(WorkCenterNo) THEN BEGIN
        CASE GlobalDimCodeNo OF
          1:
            WorkCenter."Global Dimension 1 Code" := NewDimValue;
          2:
            WorkCenter."Global Dimension 2 Code" := NewDimValue;
        END;
        WorkCenter.MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE UpdateSalesPurchGLobalDimCode@39(GlobalDimCodeNo@1003 : Integer;SalespersonPurchaserNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      SalespersonPurchaser@1004 : Record 13;
    BEGIN
      IF SalespersonPurchaser.GET(SalespersonPurchaserNo) THEN BEGIN
        CASE GlobalDimCodeNo OF
          1:
            SalespersonPurchaser."Global Dimension 1 Code" := NewDimValue;
          2:
            SalespersonPurchaser."Global Dimension 2 Code" := NewDimValue;
        END;
        SalespersonPurchaser.MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE UpdateCampaignGLobalDimCode@40(GlobalDimCodeNo@1003 : Integer;CampaignNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      Campaign@1004 : Record 5071;
    BEGIN
      IF Campaign.GET(CampaignNo) THEN BEGIN
        CASE GlobalDimCodeNo OF
          1:
            Campaign."Global Dimension 1 Code" := NewDimValue;
          2:
            Campaign."Global Dimension 2 Code" := NewDimValue;
        END;
        Campaign.MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE UpdateCustTempGLobalDimCode@41(GlobalDimCodeNo@1003 : Integer;CustTemplateNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      CustTemplate@1004 : Record 5105;
    BEGIN
      IF CustTemplate.GET(CustTemplateNo) THEN BEGIN
        CASE GlobalDimCodeNo OF
          1:
            CustTemplate."Global Dimension 1 Code" := NewDimValue;
          2:
            CustTemplate."Global Dimension 2 Code" := NewDimValue;
        END;
        CustTemplate.MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE UpdateNeutrPayGLobalDimCode@42(GlobalDimCodeNo@1003 : Integer;CFManualExpenseNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      CFManualExpense@1004 : Record 850;
    BEGIN
      IF CFManualExpense.GET(CFManualExpenseNo) THEN BEGIN
        CASE GlobalDimCodeNo OF
          1:
            CFManualExpense."Global Dimension 1 Code" := NewDimValue;
          2:
            CFManualExpense."Global Dimension 2 Code" := NewDimValue;
        END;
        CFManualExpense.MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE UpdateNeutrRevGLobalDimCode@43(GlobalDimCodeNo@1003 : Integer;CFManualRevenueNo@1001 : Code[20];NewDimValue@1000 : Code[20]);
    VAR
      CFManualRevenue@1004 : Record 849;
    BEGIN
      IF CFManualRevenue.GET(CFManualRevenueNo) THEN BEGIN
        CASE GlobalDimCodeNo OF
          1:
            CFManualRevenue."Global Dimension 1 Code" := NewDimValue;
          2:
            CFManualRevenue."Global Dimension 2 Code" := NewDimValue;
        END;
        CFManualRevenue.MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE UpdateFAChargeGLobalDimCode@1210001(GlobalDimCodeNo@1210003 : Integer;FAChargeNo@1210001 : Code[20];NewDimValue@1210000 : Code[20]);
    VAR
      FACharge@1210004 : Record 14907;
    BEGIN
      IF FACharge.GET(FAChargeNo) THEN BEGIN
        CASE GlobalDimCodeNo OF
          1:
            FACharge."Global Dimension 1 Code" := NewDimValue;
          2:
            FACharge."Global Dimension 2 Code" := NewDimValue;
        END;
        FACharge.MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE UpdateCustAgrmtGLobalDimCode@1210002(GlobalDimCodeNo@1210003 : Integer;AgrmtNo@1210001 : Code[20];NewDimValue@1210000 : Code[20]);
    VAR
      CustAgrmt@1210004 : Record 14902;
    BEGIN
      CustAgrmt.RESET;
      CustAgrmt.SETCURRENTKEY("No.");
      CustAgrmt.SETRANGE("No.",AgrmtNo);
      IF CustAgrmt.FINDFIRST THEN BEGIN
        CASE GlobalDimCodeNo OF
          1:
            CustAgrmt."Global Dimension 1 Code" := NewDimValue;
          2:
            CustAgrmt."Global Dimension 2 Code" := NewDimValue;
        END;
        CustAgrmt.MODIFY(TRUE);
      END;
    END;

    LOCAL PROCEDURE UpdateVendAgrmtGLobalDimCode@1210003(GlobalDimCodeNo@1210003 : Integer;AgrmtNo@1210001 : Code[20];NewDimValue@1210000 : Code[20]);
    VAR
      VendAgrmt@1210004 : Record 14901;
    BEGIN
      VendAgrmt.RESET;
      VendAgrmt.SETCURRENTKEY("No.");
      VendAgrmt.SETRANGE("No.",AgrmtNo);
      IF VendAgrmt.FINDFIRST THEN BEGIN
        CASE GlobalDimCodeNo OF
          1:
            VendAgrmt."Global Dimension 1 Code" := NewDimValue;
          2:
            VendAgrmt."Global Dimension 2 Code" := NewDimValue;
        END;
        VendAgrmt.MODIFY(TRUE);
      END;
    END;

    PROCEDURE FillLinkedDimensions@1000000000(TableID@1000000000 : Integer;No@1000000001 : Code[20];DimCode@1000000002 : Code[20];DimValue@1000000003 : Code[20]) i : Integer;
    VAR
      DimensionLinkedValues@1000000004 : Record 50016;
      DefDimension@1210000 : Record 352;
    BEGIN
      //NC PIF001.1 > DP
      // Add linked dimensions
      DimensionLinkedValues.SETRANGE("Dimension Code", DimCode);
      DimensionLinkedValues.SETRANGE("Dimension Value", DimValue);
      DimensionLinkedValues.SETFILTER(Blocked, '%1', FALSE);
      DimensionLinkedValues.SETFILTER("Value Selection", '%1', TRUE);
      IF DimensionLinkedValues.FIND('-') THEN
        REPEAT
          DefDimension.SETRANGE("Table ID", TableID);
          DefDimension.SETRANGE("No.", No);
          DefDimension.SETRANGE("Dimension Code", DimensionLinkedValues."Linked Dimension Code");
          IF DimensionLinkedValues."Linked Dimension Value" <> '' THEN
            DefDimension.SETRANGE("Dimension Value Code", DimensionLinkedValues."Linked Dimension Value");
          IF NOT DefDimension.FIND('-') THEN BEGIN
            DefDimension.INIT;
            DefDimension."Table ID" := TableID;
            DefDimension."No." := No;
            DefDimension."Dimension Code" := DimensionLinkedValues."Linked Dimension Code";
            IF DimensionLinkedValues."Linked Dimension Value" <> '' THEN
              DefDimension."Dimension Value Code" := DimensionLinkedValues."Linked Dimension Value";
            IF DefDimension.INSERT THEN
              IF DefDimension."Dimension Value Code" <> '' THEN BEGIN
                GLSetup.GET;
                IF DefDimension."Dimension Code" = GLSetup."Global Dimension 1 Code" THEN
                  UpdateGlobalDimCode(1, TableID, No, DefDimension."Dimension Value Code");
                IF DefDimension."Dimension Code" = GLSetup."Global Dimension 2 Code" THEN
                  UpdateGlobalDimCode(2, TableID, No, DefDimension."Dimension Value Code");
              END;
          END;
        UNTIL DimensionLinkedValues.NEXT=0;
      //NC PIF001.1 < DP
    END;

    BEGIN
    {
      NC PIF001.1 DP Linked Dimension Value
      NC NCS-2379 DP Added fields "Exclude from ACY Reval", "ACY Reval. Value Code"
      NC NCS-2379.1 DP Added fields "Exclude from FX Reval", "FX Reval. Value Code", changed trigger OnModify
      NC NCS-2414 DP added field "Close Inc. Statement Code"
    }
    END.
  }
}

