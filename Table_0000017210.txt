OBJECT Table 17210 Tax Register CV Entry
{
  OBJECT-PROPERTIES
  {
    Date=09.09.14;
    Time=12:00:00;
    Version List=NAVRU8.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Tax Register CV Entry;
               RUS=Операция по КП налогового регистра];
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              RUS=Номер операции] }
    { 2   ;   ;Section Code        ;Code10        ;TableRelation="Tax Register Section";
                                                   CaptionML=[ENU=Section Code;
                                                              RUS=Код секции] }
    { 3   ;   ;C/V No.             ;Code20        ;TableRelation=IF (Object Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Object Type=CONST(Customer)) Customer;
                                                   CaptionML=[ENU=C/V No.;
                                                              RUS=Номер К/П] }
    { 4   ;   ;Starting Date       ;Date          ;CaptionML=[ENU=Starting Date;
                                                              RUS=Дата начала];
                                                   Editable=No }
    { 5   ;   ;Ending Date         ;Date          ;CaptionML=[ENU=Ending Date;
                                                              RUS=Дата окончания];
                                                   Editable=No }
    { 17  ;   ;Register Type       ;Option        ;CaptionML=[ENU=Register Type;
                                                              RUS=Тип регистра];
                                                   OptionCaptionML=[ENU=" ,Credit Balance,Debit Balance";
                                                                    RUS=" ,Кредиторская задолженность,Дебиторская задолженность"];
                                                   OptionString=[ ,Credit Balance,Debit Balance] }
    { 38  ;   ;Where Used Register IDs;Code61     ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Where Used Register IDs;
                                                              RUS=Коды регистра применимости];
                                                   Editable=No }
    { 50  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              RUS=Фильтр по дате] }
    { 111 ;   ;Object Type         ;Option        ;CaptionML=[ENU=Object Type;
                                                              RUS=Тип объекта];
                                                   OptionCaptionML=[ENU=" ,Vendor,Customer";
                                                                    RUS=" ,Поставщик,Клиент"];
                                                   OptionString=[ ,Vendor,Customer] }
    { 179 ;   ;CV Debit Balance Amnt 2-4;Decimal  ;CaptionML=[ENU=CV Debit Balance Amnt 2-4;
                                                              RUS=Всего (сомн. и безнад.)];
                                                   BlankZero=Yes }
    { 180 ;   ;CV Credit Balance Amnt 1;Decimal   ;CaptionML=[ENU=CV Credit Balance Amnt 1;
                                                              RUS=Всего (кр.)];
                                                   BlankZero=Yes }
    { 181 ;   ;CV Credit Balance Amnt 2;Decimal   ;CaptionML=[ENU=CV Credit Balance Amnt 2;
                                                              RUS=> 3 лет (кр.)];
                                                   BlankZero=Yes }
    { 182 ;   ;CV Debit Balance Amnt 1;Decimal    ;CaptionML=[ENU=CV Debit Balance Amnt 1;
                                                              RUS=Всего (дб.)];
                                                   BlankZero=Yes }
    { 183 ;   ;CV Debit Balance Amnt 2;Decimal    ;CaptionML=[ENU=CV Debit Balance Amnt 2;
                                                              RUS=45 - 90 дн.];
                                                   BlankZero=Yes }
    { 184 ;   ;CV Debit Balance Amnt 3;Decimal    ;CaptionML=[ENU=CV Debit Balance Amnt 3;
                                                              RUS=90 дн.- 3 г.];
                                                   BlankZero=Yes }
    { 185 ;   ;CV Debit Balance Amnt 4;Decimal    ;CaptionML=[ENU=CV Debit Balance Amnt 4;
                                                              RUS=> 3 лет (дб.)];
                                                   BlankZero=Yes }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Section Code,Ending Date,Object Type     }
    {    ;Section Code,Starting Date,Object Type   }
    {    ;Section Code,Register Type,Ending Date   }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      TaxRegMgt@1000 : Codeunit 17201;

    PROCEDURE ObjectName@1() : Text[100];
    VAR
      Cust@1000 : Record 18;
      Vend@1001 : Record 23;
    BEGIN
      CASE "Object Type" OF
        "Object Type"::Customer:
          IF Cust.GET("C/V No.") THEN
            EXIT(Cust.Name);
        "Object Type"::Vendor:
          IF Vend.GET("C/V No.") THEN
            EXIT(Vend.Name);
      END;
    END;

    PROCEDURE SetFieldFilter@2(FieldNumber@1000 : Integer) FieldInList : Boolean;
    BEGIN
      FieldInList :=
        FieldNumber IN [
                        FIELDNO("CV Credit Balance Amnt 1"),
                        FIELDNO("CV Credit Balance Amnt 2"),
                        FIELDNO("CV Debit Balance Amnt 1"),
                        FIELDNO("CV Debit Balance Amnt 2-4"),
                        FIELDNO("CV Debit Balance Amnt 2"),
                        FIELDNO("CV Debit Balance Amnt 3"),
                        FIELDNO("CV Debit Balance Amnt 4")
                        ];
    END;

    PROCEDURE FormTitle@3() : Text[250];
    VAR
      TaxRegName@1000 : Record 17200;
    BEGIN
      FILTERGROUP(2);
      TaxRegName.SETRANGE("Section Code","Section Code");
      TaxRegName.SETFILTER("Register ID",DELCHR(GETFILTER("Where Used Register IDs"),'=','~'));
      FILTERGROUP(0);
      IF TaxRegName.FIND('-') THEN
        IF TaxRegName.NEXT = 0 THEN
          EXIT(TaxRegName.Description);
    END;

    PROCEDURE DrillDownCVLedgerAmount@4(FilterDueDate@1000 : Text[30];PositiveEntry@1001 : Boolean;OnlyOpen@1002 : Boolean);
    VAR
      VendLedgEntry@1003 : Record 25;
      CustLedgEntry@1004 : Record 21;
      TaxCustomerLedgerEntries@1005 : Page 17243;
      TaxVendorLedgerEntries@1006 : Page 17244;
    BEGIN
      CASE "Object Type" OF
        "Object Type"::Vendor:
          BEGIN
            CLEAR(TaxVendorLedgerEntries);
            IF OnlyOpen THEN BEGIN
              VendLedgEntry.RESET;
              VendLedgEntry.SETCURRENTKEY("Vendor No.",Open,Positive,"Due Date");
              VendLedgEntry.SETRANGE("Vendor No.","C/V No.");
              VendLedgEntry.SETRANGE(Positive,PositiveEntry);
              VendLedgEntry.SETFILTER("Due Date",FilterDueDate);
              VendLedgEntry.SETFILTER("Date Filter",GETFILTER("Date Filter"));
              VendLedgEntry.SETFILTER("Remaining Amt. (LCY)",'<>0');
              TaxVendorLedgerEntries.SETTABLEVIEW(VendLedgEntry);
            END ELSE
              TaxVendorLedgerEntries.BuildTmpVendLedgerEntry(
                "C/V No.",CALCDATE('<-CY>',GETRANGEMAX("Date Filter")),GETRANGEMAX("Date Filter"),FilterDueDate,PositiveEntry);
            TaxVendorLedgerEntries.RUNMODAL;
          END;
        "Object Type"::Customer:
          BEGIN
            CLEAR(TaxCustomerLedgerEntries);
            IF OnlyOpen THEN BEGIN
              CustLedgEntry.RESET;
              CustLedgEntry.SETCURRENTKEY("Customer No.",Open,Positive,"Due Date");
              CustLedgEntry.SETRANGE("Customer No.","C/V No.");
              CustLedgEntry.SETRANGE(Positive,PositiveEntry);
              CustLedgEntry.SETFILTER("Due Date",FilterDueDate);
              CustLedgEntry.SETFILTER("Date Filter",GETFILTER("Date Filter"));
              CustLedgEntry.SETFILTER("Remaining Amt. (LCY)",'<>0');
              TaxCustomerLedgerEntries.SETTABLEVIEW(CustLedgEntry);
            END ELSE
              TaxCustomerLedgerEntries.BuildTmpCustLedgerEntry(
                "C/V No.",CALCDATE('<-CY>',GETRANGEMAX("Date Filter")),GETRANGEMAX("Date Filter"),FilterDueDate,PositiveEntry);
            TaxCustomerLedgerEntries.RUNMODAL;
          END;
      END;
    END;

    BEGIN
    END.
  }
}

