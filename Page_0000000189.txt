OBJECT Page 189 Incoming Document
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Incoming Document;
               RUS=Входящий документ];
    SourceTable=Table130;
    PageType=Document;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Release,Status,Incoming Document,OCR,Approve,Request Approval;
                                RUS=Создать,Обработать,Отчет,Выпустить,Статус,Входящий документ,OCR,Утвердить,Запросить утверждение];
    OnInit=BEGIN
             IsDataExchTypeEditable := TRUE;
             EnableReceiveFromOCR := WaitingToReceiveFromOCR;
           END;

    OnOpenPage=BEGIN
                 HasCamera := CameraProvider.IsAvailable;
                 IF HasCamera THEN
                   CameraProvider := CameraProvider.Create;
               END;

    OnAfterGetRecord=BEGIN
                       URL := GetURL;
                       ShowErrors;
                       EnableReceiveFromOCR := WaitingToReceiveFromOCR;
                       CurrPage.EDITABLE(NOT Processed);
                     END;

    OnNewRecord=BEGIN
                  URL := '';
                END;

    OnInsertRecord=BEGIN
                     AttachEnabled := TRUE;
                   END;

    OnModifyRecord=VAR
                     IncomingDocumentAttachment@1000 : Record 133;
                   BEGIN
                     OCRDataCorrectionEnabled := GetGeneratedFromOCRAttachment(IncomingDocumentAttachment);
                     RecordHasAttachment := AttachmentFileName <> '';
                   END;

    OnAfterGetCurrRecord=BEGIN
                           IsDataExchTypeEditable := NOT (Status IN [Status::Created,Status::Posted]);
                           ShowErrors;
                           SetCalculatedFields;
                           RecordHasAttachment := AttachmentFileName <> '';
                           SetControlVisibility;
                           AttachEnabled := "Entry No." <> 0;
                         END;

    ActionList=ACTIONS
    {
      { 52      ;    ;ActionContainer;
                      CaptionML=[ENU=New;
                                 RUS=Создать];
                      ActionContainerType=NewDocumentItems }
      { 46      ;    ;ActionContainer;
                      CaptionML=[ENU=Related Information;
                                 RUS=Связанные сведения];
                      ActionContainerType=RelatedInformation }
      { 57      ;1   ;ActionGroup;
                      CaptionML=[ENU=Setup;
                                 RUS=Настройка] }
      { 44      ;2   ;Action    ;
                      Name=Setup;
                      CaptionML=[ENU=Setup;
                                 RUS=Настройка];
                      ToolTipML=[ENU=Define the general journal type to use when creating journal lines. You can also specify whether it requires approval to create documents and journal lines.;
                                 RUS=Определение типа финансового журнала, используемого при создании строк журнала. Кроме того, вы можете указать, требуется ли утверждение для создания документов и строк журнала.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 191;
                      Image=Setup }
      { 22      ;2   ;Action    ;
                      Name=DataExchangeTypes;
                      CaptionML=[ENU=Data Exchange Types;
                                 RUS=Типы обмена данными];
                      ToolTipML=[ENU=View the data exchange types that are available to convert electronic documents to documents in Dynamics NAV.;
                                 RUS=Просмотр типов обмена данными, доступных для преобразования электронных документов в документы в Dynamics NAV.];
                      RunObject=Page 1213;
                      Promoted=Yes;
                      Image=Entries;
                      PromotedCategory=Category6 }
      { 73      ;2   ;Action    ;
                      Name=ActivityLog;
                      CaptionML=[ENU=Activity Log;
                                 RUS=Журнал действий];
                      ToolTipML=[ENU=View the status and any errors if the document was sent as an electronic document or OCR file through the document exchange service.;
                                 RUS=Просмотр состояния и всех ошибок, если документ был отправлен в электронной форме или в форме файла OCR через службу обмена документами.];
                      ApplicationArea=#Basic,#Suite;
                      Image=Log;
                      OnAction=VAR
                                 ActivityLog@1002 : Record 710;
                               BEGIN
                                 ActivityLog.ShowEntries(RECORDID);
                               END;
                                }
      { 69      ;2   ;Action    ;
                      Name=OCRSetup;
                      CaptionML=[ENU=OCR Setup;
                                 RUS=Настройка OCR];
                      ToolTipML=[ENU=Open the OCR Service Setup window, for example to change credentials or enable the service.;
                                 RUS=Открытие окна настройки службы OCR, например для изменения учетных данных или включения службы.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=ShowOCRSetup;
                      PromotedIsBig=Yes;
                      Image=ServiceSetup;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 PAGE.RUNMODAL(PAGE::"OCR Service Setup");
                                 CurrPage.UPDATE;
                                 IF CURRENTCLIENTTYPE = CLIENTTYPE::Web THEN
                                   IF OCRIsEnabled THEN BEGIN
                                     OnCloseIncomingDocumentFromAction(Rec);
                                     CurrPage.CLOSE;
                                   END;
                               END;
                                }
      { 91      ;2   ;Action    ;
                      Name=ApprovalEntries;
                      AccessByPermission=TableData 454=R;
                      CaptionML=[ENU=Approvals;
                                 RUS=Утверждения];
                      ToolTipML=[ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                                 RUS=Просмотр списка записей, ожидающих утверждения. Например, вы можете видеть имя пользователя, запросившего утверждение записи, время отправки запроса и время, когда он должен быть утвержден.];
                      ApplicationArea=#Suite;
                      Image=Approvals;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.OpenApprovalEntriesPage(RECORDID);
                               END;
                                }
      { 43      ;    ;ActionContainer;
                      CaptionML=[ENU=Process;
                                 RUS=Процесс];
                      ActionContainerType=ActionItems }
      { 121     ;1   ;Action    ;
                      Name=CreateDocument;
                      CaptionML=[ENU=Create Document;
                                 RUS=Создать документ];
                      ToolTipML=[ENU=Create a document, such as a purchase invoice, automatically by converting the electronic document that is attached to the incoming document record.;
                                 RUS=Автоматическое создание документа, например счета покупки, путем преобразования электронного документа, вложенного в запись входящего документа.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=AutomaticCreationActionsAreEnabled;
                      PromotedIsBig=Yes;
                      Image=CreateDocument;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 "Created Doc. Error Msg. Type" := "Created Doc. Error Msg. Type"::Warning;
                                 MODIFY;
                                 CreateDocumentWithDataExchange;
                               END;
                                }
      { 31      ;1   ;Action    ;
                      Name=CreateGenJnlLine;
                      CaptionML=[ENU=Create Journal Line;
                                 RUS=Создать строку журнала];
                      ToolTipML=[ENU=Create a journal line automatically by converting the electronic document that is attached to the incoming document record.;
                                 RUS=Автоматическое создание строки журнала путем преобразования электронного документа, вложенного в запись входящего документа.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=AutomaticCreationActionsAreEnabled;
                      PromotedIsBig=Yes;
                      Image=TransferToGeneralJournal;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 CreateGeneralJournalLineWithDataExchange;
                               END;
                                }
      { 285     ;1   ;Action    ;
                      Name=CreateManually;
                      CaptionML=[ENU=Create Manually;
                                 RUS=Создать вручную];
                      ToolTipML=[ENU=Create a document, such as a purchase invoice, manually from information in the file that is attached to the incoming document record.;
                                 RUS=Создание документа, например счета покупки, вручную на основе информации в файле, вложенном в запись входящего документа.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CreateCreditMemo;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 IF NOT AskUserPermission THEN
                                   EXIT;

                                 CreateManually;
                               END;
                                }
      { 21      ;1   ;Action    ;
                      Name=AttachFile;
                      CaptionML=[ENU=Attach File;
                                 RUS=Прикрепить файл];
                      ToolTipML=[ENU=Attach a file to the incoming document record.;
                                 RUS=Вложение файла в запись входящего документа.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Attach;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 ImportAttachment(Rec);
                                 CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 85      ;1   ;Action    ;
                      Name=ReplaceMainAttachment;
                      CaptionML=[ENU=Replace Main Attachment;
                                 RUS=Заменить основное вложение];
                      ToolTipML=[ENU=Attach another file to be used as the main file attachment on the incoming document record.;
                                 RUS=Вложение другого файла, который будет использоваться в качестве основного файлового вложения в запись входящего документа.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=RecordHasAttachment;
                      Image=Interaction;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 ReplaceOrInsertMainAttachment;
                                 CLEAR("Data Exchange Type");
                               END;
                                }
      { 30      ;1   ;Action    ;
                      Name=AttachFromCamera;
                      CaptionML=[ENU=Attach Image from Camera;
                                 RUS=Прикрепить изображение с камеры];
                      ToolTipML=[ENU=Add a picture from your device camera to the document.;
                                 RUS=Добавление в документ изображения с камеры устройства.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=HasCamera;
                      Enabled=AttachEnabled;
                      PromotedIsBig=Yes;
                      Image=Camera;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 CameraOptions@1000 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=10.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.CameraOptions";
                               BEGIN
                                 IF NOT HasCamera THEN
                                   EXIT;
                                 CameraOptions := CameraOptions.CameraOptions;
                                 CameraOptions.Quality := 100; // 100%
                                 CameraProvider.RequestPictureAsync(CameraOptions);
                               END;
                                }
      { 64      ;1   ;Action    ;
                      Name=TextToAccountMapping;
                      CaptionML=[ENU=Map Text to Account;
                                 RUS=Определить соответствие текста счетам];
                      ToolTipML=[ENU=Create a mapping of text on incoming documents to identical text on specific debit, credit, and balancing accounts in the general ledger or on bank accounts so that the resulting document or journal lines are prefilled with the specified information.;
                                 RUS=Создание сопоставления между текстом во входящих документах и идентичным текстом в конкретных дебетовых, кредитовых и балансирующих счетах в главной книге или в банковских счетах, чтобы получаемые в результате строки документа или журнала были предварительно заполнены указанной информацией.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 1254;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=MapAccounts;
                      PromotedCategory=Process;
                      PromotedOnly=Yes }
      { 45      ;1   ;ActionGroup;
                      CaptionML=[ENU=Release;
                                 RUS=Выпустить] }
      { 12      ;2   ;Action    ;
                      Name=Release;
                      CaptionML=[ENU=Release;
                                 RUS=Выпустить];
                      ToolTipML=[ENU=Release the incoming document to indicate that it has been approved by the incoming document approver. Note that this is not related to approval workflows.;
                                 RUS=Выпуск входящего документа, чтобы показать, что он был утвержден лицом, утверждающим входящие документы. Обратите внимание, что это не связано с рабочими процессами утверждения.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=RecordHasAttachment;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ReleaseIncomingDocument@1000 : Codeunit 132;
                               BEGIN
                                 ReleaseIncomingDocument.PerformManualRelease(Rec);
                               END;
                                }
      { 82      ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=[ENU=Reopen;
                                 RUS=Открыть];
                      ToolTipML=[ENU=Reopen the incoming document record after it has been approved by the incoming document approver. Note that this is not related to approval workflows.;
                                 RUS=Повторное открытие записи входящего документа, после того как он был утвержден лицом, утверждающим входящие документы. Обратите внимание, что это не связано с рабочими процессами утверждения.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=RecordHasAttachment;
                      PromotedIsBig=Yes;
                      Image=ReOpen;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ReleaseIncomingDocument@1000 : Codeunit 132;
                               BEGIN
                                 ReleaseIncomingDocument.PerformManualReopen(Rec);
                               END;
                                }
      { 9       ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=[ENU=Reject;
                                 RUS=Отклонить];
                      ToolTipML=[ENU=Reject to approve the incoming document. Note that this is not related to approval workflows.;
                                 RUS=Отказ в утверждении входящего документа. Обратите внимание, что это не связано с рабочими процессами утверждения.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=RecordHasAttachment;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ReleaseIncomingDocument@1000 : Codeunit 132;
                               BEGIN
                                 ReleaseIncomingDocument.PerformManualReject(Rec);
                               END;
                                }
      { 92      ;1   ;ActionGroup;
                      CaptionML=[ENU=Status;
                                 RUS=Статус] }
      { 88      ;2   ;Action    ;
                      Name=SetToProcessed;
                      CaptionML=[ENU=Set To Processed;
                                 RUS=Установить состояние "Обработано"];
                      ToolTipML=[ENU=Set the incoming document to processed. It will then be moved to the Processed Incoming Documents window.;
                                 RUS=Установка для входящего документа состояния "Обработан". Затем документ будет перемещен в окно обработанных входящих документов.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=NOT Processed;
                      PromotedIsBig=Yes;
                      Image=Archive;
                      PromotedCategory=Category5;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 VALIDATE(Processed,TRUE);
                                 MODIFY(TRUE);
                               END;
                                }
      { 89      ;2   ;Action    ;
                      Name=SetToUnprocessed;
                      CaptionML=[ENU=Set To Unprocessed;
                                 RUS=Установить состояние "Не обработано"];
                      ToolTipML=[ENU=Set the incoming document to unprocessed. This allows you to edit information or perform actions for the incoming document.;
                                 RUS=Установка для входящего документа состояния "Не обработан". Это позволяет изменять информацию и выполнять действия с входящим документом.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=Processed;
                      PromotedIsBig=Yes;
                      Image=ReOpen;
                      PromotedCategory=Category5;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 VALIDATE(Processed,FALSE);
                                 MODIFY(TRUE);
                               END;
                                }
      { 74      ;1   ;ActionGroup;
                      CaptionML=[ENU=Approval;
                                 RUS=Утверждение] }
      { 75      ;2   ;Action    ;
                      Name=Approve;
                      CaptionML=[ENU=Approve;
                                 RUS=Утвердить];
                      ToolTipML=[ENU=Approve the requested changes.;
                                 RUS=Утверждение запрошенных изменений.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 TestReadyForApproval;
                                 ApprovalsMgmt.ApproveRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 76      ;2   ;Action    ;
                      Name=RejectApproval;
                      CaptionML=[ENU=Reject;
                                 RUS=Отклонить];
                      ToolTipML=[ENU=Reject to approve the incoming document. Note that this is not related to approval workflows.;
                                 RUS=Отказ в утверждении входящего документа. Обратите внимание, что это не связано с рабочими процессами утверждения.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.RejectRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 77      ;2   ;Action    ;
                      Name=Delegate;
                      CaptionML=[ENU=Delegate;
                                 RUS=Делегировать];
                      ToolTipML=[ENU=Delegate the approval to a substitute approver.;
                                 RUS=Делегирование утверждения заместителю утверждающего лица.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.DelegateRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 78      ;2   ;Action    ;
                      Name=Comment;
                      CaptionML=[ENU=Comments;
                                 RUS=Комментарии];
                      ToolTipML=[ENU=View or add comments.;
                                 RUS=Просмотр или добавление комментариев.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.GetApprovalComment(Rec);
                               END;
                                }
      { 81      ;1   ;ActionGroup;
                      CaptionML=[ENU=Request Approval;
                                 RUS=Утверждение запросов];
                      Image=SendApprovalRequest }
      { 80      ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=[ENU=Send A&pproval Request;
                                 RUS=Отправить &запрос на утверждение];
                      ToolTipML=[ENU=Request approval of the incoming document. You can send an approval request as part of a workflow if this has been set up in your organization.;
                                 RUS=Запрос утверждения входящего документа. Запрос утверждения можно отправить в рамках рабочего процесса, если он настроен в вашей организации.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=NOT OpenApprovalEntriesExist;
                      Image=SendApprovalRequest;
                      PromotedCategory=Category9;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 TestReadyForApproval;
                                 IF ApprovalsMgmt.CheckIncomingDocApprovalsWorkflowEnabled(Rec) THEN
                                   ApprovalsMgmt.OnSendIncomingDocForApproval(Rec);
                               END;
                                }
      { 79      ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=[ENU=Cancel Approval Re&quest;
                                 RUS=Отменить за&прос на утверждение];
                      ToolTipML=[ENU=Cancel requesting approval of the incoming document.;
                                 RUS=Отмена запроса утверждения входящего документа.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=CanCancelApprovalForRecord;
                      Image=CancelApprovalRequest;
                      PromotedCategory=Category9;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.OnCancelIncomingDocApprovalRequest(Rec);
                               END;
                                }
      { 66      ;1   ;ActionGroup;
                      CaptionML=[ENU=Incoming Document;
                                 RUS=Входящий документ] }
      { 67      ;2   ;Action    ;
                      Name=OpenDocument;
                      CaptionML=[ENU=Open Record;
                                 RUS=Открыть запись];
                      ToolTipML=[ENU=Open the document, journal line, or entry that the incoming document is linked to.;
                                 RUS=Открытие документа, строки журнала или операции, с которыми связан входящий документ.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=RecordLinkExists;
                      PromotedIsBig=Yes;
                      Image=ViewDetails;
                      PromotedCategory=Category6;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 ShowNAVRecord;
                               END;
                                }
      { 5       ;2   ;Action    ;
                      Name=RemoveReferencedRecord;
                      CaptionML=[ENU=Remove Reference to Record;
                                 RUS=Удалить ссылку на запись];
                      ToolTipML=[ENU=Remove the link that exists from the incoming document to a document, journal line, or entry.;
                                 RUS=Удаление существующей связи между входящим документом и документом, строкой журнала или операцией.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=RecordLinkExists;
                      PromotedIsBig=Yes;
                      Image=ClearLog;
                      PromotedCategory=Category6;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 RemoveReferencedRecords;
                               END;
                                }
      { 68      ;2   ;Action    ;
                      Name=Navigate;
                      CaptionML=[ENU=Navigate;
                                 RUS=Навигатор];
                      ToolTipML=[ENU=Find all entries and documents that exist for the document number and posting date on the selected entry or document.;
                                 RUS=Поиск всех операций и документов, существующих для номера документа и даты учета в выбранной операции или в выбранном документе.];
                      ApplicationArea=#Basic,#Suite;
                      Image=Navigate;
                      OnAction=VAR
                                 NavigatePage@1000 : Page 344;
                               BEGIN
                                 IF NOT Posted THEN
                                   ERROR(NoPostedDocumentsErr);
                                 NavigatePage.SetDoc("Posting Date","Document No.");
                                 NavigatePage.RUN;
                               END;
                                }
      { 51      ;2   ;ActionGroup;
                      CaptionML=[ENU=Record;
                                 RUS=Запись];
                      Visible=FALSE;
                      Enabled=FALSE;
                      Image=Document }
      { 65      ;3   ;Action    ;
                      Name=Journal;
                      CaptionML=[ENU=Journal Line;
                                 RUS=Строка журнала];
                      Image=Journal;
                      OnAction=VAR
                                 GenJournalBatch@1001 : Record 232;
                                 GenJnlManagement@1002 : Codeunit 230;
                               BEGIN
                                 IF NOT AskUserPermission THEN
                                   EXIT;

                                 CreateGenJnlLine;
                                 IncomingDocumentsSetup.Fetch;
                                 GenJournalBatch.GET(IncomingDocumentsSetup."General Journal Template Name",IncomingDocumentsSetup."General Journal Batch Name");
                                 GenJnlManagement.TemplateSelectionFromBatch(GenJournalBatch);
                               END;
                                }
      { 49      ;3   ;Action    ;
                      Name=PurchaseInvoice;
                      CaptionML=[ENU=Purchase Invoice;
                                 RUS=Счет покупки];
                      Image=Purchase;
                      OnAction=BEGIN
                                 IF NOT AskUserPermission THEN
                                   EXIT;

                                 CreatePurchInvoice;
                               END;
                                }
      { 50      ;3   ;Action    ;
                      Name=PurchaseCreditMemo;
                      CaptionML=[ENU=Purchase Credit Memo;
                                 RUS=Кредит-нота покупки];
                      Image=CreditMemo;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF NOT AskUserPermission THEN
                                   EXIT;

                                 CreatePurchCreditMemo;
                               END;
                                }
      { 47      ;3   ;Action    ;
                      Name=SalesInvoice;
                      CaptionML=[ENU=Sales Invoice;
                                 RUS=Счет продажи];
                      Image=Sales;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF NOT AskUserPermission THEN
                                   EXIT;

                                 CreateSalesInvoice;
                               END;
                                }
      { 48      ;3   ;Action    ;
                      Name=SalesCreditMemo;
                      CaptionML=[ENU=Sales Credit Memo;
                                 RUS=Кредит-нота продажи];
                      Image=CreditMemo;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF NOT AskUserPermission THEN
                                   EXIT;

                                 CreateSalesCreditMemo;
                               END;
                                }
      { 59      ;1   ;ActionGroup;
                      CaptionML=[ENU=OCR;
                                 RUS=OCR] }
      { 42      ;2   ;Action    ;
                      Name=SendToJobQueue;
                      CaptionML=[ENU=Send to Job Queue;
                                 RUS=Отправить в очередь работ];
                      ToolTipML=[ENU=Send the attached PDF or image file to the OCR service by the job queue according to the schedule, provided that no errors exist.;
                                 RUS=Отправка вложенного PDF-файла или файла изображения в службу OCR очередью заданий по расписанию при условии отсутствия ошибок.];
                      ApplicationArea=#Basic,#Suite;
                      Visible=OCRServiceIsEnabled;
                      Enabled=RecordHasAttachment;
                      Image=Translation;
                      OnAction=BEGIN
                                 SendToJobQueue(TRUE);
                               END;
                                }
      { 56      ;2   ;Action    ;
                      Name=RemoveFromJobQueue;
                      CaptionML=[ENU=Remove from Job Queue;
                                 RUS=Удалить из очереди на работу];
                      ToolTipML=[ENU=Remove the scheduled processing of this record from the job queue.;
                                 RUS=Удаление запланированной обработки этой записи из очереди работ.];
                      ApplicationArea=#Basic,#Suite;
                      Visible=OCRServiceIsEnabled;
                      Enabled=RecordHasAttachment;
                      Image=Translation;
                      OnAction=BEGIN
                                 RemoveFromJobQueue(TRUE);
                               END;
                                }
      { 54      ;2   ;Action    ;
                      Name=SendToOcr;
                      CaptionML=[ENU=Send to OCR Service;
                                 RUS=Отправить в сервис OCR];
                      ToolTipML=[ENU=Send the attached PDF or image file to the OCR service immediately.;
                                 RUS=Немедленная отправка вложенного PDF-файла или файла изображения в службу OCR.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=OCRServiceIsEnabled;
                      Enabled=CanBeSentToOCR;
                      PromotedIsBig=Yes;
                      Image=Translations;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 SendToOCR(TRUE);
                               END;
                                }
      { 55      ;2   ;Action    ;
                      Name=ReceiveFromOCR;
                      CaptionML=[ENU=Receive from OCR Service;
                                 RUS=Получить из сервиса OCR];
                      ToolTipML=[ENU=Get any electronic documents that are ready to receive from the OCR service.;
                                 RUS=Получение всех электронных документов, готовых к получению из службы OCR.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=OCRServiceIsEnabled;
                      Enabled=EnableReceiveFromOCR;
                      PromotedIsBig=Yes;
                      Image=Translations;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 RetrieveFromOCR(TRUE);
                               END;
                                }
      { 35      ;2   ;Action    ;
                      Name=CorrectOCRData;
                      CaptionML=[ENU=Correct OCR Data;
                                 RUS=Исправить данные OCR];
                      ToolTipML=[ENU=Open a window where you can teach the OCR service how to interpret data on PDF and image files so that future documents created by the OCR service are more correct.;
                                 RUS=Открытие окна, в котором можно обучить службу OCR интерпретации данных в PDF-файлах и файлах изображений, чтобы в будущем служба OCR формировала более правильные документы.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 1272;
                      RunPageOnRec=Yes;
                      Promoted=Yes;
                      Visible=OCRServiceIsEnabled;
                      Enabled=OCRDataCorrectionEnabled;
                      PromotedIsBig=Yes;
                      Image=EditAttachment;
                      PromotedCategory=Category7 }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=General;
                CaptionML=[ENU=General;
                           RUS=Общее];
                GroupType=Group }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the description of the incoming document. You must enter the description manually.;
                           RUS=Определяет описание входящего документа. Описание должно вводиться вручную.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                Importance=Promoted }

    { 53  ;2   ;Field     ;
                Name=URL;
                ExtendedDatatype=URL;
                CaptionML=[ENU=Link to Document;
                           RUS=Ссылка на документ];
                ToolTipML=[ENU=Specifies a link to the attached file.;
                           RUS=Содержит ссылку на вложенный файл.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=URL;
                Importance=Additional;
                OnValidate=BEGIN
                             SetURL(URL);
                             CurrPage.UPDATE;
                           END;
                            }

    { 90  ;2   ;Field     ;
                Name=MainAttachment;
                CaptionML=[ENU=Main Attachment;
                           RUS=Основное вложение];
                ToolTipML=[ENU=Specifies the main attachment. Only this attachment is processed by the OCR and document exchange services.;
                           RUS=Определяет основное вложение. Только это вложение обрабатывается службой OCR и службой обмена документами.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AttachmentFileName;
                Enabled=RecordHasAttachment;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              MainAttachmentDrillDown;
                              CurrPage.UPDATE;
                            END;
                             }

    { 115 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the data exchange type that is used to process the incoming document when it is an electronic document.;
                           RUS=Определяет тип обмена данными, который используется для обработки входящего документа, если он является электронным.];
                SourceExpr="Data Exchange Type";
                Importance=Additional;
                Editable=IsDataExchTypeEditable;
                OnValidate=BEGIN
                             IF NOT DefaultAttachmentIsXML THEN
                               ERROR(InvalidTypeErr);
                           END;
                            }

    { 58  ;2   ;Field     ;
                Name=Record;
                CaptionML=[ENU=Record;
                           RUS=Запись];
                ToolTipML=[ENU=Specifies the record, document, journal line, or ledger entry, that is linked to the incoming document.;
                           RUS=Определяет запись, документ, строку журнала или операцию книги, которые связаны с входящим документом.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=RecordLinkTxt;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              ShowNAVRecord;
                              CurrPage.UPDATE;
                            END;
                             }

    { 17  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of document or journal that the incoming document can be connected to.;
                           RUS=Определяет тип документа или журнала, с которым может быть связан входящий документ.];
                SourceExpr="Document Type";
                Importance=Promoted;
                Visible=FALSE }

    { 19  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the related document or journal line that is created for the incoming document.;
                           RUS=Определяет номер связанного документа или строки журнала, которые создаются для входящего документа.];
                SourceExpr="Document No.";
                Importance=Promoted;
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the status of the incoming document record.;
                           RUS=Определяет состояние записи входящего документа.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Status;
                Importance=Promoted }

    { 87  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the status of the incoming document record when it takes part in the OCR process.;
                           RUS=Определяет состояние записи входящего документа, когда он используется в процессе OCR.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="OCR Status";
                OnDrillDown=VAR
                              OCRServiceSetup@1000 : Record 1270;
                              OCRServiceMgt@1001 : Codeunit 1294;
                            BEGIN
                              IF NOT OCRServiceSetup.ISEMPTY THEN
                                HYPERLINK(OCRServiceMgt.GetStatusHyperLink(Rec));
                            END;
                             }

    { 84  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the status of the job queue entry that is processing the incoming document.;
                           RUS=Определяет состояние операции очереди заданий, которая обрабатывает входящий документ.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Job Queue Status" }

    { 71  ;2   ;Group     ;
                GroupType=Group }

    { 29  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the document template that you want the OCR service provider to use when they convert the incoming-document file to an electronic document. Chose the field to pick a supported document template from the OCR Service Setup window.;
                           RUS=Определяет код шаблона документа, который должен использоваться поставщиком службы OCR во время преобразования файла входящего документа в электронный документ. Выберите поле для выбора поддерживаемого шаблона документа в окне "Настройка OCR".];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="OCR Service Doc. Template Code";
                Importance=Additional }

    { 41  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the document template that you want the OCR service provider to use when they convert the incoming-document file to an electronic document. Chose the field to pick a supported document template from the OCR Service Setup window.;
                           RUS=Определяет имя шаблона документа, который должен использоваться поставщиком службы OCR во время преобразования файла входящего документа в электронный документ. Выберите поле для выбора поддерживаемого шаблона документа в окне "Настройка OCR".];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="OCR Service Doc. Template Name";
                Importance=Additional }

    { 40  ;3   ;Field     ;
                CaptionML=[ENU=OCR Result;
                           RUS=Результат OCR];
                ToolTipML=[ENU=Specifies what process stage the attached PDF or image file is in relation to the OCR service.;
                           RUS=Определяет, на каком этапе обработки находится вложенный PDF-файл или файл изображения в отношении службы OCR.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=OCRResultFileName;
                Importance=Additional;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              OCRResultDrillDown;
                              CurrPage.UPDATE;
                            END;
                             }

    { 72  ;2   ;Group     ;
                GroupType=Group }

    { 4   ;3   ;Field     ;
                ToolTipML=[ENU=Specifies when the incoming document line was created.;
                           RUS=Определяет время создания строки входящего документа.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Created Date-Time";
                Importance=Additional }

    { 6   ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the user who created the incoming document line.;
                           RUS=Определяет имя пользователя, который создал строку входящего документа.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Created By User Name";
                Importance=Additional }

    { 7   ;3   ;Field     ;
                ToolTipML=[ENU=Specifies if the incoming document has been approved.;
                           RUS=Определяет, был ли утвержден входящий документ.];
                SourceExpr=Released;
                Visible=FALSE }

    { 8   ;3   ;Field     ;
                ToolTipML=[ENU=Specifies when the incoming document was approved.;
                           RUS=Определяет, когда был утвержден входящий документ.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Released Date-Time";
                Importance=Additional }

    { 10  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the user who approved the incoming document.;
                           RUS=Определяет имя пользователя, который утвердил входящий документ.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Released By User Name";
                Importance=Additional }

    { 11  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies when the incoming document line was last modified.;
                           RUS=Определяет время последнего изменения строки входящего документа.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Last Date-Time Modified";
                Importance=Additional }

    { 13  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the user who last modified the incoming document line.;
                           RUS=Определяет имя пользователя, который последним изменил строку входящего документа.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Last Modified By User Name";
                Importance=Additional }

    { 14  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies if the document or journal line that was created for this incoming document has been posted.;
                           RUS=Определяет, учтены ли документ или строка журнала для этого входящего документа.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Posted }

    { 15  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies when the related document or journal line was posted.;
                           RUS=Определяет время учета связанного документа или строки журнала.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posted Date-Time";
                Importance=Additional }

    { 18  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies when the document or journal line that relates to the incoming document was posted.;
                           RUS=Определяет время учета документа или строки журнала, которые связаны с входящим документом.];
                SourceExpr="Posting Date";
                Visible=FALSE }

    { 37  ;1   ;Part      ;
                Name=SupportingAttachments;
                CaptionML=[ENU=Supporting Attachments;
                           RUS=Вспомогательные вложения];
                ApplicationArea=#All;
                PagePartID=Page194;
                Visible=AdditionalAttachmentsPresent;
                PartType=Page;
                ShowFilter=No }

    { 70  ;1   ;Group     ;
                Name=FinancialInformation;
                CaptionML=[ENU=Financial Information;
                           RUS=Финансовая информация];
                GroupType=Group }

    { 23  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the vendor on the incoming document. The field may be filled automatically.;
                           RUS=Определяет имя поставщика во входящем документе. Поле может заполняться автоматически.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Name";
                Importance=Promoted;
                Editable=FALSE }

    { 24  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the VAT registration number of the vendor, if the document contains that number. The field may be filled automatically.;
                           RUS=Определяет ИНН поставщика, если документ содержит этот номер. Поле может заполняться автоматически.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor VAT Registration No.";
                Editable=FALSE }

    { 25  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the IBAN of the vendor on the incoming document.;
                           RUS=Определяет IBAN поставщика во входящем документе.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor IBAN";
                Editable=FALSE }

    { 27  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the bank branch number of the vendor on the incoming document.;
                           RUS=Определяет номер отделения банка поставщика во входящем документе.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Bank Branch No.";
                Editable=FALSE }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the bank account number of the vendor on the incoming document.;
                           RUS=Определяет номер банковского счета поставщика во входящем документе.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Bank Account No.";
                Editable=FALSE }

    { 86  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the phone number of the vendor on the incoming document.;
                           RUS=Определяет номер телефона поставщика во входящем документе.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Phone No.";
                Editable=FALSE }

    { 60  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the invoice number, if the document contains that number. The field may be filled automatically.;
                           RUS=Определяет номер счета, если документ содержит этот номер. Поле может заполняться автоматически.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Invoice No.";
                Editable=FALSE }

    { 33  ;2   ;Field     ;
                CaptionML=[ENU=Vendor Order No.;
                           RUS=Номер заказа поставщика];
                ToolTipML=[ENU=Specifies the order number, if the document contains that number. The field may be filled automatically.;
                           RUS=Определяет номер заказа, если документ содержит этот номер. Поле может заполняться автоматически.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Order No.";
                Editable=FALSE }

    { 26  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date that is printed on the incoming document. This is the date when the vendor created the invoice, for example. The field may be filled automatically.;
                           RUS=Определяет дату, напечатанную на входящем документе. Например, это может быть дата создания счета поставщиком. Поле может заполняться автоматически.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Date";
                Importance=Promoted;
                Editable=FALSE }

    { 32  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the vendor document must be paid. The field may be filled automatically.;
                           RUS=Определяет дату, когда документ поставщика должен быть оплачен. Поле может заполняться автоматически.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Due Date";
                Editable=FALSE }

    { 61  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the currency code, if the document contains that code. The field may be filled automatically.;
                           RUS=Определяет код валюты, если документ содержит этот код. Поле может заполняться автоматически.];
                ApplicationArea=#Suite;
                SourceExpr="Currency Code";
                Editable=FALSE }

    { 62  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount excluding VAT for the whole document. The field may be filled automatically.;
                           RUS=Определяет сумму без НДС по всему документу. Поле может заполняться автоматически.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Amount Excl. VAT";
                Editable=FALSE }

    { 63  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount including VAT for the whole document. The field may be filled automatically.;
                           RUS=Определяет сумму с НДС по всему документу. Поле может заполняться автоматически.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Amount Incl. VAT";
                Editable=FALSE }

    { 34  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the total VAT on the purchase document represented by the incoming document record.;
                           RUS=Определяет общую сумму НДС в документе покупки, представленном записью входящего документа.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Amount";
                Editable=FALSE }

    { 20  ;1   ;Part      ;
                Name=ErrorMessagesPart;
                CaptionML=[ENU=Errors and Warnings;
                           RUS=Ошибки и предупреждения];
                ApplicationArea=#Basic,#Suite;
                PagePartID=Page701;
                PartType=Page;
                ShowFilter=No }

    { 36  ;0   ;Container ;
                ContainerType=FactBoxArea }

    { 83  ;1   ;Part      ;
                Name=WorkflowStatus;
                ApplicationArea=#All;
                PagePartID=Page1528;
                Visible=ShowWorkflowStatus;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 38  ;1   ;Part      ;
                PartType=System;
                SystemPartID=RecordLinks }

    { 39  ;1   ;Part      ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      IncomingDocumentsSetup@1000 : Record 131;
      AutomaticProcessingQst@1004 : TextConst '@@@=%1 is Data Exchange Type;ENU=The Data Exchange Type field is filled on at least one of the selected Incoming Documents.\\Are you sure you want to create documents manually?;RUS=Поле "Тип обмена данными" заполнено минимум в одном из выбранных входящих документов.\\Действительно создать документы вручную?';
      CameraProvider@1005 : DotNet "'Microsoft.Dynamics.Nav.ClientExtensions, Version=10.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.Microsoft.Dynamics.Nav.Client.Capabilities.CameraProvider" WITHEVENTS RUNONCLIENT;
      HasCamera@1001 : Boolean;
      URL@1003 : Text;
      AttachmentFileName@1008 : Text;
      RecordLinkTxt@1007 : Text;
      OCRResultFileName@1009 : Text;
      IsDataExchTypeEditable@1002 : Boolean;
      OCRDataCorrectionEnabled@1006 : Boolean;
      AdditionalAttachmentsPresent@1010 : Boolean;
      InvalidTypeErr@1013 : TextConst 'ENU=The default attachment is not an XML document.;RUS=Вложение по умолчанию не является документом XML.';
      OpenApprovalEntriesExistForCurrUser@1012 : Boolean;
      OpenApprovalEntriesExist@1015 : Boolean;
      ShowWorkflowStatus@1014 : Boolean;
      EnableReceiveFromOCR@1011 : Boolean;
      CanCancelApprovalForRecord@1016 : Boolean;
      OCRServiceIsEnabled@1017 : Boolean;
      ShowOCRSetup@1018 : Boolean;
      AutomaticCreationActionsAreEnabled@1019 : Boolean;
      RecordHasAttachment@1020 : Boolean;
      RecordLinkExists@1021 : Boolean;
      NoPostedDocumentsErr@1022 : TextConst 'ENU=There are no posted documents.;RUS=Учтенные документы отсутствуют.';
      CanBeSentToOCR@1023 : Boolean;
      AttachEnabled@1026 : Boolean;

    LOCAL PROCEDURE AskUserPermission@1() : Boolean;
    BEGIN
      IF "Data Exchange Type" = '' THEN
        EXIT(TRUE);

      IF Status <> Status::New THEN
        EXIT(TRUE);

      EXIT(CONFIRM(AutomaticProcessingQst));
    END;

    LOCAL PROCEDURE ShowErrors@2();
    VAR
      ErrorMessage@1001 : Record 700;
      TempErrorMessage@1000 : TEMPORARY Record 700;
    BEGIN
      ErrorMessage.SETRANGE("Context Record ID",RECORDID);
      ErrorMessage.CopyToTemp(TempErrorMessage);
      CurrPage.ErrorMessagesPart.PAGE.SetRecords(TempErrorMessage);
      CurrPage.ErrorMessagesPart.PAGE.UPDATE;
    END;

    LOCAL PROCEDURE SetCalculatedFields@6();
    VAR
      IncomingDocumentAttachment@1000 : Record 133;
    BEGIN
      OCRDataCorrectionEnabled := GetGeneratedFromOCRAttachment(IncomingDocumentAttachment);
      AttachmentFileName := GetMainAttachmentFileName;
      RecordLinkTxt := GetRecordLinkText;
      OCRResultFileName := GetOCRResutlFileName;
      AdditionalAttachmentsPresent := GetAdditionalAttachments(IncomingDocumentAttachment);
      IF AdditionalAttachmentsPresent THEN
        CurrPage.SupportingAttachments.PAGE.LoadDataIntoPart(Rec);
    END;

    LOCAL PROCEDURE SetControlVisibility@9();
    VAR
      ApprovalsMgmt@1000 : Codeunit 1535;
      RelatedRecord@1002 : Variant;
    BEGIN
      OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
      ShowWorkflowStatus := CurrPage.WorkflowStatus.PAGE.SetFilterOnWorkflowRecord(RECORDID);
      CanCancelApprovalForRecord := ApprovalsMgmt.CanCancelApprovalForRecord(RECORDID);
      OCRServiceIsEnabled := OCRIsEnabled;
      ShowOCRSetup := NOT OCRServiceIsEnabled;
      AutomaticCreationActionsAreEnabled := "Data Exchange Type" <> '';
      RecordLinkExists := GetNAVRecord(RelatedRecord);
      CanBeSentToOCR := VerifyCanBeSentToOCR;
    END;

    [Integration(TRUE,TRUE)]
    LOCAL PROCEDURE OnCloseIncomingDocumentFromAction@3(VAR IncomingDocument@1000 : Record 130);
    BEGIN
    END;

    LOCAL PROCEDURE VerifyCanBeSentToOCR@4() : Boolean;
    BEGIN
      IF NOT RecordHasAttachment THEN
        EXIT(FALSE);

      EXIT(NOT ("OCR Status" IN
                ["OCR Status"::Sent,"OCR Status"::Success,"OCR Status"::"Awaiting Verification"]));
    END;

    EVENT CameraProvider@1005::PictureAvailable@11(PictureName@1001 : Text;PictureFilePath@1000 : Text);
    BEGIN
      AddAttachmentFromServerFile(PictureName,PictureFilePath);
    END;

    BEGIN
    END.
  }
}

