OBJECT Page 41 Sales Quote
{
  OBJECT-PROPERTIES
  {
    Date=28.01.17;
    Time=12:00:00;
    Version List=NAVW110.00.00.15140,NAVRU10.00.00.15140;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Quote;
               RUS=Предложение по продаже];
    SourceTable=Table36;
    SourceTableView=WHERE(Document Type=FILTER(Quote));
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Quote,View,Approve,Request Approval;
                                RUS=Создать,Обработать,Отчет,Предложение,Просмотреть,Утвердить,Запросить утверждение];
    OnInit=BEGIN
             EnableBillToCustomerNo := TRUE;
             EnableSellToCustomerTemplateCode := TRUE;
           END;

    OnOpenPage=VAR
                 OfficeMgt@1000 : Codeunit 1630;
               BEGIN
                 IF UserMgt.GetSalesFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetSalesFilter);
                   FILTERGROUP(0);
                 END;

                 ActivateFields;

                 SetDocNoVisible;
                 IsOfficeAddin := OfficeMgt.IsAvailable;
                 SetControlAppearance;
               END;

    OnAfterGetRecord=BEGIN
                       ActivateFields;
                       SetControlAppearance;
                       WorkDescription := GetWorkDescription;
                       UpdateShipToBillToGroupVisibility
                     END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserMgt.GetSalesFilter;
                  IF (NOT DocNoVisible) AND ("No." = '') THEN
                    SetSellToCustomerFromFilter;

                  SetDefaultPaymentServices;
                  SetControlAppearance;
                END;

    OnInsertRecord=BEGIN
                     IF DocNoVisible THEN
                       CheckCreditMaxBeforeInsert;

                     IF ("Sell-to Customer No." = '') AND (GETFILTER("Sell-to Customer No.") <> '') THEN
                       CurrPage.UPDATE(FALSE);
                   END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     EXIT(ConfirmDeletion);
                   END;

    OnAfterGetCurrRecord=BEGIN
                           ActivateFields;
                           CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromRecord(Rec);
                           CurrPage.ApprovalFactBox.PAGE.UpdateApprovalEntriesFromSourceRecord(RECORDID);
                           ShowWorkflowStatus := CurrPage.WorkflowStatus.PAGE.SetFilterOnWorkflowRecord(RECORDID);
                           UpdatePaymentService;
                           SetControlAppearance;
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;  ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 82      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Quote;
                                 RUS=&Предложение];
                      Image=Quote }
      { 44      ;2   ;Action    ;
                      Name=Approvals;
                      AccessByPermission=TableData 454=R;
                      CaptionML=[ENU=Approvals;
                                 RUS=Утверждения];
                      ToolTipML=[ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                                 RUS=Просмотр списка записей, ожидающих утверждения. Например, вы можете видеть имя пользователя, запросившего утверждение записи, время отправки запроса и время, когда он должен быть утвержден.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Approvals;
                      PromotedCategory=Category7;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalEntries@1001 : Page 658;
                               BEGIN
                                 ApprovalEntries.Setfilters(DATABASE::"Sales Header","Document Type","No.");
                                 ApprovalEntries.RUN;
                               END;
                                }
      { 104     ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 RUS=Измерения];
                      ToolTipML=[ENU=View or edits dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 RUS=Просмотр или изменение измерений, например области, проекта или отдела, которые можно назначать документам покупки и продажи для распределения себестоимости и анализа истории транзакций.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled="No." <> '';
                      PromotedIsBig=Yes;
                      Image=Dimensions;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 4       ;1   ;ActionGroup;
                      CaptionML=[ENU=&View;
                                 RUS=&Вид] }
      { 62      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Customer;
                                 RUS=Клиент];
                      ToolTipML=[ENU=View details on the selected customer.;
                                 RUS=Просмотр сведений о выбранном клиенте.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 21;
                      RunPageLink=No.=FIELD(Sell-to Customer No.);
                      Promoted=Yes;
                      Enabled=CustomerSelected;
                      PromotedIsBig=Yes;
                      Image=Customer;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes }
      { 146     ;2   ;Action    ;
                      CaptionML=[ENU=C&ontact;
                                 RUS=К&онтакт];
                      ToolTipML=[ENU=View details on the selected contact.;
                                 RUS=Просмотр сведений о выбранном контакте.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 5050;
                      RunPageLink=No.=FIELD(Sell-to Contact No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Card;
                      PromotedCategory=Category4;
                      PromotedOnly=Yes }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 59      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Quote;
                                 RUS=&Предложение];
                      Image=Quote }
      { 61      ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 RUS=Статистика];
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Handled@1000 : Boolean;
                               BEGIN
                                 OnBeforeStatisticsAction(Rec,Handled);
                                 IF NOT Handled THEN BEGIN
                                   CalcInvDiscForHeader;
                                   COMMIT;
                                   PAGE.RUNMODAL(PAGE::"Sales Statistics",Rec);
                                   SalesCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                                 END
                               END;
                                }
      { 63      ;2   ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 RUS=Ко&мментарии];
                      RunObject=Page 67;
                      RunPageLink=Document Type=FIELD(Document Type),
                                  No.=FIELD(No.),
                                  Document Line No.=CONST(0);
                      Image=ViewComments }
      { 69      ;2   ;Action    ;
                      Name=Print;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Print;
                                 RUS=&Печать];
                      ToolTipML=[ENU=Prepare to print the document. A report request window for the document opens where you can specify what to include on the print-out.;
                                 RUS=Подготовка документа к печати. Открывается окно запроса отчета для документа, где вы можете указать, какая информация должна выводиться на печать.];
                      ApplicationArea=#Basic,#Suite;
                      Visible=NOT IsOfficeAddin;
                      Image=Print;
                      OnAction=BEGIN
                                 CheckSalesCheckAllLinesHaveQuantityAssigned;
                                 DocPrint.PrintSalesHeader(Rec);
                               END;
                                }
      { 9       ;2   ;Action    ;
                      Name=Email;
                      CaptionML=[ENU=Send by &Email;
                                 RUS=Отправить по &эл. почте];
                      ToolTipML=[ENU=Prepare to mail the document. The Send Email window opens prefilled with the customer's email address so you can add or edit information.;
                                 RUS=Подготовка документа к отправке по почте. Будет открыто окно "Отправить сообщение эл. почты" с заранее заполненным полем адреса электронной почты, чтобы вы могли добавлять и изменять информацию.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Email;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 CheckSalesCheckAllLinesHaveQuantityAssigned;
                                 IF NOT FIND THEN
                                   INSERT(TRUE);
                                 DocPrint.EmailSalesHeader(Rec);
                               END;
                                }
      { 124     ;2   ;Action    ;
                      Name=GetRecurringSalesLines;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get Recurring Sales Lines;
                                 RUS=Получить строки типовых продаж];
                      ToolTipML=[ENU=Get standard sales lines that are available to assign to customers.;
                                 RUS=Получение стандартных строк продажи, доступных для назначения клиентам.];
                      ApplicationArea=#Suite;
                      Image=CustomerCode;
                      OnAction=VAR
                                 StdCustSalesCode@1000 : Record 172;
                               BEGIN
                                 StdCustSalesCode.InsertSalesLines(Rec);
                               END;
                                }
      { 66      ;2   ;Action    ;
                      Name=CopyDocument;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Document;
                                 RUS=Копировать документ];
                      ToolTipML=[ENU=Copy document lines and header information from another sales document to this document. You can copy a posted sales invoice into a new sales invoice to quickly create a similar document.;
                                 RUS=Копирование строк документа и сведений заголовка из другого документа продажи в этот документ. Вы можете скопировать учтенный счет продажи в новый счет продажи, чтобы быстро создать подобный документ.];
                      ApplicationArea=#Suite;
                      Image=CopyDocument;
                      OnAction=BEGIN
                                 IF NOT FIND THEN BEGIN
                                   INSERT(TRUE);
                                   COMMIT;
                                 END;
                                 CopySalesDoc.SetSalesHeader(Rec);
                                 CopySalesDoc.RUNMODAL;
                                 CLEAR(CopySalesDoc);
                                 IF GET("Document Type","No.") THEN;
                               END;
                                }
      { 21      ;1   ;ActionGroup;
                      CaptionML=[ENU=Approval;
                                 RUS=Утверждение] }
      { 19      ;2   ;Action    ;
                      Name=Approve;
                      CaptionML=[ENU=Approve;
                                 RUS=Утвердить];
                      ToolTipML=[ENU=Approve the requested changes.;
                                 RUS=Утверждение запрошенных изменений.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.ApproveRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 17      ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=[ENU=Reject;
                                 RUS=Отклонить];
                      ToolTipML=[ENU=Reject the approval request.;
                                 RUS=Отклонение запроса на утверждение.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.RejectRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 14      ;2   ;Action    ;
                      Name=Delegate;
                      CaptionML=[ENU=Delegate;
                                 RUS=Делегировать];
                      ToolTipML=[ENU=Delegate the approval to a substitute approver.;
                                 RUS=Делегирование утверждения заместителю утверждающего лица.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.DelegateRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 13      ;2   ;Action    ;
                      Name=Comment;
                      CaptionML=[ENU=Comments;
                                 RUS=Комментарии];
                      ToolTipML=[ENU=View or add comments.;
                                 RUS=Просмотр или добавление комментариев.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.GetApprovalComment(Rec);
                               END;
                                }
      { 5       ;1   ;ActionGroup;
                      CaptionML=[ENU=Create;
                                 RUS=Создать];
                      Image=NewCustomer }
      { 68      ;2   ;Action    ;
                      Name=Make Order;
                      CaptionML=[ENU=Make &Order;
                                 RUS=Сделать &заказ];
                      ToolTipML=[ENU=Convert the sales quote to a sales order.;
                                 RUS=Преобразование предложения по продаже в заказ на продажу.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=MakeOrder;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckSales(Rec) THEN
                                   CODEUNIT.RUN(CODEUNIT::"Sales-Quote to Order (Yes/No)",Rec);
                               END;
                                }
      { 37      ;2   ;Action    ;
                      Name=MakeInvoice;
                      CaptionML=[ENU=Make Invoice;
                                 RUS=Создать счет];
                      ToolTipML=[ENU=Convert the sales quote to a sales invoice.;
                                 RUS=Преобразование предложения по продаже в счет продажи.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=MakeOrder;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckSales(Rec) THEN BEGIN
                                   CheckSalesCheckAllLinesHaveQuantityAssigned;
                                   CODEUNIT.RUN(CODEUNIT::"Sales-Quote to Invoice Yes/No",Rec);
                                 END;
                               END;
                                }
      { 126     ;2   ;Action    ;
                      CaptionML=[ENU=C&reate Customer;
                                 RUS=С&оздать клиента];
                      Image=NewCustomer;
                      OnAction=BEGIN
                                 IF CheckCustomerCreated(FALSE) THEN
                                   CurrPage.UPDATE(TRUE);
                               END;
                                }
      { 169     ;2   ;Action    ;
                      AccessByPermission=TableData 5050=R;
                      CaptionML=[ENU=Create &To-do;
                                 RUS=Создать &задачу];
                      Image=NewToDo;
                      OnAction=BEGIN
                                 CreateTodo;
                               END;
                                }
      { 3       ;1   ;ActionGroup;
                      CaptionML=[ENU=Release;
                                 RUS=Выпустить];
                      Image=ReleaseDoc }
      { 115     ;2   ;Action    ;
                      Name=Release;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=[ENU=Re&lease;
                                 RUS=Вы&пустить];
                      Image=ReleaseDoc;
                      OnAction=VAR
                                 ReleaseSalesDoc@1000 : Codeunit 414;
                               BEGIN
                                 ReleaseSalesDoc.PerformManualRelease(Rec);
                               END;
                                }
      { 116     ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=[ENU=Re&open;
                                 RUS=&Открыть];
                      ToolTipML=[ENU=Reopen the document to change it after it has been approved. Approved documents have the Released status and must be opened before they can be changed.;
                                 RUS=Повторное открытие документа для его изменения после утверждения. Утвержденные документы имеют статус "Выпущено", и их необходимо открывать перед изменением.];
                      ApplicationArea=#Suite;
                      Enabled=Status <> Status::Open;
                      Image=ReOpen;
                      OnAction=VAR
                                 ReleaseSalesDoc@1001 : Codeunit 414;
                               BEGIN
                                 ReleaseSalesDoc.PerformManualReopen(Rec);
                               END;
                                }
      { 7       ;1   ;ActionGroup;
                      CaptionML=[ENU=Request Approval;
                                 RUS=Утверждение запросов];
                      Image=Approval }
      { 190     ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=[ENU=Send A&pproval Request;
                                 RUS=Отправить &запрос на утверждение];
                      ToolTipML=[ENU=Send an approval request.;
                                 RUS=Отправка запроса на утверждение.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=NOT OpenApprovalEntriesExist;
                      Image=SendApprovalRequest;
                      PromotedCategory=Category7;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.CheckSalesApprovalPossible(Rec) THEN
                                   ApprovalsMgmt.OnSendSalesDocForApproval(Rec);
                               END;
                                }
      { 191     ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=[ENU=Cancel Approval Re&quest;
                                 RUS=Отменить запрос на &утверждение];
                      ToolTipML=[ENU=Cancel the approval request.;
                                 RUS=Отмена запроса на утверждение.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=CanCancelApprovalForRecord;
                      Image=CancelApprovalRequest;
                      PromotedCategory=Category7;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.OnCancelSalesApprovalRequest(Rec);
                               END;
                                }
      { 64      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 RUS=Ф&ункции];
                      Image=Action }
      { 65      ;2   ;Action    ;
                      Name=CalculateInvoiceDiscount;
                      AccessByPermission=TableData 19=R;
                      CaptionML=[ENU=Calculate &Invoice Discount;
                                 RUS=Вычи&слить скидку по счету];
                      ToolTipML=[ENU=Calculate the invoice discount that applies to the sales quote.;
                                 RUS=Расчет скидки по счету, применимой к предложению по продаже.];
                      ApplicationArea=#Basic,#Suite;
                      Image=CalculateInvoiceDiscount;
                      OnAction=BEGIN
                                 ApproveCalcInvDisc;
                                 SalesCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 139     ;2   ;Separator  }
      { 165     ;2   ;Action    ;
                      Name=Archive Document;
                      CaptionML=[ENU=Archi&ve Document;
                                 RUS=Архи&вировать документ];
                      Image=Archive;
                      OnAction=BEGIN
                                 ArchiveManagement.ArchiveSalesDocument(Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 35      ;2   ;ActionGroup;
                      Name=IncomingDocument;
                      CaptionML=[ENU=Incoming Document;
                                 RUS=Входящий документ];
                      ActionContainerType=NewDocumentItems;
                      Image=Documents }
      { 29      ;3   ;Action    ;
                      Name=IncomingDocCard;
                      CaptionML=[ENU=View Incoming Document;
                                 RUS=Просмотр входящего документа];
                      ToolTipML=;
                      Enabled=HasIncomingDocument;
                      Image=ViewOrder;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IncomingDocument.ShowCardFromEntryNo("Incoming Document Entry No.");
                               END;
                                }
      { 23      ;3   ;Action    ;
                      Name=SelectIncomingDoc;
                      AccessByPermission=TableData 130=R;
                      CaptionML=[ENU=Select Incoming Document;
                                 RUS=Выбрать входящий документ];
                      ToolTipML=;
                      Image=SelectLineToApply;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 VALIDATE("Incoming Document Entry No.",IncomingDocument.SelectIncomingDocument("Incoming Document Entry No.",RECORDID));
                               END;
                                }
      { 33      ;3   ;Action    ;
                      Name=IncomingDocAttachFile;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create Incoming Document from File;
                                 RUS=Создать входящий документ из файла];
                      ToolTipML=;
                      Enabled=NOT HasIncomingDocument;
                      Image=Attach;
                      OnAction=VAR
                                 IncomingDocumentAttachment@1000 : Record 133;
                               BEGIN
                                 IncomingDocumentAttachment.NewAttachmentFromSalesDocument(Rec);
                               END;
                                }
      { 31      ;3   ;Action    ;
                      Name=RemoveIncomingDoc;
                      CaptionML=[ENU=Remove Incoming Document;
                                 RUS=Удалить входящий документ];
                      ToolTipML=;
                      Enabled=HasIncomingDocument;
                      Image=RemoveLine;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IF IncomingDocument.GET("Incoming Document Entry No.") THEN
                                   IncomingDocument.RemoveLinkToRelatedRecord;
                                 "Incoming Document Entry No." := 0;
                                 MODIFY(TRUE);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           RUS=Общее] }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the sales document. The field can be filled automatically or manually and can be set up to be invisible.;
                           RUS=Определяет номер документа продажи. Поле можно заполнить вручную или автоматически, а также сделать невидимым.];
                ApplicationArea=#All;
                SourceExpr="No.";
                Importance=Additional;
                Visible=DocNoVisible;
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Customer;
                           RUS=Клиент];
                ToolTipML=[ENU=Specifies the name of the customer who will receive the products and be billed by default. The value is automatically inserted from the customer card when you fill the Sell-to Customer No. field. The value will appear on the printed sales document.;
                           RUS=Определяет имя клиента, который будет получать продукты и которому по умолчанию будет выставляться счет. Значение автоматически подставляется из карточки клиента при заполнении поля "Код клиента". Значение будет отображаться на документе продажи при печати.];
                ApplicationArea=#All;
                NotBlank=Yes;
                SourceExpr="Sell-to Customer Name";
                Importance=Promoted;
                OnValidate=VAR
                             ApplicationAreaSetup@1001 : Record 9178;
                           BEGIN
                             IF GETFILTER("Sell-to Customer No.") = xRec."Sell-to Customer No." THEN
                               IF "Sell-to Customer No." <> xRec."Sell-to Customer No." THEN
                                 SETRANGE("Sell-to Customer No.");

                             CurrPage.UPDATE;

                             IF ApplicationAreaSetup.IsFoundationEnabled THEN
                               SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                ShowMandatory=TRUE }

    { 39  ;2   ;Group     ;
                CaptionML=[ENU=Sell-to;
                           RUS=Клиент];
                GroupType=Group }

    { 71  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           RUS=Адрес];
                ToolTipML=[ENU=Specifies the address where the customer is located.;
                           RUS=Определяет адрес, по которому расположен клиент.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Address";
                Importance=Additional }

    { 73  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           RUS=Адрес 2];
                ToolTipML=[ENU=Specifies additional address information.;
                           RUS=Определяет дополнительные сведения адреса.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Address 2";
                Importance=Additional }

    { 77  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           RUS=Индекс];
                ToolTipML=[ENU=Specifies the postal code.;
                           RUS=Определяет почтовый индекс.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Post Code";
                Importance=Additional }

    { 74  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           RUS=Город];
                ToolTipML=[ENU=Specifies the city where the customer is located.;
                           RUS=Определяет город, где расположен клиент.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to City";
                Importance=Additional }

    { 120 ;3   ;Field     ;
                CaptionML=[ENU=Contact No.;
                           RUS=Код контакта];
                ToolTipML=[ENU=Specifies the number of the contact that the sales document will be sent to.;
                           RUS=Определяет номер контакта, которому будет отправлен документ продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Contact No.";
                Importance=Additional;
                OnValidate=BEGIN
                             ClearSellToFilter;
                             ActivateFields;
                             CurrPage.UPDATE
                           END;
                            }

    { 8   ;2   ;Field     ;
                CaptionML=[ENU=Contact;
                           RUS=Контакт];
                ToolTipML=[ENU=Specifies the name of the person to contact at the customer.;
                           RUS=Определяет имя контактного лица у клиента.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Contact" }

    { 83  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Customer Template Code";
                Importance=Additional;
                Enabled=EnableSellToCustomerTemplateCode;
                OnValidate=BEGIN
                             ActivateFields;
                             CurrPage.UPDATE;
                           END;
                            }

    { 163 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of archived versions for this sales document.;
                           RUS=Определяет число архивированных версий этого документа продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="No. of Archived Versions";
                Importance=Additional;
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              COMMIT;
                              SalesHeaderArchive.SETRANGE("Document Type","Document Type"::Quote);
                              SalesHeaderArchive.SETRANGE("No.","No.");
                              SalesHeaderArchive.SETRANGE("Doc. No. Occurrence","Doc. No. Occurrence");
                              IF SalesHeaderArchive.GET("Document Type"::Quote,"No.","Doc. No. Occurrence","No. of Archived Versions") THEN ;
                              PAGE.RUNMODAL(PAGE::"Sales List Archive",SalesHeaderArchive);
                              CurrPage.UPDATE(FALSE);
                            END;
                             }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date on which the exchange rate applies to prices listed in a foreign currency on the sales order.;
                           RUS=Определяет дату, в течение которой применяется этот валютный курс к ценам, указанным в заказе на продажу в иностранной валюте.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Order Date";
                Importance=Additional;
                QuickEntry=FALSE }

    { 15  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date on which you created the sales document.;
                           RUS=Определяет дату создания этого документа продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Date";
                Importance=Additional }

    { 30  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies when the sales invoice must be paid.;
                           RUS=Определяет срок оплаты счета продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Due Date";
                Importance=Promoted }

    { 118 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date that the customer has asked for the order to be delivered.;
                           RUS=Определяет дату, в которую клиент просил осуществить доставку по заказу.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Requested Delivery Date" }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the salesperson who is assigned to the customer.;
                           RUS=Определяет имя менеджера по продажам, назначенного клиенту.];
                ApplicationArea=#Suite;
                SourceExpr="Salesperson Code";
                Importance=Additional;
                OnValidate=BEGIN
                             CurrPage.SalesLines.PAGE.UpdateForm(TRUE)
                           END;
                            }

    { 103 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the campaign number the document is linked to.;
                           RUS=Определяет номер кампании, с которой связан документ.];
                SourceExpr="Campaign No.";
                Importance=Additional;
                QuickEntry=FALSE }

    { 170 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the opportunity that the sales quote is assigned to.;
                           RUS=Определяет номер возможности, которой назначено это предложение по продаже.];
                ApplicationArea=#RelationshipMgmt;
                SourceExpr="Opportunity No.";
                Importance=Additional;
                QuickEntry=FALSE }

    { 108 ;2   ;Field     ;
                AccessByPermission=TableData 5714=R;
                ToolTipML=[ENU=Specifies the code of the responsibility center that is associated with the user, company, or vendor.;
                           RUS=Определяет код центра ответственности, который связан с пользователем, компанией или поставщиком.];
                SourceExpr="Responsibility Center";
                Importance=Additional }

    { 192 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of the user who is responsible for the document.;
                           RUS=Определяет код пользователя, который отвечает за документ.];
                SourceExpr="Assigned User ID";
                Importance=Additional }

    { 106 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the document is open, waiting to be approved, has been invoiced for prepayment, or has been released to the next stage of processing.;
                           RUS=Определяет состояние документа: открытый, ожидающий утверждения, с выставленным счетом на предоплату или выпущенный на следующий этап обработки.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Status;
                Importance=Promoted }

    { 55  ;2   ;Group     ;
                CaptionML=[ENU=Work Description;
                           RUS=Описание работы];
                GroupType=Group }

    { 57  ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the products or service being offered;
                           RUS=Определяет предлагаемые товары или услуги.];
                SourceExpr=WorkDescription;
                Importance=Additional;
                MultiLine=Yes;
                OnValidate=BEGIN
                             SetWorkDescription(WorkDescription);
                           END;

                ShowCaption=No }

    { 58  ;1   ;Part      ;
                Name=SalesLines;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page95;
                Enabled=("Sell-to Customer No." <> '') OR ("Sell-to Customer Template Code" <> '');
                Editable=("Sell-to Customer No." <> '') OR ("Sell-to Customer Template Code" <> '');
                UpdatePropagation=Both }

    { 1905885101;1;Group  ;
                CaptionML=[ENU=Invoice Details;
                           RUS=Счет - подробности];
                GroupType=Group }

    { 97  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the currency of amounts on the sales document.;
                           RUS=Определяет валюту для сумм в документе продажи.];
                ApplicationArea=#Suite;
                SourceExpr="Currency Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 50  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date you expect to ship items on the sales document.;
                           RUS=Определяет дату ожидаемой отгрузки товаров по документу продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Shipment Date";
                Importance=Promoted }

    { 113 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the unit price on the line should be displayed including or excluding VAT.;
                           RUS=Определяет, должна цена за единицу в этой строке отображаться с НДС или без НДС.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Prices Including VAT";
                OnValidate=BEGIN
                             CurrPage.UPDATE
                           END;
                            }

    { 187 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the customer's VAT specification to link transactions made for this customer to.;
                           RUS=Определяет спецификацию НДС клиента для связывания с транзакциями этого клиента.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Bus. Posting Group";
                OnValidate=VAR
                             TempApplicationAreaSetup@1000 : TEMPORARY Record 9178;
                           BEGIN
                             IF TempApplicationAreaSetup.IsFoundationEnabled THEN
                               SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;
                            }

    { 1210002;2;Field     ;
                ToolTipML=[ENU=Specifies the agreement number associated with the sales header.;
                           RUS=Определяет номер соглашения, связанный с заголовком продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Agreement No." }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount on the sales document.;
                           RUS=Определяет формулу, по которой рассчитывается срок оплаты, дата скидки по оплате и сумма скидки по оплате по документу продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Terms Code";
                Importance=Promoted }

    { 90  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how the customer must pay for products on the sales document.;
                           RUS=Определяет, как клиент должен оплатить продукты по документу продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Method Code";
                Importance=Additional }

    { 47  ;2   ;Group     ;
                Visible=PaymentServiceVisible;
                GroupType=Group }

    { 18  ;3   ;Field     ;
                Name=SelectedPayments;
                CaptionML=[ENU=Payment Service;
                           RUS=Служба платежей];
                ToolTipML=[ENU=Specifies the online payment service, such as PayPal, that customers can use to pay the sales document.;
                           RUS=Определяет службу интернет-платежей, например PayPal, которую клиенты могут использовать для оплаты документа продажи.];
                ApplicationArea=#All;
                SourceExpr=GetSelectedPaymentServicesText;
                Enabled=PaymentServiceEnabled;
                Editable=FALSE;
                MultiLine=Yes;
                OnAssistEdit=BEGIN
                               ChangePaymentServiceSetting;
                             END;
                              }

    { 54  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of transaction that the sales document represents, for the purpose of reporting to Intrastat.;
                           RUS=Определяет тип транзакции, представляемой документом продажи, в целях отчетности Интрастат.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Transaction Type" }

    { 80  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for Shortcut Dimension 1.;
                           RUS=Определяет код ярлыка измерения 1.];
                ApplicationArea=#Suite;
                SourceExpr="Shortcut Dimension 1 Code";
                OnValidate=BEGIN
                             CurrPage.UPDATE
                           END;
                            }

    { 84  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for Shortcut Dimension 2.;
                           RUS=Определяет код ярлыка измерения 2.];
                ApplicationArea=#Suite;
                SourceExpr="Shortcut Dimension 2 Code";
                OnValidate=BEGIN
                             CurrPage.UPDATE
                           END;
                            }

    { 32  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the payment discount percentage that is granted if the customer pays on or before the date entered in the Pmt. Discount Date field. The discount percentage is specified in the Payment Terms Code field.;
                           RUS=Определяет процент скидки по оплате, предоставляемой, если клиент платит не позже даты, указанной в поле "Дата скидки оплаты". Процент скидки указывается в поле "Код условий платежа".];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Discount %" }

    { 34  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the last date the customer can pay the invoice and still receive a payment discount.;
                           RUS=Определяет последнюю дату, когда клиент может оплатить счет и при этом получить скидку по оплате.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pmt. Discount Date";
                Importance=Additional }

    { 86  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the location from where inventory items to the customer on the sales document are to be shipped by default.;
                           RUS=Указывает расположение, из которого по умолчанию отгружаются складские товары клиенту по документу продажи.];
                SourceExpr="Location Code";
                Importance=Additional }

    { 67  ;1   ;Group     ;
                CaptionML=[ENU=Shipping and Billing;
                           RUS=Отгрузка и выставление счетов];
                Enabled="Sell-to Customer No." <> '';
                GroupType=Group }

    { 60  ;2   ;Group     ;
                GroupType=Group }

    { 53  ;3   ;Group     ;
                GroupType=Group }

    { 70  ;4   ;Field     ;
                Name=ShippingOptions;
                CaptionML=[ENU=Ship-to;
                           RUS=Получатель];
                ToolTipML=[ENU=Specifies the address that the products on the sales document are shipped to. Default (Sell-to Address): The same as the customer's sell-to address. Alternate Ship-to Address: One of the customer's alternate ship-to addresses. Custom Address: Any ship-to address that you specify in the fields below.;
                           RUS=Определяет адрес, по которому должны быть доставлены продукты из документа продажи. По умолчанию ("Адрес клиента"): адрес совпадает с адресом клиента. "Альтернативный адрес получателя": один из альтернативных адресов получателя для клиента. "Пользовательский адрес": произвольный адрес получателя, задаваемый в расположенных ниже полях.];
                OptionCaptionML=[ENU=Default (Sell-to Address),Alternate Shipping Address,Custom Address;
                                 RUS=По умолчанию (Адрес клиента),Альтернативный адрес отгрузки,Пользовательский адрес];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ShipToOptions;
                OnValidate=VAR
                             ShipToAddress@1001 : Record 222;
                             ShipToAddressList@1000 : Page 301;
                           BEGIN
                             CASE ShipToOptions OF
                               ShipToOptions::"Default (Sell-to Address)":
                                 BEGIN
                                   VALIDATE("Ship-to Code",'');
                                   CopySellToAddressToShipToAddress;
                                 END;
                               ShipToOptions::"Alternate Shipping Address":
                                 BEGIN
                                   ShipToAddress.SETRANGE("Customer No.","Sell-to Customer No.");
                                   ShipToAddressList.LOOKUPMODE := TRUE;
                                   ShipToAddressList.SETTABLEVIEW(ShipToAddress);

                                   IF ShipToAddressList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                     ShipToAddressList.GETRECORD(ShipToAddress);
                                     VALIDATE("Ship-to Code",ShipToAddress.Code);
                                   END ELSE
                                     ShipToOptions := ShipToOptions::"Custom Address";
                                 END;
                               ShipToOptions::"Custom Address":
                                 VALIDATE("Ship-to Code",'');
                             END;
                           END;
                            }

    { 72  ;4   ;Group     ;
                Visible=NOT (ShipToOptions = ShipToOptions::"Default (Sell-to Address)");
                GroupType=Group }

    { 36  ;5   ;Field     ;
                CaptionML=[ENU=Code;
                           RUS=Код];
                ToolTipML=[ENU=Specifies the code for another shipment address than the customer's own address, which is entered by default.;
                           RUS=Определяет код другого адреса получателя, отличающегося от адреса клиента по умолчанию.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Code";
                Importance=Promoted;
                Editable=ShipToOptions = ShipToOptions::"Alternate Shipping Address";
                OnValidate=BEGIN
                             IF (xRec."Ship-to Code" <> '') AND ("Ship-to Code" = '') THEN
                               ERROR(EmptyShipToCodeErr);
                           END;
                            }

    { 38  ;5   ;Field     ;
                CaptionML=[ENU=Name;
                           RUS=Название];
                ToolTipML=[ENU=Specifies the name that products on the sales document will be shipped to.;
                           RUS=Определяет имя, на которое будут отгружены продукты из документа продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Name";
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 40  ;5   ;Field     ;
                CaptionML=[ENU=Address;
                           RUS=Адрес];
                ToolTipML=[ENU=Specifies the address that products on the sales document will be shipped to. By default, the field is filled with the value in the Address field on the customer card or with the value in the Address field in the Ship-to Address window.;
                           RUS=Определяет адрес, на который будут отгружены продукты из документа продажи. По умолчанию это поле заполняется значением из поля "Адрес" в карточке клиента или значением из поля "Адрес" в окне "Адрес получателя".];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Address";
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 42  ;5   ;Field     ;
                CaptionML=[ENU=Address 2;
                           RUS=Адрес 2];
                ToolTipML=[ENU=Specifies additional address information.;
                           RUS=Определяет дополнительные сведения адреса.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Address 2";
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 95  ;5   ;Field     ;
                CaptionML=[ENU=Post Code;
                           RUS=Индекс];
                ToolTipML=[ENU=Specifies the postal code.;
                           RUS=Определяет почтовый индекс.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Post Code";
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 93  ;5   ;Field     ;
                CaptionML=[ENU=City;
                           RUS=Город];
                ToolTipML=[ENU=Specifies the city that products on the sales document will be shipped to.;
                           RUS=Определяет город, в который будут отгружены продукты из документа продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to City";
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 43  ;5   ;Field     ;
                CaptionML=[ENU=Country/Region;
                           RUS=Страна/регион];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Country/Region Code";
                Importance=Additional;
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 46  ;5   ;Field     ;
                CaptionML=[ENU=Contact;
                           RUS=Контакт];
                ToolTipML=[ENU=Specifies the name of the contact person at the address that products on the sales document will be shipped to.;
                           RUS=Определяет имя контактного лица по адресу, куда будут отгружены продукты по документу продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Contact";
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 1210000;5;Field     ;
                ToolTipML=[ENU=Specifies the code of the company registration associated with the sales header.;
                           RUS=Определяет код регистрации компании, связанный с заголовком продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="KPP Code" }

    { 79  ;3   ;Group     ;
                CaptionML=[ENU=Shipment Method;
                           RUS=Метод поставки];
                GroupType=Group }

    { 78  ;4   ;Field     ;
                CaptionML=[ENU=Code;
                           RUS=Код];
                ToolTipML=[ENU=Specifies how items on the sales document are shipped to the customer.;
                           RUS=Определяет способ отгрузки клиенту товаров из документа продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Shipment Method Code";
                Importance=Additional }

    { 76  ;4   ;Field     ;
                CaptionML=[ENU=Agent;
                           RUS=Агент];
                ToolTipML=[ENU=Specifies which shipping agent is used to transport the items on the sales document to the customer.;
                           RUS=Определяет экспедитора, который используется для транспортировки клиенту товаров из документа продажи.];
                ApplicationArea=#Suite;
                SourceExpr="Shipping Agent Code";
                Importance=Additional }

    { 75  ;4   ;Field     ;
                CaptionML=[ENU=Agent service;
                           RUS=Услуга агента];
                ToolTipML=[ENU=Specifies which shipping agent service is used to transport the items on the sales document to the customer.;
                           RUS=Определяет услуги экспедитора, которые используются для транспортировки клиенту товаров из документа продажи.];
                ApplicationArea=#Suite;
                SourceExpr="Shipping Agent Service Code";
                Importance=Additional }

    { 51  ;4   ;Field     ;
                ToolTipML=[ENU=Specifies the shipping agent's package number.;
                           RUS=Определяет номер пакета экспедитора.];
                ApplicationArea=#Suite;
                SourceExpr="Package Tracking No.";
                Importance=Additional }

    { 49  ;2   ;Group     ;
                GroupType=Group }

    { 48  ;3   ;Field     ;
                Name=BillToOptions;
                CaptionML=[ENU=Bill-to;
                           RUS=Плательщик];
                ToolTipML=[ENU=Specifies the customer that the sales invoice will be sent to. Default (Customer): The same as the customer on the sales invoice. Another Customer: Any customer that you specify in the fields below.;
                           RUS=Определяет клиента, которому будет отправлен счет продажи. По умолчанию ("Клиент"): адрес совпадает с адресом клиента в счете продажи. "Другой клиент": произвольный клиент, задаваемый в расположенных ниже полях.];
                OptionCaptionML=[ENU=Default (Customer),Another Customer;
                                 RUS=По умолчанию (Клиент),Другой клиент];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BillToOptions;
                OnValidate=BEGIN
                             IF BillToOptions = BillToOptions::"Default (Customer)" THEN
                               VALIDATE("Bill-to Customer No.","Sell-to Customer No.");
                           END;
                            }

    { 41  ;3   ;Group     ;
                Visible=BillToOptions = BillToOptions::"Another Customer";
                GroupType=Group }

    { 16  ;3   ;Field     ;
                CaptionML=[ENU=Name;
                           RUS=Название];
                ToolTipML=[ENU=Specifies the customer to whom you will send the sales invoice, when different from the customer that you are selling to.;
                           RUS=Определяет клиента, которому будет отправлен счет продажи, если продажа осуществляется другому клиенту.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Name";
                Importance=Promoted;
                Enabled=EnableBillToCustomerNo;
                OnValidate=VAR
                             ApplicationAreaSetup@1000 : Record 9178;
                           BEGIN
                             IF GETFILTER("Bill-to Customer No.") = xRec."Bill-to Customer No." THEN
                               IF "Bill-to Customer No." <> xRec."Bill-to Customer No." THEN
                                 SETRANGE("Bill-to Customer No.");

                             IF ApplicationAreaSetup.IsFoundationEnabled THEN
                               SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);

                             CurrPage.UPDATE;
                           END;
                            }

    { 20  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           RUS=Адрес];
                ToolTipML=[ENU=Specifies the address of the customer that you will send the invoice to.;
                           RUS=Определяет адрес клиента, которому будет отправлен счет.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Address";
                Importance=Additional }

    { 22  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           RUS=Адрес 2];
                ToolTipML=[ENU=Specifies additional address information.;
                           RUS=Определяет дополнительные сведения адреса.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Address 2";
                Importance=Additional }

    { 91  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           RUS=Индекс];
                ToolTipML=[ENU=Specifies the postal code.;
                           RUS=Определяет почтовый индекс.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Post Code";
                Importance=Additional }

    { 89  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           RUS=Город];
                ToolTipML=[ENU=Specifies the city you will send the invoice to.;
                           RUS=Определяет город, в который будет отправлен счет.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to City";
                Importance=Additional }

    { 122 ;3   ;Field     ;
                CaptionML=[ENU=Contact No.;
                           RUS=Код контакта];
                ToolTipML=[ENU=Specifies the number of the contact the invoice will be sent to.;
                           RUS=Определяет номер контакта, которому будет отправлен счет.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Contact No.";
                Importance=Additional }

    { 26  ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           RUS=Контакт];
                ToolTipML=[ENU=Specifies the name of the person you should contact at the customer who you are sending the invoice to.;
                           RUS=Определяет имя контактного лица у клиента, которому направляется счет.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Contact" }

    { 1907468901;1;Group  ;
                CaptionML=[ENU=Foreign Trade;
                           RUS=Внешняя торговля] }

    { 52  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the sales document is part of a three-party trade.;
                           RUS=Определяет, является ли документ продажи частью трехсторонней торговой сделки.];
                SourceExpr="EU 3-Party Trade" }

    { 81  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a code for the sales document's transaction specification, for the purpose of reporting to INTRASTAT.;
                           RUS=Определяет код спецификации транзакции документа продажи в целях отчетности Интрастат.];
                SourceExpr="Transaction Specification" }

    { 56  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the transport method, for the purpose of reporting to INTRASTAT.;
                           RUS=Определяет метод перевозки в целях отчетности Интрастат.];
                SourceExpr="Transport Method" }

    { 25  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the point of exit through which you ship the items out of your country/region, for reporting to Intrastat.;
                           RUS=Определяет точку выхода, через которую производится отгрузка товаров за пределы страны или региона, в целях отчетности Интрастат.];
                SourceExpr="Exit Point" }

    { 45  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the area of the customer's address, for the purpose of reporting to INTRASTAT.;
                           RUS=Определяет регион для адреса клиента в целях отчетности Интрастат.];
                SourceExpr=Area }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 24  ;1   ;Part      ;
                Name=IncomingDocAttachFactBox;
                PagePartID=Page193;
                Visible=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 11  ;1   ;Part      ;
                ApplicationArea=#All;
                SubPageLink=Table ID=CONST(36),
                            Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.);
                PagePartID=Page9103;
                Visible=OpenApprovalEntriesExistForCurrUser;
                PartType=Page }

    { 1903720907;1;Part   ;
                SubPageLink=No.=FIELD(Sell-to Customer No.);
                PagePartID=Page9080;
                PartType=Page }

    { 1907234507;1;Part   ;
                SubPageLink=No.=FIELD(Bill-to Customer No.);
                PagePartID=Page9081;
                Visible=FALSE;
                PartType=Page }

    { 1902018507;1;Part   ;
                SubPageLink=No.=FIELD(Bill-to Customer No.);
                PagePartID=Page9082;
                Visible=FALSE;
                PartType=Page }

    { 1900316107;1;Part   ;
                SubPageLink=No.=FIELD(Sell-to Customer No.);
                PagePartID=Page9084;
                Visible=FALSE;
                PartType=Page }

    { 1906127307;1;Part   ;
                ApplicationArea=#Suite;
                SubPageLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(Document No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page9087;
                ProviderID=58;
                PartType=Page }

    { 1901314507;1;Part   ;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page9089;
                ProviderID=58;
                Visible=FALSE;
                PartType=Page }

    { 1906354007;1;Part   ;
                Name=ApprovalFactBox;
                PagePartID=Page9092;
                Visible=FALSE;
                PartType=Page }

    { 1907012907;1;Part   ;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page9108;
                ProviderID=58;
                Visible=FALSE;
                PartType=Page }

    { 27  ;1   ;Part      ;
                Name=WorkflowStatus;
                ApplicationArea=#All;
                PagePartID=Page1528;
                Visible=ShowWorkflowStatus;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      SalesHeaderArchive@1006 : Record 5107;
      CopySalesDoc@1003 : Report 292;
      DocPrint@1004 : Codeunit 229;
      UserMgt@1005 : Codeunit 5700;
      ArchiveManagement@1007 : Codeunit 5063;
      SalesCalcDiscByType@1008 : Codeunit 56;
      ChangeExchangeRate@1002 : Page 511;
      EnableBillToCustomerNo@19072970 : Boolean INDATASET;
      EnableSellToCustomerTemplateCode@1021 : Boolean;
      HasIncomingDocument@1010 : Boolean;
      DocNoVisible@1001 : Boolean;
      OpenApprovalEntriesExistForCurrUser@1014 : Boolean;
      OpenApprovalEntriesExist@1013 : Boolean;
      ShowWorkflowStatus@1009 : Boolean;
      IsOfficeAddin@1000 : Boolean;
      CanCancelApprovalForRecord@1011 : Boolean;
      PaymentServiceVisible@1016 : Boolean;
      PaymentServiceEnabled@1015 : Boolean;
      CustomerSelected@1012 : Boolean;
      WorkDescription@1017 : Text;
      ShipToOptions@1019 : 'Default (Sell-to Address),Alternate Shipping Address,Custom Address';
      BillToOptions@1018 : 'Default (Customer),Another Customer';
      EmptyShipToCodeErr@1020 : TextConst 'ENU=The Code field can only be empty if you select Custom Address in the Ship-to field.;RUS=Поле "Код" может быть только пустым, если в поле "Получатель" выбрано значение "Пользовательский адрес".';

    LOCAL PROCEDURE ActivateFields@2();
    BEGIN
      EnableBillToCustomerNo := "Bill-to Customer Template Code" = '';
      EnableSellToCustomerTemplateCode := "Sell-to Customer No." = '';
    END;

    LOCAL PROCEDURE ApproveCalcInvDisc@3();
    BEGIN
      CurrPage.SalesLines.PAGE.ApproveCalcInvDisc;
    END;

    LOCAL PROCEDURE ClearSellToFilter@1100();
    BEGIN
      IF GETFILTER("Sell-to Customer No.") = xRec."Sell-to Customer No." THEN
        IF "Sell-to Customer No." <> xRec."Sell-to Customer No." THEN
          SETRANGE("Sell-to Customer No.");
      IF GETFILTER("Sell-to Contact No.") = xRec."Sell-to Contact No." THEN
        IF "Sell-to Contact No." <> xRec."Sell-to Contact No." THEN
          SETRANGE("Sell-to Contact No.");
    END;

    LOCAL PROCEDURE SetDocNoVisible@4();
    VAR
      DocumentNoVisibility@1000 : Codeunit 1400;
      DocType@1003 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Reminder,FinChMemo';
    BEGIN
      DocNoVisible := DocumentNoVisibility.SalesDocumentNoIsVisible(DocType::Quote,"No.");
    END;

    LOCAL PROCEDURE SetControlAppearance@5();
    VAR
      ApprovalsMgmt@1002 : Codeunit 1535;
    BEGIN
      HasIncomingDocument := "Incoming Document Entry No." <> 0;

      OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
      CanCancelApprovalForRecord := ApprovalsMgmt.CanCancelApprovalForRecord(RECORDID);
      CustomerSelected := "Sell-to Customer No." <> '';
    END;

    LOCAL PROCEDURE CheckSalesCheckAllLinesHaveQuantityAssigned@6();
    VAR
      ApplicationAreaSetup@1000 : Record 9178;
      LinesInstructionMgt@1001 : Codeunit 1320;
    BEGIN
      IF ApplicationAreaSetup.IsFoundationEnabled THEN
        LinesInstructionMgt.SalesCheckAllLinesHaveQuantityAssigned(Rec);
    END;

    LOCAL PROCEDURE UpdatePaymentService@1();
    VAR
      PaymentServiceSetup@1000 : Record 1060;
    BEGIN
      PaymentServiceVisible := PaymentServiceSetup.IsPaymentServiceVisible;
      PaymentServiceEnabled := PaymentServiceSetup.CanChangePaymentService(Rec);
    END;

    LOCAL PROCEDURE UpdateShipToBillToGroupVisibility@9();
    BEGIN
      CASE TRUE OF
        ("Ship-to Code" = '') AND ShipToAddressEqualsSellToAddress:
          ShipToOptions := ShipToOptions::"Default (Sell-to Address)";
        ("Ship-to Code" = '') AND (NOT ShipToAddressEqualsSellToAddress):
          ShipToOptions := ShipToOptions::"Custom Address";
        "Ship-to Code" <> '':
          ShipToOptions := ShipToOptions::"Alternate Shipping Address";
      END;

      IF "Bill-to Customer No." = "Sell-to Customer No." THEN
        BillToOptions := BillToOptions::"Default (Customer)"
      ELSE
        BillToOptions := BillToOptions::"Another Customer";
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeStatisticsAction@7(VAR SalesHeader@1000 : Record 36;VAR Handled@1001 : Boolean);
    BEGIN
    END;

    BEGIN
    END.
  }
}

