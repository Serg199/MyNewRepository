OBJECT Table 14965 Payroll Analysis View
{
  OBJECT-PROPERTIES
  {
    Date=09.09.14;
    Time=12:00:00;
    Version List=NAVRU8.00;
  }
  PROPERTIES
  {
    OnDelete=VAR
               PayrollAnalysisViewFilter@1210000 : Record 14967;
             BEGIN
               PayrollAnalysisViewReset;
               PayrollAnalysisViewFilter.SETRANGE("Analysis View Code",Code);
               PayrollAnalysisViewFilter.DELETEALL;
             END;

    CaptionML=[ENU=Payroll Analysis View;
               RUS=Аналитический отчет по зарплате];
    LookupPageID=Page14967;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              RUS=Код];
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              RUS=Название] }
    { 4   ;   ;Last Entry No.      ;Integer       ;CaptionML=[ENU=Last Entry No.;
                                                              RUS=Номер посл. операции];
                                                   Editable=No }
    { 6   ;   ;Last Date Updated   ;Date          ;CaptionML=[ENU=Last Date Updated;
                                                              RUS=Дата последнего обновления];
                                                   Editable=No }
    { 7   ;   ;Update on Posting   ;Boolean       ;CaptionML=[ENU=Update on Posting;
                                                              RUS=Обновлять при учете] }
    { 8   ;   ;Blocked             ;Boolean       ;OnValidate=BEGIN
                                                                IF NOT Blocked AND "Refresh When Unblocked" THEN BEGIN
                                                                  ValidateDelete(FIELDCAPTION(Blocked));
                                                                  PayrollAnalysisViewReset;
                                                                  "Refresh When Unblocked" := FALSE;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Blocked;
                                                              RUS=Заблокировано] }
    { 9   ;   ;Payroll Element Filter;Code250     ;TableRelation="Payroll Element";
                                                   OnValidate=VAR
                                                                PayrollAnalysisViewEntry@1000 : Record 14966;
                                                                PayrollElement@1002 : Record 17400;
                                                              BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF ("Last Entry No." <> 0) AND (xRec."Payroll Element Filter" = '') AND ("Payroll Element Filter" <> '') THEN BEGIN
                                                                  ValidateModify(FIELDCAPTION("Payroll Element Filter"));
                                                                  PayrollElement.SETFILTER(Code,"Payroll Element Filter");
                                                                  IF PayrollElement.FINDSET THEN
                                                                    REPEAT
                                                                      PayrollElement.MARK := TRUE;
                                                                    UNTIL PayrollElement.NEXT = 0;
                                                                  PayrollElement.SETRANGE(Code);
                                                                  IF PayrollElement.FINDSET THEN
                                                                    REPEAT
                                                                      IF NOT PayrollElement.MARK THEN BEGIN
                                                                        PayrollAnalysisViewEntry.SETRANGE("Analysis View Code",Code);
                                                                        PayrollAnalysisViewEntry.SETRANGE("Element Code",PayrollElement.Code);
                                                                        PayrollAnalysisViewEntry.DELETEALL;
                                                                      END;
                                                                    UNTIL PayrollElement.NEXT = 0;
                                                                END;
                                                                IF ("Last Entry No." <> 0) AND ("Payroll Element Filter" <> xRec."Payroll Element Filter") AND
                                                                   (xRec."Payroll Element Filter" <> '')
                                                                THEN BEGIN
                                                                  ValidateDelete(FIELDCAPTION("Payroll Element Filter"));
                                                                  PayrollAnalysisViewReset;
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Payroll Element Filter;
                                                              RUS=Фильтр по зарплатному элементу] }
    { 10  ;   ;Employee Filter     ;Code250       ;TableRelation=Employee;
                                                   OnValidate=VAR
                                                                Employee@1000 : Record 5200;
                                                                TempEmployee@1003 : TEMPORARY Record 5200;
                                                              BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF ("Last Entry No." <> 0) AND (xRec."Employee Filter" = '') AND
                                                                   ("Employee Filter" <> xRec."Employee Filter")
                                                                THEN BEGIN
                                                                  ValidateModify(FIELDCAPTION("Employee Filter"));
                                                                  IF Employee.FINDSET THEN
                                                                    REPEAT
                                                                      TempEmployee := Employee;
                                                                      TempEmployee.INSERT;
                                                                    UNTIL Employee.NEXT = 0;
                                                                  TempEmployee.INIT;
                                                                  TempEmployee."No." := '';
                                                                  TempEmployee.INSERT;
                                                                  TempEmployee.SETFILTER("No.","Employee Filter");
                                                                  TempEmployee.DELETEALL;
                                                                  TempEmployee.SETRANGE("No.");
                                                                  IF TempEmployee.FINDSET THEN
                                                                    REPEAT
                                                                      PayrollAnalysisViewEntry.SETRANGE("Analysis View Code",Code);
                                                                      PayrollAnalysisViewEntry.SETRANGE("Employee No.",TempEmployee."No.");
                                                                      PayrollAnalysisViewEntry.DELETEALL;
                                                                    UNTIL TempEmployee.NEXT = 0
                                                                END;
                                                                IF ("Last Entry No." <> 0) AND (xRec."Employee Filter" <> '') AND
                                                                   ("Employee Filter" <> xRec."Employee Filter")
                                                                THEN BEGIN
                                                                  ValidateDelete(FIELDCAPTION("Employee Filter"));
                                                                  PayrollAnalysisViewReset;
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Employee Filter;
                                                              RUS=Фильтр по сотруднику] }
    { 11  ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF ("Last Entry No." <> 0) AND ("Starting Date" <> xRec."Starting Date") THEN BEGIN
                                                                  ValidateDelete(FIELDCAPTION("Starting Date"));
                                                                  PayrollAnalysisViewReset;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Starting Date;
                                                              RUS=Дата начала] }
    { 12  ;   ;Date Compression    ;Option        ;InitValue=Day;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF ("Last Entry No." <> 0) AND ("Date Compression" <> xRec."Date Compression") THEN BEGIN
                                                                  ValidateDelete(FIELDCAPTION("Date Compression"));
                                                                  PayrollAnalysisViewReset;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Date Compression;
                                                              RUS=Сжатие по дате];
                                                   OptionCaptionML=[ENU=None,Day,Week,Month,Quarter,Year,Period;
                                                                    RUS=Нет,День,Неделя,Месяц,Квартал,Год,Период];
                                                   OptionString=None,Day,Week,Month,Quarter,Year,Period }
    { 13  ;   ;Dimension 1 Code    ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF Dim.CheckIfDimUsed("Dimension 1 Code",20,'',Code,0) THEN
                                                                  ERROR(Text000,Dim.GetCheckDimErr);
                                                                ModifyDim(FIELDCAPTION("Dimension 1 Code"),"Dimension 1 Code",xRec."Dimension 1 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Dimension 1 Code;
                                                              RUS=Код измерения 1] }
    { 14  ;   ;Dimension 2 Code    ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF Dim.CheckIfDimUsed("Dimension 2 Code",21,'',Code,0) THEN
                                                                  ERROR(Text000,Dim.GetCheckDimErr);
                                                                ModifyDim(FIELDCAPTION("Dimension 2 Code"),"Dimension 2 Code",xRec."Dimension 2 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Dimension 2 Code;
                                                              RUS=Код измерения 2] }
    { 15  ;   ;Dimension 3 Code    ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF Dim.CheckIfDimUsed("Dimension 3 Code",22,'',Code,0) THEN
                                                                  ERROR(Text000,Dim.GetCheckDimErr);
                                                                ModifyDim(FIELDCAPTION("Dimension 3 Code"),"Dimension 3 Code",xRec."Dimension 3 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Dimension 3 Code;
                                                              RUS=Код измерения 3] }
    { 16  ;   ;Dimension 4 Code    ;Code20        ;TableRelation=Dimension;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Blocked,FALSE);
                                                                IF Dim.CheckIfDimUsed("Dimension 4 Code",23,'',Code,0) THEN
                                                                  ERROR(Text000,Dim.GetCheckDimErr);
                                                                ModifyDim(FIELDCAPTION("Dimension 4 Code"),"Dimension 4 Code",xRec."Dimension 4 Code");
                                                                MODIFY;
                                                              END;

                                                   CaptionML=[ENU=Dimension 4 Code;
                                                              RUS=Код измерения 4] }
    { 18  ;   ;Refresh When Unblocked;Boolean     ;CaptionML=[ENU=Refresh When Unblocked;
                                                              RUS=Обновить после разблокировки] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PayrollAnalysisViewEntry@1210004 : Record 14966;
      NewPayrollAnalysisViewEntry@1210003 : Record 14966;
      Dim@1210000 : Record 348;
      Text000@1210016 : TextConst 'ENU=You cannot use the same dimension twice in the same analysis view. Error %1.;RUS=Нельзя дважды использовать одно измерение в одном аналитическом отчете. Ошибка %1.';
      Text001@1210015 : TextConst 'ENU=The dimension %1 is used in the analysis view %2. You must therefore retain the dimension to keep consistency between the analysis view and the Item entries.;RUS=Измерение %1 используется в аналитическом отчете %2. Поэтому необходимо оставить это измерение, чтобы сохранить соответствие между аналитическим отчетом и товарными операциями.';
      Text011@1210007 : TextConst 'ENU=If you change the contents of the %1 field, the analysis view entries will be deleted.\You will have to update again.\\Do you want to enter a new value?;RUS=При изменении содержимого поля %1 операции аналитического отчета будут удалены.\Потребуется повторное обновление.\\Ввести новое значение?';
      Text013@1210005 : TextConst 'ENU=The update has been interrupted in response to the warning.;RUS=Обновление прервано из-за предупреждения.';
      Text014@1210002 : TextConst 'ENU=If you change the contents of the %1 field, the analysis view entries will be changed as well.\\Do you want to enter a new value?;RUS=При изменении содержимого поля %1 операции аналитического отчета также будут изменены.\\Ввести новое значение?';

    PROCEDURE ModifyDim@2(DimFieldName@1000 : Text[100];DimValue@1001 : Code[20];xDimValue@1002 : Code[20]);
    BEGIN
      IF ("Last Entry No." <> 0) AND (DimValue <> xDimValue) THEN BEGIN
        IF DimValue <> '' THEN BEGIN
          ValidateDelete(DimFieldName);
          PayrollAnalysisViewReset;
        END;
        IF DimValue = '' THEN BEGIN
          ValidateModify(DimFieldName);
          CASE DimFieldName OF
            FIELDCAPTION("Dimension 1 Code"):
              PayrollAnalysisViewEntry.SETFILTER("Dimension 1 Value Code",'<>%1','');
            FIELDCAPTION("Dimension 2 Code"):
              PayrollAnalysisViewEntry.SETFILTER("Dimension 2 Value Code",'<>%1','');
            FIELDCAPTION("Dimension 3 Code"):
              PayrollAnalysisViewEntry.SETFILTER("Dimension 3 Value Code",'<>%1','');
            FIELDCAPTION("Dimension 4 Code"):
              PayrollAnalysisViewEntry.SETFILTER("Dimension 4 Value Code",'<>%1','');
          END;
          PayrollAnalysisViewEntry.SETRANGE("Analysis View Code",Code);
          IF PayrollAnalysisViewEntry.FINDSET THEN
            REPEAT
              PayrollAnalysisViewEntry.DELETE;
              NewPayrollAnalysisViewEntry := PayrollAnalysisViewEntry;
              CASE DimFieldName OF
                FIELDCAPTION("Dimension 1 Code"):
                  NewPayrollAnalysisViewEntry."Dimension 1 Value Code" := '';
                FIELDCAPTION("Dimension 2 Code"):
                  NewPayrollAnalysisViewEntry."Dimension 2 Value Code" := '';
                FIELDCAPTION("Dimension 3 Code"):
                  NewPayrollAnalysisViewEntry."Dimension 3 Value Code" := '';
                FIELDCAPTION("Dimension 4 Code"):
                  NewPayrollAnalysisViewEntry."Dimension 4 Value Code" := '';
              END;
              InsertPayrollAnalysisViewEntry;
            UNTIL PayrollAnalysisViewEntry.NEXT = 0;
        END;
      END;
    END;

    PROCEDURE InsertPayrollAnalysisViewEntry@1();
    BEGIN
      IF NOT NewPayrollAnalysisViewEntry.INSERT THEN BEGIN
        NewPayrollAnalysisViewEntry.FIND;
        NewPayrollAnalysisViewEntry."Payroll Amount" :=
          NewPayrollAnalysisViewEntry."Payroll Amount" + PayrollAnalysisViewEntry."Payroll Amount";
        NewPayrollAnalysisViewEntry."Taxable Amount" :=
          NewPayrollAnalysisViewEntry."Taxable Amount" + PayrollAnalysisViewEntry."Taxable Amount";
        NewPayrollAnalysisViewEntry.MODIFY;
      END;
    END;

    PROCEDURE PayrollAnalysisViewReset@5();
    VAR
      PayrollAnalysisViewEntry@1000 : Record 14966;
    BEGIN
      PayrollAnalysisViewEntry.SETRANGE("Analysis View Code",Code);
      PayrollAnalysisViewEntry.DELETEALL;
      "Last Entry No." := 0;
      "Last Date Updated" := 0D;
    END;

    LOCAL PROCEDURE CheckDimIsRetained@8(ObjectType@1000 : Integer;ObjectID@1001 : Integer;DimCode@1002 : Code[20];AnalysisViewCode@1003 : Code[10]);
    VAR
      SelectedDim@1005 : Record 369;
    BEGIN
      IF DimCode <> '' THEN
        IF NOT SelectedDim.GET(USERID,ObjectType,ObjectID,'',DimCode) THEN
          ERROR(Text001,DimCode,AnalysisViewCode);
    END;

    PROCEDURE ValidateDelete@10(FieldName@1000 : Text[250]);
    VAR
      Question@1001 : Text[250];
    BEGIN
      Question := STRSUBSTNO(Text011,FieldName);
      IF NOT CONFIRM(Question,TRUE) THEN
        ERROR(Text013);
    END;

    PROCEDURE ValidateModify@11(FieldName@1000 : Text[250]);
    VAR
      Question@1001 : Text[250];
    BEGIN
      Question := STRSUBSTNO(Text014,FieldName);
      IF NOT CONFIRM(Question,TRUE) THEN
        ERROR(Text013);
    END;

    BEGIN
    END.
  }
}

