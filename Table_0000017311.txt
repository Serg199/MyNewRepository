OBJECT Table 17311 Tax Calc. Term
{
  OBJECT-PROPERTIES
  {
    Date=18.12.13;
    Time=12:00:00;
    Version List=NAVRU7.10;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TaxCalcSection.GET("Section Code");
               TaxCalcSection.ValidateChange;
             END;

    OnDelete=BEGIN
               TaxCalcSection.GET("Section Code");
               TaxCalcSection.ValidateChange;

               TaxCalcTermFormula.RESET;
               TaxCalcTermFormula.SETRANGE("Section Code","Section Code");
               TaxCalcTermFormula.SETRANGE("Term Code","Term Code");
               TaxCalcTermFormula.DELETEALL;
             END;

    CaptionML=[ENU=Tax Calc. Term;
               RUS=Термин налогового расчета];
    LookupPageID=Page17316;
  }
  FIELDS
  {
    { 1   ;   ;Term Code           ;Code20        ;CaptionML=[ENU=Term Code;
                                                              RUS=Код термина];
                                                   NotBlank=Yes }
    { 3   ;   ;Expression Type     ;Option        ;OnValidate=BEGIN
                                                                IF "Expression Type" <> xRec."Expression Type" THEN
                                                                  IF xRec."Expression Type" = xRec."Expression Type"::Compare THEN BEGIN
                                                                    IF NOT CONFIRM(Text21000900,FALSE,xRec."Expression Type") THEN
                                                                      ERROR('');
                                                                    TaxCalcSection.GET("Section Code");
                                                                    TaxCalcSection.ValidateChange;
                                                                    TaxCalcTermFormula.RESET;
                                                                    TaxCalcTermFormula.SETRANGE("Section Code","Section Code");
                                                                    TaxCalcTermFormula.SETRANGE("Term Code","Term Code");
                                                                    TaxCalcTermFormula.DELETEALL;
                                                                    VALIDATE(Expression,'');
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=Expression Type;
                                                              RUS=Тип выражения];
                                                   OptionCaptionML=[ENU=Plus/Minus,Multiply/Divide,Compare;
                                                                    RUS=Сложение/вычитание,Умножение/деление,Сравнение];
                                                   OptionString=Plus/Minus,Multiply/Divide,Compare }
    { 4   ;   ;Expression          ;Text250       ;CaptionML=[ENU=Expression;
                                                              RUS=Выражение] }
    { 5   ;   ;Check               ;Boolean       ;CaptionML=[ENU=Check;
                                                              RUS=Проверка] }
    { 6   ;   ;Process Sign        ;Option        ;OnValidate=BEGIN
                                                                IF "Process Sign" <> xRec."Process Sign" THEN BEGIN
                                                                  TaxCalcSection.GET("Section Code");
                                                                  TaxCalcSection.ValidateChange;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Process Sign;
                                                              RUS=Обработка знака];
                                                   OptionCaptionML=[ENU=" ,Skip Negative,Skip Positive,Always Positive,Always Negative";
                                                                    RUS=" ,Пропустить отрицательные,Пропустить положительные,Только положительные,Только отрицательные"];
                                                   OptionString=[ ,Skip Negative,Skip Positive,Always Positive,Always Negative] }
    { 8   ;   ;Description         ;Text150       ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 9   ;   ;Rounding Precision  ;Decimal       ;OnValidate=BEGIN
                                                                IF "Rounding Precision" <> xRec."Rounding Precision" THEN BEGIN
                                                                  TaxCalcSection.GET("Section Code");
                                                                  TaxCalcSection.ValidateChange;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Rounding Precision;
                                                              RUS=Точность округления];
                                                   DecimalPlaces=0: }
    { 12  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              RUS=Фильтр по дате] }
    { 13  ;   ;Section Code        ;Code10        ;TableRelation="Tax Calc. Section".Code;
                                                   CaptionML=[ENU=Section Code;
                                                              RUS=Код секции];
                                                   NotBlank=Yes }
  }
  KEYS
  {
    {    ;Section Code,Term Code                  ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Term Code,Description                    }
  }
  CODE
  {
    VAR
      TaxCalcTermFormula@1000 : Record 17312;
      TaxCalcSection@1002 : Record 17307;
      Text21000900@1004 : TextConst 'ENU=Delete linked line %1?;RUS=Удалить связанную строку %1?';

    PROCEDURE GenerateProfile@1();
    VAR
      GenTermProfile@1000 : Record 17238;
    BEGIN
      IF NOT GenTermProfile.GET(DATABASE::"Tax Calc. Term") THEN BEGIN
        GenTermProfile."Table No." := DATABASE::"Tax Calc. Term";
        GenTermProfile."Section Code (Hdr)" := FIELDNO("Section Code");
        GenTermProfile."Term Code (Hdr)" := FIELDNO("Term Code");
        GenTermProfile."Expression Type (Hdr)" := FIELDNO("Expression Type");
        GenTermProfile."Expression (Hdr)" := FIELDNO(Expression);
        GenTermProfile."Description (Hdr)" := FIELDNO(Description);
        GenTermProfile."Check (Hdr)" := FIELDNO(Check);
        GenTermProfile."Process Sign (Hdr)" := FIELDNO("Process Sign");
        GenTermProfile."Rounding Precision (Hdr)" := FIELDNO("Rounding Precision");
        GenTermProfile."Date Filter (Hdr)" := FIELDNO("Date Filter");

        GenTermProfile."Section Code (Line)" := TaxCalcTermFormula.FIELDNO("Section Code");
        GenTermProfile."Term Code (Line)" := TaxCalcTermFormula.FIELDNO("Term Code");
        GenTermProfile."Line No. (Line)" := TaxCalcTermFormula.FIELDNO("Line No.");
        GenTermProfile."Expression Type (Line)" := TaxCalcTermFormula.FIELDNO("Expression Type");
        GenTermProfile."Operation (Line)" := TaxCalcTermFormula.FIELDNO(Operation);
        GenTermProfile."Account Type (Line)" := TaxCalcTermFormula.FIELDNO("Account Type");
        GenTermProfile."Account No. (Line)" := TaxCalcTermFormula.FIELDNO("Account No.");
        GenTermProfile."Amount Type (Line)" := TaxCalcTermFormula.FIELDNO("Amount Type");
        GenTermProfile."Bal. Account No. (Line)" := TaxCalcTermFormula.FIELDNO("Bal. Account No.");
        GenTermProfile."Norm Jurisd. Code (Line)" := TaxCalcTermFormula.FIELDNO("Norm Jurisdiction Code");
        GenTermProfile."Process Sign (Line)" := TaxCalcTermFormula.FIELDNO("Process Sign");
        GenTermProfile."Process Division by Zero(Line)" := TaxCalcTermFormula.FIELDNO("Process Division by Zero");

        GenTermProfile.INSERT;
      END;
    END;

    BEGIN
    END.
  }
}

