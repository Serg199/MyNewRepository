OBJECT Page 50054 G/L Account Dimension Overview
{
  OBJECT-PROPERTIES
  {
    Date=27.06.17;
    Time=13:51:35;
    Modified=Yes;
    Version List=NOS-26;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=G/L Entries Dimension Overview;
               RUS=Фин. Счет Измерение Обзор];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table15;
    DataCaptionExpr=GetCaption;
    PageType=List;
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             ColumnValue1Enabled := FALSE;
             ColumnValue2Enabled := FALSE;
             ColumnValue3Enabled := FALSE;
             ColumnValue4Enabled := FALSE;
             ColumnValue5Enabled := FALSE;
             ColumnValue6Enabled := FALSE;
             ColumnValue7Enabled := FALSE;
             ColumnValue8Enabled := FALSE;
             ColumnValue9Enabled := FALSE;
             ColumnValue10Enabled := FALSE;
             ColumnValue11Enabled := FALSE;
             ColumnValue12Enabled := FALSE;
             ColumnValue13Enabled := FALSE;
             ColumnValue14Enabled := FALSE;
             ColumnValue15Enabled := FALSE;
             ColumnValue16Enabled := FALSE;
             ColumnValue17Enabled := FALSE;
             ColumnValue18Enabled := FALSE;
             ColumnValue19Enabled := FALSE;
             ColumnValue20Enabled := FALSE;
             ColumnValue21Enabled := FALSE;
             ColumnValue22Enabled := FALSE;
             ColumnValue23Enabled := FALSE;
             ColumnValue24Enabled := FALSE;
             ColumnValue25Enabled := FALSE;
             ColumnValue26Enabled := FALSE;
             ColumnValue27Enabled := FALSE;
             ColumnValue28Enabled := FALSE;
             ColumnValue29Enabled := FALSE;
             ColumnValue30Enabled := FALSE;
             ColumnValue31Enabled := FALSE;
             ColumnValue32Enabled := FALSE;
           END;

    OnOpenPage=BEGIN
                 IF GLAccount.FIND('+') THEN
                   REPEAT
                     Rec := GLAccount;
                     INSERT;
                   UNTIL GLAccount.NEXT(-1) = 0;
                 SetColumnVisible;
               END;

    OnAfterGetRecord=BEGIN
                       BuildColumnValues("No.");
                       Emphasize := "Account Type" <> "Account Type"::Posting;
                     END;

  }
  CONTROLS
  {
    { 1101495000;0;Container;
                ContainerType=ContentArea }

    { 1101495001;1;Group  ;
                Name=Group;
                IndentationColumnName=Indentation;
                IndentationControls=Name;
                GroupType=Repeater }

    { 1101495002;2;Field  ;
                SourceExpr="No.";
                Style=Strong;
                StyleExpr=Emphasize }

    { 1101495003;2;Field  ;
                SourceExpr=Name;
                Style=Strong;
                StyleExpr=Emphasize }

    { 1101495004;2;Field  ;
                SourceExpr="Account Type" }

    { 1101495005;2;Field  ;
                SourceExpr="Income/Balance" }

    { 1101495007;2;Field  ;
                SourceExpr=Totaling }

    { 1101495008;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[1];
                CaptionClass=SetColumnCaption(1);
                Visible=ColumnValue1Enabled;
                Enabled=ColumnValue1Enabled }

    { 1101495009;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[2];
                CaptionClass=SetColumnCaption(2);
                Visible=ColumnValue2Enabled;
                Enabled=ColumnValue2Enabled }

    { 1101495010;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[3];
                CaptionClass=SetColumnCaption(3);
                Visible=ColumnValue3Enabled;
                Enabled=ColumnValue3Enabled }

    { 1101495011;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[4];
                CaptionClass=SetColumnCaption(4);
                Visible=ColumnValue4Enabled;
                Enabled=ColumnValue4Enabled }

    { 1101495012;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[5];
                CaptionClass=SetColumnCaption(5);
                Visible=ColumnValue5Enabled;
                Enabled=ColumnValue5Enabled }

    { 1101495013;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[6];
                CaptionClass=SetColumnCaption(6);
                Visible=ColumnValue6Enabled;
                Enabled=ColumnValue6Enabled }

    { 1101495014;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[7];
                CaptionClass=SetColumnCaption(7);
                Visible=ColumnValue7Enabled;
                Enabled=ColumnValue7Enabled }

    { 1101495015;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[8];
                CaptionClass=SetColumnCaption(8);
                Visible=ColumnValue8Enabled;
                Enabled=ColumnValue8Enabled }

    { 1101495016;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[9];
                CaptionClass=SetColumnCaption(9);
                Visible=ColumnValue9Enabled;
                Enabled=ColumnValue9Enabled }

    { 1101495017;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[10];
                CaptionClass=SetColumnCaption(10);
                Visible=ColumnValue10Enabled;
                Enabled=ColumnValue10Enabled }

    { 1101495018;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[11];
                CaptionClass=SetColumnCaption(11);
                Visible=ColumnValue11Enabled;
                Enabled=ColumnValue11Enabled }

    { 1101495019;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[12];
                CaptionClass=SetColumnCaption(12);
                Visible=ColumnValue12Enabled;
                Enabled=ColumnValue12Enabled }

    { 1101495020;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[13];
                CaptionClass=SetColumnCaption(13);
                Visible=ColumnValue13Enabled;
                Enabled=ColumnValue13Enabled }

    { 1101495021;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[14];
                CaptionClass=SetColumnCaption(14);
                Visible=ColumnValue14Enabled;
                Enabled=ColumnValue14Enabled }

    { 1101495022;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[15];
                CaptionClass=SetColumnCaption(15);
                Visible=ColumnValue15Enabled;
                Enabled=ColumnValue15Enabled }

    { 1101495023;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[16];
                CaptionClass=SetColumnCaption(16);
                Visible=ColumnValue16Enabled;
                Enabled=ColumnValue16Enabled }

    { 1101495024;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[17];
                CaptionClass=SetColumnCaption(17);
                Visible=ColumnValue17Enabled;
                Enabled=ColumnValue17Enabled }

    { 1101495025;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[18];
                CaptionClass=SetColumnCaption(18);
                Visible=ColumnValue18Enabled;
                Enabled=ColumnValue18Enabled }

    { 1101495026;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[19];
                CaptionClass=SetColumnCaption(19);
                Visible=ColumnValue19Enabled;
                Enabled=ColumnValue19Enabled }

    { 1101495027;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[20];
                CaptionClass=SetColumnCaption(20);
                Visible=ColumnValue20Enabled;
                Enabled=ColumnValue20Enabled }

    { 1101495028;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[21];
                CaptionClass=SetColumnCaption(21);
                Visible=ColumnValue21Enabled;
                Enabled=ColumnValue21Enabled }

    { 1101495029;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[22];
                CaptionClass=SetColumnCaption(22);
                Visible=ColumnValue22Enabled;
                Enabled=ColumnValue22Enabled }

    { 1101495030;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[23];
                CaptionClass=SetColumnCaption(23);
                Visible=ColumnValue23Enabled;
                Enabled=ColumnValue23Enabled }

    { 1101495031;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[24];
                CaptionClass=SetColumnCaption(24);
                Visible=ColumnValue24Enabled;
                Enabled=ColumnValue24Enabled }

    { 1101495032;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[25];
                CaptionClass=SetColumnCaption(25);
                Visible=ColumnValue25Enabled;
                Enabled=ColumnValue25Enabled }

    { 1101495033;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[26];
                CaptionClass=SetColumnCaption(26);
                Visible=ColumnValue26Enabled;
                Enabled=ColumnValue26Enabled }

    { 1101495034;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[27];
                CaptionClass=SetColumnCaption(27);
                Visible=ColumnValue27Enabled;
                Enabled=ColumnValue27Enabled }

    { 1101495035;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[28];
                CaptionClass=SetColumnCaption(28);
                Visible=ColumnValue28Enabled;
                Enabled=ColumnValue28Enabled }

    { 1101495036;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[29];
                CaptionClass=SetColumnCaption(29);
                Visible=ColumnValue29Enabled;
                Enabled=ColumnValue29Enabled }

    { 1101495037;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[30];
                CaptionClass=SetColumnCaption(30);
                Visible=ColumnValue30Enabled;
                Enabled=ColumnValue30Enabled }

    { 1101495038;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[31];
                CaptionClass=SetColumnCaption(31);
                Visible=ColumnValue31Enabled;
                Enabled=ColumnValue31Enabled }

    { 1101495039;2;Field  ;
                OptionCaptionML=[ENU=" ,Code Mandatory,Same Code,No Code";
                                 RUS=" ,Обязательный код,Единый код,Нет кода"];
                SourceExpr=ColumnValue[32];
                CaptionClass=SetColumnCaption(32);
                Visible=ColumnValue32Enabled;
                Enabled=ColumnValue32Enabled }

  }
  CODE
  {
    VAR
      GLAccount@1101495000 : Record 15;
      DefaultDimension@1101495002 : Record 352;
      Dimension@1101495003 : Record 348;
      ColumnValue@1101495001 : ARRAY [32] OF Option;
      ColumnValue1Enabled@1101495004 : Boolean INDATASET;
      ColumnValue2Enabled@1101495005 : Boolean INDATASET;
      ColumnValue3Enabled@1101495006 : Boolean INDATASET;
      ColumnValue4Enabled@1101495007 : Boolean INDATASET;
      ColumnValue5Enabled@1101495008 : Boolean INDATASET;
      ColumnValue6Enabled@1101495013 : Boolean INDATASET;
      ColumnValue7Enabled@1101495012 : Boolean INDATASET;
      ColumnValue8Enabled@1101495011 : Boolean INDATASET;
      ColumnValue9Enabled@1101495010 : Boolean INDATASET;
      ColumnValue10Enabled@1101495009 : Boolean INDATASET;
      ColumnValue11Enabled@1101495018 : Boolean INDATASET;
      ColumnValue12Enabled@1101495017 : Boolean INDATASET;
      ColumnValue13Enabled@1101495016 : Boolean INDATASET;
      ColumnValue14Enabled@1101495015 : Boolean INDATASET;
      ColumnValue15Enabled@1101495014 : Boolean INDATASET;
      ColumnValue16Enabled@1101495023 : Boolean INDATASET;
      ColumnValue17Enabled@1101495022 : Boolean INDATASET;
      ColumnValue18Enabled@1101495021 : Boolean INDATASET;
      ColumnValue19Enabled@1101495020 : Boolean INDATASET;
      ColumnValue20Enabled@1101495019 : Boolean INDATASET;
      ColumnValue21Enabled@1101495028 : Boolean INDATASET;
      ColumnValue22Enabled@1101495027 : Boolean INDATASET;
      ColumnValue23Enabled@1101495026 : Boolean INDATASET;
      ColumnValue24Enabled@1101495025 : Boolean INDATASET;
      ColumnValue25Enabled@1101495024 : Boolean INDATASET;
      ColumnValue26Enabled@1101495033 : Boolean INDATASET;
      ColumnValue27Enabled@1101495032 : Boolean INDATASET;
      ColumnValue28Enabled@1101495031 : Boolean INDATASET;
      ColumnValue29Enabled@1101495030 : Boolean INDATASET;
      ColumnValue30Enabled@1101495029 : Boolean INDATASET;
      ColumnValue31Enabled@1101495034 : Boolean INDATASET;
      ColumnValue32Enabled@1101495035 : Boolean INDATASET;
      Emphasize@1101495037 : Boolean INDATASET;
      Indent@1101495036 : Integer;

    LOCAL PROCEDURE BuildColumnValues@1101495005(AccNo@1101495000 : Code[20]);
    VAR
      I@1101495001 : Integer;
    BEGIN
      CLEAR(ColumnValue);
      I := 1;
      IF Dimension.FIND('-') THEN
        REPEAT
          IF DefaultDimension.GET(DATABASE::"G/L Account", AccNo, Dimension.Code) THEN
            ColumnValue[I] := DefaultDimension."Value Posting";
          I += 1;
        UNTIL (Dimension.NEXT = 0) OR (I > ARRAYLEN(ColumnValue));
    END;

    LOCAL PROCEDURE SetColumnCaption@1101495007(Index@1101495000 : Integer) : Code[20];
    BEGIN
      IF Index < 1 THEN
        EXIT('');

      IF Index > Dimension.COUNT THEN
        EXIT('');

      Dimension.FINDFIRST;
      IF Index = 1 THEN
        EXIT(Dimension.Code);

      Dimension.NEXT(Index - 1);
      EXIT(Dimension.Code);
    END;

    LOCAL PROCEDURE SetColumnVisible@1101495017();
    BEGIN
      IF NOT Dimension.FINDFIRST THEN
        EXIT;
      ColumnValue1Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue2Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue3Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue4Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue5Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue6Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue7Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue8Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue9Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue10Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue11Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue12Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue13Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue14Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue15Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue16Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue17Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue18Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue19Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue20Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue21Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue22Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue23Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue24Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue25Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue26Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue27Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue28Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue29Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue30Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue31Enabled := TRUE;
      IF Dimension.NEXT = 0 THEN
        EXIT;
      ColumnValue32Enabled := TRUE;
    END;

    LOCAL PROCEDURE GetCaption@2() : Text[250];
    BEGIN
      IF GLAccount."No." <> "No." THEN
        GLAccount.GET("No.");
      EXIT(STRSUBSTNO('%1 %2',GLAccount."No.",GLAccount.Name));
    END;

    BEGIN
    {
      NC NOS-26 SPA Перенесена страница просмотра измерений счетов ГК
    }
    END.
  }
}

