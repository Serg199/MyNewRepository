OBJECT Page 7378 Invt. Pick Subform
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00,NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Lines;
               RUS=Строки];
    MultipleNewLines=Yes;
    InsertAllowed=No;
    LinksAllowed=No;
    SourceTable=Table5767;
    SourceTableView=WHERE(Activity Type=CONST(Invt. Pick));
    PageType=ListPart;
    OnNewRecord=BEGIN
                  "Activity Type" := xRec."Activity Type";
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.UPDATE(FALSE);
                   END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1906587504;1 ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 RUS=Ф&ункции];
                      Image=Action }
      { 1900206104;2 ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      CaptionML=[ENU=&Split Line;
                                 RUS=&Разделить строку];
                      Image=Split;
                      OnAction=BEGIN
                                 CallSplitLine;
                               END;
                                }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 RUS=&Строка];
                      Image=Line }
      { 1900724104;2 ;Action    ;
                      CaptionML=[ENU=Source &Document Line;
                                 RUS=Строка докумен&та-источника];
                      Image=SourceDocLine;
                      OnAction=BEGIN
                                 ShowSourceLine;
                               END;
                                }
      { 1901652704;2 ;Action    ;
                      CaptionML=[ENU=Bin Contents List;
                                 RUS=Список содержимого ячейки];
                      Image=BinContent;
                      OnAction=BEGIN
                                 ShowBinContents;
                               END;
                                }
      { 1901652504;2 ;ActionGroup;
                      CaptionML=[ENU=Item Availability by;
                                 RUS=Наличие товара по];
                      Image=ItemAvailability }
      { 5       ;3   ;Action    ;
                      CaptionML=[ENU=Event;
                                 RUS=Событие];
                      Image=Event;
                      OnAction=BEGIN
                                 ShowItemAvailabilityByEvent;
                               END;
                                }
      { 1903098904;3 ;Action    ;
                      CaptionML=[ENU=Period;
                                 RUS=периодам];
                      Image=Period;
                      OnAction=BEGIN
                                 ShowItemAvailabilityByPeriod;
                               END;
                                }
      { 1900545304;3 ;Action    ;
                      CaptionML=[ENU=Variant;
                                 RUS=вариантам];
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ShowItemAvailabilityByVariant;
                               END;
                                }
      { 1901991704;3 ;Action    ;
                      AccessByPermission=TableData 14=R;
                      CaptionML=[ENU=Location;
                                 RUS=складам];
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ShowItemAvailabilityByLocation;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 60  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the action type for the warehouse activity line.;
                           RUS=Определяет тип действия для строки складского задания.];
                SourceExpr="Action Type";
                Visible=FALSE }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of document that the line relates to, such as a sales order.;
                           RUS=Определяет тип документа, к которому относится строка, например заказ на продажу.];
                OptionCaptionML=[ENU=" ,Sales Order,,,,,,,Purchase Return Order,,Outbound Transfer,Prod. Consumption";
                                 RUS=" ,Заказ на продажу,,,,,,,Возврат покуп.,,Исход. перемещение,Произ. потребление"];
                BlankZero=Yes;
                SourceExpr="Source Document";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the source number of the document from which the entry originates.;
                           RUS=Определяет исходный номер документа для операции.];
                SourceExpr="Source No.";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the item number of the item to be handled, such as picked or put away.;
                           RUS=Определяет номенклатурный номер, который подлежит обработке, например подбору или размещению.];
                SourceExpr="Item No." }

    { 24  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the variant code of the item to be handled.;
                           RUS=Определяет код варианта товара для обработки.];
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a description of the item on the line.;
                           RUS=Определяет описание товара в строке.];
                SourceExpr=Description }

    { 36  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the serial number to handle in the document.;
                           RUS=Определяет серийный номер для обработки в документе.];
                SourceExpr="Serial No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             SerialNoOnAfterValidate;
                           END;
                            }

    { 54  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the serial number is blocked, on its information card.;
                           RUS=Определяет в информационной карточке, что серийный номер заблокирован.];
                SourceExpr="Serial No. Blocked";
                Visible=FALSE }

    { 38  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the lot number to handle in the document.;
                           RUS=Определяет номер партии для обработки в документе.];
                SourceExpr="Lot No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             LotNoOnAfterValidate;
                           END;
                            }

    { 56  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the lot number is blocked, on its information card.;
                           RUS=Определяет в информационной карточке, что номер партии заблокирован.];
                SourceExpr="Lot No. Blocked";
                Visible=FALSE }

    { 1210000;2;Field     ;
                SourceExpr="CD No.";
                Visible=FALSE }

    { 1106000000;2;Field  ;
                ToolTipML=[ENU=Specifies the expiration date of the serial/lot numbers if you are putting items away.;
                           RUS=Определяет дату окончания срока действия серийных номеров или номеров партий при размещении товаров.];
                SourceExpr="Expiration Date";
                Visible=FALSE;
                Editable=FALSE }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the location where the activity occurs.;
                           RUS=Определяет код склада, на котором выполняется задание.];
                SourceExpr="Location Code";
                Visible=FALSE }

    { 58  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the bin where items on the line are handled.;
                           RUS=Определяет ячейку, в которой обрабатываются товары из строки.];
                SourceExpr="Bin Code";
                OnValidate=BEGIN
                             BinCodeOnAfterValidate;
                           END;
                            }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the shelf number of the item for informational use.;
                           RUS=Определяет номер полки товара для информации.];
                SourceExpr="Shelf No.";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the quantity of the item to be handled, such as received, put-away, or assigned.;
                           RUS=Определяет количество товара, который подлежит обработке, например получению, размещению или распределению.];
                SourceExpr=Quantity }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the quantity of the item to be handled, in the base unit of measure.;
                           RUS=Определяет количество товара, которое подлежит обработке, выраженное в базовых единицах измерения.];
                SourceExpr="Qty. (Base)";
                Visible=FALSE }

    { 46  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many units to handle in this warehouse activity.;
                           RUS=Определяет количество единиц товара, которое подлежит обработке в этом складском задании.];
                SourceExpr="Qty. to Handle";
                OnValidate=BEGIN
                             QtytoHandleOnAfterValidate;
                           END;
                            }

    { 20  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of items on the line that have been handled in this warehouse activity.;
                           RUS=Определяет количество товаров в строке, которые были подвергнуты обработке в этом складском задании.];
                SourceExpr="Qty. Handled";
                Visible=TRUE }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the quantity of items to be handled in this warehouse activity.;
                           RUS=Определяет количество товаров, которое подлежит обработке в этом складском задании.];
                SourceExpr="Qty. to Handle (Base)";
                Visible=FALSE }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of items on the line that have been handled in this warehouse activity.;
                           RUS=Определяет количество товаров в строке, которые были подвергнуты обработке в этом складском задании.];
                SourceExpr="Qty. Handled (Base)";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of items that have not yet been handled for this warehouse activity line.;
                           RUS=Определяет количество товаров, которые еще не были обработаны в этой строке складского задания.];
                SourceExpr="Qty. Outstanding";
                Visible=TRUE }

    { 18  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of items, expressed in the base unit of measure, that have not yet been handled for this warehouse activity line.;
                           RUS=Определяет количество товаров в базовой единице измерения, которые еще не были обработаны в этой строке складского задания.];
                SourceExpr="Qty. Outstanding (Base)";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the warehouse activity must be completed.;
                           RUS=Определяет дату, когда необходимо завершить складское задание.];
                SourceExpr="Due Date";
                Visible=FALSE }

    { 26  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the unit of measure code of the item on the line.;
                           RUS=Определяет код единицы измерения товара в строке.];
                SourceExpr="Unit of Measure Code" }

    { 34  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the quantity per unit of measure of the item on the line.;
                           RUS=Определяет количество на единицу измерения товара в строке.];
                SourceExpr="Qty. per Unit of Measure";
                Visible=FALSE }

    { 40  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the shipping advice, informing whether partial deliveries are acceptable, copied from the source document header.;
                           RUS=Определяет статус отгрузки, который копируется из заголовка документа-источника и содержит информацию о том, допускается ли частичная поставка.];
                SourceExpr="Shipping Advice";
                Visible=FALSE }

    { 42  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies information about the type of destination, such as customer or vendor, associated with the warehouse activity line.;
                           RUS=Определяет сведения о типе пункта назначения (например, клиент или поставщик), связанного с этой строкой складского задания.];
                SourceExpr="Destination Type";
                Visible=FALSE }

    { 44  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number or code of the customer, vendor or location related to the activity line.;
                           RUS=Определяет номер или код клиента, поставщика или склада, связанного со строкой задания.];
                SourceExpr="Destination No.";
                Visible=FALSE }

    { 48  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the shipping agent who is transporting the items.;
                           RUS=Определяет код экспедитора, который будет перевозить товары.];
                SourceExpr="Shipping Agent Code";
                Visible=FALSE }

    { 50  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the service, such as a one-day delivery, offered by a shipping agent.;
                           RUS=Определяет код услуги экспедитора, например доставки в течение дня.];
                SourceExpr="Shipping Agent Service Code";
                Visible=FALSE }

    { 52  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the shipment method code for this warehouse activity line.;
                           RUS=Определяет код метода доставки для этой строки складского задания.];
                SourceExpr="Shipment Method Code";
                Visible=FALSE }

    { 68  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the equipment required when you perform the action on the line.;
                           RUS=Определяет код оборудования, которое требуется при выполнении задания в строке.];
                SourceExpr="Special Equipment Code";
                Visible=FALSE }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that the inventory pick line is for assembly items that are assembled to a sales order before being shipped.;
                           RUS=Указывает, что строка складского подбора относится к сборочным элементам, которые собираются в заказ на продажу до его отгрузки.];
                SourceExpr="Assemble to Order";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      WMSMgt@1000 : Codeunit 7302;

    LOCAL PROCEDURE ShowSourceLine@1();
    BEGIN
      WMSMgt.ShowSourceDocLine("Source Type","Source Subtype","Source No.","Source Line No.","Source Subline No.");
    END;

    LOCAL PROCEDURE ShowBinContents@7301();
    VAR
      BinContent@1000 : Record 7302;
    BEGIN
      BinContent.ShowBinContents("Location Code","Item No.","Variant Code",'')
    END;

    PROCEDURE AutofillQtyToHandle@10();
    VAR
      WhseActivLine@1000 : Record 5767;
    BEGIN
      WhseActivLine.COPY(Rec);
      AutofillQtyToHandle(WhseActivLine);
    END;

    PROCEDURE DeleteQtyToHandle@4();
    VAR
      WhseActivLine@1000 : Record 5767;
    BEGIN
      WhseActivLine.COPY(Rec);
      DeleteQtyToHandle(WhseActivLine);
    END;

    LOCAL PROCEDURE CallSplitLine@7300();
    VAR
      WhseActivLine@1000 : Record 5767;
    BEGIN
      WhseActivLine.COPY(Rec);
      SplitLine(WhseActivLine);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE PostPickYesNo@2();
    VAR
      WhseActivLine@1001 : Record 5767;
    BEGIN
      WhseActivLine.COPY(Rec);
      CODEUNIT.RUN(CODEUNIT::"Whse.-Act.-Post (Yes/No)",Rec);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE PostAndPrint@3();
    VAR
      WhseActivLine@1001 : Record 5767;
      WhseActivPostYesNo@1000 : Codeunit 7323;
    BEGIN
      WhseActivLine.COPY(Rec);
      WhseActivPostYesNo.PrintDocument(TRUE);
      WhseActivPostYesNo.RUN(WhseActivLine);
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE UpdateForm@1102601000();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SerialNoOnAfterValidate@19074494();
    VAR
      ItemTrackingMgt@1000 : Codeunit 6500;
      ExpDate@1106000000 : Date;
      EntriesExist@1106000002 : Boolean;
    BEGIN
      IF "Serial No." <> '' THEN
        ExpDate := ItemTrackingMgt.ExistingExpirationDate("Item No.","Variant Code",
            "Lot No.","Serial No.",FALSE,EntriesExist);

      IF ExpDate <> 0D THEN
        "Expiration Date" := ExpDate;
    END;

    LOCAL PROCEDURE LotNoOnAfterValidate@19045288();
    VAR
      ItemTrackingMgt@1000 : Codeunit 6500;
      ExpDate@1106000000 : Date;
      EntriesExist@1106000002 : Boolean;
    BEGIN
      IF "Lot No." <> '' THEN
        ExpDate := ItemTrackingMgt.ExistingExpirationDate("Item No.","Variant Code",
            "Lot No.","Serial No.",FALSE,EntriesExist);

      IF ExpDate <> 0D THEN
        "Expiration Date" := ExpDate;
    END;

    LOCAL PROCEDURE BinCodeOnAfterValidate@19073508();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE QtytoHandleOnAfterValidate@19067087();
    BEGIN
      CurrPage.SAVERECORD;
    END;

    BEGIN
    END.
  }
}

