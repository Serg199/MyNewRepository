OBJECT Table 115 Sales Cr.Memo Line
{
  OBJECT-PROPERTIES
  {
    Date=07.06.17;
    Time=17:37:40;
    Modified=Yes;
    Version List=NAVW110.00,NAVRU10.00,NOS-26;
  }
  PROPERTIES
  {
    Permissions=TableData 32=r,
                TableData 5802=r;
    OnDelete=VAR
               SalesDocLineComments@1000 : Record 44;
               PostedDeferralHeader@1001 : Record 1704;
             BEGIN
               SalesDocLineComments.SETRANGE("Document Type",SalesDocLineComments."Document Type"::"Posted Credit Memo");
               SalesDocLineComments.SETRANGE("No.","Document No.");
               SalesDocLineComments.SETRANGE("Document Line No.","Line No.");
               IF NOT SalesDocLineComments.ISEMPTY THEN
                 SalesDocLineComments.DELETEALL;

               PostedDeferralHeader.DeleteHeader(DeferralUtilities.GetSalesDeferralDocType,'','',
                 SalesDocLineComments."Document Type"::"Posted Credit Memo","Document No.","Line No.");
             END;

    CaptionML=[ENU=Sales Cr.Memo Line;
               RUS=Строка кредит-ноты продажи];
    LookupPageID=Page527;
    DrillDownPageID=Page527;
  }
  FIELDS
  {
    { 2   ;   ;Sell-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Sell-to Customer No.;
                                                              RUS=Код клиента];
                                                   Editable=No }
    { 3   ;   ;Document No.        ;Code20        ;TableRelation="Sales Cr.Memo Header";
                                                   CaptionML=[ENU=Document No.;
                                                              RUS=Номер документа] }
    { 4   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              RUS=Номер строки] }
    { 5   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              RUS=Тип];
                                                   OptionCaptionML=[ENU=" ,G/L Account,Item,Resource,Fixed Asset,Charge (Item)";
                                                                    RUS=" ,Счет ГК,Товар,Ресурс,Основное средство,Издержки (товар)"];
                                                   OptionString=[ ,G/L Account,Item,Resource,Fixed Asset,Charge (Item)] }
    { 6   ;   ;No.                 ;Code20        ;TableRelation=IF (Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Type=CONST(Item)) Item
                                                                 ELSE IF (Type=CONST(Resource)) Resource
                                                                 ELSE IF (Type=CONST(Fixed Asset)) "Fixed Asset"
                                                                 ELSE IF (Type=CONST("Charge (Item)")) "Item Charge";
                                                   CaptionML=[ENU=No.;
                                                              RUS=Номер];
                                                   CaptionClass=GetCaptionClass(FIELDNO("No.")) }
    { 7   ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=[ENU=Location Code;
                                                              RUS=Код склада] }
    { 8   ;   ;Posting Group       ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Inventory Posting Group"
                                                                 ELSE IF (Type=CONST(Fixed Asset)) "FA Posting Group";
                                                   CaptionML=[ENU=Posting Group;
                                                              RUS=Учетная группа];
                                                   Editable=No }
    { 10  ;   ;Shipment Date       ;Date          ;CaptionML=[ENU=Shipment Date;
                                                              RUS=Дата отгрузки] }
    { 11  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 12  ;   ;Description 2       ;Text50        ;CaptionML=[ENU=Description 2;
                                                              RUS=Описание 2] }
    { 13  ;   ;Unit of Measure     ;Text10        ;CaptionML=[ENU=Unit of Measure;
                                                              RUS=Единица измерения] }
    { 15  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              RUS=Кол-во];
                                                   DecimalPlaces=0:5 }
    { 22  ;   ;Unit Price          ;Decimal       ;CaptionML=[ENU=Unit Price;
                                                              RUS=Цена единицы];
                                                   AutoFormatType=2;
                                                   AutoFormatExpr=GetCurrencyCode;
                                                   CaptionClass=GetCaptionClass(FIELDNO("Unit Price")) }
    { 23  ;   ;Unit Cost (LCY)     ;Decimal       ;CaptionML=[ENU=Unit Cost (LCY);
                                                              RUS=Себестоимость единицы (руб.)];
                                                   Description=NOS-26;
                                                   AutoFormatType=2;
                                                   CaptionClass=['1,11,1,115,23' ] }
    { 25  ;   ;VAT %               ;Decimal       ;CaptionML=[ENU=VAT %;
                                                              RUS=НДС (%)];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 27  ;   ;Line Discount %     ;Decimal       ;CaptionML=[ENU=Line Discount %;
                                                              RUS=Скидка строки (%)];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 28  ;   ;Line Discount Amount;Decimal       ;CaptionML=[ENU=Line Discount Amount;
                                                              RUS=Сумма скидки строки];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 29  ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              RUS=Сумма];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 30  ;   ;Amount Including VAT;Decimal       ;CaptionML=[ENU=Amount Including VAT;
                                                              RUS=Сумма с учетом НДС];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 32  ;   ;Allow Invoice Disc. ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Allow Invoice Disc.;
                                                              RUS=Разрешить скидку по счету] }
    { 34  ;   ;Gross Weight        ;Decimal       ;CaptionML=[ENU=Gross Weight;
                                                              RUS=Вес брутто];
                                                   DecimalPlaces=0:5 }
    { 35  ;   ;Net Weight          ;Decimal       ;CaptionML=[ENU=Net Weight;
                                                              RUS=Вес нетто];
                                                   DecimalPlaces=0:5 }
    { 36  ;   ;Units per Parcel    ;Decimal       ;CaptionML=[ENU=Units per Parcel;
                                                              RUS=Кол-во единиц в упаковке];
                                                   DecimalPlaces=0:5 }
    { 37  ;   ;Unit Volume         ;Decimal       ;CaptionML=[ENU=Unit Volume;
                                                              RUS=Объем единицы];
                                                   DecimalPlaces=0:5 }
    { 38  ;   ;Appl.-to Item Entry ;Integer       ;AccessByPermission=TableData 27=R;
                                                   CaptionML=[ENU=Appl.-to Item Entry;
                                                              RUS=Примен. к товарной операции] }
    { 40  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              RUS=Код ярлыка измерения 1];
                                                   CaptionClass='1,2,1' }
    { 41  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              RUS=Код ярлыка измерения 2];
                                                   CaptionClass='1,2,2' }
    { 42  ;   ;Customer Price Group;Code10        ;TableRelation="Customer Price Group";
                                                   CaptionML=[ENU=Customer Price Group;
                                                              RUS=Ценовая группа клиента] }
    { 45  ;   ;Job No.             ;Code20        ;TableRelation=Job;
                                                   CaptionML=[ENU=Job No.;
                                                              RUS=Код работы] }
    { 52  ;   ;Work Type Code      ;Code10        ;TableRelation="Work Type";
                                                   CaptionML=[ENU=Work Type Code;
                                                              RUS=Код вида работы] }
    { 68  ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Bill-to Customer No.;
                                                              RUS=Код плательщика];
                                                   Editable=No }
    { 69  ;   ;Inv. Discount Amount;Decimal       ;CaptionML=[ENU=Inv. Discount Amount;
                                                              RUS=Сумма скидки по счету];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 74  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              RUS=Общая бизнес-группа] }
    { 75  ;   ;Gen. Prod. Posting Group;Code10    ;TableRelation="Gen. Product Posting Group";
                                                   CaptionML=[ENU=Gen. Prod. Posting Group;
                                                              RUS=Общая товарная группа] }
    { 77  ;   ;VAT Calculation Type;Option        ;CaptionML=[ENU=VAT Calculation Type;
                                                              RUS=Тип расчета НДС];
                                                   OptionCaptionML=[ENU=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax;
                                                                    RUS=Обычный НДС,Обратный НДС,Полный НДС,Налог с продаж];
                                                   OptionString=Normal VAT,Reverse Charge VAT,Full VAT,Sales Tax }
    { 78  ;   ;Transaction Type    ;Code10        ;TableRelation="Transaction Type";
                                                   CaptionML=[ENU=Transaction Type;
                                                              RUS=Тип транзакции] }
    { 79  ;   ;Transport Method    ;Code10        ;TableRelation="Transport Method";
                                                   CaptionML=[ENU=Transport Method;
                                                              RUS=Метод перевозки] }
    { 80  ;   ;Attached to Line No.;Integer       ;TableRelation="Sales Cr.Memo Line"."Line No." WHERE (Document No.=FIELD(Document No.));
                                                   CaptionML=[ENU=Attached to Line No.;
                                                              RUS=Вложение для строки номер] }
    { 81  ;   ;Exit Point          ;Code10        ;TableRelation="Entry/Exit Point";
                                                   CaptionML=[ENU=Exit Point;
                                                              RUS=Пункт вывоза] }
    { 82  ;   ;Area                ;Code10        ;TableRelation=Area;
                                                   CaptionML=[ENU=Area;
                                                              RUS=Область] }
    { 83  ;   ;Transaction Specification;Code10   ;TableRelation="Transaction Specification";
                                                   CaptionML=[ENU=Transaction Specification;
                                                              RUS=Спецификация транзакции] }
    { 84  ;   ;Tax Category        ;Code10        ;CaptionML=[ENU=Tax Category;
                                                              RUS=Налоговая категория] }
    { 85  ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=[ENU=Tax Area Code;
                                                              RUS=Код налоговой области] }
    { 86  ;   ;Tax Liable          ;Boolean       ;CaptionML=[ENU=Tax Liable;
                                                              RUS=Облагается налогом] }
    { 87  ;   ;Tax Group Code      ;Code10        ;TableRelation="Tax Group";
                                                   CaptionML=[ENU=Tax Group Code;
                                                              RUS=Код налоговой группы] }
    { 88  ;   ;VAT Clause Code     ;Code10        ;TableRelation="VAT Clause";
                                                   CaptionML=[ENU=VAT Clause Code;
                                                              RUS=Код Условия НДС] }
    { 89  ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              RUS=НДС бизнес-группа] }
    { 90  ;   ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              RUS=НДС товарная группа] }
    { 97  ;   ;Blanket Order No.   ;Code20        ;TableRelation="Sales Header".No. WHERE (Document Type=CONST(Blanket Order));
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Blanket Order No.;
                                                              RUS=Номер общего заказа] }
    { 98  ;   ;Blanket Order Line No.;Integer     ;TableRelation="Sales Line"."Line No." WHERE (Document Type=CONST(Blanket Order),
                                                                                                Document No.=FIELD(Blanket Order No.));
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Blanket Order Line No.;
                                                              RUS=Номер строки общего заказа] }
    { 99  ;   ;VAT Base Amount     ;Decimal       ;CaptionML=[ENU=VAT Base Amount;
                                                              RUS=База расчета НДС];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 100 ;   ;Unit Cost           ;Decimal       ;CaptionML=[ENU=Unit Cost;
                                                              RUS=Себестоимость единицы];
                                                   Editable=No;
                                                   AutoFormatType=2;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 101 ;   ;System-Created Entry;Boolean       ;CaptionML=[ENU=System-Created Entry;
                                                              RUS=Созданная системой операция];
                                                   Editable=No }
    { 103 ;   ;Line Amount         ;Decimal       ;CaptionML=[ENU=Line Amount;
                                                              RUS=Сумма строки];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode;
                                                   CaptionClass=GetCaptionClass(FIELDNO("Line Amount")) }
    { 104 ;   ;VAT Difference      ;Decimal       ;CaptionML=[ENU=VAT Difference;
                                                              RUS=Разница НДС];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 106 ;   ;VAT Identifier      ;Code10        ;CaptionML=[ENU=VAT Identifier;
                                                              RUS=Идентификатор НДС];
                                                   Editable=No }
    { 107 ;   ;IC Partner Ref. Type;Option        ;CaptionML=[ENU=IC Partner Ref. Type;
                                                              RUS=МФ Тип ссылки на партнера];
                                                   OptionCaptionML=[ENU=" ,G/L Account,Item,,,Charge (Item),Cross reference,Common Item No.";
                                                                    RUS=" ,Счет ГК,Товар,,,Издержки (товар),Перекр. ссылка,Код общего товара"];
                                                   OptionString=[ ,G/L Account,Item,,,Charge (Item),Cross reference,Common Item No.] }
    { 108 ;   ;IC Partner Reference;Code20        ;CaptionML=[ENU=IC Partner Reference;
                                                              RUS=МФ Ссылка на партнера] }
    { 123 ;   ;Prepayment Line     ;Boolean       ;CaptionML=[ENU=Prepayment Line;
                                                              RUS=Строка предоплаты];
                                                   Editable=No }
    { 130 ;   ;IC Partner Code     ;Code20        ;TableRelation="IC Partner";
                                                   CaptionML=[ENU=IC Partner Code;
                                                              RUS=Код МФ-партнера] }
    { 131 ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              RUS=Дата учета] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              RUS=Код набора измерений];
                                                   Editable=No }
    { 1001;   ;Job Task No.        ;Code20        ;TableRelation="Job Task"."Job Task No." WHERE (Job No.=FIELD(Job No.));
                                                   CaptionML=[ENU=Job Task No.;
                                                              RUS=Номер рабочего задания];
                                                   Editable=No }
    { 1002;   ;Job Contract Entry No.;Integer     ;CaptionML=[ENU=Job Contract Entry No.;
                                                              RUS=Номер операции контракта на работу];
                                                   Editable=No }
    { 1700;   ;Deferral Code       ;Code10        ;TableRelation="Deferral Template"."Deferral Code";
                                                   CaptionML=[ENU=Deferral Code;
                                                              RUS=Код РБП] }
    { 5402;   ;Variant Code        ;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Variant".Code WHERE (Item No.=FIELD(No.));
                                                   CaptionML=[ENU=Variant Code;
                                                              RUS=Код варианта] }
    { 5403;   ;Bin Code            ;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Location Code),
                                                                                 Item Filter=FIELD(No.),
                                                                                 Variant Filter=FIELD(Variant Code));
                                                   CaptionML=[ENU=Bin Code;
                                                              RUS=Код ячейки] }
    { 5404;   ;Qty. per Unit of Measure;Decimal   ;CaptionML=[ENU=Qty. per Unit of Measure;
                                                              RUS=Кол-во в единице измерения];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 5407;   ;Unit of Measure Code;Code10        ;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.))
                                                                 ELSE "Unit of Measure";
                                                   CaptionML=[ENU=Unit of Measure Code;
                                                              RUS=Код единицы измерения] }
    { 5415;   ;Quantity (Base)     ;Decimal       ;CaptionML=[ENU=Quantity (Base);
                                                              RUS=Количество (баз.)];
                                                   DecimalPlaces=0:5 }
    { 5600;   ;FA Posting Date     ;Date          ;CaptionML=[ENU=FA Posting Date;
                                                              RUS=Дата учета ОС] }
    { 5602;   ;Depreciation Book Code;Code10      ;TableRelation="Depreciation Book";
                                                   CaptionML=[ENU=Depreciation Book Code;
                                                              RUS=Код книги амортизации] }
    { 5605;   ;Depr. until FA Posting Date;Boolean;CaptionML=[ENU=Depr. until FA Posting Date;
                                                              RUS=Амортизация до даты учета ОС] }
    { 5612;   ;Duplicate in Depreciation Book;Code10;
                                                   TableRelation="Depreciation Book";
                                                   CaptionML=[ENU=Duplicate in Depreciation Book;
                                                              RUS=Дубл. в книге амортизации] }
    { 5613;   ;Use Duplication List;Boolean       ;CaptionML=[ENU=Use Duplication List;
                                                              RUS=Использ. список дублирования] }
    { 5700;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center";
                                                   CaptionML=[ENU=Responsibility Center;
                                                              RUS=Центр ответственности] }
    { 5705;   ;Cross-Reference No. ;Code20        ;AccessByPermission=TableData 5717=R;
                                                   CaptionML=[ENU=Cross-Reference No.;
                                                              RUS=Номер перекрестной ссылки] }
    { 5706;   ;Unit of Measure (Cross Ref.);Code10;TableRelation=IF (Type=CONST(Item)) "Item Unit of Measure".Code WHERE (Item No.=FIELD(No.));
                                                   CaptionML=[ENU=Unit of Measure (Cross Ref.);
                                                              RUS=Единица измерения (перекрестная ссылка)] }
    { 5707;   ;Cross-Reference Type;Option        ;CaptionML=[ENU=Cross-Reference Type;
                                                              RUS=Тип перекрестной ссылки];
                                                   OptionCaptionML=[ENU=" ,Customer,Vendor,Bar Code";
                                                                    RUS=" ,Клиент,Поставщик,Штрих-код"];
                                                   OptionString=[ ,Customer,Vendor,Bar Code] }
    { 5708;   ;Cross-Reference Type No.;Code30    ;CaptionML=[ENU=Cross-Reference Type No.;
                                                              RUS=Код типа перекрестной ссылки] }
    { 5709;   ;Item Category Code  ;Code20        ;TableRelation=IF (Type=CONST(Item)) "Item Category";
                                                   CaptionML=[ENU=Item Category Code;
                                                              RUS=Код товарной категории] }
    { 5710;   ;Nonstock            ;Boolean       ;CaptionML=[ENU=Nonstock;
                                                              RUS=Нескладируемый] }
    { 5711;   ;Purchasing Code     ;Code10        ;TableRelation=Purchasing;
                                                   CaptionML=[ENU=Purchasing Code;
                                                              RUS=Код закупки] }
    { 5712;   ;Product Group Code  ;Code10        ;TableRelation="Product Group".Code WHERE (Item Category Code=FIELD(Item Category Code));
                                                   CaptionML=[ENU=Product Group Code;
                                                              RUS=Код товарной группы] }
    { 5811;   ;Appl.-from Item Entry;Integer      ;AccessByPermission=TableData 27=R;
                                                   CaptionML=[ENU=Appl.-from Item Entry;
                                                              RUS=Примен. из товарной операции] }
    { 6600;   ;Return Receipt No.  ;Code20        ;CaptionML=[ENU=Return Receipt No.;
                                                              RUS=Возврат - номер накладной];
                                                   Editable=No }
    { 6601;   ;Return Receipt Line No.;Integer    ;CaptionML=[ENU=Return Receipt Line No.;
                                                              RUS=Номер строки возвр. накл.];
                                                   Editable=No }
    { 6608;   ;Return Reason Code  ;Code10        ;TableRelation="Return Reason";
                                                   CaptionML=[ENU=Return Reason Code;
                                                              RUS=Код причины возврата] }
    { 7001;   ;Allow Line Disc.    ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Allow Line Disc.;
                                                              RUS=Разрешить скидку строки] }
    { 7002;   ;Customer Disc. Group;Code20        ;TableRelation="Customer Discount Group";
                                                   CaptionML=[ENU=Customer Disc. Group;
                                                              RUS=Группа скидки клиента] }
    { 12400;  ;FA Location Code    ;Code10        ;CaptionML=[ENU=FA Location Code;
                                                              RUS=Код местонахождения ОС] }
    { 12430;  ;Amount (LCY)        ;Decimal       ;CaptionML=[ENU=Amount (LCY);
                                                              RUS=Сумма (руб.)];
                                                   Description=NOS-26;
                                                   CaptionClass=['1,11,1,115,12431' ] }
    { 12431;  ;Amount Including VAT (LCY);Decimal ;CaptionML=[ENU=Amount Including VAT (LCY);
                                                              RUS=Сумма с учетом НДС (руб.)];
                                                   Description=NOS-26;
                                                   CaptionClass=['1,11,1,115,12431' ] }
    { 12440;  ;FA Charge           ;Boolean       ;CaptionML=[ENU=FA Charge;
                                                              RUS=Издержка ОС] }
    { 12441;  ;Corrected Doc. Line No.;Integer    ;CaptionML=[ENU=Corrected Doc. Line No.;
                                                              RUS=Номер строки скоррек. документа] }
    { 12442;  ;Original Type       ;Option        ;CaptionML=[ENU=Original Type;
                                                              RUS=Исходный тип];
                                                   OptionCaptionML=[ENU=" ,G/L Account,Item,Resource,Fixed Asset,Charge (Item)";
                                                                    RUS=" ,Счет ГК,Товар,Ресурс,Основное средство,Издержки (товар)"];
                                                   OptionString=[ ,G/L Account,Item,Resource,Fixed Asset,Charge (Item)] }
    { 12443;  ;Original No.        ;Code20        ;TableRelation=IF (Original Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Original Type=CONST(Item)) Item
                                                                 ELSE IF (Original Type=CONST(Resource)) Resource
                                                                 ELSE IF (Original Type=CONST(Fixed Asset)) "Fixed Asset"
                                                                 ELSE IF (Original Type=CONST("Charge (Item)")) "Item Charge";
                                                   CaptionML=[ENU=Original No.;
                                                              RUS=Исходный номер] }
    { 12445;  ;Quantity (Before)   ;Decimal       ;CaptionML=[ENU=Quantity (Before);
                                                              RUS=Кол-во (до)] }
    { 12446;  ;Quantity (After)    ;Decimal       ;CaptionML=[ENU=Quantity (After);
                                                              RUS=Кол-во (после)] }
    { 12447;  ;Unit Price (Before) ;Decimal       ;CaptionML=[ENU=Unit Price (Before);
                                                              RUS=Цена единицы (до)] }
    { 12448;  ;Unit Price (After)  ;Decimal       ;CaptionML=[ENU=Unit Price (After);
                                                              RUS=Цена единицы (после)] }
    { 12449;  ;Amount (Before)     ;Decimal       ;CaptionML=[ENU=Amount (Before);
                                                              RUS=Сумма (до)] }
    { 12450;  ;Amount (After)      ;Decimal       ;CaptionML=[ENU=Amount (After);
                                                              RUS=Сумма (после)] }
    { 12451;  ;Original Doc. Type  ;Option        ;CaptionML=[ENU=Original Doc. Type;
                                                              RUS=Тип исходного док.];
                                                   OptionCaptionML=[ENU=" ,Invoice,Credit Memo";
                                                                    RUS=" ,Счет,Кредит-нота"];
                                                   OptionString=[ ,Invoice,Credit Memo] }
    { 12452;  ;Original Doc. No.   ;Code20        ;CaptionML=[ENU=Original Doc. No.;
                                                              RUS=Номер исходного док.] }
    { 12453;  ;Original Doc. Line No.;Integer     ;CaptionML=[ENU=Original Doc. Line No.;
                                                              RUS=Номер строки исх. документа] }
    { 12454;  ;Amount Including VAT (Before);Decimal;
                                                   CaptionML=[ENU=Amount Including VAT (Before);
                                                              RUS=Сумма с учетом НДС (до)] }
    { 12455;  ;Amount Including VAT (After);Decimal;
                                                   CaptionML=[ENU=Amount Including VAT (After);
                                                              RUS=Сумма с учетом НДС (после)] }
    { 12456;  ;Amount (LCY) (Before);Decimal      ;CaptionML=[ENU=Amount (LCY) (Before);
                                                              RUS=Сумма (руб) (до)];
                                                   Description=NOS-26;
                                                   CaptionClass=['1,11,1,115,12456' ] }
    { 12457;  ;Amt. Incl. VAT (LCY) (Before);Decimal;
                                                   CaptionML=[ENU=Amt. Incl. VAT (LCY) (Before);
                                                              RUS=Сумма с НДС (руб) (до)];
                                                   Description=NOS-26;
                                                   CaptionClass=['1,11,1,115,12457' ] }
    { 12458;  ;Amount (LCY) (After);Decimal       ;CaptionML=[ENU=Amount (LCY) (After);
                                                              RUS=Сумма (руб) (после)];
                                                   Description=NOS-26;
                                                   CaptionClass=['1,11,1,115,12458' ] }
    { 12459;  ;Amt. Incl. VAT (LCY) (After);Decimal;
                                                   CaptionML=[ENU=Amt. Incl. VAT (LCY) (After);
                                                              RUS=Сумма с НДС (руб) (после)];
                                                   Description=NOS-26;
                                                   CaptionClass=['1,11,1,115,12459' ] }
  }
  KEYS
  {
    {    ;Document No.,Line No.                   ;SumIndexFields=Amount,Amount Including VAT;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
    {    ;Blanket Order No.,Blanket Order Line No. }
    {    ;Sell-to Customer No.                     }
    {    ;Return Receipt No.,Return Receipt Line No. }
    {    ;Job Contract Entry No.                   }
    {    ;Bill-to Customer No.                     }
    {    ;Original Doc. Type,Original Doc. No.,Original Doc. Line No. }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ApplicationAreaSetup@1003 : Record 9178;
      DimMgt@1001 : Codeunit 408;
      DeferralUtilities@1000 : Codeunit 1720;
      ItemNoFieldCaptionTxt@1002 : TextConst 'ENU=Item No.;RUS=Код товара';

    PROCEDURE GetCurrencyCode@1() : Code[10];
    VAR
      SalesCrMemoHeader@1000 : Record 114;
    BEGIN
      IF "Document No." = SalesCrMemoHeader."No." THEN
        EXIT(SalesCrMemoHeader."Currency Code");
      IF SalesCrMemoHeader.GET("Document No.") THEN
        EXIT(SalesCrMemoHeader."Currency Code");
      EXIT('');
    END;

    PROCEDURE ShowDimensions@25();
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2 %3',TABLECAPTION,"Document No.","Line No."));
    END;

    PROCEDURE ShowItemTrackingLines@3();
    VAR
      ItemTrackingDocMgt@1000 : Codeunit 6503;
    BEGIN
      ItemTrackingDocMgt.ShowItemTrackingForInvoiceLine(RowID1);
    END;

    PROCEDURE CalcVATAmountLines@2(SalesCrMemoHeader@1000 : Record 114;VAR TempVATAmountLine@1001 : TEMPORARY Record 290);
    BEGIN
      TempVATAmountLine.DELETEALL;
      SETRANGE("Document No.",SalesCrMemoHeader."No.");
      IF FIND('-') THEN
        REPEAT
          TempVATAmountLine.INIT;
          TempVATAmountLine.CopyFromSalesCrMemoLine(Rec);
          TempVATAmountLine.InsertLine;
        UNTIL NEXT = 0;
    END;

    LOCAL PROCEDURE GetFieldCaption@31(FieldNumber@1000 : Integer) : Text[100];
    VAR
      Field@1001 : Record 2000000041;
    BEGIN
      Field.GET(DATABASE::"Sales Cr.Memo Line",FieldNumber);
      EXIT(Field."Field Caption");
    END;

    LOCAL PROCEDURE GetCaptionClass@34(FieldNumber@1000 : Integer) : Text[80];
    VAR
      SalesCrMemoHeader@1001 : Record 114;
    BEGIN
      IF NOT SalesCrMemoHeader.GET("Document No.") THEN
        SalesCrMemoHeader.INIT;
      CASE FieldNumber OF
        FIELDNO("No."):
          BEGIN
            IF ApplicationAreaSetup.IsFoundationEnabled THEN
              EXIT(STRSUBSTNO('3,%1',ItemNoFieldCaptionTxt));
            EXIT(STRSUBSTNO('3,%1',GetFieldCaption(FieldNumber)));
          END;
        ELSE BEGIN
          IF SalesCrMemoHeader."Prices Including VAT" THEN
            EXIT('2,1,' + GetFieldCaption(FieldNumber));
          EXIT('2,0,' + GetFieldCaption(FieldNumber));
        END
      END;
    END;

    PROCEDURE RowID1@44() : Text[250];
    VAR
      ItemTrackingMgt@1000 : Codeunit 6500;
    BEGIN
      EXIT(ItemTrackingMgt.ComposeRowID(DATABASE::"Sales Cr.Memo Line",
          0,"Document No.",'',0,"Line No."));
    END;

    LOCAL PROCEDURE GetReturnRcptLines@4(VAR TempReturnRcptLine@1000 : TEMPORARY Record 6661);
    VAR
      ReturnRcptLine@1003 : Record 6661;
      ItemLedgEntry@1002 : Record 32;
      ValueEntry@1001 : Record 5802;
    BEGIN
      TempReturnRcptLine.RESET;
      TempReturnRcptLine.DELETEALL;

      IF Type <> Type::Item THEN
        EXIT;

      FilterPstdDocLineValueEntries(ValueEntry);
      ValueEntry.SETFILTER("Invoiced Quantity",'<>0');
      IF ValueEntry.FINDSET THEN
        REPEAT
          ItemLedgEntry.GET(ValueEntry."Item Ledger Entry No.");
          IF ItemLedgEntry."Document Type" = ItemLedgEntry."Document Type"::"Sales Return Receipt" THEN
            IF ReturnRcptLine.GET(ItemLedgEntry."Document No.",ItemLedgEntry."Document Line No.") THEN BEGIN
              TempReturnRcptLine.INIT;
              TempReturnRcptLine := ReturnRcptLine;
              IF TempReturnRcptLine.INSERT THEN;
            END;
        UNTIL ValueEntry.NEXT = 0;
    END;

    PROCEDURE GetItemLedgEntries@6(VAR TempItemLedgEntry@1000 : TEMPORARY Record 32;SetQuantity@1003 : Boolean);
    VAR
      ItemLedgEntry@1002 : Record 32;
      ValueEntry@1001 : Record 5802;
    BEGIN
      IF SetQuantity THEN BEGIN
        TempItemLedgEntry.RESET;
        TempItemLedgEntry.DELETEALL;

        IF Type <> Type::Item THEN
          EXIT;
      END;

      FilterPstdDocLineValueEntries(ValueEntry);
      ValueEntry.SETFILTER("Invoiced Quantity",'<>0');
      IF ValueEntry.FINDSET THEN
        REPEAT
          ItemLedgEntry.GET(ValueEntry."Item Ledger Entry No.");
          TempItemLedgEntry := ItemLedgEntry;
          IF SetQuantity THEN BEGIN
            TempItemLedgEntry.Quantity := ValueEntry."Invoiced Quantity";
            IF ABS(TempItemLedgEntry."Shipped Qty. Not Returned") > ABS(TempItemLedgEntry.Quantity) THEN
              TempItemLedgEntry."Shipped Qty. Not Returned" := TempItemLedgEntry.Quantity;
          END;
          IF TempItemLedgEntry.INSERT THEN;
        UNTIL ValueEntry.NEXT = 0;
    END;

    PROCEDURE FilterPstdDocLineValueEntries@7(VAR ValueEntry@1000 : Record 5802);
    BEGIN
      ValueEntry.RESET;
      ValueEntry.SETCURRENTKEY("Document No.");
      ValueEntry.SETRANGE("Document No.","Document No.");
      ValueEntry.SETRANGE("Document Type",ValueEntry."Document Type"::"Sales Credit Memo");
      ValueEntry.SETRANGE("Document Line No.","Line No.");
    END;

    PROCEDURE ShowItemReturnRcptLines@9();
    VAR
      TempReturnRcptLine@1000 : TEMPORARY Record 6661;
    BEGIN
      IF Type = Type::Item THEN BEGIN
        GetReturnRcptLines(TempReturnRcptLine);
        PAGE.RUNMODAL(0,TempReturnRcptLine);
      END;
    END;

    PROCEDURE ShowLineComments@5();
    VAR
      SalesDocLineComments@1000 : Record 44;
      SalesDocCommentSheet@1001 : Page 67;
    BEGIN
      SalesDocLineComments.SETRANGE("Document Type",SalesDocLineComments."Document Type"::"Posted Credit Memo");
      SalesDocLineComments.SETRANGE("No.","Document No.");
      SalesDocLineComments.SETRANGE("Document Line No.","Line No.");
      SalesDocCommentSheet.SETTABLEVIEW(SalesDocLineComments);
      SalesDocCommentSheet.RUNMODAL;
    END;

    PROCEDURE InitFromSalesLine@8(SalesCrMemoHeader@1001 : Record 114;SalesLine@1002 : Record 37);
    BEGIN
      INIT;
      TRANSFERFIELDS(SalesLine);
      IF ("No." = '') AND (Type IN [Type::"G/L Account"..Type::"Charge (Item)"]) THEN
        Type := Type::" ";
      "Posting Date" := SalesCrMemoHeader."Posting Date";
      "Document No." := SalesCrMemoHeader."No.";
      Quantity := SalesLine."Qty. to Invoice";
      "Quantity (Base)" := SalesLine."Qty. to Invoice (Base)";
    END;

    PROCEDURE ShowDeferrals@12();
    BEGIN
      DeferralUtilities.OpenLineScheduleView(
        "Deferral Code",DeferralUtilities.GetSalesDeferralDocType,'','',
        GetDocumentType,"Document No.","Line No.");
    END;

    PROCEDURE GetDocumentType@13() : Integer;
    VAR
      SalesCommentLine@1000 : Record 44;
    BEGIN
      EXIT(SalesCommentLine."Document Type"::"Posted Credit Memo")
    END;

    BEGIN
    {
      NC OAM22 DP Изменено свойство Caption Class полей ..(LCY)
      -----
      NC NOS-26 ENK
    }
    END.
  }
}

