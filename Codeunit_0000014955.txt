OBJECT Codeunit 14955 Recon. Act Report Helper
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      GLSetup@1210000 : Record 98;
      ExcelReportBuilderManager@1210001 : Codeunit 14930;
      FileName@1210002 : Text;

    PROCEDURE InitReportTemplate@1210000();
    BEGIN
      GLSetup.GET;
      GLSetup.TESTFIELD("C/V Recon. Act Template Code");
      ExcelReportBuilderManager.InitTemplate(GLSetup."C/V Recon. Act Template Code");
      ExcelReportBuilderManager.SetSheet('Sheet1');
    END;

    PROCEDURE FillPrevHeader@1210035();
    BEGIN
      ExcelReportBuilderManager.AddSection('PREVIOUSHEADER');
    END;

    PROCEDURE FillHeader@1210004(StartingDate@1210000 : Date;EndingDate@1210001 : Date);
    BEGIN
      ExcelReportBuilderManager.AddSection('HEADER');

      ExcelReportBuilderManager.AddDataToSection('PeriodText',FORMAT(StartingDate) + ' - ' + FORMAT(EndingDate));
    END;

    PROCEDURE FillBody@1210005(LineNo@1210000 : Text;DocDate@1210001 : Text;DocDescription@1210002 : Text;DocAmount@1210003 : Text;DebitAmount@1210004 : Text;CreditAmount@1210005 : Text;OppDocAmount@1210008 : Text;OppDebitAmount@1210007 : Text;OppCreditAmount@1210006 : Text);
    BEGIN
      ExcelReportBuilderManager.AddSection('BODY');

      ExcelReportBuilderManager.AddDataToSection('LineNo',LineNo);
      ExcelReportBuilderManager.AddDataToSection('DocDate',DocDate);
      ExcelReportBuilderManager.AddDataToSection('EntryDescription',DocDescription);
      ExcelReportBuilderManager.AddDataToSection('DocAmount',DocAmount);
      ExcelReportBuilderManager.AddDataToSection('DebitAmount',DebitAmount);
      ExcelReportBuilderManager.AddDataToSection('CreditAmount',CreditAmount);
      ExcelReportBuilderManager.AddDataToSection('OppDocAmount',OppDocAmount);
      ExcelReportBuilderManager.AddDataToSection('OppDebitAmount',OppDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('OppCreditAmount',OppCreditAmount);
    END;

    PROCEDURE FillFooter@1210006(DocDescription@1210000 : Text;DebitAmount@1210002 : Text;CreditAmount@1210003 : Text;OppDebitAmount@1210004 : Text;OppCreditAmount@1210001 : Text);
    BEGIN
      ExcelReportBuilderManager.AddSection('FOOTER');

      ExcelReportBuilderManager.AddDataToSection('BalanceEntryDescription',DocDescription);
      ExcelReportBuilderManager.AddDataToSection('BalanceDebitAmount',DebitAmount);
      ExcelReportBuilderManager.AddDataToSection('BalanceCreditAmount',CreditAmount);
      ExcelReportBuilderManager.AddDataToSection('OppBalanceDebitAmount',OppDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('OppBalanceCreditAmount',OppCreditAmount);
    END;

    PROCEDURE FillCustFooter@1210003(StartingDate@1210001 : Date;EndingDate@1210000 : Date;TurnoverDebitAmount@1210002 : Text;TurnoverCreditAmount@1210003 : Text;OppTurnoverDebitAmount@1210004 : Text;OppTurnoverCreditAmount@1210005 : Text;CustBalanceDebitAmount@1210006 : Text;CustBalanceCreditAmount@1210007 : Text;CustOppBalanceDebitAmount@1210008 : Text;CustOppBalanceCreditAmount@1210009 : Text);
    BEGIN
      ExcelReportBuilderManager.AddSection('CUSTFOOTER');

      ExcelReportBuilderManager.AddDataToSection('CustTurnoverPeriodText',FORMAT(StartingDate) + ' - ' + FORMAT(EndingDate));
      ExcelReportBuilderManager.AddDataToSection('CustTurnoverBalancePeriodText',FORMAT(EndingDate));
      ExcelReportBuilderManager.AddDataToSection('CustTurnoverDebitAmount',TurnoverDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('CustTurnoverCreditAmount',TurnoverCreditAmount);
      ExcelReportBuilderManager.AddDataToSection('CustOppTurnoverDebitAmount',OppTurnoverDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('CustOppTurnoverCreditAmount',OppTurnoverCreditAmount);
      ExcelReportBuilderManager.AddDataToSection('CustBalanceDebitAmount',CustBalanceDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('CustBalanceCreditAmount',CustBalanceCreditAmount);
      ExcelReportBuilderManager.AddDataToSection('CustOppBalanceDebitAmount',CustOppBalanceDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('CustOppBalanceCreditAmount',CustOppBalanceCreditAmount);
    END;

    PROCEDURE FillVendFooter@1210020(StartingDate@1210001 : Date;EndingDate@1210000 : Date;TurnoverDebitAmount@1210002 : Text;TurnoverCreditAmount@1210003 : Text;OppTurnoverDebitAmount@1210004 : Text;OppTurnoverCreditAmount@1210005 : Text;VendBalanceDebitAmount@1210006 : Text;VendBalanceCreditAmount@1210007 : Text;VendOppBalanceDebitAmount@1210008 : Text;VendOppBalanceCreditAmount@1210009 : Text);
    BEGIN
      ExcelReportBuilderManager.AddSection('VENDFOOTER');

      ExcelReportBuilderManager.AddDataToSection('VendTurnoverPeriodText',FORMAT(StartingDate) + ' - ' + FORMAT(EndingDate));
      ExcelReportBuilderManager.AddDataToSection('VendTurnoverBalancePeriodText',FORMAT(EndingDate));
      ExcelReportBuilderManager.AddDataToSection('VendTurnoverDebitAmount',TurnoverDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('VendTurnoverCreditAmount',TurnoverCreditAmount);
      ExcelReportBuilderManager.AddDataToSection('VendOppTurnoverDebitAmount',OppTurnoverDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('VendOppTurnoverCreditAmount',OppTurnoverCreditAmount);
      ExcelReportBuilderManager.AddDataToSection('VendBalanceDebitAmount',VendBalanceDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('VendBalanceCreditAmount',VendBalanceCreditAmount);
      ExcelReportBuilderManager.AddDataToSection('VendOppBalanceDebitAmount',VendOppBalanceDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('VendOppBalanceCreditAmount',VendOppBalanceCreditAmount);
    END;

    PROCEDURE FillReportHeader@1210047(StartingDate@1210000 : Date;EndingDate@1210003 : Date;CompanyName@1210001 : Text;VATRegNo@1210004 : Text;CustVendName@1210002 : Text;CustVendVATRegNo@1210005 : Text);
    BEGIN
      ExcelReportBuilderManager.AddSection('REPORTHEADER');

      ExcelReportBuilderManager.AddDataToSection('StartingDate',FORMAT(StartingDate));
      ExcelReportBuilderManager.AddDataToSection('EndingDate',FORMAT(EndingDate));
      ExcelReportBuilderManager.AddDataToSection('CompanyNameReportHeader',CompanyName);
      ExcelReportBuilderManager.AddDataToSection('VATRegNoReportHeader',VATRegNo);
      ExcelReportBuilderManager.AddDataToSection('CustVendNameReportHeader',CustVendName);
      ExcelReportBuilderManager.AddDataToSection('CustVendVATRegNoReportHeader',CustVendVATRegNo);
    END;

    PROCEDURE FillPageHeader@1210017(CurrencyClaim@1210000 : Text;CompanyName@1210001 : Text;CustVendName@1210002 : Text);
    BEGIN
      ExcelReportBuilderManager.AddSection('PAGEHEADER');

      ExcelReportBuilderManager.AddDataToSection('CurrencyClaim',CurrencyClaim);
      ExcelReportBuilderManager.AddDataToSection('CompanyNamePageHeader',CompanyName);
      ExcelReportBuilderManager.AddDataToSection('CustVendNamePageHeader',CustVendName);
    END;

    PROCEDURE FillCustHeader@1210009(InitialBalanceDate@1210004 : Text;InitialDebitAmount@1210000 : Text;InitialCreditAmount@1210001 : Text;OppInitialDebitAmount@1210002 : Text;OppInitialCreditAmount@1210003 : Text);
    BEGIN
      ExcelReportBuilderManager.AddSection('CUSTHEADER');

      ExcelReportBuilderManager.AddDataToSection('CustInitialBalanceDate',InitialBalanceDate);
      ExcelReportBuilderManager.AddDataToSection('CustInitialDebitAmount',InitialDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('CustInitialCreditAmount',InitialCreditAmount);
      ExcelReportBuilderManager.AddDataToSection('CustOppInitialDebitAmount',OppInitialDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('CustOppInitialCreditAmount',OppInitialCreditAmount);
    END;

    PROCEDURE FillVendHeader@1210015(InitialBalanceDate@1210004 : Text;InitialDebitAmount@1210000 : Text;InitialCreditAmount@1210001 : Text;OppInitialDebitAmount@1210002 : Text;OppInitialCreditAmount@1210003 : Text);
    BEGIN
      ExcelReportBuilderManager.AddSection('VENDHEADER');

      ExcelReportBuilderManager.AddDataToSection('VendInitialBalanceDate',InitialBalanceDate);
      ExcelReportBuilderManager.AddDataToSection('VendInitialDebitAmount',InitialDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('VendInitialCreditAmount',InitialCreditAmount);
      ExcelReportBuilderManager.AddDataToSection('VendOppInitialDebitAmount',OppInitialDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('VendOppInitialCreditAmount',OppInitialCreditAmount);
    END;

    PROCEDURE FillAdvHeader@1210001(StartingDate@1210000 : Date;EndingDate@1210001 : Date);
    BEGIN
      ExcelReportBuilderManager.AddSection('ADVANCEHEADER');

      ExcelReportBuilderManager.AddDataToSection('AdvancePeriodText',FORMAT(StartingDate) + ' - ' + FORMAT(EndingDate));
    END;

    PROCEDURE FillAdvOtherCurrBody@1210011(LineNo@1210005 : Text;DocDescription@1210003 : Text;AdvOtherCurrDebitAmount@1210001 : Text;AdvOtherCurrCreditAmount@1210000 : Text;OppAdvOtherCurrDebitAmount@1210004 : Text;OppAdvOtherCurrCreditAmount@1210002 : Text;AdvOtherCurrBalanceDebitAmount@1210006 : Text;AdvOtherCurrBalanceCreditAmount@1210007 : Text;OppAdvOtherCurrBalanceDebitAmount@1210009 : Text;OppAdvOtherCurrBalanceCreditAmount@1210008 : Text);
    BEGIN
      ExcelReportBuilderManager.AddSection('ADVANCEOTHERCURRBODY');

      ExcelReportBuilderManager.AddDataToSection('AdvOtherCurrLineNo',LineNo);
      ExcelReportBuilderManager.AddDataToSection('AdvOtherCurrDebitAmount',AdvOtherCurrDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('AdvOtherCurrCreditAmount',AdvOtherCurrCreditAmount);
      ExcelReportBuilderManager.AddDataToSection('OppAdvOtherCurrDebitAmount',OppAdvOtherCurrDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('OppAdvOtherCurrCreditAmount',OppAdvOtherCurrCreditAmount);
      ExcelReportBuilderManager.AddDataToSection('AdvOtherCurrBalanceEntryDescription',DocDescription);
      ExcelReportBuilderManager.AddDataToSection('AdvOtherCurrBalanceDebitAmount',AdvOtherCurrBalanceDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('AdvOtherCurrBalanceCreditAmount',AdvOtherCurrBalanceCreditAmount);
      ExcelReportBuilderManager.AddDataToSection('OppAdvOtherCurrBalanceDebitAmount',OppAdvOtherCurrBalanceDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('OppAdvOtherCurrBalanceCreditAmount',OppAdvOtherCurrBalanceCreditAmount);
    END;

    PROCEDURE FillAdvFooter@1210021(EndingDate@1210000 : Date;AdvBalanceDebitAmount@1210002 : Text;AdvBalanceCreditAmount@1210001 : Text;OppAdvBalanceDebitAmount@1210004 : Text;OppAdvBalanceCreditAmount@1210003 : Text);
    BEGIN
      ExcelReportBuilderManager.AddSection('ADVANCEFOOTER');

      ExcelReportBuilderManager.AddDataToSection('AdvanceBalancePeriodText',FORMAT(EndingDate));
      ExcelReportBuilderManager.AddDataToSection('AdvanceBalanceDebitAmount',AdvBalanceDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('AdvanceBalanceCreditAmount',AdvBalanceCreditAmount);
      ExcelReportBuilderManager.AddDataToSection('OppAdvanceBalanceDebitAmount',OppAdvBalanceDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('OppAdvanceBalanceCreditAmount',OppAdvBalanceCreditAmount);
    END;

    PROCEDURE FillPrevAdvHeader@1210033(StartingDate@1210000 : Date);
    BEGIN
      ExcelReportBuilderManager.AddSection('PREVIOUSADVANCEHEADER');

      ExcelReportBuilderManager.AddDataToSection('PrevAdvPeriodText',FORMAT(StartingDate));
    END;

    PROCEDURE FillPrevAdvFooter@1210027(EndingDate@1210000 : Date;PrevAdvBalanceDebitAmount@1210002 : Text;PrevAdvBalanceCreditAmount@1210001 : Text;OppPrevAdvBalanceDebitAmount@1210004 : Text;OppPrevAdvBalanceCreditAmount@1210003 : Text);
    BEGIN
      ExcelReportBuilderManager.AddSection('PREVIOUSADVANCEFOOTER');

      ExcelReportBuilderManager.AddDataToSection('PrevAdvanceBalancePeriodText',FORMAT(EndingDate));
      ExcelReportBuilderManager.AddDataToSection('PrevAdvanceBalanceDebitAmount',PrevAdvBalanceDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('PrevAdvanceBalanceCreditAmount',PrevAdvBalanceCreditAmount);
      ExcelReportBuilderManager.AddDataToSection('OppPrevAdvanceBalanceDebitAmount',OppPrevAdvBalanceDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('OppPrevAdvanceBalanceCreditAmount',OppPrevAdvBalanceCreditAmount);
    END;

    PROCEDURE FillPageFooter@1210028(StartingDate@1210000 : Date;EndingDate@1210001 : Date;InitialDebitAmount@1210002 : Text;InitialCreditAmount@1210003 : Text;OppInitialDebitAmount@1210005 : Text;OppInitialCreditAmount@1210004 : Text;TurnoverDebitAmount@1210009 : Text;TurnoverCreditAmount@1210008 : Text;OppTurnoverDebitAmount@1210007 : Text;OppTurnoverCreditAmount@1210006 : Text;TotalDebitAmount@1210013 : Text;TotalCreditAmount@1210012 : Text;OppTotalDebitAmount@1210011 : Text;OppTotalCreditAmount@1210010 : Text);
    BEGIN
      ExcelReportBuilderManager.AddSection('PAGEFOOTER');

      ExcelReportBuilderManager.AddDataToSection('TotalBalanceStartingDatePeriodText',FORMAT(StartingDate));
      ExcelReportBuilderManager.AddDataToSection('TotalTurnoverPeriodText',FORMAT(StartingDate) + ' - ' + FORMAT(EndingDate));
      ExcelReportBuilderManager.AddDataToSection('TotalBalanceEndingDatePeriodText',FORMAT(EndingDate));
      ExcelReportBuilderManager.AddDataToSection('InitialDebitAmount',InitialDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('InitialCreditAmount',InitialCreditAmount);
      ExcelReportBuilderManager.AddDataToSection('OppInitialDebitAmount',OppInitialDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('OppInitialCreditAmount',OppInitialCreditAmount);
      ExcelReportBuilderManager.AddDataToSection('TurnoverDebitAmount',TurnoverDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('TurnoverCreditAmount',TurnoverCreditAmount);
      ExcelReportBuilderManager.AddDataToSection('OppTurnoverDebitAmount',OppTurnoverDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('OppTurnoverCreditAmount',OppTurnoverCreditAmount);
      ExcelReportBuilderManager.AddDataToSection('TotalDebitAmount',TotalDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('TotalCreditAmount',TotalCreditAmount);
      ExcelReportBuilderManager.AddDataToSection('OppTotalDebitAmount',OppTotalDebitAmount);
      ExcelReportBuilderManager.AddDataToSection('OppTotalCreditAmount',OppTotalCreditAmount);
    END;

    PROCEDURE FillReportFooter@1210034(ResultText@1210000 : Text;CompanyName@1210003 : Text;CustVendName@1210004 : Text;DirectorName@1210001 : Text;AccountantName@1210002 : Text);
    BEGIN
      ExcelReportBuilderManager.AddSection('REPORTFOOTER');

      ExcelReportBuilderManager.AddDataToSection('ResultText',ResultText);
      ExcelReportBuilderManager.AddDataToSection('CompanyName',CompanyName);
      ExcelReportBuilderManager.AddDataToSection('CustVendName',CustVendName);
      ExcelReportBuilderManager.AddDataToSection('DirectorName',DirectorName);
      ExcelReportBuilderManager.AddDataToSection('AccountantName',AccountantName);
    END;

    PROCEDURE SetFileNameSilent@1210007(NewFileName@1210001 : Text);
    BEGIN
      FileName := NewFileName;
    END;

    PROCEDURE ExportData@1210002();
    BEGIN
      ExcelReportBuilderManager.ExportData;
    END;

    PROCEDURE ExportDataFile@1210010(FileName@1210000 : Text);
    BEGIN
      ExcelReportBuilderManager.ExportDataToClientFile(FileName);
    END;

    PROCEDURE AddPageBreak@1210008();
    BEGIN
      ExcelReportBuilderManager.AddPagebreak;
    END;

    BEGIN
    END.
  }
}

