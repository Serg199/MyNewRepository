OBJECT Table 1062 Payment Reporting Argument
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Payment Reporting Argument;
               RUS=Аргумент отчетов по платежам];
  }
  FIELDS
  {
    { 1   ;   ;Key                 ;Integer       ;AutoIncrement=Yes;
                                                   CaptionML=[ENU=Key;
                                                              RUS=Ключ] }
    { 3   ;   ;Document Record ID  ;RecordID      ;CaptionML=[ENU=Document Record ID;
                                                              RUS=Код записи документа] }
    { 4   ;   ;Setup Record ID     ;RecordID      ;CaptionML=[ENU=Setup Record ID;
                                                              RUS=Код записи настройки] }
    { 10  ;   ;Logo                ;BLOB          ;CaptionML=[ENU=Logo;
                                                              RUS=Логотип] }
    { 12  ;   ;URL Caption         ;Text250       ;CaptionML=[ENU=URL Caption;
                                                              RUS=Метка URL-адреса] }
    { 13  ;   ;Target URL          ;BLOB          ;CaptionML=[ENU=Service URL;
                                                              RUS=URL-адрес службы] }
    { 30  ;   ;Language Code       ;Code10        ;CaptionML=[ENU=Language Code;
                                                              RUS=Код языка] }
  }
  KEYS
  {
    {    ;Key                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    PROCEDURE GetTargetURL@10() TargetURL : Text;
    VAR
      InStream@1000 : InStream;
    BEGIN
      CALCFIELDS("Target URL");
      IF "Target URL".HASVALUE THEN BEGIN
        "Target URL".CREATEINSTREAM(InStream);
        InStream.READ(TargetURL);
      END;
    END;

    PROCEDURE SetTargetURL@20(ServiceURL@1000 : Text);
    VAR
      WebRequestHelper@1002 : Codeunit 1299;
      OutStream@1001 : OutStream;
    BEGIN
      WebRequestHelper.IsValidUri(ServiceURL);
      WebRequestHelper.IsHttpUrl(ServiceURL);

      "Target URL".CREATEOUTSTREAM(OutStream);
      OutStream.WRITE(ServiceURL);
      MODIFY;
    END;

    PROCEDURE GetCurrencyCode@5(CurrencyCode@1000 : Code[10]) : Code[10];
    VAR
      GeneralLedgerSetup@1001 : Record 98;
    BEGIN
      IF CurrencyCode <> '' THEN
        EXIT(CurrencyCode);

      GeneralLedgerSetup.GET;
      GeneralLedgerSetup.GetCurrencyCode(CurrencyCode);
      EXIT(GeneralLedgerSetup."LCY Code");
    END;

    BEGIN
    END.
  }
}

