OBJECT Page 9510 Event Subscriptions
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Event Subscriptions;
               RUS=Подписки на события];
    SourceTable=Table2000000140;
    PageType=List;
    OnAfterGetRecord=VAR
                       AllObj@1001 : Record 2000000038;
                       CodeUnitMetadata@1000 : Record 2000000137;
                     BEGIN
                       IF CodeUnitMetadata.GET("Subscriber Codeunit ID") THEN
                         CodeunitName := CodeUnitMetadata.Name;

                       AllObj.SETRANGE("Object Type","Publisher Object Type");
                       AllObj.SETRANGE("Object ID","Publisher Object ID");
                       IF AllObj.FINDFIRST THEN
                         PublisherName := AllObj."Object Name";
                     END;

  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of codeunit that contains the event subscriber function.;
                           RUS=Определяет код модуля Codeunit, который содержит функцию подписчика события.];
                ApplicationArea=#All;
                SourceExpr="Subscriber Codeunit ID" }

    { 12  ;2   ;Field     ;
                Name=CodeunitName;
                CaptionML=[ENU=Subscriber Codeunit Name;
                           RUS=Имя Codeunit подписчика];
                ToolTipML=[ENU=Specifies the name of the codeunit that contains the event subscriber function.;
                           RUS=Определяет имя модуля Codeunit, который содержит функцию подписчика события.];
                ApplicationArea=#All;
                SourceExpr=CodeunitName }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the event subscriber function in the subscriber codeunit that subscribes to the event.;
                           RUS=Определяет функцию подписчика события в модуле Codeunit подписчика, который подписан на это событие.];
                ApplicationArea=#All;
                SourceExpr="Subscriber Function" }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the event type, which can be Business, Integration, or Trigger.;
                           RUS=Определяет тип события: "Бизнес", "Интеграция" или "Триггер".];
                ApplicationArea=#All;
                SourceExpr="Event Type" }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of object that contains the event publisher function that publishes the event.;
                           RUS=Определяет тип объекта, который содержит функцию издателя события, публикующего это событие.];
                ApplicationArea=#All;
                SourceExpr="Publisher Object Type" }

    { 7   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of the object that contains the event publisher function that publishes the event.;
                           RUS=Определяет код объекта, который содержит функцию издателя события, публикующего это событие.];
                ApplicationArea=#All;
                SourceExpr="Publisher Object ID" }

    { 13  ;2   ;Field     ;
                Name=PublisherName;
                CaptionML=[ENU=Publisher Object Name;
                           RUS=Имя объекта издателя];
                ToolTipML=[ENU=Specifies the name of the object that contains the event publisher function that publishes the event.;
                           RUS=Определяет имя объекта, который содержит функцию издателя события, публикующего это событие.];
                ApplicationArea=#All;
                SourceExpr=PublisherName }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the event publisher function in the publisher object that the event subscriber function subscribes to.;
                           RUS=Определяет имя функции издателя события в объекте издателя, на которую подписана функция подписчика события.];
                ApplicationArea=#All;
                SourceExpr="Published Function" }

    { 9   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the event subscription is active.;
                           RUS=Указывает, что подписка на событие активна.];
                ApplicationArea=#All;
                SourceExpr=Active }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many times the event subscriber function has been called. The event subscriber function is called when the published event is raised in the application.;
                           RUS=Определяет, сколько раз была вызвана функция подписчика события. Функция подписчика события вызывается, когда в приложении происходит опубликованное событие.];
                ApplicationArea=#All;
                SourceExpr="Number of Calls" }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the event subscription.;
                           RUS=Определяет подписку на событие.];
                ApplicationArea=#All;
                SourceExpr="Subscriber Instance" }

    { 15  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies manual event subscriptions that are active.;
                           RUS=Определяет созданные вручную активные подписки на события.];
                ApplicationArea=#All;
                SourceExpr="Active Manual Instances" }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the object that triggers the event.;
                           RUS=Определяет объект, который вызывает срабатывание события.];
                ApplicationArea=#All;
                SourceExpr="Originating App Name" }

    { 11  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies an error that occurred for the event subscription.;
                           RUS=Определяет произошедшую ошибку для подписки на событие.];
                ApplicationArea=#All;
                SourceExpr="Error Information" }

  }
  CODE
  {
    VAR
      CodeunitName@1000 : Text;
      PublisherName@1001 : Text;

    BEGIN
    END.
  }
}

