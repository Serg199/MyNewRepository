OBJECT Table 17305 Tax Diff. Journal Line
{
  OBJECT-PROPERTIES
  {
    Date=22.05.17;
    Time=12:06:10;
    Modified=Yes;
    Version List=NAVRU10.00,NOS-26;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               LOCKTABLE;

               ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
               ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
             END;

    CaptionML=[ENU=Tax Diff. Journal Line;
               RUS=Строка налоговых разниц];
  }
  FIELDS
  {
    { 1   ;   ;Journal Template Name;Code10       ;CaptionML=[ENU=Journal Template Name;
                                                              RUS=Имя шаблона журнала] }
    { 2   ;   ;Journal Batch Name  ;Code10        ;CaptionML=[ENU=Journal Batch Name;
                                                              RUS=Код раздела журнала] }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              RUS=Номер строки] }
    { 4   ;   ;Posting Date        ;Date          ;OnValidate=BEGIN
                                                                SearchTaxFactor;
                                                              END;

                                                   CaptionML=[ENU=Posting Date;
                                                              RUS=Дата учета] }
    { 5   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              RUS=Номер документа] }
    { 6   ;   ;Tax Diff. Type      ;Option        ;OnValidate=BEGIN
                                                                IF "Tax Diff. Type" = "Tax Diff. Type"::Constant THEN
                                                                  TESTFIELD("Partial Disposal",FALSE);
                                                              END;

                                                   CaptionML=[ENU=Tax Diff. Type;
                                                              RUS=Тип налоговой разницы];
                                                   OptionCaptionML=[ENU=Constant,Temporary;
                                                                    RUS=Постоянная,Временная];
                                                   OptionString=Constant,Temporary }
    { 7   ;   ;Tax Diff. Code      ;Code10        ;TableRelation="Tax Difference";
                                                   OnValidate=BEGIN
                                                                IF "Tax Diff. Code" = '' THEN BEGIN
                                                                  "Jurisdiction Code" := '';
                                                                  "Norm Code" := '';
                                                                  "Tax Diff. Posting Group" := '';
                                                                  "YTD Amount (Base)" := 0;
                                                                  "YTD Amount (Tax)" := 0;
                                                                  "YTD Difference" := 0;
                                                                  "Amount (Base)" := 0;
                                                                  "Amount (Tax)" := 0;
                                                                  Difference := 0;
                                                                  "Tax Amount" := 0;
                                                                  "Asset Tax Amount" := 0;
                                                                  "Liability Tax Amount" := 0;
                                                                  "Disposal Tax Amount" := 0;
                                                                  "DTA Starting Balance" := 0;
                                                                  "DTL Starting Balance" := 0;
                                                                  "DTA Ending Balance" := 0;
                                                                  "DTL Ending Balance" := 0;
                                                                END ELSE BEGIN
                                                                  TaxDiff.GET("Tax Diff. Code");
                                                                  "Tax Diff. Type" := TaxDiff.Type;
                                                                  "Tax Diff. Category" := TaxDiff.Category;
                                                                  "Jurisdiction Code" := TaxDiff."Norm Jurisdiction Code";
                                                                  "Norm Code" := TaxDiff."Norm Code";
                                                                  "Tax Diff. Posting Group" := TaxDiff."Posting Group";
                                                                  VALIDATE("Norm Code");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Tax Diff. Code;
                                                              RUS=Код налог. разницы] }
    { 8   ;   ;Tax Diff. Category  ;Option        ;OnValidate=BEGIN
                                                                IF Difference <> 0 THEN
                                                                  UpdateAmount
                                                                ELSE
                                                                  UpdateByNetChange;
                                                              END;

                                                   CaptionML=[ENU=Tax Diff. Category;
                                                              RUS=Вид налоговой разницы];
                                                   OptionCaptionML=[ENU=Expense,Income;
                                                                    RUS=Расход,Доход];
                                                   OptionString=Expense,Income }
    { 9   ;   ;Jurisdiction Code   ;Code10        ;TableRelation="Tax Register Norm Jurisdiction";
                                                   OnValidate=BEGIN
                                                                IF "Jurisdiction Code" <> xRec."Jurisdiction Code" THEN
                                                                  VALIDATE("Norm Code",'');
                                                              END;

                                                   CaptionML=[ENU=Jurisdiction Code;
                                                              RUS=Код юрисдикции] }
    { 10  ;   ;Norm Code           ;Code10        ;TableRelation="Tax Register Norm Group".Code WHERE (Norm Jurisdiction Code=FIELD(Jurisdiction Code));
                                                   OnValidate=BEGIN
                                                                SearchTaxFactor;
                                                              END;

                                                   CaptionML=[ENU=Norm Code;
                                                              RUS=Код нормы] }
    { 11  ;   ;Tax Factor          ;Decimal       ;OnValidate=BEGIN
                                                                IF Difference <> 0 THEN
                                                                  UpdateAmount
                                                                ELSE
                                                                  UpdateByNetChange;
                                                              END;

                                                   CaptionML=[ENU=Tax Factor;
                                                              RUS=Ставка налога];
                                                   BlankZero=Yes }
    { 12  ;   ;Tax Diff. Posting Group;Code10     ;TableRelation="Tax Diff. Posting Group";
                                                   CaptionML=[ENU=Tax Diff. Posting Group;
                                                              RUS=Учетная группа налоговой разницы] }
    { 13  ;   ;Amount (Base)       ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE(Difference,"Amount (Base)" - "Amount (Tax)");
                                                              END;

                                                   CaptionML=[ENU=Amount (Base);
                                                              RUS=Сумма (БУ)];
                                                   BlankZero=Yes }
    { 14  ;   ;Amount (Tax)        ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE(Difference,"Amount (Base)" - "Amount (Tax)");
                                                              END;

                                                   CaptionML=[ENU=Amount (Tax);
                                                              RUS=Сумма (НУ)];
                                                   BlankZero=Yes }
    { 15  ;   ;Difference          ;Decimal       ;OnValidate=BEGIN
                                                                IF Difference <> ("Amount (Base)" - "Amount (Tax)") THEN
                                                                  CASE TRUE OF
                                                                    ("Amount (Base)" = 0) AND ("Amount (Base)" > Difference):
                                                                      "Amount (Tax)" := "Amount (Base)" - Difference;
                                                                    ("Amount (Tax)" = 0) AND ("Amount (Tax)" > - Difference):
                                                                      "Amount (Base)" := "Amount (Tax)" + Difference;
                                                                    "Amount (Base)" = 0:
                                                                      FIELDERROR("Amount (Base)",Text1000);
                                                                    "Amount (Tax)" = 0:
                                                                      FIELDERROR("Amount (Tax)",Text1000);
                                                                    ELSE
                                                                      ERROR(Text1001,Difference,"Amount (Base)","Amount (Tax)");
                                                                  END;
                                                                UpdateAmount;
                                                              END;

                                                   CaptionML=[ENU=Difference;
                                                              RUS=Разница];
                                                   BlankZero=Yes }
    { 16  ;   ;Tax Amount          ;Decimal       ;CaptionML=[ENU=Tax Amount;
                                                              RUS=Сумма налога];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 17  ;   ;Asset Tax Amount    ;Decimal       ;CaptionML=[ENU=Asset Tax Amount;
                                                              RUS=Сумма налогового актива];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 18  ;   ;Liability Tax Amount;Decimal       ;CaptionML=[ENU=Liability Tax Amount;
                                                              RUS=Сумма налог. обязательства];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 19  ;   ;Disposal Tax Amount ;Decimal       ;CaptionML=[ENU=Disposal Tax Amount;
                                                              RUS=Сумма реализации ОНО/ОНА];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 20  ;   ;DTA Starting Balance;Decimal       ;CaptionML=[ENU=DTA Starting Balance;
                                                              RUS=ОНА - начальное сальдо];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 21  ;   ;DTL Starting Balance;Decimal       ;CaptionML=[ENU=DTL Starting Balance;
                                                              RUS=ОНО - начальное сальдо];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 22  ;   ;Disposal Date       ;Date          ;CaptionML=[ENU=Disposal Date;
                                                              RUS=Дата реализации] }
    { 23  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 24  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              RUS=Код ярлыка измерения 1];
                                                   CaptionClass='1,2,1' }
    { 25  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              RUS=Код ярлыка измерения 2];
                                                   CaptionClass='1,2,2' }
    { 26  ;   ;Disposal Mode       ;Option        ;OnValidate=BEGIN
                                                                IF "Disposal Mode" <> "Disposal Mode"::" " THEN
                                                                  TESTFIELD("Tax Diff. Type","Tax Diff. Type"::"Temporary");
                                                                VALIDATE("Tax Factor");
                                                              END;

                                                   CaptionML=[ENU=Disposal Mode;
                                                              RUS=Метод реализации];
                                                   OptionCaptionML=[ENU=" ,Write Down,Transform";
                                                                    RUS=" ,Списание,Преобразование"];
                                                   OptionString=[ ,Write Down,Transform] }
    { 27  ;   ;DTA Ending Balance  ;Decimal       ;CaptionML=[ENU=DTA Ending Balance;
                                                              RUS=ОНА - конечное сальдо];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 28  ;   ;DTL Ending Balance  ;Decimal       ;CaptionML=[ENU=DTL Ending Balance;
                                                              RUS=ОНО - конечное сальдо];
                                                   BlankZero=Yes;
                                                   Editable=No }
    { 29  ;   ;YTD Amount (Base)   ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("YTD Difference","YTD Amount (Base)" - "YTD Amount (Tax)");
                                                              END;

                                                   CaptionML=[ENU=YTD Amount (Base);
                                                              RUS=Сумма с начала года (БУ)];
                                                   BlankZero=Yes }
    { 30  ;   ;YTD Amount (Tax)    ;Decimal       ;OnValidate=BEGIN
                                                                VALIDATE("YTD Difference","YTD Amount (Base)" - "YTD Amount (Tax)");
                                                              END;

                                                   CaptionML=[ENU=YTD Amount (Tax);
                                                              RUS=Сумма с начала года (НУ)];
                                                   BlankZero=Yes }
    { 31  ;   ;YTD Difference      ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD("Partial Disposal",FALSE);
                                                                IF "YTD Difference" <> ("YTD Amount (Base)" - "YTD Amount (Tax)") THEN
                                                                  CASE TRUE OF
                                                                    ("YTD Amount (Base)" = 0) AND ("YTD Amount (Base)" > "YTD Difference"):
                                                                      "Amount (Tax)" := "Amount (Base)" - "YTD Difference";
                                                                    ("YTD Amount (Tax)" = 0) AND ("YTD Amount (Tax)" > - "YTD Difference"):
                                                                      "YTD Amount (Base)" := "YTD Amount (Tax)" + "YTD Difference";
                                                                    "YTD Amount (Base)" = 0:
                                                                      FIELDERROR("YTD Amount (Base)",Text1000);
                                                                    "YTD Amount (Tax)" = 0:
                                                                      FIELDERROR("YTD Amount (Tax)",Text1000);
                                                                    ELSE
                                                                      ERROR(Text1001,"YTD Difference","YTD Amount (Base)","YTD Amount (Tax)");
                                                                  END;

                                                                UpdateByNetChange;
                                                              END;

                                                   CaptionML=[ENU=YTD Difference;
                                                              RUS=Разница с начала года];
                                                   BlankZero=Yes }
    { 32  ;   ;Source Type         ;Option        ;OnValidate=BEGIN
                                                                IF "Source Type" <> xRec."Source Type" THEN
                                                                  VALIDATE("Source No.",'');
                                                              END;

                                                   CaptionML=[ENU=Source Type;
                                                              RUS=Тип источника];
                                                   OptionCaptionML=[ENU=" ,Future Expense,Fixed Asset,Intangible Asset";
                                                                    RUS=" ,Расходы будущих периодов,Основное средство,Нематериальный актив"];
                                                   OptionString=[ ,Future Expense,Fixed Asset,Intangible Asset] }
    { 33  ;   ;Source No.          ;Code20        ;TableRelation=IF (Source Type=CONST(Future Expense)) "Fixed Asset".No. WHERE (FA Type=CONST(Future Expense))
                                                                 ELSE IF (Source Type=CONST(Fixed Asset)) "Fixed Asset".No. WHERE (FA Type=CONST(Fixed Assets))
                                                                 ELSE IF (Source Type=CONST(Intangible Asset)) "Fixed Asset".No. WHERE (FA Type=CONST(Intangible Asset));
                                                   OnValidate=BEGIN
                                                                IF "Source No." <> xRec."Source No." THEN BEGIN
                                                                  "Tax Diff. Code" := '';

                                                                  IF "Source No." <> '' THEN
                                                                    CASE "Source Type" OF
                                                                      "Source Type"::"Future Expense",
                                                                      "Source Type"::"Fixed Asset",
                                                                      "Source Type"::"Intangible Asset":
                                                                        BEGIN
                                                                          FA.GET("Source No.");
                                                                          FA.TESTFIELD("Tax Difference Code");
                                                                          "Tax Diff. Code" := FA."Tax Difference Code";
                                                                        END;
                                                                      "Source Type"::" ":
                                                                        FIELDERROR("Source Type");
                                                                    END;
                                                                  VALIDATE("Tax Diff. Code");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Source No.;
                                                              RUS=Номер источника] }
    { 34  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              RUS=Код источника] }
    { 35  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              RUS=Код причины] }
    { 36  ;   ;Partial Disposal    ;Boolean       ;OnValidate=BEGIN
                                                                IF "Partial Disposal" THEN
                                                                  TESTFIELD("Tax Diff. Type","Tax Diff. Type"::"Temporary");
                                                                UpdateAmount;
                                                              END;

                                                   CaptionML=[ENU=Partial Disposal;
                                                              RUS=Частичная реализация] }
    { 37  ;   ;Tax Diff. Calc. Mode;Option        ;OnValidate=BEGIN
                                                                IF "Tax Diff. Calc. Mode" = "Tax Diff. Calc. Mode"::Balance THEN
                                                                  UpdateByNetChange
                                                                ELSE
                                                                  VALIDATE("Tax Factor");
                                                              END;

                                                   CaptionML=[ENU=Tax Diff. Calc. Mode;
                                                              RUS=Налоговая разница - режим расчета];
                                                   OptionCaptionML=[ENU=" ,Balance";
                                                                    RUS=" ,Сальдо"];
                                                   OptionString=[ ,Balance] }
    { 45  ;   ;Depr. Bonus Recovery;Boolean       ;CaptionML=[ENU=Depr. Bonus Recovery;
                                                              RUS=Восстановление аморт. премии] }
    { 46  ;   ;Source Entry Type   ;Option        ;CaptionML=[ENU=Source Entry Type;
                                                              RUS=Тип операции источника];
                                                   OptionCaptionML=[ENU=" ,FA,Depr. Bonus,Disposed FA";
                                                                    RUS=" ,ОС,Аморт. премия,Списанные ОС"];
                                                   OptionString=[ ,FA,Depr. Bonus,Disposed FA] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              RUS=Код набора измерений];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Journal Template Name,Journal Batch Name,Line No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      TaxDiff@1001 : Record 17300;
      FA@1002 : Record 5600;
      DimMgt@1006 : Codeunit 408;
      Text1000@1007 : TextConst 'ENU=" cannot be negative";RUS=" не может быть отрицательным"';
      Text1001@1008 : TextConst 'ENU="%1 can be defined than %2=0 and %3=0 only.";RUS="%1 может быть определено, только если %2=0 и %3=0."';
      NoSeriesMgt@1009 : Codeunit 396;

    LOCAL PROCEDURE UpdateAmount@1();
    BEGIN
      "YTD Amount (Base)" := 0;
      "YTD Amount (Tax)" := 0;
      "YTD Difference" := 0;
      "Tax Amount" := 0;
      "Asset Tax Amount" := 0;
      "Liability Tax Amount" := 0;
      "Disposal Tax Amount" := 0;
      "DTA Starting Balance" := 0;
      "DTL Starting Balance" := 0;
      "DTA Ending Balance" := 0;
      "DTL Ending Balance" := 0;
      CASE "Tax Diff. Type" OF
        "Tax Diff. Type"::Constant:
          BEGIN
            TESTFIELD("Partial Disposal",FALSE);
            CASE TRUE OF
              ("Tax Diff. Category" = "Tax Diff. Category"::Expense) AND (Difference > 0),
              ("Tax Diff. Category" = "Tax Diff. Category"::Income) AND (Difference < 0):
                "Liability Tax Amount" := GetTaxAmount(Difference);
              ("Tax Diff. Category" = "Tax Diff. Category"::Expense) AND (Difference < 0),
              ("Tax Diff. Category" = "Tax Diff. Category"::Income) AND (Difference > 0):
                "Asset Tax Amount" := GetTaxAmount(Difference);
            END;
          END;
        "Tax Diff. Type"::"Temporary":
          IF "Partial Disposal" THEN BEGIN
            "Disposal Tax Amount" := GetTaxAmount(Difference);
            IF Difference < 0 THEN
              "Disposal Tax Amount" := -"Disposal Tax Amount";
          END ELSE
            IF GetStartingAmount THEN BEGIN
              CASE TRUE OF
                ("Tax Diff. Category" = "Tax Diff. Category"::Expense) AND (Difference > 0),
                ("Tax Diff. Category" = "Tax Diff. Category"::Income) AND (Difference < 0):
                  BEGIN
                    "Asset Tax Amount" := GetTaxAmount(Difference);
                    IF "DTL Starting Balance" <> 0 THEN BEGIN
                      IF "Asset Tax Amount" > "DTL Starting Balance" THEN
                        "Liability Tax Amount" := -"DTL Starting Balance"
                      ELSE
                        "Liability Tax Amount" := -"Asset Tax Amount";
                      "Asset Tax Amount" += "Liability Tax Amount";
                    END;
                  END;
                ("Tax Diff. Category" = "Tax Diff. Category"::Expense) AND (Difference < 0),
                ("Tax Diff. Category" = "Tax Diff. Category"::Income) AND (Difference > 0):
                  BEGIN
                    "Liability Tax Amount" := GetTaxAmount(Difference);
                    IF "DTA Starting Balance" <> 0 THEN BEGIN
                      IF "Liability Tax Amount" > "DTA Starting Balance" THEN
                        "Asset Tax Amount" := -"DTA Starting Balance"
                      ELSE
                        "Asset Tax Amount" := -"Liability Tax Amount";
                      "Liability Tax Amount" += "Asset Tax Amount";
                    END;
                  END;
              END;
              "DTA Ending Balance" := "DTA Starting Balance" + "Asset Tax Amount";
              "DTL Ending Balance" := "DTL Starting Balance" + "Liability Tax Amount";
              IF "Disposal Mode" <> "Disposal Mode"::" " THEN BEGIN
                "Disposal Tax Amount" := "DTA Ending Balance" - "DTL Ending Balance";
                "DTA Ending Balance" := 0;
                "DTL Ending Balance" := 0;
              END;
            END;
      END;
      "Tax Amount" := "Asset Tax Amount" - "Liability Tax Amount" - "Disposal Tax Amount";
    END;

    LOCAL PROCEDURE UpdateByNetChange@2();
    BEGIN
      "Amount (Base)" := 0;
      "Amount (Tax)" := 0;
      Difference := 0;
      "Tax Amount" := 0;
      "Asset Tax Amount" := 0;
      "Liability Tax Amount" := 0;
      "Disposal Tax Amount" := 0;
      "DTA Starting Balance" := 0;
      "DTL Starting Balance" := 0;
      "DTA Ending Balance" := 0;
      "DTL Ending Balance" := 0;
      IF "Partial Disposal" THEN
        EXIT;
      IF GetStartingAmount THEN BEGIN
        IF "Tax Diff. Type" <> "Tax Diff. Type"::"Temporary" THEN
          EXIT;
        IF ("Tax Diff. Calc. Mode" <> "Tax Diff. Calc. Mode"::Balance) AND ("YTD Difference" = 0) THEN
          EXIT;
        CASE TRUE OF
          ("Tax Diff. Category" = "Tax Diff. Category"::Expense) AND ("YTD Difference" > 0),
          ("Tax Diff. Category" = "Tax Diff. Category"::Income) AND ("YTD Difference" < 0):
            BEGIN
              "DTA Ending Balance" := GetTaxAmount("YTD Difference");
              "Asset Tax Amount" := "DTA Ending Balance" - "DTA Starting Balance";
              IF "DTL Starting Balance" <> 0 THEN
                IF "Asset Tax Amount" > "DTL Starting Balance" THEN
                  "Liability Tax Amount" := -"DTL Starting Balance"
                ELSE
                  "Liability Tax Amount" := -"Asset Tax Amount";
            END;
          ("Tax Diff. Category" = "Tax Diff. Category"::Expense) AND ("YTD Difference" < 0),
          ("Tax Diff. Category" = "Tax Diff. Category"::Income) AND ("YTD Difference" > 0):
            BEGIN
              "DTL Ending Balance" := GetTaxAmount("YTD Difference");
              "Liability Tax Amount" := "DTL Ending Balance" - "DTL Starting Balance";
              IF "DTA Starting Balance" <> 0 THEN
                IF "Liability Tax Amount" > "DTA Starting Balance" THEN
                  "Asset Tax Amount" := -"DTA Starting Balance"
                ELSE
                  "Asset Tax Amount" := -"Liability Tax Amount";
            END;
          "YTD Difference" = 0:
            IF "DTA Starting Balance" <> 0 THEN
              "Asset Tax Amount" := -"DTA Starting Balance"
            ELSE
              IF "DTL Starting Balance" <> 0 THEN
                "Liability Tax Amount" := -"DTL Starting Balance";
        END;
        IF "Disposal Mode" <> "Disposal Mode"::" " THEN BEGIN
          "Disposal Tax Amount" := "DTA Ending Balance" - "DTL Ending Balance";
          "DTA Ending Balance" := 0;
          "DTL Ending Balance" := 0;
        END;
        "Tax Amount" := "Asset Tax Amount" - "Liability Tax Amount" - "Disposal Tax Amount";
      END;
    END;

    LOCAL PROCEDURE GetTaxAmount@3(NetAmount@1000 : Decimal) : Decimal;
    BEGIN
      EXIT(ROUND(ABS(NetAmount) * "Tax Factor"));
    END;

    PROCEDURE ValidateShortcutDimCode@14(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    PROCEDURE LookupShortcutDimCode@18(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
    END;

    PROCEDURE ShowShortcutDimCode@15(VAR ShortcutDimCode@1000 : ARRAY [20] OF Code[20]);
    BEGIN
      DimMgt.GetShortcutDimensions("Dimension Set ID",ShortcutDimCode);
    END;

    PROCEDURE ShowDimensions@41();
    BEGIN
      DimMgt.SetObjectFrom(Rec); // NC NOS-26 SPA
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet2(
          "Dimension Set ID",STRSUBSTNO('%1 %2 %3',"Journal Template Name","Journal Batch Name","Line No."),
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    PROCEDURE GetStartingAmount@5() : Boolean;
    VAR
      TaxDiffLedgEntry@1210000 : Record 17306;
    BEGIN
      IF "Tax Diff. Type" = "Tax Diff. Type"::"Temporary" THEN BEGIN
        IF ("Source Type" = "Source Type"::"Future Expense") AND ("Source No." <> '') THEN BEGIN
          FA.GET("Source No.");
          FA.TESTFIELD("Tax Difference Code");
          TESTFIELD("Tax Diff. Code",FA."Tax Difference Code");
        END;
        IF "Tax Diff. Code" <> '' THEN BEGIN
          TaxDiff.GET("Tax Diff. Code");
          TESTFIELD("Posting Date");
          TaxDiffLedgEntry.RESET;
          TaxDiffLedgEntry.SETCURRENTKEY("Tax Diff. Code","Source Type","Source No.","Posting Date");
          TaxDiffLedgEntry.SETRANGE("Tax Diff. Code","Tax Diff. Code");
          TaxDiffLedgEntry.SETRANGE("Source Type","Source Type");
          TaxDiffLedgEntry.SETRANGE("Source No.","Source No.");
          TaxDiffLedgEntry.SETFILTER("Posting Date",'..%1',"Posting Date");
          TaxDiffLedgEntry.CALCSUMS("Tax Amount");
          IF TaxDiffLedgEntry."Tax Amount" > 0 THEN
            "DTA Starting Balance" := TaxDiffLedgEntry."Tax Amount";
          IF TaxDiffLedgEntry."Tax Amount" < 0 THEN
            "DTL Starting Balance" := -TaxDiffLedgEntry."Tax Amount";
          EXIT(TRUE);
        END;
      END;
    END;

    PROCEDURE SetUpNewLine@6(LastTaxDiffJnlLine@1000 : Record 17305);
    VAR
      TaxDiffJnlTemplate@1001 : Record 17303;
      TaxDiffJnlBatch@1002 : Record 17304;
      TaxDiffJnlLine@1003 : Record 17305;
    BEGIN
      TaxDiffJnlTemplate.GET("Journal Template Name");
      TaxDiffJnlBatch.GET("Journal Template Name","Journal Batch Name");
      TaxDiffJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
      TaxDiffJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
      IF TaxDiffJnlLine.FINDFIRST THEN BEGIN
        "Posting Date" := LastTaxDiffJnlLine."Posting Date";
        "Document No." := LastTaxDiffJnlLine."Document No.";
      END ELSE BEGIN
        "Posting Date" := WORKDATE;
        IF TaxDiffJnlBatch."No. Series" <> '' THEN BEGIN
          CLEAR(NoSeriesMgt);
          "Document No." := NoSeriesMgt.TryGetNextNo(TaxDiffJnlBatch."No. Series","Posting Date");
        END;
      END;
      "Source Code" := TaxDiffJnlTemplate."Source Code";
      "Reason Code" := TaxDiffJnlBatch."Reason Code";
      Description := '';
    END;

    LOCAL PROCEDURE SearchTaxFactor@7();
    VAR
      TaxRegNormGroup@1210001 : Record 17221;
      TaxRegNormDetail@1210000 : Record 17222;
    BEGIN
      "Tax Factor" := 0;
      IF "Posting Date" <> 0D THEN
        IF TaxRegNormGroup.GET("Jurisdiction Code","Norm Code") THEN BEGIN
          TaxRegNormDetail.RESET;
          TaxRegNormDetail.SETRANGE("Norm Jurisdiction Code","Jurisdiction Code");
          TaxRegNormDetail.SETRANGE("Norm Group Code","Norm Code");
          IF TaxRegNormGroup."Search Detail" = TaxRegNormGroup."Search Detail"::"To Date" THEN
            TaxRegNormDetail.SETFILTER("Effective Date",'..%1',"Posting Date")
          ELSE
            TaxRegNormDetail.SETRANGE("Effective Date","Posting Date");
          IF TaxRegNormDetail.FINDLAST THEN
            "Tax Factor" := TaxRegNormDetail.Norm;
        END;
      VALIDATE("Tax Factor");
    END;

    BEGIN
    {
      NC NOS-26 SPA
    }
    END.
  }
}

