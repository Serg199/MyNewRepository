OBJECT Page 8632 Config. Worksheet
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Config. Worksheet;
               RUS=Журнал конфигураций];
    SourceTable=Table8622;
    DelayedInsert=Yes;
    SourceTableView=SORTING(Vertical Sorting);
    PageType=List;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Excel,Show;
                                RUS=Создать, Обработать, Отчет, Excel, Показать];
    OnOpenPage=BEGIN
                 FILTERGROUP := 2;
                 SETRANGE("Company Filter",COMPANYNAME);
                 FILTERGROUP := 0;
               END;

    OnClosePage=VAR
                  ConfigMgt@1002 : Codeunit 8616;
                BEGIN
                  ConfigMgt.AssignParentLineNos;
                END;

    OnAfterGetRecord=BEGIN
                       NameIndent := 0;
                       CASE "Line Type" OF
                         "Line Type"::Group:
                           NameIndent := 1;
                         "Line Type"::Table:
                           NameIndent := 2;
                       END;

                       NameEmphasize := (NameIndent IN [0,1]);
                     END;

    OnNewRecord=BEGIN
                  "Line Type" := xRec."Line Type";
                END;

    OnInsertRecord=VAR
                     ConfigLine@1001 : Record 8622;
                   BEGIN
                     NextLineNo := 10000;
                     ConfigLine.RESET;
                     IF ConfigLine.FINDLAST THEN
                       NextLineNo := ConfigLine."Line No." + 10000;

                     ConfigLine.SETCURRENTKEY("Vertical Sorting");
                     IF BelowxRec THEN BEGIN
                       IF ConfigLine.FINDLAST THEN;
                       "Vertical Sorting" := ConfigLine."Vertical Sorting" + 1;
                       "Line No." := NextLineNo;
                     END ELSE BEGIN
                       NextVertNo := xRec."Vertical Sorting";

                       ConfigLine.SETFILTER("Vertical Sorting",'%1..',NextVertNo);
                       IF ConfigLine.FIND('+') THEN
                         REPEAT
                           ConfigLine."Vertical Sorting" := ConfigLine."Vertical Sorting" + 1;
                           ConfigLine.MODIFY;
                         UNTIL ConfigLine.NEXT(-1) = 0;

                       "Line No." := NextLineNo;
                       "Vertical Sorting" := NextVertNo;
                     END;
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 14      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Setup;
                                 RUS=&Настройка];
                      Image=Setup }
      { 9       ;2   ;Action    ;
                      Name=Questions;
                      CaptionML=[ENU=Questions;
                                 RUS=Вопросы];
                      ToolTipML=[ENU=View the questions that are to be answered on the setup questionnaire.;
                                 RUS=Просмотр вопроса, на который требуется ответить при заполнении анкеты настройки.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Answers;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 ShowQuestions;
                               END;
                                }
      { 27      ;2   ;Action    ;
                      CaptionML=[ENU=Users;
                                 RUS=Пользователи];
                      ToolTipML=[ENU=View or edit users that will be configured in the database.;
                                 RUS=Просмотр или изменение пользователей, которые будут настраиваться в базе данных.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 9800;
                      Image=Users }
      { 57      ;2   ;Action    ;
                      CaptionML=[ENU=Users Personalization;
                                 RUS=Персонализация пользователей];
                      ToolTipML=[ENU=View or edit UI changes that will be configured in the database.;
                                 RUS=Просмотр или изменение изменений пользовательского интерфейса, которые будут настраиваться в базе данных.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 9173;
                      Image=UserSetup }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 18      ;1   ;ActionGroup;
                      CaptionML=[ENU=Sho&w;
                                 RUS=Пока&зать];
                      Image=Action }
      { 58      ;2   ;Action    ;
                      Name=PackageCard;
                      CaptionML=[ENU=Package Card;
                                 RUS=Карта пакета];
                      ToolTipML=[ENU=View or edit information about the package.;
                                 RUS=Просмотр или изменение сведений о пакете.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Bin;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 TESTFIELD("Package Code");
                                 ConfigPackageTable.ShowPackageCard("Package Code");
                               END;
                                }
      { 12      ;2   ;Action    ;
                      Name=PromotedOnly;
                      CaptionML=[ENU=Promoted Only;
                                 RUS=Только повышенное];
                      ToolTipML=[ENU=View tables that are marked as promoted, for example, because they are frequently by a typical customer during the setup process.;
                                 RUS=Просмотр таблиц, которые помечены как таблицы, уровень которых был повышен, например в связи с тем, что они часто используются типичным клиентом в процессе настройки.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ShowSelected;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 IF GETFILTER("Promoted Table") = '' THEN
                                   SETRANGE("Promoted Table",TRUE)
                                 ELSE
                                   SETRANGE("Promoted Table");
                               END;
                                }
      { 23      ;2   ;Action    ;
                      CaptionML=[ENU=Database Data;
                                 RUS=Данные базы данных];
                      ToolTipML=[ENU=View the data that has been applied to the database.;
                                 RUS=Просмотр данных, которые были применены к базе данных.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Database;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 ShowTableData;
                               END;
                                }
      { 21      ;2   ;Action    ;
                      Name=PackageData;
                      CaptionML=[ENU=Package Data;
                                 RUS=Данные пакета];
                      ToolTipML=[ENU=View or edit information about the package.;
                                 RUS=Просмотр или изменение сведений о пакете.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Grid;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 GetConfigPackageTable(ConfigPackageTable);
                                 ConfigPackageTable.ShowPackageRecords(Show::Records,"Dimensions as Columns");
                               END;
                                }
      { 36      ;2   ;Action    ;
                      CaptionML=[ENU=Errors;
                                 RUS=Ошибки];
                      ToolTipML=[ENU=View a list of errors that resulted from the data migration. For example, if you are importing a customer into Dynamics NAV and assign to that customer a salesperson who is not in the database, you get an error during migration. You can fix the error by removing the incorrect salesperson ID or by updating the information about salespeople so that the list of salespeople is correct and up-to-date.;
                                 RUS=Просмотр списка ошибок, возникших в результате миграции данных. Предположим, вы импортируете клиента в Dynamics NAV и назначаете ему менеджера по продажам, который отсутствует в базе данных. В этом случае в процессе миграции появляется сообщение об ошибке. Эту ошибку можно исправить, удалив неверный код менеджера или изменив информацию о менеджере так, чтобы список менеджеров был правильным и актуальным.];
                      ApplicationArea=#Basic,#Suite;
                      Image=ErrorLog;
                      OnAction=BEGIN
                                 GetConfigPackageTable(ConfigPackageTable);
                                 ConfigPackageTable.ShowPackageRecords(Show::Errors,"Dimensions as Columns");
                               END;
                                }
      { 35      ;2   ;Action    ;
                      CaptionML=[ENU=Fields;
                                 RUS=Поля];
                      ToolTipML=[ENU=View the fields that are used in the company configuration process. For each table in the list of configuration tables, the Config. Package Fields window displays a list of all the fields in the table and indicates the order in which the data in a field is to be processed.;
                                 RUS=Просмотр полей, которые используются в процессе настройки организации. Для каждой таблицы в списке таблиц конфигурации окно "Поля пакета конфигураций" содержит список всех полей в таблице с указанием порядка обработки данных в поле.];
                      ApplicationArea=#Basic,#Suite;
                      Image=CheckList;
                      OnAction=BEGIN
                                 GetConfigPackageTable(ConfigPackageTable);
                                 ConfigPackageTable.ShowPackageFields;
                               END;
                                }
      { 37      ;2   ;Action    ;
                      CaptionML=[ENU=Filters;
                                 RUS=Фильтры];
                      ToolTipML=[ENU=View or set field filter values for a configuration package filter. By setting a value, you specify that only records with that value are included in the configuration package.;
                                 RUS=Просмотр или установка значений фильтров полей для фильтра пакета конфигурации. В результате в пакет конфигурации будут включены только записи с указанным значением.];
                      ApplicationArea=#Basic,#Suite;
                      Image=FilterLines;
                      OnAction=BEGIN
                                 GetConfigPackageTable(ConfigPackageTable);
                                 ConfigPackageTable.ShowFilters;
                               END;
                                }
      { 45      ;1   ;ActionGroup;
                      CaptionML=[ENU=Functions;
                                 RUS=Функции] }
      { 34      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get Tables;
                                 RUS=Получить таблицы];
                      ToolTipML=[ENU=Select tables that you want to add to the configuration package.;
                                 RUS=Выбор таблиц, которые должны быть добавлены в пакет конфигурации:];
                      ApplicationArea=#Basic,#Suite;
                      PromotedIsBig=Yes;
                      Image=GetLines;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 GetConfigTables@1000 : Report 8614;
                               BEGIN
                                 GetConfigTables.RUNMODAL;
                                 CLEAR(GetConfigTables);
                               END;
                                }
      { 56      ;2   ;Action    ;
                      Name=GetRelatedTables;
                      CaptionML=[ENU=Get Related Tables;
                                 RUS=Получить связанные таблицы];
                      ToolTipML=[ENU=Select tables that relate to existing selected tables that you also want to add to the configuration package.;
                                 RUS=Выбор таблиц, связанных с существующими выбранными таблицами, которые также должны быть включены в пакет конфигурации.];
                      ApplicationArea=#Basic,#Suite;
                      Image=GetEntries;
                      OnAction=VAR
                                 AllObj@1002 : Record 2000000038;
                                 ConfigLine@1000 : Record 8622;
                                 ConfigMgt@1001 : Codeunit 8616;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(ConfigLine);
                                 IF ConfigLine.FINDSET THEN
                                   REPEAT
                                     AllObj.SETRANGE("Object Type",AllObj."Object Type"::Table);
                                     AllObj.SETRANGE("Object ID",ConfigLine."Table ID");
                                     ConfigMgt.GetConfigTables(AllObj,FALSE,TRUE,FALSE,FALSE,FALSE);
                                     COMMIT;
                                   UNTIL ConfigLine.NEXT = 0;
                               END;
                                }
      { 59      ;2   ;Action    ;
                      Name=DeleteDuplicateLines;
                      CaptionML=[ENU=Delete Duplicate Lines;
                                 RUS=Удалить повторяющиеся строки];
                      ToolTipML=[ENU=Remove duplicate tables that have the same package code.;
                                 RUS=Удаление повторяющихся таблиц, которые имеют один и тот же код пакета.];
                      ApplicationArea=#Basic,#Suite;
                      PromotedIsBig=Yes;
                      Image=RemoveLine;
                      OnAction=BEGIN
                                 DeleteDuplicateLines;
                               END;
                                }
      { 46      ;2   ;Action    ;
                      Name=ApplyData;
                      CaptionML=[ENU=Apply Data;
                                 RUS=Применить данные];
                      ToolTipML=[ENU=Apply the data in the package to the database. After you apply data, you can only see it in the database.;
                                 RUS=Применение данных в пакете к базе данных. После применения данных их можно будет видеть только в базе данных.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Apply;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ConfigLine@1002 : Record 8622;
                                 ConfigPackageMgt@1001 : Codeunit 8611;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(ConfigLine);
                                 CheckSelectedLines(ConfigLine);
                                 IF CONFIRM(Text003,FALSE) THEN
                                   ConfigPackageMgt.ApplyConfigLines(ConfigLine);
                               END;
                                }
      { 38      ;2   ;Action    ;
                      Name=MoveUp;
                      CaptionML=[ENU=Move Up;
                                 RUS=Сдвинуть вверх];
                      ToolTipML=[ENU=Change the sorting order of the lines.;
                                 RUS=Изменение порядка сортировки строк.];
                      ApplicationArea=#Basic,#Suite;
                      Image=MoveUp;
                      OnAction=VAR
                                 ConfigLine@1000 : Record 8622;
                               BEGIN
                                 CurrPage.SAVERECORD;
                                 ConfigLine.SETCURRENTKEY("Vertical Sorting");
                                 ConfigLine.SETFILTER("Vertical Sorting",'..%1',"Vertical Sorting" - 1);
                                 IF ConfigLine.FINDLAST THEN BEGIN
                                   ExchangeLines(Rec,ConfigLine);
                                   CurrPage.UPDATE(FALSE);
                                 END;
                               END;
                                }
      { 39      ;2   ;Action    ;
                      Name=MoveDown;
                      CaptionML=[ENU=Move Down;
                                 RUS=Сдвинуть вниз];
                      ToolTipML=[ENU=Change the sorting order of the lines.;
                                 RUS=Изменение порядка сортировки строк.];
                      ApplicationArea=#Basic,#Suite;
                      Image=MoveDown;
                      OnAction=VAR
                                 ConfigLine@1000 : Record 8622;
                               BEGIN
                                 CurrPage.SAVERECORD;
                                 ConfigLine.SETCURRENTKEY("Vertical Sorting");
                                 ConfigLine.SETFILTER("Vertical Sorting",'%1..',"Vertical Sorting" + 1);
                                 IF ConfigLine.FINDFIRST THEN BEGIN
                                   ExchangeLines(Rec,ConfigLine);
                                   CurrPage.UPDATE(FALSE);
                                 END;
                               END;
                                }
      { 7       ;2   ;Action    ;
                      Name=AssignPackage;
                      CaptionML=[ENU=Assign Package;
                                 RUS=Назначить пакет];
                      ToolTipML=[ENU=Assign the tables that you want to treat as part of your configuration to a configuration package.;
                                 RUS=Назначение таблиц, которые должны быть частью конфигурации, пакету конфигурации.];
                      ApplicationArea=#Basic,#Suite;
                      Image=Migration;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ConfigLine@1000 : Record 8622;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(ConfigLine);
                                 AssignPackagePrompt(ConfigLine);
                               END;
                                }
      { 47      ;1   ;ActionGroup;
                      CaptionML=[ENU=Tools;
                                 RUS=Инструменты] }
      { 48      ;2   ;Action    ;
                      Name=CopyDataFromCompany;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Data from Company;
                                 RUS=Копировать данные из компании];
                      ToolTipML=[ENU=Copy commonly used values from an existing company to a new one. For example, if you have a standard list of symptom codes that is common to all your service management implementations, you can copy the codes easily from one company to another.;
                                 RUS=Копирование часто используемых значений из имеющейся организации в новую. Например, если у вас есть стандартный список кодов признаков неисправностей, которые являются общими для всех реализаций управления сервисом, коды можно легко скопировать из одной организации в другую.];
                      ApplicationArea=#Basic,#Suite;
                      Image=Copy;
                      OnAction=BEGIN
                                 PAGE.RUNMODAL(PAGE::"Copy Company Data");
                               END;
                                }
      { 24      ;1   ;ActionGroup;
                      CaptionML=[ENU=Excel;
                                 RUS=Excel] }
      { 3       ;2   ;Action    ;
                      CaptionML=[ENU=Export to Template;
                                 RUS=Экспорт в шаблон];
                      ToolTipML=[ENU=Export the data to an Excel workbook to serve as a template that is based on the structure of an existing database table quickly. You can then use the template to gather together customer data in a consistent format for later import into Dynamics NAV.;
                                 RUS=Экспорт данных в книгу Excel, которая будет использоваться в качестве шаблона, основанного на структуре имеющейся таблицы базы данных. Затем с помощью этого шаблона можно будет собрать клиентские данные в едином формате для импорта в Dynamics NAV.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ExportToExcel;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ConfigLine@1001 : Record 8622;
                                 ConfigExcelExchange@1000 : Codeunit 8618;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(ConfigLine);
                                 CheckSelectedLines(ConfigLine);
                                 IF CONFIRM(Text005,TRUE,ConfigLine.COUNT) THEN
                                   ConfigExcelExchange.ExportExcelFromConfig(ConfigLine);
                               END;
                                }
      { 29      ;2   ;Action    ;
                      CaptionML=[ENU=Import from Template;
                                 RUS=Импорт из шаблона];
                      ToolTipML=[ENU=Import data that exists in a configuration template.;
                                 RUS=Импорт данных, имеющихся в шаблоне конфигурации.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ImportExcel;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ConfigExcelExchange@1000 : Codeunit 8618;
                               BEGIN
                                 IF CONFIRM(Text004,TRUE) THEN
                                   ConfigExcelExchange.ImportExcelFromConfig(Rec);
                               END;
                                }
      { 49      ;0   ;ActionContainer;
                      ActionContainerType=Reports }
      { 50      ;1   ;ActionGroup;
                      CaptionML=[ENU=C&reate;
                                 RUS=С&оздать] }
      { 51      ;2   ;Action    ;
                      CaptionML=[ENU=Create G/L Journal Lines;
                                 RUS=Создать строки журнала ГК];
                      RunObject=Report 8610;
                      Image=Report }
      { 52      ;2   ;Action    ;
                      CaptionML=[ENU=Create Customer Journal Lines;
                                 RUS=Создание строк журнала клиентов];
                      ToolTipML=[ENU=Create journal lines during the setup of the new company.;
                                 RUS=Создание строк журнала в процессе настройки новой организации.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Report 8611;
                      Image=Report }
      { 53      ;2   ;Action    ;
                      CaptionML=[ENU=Create Vendor Journal Lines;
                                 RUS=Создать строки журнала поставщиков];
                      ToolTipML=[ENU=Prepare to transfer legacy vendor balances to the newly configured company.;
                                 RUS=Подготовка к переносу унаследованных балансов поставщиков в новую настраиваемую организацию.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Report 8612;
                      Image=Report }
      { 54      ;2   ;Action    ;
                      CaptionML=[ENU=Create Item Journal Lines;
                                 RUS=Создание строк журнала товаров];
                      ToolTipML=[ENU=Prepare to transfer legacy inventory balances to the newly configured company.;
                                 RUS=Подготовка к переносу унаследованных балансов запасов в новую настраиваемую организацию.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Report 8613;
                      Image=Report }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                IndentationColumnName=NameIndent;
                IndentationControls=Name;
                GroupType=Repeater }

    { 32  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of the configuration package line. The line can be one of the following types:;
                           RUS=Определяет тип строки пакета конфигурации. Строка может иметь один из следующих типов:];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Line Type";
                Style=Strong;
                StyleExpr=NameEmphasize }

    { 17  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of the table that you want to use for the line type. After you select a table ID from the list of objects in the lookup table, the name of the table is automatically filled in the Name field.;
                           RUS=Определяет идентификатор таблицы, которую требуется использовать для типа строки. После выбора идентификатора в списке объектов в таблице выбора имя таблицы будет автоматически подставлено в поле "Имя".];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr="Table ID" }

    { 26  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the line type.;
                           RUS=Определяет имя типа строки.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Name;
                Style=Strong;
                StyleExpr=NameEmphasize }

    { 40  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the table is promoted. Select the check box to promote the table in the configuration worksheet. You can use this designation as a signal that this table requires additional attention.;
                           RUS=Указывает, повышается ли уровень таблицы. Установите флажок, чтобы повысить уровень таблицы в листе конфигурации. Это может свидетельствовать о том, что таблица требует дополнительного внимания.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Promoted Table" }

    { 2   ;2   ;Field     ;
                Width=20;
                ToolTipML=[ENU=Specifies a url address. Use this field to provide a url address to a location that Specifies information about the table. For example, you could provide the address of a page that Specifies information about setup considerations that the solution implementer should consider.;
                           RUS=Определяет URL-адрес. Это поле служит для задания URL-адреса расположения, где указана информация о таблице. Например, можно задать адрес страницы с информацией об особенностях настройки, которые нужно учитывать при внедрении решения.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Reference }

    { 43  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the package associated with the configuration. The code is filled in when you use the Assign Package function to select the package for the line type.;
                           RUS=Определяет код пакета, связанного с конфигурацией. Этот код указывается при выборе пакета для типа строки с помощью функции "Назначить пакет".];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Package Code";
                Editable=FALSE }

    { 44  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the package that has been assigned to the worksheet line has been created.;
                           RUS=Указывает, был ли создан пакет, который был назначен строке журнала.];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr="Package Exists" }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of the Microsoft Dynamics NAV user who is responsible for the configuration worksheet.;
                           RUS=Определяет код пользователя Microsoft Dynamics NAV, отвечающего за лист конфигурации.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Responsible ID" }

    { 31  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the status of the table in the configuration worksheet. You can use the status information, which you provide, to help you in planning and tracking your work.;
                           RUS=Определяет статус таблицы в листе конфигурации. Сведения о статусе помогают при планировании и отслеживании работы.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Status }

    { 11  ;2   ;Field     ;
                AssistEdit=Yes;
                ToolTipML=[ENU=Specifies the number of the page that is associated with the table that is specified on the configuration worksheet.;
                           RUS=Определяет номер страницы, связанной с таблицей, указанной в листе конфигурации.];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr="Page ID";
                OnAssistEdit=BEGIN
                               ShowTableData;
                             END;
                              }

    { 13  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the page that is associated with the table specified on the configuration worksheet.;
                           RUS=Определяет имя страницы, связанной с таблицей, указанной в листе конфигурации.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Page Caption" }

    { 33  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the table is covered by the license of the person creating the configuration package.;
                           RUS=Указывает, распространяется ли на таблицу лицензия лица, создающего пакет конфигурации.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Licensed Table" }

    { 15  ;2   ;Field     ;
                Name=NoOfRecords;
                CaptionML=[ENU=No. of Records;
                           RUS=Число записей];
                ToolTipML=[ENU=Specifies how many records are created in connection with migration.;
                           RUS=Определяет количество записей, созданных в результате миграции.];
                ApplicationArea=#Basic,#Suite;
                BlankZero=Yes;
                SourceExpr=GetNoOfRecords }

    { 20  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the configuration includes dimensions as columns. When you select the Dimensions as Columns check box, the dimensions are included in the Excel worksheet that you create for configuration. In order to select this check box, you must include the Default Dimension and Dimension Value tables in the configuration package.;
                           RUS=Указывает, включает ли конфигурация измерения в виде столбцов. Если флажок "Измерения как столбцы" установлен, измерения включаются в лист Excel, создаваемый для конфигурации. Чтобы можно было установить этот флажок, необходимо включить в пакет конфигурации таблицы "Измерение по умолчанию" и "Значение измерения".];
                ApplicationArea=#Suite;
                SourceExpr="Dimensions as Columns" }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether copying is available in the configuration worksheet.;
                           RUS=Указывает, разрешено ли копирование в листе конфигураций.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Copying Available" }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of question groups that are contained on the configuration questionnaire.;
                           RUS=Определяет количество групп вопросов в анкете конфигурации.];
                BlankZero=Yes;
                SourceExpr="No. of Question Groups";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the page that is associated with the table is licensed.;
                           RUS=Определяет, лицензирована ли страница, связанная с таблицей.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Licensed Page" }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 6   ;1   ;Part      ;
                CaptionML=[ENU=Package Table;
                           RUS=Таблица пакетов];
                ApplicationArea=#Basic,#Suite;
                SubPageView=SORTING(Package Code,Table ID);
                SubPageLink=Package Code=FIELD(Package Code),
                            Table ID=FIELD(Table ID);
                PagePartID=Page8634;
                PartType=Page }

    { 28  ;1   ;Part      ;
                CaptionML=[ENU=Related Tables;
                           RUS=Связанные таблицы];
                ApplicationArea=#Basic,#Suite;
                SubPageLink=Table ID=FIELD(Table ID);
                PagePartID=Page8635;
                PartType=Page }

    { 22  ;1   ;Part      ;
                CaptionML=[ENU=Questions;
                           RUS=Вопросы];
                ApplicationArea=#Basic,#Suite;
                SubPageLink=Table ID=FIELD(Table ID);
                PagePartID=Page8633;
                PartType=Page }

    { 25  ;1   ;Part      ;
                CaptionML=[ENU=Notes;
                           RUS=Заметки];
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

    { 41  ;1   ;Part      ;
                CaptionML=[ENU=Links;
                           RUS=Ссылки];
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

  }
  CODE
  {
    VAR
      ConfigPackageTable@1010 : Record 8613;
      Show@1002 : 'Records,Errors,All';
      NameEmphasize@1004 : Boolean INDATASET;
      NameIndent@1003 : Integer INDATASET;
      NextLineNo@1005 : Integer;
      NextVertNo@1006 : Integer;
      Text001@1001 : TextConst 'ENU=You must assign a package code before you can carry out this action.;RUS=Перед выполнением этого действия необходимо назначить код пакета.';
      Text002@1000 : TextConst 'ENU=You must select table lines with the same package code.;RUS=Необходимо выбрать строки таблицы с одним и тем же кодом пакета.';
      Text003@1007 : TextConst 'ENU=Do you want to apply package data for the selected tables?;RUS=Применить данные пакета для выбранных таблиц?';
      Text004@1008 : TextConst 'ENU=Do you want to import data from the Excel template?;RUS=Импортировать данные из шаблона Excel?';
      Text005@1009 : TextConst 'ENU=Do you want to export data from %1 tables to the Excel template?;RUS=Экспортировать данные из %1 таблиц в шаблон Excel?';

    LOCAL PROCEDURE ExchangeLines@1(VAR ConfigLine1@1000 : Record 8622;VAR ConfigLine2@1001 : Record 8622);
    VAR
      VertSort@1002 : Integer;
    BEGIN
      VertSort := ConfigLine1."Vertical Sorting";
      ConfigLine1."Vertical Sorting" := ConfigLine2."Vertical Sorting";
      ConfigLine2."Vertical Sorting" := VertSort;
      ConfigLine1.MODIFY;
      ConfigLine2.MODIFY;
    END;

    LOCAL PROCEDURE AssignPackagePrompt@7(VAR ConfigLine@1000 : Record 8622);
    VAR
      ConfigPackage@1002 : Record 8623;
      ConfigPackageMgt@1003 : Codeunit 8611;
      ConfigPackages@1001 : Page 8615;
    BEGIN
      ConfigPackageMgt.CheckConfigLinesToAssign(ConfigLine);
      CLEAR(ConfigPackages);
      ConfigPackage.INIT;
      ConfigPackages.LOOKUPMODE(TRUE);
      IF ConfigPackages.RUNMODAL = ACTION::LookupOK THEN BEGIN
        ConfigPackages.GETRECORD(ConfigPackage);
        ConfigPackageMgt.AssignPackage(ConfigLine,ConfigPackage.Code);
      END;
    END;

    LOCAL PROCEDURE CheckSelectedLines@2(VAR SelectedConfigLine@1000 : Record 8622);
    VAR
      PackageCode@1001 : Code[20];
    BEGIN
      PackageCode := '';
      WITH SelectedConfigLine DO BEGIN
        IF FINDSET THEN
          REPEAT
            CheckBlocked;
            IF ("Package Code" <> '') AND
               ("Line Type" = "Line Type"::Table) AND
               (Status <= Status::"In Progress")
            THEN BEGIN
              IF PackageCode = '' THEN
                PackageCode := "Package Code"
              ELSE
                IF PackageCode <> "Package Code" THEN
                  ERROR(Text002);
            END ELSE
              IF "Package Code" = '' THEN
                ERROR(Text001);
          UNTIL NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE GetConfigPackageTable@4(VAR ConfigPackageTable@1000 : Record 8613);
    BEGIN
      TESTFIELD("Table ID");
      IF NOT ConfigPackageTable.GET("Package Code","Table ID") THEN
        ERROR(Text001);
    END;

    BEGIN
    END.
  }
}

