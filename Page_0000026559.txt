OBJECT Page 26559 Element Expression Lines
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Element Expression Lines;
               RUS=Строки выражений элемента];
    SourceTable=Table26560;
    PageType=Worksheet;
    AutoSplitKey=Yes;
    OnOpenPage=BEGIN
                 ExpressionValue := GetExpressionValue;
                   OnActivateForm;
               END;

    OnNewRecord=BEGIN
                  UpdateReferences;
                END;

    OnAfterGetCurrRecord=BEGIN
                           ExpressionValue := GetExpressionValue;
                         END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1210014;1;Field     ;
                Name=ExpressionValueControl;
                CaptionML=[ENU=Expression Value;
                           RUS=Значение выражения];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ExpressionValue;
                Editable=FALSE }

    { 1210000;1;Group     ;
                GroupType=Repeater }

    { 1210003;2;Field     ;
                ToolTipML=[ENU=Specifies the source of the requisite expression line.;
                           RUS=Определяет источник строки выражения показателя.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Source;
                OnValidate=BEGIN
                             SourceOnAfterValidate;
                           END;
                            }

    { 1210005;2;Field     ;
                DrillDown=No;
                ToolTipML=[ENU=Specifies the field name of the requisite expression line.;
                           RUS=Определяет имя поля строки выражения показателя.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Field Name";
                OnLookup=VAR
                           FieldID@1210002 : Integer;
                         BEGIN
                           FieldID := LookupField("Field ID");
                           IF FieldID <> 0 THEN BEGIN
                             VALIDATE("Field ID",FieldID);
                             CurrPage.UPDATE;

                             ExpressionValue := UpdateRequisiteValue(FALSE);
                           END;
                         END;
                          }

    { 1210001;2;Field     ;
                ToolTipML=[ENU=Specifies the value of the requisite expression line.;
                           RUS=Определяет значение строки выражения показателя.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Value }

    { 1210007;2;Field     ;
                ToolTipML=[ENU=Specifies the string that is before the requisite expression line.;
                           RUS=Определяет строку, предшествующую строке выражения показателя.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="String Before" }

    { 1210009;2;Field     ;
                ToolTipML=[ENU=Specifies the string that is after the requisite expression line.;
                           RUS=Определяет строку, следующую после строки выражения показателя.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="String After" }

  }
  CODE
  {
    VAR
      StatReportRequisite@1210001 : Record 26559;
      ExpressionValue@1210000 : Text[250];

    PROCEDURE GetExpressionValue@1210007() : Text[250];
    BEGIN
      IF StatReportRequisite.GET("Report Code","Requisites Group Name","Base Requisite Name") THEN
        EXIT(StatReportRequisite.Value);

      EXIT('');
    END;

    LOCAL PROCEDURE SourceOnAfterValidate@19016260();
    BEGIN
      CALCFIELDS("Field Name");
    END;

    LOCAL PROCEDURE OnActivateForm@19002417();
    BEGIN
      ExpressionValue := GetExpressionValue;
    END;

    BEGIN
    END.
  }
}

