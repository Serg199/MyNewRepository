OBJECT Report 17307 Calc. Tax Diff.- Disposed FA
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Calc. Tax Diff.- Disposed FA;
               RUS=Расчет налог. разниц по списанным ОС];
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   TaxRegisterSetup.GET;
                   TaxRegisterSetup.TESTFIELD("Use Group Depr. Method from",0D);
                   TaxRegisterSetup.TESTFIELD("Tax Depreciation Book");
                   TaxRegisterSetup.TESTFIELD("Calculate TD for each FA",TRUE);
                   IF TaxRegisterSetup."Depr. Bonus Recovery from" <> 0D THEN
                     TaxRegisterSetup.TESTFIELD("Depr. Bonus Recov. Per. (Year)");
                   FASetup.GET;
                 END;

    OnPreReport=BEGIN
                  StartDate := DatePeriod."Period Start";
                  EndDate := NORMALDATE(DatePeriod."Period End");

                  IF TemplateName = '' THEN
                    ERROR(Text001);

                  IF BatchName = '' THEN
                    ERROR(Text002);

                  TaxDiffJnlBatch.GET(TemplateName,BatchName);
                  TaxDiffJnlBatch.TESTFIELD("No. Series");
                END;

  }
  DATASET
  {
    { 3794;    ;DataItem;                    ;
               DataItemTable=Table5600;
               DataItemTableView=SORTING(No.)
                                 WHERE(FA Type=FILTER(Fixed Assets|Intangible Asset),
                                       Blocked=CONST(No),
                                       Inactive=CONST(No));
               OnPreDataItem=BEGIN
                               TaxDiffJnlLine."Journal Template Name" := TemplateName;
                               TaxDiffJnlLine."Journal Batch Name" := BatchName;
                               TaxDiffJnlLine.SETRANGE("Journal Template Name",TemplateName);
                               TaxDiffJnlLine.SETRANGE("Journal Batch Name",BatchName);
                               IF TaxDiffJnlLine.FINDLAST THEN;
                               LineNo := TaxDiffJnlLine."Line No." + 10000;
                             END;

               OnAfterGetRecord=VAR
                                  TaxDeprBonusAmount@1210000 : Decimal;
                                  AccBookValueOnDisposal@1210012 : Decimal;
                                  TaxBookValueOnDisposal@1210013 : Decimal;
                                  DisposalDate@1210001 : Date;
                                  FAIsSold@1210002 : Boolean;
                                BEGIN
                                  TaxDiffFAPostingBuffer.RESET;
                                  TaxDiffFAPostingBuffer.DELETEALL;

                                  FALedgerEntry.RESET;
                                  FALedgerEntry.SETCURRENTKEY("FA No.","Depreciation Book Code","FA Posting Category","FA Posting Type","FA Posting Date");
                                  FALedgerEntry.SETRANGE("FA No.","No.");
                                  FALedgerEntry.SETRANGE("Depreciation Book Code",TaxRegisterSetup."Tax Depreciation Book");
                                  FALedgerEntry.SETRANGE("FA Posting Type",FALedgerEntry."FA Posting Type"::"Proceeds on Disposal");
                                  FALedgerEntry.SETRANGE("Canceled from FA No.",'');
                                  FALedgerEntry.SETRANGE(Reversed,FALSE);
                                  IF FALedgerEntry.FINDLAST THEN
                                    DisposalDate := FALedgerEntry."FA Posting Date"
                                  ELSE
                                    CurrReport.SKIP;

                                  SourceType := GetTDESourceType;

                                  IF FADepreciationBook.GET("No.",TaxRegisterSetup."Tax Depreciation Book") THEN BEGIN
                                    FADepreciationBook.CALCFIELDS("Depreciation Bonus");
                                    TaxDeprBonusAmount := FADepreciationBook."Depreciation Bonus";
                                    FADepreciationBook.SETRANGE("FA Posting Date Filter",StartDate,EndDate);
                                    FADepreciationBook.CALCFIELDS("Proceeds on Disposal");
                                    FAIsSold := FADepreciationBook."Proceeds on Disposal" <> 0;
                                  END ELSE
                                    CurrReport.SKIP;

                                  FALedgerEntry.RESET;
                                  FALedgerEntry.SETCURRENTKEY("FA No.","Depreciation Book Code","FA Posting Category","FA Posting Type","FA Posting Date");
                                  FALedgerEntry.SETRANGE("FA No.","No.");
                                  FALedgerEntry.SETRANGE("Depreciation Book Code",FASetup."Release Depr. Book");
                                  FALedgerEntry.SETRANGE("FA Posting Type",FALedgerEntry."FA Posting Type"::"Gain/Loss");
                                  FALedgerEntry.SETRANGE("FA Posting Date",0D,DisposalDate);
                                  FALedgerEntry.SETRANGE("Disposal Entry No.",1);
                                  IF FALedgerEntry.FINDLAST THEN
                                    AccBookValueOnDisposal := FALedgerEntry.Amount;

                                  FALedgerEntry.RESET;
                                  FALedgerEntry.SETCURRENTKEY("FA No.","Depreciation Book Code","FA Posting Category","FA Posting Type","FA Posting Date");
                                  FALedgerEntry.SETRANGE("FA No.","No.");
                                  FALedgerEntry.SETRANGE("Depreciation Book Code",TaxRegisterSetup."Tax Depreciation Book");
                                  FALedgerEntry.SETRANGE("FA Posting Type",FALedgerEntry."FA Posting Type"::"Gain/Loss");
                                  FALedgerEntry.SETRANGE("FA Posting Date",0D,DisposalDate);
                                  FALedgerEntry.SETRANGE("Disposal Entry No.",1);
                                  IF FALedgerEntry.FINDLAST THEN
                                    TaxBookValueOnDisposal := FALedgerEntry.Amount;

                                  TaxDiffLedgerEntry.RESET;
                                  TaxDiffLedgerEntry.SETCURRENTKEY("Tax Diff. Code","Source Type","Source No.");
                                  TaxDiffLedgerEntry.SETRANGE("Source Type",SourceType);
                                  TaxDiffLedgerEntry.SETRANGE("Source No.","No.");
                                  TaxDiffLedgerEntry.SETRANGE("Tax Diff. Type",TaxDiffLedgerEntry."Tax Diff. Type"::"Temporary");
                                  IF TaxDiffLedgerEntry.FINDSET THEN
                                    REPEAT
                                      UpdateTaxDiffPostBuf(TaxDiffLedgerEntry."Tax Diff. Code");
                                    UNTIL TaxDiffLedgerEntry.NEXT = 0;

                                  TaxDiffFAPostingBuffer.RESET;
                                  IF TaxDiffFAPostingBuffer.FINDSET THEN BEGIN
                                    REPEAT
                                      TaxDiffLedgerEntry.RESET;
                                      TaxDiffLedgerEntry.SETCURRENTKEY("Tax Diff. Code","Source Type","Source No.","Posting Date");
                                      TaxDiffLedgerEntry.SETRANGE("Tax Diff. Code",TaxDiffFAPostingBuffer."Tax Diff. Code");
                                      TaxDiffLedgerEntry.SETRANGE("Source Type",SourceType);
                                      TaxDiffLedgerEntry.SETRANGE("Source No.","No.");
                                      TaxDiffLedgerEntry.CALCSUMS(Difference);
                                      IF TaxDiffLedgerEntry.Difference <> 0 THEN BEGIN
                                        IF NOT TaxDiffAlreadyPosted(TaxDiffFAPostingBuffer."Tax Diff. Code","No.",EndDate) THEN
                                          CreateJnlLine(
                                            STRSUBSTNO(Text003,"No."),
                                            EndDate,
                                            TaxDiffFAPostingBuffer."Tax Diff. Code",
                                            "No.",
                                            0,
                                            0,
                                            EndDate,
                                            TaxDiffJnlLine."Disposal Mode"::"Write Down",
                                            FALSE,
                                            1);
                                      END;
                                    UNTIL TaxDiffFAPostingBuffer.NEXT = 0;
                                  END;

                                  IF AccBookValueOnDisposal <> TaxBookValueOnDisposal THEN BEGIN
                                    IF NOT TaxDiffAlreadyPosted(TaxRegisterSetup."Disposal TD Code","No.",EndDate) THEN
                                      CreateJnlLine(
                                        STRSUBSTNO(Text004,"No."),
                                        EndDate,
                                        TaxRegisterSetup."Disposal TD Code",
                                        "No.",
                                        AccBookValueOnDisposal,
                                        TaxBookValueOnDisposal,
                                        0D,
                                        0,
                                        FALSE,
                                        0);
                                  END;

                                  IF TaxDeprBonusAmount <> 0 THEN
                                    IF ("Initial Release Date" >= TaxRegisterSetup."Depr. Bonus Recovery from") AND
                                       (DisposalDate < CALCDATE(STRSUBSTNO('<+%1Y>',TaxRegisterSetup."Depr. Bonus Recov. Per. (Year)"),"Initial Release Date"))
                                    THEN BEGIN
                                      IF FAIsSold THEN
                                        IF NOT TaxDiffAlreadyPosted(TaxRegisterSetup."Depr. Bonus Recovery TD Code","No.",EndDate) THEN
                                          CreateJnlLine(
                                            STRSUBSTNO(Text005,"No."),
                                            EndDate,
                                            TaxRegisterSetup."Depr. Bonus Recovery TD Code",
                                            "No.",
                                            0,
                                            -TaxDeprBonusAmount,
                                            0D,
                                            0,
                                            TRUE,
                                            0);
                                    END;
                                END;

               ReqFilterFields=No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   PeriodReportManagement.InitPeriod(CalendarPeriod,0);
                   PeriodReportManagement.SetCaptionPeriodYear(AccountPeriod,CalendarPeriod,FALSE);
                   DatePeriod.COPY(CalendarPeriod);
                   PeriodReportManagement.PeriodSetup(DatePeriod,FALSE);
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             RUS=Параметры] }

      { 1210003;2;Field     ;
                  CaptionML=[ENU=Accounting Period;
                             RUS=Учетный период];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=AccountPeriod;
                  OnValidate=BEGIN
                               DatePeriod.COPY(CalendarPeriod);
                               PeriodReportManagement.PeriodSetup(DatePeriod,FALSE);
                             END;

                  OnLookup=BEGIN
                             PeriodReportManagement.SelectPeriod(Text,CalendarPeriod,FALSE);
                             DatePeriod.COPY(CalendarPeriod);
                             PeriodReportManagement.PeriodSetup(DatePeriod,FALSE);
                             RequestOptionsPage.UPDATE;
                             EXIT(TRUE);
                           END;
                            }

      { 1210002;2;Field     ;
                  CaptionML=[ENU=From;
                             RUS=От];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=DatePeriod."Period Start";
                  Editable=FALSE }

      { 1210000;2;Field     ;
                  CaptionML=[ENU=To;
                             RUS=До];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=DatePeriod."Period End";
                  Editable=FALSE }

      { 1210009;2;Field     ;
                  CaptionML=[ENU=Jnl. Template Name;
                             RUS=Имя шаблона журнала];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=TemplateName;
                  TableRelation="Tax Diff. Journal Template" }

      { 1210008;2;Field     ;
                  CaptionML=[ENU=Jnl. Batch Name;
                             RUS=Код раздела журнала];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=BatchName;
                  OnLookup=BEGIN
                             IF TemplateName <> '' THEN BEGIN
                               TaxDiffJnlBatch.SETRANGE("Journal Template Name",TemplateName);
                               TaxDiffJnlBatch.SETRANGE(Name,BatchName);
                               IF TaxDiffJnlBatch.FINDFIRST THEN ;
                               TaxDiffJnlBatch.SETRANGE(Name);
                               IF ACTION::LookupOK = PAGE.RUNMODAL(0,TaxDiffJnlBatch) THEN BEGIN
                                 TemplateName := TaxDiffJnlBatch."Journal Template Name";
                                 BatchName := TaxDiffJnlBatch.Name;
                               END;
                             END;
                           END;
                            }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FALedgerEntry@1210017 : Record 5601;
      FASetup@1210011 : Record 5603;
      FADepreciationBook@1210006 : Record 5612;
      TaxRegisterSetup@1210000 : Record 17236;
      TaxDiffJnlBatch@1210008 : Record 17304;
      TaxDiffJnlLine@1210007 : Record 17305;
      xRecTaxDiffJnlLine@1470000 : Record 17305;
      TaxDiffFAPostingBuffer@1210015 : TEMPORARY Record 17323;
      TaxDiffLedgerEntry@1210021 : Record 17306;
      CalendarPeriod@1210005 : Record 2000000007;
      DatePeriod@1210004 : Record 2000000007;
      NoSeriesMgt@1210028 : Codeunit 396;
      PeriodReportManagement@1210003 : Codeunit 12406;
      StartDate@1210018 : Date;
      EndDate@1210019 : Date;
      AccountPeriod@1210001 : Text[30];
      TemplateName@1210010 : Code[10];
      BatchName@1210009 : Code[10];
      LineNo@1210020 : Integer;
      Text001@1210002 : TextConst 'ENU=Please enter a journal template name.;RUS=Введите имя шаблона журнала.';
      Text002@1210027 : TextConst 'ENU=Please enter a journal batch name.;RUS=Введите код раздела журнала.';
      SourceType@1210031 : ' ,Future Expense,Fixed Asset,Intangible Asset';
      Text003@1210013 : TextConst 'ENU=TD charges due disposal of the %1.;RUS=Расходы по нал. разн., связанные с реализацией %1.';
      Text004@1210014 : TextConst 'ENU=TD charges due diff. book value %1.;RUS=Расх. по нал. разн., связ. с разн. баланс. стоимости %1.';
      Text005@1210022 : TextConst 'ENU=Depr. Bonus Recovery %1.;RUS=Восстановление аморт. премии %1.';

    PROCEDURE CreateJnlLine@1210006(Description@1210000 : Text[80];PostingDate@1210001 : Date;TaxDiffCode@1210002 : Code[10];SourceNo@1210006 : Code[20];AmountBase@1210003 : Decimal;AmountTax@1210004 : Decimal;DisposalDate@1210005 : Date;DisposalMode@1210007 : Integer;DeprBonusRecover@1210008 : Boolean;CalcMode@1210009 : Integer);
    BEGIN
      xRecTaxDiffJnlLine := TaxDiffJnlLine;
      TaxDiffJnlLine.INIT;
      TaxDiffJnlLine.SetUpNewLine(xRecTaxDiffJnlLine);
      TaxDiffJnlLine."Journal Template Name" := TemplateName;
      TaxDiffJnlLine."Journal Batch Name" := BatchName;
      TaxDiffJnlLine."Line No." := LineNo;
      TaxDiffJnlLine.Description := COPYSTR(Description,1,MAXSTRLEN(TaxDiffJnlLine.Description));
      TaxDiffJnlLine."Document No." := NoSeriesMgt.GetNextNo(TaxDiffJnlBatch."No. Series",EndDate,TRUE);
      TaxDiffJnlLine."Posting Date" := PostingDate;
      TaxDiffJnlLine."Source Type" := SourceType;
      TaxDiffJnlLine.VALIDATE("Source No.",SourceNo);
      TaxDiffJnlLine.VALIDATE("Tax Diff. Code",TaxDiffCode);
      TaxDiffJnlLine.VALIDATE("Amount (Base)",AmountBase);
      TaxDiffJnlLine.VALIDATE("Amount (Tax)",AmountTax);
      TaxDiffJnlLine."Disposal Date" := DisposalDate;
      TaxDiffJnlLine."Disposal Mode" := DisposalMode;
      TaxDiffJnlLine."Depr. Bonus Recovery" := DeprBonusRecover;
      TaxDiffJnlLine."Source Entry Type" := TaxDiffJnlLine."Source Entry Type"::"Disposed FA";
      TaxDiffJnlLine.VALIDATE("Tax Diff. Calc. Mode",CalcMode);
      TaxDiffJnlLine.INSERT;
      LineNo += 10000;
    END;

    PROCEDURE TaxDiffAlreadyPosted@1210003(TaxDiffCode@1210000 : Code[10];SourceNo@1210002 : Code[20];PostingDate@1210003 : Date) : Boolean;
    BEGIN
      TaxDiffLedgerEntry.SETCURRENTKEY("Tax Diff. Code","Source Type","Source No.","Posting Date");
      TaxDiffLedgerEntry.SETRANGE("Posting Date",PostingDate);
      TaxDiffLedgerEntry.SETRANGE("Source Type",SourceType);
      TaxDiffLedgerEntry.SETRANGE("Source No.",SourceNo);
      TaxDiffLedgerEntry.SETRANGE("Tax Diff. Code",TaxDiffCode);
      TaxDiffLedgerEntry.SETRANGE(Reversed,FALSE);
      TaxDiffLedgerEntry.SETRANGE("Source Entry Type",TaxDiffLedgerEntry."Source Entry Type"::"Disposed FA");
      EXIT(NOT TaxDiffLedgerEntry.ISEMPTY);
    END;

    PROCEDURE UpdateTaxDiffPostBuf@1210000(TaxDiffCode@1210000 : Code[10]);
    BEGIN
      IF NOT TaxDiffFAPostingBuffer.GET(0,TaxDiffCode) THEN BEGIN
        TaxDiffFAPostingBuffer."Tax Diff. Code" := TaxDiffCode;
        TaxDiffFAPostingBuffer.INSERT;
        LineNo += 10000;
      END;
    END;

    PROCEDURE InitializeRequest@1210001(StartDate@1210000 : Date;EndDate@1210001 : Date;TaxDiffJnlTemplateName@1210002 : Code[10];TaxDiffJnlBatchName@1210003 : Code[10]);
    BEGIN
      DatePeriod."Period Start" := StartDate;
      DatePeriod."Period End" := EndDate;
      TemplateName := TaxDiffJnlTemplateName;
      BatchName := TaxDiffJnlBatchName;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

