OBJECT Table 17221 Tax Register Norm Group
{
  OBJECT-PROPERTIES
  {
    Date=18.12.13;
    Time=12:00:00;
    Version List=NAVRU7.10;
  }
  PROPERTIES
  {
    OnDelete=VAR
               TaxRegNormDetail@1210000 : Record 17222;
               TaxRegNormTemplateLine@1210003 : Record 17239;
               TaxRegNormAccumulation@1210002 : Record 17242;
             BEGIN
               TaxRegNormDetail.SETRANGE("Norm Jurisdiction Code","Norm Jurisdiction Code");
               TaxRegNormDetail.SETRANGE("Norm Group Code",Code);
               TaxRegNormDetail.DELETEALL(TRUE);

               TaxRegNormTemplateLine.SETRANGE("Norm Jurisdiction Code","Norm Jurisdiction Code");
               TaxRegNormTemplateLine.SETRANGE("Norm Group Code",Code);
               TaxRegNormTemplateLine.DELETEALL(TRUE);

               TaxRegNormAccumulation.SETRANGE("Norm Jurisdiction Code","Norm Jurisdiction Code");
               TaxRegNormAccumulation.SETRANGE("Norm Group Code",Code);
               TaxRegNormAccumulation.DELETEALL(TRUE);
             END;

    CaptionML=[ENU=Tax Register Norm Group;
               RUS=Группа нормы налог. регистра];
    LookupPageID=Page17247;
  }
  FIELDS
  {
    { 1   ;   ;Norm Jurisdiction Code;Code10      ;TableRelation="Tax Register Norm Jurisdiction";
                                                   CaptionML=[ENU=Norm Jurisdiction Code;
                                                              RUS=Код нормы юрисдикции];
                                                   NotBlank=Yes }
    { 2   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              RUS=Код];
                                                   NotBlank=Yes }
    { 3   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 4   ;   ;Has Details         ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Tax Register Norm Detail" WHERE (Norm Jurisdiction Code=FIELD(Norm Jurisdiction Code),
                                                                                                       Norm Group Code=FIELD(Code)));
                                                   CaptionML=[ENU=Has Details;
                                                              RUS=Есть подробности];
                                                   Editable=No }
    { 5   ;   ;Search Detail       ;Option        ;OnValidate=BEGIN
                                                                IF "Search Detail" = "Search Detail"::"To Date" THEN
                                                                  TESTFIELD("Storing Method","Storing Method"::" ");
                                                              END;

                                                   CaptionML=[ENU=Search Detail;
                                                              RUS=Метод поиска];
                                                   OptionCaptionML=[ENU=To Date,As of Date;
                                                                    RUS=До даты,По состоянию на дату];
                                                   OptionString=To Date,As of Date }
    { 6   ;   ;Storing Method      ;Option        ;OnValidate=VAR
                                                                TaxRegNormTemplateLine@1210002 : Record 17239;
                                                                TaxRegNormAccumulation@1210001 : Record 17242;
                                                                TaxRegNormTerm@1210000 : Record 17240;
                                                              BEGIN
                                                                IF ("Storing Method" <> xRec."Storing Method") AND (xRec."Storing Method" = xRec."Storing Method"::Calculation) THEN BEGIN
                                                                  TaxRegNormTemplateLine.SETRANGE("Norm Jurisdiction Code","Norm Jurisdiction Code");
                                                                  TaxRegNormTemplateLine.SETRANGE("Norm Group Code",Code);
                                                                  IF TaxRegNormTemplateLine.FINDFIRST THEN
                                                                    IF NOT CONFIRM(Text1000,FALSE) THEN
                                                                      ERROR('');
                                                                  TaxRegNormTemplateLine.DELETEALL(TRUE);
                                                                  TaxRegNormAccumulation.SETRANGE("Norm Jurisdiction Code","Norm Jurisdiction Code");
                                                                  TaxRegNormAccumulation.SETRANGE("Norm Group Code",Code);
                                                                  TaxRegNormAccumulation.DELETEALL(TRUE);
                                                                END;
                                                                IF "Storing Method" = "Storing Method"::Calculation THEN BEGIN
                                                                  "Search Detail" := "Search Detail"::"As of Date";
                                                                  TaxRegNormTemplateLine.GenerateProfile;
                                                                  TaxRegNormTerm.GenerateProfile;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Storing Method;
                                                              RUS=Метод хранения];
                                                   OptionCaptionML=[ENU=" ,Calculation";
                                                                    RUS=" ,Расчет"];
                                                   OptionString=[ ,Calculation] }
    { 7   ;   ;Check               ;Boolean       ;CaptionML=[ENU=Check;
                                                              RUS=Проверка];
                                                   Editable=No }
    { 8   ;   ;Level               ;Integer       ;CaptionML=[ENU=Level;
                                                              RUS=Уровень];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Norm Jurisdiction Code,Code             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Code,Description,Has Details,Search Detail,Storing Method }
  }
  CODE
  {
    VAR
      Text1000@1003 : TextConst 'ENU=Template Lines and Accumulation Lines will be deleted.\\Continue?;RUS=Строки шаблона и строки накопления будут удалены.\\Продолжить?';

    PROCEDURE CalcDinamicNorm@1(StartDate@1000 : Date;EndDate@1001 : Date;NormJurisdictionCode@1002 : Code[10];NormCode@1003 : Code[10];SourceAmount@1004 : Decimal) ResultAmount : Decimal;
    VAR
      TaxRegNormGroup@1005 : Record 17221;
      TaxRegNormTemplateLine@1007 : Record 17239;
      TaxRegNormAccumulation@1008 : Record 17242;
      TaxRegNormDetail@1009 : Record 17222;
      TaxRegValueBuffer@1010 : TEMPORARY Record 223;
      EntryNoAmountBuffer@1011 : TEMPORARY Record 386;
      TaxRegTermMgt@1210000 : Codeunit 17200;
      TemplateRecordRef@1012 : RecordRef;
      LinkAccumulateRecordRef@1013 : RecordRef;
    BEGIN
      TaxRegNormGroup.GET(NormJurisdictionCode,NormCode);

      TaxRegNormTemplateLine.RESET;
      TaxRegNormTemplateLine.SETRANGE("Norm Jurisdiction Code",NormJurisdictionCode);
      TaxRegNormTemplateLine.SETRANGE("Norm Group Code",TaxRegNormGroup.Code);
      TaxRegNormTemplateLine.SETRANGE("Date Filter",StartDate,EndDate);

      LinkAccumulateRecordRef.OPEN(DATABASE::"Tax Reg. Norm Accumulation");

      TaxRegNormAccumulation.SETCURRENTKEY("Norm Jurisdiction Code","Norm Group Code","Template Line No.");
      TaxRegNormAccumulation.SETRANGE("Norm Jurisdiction Code",NormJurisdictionCode);
      TaxRegNormAccumulation.SETRANGE("Ending Date",EndDate);
      LinkAccumulateRecordRef.SETVIEW(TaxRegNormAccumulation.GETVIEW);
      TaxRegNormAccumulation.SETRANGE("Norm Group Code",TaxRegNormGroup.Code);

      TaxRegValueBuffer."Order No." := TaxRegNormGroup.Code;

      TaxRegNormTemplateLine.SETRANGE("Line Type",TaxRegNormTemplateLine."Line Type"::"Amount for Norm");
      TaxRegNormTemplateLine.FINDFIRST;
      TaxRegNormTemplateLine.SETFILTER("Line Code",'<>''''');
      TaxRegNormTemplateLine.SETFILTER("Line Type",'<>%1',TaxRegNormTemplateLine."Line Type"::"Norm Value");
      IF TaxRegNormTemplateLine.FIND('-') THEN
        REPEAT
          IF TaxRegNormTemplateLine."Line Type" = TaxRegNormTemplateLine."Line Type"::"Amount for Norm" THEN
            TaxRegValueBuffer.Quantity := SourceAmount
          ELSE BEGIN
            TaxRegNormAccumulation.SETRANGE("Template Line No.",TaxRegNormTemplateLine."Line No.");
            TaxRegNormAccumulation.FINDFIRST;
            TaxRegValueBuffer.Quantity := TaxRegNormAccumulation.Amount;
          END;
          TaxRegValueBuffer."Order Line No." := TaxRegNormTemplateLine."Line No.";
          TaxRegValueBuffer.INSERT;
        UNTIL TaxRegNormTemplateLine.NEXT(1) = 0;
      TaxRegNormTemplateLine.SETRANGE("Line Type");
      TaxRegNormTemplateLine.SETRANGE("Line Code");
      TemplateRecordRef.GETTABLE(TaxRegNormTemplateLine);
      TemplateRecordRef.SETVIEW(TaxRegNormTemplateLine.GETVIEW);
      TaxRegTermMgt.CalculateTemplateEntry(
        TemplateRecordRef,EntryNoAmountBuffer,LinkAccumulateRecordRef,TaxRegValueBuffer);
      EntryNoAmountBuffer.RESET;
      IF EntryNoAmountBuffer.FIND('-') THEN
        REPEAT
          TaxRegNormAccumulation.SETRANGE("Template Line No.",EntryNoAmountBuffer."Entry No.");
          TaxRegNormAccumulation.FINDFIRST;
          TaxRegNormAccumulation.Amount := EntryNoAmountBuffer.Amount;
          TaxRegNormAccumulation.MODIFY;
          TaxRegNormTemplateLine.GET(NormJurisdictionCode,NormCode,TaxRegNormAccumulation."Template Line No.");
          IF TaxRegNormTemplateLine."Line Type" = TaxRegNormTemplateLine."Line Type"::"Norm Value" THEN BEGIN
            ResultAmount := TaxRegNormAccumulation.Amount;
            TaxRegNormDetail.INIT;
            TaxRegNormDetail."Norm Jurisdiction Code" := NormJurisdictionCode;
            TaxRegNormDetail."Norm Group Code" := NormCode;
            TaxRegNormDetail."Norm Type" := TaxRegNormDetail."Norm Type"::Amount;
            TaxRegNormDetail."Effective Date" := EndDate;
            TaxRegNormDetail.Norm := ResultAmount;
            IF NOT TaxRegNormDetail.INSERT THEN
              TaxRegNormDetail.MODIFY;
          END;
        UNTIL EntryNoAmountBuffer.NEXT(1) = 0;
      TaxRegValueBuffer.RESET;
      TaxRegValueBuffer.DELETEALL;
      EntryNoAmountBuffer.DELETEALL;
    END;

    BEGIN
    END.
  }
}

