OBJECT Page 6084 Service Line Price Adjmt.
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Service Line Price Adjmt.;
               RUS=Коррекция цены в сервисной строке];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table6084;
    DataCaptionFields=Document Type,Document No.;
    PageType=Worksheet;
    OnOpenPage=BEGIN
                 OKPressed := FALSE;
               END;

    OnAfterGetRecord=BEGIN
                       UpdateAmounts;
                     END;

    OnQueryClosePage=BEGIN
                       IF CloseAction IN [ACTION::OK,ACTION::LookupOK] THEN
                         OKOnPush;
                       IF NOT OKPressed THEN
                         IF NOT CONFIRM(Text001,FALSE) THEN
                           EXIT(FALSE);
                       EXIT(TRUE);
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 38      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 RUS=Ф&ункции];
                      Image=Action }
      { 39      ;2   ;Action    ;
                      CaptionML=[ENU=Adjust Service Price;
                                 RUS=Корректировать цену на серв. обслуживание];
                      Image=PriceAdjustment;
                      OnAction=VAR
                                 ServHeader@1000 : Record 5900;
                                 ServPriceGrSetup@1001 : Record 6081;
                                 ServInvLinePriceAdjmt@1003 : Record 6084;
                                 ServPriceMgmt@1002 : Codeunit 6080;
                               BEGIN
                                 ServHeader.GET("Document Type","Document No.");
                                 ServItemLine.GET("Document Type","Document No.","Service Item Line No.");
                                 ServPriceMgmt.GetServPriceGrSetup(ServPriceGrSetup,ServHeader,ServItemLine);
                                 ServInvLinePriceAdjmt := Rec;
                                 ServPriceMgmt.AdjustLines(ServInvLinePriceAdjmt,ServPriceGrSetup);
                                 UpdateAmounts;
                                 CurrPage.UPDATE;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 20  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           RUS=Общее] }

    { 49  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the service item that is registered in the Service Item table.;
                           RUS=Определяет номер сервисного товара, зарегистрированного в таблице "Сервисный товар".];
                SourceExpr="Service Item No.";
                Editable=FALSE }

    { 51  ;2   ;Field     ;
                CaptionML=[ENU=Description;
                           RUS=Описание];
                ToolTipML=[ENU=Specifies the description of the service item for which the price is going to be adjusted.;
                           RUS=Определяет описание сервисного товара, цена которого подлежит корректировке.];
                SourceExpr=ServItemLine.Description;
                Editable=FALSE }

    { 53  ;2   ;Field     ;
                CaptionML=[ENU=Service Price Group Code;
                           RUS=Код ценовой группы сервиса];
                ToolTipML=[ENU=Specifies the code of the service price adjustment group associated with the service item on this line.;
                           RUS=Определяет код группы коррекции цен на сервис, связанной с сервисным товаром в этой строке.];
                SourceExpr="Service Price Group Code";
                Editable=FALSE }

    { 55  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the service price adjustment group that applies to the posted service line.;
                           RUS=Определяет код группы коррекции сервисной цены, который применяется к учтенной сервисной строке.];
                SourceExpr="Serv. Price Adjmt. Gr. Code";
                Editable=FALSE }

    { 57  ;2   ;Field     ;
                CaptionML=[ENU=Adjustment Type;
                           RUS=Тип коррекции];
                ToolTipML=[ENU=Specifies the adjustment type for this line.;
                           RUS=Определяет тип корректировки этой строки.];
                SourceExpr="Adjustment Type";
                Editable=FALSE }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of this line, which can be item, resource, cost, or general ledger Account.;
                           RUS=Определяет тип этой строки, который может иметь значение "Товар", "Ресурс", "Себестоимость" или "Счет главной книги".];
                SourceExpr=Type }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the service item, resource, or service cost specified in the Type field.;
                           RUS=Определяет номер сервисного товара, ресурс или себестоимость сервиса в зависимости от информации, указанной в поле "Тип".];
                SourceExpr="No." }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the service item, resource, or service cost, of which the price is going to be adjusted.;
                           RUS=Определяет сервисный товар, ресурс или себестоимость сервиса, цена для которых подлежит корректировке.];
                SourceExpr=Description }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the value of the service line that will be adjusted.;
                           RUS=Определяет значение сервисной строки, которое будет скорректировано.];
                SourceExpr=Quantity }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the unit price of the item, resource, or cost on the service line.;
                           RUS=Определяет цену единицы товара, ресурса или себестоимости в сервисной строке.];
                SourceExpr="Unit Price" }

    { 30  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the unit price of the item, resource, or cost specified on the service line.;
                           RUS=Определяет цену единицы товара, ресурса или себестоимости, указанную в сервисной строке.];
                SourceExpr="New Unit Price";
                OnValidate=BEGIN
                             NewUnitPriceOnAfterValidate;
                           END;
                            }

    { 9   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the discount percentage you want to provide on the amount on the corresponding service line.;
                           RUS=Определяет процент скидки, предоставляемой для суммы в соответствующей сервисной строке.];
                SourceExpr="Discount %" }

    { 32  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the discount you want to provide on the amount on this service line.;
                           RUS=Определяет скидку, предоставляемую для суммы в этой сервисной строке.];
                SourceExpr="Discount Amount" }

    { 24  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the total net amount on the service line.;
                           RUS=Определяет общую чистую сумму сервисной строки.];
                SourceExpr=Amount }

    { 26  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount to invoice.;
                           RUS=Определяет сумму счета.];
                SourceExpr="New Amount";
                OnValidate=BEGIN
                             NewAmountOnAfterValidate;
                           END;
                            }

    { 34  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the total amount that the service line is going to be adjusted, including VAT.;
                           RUS=Определяет общую сумму, на которую должна быть скорректирована сервисная строка, включая НДС.];
                SourceExpr="Amount incl. VAT" }

    { 36  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a new amount, including VAT.;
                           RUS=Определяет новую сумму с учетом НДС.];
                SourceExpr="New Amount incl. VAT";
                OnValidate=BEGIN
                             NewAmountinclVATOnAfterValidat;
                           END;
                            }

    { 2   ;1   ;Group      }

    { 1900116601;2;Group  ;
                GroupType=FixedLayout }

    { 1900295901;3;Group  ;
                CaptionML=[ENU=Total;
                           RUS=Всего] }

    { 5   ;4   ;Field     ;
                CaptionML=[ENU=Amount;
                           RUS=Сумма];
                ToolTipML=[ENU=Specifies the total amount that the service lines will be adjusted to.;
                           RUS=Определяет общую сумму, по отношению к которой будут скорректированы сервисные строки.];
                SourceExpr=TotalAmount;
                Editable=FALSE }

    { 1900725601;3;Group  ;
                CaptionML=[ENU=To Adjust;
                           RUS=Для коррекции] }

    { 7   ;4   ;Field     ;
                CaptionML=[ENU=To Adjust;
                           RUS=Для коррекции];
                ToolTipML=[ENU=Specifies the total value of the service lines that need to be adjusted.;
                           RUS=Определяет общую сумму сервисных строк, подлежащих корректировке.];
                SourceExpr=AmountToAdjust;
                Editable=FALSE }

    { 1900724401;3;Group  ;
                CaptionML=[ENU=Remaining;
                           RUS=Остаток] }

    { 3   ;4   ;Field     ;
                CaptionML=[ENU=Remaining;
                           RUS=Остаток];
                ToolTipML=[ENU=Specifies the difference between the total amount that the service lines will be adjusted to, and actual total value of the service lines.;
                           RUS=Определяет разницу между общей суммой, по отношению к которой будут скорректированы сервисные строки, и фактической общей суммой по сервисным строкам.];
                SourceExpr=Remaining;
                Editable=FALSE }

    { 1900206001;3;Group  ;
                CaptionML=[ENU=Incl. VAT;
                           RUS=с учетом НДС] }

    { 42  ;4   ;Field     ;
                CaptionML=[ENU=Incl. VAT;
                           RUS=с учетом НДС];
                ToolTipML=[ENU=Specifies that the amount of the service lines includes VAT.;
                           RUS=Указывает, что сумма по сервисным строкам включает НДС.];
                SourceExpr=InclVat;
                Editable=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ServItemLine@1000 : Record 5901;
      ServInvLinePriceAdjmt@1004 : Record 6084;
      TotalAmount@1001 : Decimal;
      AmountToAdjust@1002 : Decimal;
      Remaining@1003 : Decimal;
      InclVat@1005 : Boolean;
      OKPressed@1006 : Boolean;
      Text001@1007 : TextConst 'ENU=Cancel price adjustment?;RUS=Отменить коррекцию цен?';

    PROCEDURE SetVars@1(SetTotalAmount@1000 : Decimal;SetInclVat@1001 : Boolean);
    BEGIN
      TotalAmount := SetTotalAmount;
      InclVat := SetInclVat;
    END;

    PROCEDURE UpdateAmounts@3();
    BEGIN
      IF NOT ServItemLine.GET("Document Type","Document No.","Service Item Line No.") THEN
        CLEAR(ServItemLine);
      ServInvLinePriceAdjmt := Rec;
      ServInvLinePriceAdjmt.RESET;
      ServInvLinePriceAdjmt.SETRANGE("Document Type","Document Type");
      ServInvLinePriceAdjmt.SETRANGE("Document No.","Document No.");
      ServInvLinePriceAdjmt.SETRANGE("Service Item Line No.","Service Item Line No.");
      ServInvLinePriceAdjmt.CALCSUMS("New Amount","New Amount incl. VAT","New Amount Excl. VAT");
      IF InclVat THEN BEGIN
        AmountToAdjust := ServInvLinePriceAdjmt."New Amount incl. VAT";
        Remaining := TotalAmount - ServInvLinePriceAdjmt."New Amount incl. VAT";
      END ELSE BEGIN
        AmountToAdjust := ServInvLinePriceAdjmt."New Amount Excl. VAT";
        Remaining := TotalAmount - ServInvLinePriceAdjmt."New Amount Excl. VAT";
      END;
    END;

    LOCAL PROCEDURE NewUnitPriceOnAfterValidate@19017697();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE NewAmountOnAfterValidate@19019893();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE NewAmountinclVATOnAfterValidat@19061003();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE OKOnPush@19066895();
    BEGIN
      OKPressed := TRUE;
    END;

    BEGIN
    END.
  }
}

