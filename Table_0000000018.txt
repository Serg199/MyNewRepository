OBJECT Table 18 Customer
{
  OBJECT-PROPERTIES
  {
    Date=11.07.17;
    Time=12:44:01;
    Modified=Yes;
    Version List=NAVW110.00.00.15052,NAVRU10.00.00.15052,NOS-26;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    Permissions=TableData 21=r,
                TableData 23=rimd,
                TableData 167=r,
                TableData 249=rd,
                TableData 5900=r,
                TableData 5940=rm,
                TableData 5965=rm,
                TableData 7002=rd,
                TableData 7004=rd,
                TableData 50016=rimd;
    DataCaptionFields=No.,Name;
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 SalesSetup.GET;
                 SalesSetup.TESTFIELD("Customer Nos.");
                 NoSeriesMgt.InitSeries(SalesSetup."Customer Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;
               "Agreement Nos." := SalesSetup."Customer Agreement Nos.";

               IF "Invoice Disc. Code" = '' THEN
                 "Invoice Disc. Code" := "No.";

               IF NOT (InsertFromContact OR (InsertFromTemplate AND (Contact <> ''))) THEN
                 UpdateContFromCust.OnInsert(Rec);

               DimMgt.UpdateDefaultDim(
                 DATABASE::Customer,"No.",
                 "Global Dimension 1 Code","Global Dimension 2 Code");

               //NC NOS-26 SPA Кастомизация теперь находится в CU 50085 в коде события OnAfterInsertEvent
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;

               IF (Name <> xRec.Name) OR
                  ("Search Name" <> xRec."Search Name") OR
                  ("Name 2" <> xRec."Name 2") OR
                  (Address <> xRec.Address) OR
                  ("Address 2" <> xRec."Address 2") OR
                  (City <> xRec.City) OR
                  ("Phone No." <> xRec."Phone No.") OR
                  ("Telex No." <> xRec."Telex No.") OR
                  ("Territory Code" <> xRec."Territory Code") OR
                  ("Currency Code" <> xRec."Currency Code") OR
                  ("Language Code" <> xRec."Language Code") OR
                  ("Salesperson Code" <> xRec."Salesperson Code") OR
                  ("Country/Region Code" <> xRec."Country/Region Code") OR
                  ("Fax No." <> xRec."Fax No.") OR
                  ("Telex Answer Back" <> xRec."Telex Answer Back") OR
                  ("VAT Registration No." <> xRec."VAT Registration No.") OR
                  ("Post Code" <> xRec."Post Code") OR
                  (County <> xRec.County) OR
                  ("E-Mail" <> xRec."E-Mail") OR
                  ("Home Page" <> xRec."Home Page") OR
                  (Contact <> xRec.Contact)
               THEN BEGIN
                 MODIFY;
                 UpdateContFromCust.OnModify(Rec);
                 IF NOT FIND THEN BEGIN
                   RESET;
                   IF FIND THEN;
                 END;
               END;

               //NC NOS-26 SPA Кастомизация теперь находится в CU 50085 в коде события OnAfterModifyEvent
             END;

    OnDelete=VAR
               CampaignTargetGr@1000 : Record 7030;
               ContactBusRel@1001 : Record 5054;
               Job@1004 : Record 167;
               SocialListeningSearchTopic@1007 : Record 871;
               StdCustSalesCode@1003 : Record 172;
               CustomReportSelection@1008 : Record 9657;
               MyCustomer@1005 : Record 9150;
               ServHeader@1009 : Record 5900;
               CampaignTargetGrMgmt@1002 : Codeunit 7030;
               VATRegistrationLogMgt@1006 : Codeunit 249;
             BEGIN
               ApprovalsMgmt.OnCancelCustomerApprovalRequest(Rec);

               ServiceItem.SETRANGE("Customer No.","No.");
               IF ServiceItem.FINDFIRST THEN
                 IF CONFIRM(
                      Text008,
                      FALSE,
                      TABLECAPTION,
                      "No.",
                      ServiceItem.FIELDCAPTION("Customer No."))
                 THEN
                   ServiceItem.MODIFYALL("Customer No.",'')
                 ELSE
                   ERROR(Text009);

               Job.SETRANGE("Bill-to Customer No.","No.");
               IF NOT Job.ISEMPTY THEN
                 ERROR(Text015,TABLECAPTION,"No.",Job.TABLECAPTION);

               MoveEntries.MoveCustEntries(Rec);

               CommentLine.SETRANGE("Table Name",CommentLine."Table Name"::Customer);
               CommentLine.SETRANGE("No.","No.");
               CommentLine.DELETEALL;

               CustBankAcc.SETRANGE("Customer No.","No.");
               CustBankAcc.DELETEALL;

               CustAgrmt.SETRANGE("Customer No.","No.");
               CustAgrmt.DELETEALL(TRUE);

               ShipToAddr.SETRANGE("Customer No.","No.");
               ShipToAddr.DELETEALL;

               SalesPrice.SETRANGE("Sales Type",SalesPrice."Sales Type"::Customer);
               SalesPrice.SETRANGE("Sales Code","No.");
               SalesPrice.DELETEALL;

               SalesLineDisc.SETRANGE("Sales Type",SalesLineDisc."Sales Type"::Customer);
               SalesLineDisc.SETRANGE("Sales Code","No.");
               SalesLineDisc.DELETEALL;

               SalesPrepmtPct.SETCURRENTKEY("Sales Type","Sales Code");
               SalesPrepmtPct.SETRANGE("Sales Type",SalesPrepmtPct."Sales Type"::Customer);
               SalesPrepmtPct.SETRANGE("Sales Code","No.");
               SalesPrepmtPct.DELETEALL;

               StdCustSalesCode.SETRANGE("Customer No.","No.");
               StdCustSalesCode.DELETEALL(TRUE);

               ItemCrossReference.SETCURRENTKEY("Cross-Reference Type","Cross-Reference Type No.");
               ItemCrossReference.SETRANGE("Cross-Reference Type",ItemCrossReference."Cross-Reference Type"::Customer);
               ItemCrossReference.SETRANGE("Cross-Reference Type No.","No.");
               ItemCrossReference.DELETEALL;

               IF NOT SocialListeningSearchTopic.ISEMPTY THEN BEGIN
                 SocialListeningSearchTopic.FindSearchTopic(SocialListeningSearchTopic."Source Type"::Customer,"No.");
                 SocialListeningSearchTopic.DELETEALL;
               END;

               SalesOrderLine.SETCURRENTKEY("Document Type","Bill-to Customer No.");
               SalesOrderLine.SETFILTER(
                 "Document Type",'%1|%2',
                 SalesOrderLine."Document Type"::Order,
                 SalesOrderLine."Document Type"::"Return Order");
               SalesOrderLine.SETRANGE("Bill-to Customer No.","No.");
               IF SalesOrderLine.FINDFIRST THEN
                 ERROR(
                   Text000,
                   TABLECAPTION,"No.",SalesOrderLine."Document Type");

               SalesOrderLine.SETRANGE("Bill-to Customer No.");
               SalesOrderLine.SETRANGE("Sell-to Customer No.","No.");
               IF SalesOrderLine.FINDFIRST THEN
                 ERROR(
                   Text000,
                   TABLECAPTION,"No.",SalesOrderLine."Document Type");

               CampaignTargetGr.SETRANGE("No.","No.");
               CampaignTargetGr.SETRANGE(Type,CampaignTargetGr.Type::Customer);
               IF CampaignTargetGr.FIND('-') THEN BEGIN
                 ContactBusRel.SETRANGE("Link to Table",ContactBusRel."Link to Table"::Customer);
                 ContactBusRel.SETRANGE("No.","No.");
                 ContactBusRel.FINDFIRST;
                 REPEAT
                   CampaignTargetGrMgmt.ConverttoContact(Rec,ContactBusRel."Contact No.");
                 UNTIL CampaignTargetGr.NEXT = 0;
               END;

               ServContract.SETFILTER(Status,'<>%1',ServContract.Status::Canceled);
               ServContract.SETRANGE("Customer No.","No.");
               IF NOT ServContract.ISEMPTY THEN
                 ERROR(
                   Text007,
                   TABLECAPTION,"No.");

               ServContract.SETRANGE(Status);
               ServContract.MODIFYALL("Customer No.",'');

               ServContract.SETFILTER(Status,'<>%1',ServContract.Status::Canceled);
               ServContract.SETRANGE("Bill-to Customer No.","No.");
               IF NOT ServContract.ISEMPTY THEN
                 ERROR(
                   Text007,
                   TABLECAPTION,"No.");

               ServContract.SETRANGE(Status);
               ServContract.MODIFYALL("Bill-to Customer No.",'');

               ServHeader.SETCURRENTKEY("Customer No.","Order Date");
               ServHeader.SETRANGE("Customer No.","No.");
               IF ServHeader.FINDFIRST THEN
                 ERROR(
                   Text013,
                   TABLECAPTION,"No.",ServHeader."Document Type");

               ServHeader.SETRANGE("Bill-to Customer No.");
               IF ServHeader.FINDFIRST THEN
                 ERROR(
                   Text013,
                   TABLECAPTION,"No.",ServHeader."Document Type");

               UpdateContFromCust.OnDelete(Rec);

               CustomReportSelection.SETRANGE("Source Type",DATABASE::Customer);
               CustomReportSelection.SETRANGE("Source No.","No.");
               CustomReportSelection.DELETEALL;

               MyCustomer.SETRANGE("Customer No.","No.");
               MyCustomer.DELETEALL;
               VATRegistrationLogMgt.DeleteCustomerLog(Rec);

               DimMgt.DeleteDefaultDim(DATABASE::Customer,"No.");

               //NC NOS-26 SPA Кастомизация теперь находится в CU 50085 в коде события OnAfterDeleteEvent
             END;

    OnRename=BEGIN
               ApprovalsMgmt.RenameApprovalEntries(xRec.RECORDID,RECORDID);
               "Last Date Modified" := TODAY;

               //NC NOS-26 SPA Кастомизация теперь находится в CU 50085 в коде события OnAfterRenameEvent
             END;

    CaptionML=[ENU=Customer;
               RUS=Клиент];
    LookupPageID=Page22;
    DrillDownPageID=Page22;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  SalesSetup.GET;
                                                                  NoSeriesMgt.TestManual(SalesSetup."Customer Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                                IF "Invoice Disc. Code" = '' THEN
                                                                  "Invoice Disc. Code" := "No.";
                                                              END;

                                                   AltSearchField=Search Name;
                                                   CaptionML=[ENU=No.;
                                                              RUS=Код] }
    { 2   ;   ;Name                ;Text50        ;OnValidate=BEGIN
                                                                IF ("Search Name" = UPPERCASE(xRec.Name)) OR ("Search Name" = '') THEN
                                                                  "Search Name" := Name;
                                                              END;

                                                   CaptionML=[ENU=Name;
                                                              RUS=Название] }
    { 3   ;   ;Search Name         ;Code50        ;CaptionML=[ENU=Search Name;
                                                              RUS=Имя поиска] }
    { 4   ;   ;Name 2              ;Text50        ;CaptionML=[ENU=Name 2;
                                                              RUS=Название 2] }
    { 5   ;   ;Address             ;Text50        ;CaptionML=[ENU=Address;
                                                              RUS=Адрес] }
    { 6   ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              RUS=Адрес 2] }
    { 7   ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=City;
                                                              RUS=Город] }
    { 8   ;   ;Contact             ;Text50        ;OnValidate=BEGIN
                                                                IF RMSetup.GET THEN
                                                                  IF RMSetup."Bus. Rel. Code for Customers" <> '' THEN
                                                                    IF (xRec.Contact = '') AND (xRec."Primary Contact No." = '') AND (Contact <> '') THEN BEGIN
                                                                      MODIFY;
                                                                      UpdateContFromCust.OnModify(Rec);
                                                                      UpdateContFromCust.InsertNewContactPerson(Rec,FALSE);
                                                                      MODIFY(TRUE);
                                                                    END
                                                              END;

                                                   OnLookup=VAR
                                                              ContactBusinessRelation@1001 : Record 5054;
                                                              Cont@1000 : Record 5050;
                                                            BEGIN
                                                              ContactBusinessRelation.SETCURRENTKEY("Link to Table","No.");
                                                              ContactBusinessRelation.SETRANGE("Link to Table",ContactBusinessRelation."Link to Table"::Customer);
                                                              ContactBusinessRelation.SETRANGE("No.","No.");
                                                              IF ContactBusinessRelation.FINDFIRST THEN
                                                                Cont.SETRANGE("Company No.",ContactBusinessRelation."Contact No.")
                                                              ELSE
                                                                Cont.SETRANGE("Company No.",'');

                                                              IF "Primary Contact No." <> '' THEN
                                                                IF Cont.GET("Primary Contact No.") THEN ;
                                                              IF PAGE.RUNMODAL(0,Cont) = ACTION::LookupOK THEN
                                                                VALIDATE("Primary Contact No.",Cont."No.");
                                                            END;

                                                   CaptionML=[ENU=Contact;
                                                              RUS=Контакт] }
    { 9   ;   ;Phone No.           ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No.;
                                                              RUS=Телефон] }
    { 10  ;   ;Telex No.           ;Text20        ;CaptionML=[ENU=Telex No.;
                                                              RUS=Телекс] }
    { 11  ;   ;Document Sending Profile;Code20    ;TableRelation="Document Sending Profile".Code;
                                                   CaptionML=[ENU=Document Sending Profile;
                                                              RUS=Профиль отправки документов] }
    { 14  ;   ;Our Account No.     ;Text20        ;CaptionML=[ENU=Our Account No.;
                                                              RUS=Номер нашего счета] }
    { 15  ;   ;Territory Code      ;Code10        ;TableRelation=Territory;
                                                   CaptionML=[ENU=Territory Code;
                                                              RUS=Код территории] }
    { 16  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Global Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              RUS=Код глобального измерения 1];
                                                   CaptionClass='1,1,1' }
    { 17  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Global Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              RUS=Код глобального измерения 2];
                                                   CaptionClass='1,1,2' }
    { 18  ;   ;Chain Name          ;Code10        ;CaptionML=[ENU=Chain Name;
                                                              RUS=Название сети] }
    { 19  ;   ;Budgeted Amount     ;Decimal       ;CaptionML=[ENU=Budgeted Amount;
                                                              RUS=Сумма бюджета];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 20  ;   ;Credit Limit (LCY)  ;Decimal       ;CaptionML=[ENU=Credit Limit (LCY);
                                                              RUS=Кредитный лимит (руб.)];
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,18,20' }
    { 21  ;   ;Customer Posting Group;Code10      ;TableRelation="Customer Posting Group";
                                                   CaptionML=[ENU=Customer Posting Group;
                                                              RUS=Учетная группа клиента] }
    { 22  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              RUS=Код валюты] }
    { 23  ;   ;Customer Price Group;Code10        ;TableRelation="Customer Price Group";
                                                   CaptionML=[ENU=Customer Price Group;
                                                              RUS=Ценовая группа клиента] }
    { 24  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=[ENU=Language Code;
                                                              RUS=Код языка] }
    { 26  ;   ;Statistics Group    ;Integer       ;CaptionML=[ENU=Statistics Group;
                                                              RUS=Статистическая группа] }
    { 27  ;   ;Payment Terms Code  ;Code10        ;TableRelation="Payment Terms";
                                                   CaptionML=[ENU=Payment Terms Code;
                                                              RUS=Код условий платежа] }
    { 28  ;   ;Fin. Charge Terms Code;Code10      ;TableRelation="Finance Charge Terms";
                                                   CaptionML=[ENU=Fin. Charge Terms Code;
                                                              RUS=Код процентной ставки] }
    { 29  ;   ;Salesperson Code    ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=[ENU=Salesperson Code;
                                                              RUS=Код менеджера по продажам] }
    { 30  ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   CaptionML=[ENU=Shipment Method Code;
                                                              RUS=Код метода отгрузки] }
    { 31  ;   ;Shipping Agent Code ;Code10        ;TableRelation="Shipping Agent";
                                                   OnValidate=BEGIN
                                                                IF "Shipping Agent Code" <> xRec."Shipping Agent Code" THEN
                                                                  VALIDATE("Shipping Agent Service Code",'');
                                                              END;

                                                   AccessByPermission=TableData 5790=R;
                                                   CaptionML=[ENU=Shipping Agent Code;
                                                              RUS=Код экспедитора] }
    { 32  ;   ;Place of Export     ;Code20        ;CaptionML=[ENU=Place of Export;
                                                              RUS=Место экспорта] }
    { 33  ;   ;Invoice Disc. Code  ;Code20        ;TableRelation=Customer;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Invoice Disc. Code;
                                                              RUS=Код скидки по счету] }
    { 34  ;   ;Customer Disc. Group;Code20        ;TableRelation="Customer Discount Group";
                                                   CaptionML=[ENU=Customer Disc. Group;
                                                              RUS=Группа скидки клиента] }
    { 35  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              RUS=Код страны/региона] }
    { 36  ;   ;Collection Method   ;Code20        ;CaptionML=[ENU=Collection Method;
                                                              RUS=Метод сбора] }
    { 37  ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              RUS=Сумма];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 38  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Comment Line" WHERE (Table Name=CONST(Customer),
                                                                                           No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              RUS=Комментарий];
                                                   Editable=No }
    { 39  ;   ;Blocked             ;Option        ;CaptionML=[ENU=Blocked;
                                                              RUS=Заблокировано];
                                                   OptionCaptionML=[ENU=" ,Ship,Invoice,All";
                                                                    RUS=" ,Поставка,Счет,Все"];
                                                   OptionString=[ ,Ship,Invoice,All] }
    { 40  ;   ;Invoice Copies      ;Integer       ;CaptionML=[ENU=Invoice Copies;
                                                              RUS=Кол-во копий счета] }
    { 41  ;   ;Last Statement No.  ;Integer       ;CaptionML=[ENU=Last Statement No.;
                                                              RUS=Номер посл. выписки] }
    { 42  ;   ;Print Statements    ;Boolean       ;CaptionML=[ENU=Print Statements;
                                                              RUS=Печатать выписки] }
    { 45  ;   ;Bill-to Customer No.;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Bill-to Customer No.;
                                                              RUS=Код плательщика] }
    { 46  ;   ;Priority            ;Integer       ;CaptionML=[ENU=Priority;
                                                              RUS=Приоритет] }
    { 47  ;   ;Payment Method Code ;Code10        ;TableRelation="Payment Method";
                                                   OnValidate=VAR
                                                                PaymentMethod@1000 : Record 289;
                                                              BEGIN
                                                                IF "Payment Method Code" = '' THEN
                                                                  EXIT;
                                                                PaymentMethod.GET("Payment Method Code");
                                                                IF PaymentMethod."Direct Debit" AND ("Payment Terms Code" = '') THEN
                                                                  "Payment Terms Code" := PaymentMethod."Direct Debit Pmt. Terms Code";
                                                              END;

                                                   CaptionML=[ENU=Payment Method Code;
                                                              RUS=Код способа оплаты] }
    { 54  ;   ;Last Date Modified  ;Date          ;CaptionML=[ENU=Last Date Modified;
                                                              RUS=Дата последнего изменения];
                                                   Editable=No }
    { 55  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              RUS=Фильтр по дате] }
    { 56  ;   ;Global Dimension 1 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Filter;
                                                              RUS=Фильтр глобального измерения 1];
                                                   CaptionClass='1,3,1' }
    { 57  ;   ;Global Dimension 2 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Filter;
                                                              RUS=Фильтр глобального измерения 2];
                                                   CaptionClass='1,3,2' }
    { 58  ;   ;Balance             ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Customer No.=FIELD(No.),
                                                                                                              Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                              Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                              Currency Code=FIELD(Currency Filter),
                                                                                                              Agreement No.=FIELD(Agreement Filter),
                                                                                                              Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Balance;
                                                              RUS=Сальдо];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 59  ;   ;Balance (LCY)       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Customer No.=FIELD(No.),
                                                                                                                      Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                      Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                      Currency Code=FIELD(Currency Filter),
                                                                                                                      Agreement No.=FIELD(Agreement Filter),
                                                                                                                      Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Balance (LCY);
                                                              RUS=Баланс (руб.)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,18,59' }
    { 60  ;   ;Net Change          ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Customer No.=FIELD(No.),
                                                                                                              Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                              Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                              Posting Date=FIELD(Date Filter),
                                                                                                              Currency Code=FIELD(Currency Filter),
                                                                                                              Agreement No.=FIELD(Agreement Filter),
                                                                                                              Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Net Change;
                                                              RUS=Оборот];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 61  ;   ;Net Change (LCY)    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Customer No.=FIELD(No.),
                                                                                                                      Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                      Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                      Posting Date=FIELD(Date Filter),
                                                                                                                      Currency Code=FIELD(Currency Filter),
                                                                                                                      Agreement No.=FIELD(Agreement Filter),
                                                                                                                      Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Net Change (LCY);
                                                              RUS=Оборот (руб.)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,18,61' }
    { 62  ;   ;Sales (LCY)         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Cust. Ledger Entry"."Sales (LCY)" WHERE (Customer No.=FIELD(No.),
                                                                                                             Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                             Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                             Posting Date=FIELD(Date Filter),
                                                                                                             Currency Code=FIELD(Currency Filter),
                                                                                                             Agreement No.=FIELD(Agreement Filter)));
                                                   CaptionML=[ENU=Sales (LCY);
                                                              RUS=Продажи (руб.)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,18,62' }
    { 63  ;   ;Profit (LCY)        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Cust. Ledger Entry"."Profit (LCY)" WHERE (Customer No.=FIELD(No.),
                                                                                                              Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                              Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                              Posting Date=FIELD(Date Filter),
                                                                                                              Currency Code=FIELD(Currency Filter),
                                                                                                              Agreement No.=FIELD(Agreement Filter)));
                                                   CaptionML=[ENU=Profit (LCY);
                                                              RUS=Прибыль (руб.)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,18,63' }
    { 64  ;   ;Inv. Discounts (LCY);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Cust. Ledger Entry"."Inv. Discount (LCY)" WHERE (Customer No.=FIELD(No.),
                                                                                                                     Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                     Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                     Posting Date=FIELD(Date Filter),
                                                                                                                     Currency Code=FIELD(Currency Filter),
                                                                                                                     Agreement No.=FIELD(Agreement Filter)));
                                                   CaptionML=[ENU=Inv. Discounts (LCY);
                                                              RUS=Скидки по счету (руб.)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,18,64' }
    { 65  ;   ;Pmt. Discounts (LCY);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Customer No.=FIELD(No.),
                                                                                                                       Entry Type=FILTER(Payment Discount..'Payment Discount (VAT Adjustment)'),
                                                                                                                       Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                       Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                       Posting Date=FIELD(Date Filter),
                                                                                                                       Currency Code=FIELD(Currency Filter),
                                                                                                                       Agreement No.=FIELD(Agreement Filter)));
                                                   CaptionML=[ENU=Pmt. Discounts (LCY);
                                                              RUS=Скидки оплаты (руб.)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,18,65' }
    { 66  ;   ;Balance Due         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Customer No.=FIELD(No.),
                                                                                                              Posting Date=FIELD(UPPERLIMIT(Date Filter)),
                                                                                                              Initial Entry Due Date=FIELD(Date Filter),
                                                                                                              Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                              Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                              Currency Code=FIELD(Currency Filter),
                                                                                                              Agreement No.=FIELD(Agreement Filter),
                                                                                                              Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Balance Due;
                                                              RUS=Сумма задолженности];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 67  ;   ;Balance Due (LCY)   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Customer No.=FIELD(No.),
                                                                                                                      Posting Date=FIELD(UPPERLIMIT(Date Filter)),
                                                                                                                      Initial Entry Due Date=FIELD(Date Filter),
                                                                                                                      Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                      Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                      Currency Code=FIELD(Currency Filter),
                                                                                                                      Agreement No.=FIELD(Agreement Filter),
                                                                                                                      Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Balance Due (LCY);
                                                              RUS=Сумма задолженности (руб.)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,18,67' }
    { 69  ;   ;Payments            ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Initial Document Type=CONST(Payment),
                                                                                                               Entry Type=CONST(Initial Entry),
                                                                                                               Customer No.=FIELD(No.),
                                                                                                               Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                               Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                               Posting Date=FIELD(Date Filter),
                                                                                                               Currency Code=FIELD(Currency Filter),
                                                                                                               Agreement No.=FIELD(Agreement Filter)));
                                                   CaptionML=[ENU=Payments;
                                                              RUS=Платежи];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 70  ;   ;Invoice Amounts     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Initial Document Type=CONST(Invoice),
                                                                                                              Entry Type=CONST(Initial Entry),
                                                                                                              Customer No.=FIELD(No.),
                                                                                                              Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                              Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                              Posting Date=FIELD(Date Filter),
                                                                                                              Currency Code=FIELD(Currency Filter),
                                                                                                              Agreement No.=FIELD(Agreement Filter)));
                                                   CaptionML=[ENU=Invoice Amounts;
                                                              RUS=Суммы счетов];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 71  ;   ;Cr. Memo Amounts    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Initial Document Type=CONST(Credit Memo),
                                                                                                               Entry Type=CONST(Initial Entry),
                                                                                                               Customer No.=FIELD(No.),
                                                                                                               Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                               Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                               Posting Date=FIELD(Date Filter),
                                                                                                               Currency Code=FIELD(Currency Filter),
                                                                                                               Agreement No.=FIELD(Agreement Filter)));
                                                   CaptionML=[ENU=Cr. Memo Amounts;
                                                              RUS=Суммы кредит-нот];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 72  ;   ;Finance Charge Memo Amounts;Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Initial Document Type=CONST(Finance Charge Memo),
                                                                                                              Entry Type=CONST(Initial Entry),
                                                                                                              Customer No.=FIELD(No.),
                                                                                                              Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                              Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                              Posting Date=FIELD(Date Filter),
                                                                                                              Currency Code=FIELD(Currency Filter),
                                                                                                              Agreement No.=FIELD(Agreement Filter)));
                                                   CaptionML=[ENU=Finance Charge Memo Amounts;
                                                              RUS=Суммы процент-нот];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 74  ;   ;Payments (LCY)      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Initial Document Type=CONST(Payment),
                                                                                                                       Entry Type=CONST(Initial Entry),
                                                                                                                       Customer No.=FIELD(No.),
                                                                                                                       Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                       Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                       Posting Date=FIELD(Date Filter),
                                                                                                                       Currency Code=FIELD(Currency Filter),
                                                                                                                       Agreement No.=FIELD(Agreement Filter)));
                                                   CaptionML=[ENU=Payments (LCY);
                                                              RUS=Платежи (руб.)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,18,74' }
    { 75  ;   ;Inv. Amounts (LCY)  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Initial Document Type=CONST(Invoice),
                                                                                                                      Entry Type=CONST(Initial Entry),
                                                                                                                      Customer No.=FIELD(No.),
                                                                                                                      Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                      Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                      Posting Date=FIELD(Date Filter),
                                                                                                                      Currency Code=FIELD(Currency Filter),
                                                                                                                      Agreement No.=FIELD(Agreement Filter)));
                                                   CaptionML=[ENU=Inv. Amounts (LCY);
                                                              RUS=Суммы счетов (руб.)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,18,75' }
    { 76  ;   ;Cr. Memo Amounts (LCY);Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Initial Document Type=CONST(Credit Memo),
                                                                                                                       Entry Type=CONST(Initial Entry),
                                                                                                                       Customer No.=FIELD(No.),
                                                                                                                       Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                       Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                       Posting Date=FIELD(Date Filter),
                                                                                                                       Currency Code=FIELD(Currency Filter),
                                                                                                                       Agreement No.=FIELD(Agreement Filter)));
                                                   CaptionML=[ENU=Cr. Memo Amounts (LCY);
                                                              RUS=Суммы кредит-нот (руб.)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,18,76' }
    { 77  ;   ;Fin. Charge Memo Amounts (LCY);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Initial Document Type=CONST(Finance Charge Memo),
                                                                                                                      Entry Type=CONST(Initial Entry),
                                                                                                                      Customer No.=FIELD(No.),
                                                                                                                      Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                      Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                      Posting Date=FIELD(Date Filter),
                                                                                                                      Currency Code=FIELD(Currency Filter),
                                                                                                                      Agreement No.=FIELD(Agreement Filter)));
                                                   CaptionML=[ENU=Fin. Charge Memo Amounts (LCY);
                                                              RUS=Суммы процент-нот (руб.)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,18,77' }
    { 78  ;   ;Outstanding Orders  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Line"."Outstanding Amount" WHERE (Document Type=CONST(Order),
                                                                                                            Bill-to Customer No.=FIELD(No.),
                                                                                                            Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                            Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                            Currency Code=FIELD(Currency Filter),
                                                                                                            Agreement No.=FIELD(Agreement Filter)));
                                                   AccessByPermission=TableData 110=R;
                                                   CaptionML=[ENU=Outstanding Orders;
                                                              RUS=Невыполненные заказы];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 79  ;   ;Shipped Not Invoiced;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Line"."Shipped Not Invoiced" WHERE (Document Type=CONST(Order),
                                                                                                              Bill-to Customer No.=FIELD(No.),
                                                                                                              Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                              Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                              Currency Code=FIELD(Currency Filter),
                                                                                                              Agreement No.=FIELD(Agreement Filter)));
                                                   AccessByPermission=TableData 110=R;
                                                   CaptionML=[ENU=Shipped Not Invoiced;
                                                              RUS=Отгружено без выст. счета];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 80  ;   ;Application Method  ;Option        ;CaptionML=[ENU=Application Method;
                                                              RUS=Метод применения];
                                                   OptionCaptionML=[ENU=Manual,Apply to Oldest;
                                                                    RUS=Вручную,Применить к самым старым];
                                                   OptionString=Manual,Apply to Oldest }
    { 82  ;   ;Prices Including VAT;Boolean       ;CaptionML=[ENU=Prices Including VAT;
                                                              RUS=Цены с учетом НДС] }
    { 83  ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=[ENU=Location Code;
                                                              RUS=Код склада] }
    { 84  ;   ;Fax No.             ;Text30        ;CaptionML=[ENU=Fax No.;
                                                              RUS=Факс] }
    { 85  ;   ;Telex Answer Back   ;Text20        ;CaptionML=[ENU=Telex Answer Back;
                                                              RUS=Телекс для ответа] }
    { 86  ;   ;VAT Registration No.;Text20        ;OnValidate=VAR
                                                                VATRegNoFormat@1000 : Record 381;
                                                                VATRegistrationLogMgt@1002 : Codeunit 249;
                                                              BEGIN
                                                                // BMN Карточки клиентов приходят из MIS
                                                                // IF VATRegNoFormat.Test("VAT Registration No.","Country/Region Code","No.",DATABASE::Customer) THEN
                                                                //  IF "VAT Registration No." <> xRec."VAT Registration No." THEN
                                                                //    VATRegistrationLogMgt.LogCustomer(Rec);
                                                              END;

                                                   CaptionML=[ENU=VAT Registration No.;
                                                              RUS=ИНН] }
    { 87  ;   ;Combine Shipments   ;Boolean       ;AccessByPermission=TableData 110=R;
                                                   CaptionML=[ENU=Combine Shipments;
                                                              RUS=Объединение поставок] }
    { 88  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   OnValidate=BEGIN
                                                                IF xRec."Gen. Bus. Posting Group" <> "Gen. Bus. Posting Group" THEN
                                                                  IF GenBusPostingGrp.ValidateVatBusPostingGroup(GenBusPostingGrp,"Gen. Bus. Posting Group") THEN
                                                                    VALIDATE("VAT Bus. Posting Group",GenBusPostingGrp."Def. VAT Bus. Posting Group");
                                                              END;

                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              RUS=Общая бизнес-группа] }
    { 89  ;   ;Picture             ;BLOB          ;CaptionML=[ENU=Picture;
                                                              RUS=Рисунок];
                                                   SubType=Bitmap }
    { 90  ;   ;GLN                 ;Code13        ;OnValidate=VAR
                                                                GLNCalculator@1000 : Codeunit 1607;
                                                              BEGIN
                                                                IF GLN <> '' THEN
                                                                  GLNCalculator.AssertValidCheckDigit13(GLN);
                                                              END;

                                                   CaptionML=[ENU=GLN;
                                                              RUS=Код GLN];
                                                   Numeric=Yes }
    { 91  ;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              RUS=Индекс] }
    { 92  ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              RUS=Район] }
    { 97  ;   ;Debit Amount        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Debit Amount" WHERE (Customer No.=FIELD(No.),
                                                                                                                      Entry Type=FILTER(<>Application),
                                                                                                                      Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                      Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                      Posting Date=FIELD(Date Filter),
                                                                                                                      Currency Code=FIELD(Currency Filter),
                                                                                                                      Agreement No.=FIELD(Agreement Filter),
                                                                                                                      Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Debit Amount;
                                                              RUS=Сумма по дебету];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 98  ;   ;Credit Amount       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Credit Amount" WHERE (Customer No.=FIELD(No.),
                                                                                                                       Entry Type=FILTER(<>Application),
                                                                                                                       Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                       Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                       Posting Date=FIELD(Date Filter),
                                                                                                                       Currency Code=FIELD(Currency Filter),
                                                                                                                       Agreement No.=FIELD(Agreement Filter),
                                                                                                                       Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Credit Amount;
                                                              RUS=Сумма по кредиту];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 99  ;   ;Debit Amount (LCY)  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Debit Amount (LCY)" WHERE (Customer No.=FIELD(No.),
                                                                                                                            Entry Type=FILTER(<>Application),
                                                                                                                            Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                            Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                            Posting Date=FIELD(Date Filter),
                                                                                                                            Currency Code=FIELD(Currency Filter),
                                                                                                                            Agreement No.=FIELD(Agreement Filter),
                                                                                                                            Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Debit Amount (LCY);
                                                              RUS=Сумма по дебету (руб.)];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,18,99' }
    { 100 ;   ;Credit Amount (LCY) ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Credit Amount (LCY)" WHERE (Customer No.=FIELD(No.),
                                                                                                                             Entry Type=FILTER(<>Application),
                                                                                                                             Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                             Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                             Posting Date=FIELD(Date Filter),
                                                                                                                             Currency Code=FIELD(Currency Filter),
                                                                                                                             Agreement No.=FIELD(Agreement Filter),
                                                                                                                             Prepmt. Diff. in TA=CONST(No)));
                                                   CaptionML=[ENU=Credit Amount (LCY);
                                                              RUS=Сумма по кредиту (руб.)];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,18,100' }
    { 102 ;   ;E-Mail              ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=Email;
                                                              RUS=Эл. почта] }
    { 103 ;   ;Home Page           ;Text80        ;ExtendedDatatype=URL;
                                                   CaptionML=[ENU=Home Page;
                                                              RUS=Интернет-адрес] }
    { 104 ;   ;Reminder Terms Code ;Code10        ;TableRelation="Reminder Terms";
                                                   CaptionML=[ENU=Reminder Terms Code;
                                                              RUS=Код условий напоминания] }
    { 105 ;   ;Reminder Amounts    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Initial Document Type=CONST(Reminder),
                                                                                                              Entry Type=CONST(Initial Entry),
                                                                                                              Customer No.=FIELD(No.),
                                                                                                              Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                              Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                              Posting Date=FIELD(Date Filter),
                                                                                                              Currency Code=FIELD(Currency Filter),
                                                                                                              Agreement No.=FIELD(Agreement Filter)));
                                                   CaptionML=[ENU=Reminder Amounts;
                                                              RUS=Суммы напоминаний];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 106 ;   ;Reminder Amounts (LCY);Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Initial Document Type=CONST(Reminder),
                                                                                                                      Entry Type=CONST(Initial Entry),
                                                                                                                      Customer No.=FIELD(No.),
                                                                                                                      Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                      Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                      Posting Date=FIELD(Date Filter),
                                                                                                                      Currency Code=FIELD(Currency Filter),
                                                                                                                      Agreement No.=FIELD(Agreement Filter)));
                                                   CaptionML=[ENU=Reminder Amounts (LCY);
                                                              RUS=Суммы напоминаний (руб.)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,18,106' }
    { 107 ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              RUS=Серия номеров];
                                                   Editable=No }
    { 108 ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=[ENU=Tax Area Code;
                                                              RUS=Код налоговой области] }
    { 109 ;   ;Tax Liable          ;Boolean       ;CaptionML=[ENU=Tax Liable;
                                                              RUS=Облагается налогом] }
    { 110 ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              RUS=НДС бизнес-группа] }
    { 111 ;   ;Currency Filter     ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Filter;
                                                              RUS=Фильтр по валюте] }
    { 113 ;   ;Outstanding Orders (LCY);Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Line"."Outstanding Amount (LCY)" WHERE (Document Type=CONST(Order),
                                                                                                                  Bill-to Customer No.=FIELD(No.),
                                                                                                                  Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                  Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                  Currency Code=FIELD(Currency Filter),
                                                                                                                  Agreement No.=FIELD(Agreement Filter)));
                                                   AccessByPermission=TableData 110=R;
                                                   CaptionML=[ENU=Outstanding Orders (LCY);
                                                              RUS=Невыполненные заказы (руб.)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,18,113' }
    { 114 ;   ;Shipped Not Invoiced (LCY);Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Line"."Shipped Not Invoiced (LCY)" WHERE (Document Type=CONST(Order),
                                                                                                                    Bill-to Customer No.=FIELD(No.),
                                                                                                                    Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                    Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                    Currency Code=FIELD(Currency Filter),
                                                                                                                    Agreement No.=FIELD(Agreement Filter)));
                                                   AccessByPermission=TableData 110=R;
                                                   CaptionML=[ENU=Shipped Not Invoiced (LCY);
                                                              RUS=Отгружено без выст. счета (руб.)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,18,114' }
    { 115 ;   ;Reserve             ;Option        ;InitValue=Optional;
                                                   AccessByPermission=TableData 110=R;
                                                   CaptionML=[ENU=Reserve;
                                                              RUS=Резервировать];
                                                   OptionCaptionML=[ENU=Never,Optional,Always;
                                                                    RUS=Нельзя,Можно,Обязательно];
                                                   OptionString=Never,Optional,Always }
    { 116 ;   ;Block Payment Tolerance;Boolean    ;OnValidate=BEGIN
                                                                UpdatePaymentTolerance((CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   CaptionML=[ENU=Block Payment Tolerance;
                                                              RUS=Блокировать отклонение в оплате] }
    { 117 ;   ;Pmt. Disc. Tolerance (LCY);Decimal ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Customer No.=FIELD(No.),
                                                                                                                       Entry Type=FILTER(Payment Discount Tolerance|'Payment Discount Tolerance (VAT Adjustment)'|'Payment Discount Tolerance (VAT Excl.)'),
                                                                                                                       Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                       Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                       Posting Date=FIELD(Date Filter),
                                                                                                                       Currency Code=FIELD(Currency Filter),
                                                                                                                       Agreement No.=FIELD(Agreement Filter)));
                                                   CaptionML=[ENU=Pmt. Disc. Tolerance (LCY);
                                                              RUS=Отклонение скидки оплаты (руб.)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,18,117' }
    { 118 ;   ;Pmt. Tolerance (LCY);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Customer No.=FIELD(No.),
                                                                                                                       Entry Type=FILTER(Payment Tolerance|'Payment Tolerance (VAT Adjustment)'|'Payment Tolerance (VAT Excl.)'),
                                                                                                                       Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                       Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                       Posting Date=FIELD(Date Filter),
                                                                                                                       Currency Code=FIELD(Currency Filter),
                                                                                                                       Agreement No.=FIELD(Agreement Filter)));
                                                   CaptionML=[ENU=Pmt. Tolerance (LCY);
                                                              RUS=Отклонение в оплате (руб.)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,18,118' }
    { 119 ;   ;IC Partner Code     ;Code20        ;TableRelation="IC Partner";
                                                   OnValidate=VAR
                                                                CustLedgEntry@1001 : Record 21;
                                                                AccountingPeriod@1000 : Record 50;
                                                                ICPartner@1002 : Record 413;
                                                              BEGIN
                                                                IF xRec."IC Partner Code" <> "IC Partner Code" THEN BEGIN
                                                                  IF NOT CustLedgEntry.SETCURRENTKEY("Customer No.",Open) THEN
                                                                    CustLedgEntry.SETCURRENTKEY("Customer No.");
                                                                  CustLedgEntry.SETRANGE("Customer No.","No.");
                                                                  CustLedgEntry.SETRANGE(Open,TRUE);
                                                                  IF CustLedgEntry.FINDLAST THEN
                                                                    ERROR(Text012,FIELDCAPTION("IC Partner Code"),TABLECAPTION);

                                                                  CustLedgEntry.RESET;
                                                                  CustLedgEntry.SETCURRENTKEY("Customer No.","Posting Date");
                                                                  CustLedgEntry.SETRANGE("Customer No.","No.");
                                                                  AccountingPeriod.SETRANGE(Closed,FALSE);
                                                                  IF AccountingPeriod.FINDFIRST THEN BEGIN
                                                                    CustLedgEntry.SETFILTER("Posting Date",'>=%1',AccountingPeriod."Starting Date");
                                                                    IF CustLedgEntry.FINDFIRST THEN
                                                                      IF NOT CONFIRM(Text011,FALSE,TABLECAPTION) THEN
                                                                        "IC Partner Code" := xRec."IC Partner Code";
                                                                  END;
                                                                END;

                                                                IF "IC Partner Code" <> '' THEN BEGIN
                                                                  ICPartner.GET("IC Partner Code");
                                                                  IF (ICPartner."Customer No." <> '') AND (ICPartner."Customer No." <> "No.") THEN
                                                                    ERROR(Text010,FIELDCAPTION("IC Partner Code"),"IC Partner Code",TABLECAPTION,ICPartner."Customer No.");
                                                                  ICPartner."Customer No." := "No.";
                                                                  ICPartner.MODIFY;
                                                                END;

                                                                IF (xRec."IC Partner Code" <> "IC Partner Code") AND ICPartner.GET(xRec."IC Partner Code") THEN BEGIN
                                                                  ICPartner."Customer No." := '';
                                                                  ICPartner.MODIFY;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=IC Partner Code;
                                                              RUS=Код МФ-партнера] }
    { 120 ;   ;Refunds             ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Initial Document Type=CONST(Refund),
                                                                                                              Entry Type=CONST(Initial Entry),
                                                                                                              Customer No.=FIELD(No.),
                                                                                                              Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                              Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                              Posting Date=FIELD(Date Filter),
                                                                                                              Currency Code=FIELD(Currency Filter),
                                                                                                              Agreement No.=FIELD(Agreement Filter)));
                                                   CaptionML=[ENU=Refunds;
                                                              RUS=Возмещения] }
    { 121 ;   ;Refunds (LCY)       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Initial Document Type=CONST(Refund),
                                                                                                                      Entry Type=CONST(Initial Entry),
                                                                                                                      Customer No.=FIELD(No.),
                                                                                                                      Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                      Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                      Posting Date=FIELD(Date Filter),
                                                                                                                      Currency Code=FIELD(Currency Filter),
                                                                                                                      Agreement No.=FIELD(Agreement Filter)));
                                                   CaptionML=[ENU=Refunds (LCY);
                                                              RUS=Возмещения (руб.)];
                                                   CaptionClass='1,11,1,18,121' }
    { 122 ;   ;Other Amounts       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Initial Document Type=CONST(" "),
                                                                                                              Entry Type=CONST(Initial Entry),
                                                                                                              Customer No.=FIELD(No.),
                                                                                                              Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                              Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                              Posting Date=FIELD(Date Filter),
                                                                                                              Currency Code=FIELD(Currency Filter),
                                                                                                              Agreement No.=FIELD(Agreement Filter)));
                                                   CaptionML=[ENU=Other Amounts;
                                                              RUS=Прочие суммы] }
    { 123 ;   ;Other Amounts (LCY) ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Initial Document Type=CONST(" "),
                                                                                                                      Entry Type=CONST(Initial Entry),
                                                                                                                      Customer No.=FIELD(No.),
                                                                                                                      Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                      Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                      Posting Date=FIELD(Date Filter),
                                                                                                                      Currency Code=FIELD(Currency Filter),
                                                                                                                      Agreement No.=FIELD(Agreement Filter)));
                                                   CaptionML=[ENU=Other Amounts (LCY);
                                                              RUS=Прочие суммы (руб.)];
                                                   CaptionClass='1,11,1,18,123' }
    { 124 ;   ;Prepayment %        ;Decimal       ;CaptionML=[ENU=Prepayment %;
                                                              RUS=Предоплата (%)];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 125 ;   ;Outstanding Invoices (LCY);Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Line"."Outstanding Amount (LCY)" WHERE (Document Type=CONST(Invoice),
                                                                                                                  Bill-to Customer No.=FIELD(No.),
                                                                                                                  Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                  Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                  Currency Code=FIELD(Currency Filter),
                                                                                                                  Agreement No.=FIELD(Agreement Filter)));
                                                   AccessByPermission=TableData 110=R;
                                                   CaptionML=[ENU=Outstanding Invoices (LCY);
                                                              RUS=Сумма по необработанным счетам (руб.)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,18,125' }
    { 126 ;   ;Outstanding Invoices;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Line"."Outstanding Amount" WHERE (Document Type=CONST(Invoice),
                                                                                                            Bill-to Customer No.=FIELD(No.),
                                                                                                            Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                            Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                            Currency Code=FIELD(Currency Filter),
                                                                                                            Agreement No.=FIELD(Agreement Filter)));
                                                   AccessByPermission=TableData 110=R;
                                                   CaptionML=[ENU=Outstanding Invoices;
                                                              RUS=Сумма по необработанным счетам];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 130 ;   ;Bill-to No. Of Archived Doc.;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header Archive" WHERE (Document Type=CONST(Order),
                                                                                                   Bill-to Customer No.=FIELD(No.)));
                                                   CaptionML=[ENU=Bill-to No. Of Archived Doc.;
                                                              RUS=Кол-во архивных документов (для плательщика)] }
    { 131 ;   ;Sell-to No. Of Archived Doc.;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header Archive" WHERE (Document Type=CONST(Order),
                                                                                                   Sell-to Customer No.=FIELD(No.)));
                                                   CaptionML=[ENU=Sell-to No. Of Archived Doc.;
                                                              RUS=Кол-во архивных документов (для клиента)] }
    { 132 ;   ;Partner Type        ;Option        ;CaptionML=[ENU=Partner Type;
                                                              RUS=Тип партнера];
                                                   OptionCaptionML=[ENU=" ,Company,Person";
                                                                    RUS=" ,Организация,Сотрудник"];
                                                   OptionString=[ ,Company,Person] }
    { 140 ;   ;Image               ;Media         ;ExtendedDatatype=Person;
                                                   CaptionML=[ENU=Image;
                                                              RUS=Изображение] }
    { 288 ;   ;Preferred Bank Account Code;Code10 ;TableRelation="Customer Bank Account".Code WHERE (Customer No.=FIELD(No.));
                                                   CaptionML=[ENU=Preferred Bank Account Code;
                                                              RUS=Код предпочитаемого банковского счета] }
    { 840 ;   ;Cash Flow Payment Terms Code;Code10;TableRelation="Payment Terms";
                                                   CaptionML=[ENU=Cash Flow Payment Terms Code;
                                                              RUS=Код условий платежа - движение денежных средств] }
    { 5049;   ;Primary Contact No. ;Code20        ;TableRelation=Contact;
                                                   OnValidate=VAR
                                                                Cont@1000 : Record 5050;
                                                                ContBusRel@1001 : Record 5054;
                                                              BEGIN
                                                                Contact := '';
                                                                IF "Primary Contact No." <> '' THEN BEGIN
                                                                  Cont.GET("Primary Contact No.");

                                                                  ContBusRel.SETCURRENTKEY("Link to Table","No.");
                                                                  ContBusRel.SETRANGE("Link to Table",ContBusRel."Link to Table"::Customer);
                                                                  ContBusRel.SETRANGE("No.","No.");
                                                                  ContBusRel.FINDFIRST;

                                                                  IF Cont."Company No." <> ContBusRel."Contact No." THEN
                                                                    ERROR(Text003,Cont."No.",Cont.Name,"No.",Name);

                                                                  IF Cont.Type = Cont.Type::Person THEN
                                                                    Contact := Cont.Name
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              Cont@1000 : Record 5050;
                                                              ContBusRel@1001 : Record 5054;
                                                              TempCust@1002 : TEMPORARY Record 18;
                                                            BEGIN
                                                              ContBusRel.SETCURRENTKEY("Link to Table","No.");
                                                              ContBusRel.SETRANGE("Link to Table",ContBusRel."Link to Table"::Customer);
                                                              ContBusRel.SETRANGE("No.","No.");
                                                              IF ContBusRel.FINDFIRST THEN
                                                                Cont.SETRANGE("Company No.",ContBusRel."Contact No.")
                                                              ELSE
                                                                Cont.SETRANGE("No.",'');

                                                              IF "Primary Contact No." <> '' THEN
                                                                IF Cont.GET("Primary Contact No.") THEN ;
                                                              IF PAGE.RUNMODAL(0,Cont) = ACTION::LookupOK THEN BEGIN
                                                                TempCust.COPY(Rec);
                                                                FIND;
                                                                TRANSFERFIELDS(TempCust,FALSE);
                                                                VALIDATE("Primary Contact No.",Cont."No.");
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Primary Contact No.;
                                                              RUS=Код основного контакта] }
    { 5700;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center";
                                                   CaptionML=[ENU=Responsibility Center;
                                                              RUS=Центр ответственности] }
    { 5750;   ;Shipping Advice     ;Option        ;AccessByPermission=TableData 110=R;
                                                   CaptionML=[ENU=Shipping Advice;
                                                              RUS=Статус отгрузки];
                                                   OptionCaptionML=[ENU=Partial,Complete;
                                                                    RUS=Частично,Полностью];
                                                   OptionString=Partial,Complete }
    { 5790;   ;Shipping Time       ;DateFormula   ;AccessByPermission=TableData 5790=R;
                                                   CaptionML=[ENU=Shipping Time;
                                                              RUS=Время отгрузки] }
    { 5792;   ;Shipping Agent Service Code;Code10 ;TableRelation="Shipping Agent Services".Code WHERE (Shipping Agent Code=FIELD(Shipping Agent Code));
                                                   OnValidate=BEGIN
                                                                IF ("Shipping Agent Code" <> '') AND
                                                                   ("Shipping Agent Service Code" <> '')
                                                                THEN
                                                                  IF ShippingAgentService.GET("Shipping Agent Code","Shipping Agent Service Code") THEN
                                                                    "Shipping Time" := ShippingAgentService."Shipping Time"
                                                                  ELSE
                                                                    EVALUATE("Shipping Time",'<>');
                                                              END;

                                                   CaptionML=[ENU=Shipping Agent Service Code;
                                                              RUS=Код услуги экспедитора] }
    { 5900;   ;Service Zone Code   ;Code10        ;TableRelation="Service Zone";
                                                   CaptionML=[ENU=Service Zone Code;
                                                              RUS=Код сервисной зоны] }
    { 5902;   ;Contract Gain/Loss Amount;Decimal  ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Contract Gain/Loss Entry".Amount WHERE (Customer No.=FIELD(No.),
                                                                                                            Ship-to Code=FIELD(Ship-to Filter),
                                                                                                            Change Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Contract Gain/Loss Amount;
                                                              RUS=Сумма прибылей/убытков по контракту];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5903;   ;Ship-to Filter      ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation="Ship-to Address".Code WHERE (Customer No.=FIELD(No.));
                                                   CaptionML=[ENU=Ship-to Filter;
                                                              RUS=Фильтр по получателю] }
    { 5910;   ;Outstanding Serv. Orders (LCY);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Service Line"."Outstanding Amount (LCY)" WHERE (Document Type=CONST(Order),
                                                                                                                    Bill-to Customer No.=FIELD(No.),
                                                                                                                    Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                    Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                    Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Outstanding Serv. Orders (LCY);
                                                              RUS=Невыполн. серв. заказы (руб.)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,18,5910' }
    { 5911;   ;Serv Shipped Not Invoiced(LCY);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Service Line"."Shipped Not Invoiced (LCY)" WHERE (Document Type=CONST(Order),
                                                                                                                      Bill-to Customer No.=FIELD(No.),
                                                                                                                      Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                      Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                      Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Serv Shipped Not Invoiced(LCY);
                                                              RUS=Сервис - поставлено без выст. счета (руб.)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,18,5911' }
    { 5912;   ;Outstanding Serv.Invoices(LCY);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Service Line"."Outstanding Amount (LCY)" WHERE (Document Type=CONST(Invoice),
                                                                                                                    Bill-to Customer No.=FIELD(No.),
                                                                                                                    Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                    Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                    Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Outstanding Serv.Invoices(LCY);
                                                              RUS=Выставленные серв. счета (руб.)];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   CaptionClass='1,11,1,18,5912' }
    { 7001;   ;Allow Line Disc.    ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Allow Line Disc.;
                                                              RUS=Разрешить скидку строки] }
    { 7171;   ;No. of Quotes       ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE (Document Type=CONST(Quote),
                                                                                           Sell-to Customer No.=FIELD(No.)));
                                                   CaptionML=[ENU=No. of Quotes;
                                                              RUS=Кол-во предложений];
                                                   Editable=No }
    { 7172;   ;No. of Blanket Orders;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE (Document Type=CONST(Blanket Order),
                                                                                           Sell-to Customer No.=FIELD(No.)));
                                                   AccessByPermission=TableData 110=R;
                                                   CaptionML=[ENU=No. of Blanket Orders;
                                                              RUS=Кол-во общих заказов];
                                                   Editable=No }
    { 7173;   ;No. of Orders       ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE (Document Type=CONST(Order),
                                                                                           Sell-to Customer No.=FIELD(No.)));
                                                   AccessByPermission=TableData 110=R;
                                                   CaptionML=[ENU=No. of Orders;
                                                              RUS=Кол-во заказов];
                                                   Editable=No }
    { 7174;   ;No. of Invoices     ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE (Document Type=CONST(Invoice),
                                                                                           Sell-to Customer No.=FIELD(No.)));
                                                   CaptionML=[ENU=No. of Invoices;
                                                              RUS=Кол-во счетов-фактур];
                                                   Editable=No }
    { 7175;   ;No. of Return Orders;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE (Document Type=CONST(Return Order),
                                                                                           Sell-to Customer No.=FIELD(No.)));
                                                   AccessByPermission=TableData 6660=R;
                                                   CaptionML=[ENU=No. of Return Orders;
                                                              RUS=Кол-во возвратов];
                                                   Editable=No }
    { 7176;   ;No. of Credit Memos ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE (Document Type=CONST(Credit Memo),
                                                                                           Sell-to Customer No.=FIELD(No.)));
                                                   CaptionML=[ENU=No. of Credit Memos;
                                                              RUS=Кол-во кредит-нот];
                                                   Editable=No }
    { 7177;   ;No. of Pstd. Shipments;Integer     ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Shipment Header" WHERE (Sell-to Customer No.=FIELD(No.)));
                                                   CaptionML=[ENU=No. of Pstd. Shipments;
                                                              RUS=Кол-во учтенных поставок];
                                                   Editable=No }
    { 7178;   ;No. of Pstd. Invoices;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Invoice Header" WHERE (Sell-to Customer No.=FIELD(No.)));
                                                   CaptionML=[ENU=No. of Pstd. Invoices;
                                                              RUS=Кол-во учтенных счетов];
                                                   Editable=No }
    { 7179;   ;No. of Pstd. Return Receipts;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Return Receipt Header" WHERE (Sell-to Customer No.=FIELD(No.)));
                                                   CaptionML=[ENU=No. of Pstd. Return Receipts;
                                                              RUS=Кол-во учтенных возвратных прих. накладных];
                                                   Editable=No }
    { 7180;   ;No. of Pstd. Credit Memos;Integer  ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Cr.Memo Header" WHERE (Sell-to Customer No.=FIELD(No.)));
                                                   CaptionML=[ENU=No. of Pstd. Credit Memos;
                                                              RUS=Кол-во учтенных кредит-нот];
                                                   Editable=No }
    { 7181;   ;No. of Ship-to Addresses;Integer   ;FieldClass=FlowField;
                                                   CalcFormula=Count("Ship-to Address" WHERE (Customer No.=FIELD(No.)));
                                                   CaptionML=[ENU=No. of Ship-to Addresses;
                                                              RUS=Кол-во адресов получателя];
                                                   Editable=No }
    { 7182;   ;Bill-To No. of Quotes;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE (Document Type=CONST(Quote),
                                                                                           Bill-to Customer No.=FIELD(No.)));
                                                   CaptionML=[ENU=Bill-To No. of Quotes;
                                                              RUS=Кол-во предложений (для плательщика)];
                                                   Editable=No }
    { 7183;   ;Bill-To No. of Blanket Orders;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE (Document Type=CONST(Blanket Order),
                                                                                           Bill-to Customer No.=FIELD(No.)));
                                                   AccessByPermission=TableData 110=R;
                                                   CaptionML=[ENU=Bill-To No. of Blanket Orders;
                                                              RUS=Кол-во общих заказов (для плательщика)];
                                                   Editable=No }
    { 7184;   ;Bill-To No. of Orders;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE (Document Type=CONST(Order),
                                                                                           Bill-to Customer No.=FIELD(No.)));
                                                   AccessByPermission=TableData 110=R;
                                                   CaptionML=[ENU=Bill-To No. of Orders;
                                                              RUS=Кол-во заказов (для плательщика)];
                                                   Editable=No }
    { 7185;   ;Bill-To No. of Invoices;Integer    ;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE (Document Type=CONST(Invoice),
                                                                                           Bill-to Customer No.=FIELD(No.)));
                                                   CaptionML=[ENU=Bill-To No. of Invoices;
                                                              RUS=Кол-во счетов (для плательщика)];
                                                   Editable=No }
    { 7186;   ;Bill-To No. of Return Orders;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE (Document Type=CONST(Return Order),
                                                                                           Bill-to Customer No.=FIELD(No.)));
                                                   AccessByPermission=TableData 6660=R;
                                                   CaptionML=[ENU=Bill-To No. of Return Orders;
                                                              RUS=Кол-во возвратов (для плательщика)];
                                                   Editable=No }
    { 7187;   ;Bill-To No. of Credit Memos;Integer;FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Header" WHERE (Document Type=CONST(Credit Memo),
                                                                                           Bill-to Customer No.=FIELD(No.)));
                                                   CaptionML=[ENU=Bill-To No. of Credit Memos;
                                                              RUS=Кол-во кредит-нот (для плательщика)];
                                                   Editable=No }
    { 7188;   ;Bill-To No. of Pstd. Shipments;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Shipment Header" WHERE (Bill-to Customer No.=FIELD(No.)));
                                                   CaptionML=[ENU=Bill-To No. of Pstd. Shipments;
                                                              RUS=Кол-во учтенных поставок (для плательщика)];
                                                   Editable=No }
    { 7189;   ;Bill-To No. of Pstd. Invoices;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Invoice Header" WHERE (Bill-to Customer No.=FIELD(No.)));
                                                   CaptionML=[ENU=Bill-To No. of Pstd. Invoices;
                                                              RUS=Кол-во учтенных счетов (для плательщика)];
                                                   Editable=No }
    { 7190;   ;Bill-To No. of Pstd. Return R.;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Return Receipt Header" WHERE (Bill-to Customer No.=FIELD(No.)));
                                                   CaptionML=[ENU=Bill-To No. of Pstd. Return R.;
                                                              RUS=Кол-во учтенных возвратов (для плательщика)];
                                                   Editable=No }
    { 7191;   ;Bill-To No. of Pstd. Cr. Memos;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Sales Cr.Memo Header" WHERE (Bill-to Customer No.=FIELD(No.)));
                                                   CaptionML=[ENU=Bill-To No. of Pstd. Cr. Memos;
                                                              RUS=Кол-во учтенных кредит-нот (для плательщика)];
                                                   Editable=No }
    { 7600;   ;Base Calendar Code  ;Code10        ;TableRelation="Base Calendar";
                                                   CaptionML=[ENU=Base Calendar Code;
                                                              RUS=Код базового календаря] }
    { 7601;   ;Copy Sell-to Addr. to Qte From;Option;
                                                   AccessByPermission=TableData 5050=R;
                                                   CaptionML=[ENU=Copy Sell-to Addr. to Qte From;
                                                              RUS=Копировать адрес клиента в поле "Предложение от"];
                                                   OptionCaptionML=[ENU=Company,Person;
                                                                    RUS=Организация,Сотрудник];
                                                   OptionString=Company,Person }
    { 12400;  ;Default Bank Code   ;Code10        ;TableRelation="Customer Bank Account".Code WHERE (Customer No.=FIELD(No.));
                                                   CaptionML=[ENU=Default Bank Code;
                                                              RUS=Код банка по умолчанию] }
    { 12401;  ;Vendor No.          ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=BEGIN
                                                                IF Vend.GET(xRec."Vendor No.") THEN BEGIN
                                                                  Vend."Customer No." := '';
                                                                  Vend.MODIFY;
                                                                END;
                                                                IF Vend.GET("Vendor No.") THEN BEGIN
                                                                  Vend."Customer No." := "No.";
                                                                  Vend.MODIFY;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Vendor No.;
                                                              RUS=Код поставщика] }
    { 12402;  ;Vendor Name         ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Vendor.Name WHERE (No.=FIELD(Vendor No.)));
                                                   CaptionML=[ENU=Vendor Name;
                                                              RUS=Название поставщика];
                                                   Editable=No }
    { 12409;  ;Full Name           ;Text250       ;CaptionML=[ENU=Full Name;
                                                              RUS=Полное название] }
    { 12422;  ;G/L Account Filter  ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation="G/L Account";
                                                   CaptionML=[ENU=G/L Account Filter;
                                                              RUS=Фильтр по счету ГК] }
    { 12423;  ;G/L Starting Date Filter;Date      ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=G/L Starting Date Filter;
                                                              RUS=ГК - фильтр по дате начала] }
    { 12424;  ;G/L Starting Balance;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("G/L Entry".Amount WHERE (Source Type=CONST(Customer),
                                                                                             Source No.=FIELD(No.),
                                                                                             G/L Account No.=FIELD(G/L Account Filter),
                                                                                             Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                             Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                             Agreement No.=FIELD(Agreement Filter),
                                                                                             Posting Date=FIELD(UPPERLIMIT(G/L Starting Date Filter))));
                                                   CaptionML=[ENU=G/L Starting Balance;
                                                              RUS=ГК - начальное сальдо];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 12425;  ;G/L Net Change      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("G/L Entry".Amount WHERE (Source Type=CONST(Customer),
                                                                                             Source No.=FIELD(No.),
                                                                                             G/L Account No.=FIELD(G/L Account Filter),
                                                                                             Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                             Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                             Agreement No.=FIELD(Agreement Filter),
                                                                                             Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=G/L Net Change;
                                                              RUS=Оборот по ГК];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 12426;  ;G/L Debit Amount    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("G/L Entry"."Debit Amount" WHERE (Source Type=CONST(Customer),
                                                                                                     Source No.=FIELD(No.),
                                                                                                     G/L Account No.=FIELD(G/L Account Filter),
                                                                                                     Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                     Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                     Agreement No.=FIELD(Agreement Filter),
                                                                                                     Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=G/L Debit Amount;
                                                              RUS=ГК - сумма по дебету];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 12427;  ;G/L Credit Amount   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("G/L Entry"."Credit Amount" WHERE (Source Type=CONST(Customer),
                                                                                                      Source No.=FIELD(No.),
                                                                                                      G/L Account No.=FIELD(G/L Account Filter),
                                                                                                      Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                      Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                      Agreement No.=FIELD(Agreement Filter),
                                                                                                      Posting Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=G/L Credit Amount;
                                                              RUS=ГК - сумма по кредиту];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 12428;  ;G/L Balance to Date ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("G/L Entry".Amount WHERE (Source Type=CONST(Customer),
                                                                                             Source No.=FIELD(No.),
                                                                                             G/L Account No.=FIELD(G/L Account Filter),
                                                                                             Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                             Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                             Agreement No.=FIELD(Agreement Filter),
                                                                                             Posting Date=FIELD(UPPERLIMIT(Date Filter))));
                                                   CaptionML=[ENU=G/L Balance to Date;
                                                              RUS=ГК - сальдо на данное число];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 12451;  ;Act Signed by Name  ;Text30        ;CaptionML=[ENU=Act Signed by Name;
                                                              RUS=ФИО подписавшего акт] }
    { 12452;  ;Act Signed by Position;Text30      ;CaptionML=[ENU=Act Signed by Position;
                                                              RUS=Должность подписавшего акт] }
    { 12480;  ;KPP Code            ;Code10        ;CaptionML=[ENU=KPP Code;
                                                              RUS=КПП] }
    { 12481;  ;OKPO Code           ;Code10        ;CaptionML=[ENU=OKPO Code;
                                                              RUS=Код ОКПО] }
    { 12490;  ;Agreement Posting   ;Option        ;OnValidate=VAR
                                                                CustLedgEntry@1210000 : Record 21;
                                                              BEGIN
                                                                IF "Agreement Posting" = "Agreement Posting"::Mandatory THEN BEGIN
                                                                  CustLedgEntry.RESET;
                                                                  CustLedgEntry.SETCURRENTKEY("Customer No.");
                                                                  CustLedgEntry.SETRANGE("Customer No.","No.");
                                                                  CustLedgEntry.SETRANGE("Agreement No.",'');
                                                                  IF CustLedgEntry.FINDFIRST THEN
                                                                    AgrmtMgt.CreateAgrmtFromCust(Rec,'');
                                                                END;
                                                                IF "Agreement Posting" = "Agreement Posting"::"No Agreement" THEN BEGIN
                                                                  CustLedgEntry.RESET;
                                                                  CustLedgEntry.SETCURRENTKEY("Customer No.");
                                                                  CustLedgEntry.SETRANGE("Customer No.","No.");
                                                                  CustLedgEntry.SETFILTER("Agreement No.",'<> %1','');
                                                                  CustLedgEntry.SETRANGE(Open,TRUE);
                                                                  IF CustLedgEntry.FINDFIRST THEN
                                                                    ERROR(Text012,FIELDCAPTION("Agreement Posting"),TABLECAPTION);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Agreement Posting;
                                                              RUS=Учет договоров];
                                                   OptionCaptionML=[ENU=No Agreement,Mandatory;
                                                                    RUS=Без договора,Обязательно];
                                                   OptionString=No Agreement,Mandatory }
    { 12491;  ;Agreement Filter    ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation="Customer Agreement".No. WHERE (Customer No.=FIELD(No.));
                                                   CaptionML=[ENU=Agreement Filter;
                                                              RUS=Фильтр по договорам] }
    { 12494;  ;Agreement Nos.      ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Agreement Nos.;
                                                              RUS=Серия номеров договора] }
    { 50001;  ;Posting Group Filter;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation="Customer Posting Group";
                                                   CaptionML=[ENU=Posting Group Filter;
                                                              RUS=Учетная Группа Фильтр];
                                                   Description=NC OAM04 DP }
    { 50002;  ;Balance at Date     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Customer No.=FIELD(No.),
                                                                                                              Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                              Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                              Currency Code=FIELD(Currency Filter),
                                                                                                              Posting Date=FIELD(UPPERLIMIT(Date Filter)),
                                                                                                              Agreement No.=FIELD(Agreement Filter)));
                                                   CaptionML=[ENU=Balance at Date;
                                                              RUS=Баланс на Дату];
                                                   Description=NC OAM04 DP }
    { 50003;  ;Balance at Date (LCY);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Customer No.=FIELD(No.),
                                                                                                              Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                              Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                              Currency Code=FIELD(Currency Filter),
                                                                                                              Posting Date=FIELD(UPPERLIMIT(Date Filter)),
                                                                                                              Agreement No.=FIELD(Agreement Filter)));
                                                   CaptionML=[ENU=Balance at Date (LCY);
                                                              RUS=Баланс на Дату (РУБ)];
                                                   Description=NC OAM04 DP;
                                                   Editable=No;
                                                   CaptionClass='1,11,1,18,50003' }
    { 50004;  ;Is Open Operations  ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Cust. Ledger Entry" WHERE (Customer No.=FIELD(No.),
                                                                                                 Open=FILTER(Yes)));
                                                   CaptionML=RUS=Есть Открытые Операции;
                                                   Description=NC MTD05 AIG }
    { 50005;  ;Relationship to the Group;Boolean  ;CaptionML=[ENU=Relationship to the Group;
                                                              RUS=Принадлежность к Группе];
                                                   Description=NC MDB01 PCH }
    { 50006;  ;Is Vendor           ;Boolean       ;CaptionML=[ENU=Is Vendor;
                                                              RUS=Есть Поставщик];
                                                   Description=NC MDB002 AIG }
    { 50007;  ;Rec ID              ;Code40        ;CaptionML=[ENU=Rec ID;
                                                              RUS=ID Записи];
                                                   Description=NC S547 PCH }
    { 50010;  ;Counterparty Category;Option       ;CaptionML=[ENU=Counterparty Category;
                                                              RUS=Категория Контрагента для Фин.Отчетности];
                                                   OptionCaptionML=[ENU=Banks,Brokers,Exchanges,Other fin. institutes,Clients/Contractors,Individual,Central Bank of RF,Central banks of other countries;
                                                                    RUS=Банки,Брокеры,Биржи,Прочие фин. институты,Клиенты/Контрагенты,ФЛ,ЦБ РФ,ЦБ иностранный];
                                                   OptionString=Banks,Brokers,Exchanges,Other fin. institutes,Clients/Contractors,Individual,Central Bank of RF,Central banks of other countries;
                                                   Description=NC MDB01 PCH }
    { 50016;  ;Name ENG            ;Text160       ;CaptionML=RUS=Наименование Английское;
                                                   Description=APCOC-102 }
    { 50020;  ;Counterparty Type   ;Option        ;CaptionML=[ENU=Counterparty Type;
                                                              RUS=Тип Контрагента];
                                                   OptionCaptionML=[ENU=PE,LE;
                                                                    RUS=ФЛ,ЮЛ];
                                                   OptionString=PE,LE;
                                                   Description=NC MDB01 PCH }
    { 50030;  ;Industry            ;Code10        ;TableRelation="Industry Group";
                                                   CaptionML=[ENU=Industry;
                                                              RUS=Отрасль Деятельности];
                                                   Description=NC MDB01 PCH }
    { 50035;  ;Customer Segment    ;Code20        ;TableRelation="Customer Segment";
                                                   CaptionML=[ENU=Customer Segment;
                                                              RUS=Клиентский Сегмент];
                                                   Description=NC MDB01 PCH }
    { 50040;  ;Customer ID         ;Code20        ;CaptionML=[ENU=Customer ID;
                                                              RUS=Клиент ID];
                                                   Description=NC MDB01 PCH }
    { 50065;  ;IC Dimension Value Code;Code20     ;OnValidate=VAR
                                                                ConsSetup@1101495002 : Record 50000;
                                                                MovingDataSetup@1101495001 : Record 50064;
                                                                DimValue@1101495000 : Record 349;
                                                                LinkedDim@1101495003 : Record 50016;
                                                              BEGIN
                                                                 IF Vend.GET("No.") THEN
                                                                  IF Vend."IC Dimension Value Code" <> "IC Dimension Value Code" THEN BEGIN
                                                                    Vend."IC Dimension Value Code" :=  "IC Dimension Value Code";
                                                                    IF NOT Vend.MODIFY THEN; END;

                                                                 //NC MIO14 > PCH
                                                                 MovingDataSetup.GET;
                                                                 MovingDataSetup.TESTFIELD("Customer Dimension Code");
                                                                 ConsSetup.GET;
                                                                 ConsSetup.TESTFIELD("IC Dimension Code");

                                                                 IF "IC Dimension Value Code" <> '' THEN BEGIN
                                                                  IF DimValue.GET(MovingDataSetup."Customer Dimension Code","No.") THEN BEGIN
                                                                    LinkedDim.RESET;
                                                                    LinkedDim.SETRANGE("Dimension Code",DimValue."Dimension Code");
                                                                    LinkedDim.SETRANGE("Dimension Value",DimValue.Code);
                                                                    LinkedDim.SETRANGE("Linked Dimension Code",ConsSetup."IC Dimension Code");
                                                                    IF NOT LinkedDim.FINDFIRST THEN BEGIN
                                                                      LinkedDim.INIT;
                                                                      LinkedDim."Dimension Code" :=DimValue."Dimension Code";
                                                                      LinkedDim."Dimension Value" := DimValue.Code;
                                                                      LinkedDim."Linked Dimension Code" :=ConsSetup."IC Dimension Code";
                                                                      LinkedDim."Linked Dimension Value" :="IC Dimension Value Code";
                                                                      LinkedDim.INSERT(TRUE);
                                                                    END ELSE BEGIN
                                                                      LinkedDim."Linked Dimension Value" :="IC Dimension Value Code";
                                                                      LinkedDim.MODIFY(TRUE);
                                                                    END;
                                                                  END;

                                                                 END ELSE BEGIN
                                                                  IF DimValue.GET(MovingDataSetup."Customer Dimension Code","No.") THEN BEGIN
                                                                    LinkedDim.RESET;
                                                                    LinkedDim.SETRANGE("Dimension Code",DimValue."Dimension Code");
                                                                    LinkedDim.SETRANGE("Dimension Value",DimValue.Code);
                                                                    LinkedDim.SETRANGE("Linked Dimension Code",ConsSetup."IC Dimension Code");
                                                                    IF LinkedDim.FINDFIRST THEN
                                                                      LinkedDim.DELETE(TRUE);

                                                                   END;
                                                                 END;
                                                                //NC MIO14 < PCH
                                                              END;

                                                   CaptionML=[ENU=IC Dimension Value Code;
                                                              RUS=Код IC] }
    { 50067;  ;Ecosystem List Member;Boolean      ;CaptionML=RUS=Для Экосистемы;
                                                   Description=TD BMN NCS-578 }
    { 50070;  ;Related Counterparty Type Code;Code10;
                                                   TableRelation="Related Party Type"."Related Party Type Code";
                                                   CaptionML=[ENU=Related Counterparty Code;
                                                              RUS=Тип Контрагента Код];
                                                   Description=NC NCS-660 RD }
    { 50074;  ;Resident/Non-resident;Option       ;CaptionML=[ENU=Resident/Non-resident;
                                                              RUS=Резидент/Нерезидент РФ];
                                                   OptionCaptionML=[ENU=" ,Resident,Non-resident";
                                                                    RUS=" ,Резидент,Нерезидент"];
                                                   OptionString=[ ,Resident,Non-resident];
                                                   Description=2308 }
    { 50100;  ;Segment Code        ;Code10        ;TableRelation=Segment;
                                                   CaptionML=[ENU=Segment Code;
                                                              RUS=Сегмент Код];
                                                   Description=NC S1883 PCH }
    { 50101;  ;CH Counterparty Type;Integer       ;CaptionML=ENU=CH Counterparty Type;
                                                   Description=NCS1881 SPA }
    { 50102;  ;Group No.           ;Code20        ;TableRelation=Customer;
                                                   CaptionML=[ENU=Group No.;
                                                              RUS=Группа Но.];
                                                   Description=NCS1881 SPA }
    { 50103;  ;Number of Employees ;Integer       ;CaptionML=[ENU=Quantity Employees;
                                                              RUS=Кол-во сотрудников];
                                                   Description=NCS1881 SPA }
    { 50104;  ;NOGA code           ;Integer       ;Description=NC NCS-1881 PCH }
    { 50105;  ;Pledge Agreement    ;Boolean       ;CaptionML=[ENU=Pledge Agreement;
                                                              RUS=Соглашение о Залоге] }
    { 50106;  ;C553 Netting contract;Option       ;OptionString=Default,Close-out-netting,Netting by novation,Payment netting,Repo and similar,Netting with collaterized - remaining,Non-qualified investor,Netting with collaterized - complete;
                                                   Description=NCS-2247 AAP }
    { 50120;  ;CRM ID              ;Text250       ;Description=ncs-2324 }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Search Name                              }
    {    ;Customer Posting Group                   }
    {    ;Currency Code                            }
    {    ;Country/Region Code                      }
    {    ;Gen. Bus. Posting Group                  }
    {    ;Name,Address,City                        }
    {    ;VAT Registration No.                     }
    {    ;Name                                     }
    {    ;City                                     }
    {    ;Post Code                                }
    {    ;Phone No.                                }
    {    ;Contact                                  }
    {    ;Rec ID                                   }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Name,City,Post Code,Phone No.,Contact }
    { 2   ;Brick               ;No.,Name,Balance (LCY),Contact,Balance Due (LCY),Image }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot delete %1 %2 because there is at least one outstanding Sales %3 for this customer.;RUS=Нельзя удалить %1 %2, поскольку есть необработанные %3 продажи для этого клиента.';
      Text002@1001 : TextConst 'ENU=Do you wish to create a contact for %1 %2?;RUS=Создать контакт для %1 %2?';
      SalesSetup@1002 : Record 311;
      CommentLine@1004 : Record 97;
      SalesOrderLine@1005 : Record 37;
      CustBankAcc@1006 : Record 287;
      ShipToAddr@1007 : Record 222;
      PostCode@1008 : Record 225;
      GenBusPostingGrp@1009 : Record 250;
      ShippingAgentService@1010 : Record 5790;
      ItemCrossReference@1016 : Record 5717;
      RMSetup@1018 : Record 5079;
      SalesPrice@1021 : Record 7002;
      SalesLineDisc@1022 : Record 7004;
      SalesPrepmtPct@1003 : Record 459;
      ServContract@1026 : Record 5965;
      ServiceItem@1027 : Record 5940;
      CustAgrmt@1210003 : Record 14902;
      PaymentToleranceMgt@1038 : Codeunit 426;
      NoSeriesMgt@1011 : Codeunit 396;
      AgrmtMgt@1210002 : Codeunit 12421;
      LocMgt@1210001 : Codeunit 12400;
      Vend@1210000 : Record 23;
      MoveEntries@1012 : Codeunit 361;
      UpdateContFromCust@1013 : Codeunit 5056;
      DimMgt@1014 : Codeunit 408;
      ApprovalsMgmt@1039 : Codeunit 1535;
      InsertFromContact@1015 : Boolean;
      Text003@1020 : TextConst 'ENU=Contact %1 %2 is not related to customer %3 %4.;RUS=Контакт %1 %2 не связан с клиентом %3 %4.';
      Text004@1023 : TextConst 'ENU=post;RUS=учесть';
      Text005@1024 : TextConst 'ENU=create;RUS=создать';
      Text006@1025 : TextConst 'ENU=You cannot %1 this type of document when Customer %2 is blocked with type %3;RUS=Нельзя %1 этот тип документа, пока клиент %2 заблокирован с типом %3';
      Text007@1028 : TextConst 'ENU=You cannot delete %1 %2 because there is at least one not cancelled Service Contract for this customer.;RUS=Нельзя удалить %1 %2, поскольку по данному клиенту имеется не менее одного неотмененного сервисного контракта.';
      Text008@1029 : TextConst 'ENU=Deleting the %1 %2 will cause the %3 to be deleted for the associated Service Items. Do you want to continue?;RUS=Удаление %1 %2 приведет к удалению %3, связанного с сервисными товарами. Продолжить?';
      Text009@1030 : TextConst 'ENU=Cannot delete customer.;RUS=Невозможно удалить клиента.';
      Text010@1031 : TextConst 'ENU=The %1 %2 has been assigned to %3 %4.\The same %1 cannot be entered on more than one %3. Enter another code.;RUS=%1 %2 присвоен %3 %4.\Один и тот же %1 не может вводиться на нескольких %3. Введите другой код.';
      Text011@1033 : TextConst 'ENU=Reconciling IC transactions may be difficult if you change IC Partner Code because this %1 has ledger entries in a fiscal year that has not yet been closed.\ Do you still want to change the IC Partner Code?;RUS=Выверка транзакций МФ может быть затруднена, если изменить содержимое поля "МФ Код партнера", поскольку %1 содержит операции ГК еще не закрытого финансового года.\ Все равно изменить содержимое поля "МФ Код партнера"?';
      Text012@1032 : TextConst 'ENU=You cannot change the contents of the %1 field because this %2 has one or more open ledger entries.;RUS=Нельзя изменить содержимое поля %1, поскольку в этом %2 есть открытые операции ГК.';
      Text013@1035 : TextConst 'ENU=You cannot delete %1 %2 because there is at least one outstanding Service %3 for this customer.;RUS=Нельзя удалить %1 %2, поскольку существует незаверш. сервисн. %3 для этого клиента.';
      Text014@1017 : TextConst 'ENU=Before you can use Online Map, you must fill in the Online Map Setup window.\See Setting Up Online Map in Help.;RUS=Прежде чем использовать Online Map, необходимо заполнить окно настройки Online Map.\См. раздел справки "Настройка Online Map".';
      Text015@1036 : TextConst 'ENU=You cannot delete %1 %2 because there is at least one %3 associated to this customer.;RUS=%1 %2 не может быть удален, поскольку с этим клиентом связан по крайней мере один %3.';
      AllowPaymentToleranceQst@1037 : TextConst 'ENU=Do you want to allow payment tolerance for entries that are currently open?;RUS=Разрешить отклонения в оплате для открытых на данный момент операций?';
      RemovePaymentRoleranceQst@1019 : TextConst 'ENU=Do you want to remove payment tolerance from entries that are currently open?;RUS=Удалить отклонения в оплате из открытых на данный момент операций?';
      CreateNewCustTxt@1041 : TextConst '@@@="%1 is the name to be used to create the customer. ";ENU=Create a new customer card for %1;RUS=Создать новую карточку клиента для %1';
      SelectCustErr@1040 : TextConst 'ENU=You must select an existing customer.;RUS=Необходимо выбрать существующего клиента.';
      CustNotRegisteredTxt@1042 : TextConst 'ENU=This customer is not registered. To continue, choose one of the following options:;RUS=Этот клиент не зарегистрирован. Для продолжения выберите один из следующих вариантов:';
      SelectCustTxt@1043 : TextConst 'ENU=Select an existing customer;RUS=Выберите существующего клиента';
      InsertFromTemplate@1044 : Boolean;
      LookupRequested@1034 : Boolean;

    PROCEDURE AssistEdit@2(OldCust@1000 : Record 18) : Boolean;
    VAR
      Cust@1001 : Record 18;
    BEGIN
      WITH Cust DO BEGIN
        Cust := Rec;
        SalesSetup.GET;
        SalesSetup.TESTFIELD("Customer Nos.");
        IF NoSeriesMgt.SelectSeries(SalesSetup."Customer Nos.",OldCust."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := Cust;
          EXIT(TRUE);
        END;
      END;
    END;

    LOCAL PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.SaveDefaultDim(DATABASE::Customer,"No.",FieldNumber,ShortcutDimCode);
      MODIFY;
    END;

    PROCEDURE ShowContact@1();
    VAR
      ContBusRel@1000 : Record 5054;
      Cont@1001 : Record 5050;
      OfficeContact@1002 : Record 5050;
      OfficeMgt@1003 : Codeunit 1630;
    BEGIN
      IF OfficeMgt.GetContact(OfficeContact,"No.") AND (OfficeContact.COUNT = 1) THEN
        PAGE.RUN(PAGE::"Contact Card",OfficeContact)
      ELSE BEGIN
        IF "No." = '' THEN
          EXIT;

        ContBusRel.SETCURRENTKEY("Link to Table","No.");
        ContBusRel.SETRANGE("Link to Table",ContBusRel."Link to Table"::Customer);
        ContBusRel.SETRANGE("No.","No.");
        IF NOT ContBusRel.FINDFIRST THEN BEGIN
          IF NOT CONFIRM(Text002,FALSE,TABLECAPTION,"No.") THEN
            EXIT;
          UpdateContFromCust.InsertNewContact(Rec,FALSE);
          ContBusRel.FINDFIRST;
        END;
        COMMIT;

        Cont.SETCURRENTKEY("Company Name","Company No.",Type,Name);
        Cont.SETRANGE("Company No.",ContBusRel."Contact No.");
        PAGE.RUN(PAGE::"Contact List",Cont);
      END;
    END;

    PROCEDURE SetInsertFromContact@3(FromContact@1000 : Boolean);
    BEGIN
      InsertFromContact := FromContact;
    END;

    PROCEDURE CheckBlockedCustOnDocs@5(Cust2@1000 : Record 18;DocType@1001 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order';Shipment@1005 : Boolean;Transaction@1003 : Boolean);
    BEGIN
      WITH Cust2 DO BEGIN
        IF ((Blocked = Blocked::All) OR
            ((Blocked = Blocked::Invoice) AND
             (DocType IN [DocType::Quote,DocType::Order,DocType::Invoice,DocType::"Blanket Order"])) OR
            ((Blocked = Blocked::Ship) AND (DocType IN [DocType::Quote,DocType::Order,DocType::"Blanket Order"]) AND
             (NOT Transaction)) OR
            ((Blocked = Blocked::Ship) AND (DocType IN [DocType::Quote,DocType::Order,DocType::Invoice,DocType::"Blanket Order"]) AND
             Shipment AND Transaction))
        THEN
          CustBlockedErrorMessage(Cust2,Transaction);
      END;
    END;

    PROCEDURE CheckBlockedCustOnJnls@7(Cust2@1003 : Record 18;DocType@1002 : ' ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund';Transaction@1000 : Boolean);
    BEGIN
      WITH Cust2 DO BEGIN
        IF (Blocked = Blocked::All) OR
           ((Blocked = Blocked::Invoice) AND (DocType IN [DocType::Invoice,DocType::" "]))
        THEN
          CustBlockedErrorMessage(Cust2,Transaction)
      END;
    END;

    PROCEDURE CustBlockedErrorMessage@4(Cust2@1001 : Record 18;Transaction@1000 : Boolean);
    VAR
      Action@1002 : Text[30];
    BEGIN
      IF Transaction THEN
        Action := Text004
      ELSE
        Action := Text005;
      ERROR(Text006,Action,Cust2."No.",Cust2.Blocked);
    END;

    PROCEDURE DisplayMap@8();
    VAR
      MapPoint@1001 : Record 800;
      MapMgt@1000 : Codeunit 802;
    BEGIN
      IF MapPoint.FINDFIRST THEN
        MapMgt.MakeSelection(DATABASE::Customer,GETPOSITION)
      ELSE
        MESSAGE(Text014);
    END;

    PROCEDURE GetTotalAmountLCY@10() : Decimal;
    BEGIN
      CALCFIELDS("Balance (LCY)","Outstanding Orders (LCY)","Shipped Not Invoiced (LCY)","Outstanding Invoices (LCY)",
        "Outstanding Serv. Orders (LCY)","Serv Shipped Not Invoiced(LCY)","Outstanding Serv.Invoices(LCY)");

      EXIT(GetTotalAmountLCYCommon);
    END;

    PROCEDURE GetTotalAmountLCYUI@16() : Decimal;
    BEGIN
      SETAUTOCALCFIELDS("Balance (LCY)","Outstanding Orders (LCY)","Shipped Not Invoiced (LCY)","Outstanding Invoices (LCY)",
        "Outstanding Serv. Orders (LCY)","Serv Shipped Not Invoiced(LCY)","Outstanding Serv.Invoices(LCY)");

      EXIT(GetTotalAmountLCYCommon);
    END;

    LOCAL PROCEDURE GetTotalAmountLCYCommon@17() : Decimal;
    VAR
      SalesLine@1000 : Record 37;
      ServiceLine@1002 : Record 5902;
      SalesOutstandingAmountFromShipment@1001 : Decimal;
      ServOutstandingAmountFromShipment@1003 : Decimal;
      InvoicedPrepmtAmountLCY@1004 : Decimal;
    BEGIN
      SalesOutstandingAmountFromShipment := SalesLine.OutstandingInvoiceAmountFromShipment("No.");
      ServOutstandingAmountFromShipment := ServiceLine.OutstandingInvoiceAmountFromShipment("No.");
      InvoicedPrepmtAmountLCY := GetInvoicedPrepmtAmountLCY;

      EXIT("Balance (LCY)" + "Outstanding Orders (LCY)" + "Shipped Not Invoiced (LCY)" + "Outstanding Invoices (LCY)" +
        "Outstanding Serv. Orders (LCY)" + "Serv Shipped Not Invoiced(LCY)" + "Outstanding Serv.Invoices(LCY)" -
        SalesOutstandingAmountFromShipment - ServOutstandingAmountFromShipment - InvoicedPrepmtAmountLCY);
    END;

    PROCEDURE GetSalesLCY@13() : Decimal;
    VAR
      CustomerSalesYTD@1005 : Record 18;
      AccountingPeriod@1004 : Record 50;
      StartDate@1001 : Date;
      EndDate@1000 : Date;
    BEGIN
      StartDate := AccountingPeriod.GetFiscalYearStartDate(WORKDATE);
      EndDate := AccountingPeriod.GetFiscalYearEndDate(WORKDATE);
      CustomerSalesYTD := Rec;
      CustomerSalesYTD."SECURITYFILTERING"("SECURITYFILTERING");
      CustomerSalesYTD.SETRANGE("Date Filter",StartDate,EndDate);
      CustomerSalesYTD.CALCFIELDS("Sales (LCY)");
      EXIT(CustomerSalesYTD."Sales (LCY)");
    END;

    PROCEDURE CalcAvailableCredit@9() : Decimal;
    BEGIN
      EXIT(CalcAvailableCreditCommon(FALSE));
    END;

    PROCEDURE CalcAvailableCreditUI@15() : Decimal;
    BEGIN
      EXIT(CalcAvailableCreditCommon(TRUE));
    END;

    LOCAL PROCEDURE CalcAvailableCreditCommon@14(CalledFromUI@1000 : Boolean) : Decimal;
    BEGIN
      IF "Credit Limit (LCY)" = 0 THEN
        EXIT(0);
      IF CalledFromUI THEN
        EXIT("Credit Limit (LCY)" - GetTotalAmountLCYUI);
      EXIT("Credit Limit (LCY)" - GetTotalAmountLCY);
    END;

    PROCEDURE CalcOverdueBalance@11() OverDueBalance : Decimal;
    VAR
      CustLedgEntryRemainAmtQuery@1000 : Query 21 SECURITYFILTERING(Filtered);
    BEGIN
      CustLedgEntryRemainAmtQuery.SETRANGE(Customer_No,"No.");
      CustLedgEntryRemainAmtQuery.SETRANGE(IsOpen,TRUE);
      CustLedgEntryRemainAmtQuery.SETFILTER(Due_Date,'<%1',WORKDATE);
      CustLedgEntryRemainAmtQuery.OPEN;

      IF CustLedgEntryRemainAmtQuery.READ THEN
        OverDueBalance := CustLedgEntryRemainAmtQuery.Sum_Remaining_Amt_LCY;
    END;

    PROCEDURE GetLegalEntityType@6() : Text;
    BEGIN
      EXIT(FORMAT("Partner Type"));
    END;

    PROCEDURE GetLegalEntityTypeLbl@26() : Text;
    BEGIN
      EXIT(FIELDCAPTION("Partner Type"));
    END;

    PROCEDURE SetStyle@12() : Text;
    BEGIN
      IF CalcAvailableCredit < 0 THEN
        EXIT('Unfavorable');
      EXIT('');
    END;

    PROCEDURE HasValidDDMandate@23(Date@1000 : Date) : Boolean;
    VAR
      SEPADirectDebitMandate@1001 : Record 1230;
    BEGIN
      EXIT(SEPADirectDebitMandate.GetDefaultMandate("No.",Date) <> '');
    END;

    PROCEDURE GetInvoicedPrepmtAmountLCY@18() : Decimal;
    VAR
      SalesLine@1000 : Record 37;
    BEGIN
      SalesLine.SETCURRENTKEY("Document Type","Bill-to Customer No.");
      SalesLine.SETRANGE("Document Type",SalesLine."Document Type"::Order);
      SalesLine.SETRANGE("Bill-to Customer No.","No.");
      SalesLine.CALCSUMS("Prepmt. Amount Inv. (LCY)","Prepmt. VAT Amount Inv. (LCY)");
      EXIT(SalesLine."Prepmt. Amount Inv. (LCY)" + SalesLine."Prepmt. VAT Amount Inv. (LCY)");
    END;

    PROCEDURE CalcCreditLimitLCYExpendedPct@19() : Decimal;
    BEGIN
      IF "Credit Limit (LCY)" = 0 THEN
        EXIT(0);

      IF "Balance (LCY)" / "Credit Limit (LCY)" < 0 THEN
        EXIT(0);

      IF "Balance (LCY)" / "Credit Limit (LCY)" > 1 THEN
        EXIT(10000);

      EXIT(ROUND("Balance (LCY)" / "Credit Limit (LCY)" * 10000,1));
    END;

    PROCEDURE CreateAndShowNewInvoice@21();
    VAR
      SalesHeader@1000 : Record 36;
    BEGIN
      SalesHeader."Document Type" := SalesHeader."Document Type"::Invoice;
      SalesHeader.SETRANGE("Sell-to Customer No.","No.");
      SalesHeader.INSERT(TRUE);
      COMMIT;
      PAGE.RUN(PAGE::"Sales Invoice",SalesHeader)
    END;

    PROCEDURE CreateAndShowNewOrder@30();
    VAR
      SalesHeader@1000 : Record 36;
    BEGIN
      SalesHeader."Document Type" := SalesHeader."Document Type"::Order;
      SalesHeader.SETRANGE("Sell-to Customer No.","No.");
      SalesHeader.INSERT(TRUE);
      COMMIT;
      PAGE.RUN(PAGE::"Sales Order",SalesHeader)
    END;

    PROCEDURE CreateAndShowNewCreditMemo@22();
    VAR
      SalesHeader@1000 : Record 36;
    BEGIN
      SalesHeader."Document Type" := SalesHeader."Document Type"::"Credit Memo";
      SalesHeader.SETRANGE("Sell-to Customer No.","No.");
      SalesHeader.INSERT(TRUE);
      COMMIT;
      PAGE.RUN(PAGE::"Sales Credit Memo",SalesHeader)
    END;

    PROCEDURE CreateAndShowNewQuote@24();
    VAR
      SalesHeader@1000 : Record 36;
    BEGIN
      SalesHeader."Document Type" := SalesHeader."Document Type"::Quote;
      SalesHeader.SETRANGE("Sell-to Customer No.","No.");
      SalesHeader.INSERT(TRUE);
      COMMIT;
      PAGE.RUN(PAGE::"Sales Quote",SalesHeader)
    END;

    LOCAL PROCEDURE UpdatePaymentTolerance@20(UseDialog@1000 : Boolean);
    BEGIN
      IF "Block Payment Tolerance" THEN BEGIN
        IF UseDialog THEN
          IF NOT CONFIRM(RemovePaymentRoleranceQst,FALSE) THEN
            EXIT;
        PaymentToleranceMgt.DelTolCustLedgEntry(Rec);
      END ELSE BEGIN
        IF UseDialog THEN
          IF NOT CONFIRM(AllowPaymentToleranceQst,FALSE) THEN
            EXIT;
        PaymentToleranceMgt.CalcTolCustLedgEntry(Rec);
      END;
    END;

    PROCEDURE CopyFromVendor@1210000(VAR Cust@1210000 : Record 18);
    VAR
      Vend@1210001 : Record 23;
      Text12400@1210002 : TextConst 'ENU=Copy General information\from Vendor %3 (%4)\to Customer %2 (%1)?;RUS=Копировать общую информацию\от поставщика %3 (%4)\клиенту %2 (%1)?';
    BEGIN
      Cust.TESTFIELD("Vendor No.");
      Cust.CALCFIELDS("Vendor Name");

      IF Vend.GET("Vendor No.") THEN BEGIN
        IF CONFIRM(Text12400,TRUE,Name,"No.","Vendor No.","Vendor Name") THEN BEGIN
          Cust.GET("No.");
          Cust.Name := Vend.Name;
          Cust."Search Name" := Vend."Search Name";
          Cust."Name 2" := Vend."Name 2";
          Cust."Name ENG" := Vend."Name ENG"; // NC NOS-26 SPA
          Cust.Address := Vend.Address;
          Cust."Address 2" := Vend."Address 2";
          Cust.City := Vend.City;
          Cust.Contact := Vend.Contact;
          Cust."Phone No." := Vend."Phone No.";
          Cust."Telex No." := Vend."Telex No.";
          Cust."Fax No." := Vend."Fax No.";
          Cust."E-Mail" := Vend."E-Mail";
          Cust."Home Page" := Vend."Home Page";
          Cust."Post Code" := Vend."Post Code";
          Cust.County := Vend.County;
          Cust."Vendor No." := Vend."No.";
          Cust."VAT Registration No." := Vend."VAT Registration No.";
          Cust.MODIFY;
        END;
      END;
    END;

    PROCEDURE CheckPrepaymentDocNo@1210002(VAR GenJnlLine@1210000 : Record 81;Post@1210002 : Boolean);
    VAR
      SalesHeader@1210001 : Record 36;
    BEGIN

      //NC OAM28 > DP
      //Отключение проверки документа по авансу
      EXIT;
      //NC OAM28 < DP

      WITH GenJnlLine DO BEGIN
        TESTFIELD("External Document No.");
        TESTFIELD("Prepayment Document No.");
        IF NOT SalesHeader.GET(SalesHeader."Document Type"::Order,"Prepayment Document No.") THEN
          SalesHeader.GET(SalesHeader."Document Type"::Invoice,"Prepayment Document No.");
        SalesHeader.TESTFIELD("Bill-to Customer No.","Account No.");
        SalesHeader.TESTFIELD(Status,SalesHeader.Status::Released);
        IF "Agreement No." <> '' THEN
          TESTFIELD("Agreement No.",SalesHeader."Agreement No.");
        IF NOT Post THEN
          IF Amount = 0 THEN BEGIN
            VALIDATE("Currency Code",SalesHeader."Currency Code");
            SalesHeader.CALCFIELDS("Amount Including VAT");
            VALIDATE(Amount,-SalesHeader."Amount Including VAT");
            IF ("Agreement No." = '') AND (SalesHeader."Agreement No." <> '') THEN
              VALIDATE("Agreement No.",SalesHeader."Agreement No.");
          END;
      END;
    END;

    PROCEDURE CollectPrepayments@1210003(CustNo@1210008 : Code[20];DocNo@1210006 : Code[20];VAR TempCustLedgEntry@1210001 : TEMPORARY Record 21);
    VAR
      CustLedgEntry@1210002 : Record 21;
      DtldCustLedgEntry@1210003 : Record 379;
      DtldCustLedgEntry1@1210004 : Record 379;
      CustLedgEntry1@1210005 : Record 21;
    BEGIN
      WITH TempCustLedgEntry DO BEGIN
        DELETEALL;
        CustLedgEntry.RESET;
        CustLedgEntry.SETCURRENTKEY("Document No.");
        CustLedgEntry.SETRANGE("Document No.",DocNo);
        CustLedgEntry.SETRANGE("Document Type",CustLedgEntry."Document Type"::Invoice);
        CustLedgEntry.SETRANGE("Customer No.",CustNo);
        IF CustLedgEntry.FINDFIRST THEN BEGIN
          DtldCustLedgEntry.RESET;
          DtldCustLedgEntry.SETCURRENTKEY("Cust. Ledger Entry No.","Entry Type");
          DtldCustLedgEntry.SETRANGE("Cust. Ledger Entry No.",CustLedgEntry."Entry No.");
          DtldCustLedgEntry.SETRANGE("Entry Type",DtldCustLedgEntry."Entry Type"::Application);
          DtldCustLedgEntry.SETRANGE(Unapplied,FALSE);
          IF DtldCustLedgEntry.FINDSET THEN
            REPEAT
              DtldCustLedgEntry1.RESET;
              DtldCustLedgEntry1.SETCURRENTKEY("Transaction No.");
              DtldCustLedgEntry1.SETRANGE("Transaction No.",DtldCustLedgEntry."Transaction No.");
              DtldCustLedgEntry1.SETRANGE("Entry Type",DtldCustLedgEntry1."Entry Type"::Application);
              DtldCustLedgEntry1.SETFILTER("Entry No.",'<>%1',DtldCustLedgEntry."Entry No.");
              IF DtldCustLedgEntry1.FINDSET THEN
                REPEAT
                  CustLedgEntry1.GET(DtldCustLedgEntry1."Cust. Ledger Entry No.");
                  IF CustLedgEntry1.Prepayment THEN BEGIN
                    TempCustLedgEntry := CustLedgEntry1;
                    IF TempCustLedgEntry.INSERT THEN;
                  END;
                UNTIL DtldCustLedgEntry1.NEXT = 0;
            UNTIL DtldCustLedgEntry.NEXT = 0;
        END;
      END;
    END;

    PROCEDURE GetBillToCustomerNo@27() : Code[20];
    BEGIN
      IF "Bill-to Customer No." <> '' THEN
        EXIT("Bill-to Customer No.");
      EXIT("No.");
    END;

    PROCEDURE HasAddress@25() : Boolean;
    BEGIN
      CASE TRUE OF
        Address <> '':
          EXIT(TRUE);
        "Address 2" <> '':
          EXIT(TRUE);
        City <> '':
          EXIT(TRUE);
        "Country/Region Code" <> '':
          EXIT(TRUE);
        County <> '':
          EXIT(TRUE);
        "Post Code" <> '':
          EXIT(TRUE);
        Contact <> '':
          EXIT(TRUE);
      END;

      EXIT(FALSE);
    END;

    PROCEDURE GetCustNo@44(CustomerText@1000 : Text) : Text;
    BEGIN
      EXIT(GetCustNoOpenCard(CustomerText,TRUE));
    END;

    PROCEDURE GetCustNoOpenCard@36(CustomerText@1000 : Text;ShowCustomerCard@1006 : Boolean) : Code[20];
    VAR
      Customer@1001 : Record 18;
      CustomerNo@1002 : Code[20];
      CustomerWithoutQuote@1005 : Text;
      CustomerFilterFromStart@1004 : Text;
      CustomerFilterContains@1003 : Text;
    BEGIN
      IF CustomerText = '' THEN
        EXIT('');

      IF STRLEN(CustomerText) <= MAXSTRLEN(Customer."No.") THEN
        IF Customer.GET(COPYSTR(CustomerText,1,MAXSTRLEN(Customer."No."))) THEN
          EXIT(Customer."No.");

      CustomerWithoutQuote := CONVERTSTR(CustomerText,'''','?');

      Customer.SETFILTER(Name,'''@' + CustomerWithoutQuote + '''');
      IF Customer.FINDFIRST THEN
        EXIT(Customer."No.");
      Customer.SETRANGE(Name);

      CustomerFilterFromStart := '''@' + CustomerWithoutQuote + '*''';

      Customer.FILTERGROUP := -1;
      Customer.SETFILTER("No.",CustomerFilterFromStart);

      Customer.SETFILTER(Name,CustomerFilterFromStart);

      IF Customer.FINDFIRST THEN
        EXIT(Customer."No.");

      CustomerFilterContains := '''@*' + CustomerWithoutQuote + '*''';

      Customer.SETFILTER("No.",CustomerFilterContains);
      Customer.SETFILTER(Name,CustomerFilterContains);
      Customer.SETFILTER(City,CustomerFilterContains);
      Customer.SETFILTER(Contact,CustomerFilterContains);
      Customer.SETFILTER("Phone No.",CustomerFilterContains);
      Customer.SETFILTER("Post Code",CustomerFilterContains);

      IF Customer.COUNT = 0 THEN
        MarkCustomersWithSimilarName(Customer,CustomerText);

      IF Customer.COUNT = 1 THEN BEGIN
        Customer.FINDFIRST;
        EXIT(Customer."No.");
      END;

      IF NOT GUIALLOWED THEN
        ERROR(SelectCustErr);

      IF Customer.COUNT = 0 THEN BEGIN
        IF Customer.WRITEPERMISSION THEN
          CASE STRMENU(
                 STRSUBSTNO(
                   '%1,%2',STRSUBSTNO(CreateNewCustTxt,CONVERTSTR(CustomerText,',','.')),SelectCustTxt),1,CustNotRegisteredTxt) OF
            0:
              ERROR(SelectCustErr);
            1:
              EXIT(CreateNewCustomer(COPYSTR(CustomerText,1,MAXSTRLEN(Customer.Name)),ShowCustomerCard));
          END;
        Customer.RESET;
      END;

      IF ShowCustomerCard THEN
        CustomerNo := PickCustomer(Customer)
      ELSE BEGIN
        LookupRequested := TRUE;
        EXIT('');
      END;

      IF CustomerNo <> '' THEN
        EXIT(CustomerNo);

      ERROR(SelectCustErr);
    END;

    LOCAL PROCEDURE MarkCustomersWithSimilarName@33(VAR Customer@1001 : Record 18;CustomerText@1000 : Text);
    VAR
      TypeHelper@1002 : Codeunit 10;
      CustomerCount@1003 : Integer;
      CustomerTextLenght@1004 : Integer;
      Treshold@1005 : Integer;
    BEGIN
      IF CustomerText = '' THEN
        EXIT;
      IF STRLEN(CustomerText) > MAXSTRLEN(Customer.Name) THEN
        EXIT;
      CustomerTextLenght := STRLEN(CustomerText);
      Treshold := CustomerTextLenght DIV 5;
      IF Treshold = 0 THEN
        EXIT;

      Customer.RESET;
      Customer.ASCENDING(FALSE); // most likely to search for newest customers
      IF Customer.FINDSET THEN
        REPEAT
          CustomerCount += 1;
          IF ABS(CustomerTextLenght - STRLEN(Customer.Name)) <= Treshold THEN
            IF TypeHelper.TextDistance(UPPERCASE(CustomerText),UPPERCASE(Customer.Name)) <= Treshold THEN
              Customer.MARK(TRUE);
        UNTIL Customer.MARK OR (Customer.NEXT = 0) OR (CustomerCount > 1000);
      Customer.MARKEDONLY(TRUE);
    END;

    LOCAL PROCEDURE CreateNewCustomer@28(CustomerName@1000 : Text[50];ShowCustomerCard@1001 : Boolean) : Code[20];
    VAR
      Customer@1005 : Record 18;
      MiniCustomerTemplate@1006 : Record 1300;
      CustomerCard@1002 : Page 21;
    BEGIN
      IF NOT MiniCustomerTemplate.NewCustomerFromTemplate(Customer) THEN
        Customer.INSERT(TRUE);

      Customer.Name := CustomerName;
      Customer.MODIFY(TRUE);
      COMMIT;
      IF NOT ShowCustomerCard THEN
        EXIT(Customer."No.");
      Customer.SETRANGE("No.",Customer."No.");
      CustomerCard.SETTABLEVIEW(Customer);
      IF NOT (CustomerCard.RUNMODAL = ACTION::OK) THEN
        ERROR(SelectCustErr);

      EXIT(Customer."No.");
    END;

    LOCAL PROCEDURE PickCustomer@51(VAR Customer@1000 : Record 18) : Code[20];
    VAR
      CustomerList@1001 : Page 22;
    BEGIN
      IF Customer.FINDSET THEN
        REPEAT
          Customer.MARK(TRUE);
        UNTIL Customer.NEXT = 0;
      IF Customer.FINDFIRST THEN;
      Customer.MARKEDONLY := TRUE;

      CustomerList.SETTABLEVIEW(Customer);
      CustomerList.SETRECORD(Customer);
      CustomerList.LOOKUPMODE := TRUE;
      IF CustomerList.RUNMODAL = ACTION::LookupOK THEN
        CustomerList.GETRECORD(Customer)
      ELSE
        CLEAR(Customer);

      EXIT(Customer."No.");
    END;

    PROCEDURE OpenCustomerLedgerEntries@31(FilterOnDueEntries@1002 : Boolean);
    VAR
      DetailedCustLedgEntry@1001 : Record 379;
      CustLedgerEntry@1000 : Record 21;
    BEGIN
      DetailedCustLedgEntry.SETRANGE("Customer No.","No.");
      COPYFILTER("Global Dimension 1 Filter",DetailedCustLedgEntry."Initial Entry Global Dim. 1");
      COPYFILTER("Global Dimension 2 Filter",DetailedCustLedgEntry."Initial Entry Global Dim. 2");
      IF FilterOnDueEntries AND (GETFILTER("Date Filter") <> '') THEN BEGIN
        COPYFILTER("Date Filter",DetailedCustLedgEntry."Initial Entry Due Date");
        DetailedCustLedgEntry.SETFILTER("Posting Date",'<=%1',GETRANGEMAX("Date Filter"));
      END;
      COPYFILTER("Currency Filter",DetailedCustLedgEntry."Currency Code");
      CustLedgerEntry.DrillDownOnEntries(DetailedCustLedgEntry);
    END;

    PROCEDURE SetInsertFromTemplate@32(FromTemplate@1000 : Boolean);
    BEGIN
      InsertFromTemplate := FromTemplate;
    END;

    PROCEDURE IsLookupRequested@34() Result : Boolean;
    BEGIN
      Result := LookupRequested;
      LookupRequested := FALSE;
    END;

    BEGIN
    {
      NC PIF003 DP Добавлены поля "Extern. ID 1", "Extern. ID 2"
      NC MDB01 PCH Добавлены поля: "Relationship to the Group", "Counterparty Category", "Counterparty Type", Industry, "Customer Segment"
                   DataPerCompany=No
      NC MDB01 PCH Работа с измернием CUSTOMER
      NC MDC04 MP Измерение реальный контрагент
      NC OAM02 DP Создание связанной аналитики с карточкой
      NC MTD04 RD Переименование связанного поставщика
      ------------------------------
      NC BLD01 AIG создан билд, вкл модификации PIF003,MDB01,MDC04,OAM02,MTD04
      NC MTD05 AIG Добавлено поле "Is Open Operations"
      NC OAM04 DP Добавлены поля "Balance at Date","Balance at Date (LCY)"
      NC OAM22 DP Изменено свойство Caption Class полей ..(LCY)
      NC OAM23 DP Изменен код триггера OnDelete
      NC OAM28 DP Отключение проверки по авансовому счету при предоплате
      TD BMN 05.07.2012 jira::APCOC-102 "Создать поле для хранения английского названия контрагента"
      NC BLD01 RD Создан билд. Доработки: LIQEM5.00,NAVRU5.00.01.02,NCBLD01,MTD05,OAM04,OAM22,OAM23,OAM28
      NC NCS-660 RD Добавлено поле Related Counterparty Type Code
      TDRANCS-1030 > Modify OnInsert
      NC S547 PCH добавлено поле Rec ID
      NC MIO14 PCH Перенос доработки синхронизации IC Dimension Value Code с LinkedDim
      NC S1883 PCH Добавлено поле Segment Code
      NC S1881 SPA Добавлены поля "CH Counterparty Code", "Group No.", "Number of Employees"
      NC NCS-1881 PCH Добавлено поле NOGA Code
      NC NCS-2096 AAP Добавлено поле "Pledge Agreement"
      NC NCS-2247 AAP Добавлено поле "C553 Netting contract"
      TDRANCS-2324 added field CRM ID
      TDRANCS-2308 renumered field Resident/Non-resident 50160->50174
      TDRANCS-2273 added perm. TableData Linked Dimension Value=rimd,TableData Vendor=rimd
      --------------------------------------------
      NC MR2017 SPA Доработка кода при переносе на NAV2017
                    Кастомизации триггеров таблицы перенесены в CU 50085
    }
    END.
  }
}

