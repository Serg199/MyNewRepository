OBJECT Codeunit 50032 Cust. & Vend Entries Appy
{
  OBJECT-PROPERTIES
  {
    Date=22.07.16;
    Time=10:47:46;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            IF ContractorType = ContractorType::Customer THEN
              ContragentFormApplicationID := FORM::Page50028
            ELSE
              ContragentFormApplicationID := FORM::Page50029;

            SelectedDim.GetSelectedDim(USERID, 2, ContragentFormApplicationID,'',TempSelectedDimPos);
            SelectedDim.GetSelectedDim(USERID, 2, -ContragentFormApplicationID,'',TempSelectedDimNeg);
            TempSelectedDimPos.SETFILTER("New Dimension Value Code", '<>%1', '');
            TempSelectedDimNeg.SETFILTER("New Dimension Value Code", '<>%1', '');

            IF ContractorType = ContractorType::Customer THEN
              ApplyCustLedgEntry
            ELSE
              ApplyVendLedgEntry;

            MovingDataSetup.GET;
          END;

  }
  CODE
  {
    VAR
      GenJnlPostLine@1000000008 : Codeunit 12;
      Wnd@1000000001 : Dialog;
      TempSelectedDimPos@1000000002 : TEMPORARY Record 369;
      TempSelectedDimNeg@1000000000 : TEMPORARY Record 369;
      SelectedDim@1000000003 : Record 369;
      ContractorType@1000000004 : 'Customer,Vendor';
      ContragentFormApplicationID@1000000005 : Integer;
      ApplicationEntry@1000000006 : Record 339;
      CustLedgerEntry@1000000007 : Record 21;
      VendLedgerEntry@1000000009 : Record 25;
      AppDate@1101495000 : Date;
      AgreementDetail@1101495001 : Record 50096;
      MovingDataSetup@1101495002 : Record 50064;

    PROCEDURE ApplyCustLedgEntry@1210001();
    VAR
      SourceCodeSetup@1210004 : Record 242;
      GenJnlLine@1210003 : Record 81;
      CustLE@1000000003 : Record 21;
      CustLE1@1000000001 : Record 21;
      CustLE2@1000000000 : Record 21;
      EntriesToApply@1000000002 : Record 21;
    BEGIN
      WITH CustLedgerEntry DO BEGIN
        GET("Entry No.");

        {
        ApplicationDate := 0D;
        EntriesToApply.SETCURRENTKEY("Customer No.","Applies-to ID");
        EntriesToApply.SETRANGE("Customer No.","Customer No.");
        EntriesToApply.SETRANGE("Applies-to ID","Applies-to ID");
        EntriesToApply.FINDFIRST;
        REPEAT
          IF EntriesToApply."Posting Date" > ApplicationDate THEN
            ApplicationDate := EntriesToApply."Posting Date";
        UNTIL EntriesToApply.NEXT = 0;
        }
        SourceCodeSetup.GET;

        GenJnlLine.INIT;
        GenJnlLine."Posting Date" := AppDate;
        GenJnlLine."Document No." := "Document No.";
        GenJnlLine."Document Date" := GenJnlLine."Posting Date";
        GenJnlLine."Account Type" := GenJnlLine."Account Type"::Customer;
        GenJnlLine."Account No." := "Customer No.";
        CALCFIELDS("Debit Amount","Credit Amount","Debit Amount (LCY)","Credit Amount (LCY)");
        GenJnlLine.Correction :=
          ("Debit Amount" < 0) OR ("Credit Amount" < 0) OR
          ("Debit Amount (LCY)" < 0) OR ("Credit Amount (LCY)" < 0);
        GenJnlLine."Document Type" := "Document Type";
        GenJnlLine.Description := Description;
        GenJnlLine."Shortcut Dimension 1 Code" := "Global Dimension 1 Code";
        GenJnlLine."Shortcut Dimension 2 Code" := "Global Dimension 2 Code";
        GenJnlLine."Posting Group" := "Customer Posting Group";
        GenJnlLine."Source Type" := GenJnlLine."Source Type"::Customer;
        GenJnlLine."Source No." := "Customer No.";
        GenJnlLine."Source Code" := SourceCodeSetup."Sales Entry Application";
        GenJnlLine."System-Created Entry" := TRUE;
        GenJnlLine.Prepayment := Prepayment;
        GenJnlLine."Agreement No." := "Agreement No.";
        //NC APCOC-104 > RD
        GenJnlLine."Not Translate" := MovingDataSetup."Not Translate Applications";
        //NC APCOC-104 < RD
        //NC APCOC-117 > RD
        GenJnlLine."Not Translate IFRS" := MovingDataSetup."Not Transl. Applications IFRS";
        //NC APCOC-117 < RD

        //NC NCS-1088 > DP
        GenJnlLine."Due Date" := "Due Date";
        //NC NCS-1088 < DP

        AgreementDetail.RESET;
        AgreementDetail.SETRANGE("Source Type", AgreementDetail."Source Type"::Customer);
        AgreementDetail.SETRANGE("Source No.", "Customer No.");
        AgreementDetail.SETRANGE("Agreement No.", "Agreement No.");
        IF AgreementDetail.FINDFIRST THEN
          GenJnlLine."Agreement Condition No." := AgreementDetail."Condition No.";
        //NC S1296 > PCH
        GenJnlLine."Amount Type" := "Amount Type";
        //NC S1296 < PCH

        //NC NCS-2197 > DP
        GenJnlLine."Business Unit Code" := "Business Unit Code";
        //NC NCS-2197 < DP

        GenJnlPostLine.SetApplicationDim(TempSelectedDimPos,TempSelectedDimNeg);

        GenJnlPostLine.CustPostApplyCustLedgEntry(GenJnlLine,CustLedgerEntry);

      END;
    END;

    PROCEDURE ApplyVendLedgEntry@1000000000();
    VAR
      SourceCodeSetup@1210004 : Record 242;
      GenJnlLine@1210003 : Record 81;
      VendLE@1000000003 : Record 25;
      VendLE1@1000000001 : Record 25;
      VendLE2@1000000000 : Record 25;
      EntriesToApply@1000000004 : Record 25;
    BEGIN
      //Добавить код из 227 Кодеюнита
      WITH VendLedgerEntry DO BEGIN

        GET("Entry No.");

        {
        ApplicationDate := 0D;
        EntriesToApply.SETCURRENTKEY("Vendor No.","Applies-to ID");
        EntriesToApply.SETRANGE("Vendor No.","Vendor No.");
        EntriesToApply.SETRANGE("Applies-to ID","Applies-to ID");
        EntriesToApply.FINDFIRST;
        REPEAT
          IF EntriesToApply."Posting Date" > ApplicationDate THEN
            ApplicationDate := EntriesToApply."Posting Date";
        UNTIL EntriesToApply.NEXT = 0;
        }
        SourceCodeSetup.GET;

        GenJnlLine.INIT;
        GenJnlLine."Posting Date" := AppDate;
        GenJnlLine."Document No." := "Document No.";

        GenJnlLine."Document Date" := GenJnlLine."Posting Date";
        GenJnlLine."Account Type" := GenJnlLine."Account Type"::Vendor;
        GenJnlLine."Account No." := "Vendor No.";
        CALCFIELDS("Debit Amount","Credit Amount","Debit Amount (LCY)","Credit Amount (LCY)");
        GenJnlLine.Correction :=
          ("Debit Amount" < 0) OR ("Credit Amount" < 0) OR
          ("Debit Amount (LCY)" < 0) OR ("Credit Amount (LCY)" < 0);
        GenJnlLine."Document Type" := "Document Type";
        GenJnlLine.Description := Description;
        GenJnlLine."Shortcut Dimension 1 Code" := "Global Dimension 1 Code";
        GenJnlLine."Shortcut Dimension 2 Code" := "Global Dimension 2 Code";
        GenJnlLine."Posting Group" := "Vendor Posting Group";
        GenJnlLine."Source Type" := GenJnlLine."Source Type"::Vendor;
        GenJnlLine."Source No." := "Vendor No.";
        GenJnlLine."Source Code" := SourceCodeSetup."Purchase Entry Application";
        GenJnlLine."System-Created Entry" := TRUE;
        GenJnlLine."Vendor VAT Invoice No." := "Vendor VAT Invoice No.";
        GenJnlLine."Vendor VAT Invoice Date" := "Vendor VAT Invoice Date";
        GenJnlLine."Vendor VAT Invoice Rcvd Date" := "Vendor VAT Invoice Rcvd Date";
        GenJnlLine.Prepayment := Prepayment;
        GenJnlLine."Agreement No." := "Agreement No.";
        //NC APCOC-104 > RD
        GenJnlLine."Not Translate" := MovingDataSetup."Not Translate Applications";
        //NC APCOC-104 < RD
        //NC APCOC-117 > RD
        GenJnlLine."Not Translate IFRS" := MovingDataSetup."Not Transl. Applications IFRS";
        //NC APCOC-117 < RD

        //NC NCS-1088 > DP
        GenJnlLine."Due Date" := "Due Date";
        //NC NCS-1088 < DP

        AgreementDetail.RESET;
        AgreementDetail.SETRANGE("Source Type", AgreementDetail."Source Type"::Vendor);
        AgreementDetail.SETRANGE("Source No.", "Vendor No.");
        AgreementDetail.SETRANGE("Agreement No.", "Agreement No.");
        IF AgreementDetail.FINDFIRST THEN
          GenJnlLine."Agreement Condition No." := AgreementDetail."Condition No.";
        //NC S1296 > PCH
        GenJnlLine."Amount Type" := "Amount Type";
        //NC S1296 < PCH

        //NC NCS-2197 > DP
        GenJnlLine."Business Unit Code" := "Business Unit Code";
        //NC NCS-2197 < DP

        GenJnlPostLine.SetApplicationDim(TempSelectedDimPos,TempSelectedDimNeg);

        GenJnlPostLine.VendPostApplyVendLedgEntry(GenJnlLine,VendLedgerEntry);

      END;
    END;

    PROCEDURE SetContractorType@1000000007(ContractorType_Ext@1000000000 : 'Customer,Vendor');
    BEGIN
      ContractorType := ContractorType_Ext;
    END;

    PROCEDURE SetCustEntry@1000000011(CustEntry_Ext@1000000000 : Record 21);
    BEGIN
      CustLedgerEntry := CustEntry_Ext;
    END;

    PROCEDURE SetVendEntry@1000000016(VendEntry_Ext@1000000000 : Record 25);
    BEGIN
      VendLedgerEntry := VendEntry_Ext;
    END;

    PROCEDURE SetPostingDate@1101495000(PostDate@1000000000 : Date);
    BEGIN
      AppDate := PostDate;
    END;

    BEGIN
    {
      NC APCOC-104 RD Добавлен признак Not Translate
      NC APCOC-104 RD Добавлен признак Not Translate IFRS
      NC NCS-1088 DP Дата Оплаты наследуется с Cust./Vendor Ledger Entry
      NC S1296 PCH протякивание "Amount Type"
      NC NCS-2197 DP Изменены функции ApplyCustLedgEntry, ApplyVendLedgEntry
    }
    END.
  }
}

