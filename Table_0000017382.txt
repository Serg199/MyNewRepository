OBJECT Table 17382 Employee Journal Line
{
  OBJECT-PROPERTIES
  {
    Date=22.05.17;
    Time=12:06:31;
    Modified=Yes;
    Version List=NAVRU8.00,NOS-26;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
               ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
             END;

    CaptionML=[ENU=Employee Journal Line;
               RUS=Строка журнала сотрудников];
  }
  FIELDS
  {
    { 1   ;   ;Journal Template Name;Code10       ;TableRelation="Employee Journal Template";
                                                   CaptionML=[ENU=Journal Template Name;
                                                              RUS=Имя шаблона журнала] }
    { 2   ;   ;Journal Batch Name  ;Code10        ;TableRelation="Employee Journal Batch".Name WHERE (Journal Template Name=FIELD(Journal Template Name));
                                                   CaptionML=[ENU=Journal Batch Name;
                                                              RUS=Код раздела журнала] }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              RUS=Номер строки] }
    { 4   ;   ;Employee No.        ;Code20        ;TableRelation=Employee;
                                                   OnValidate=BEGIN
                                                                Employee.GET("Employee No.");
                                                                "Posting Group" := Employee."Posting Group";
                                                                "Payroll Calc Group" := Employee."Payroll Calc Group";
                                                                "Contract No." := Employee."Contract No.";
                                                                "Person No." := Employee."Person No.";
                                                                IF "Starting Date" = 0D THEN BEGIN
                                                                  "Calendar Code" := Employee."Calendar Code";
                                                                  "Position No." := Employee."Position No.";
                                                                END ELSE
                                                                  IF Employee.GetJobEntry("Employee No.","Starting Date",EmployeeJobEntry) THEN BEGIN
                                                                    "Calendar Code" := EmployeeJobEntry."Calendar Code";
                                                                    "Position No." := EmployeeJobEntry."Position No.";
                                                                  END ELSE
                                                                    FIELDERROR("Starting Date");

                                                                "Relative Person No." := '';
                                                                "Applies-to Entry" := 0;

                                                                CreateDim(
                                                                  DATABASE::Employee,"Employee No.",
                                                                  DATABASE::"Payroll Element","Element Code");
                                                              END;

                                                   CaptionML=[ENU=Employee No.;
                                                              RUS=Код сотрудника];
                                                   NotBlank=Yes }
    { 5   ;   ;Element Code        ;Code20        ;TableRelation="Payroll Element";
                                                   OnValidate=BEGIN
                                                                PayrollElement.GET("Element Code");
                                                                Description := PayrollElement.Description;
                                                                IF PayrollElement."Payroll Posting Group" <> '' THEN
                                                                  VALIDATE("Posting Group",PayrollElement."Payroll Posting Group");

                                                                CreateDim(
                                                                  DATABASE::"Payroll Element","Element Code",
                                                                  DATABASE::Employee,"Employee No.")
                                                              END;

                                                   CaptionML=[ENU=Element Code;
                                                              RUS=Код элемента] }
    { 6   ;   ;Posting Date        ;Date          ;OnValidate=BEGIN
                                                                IF "Posting Date" <> 0D THEN
                                                                  "Period Code" :=
                                                                    PayrollPeriod.PeriodByDate("Posting Date");
                                                              END;

                                                   CaptionML=[ENU=Posting Date;
                                                              RUS=Дата учета] }
    { 7   ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD("Employee No.");
                                                                IF "Starting Date" <> 0D THEN BEGIN
                                                                  IF Employee.GetJobEntry("Employee No.","Starting Date",EmployeeJobEntry) THEN BEGIN
                                                                    "Calendar Code" := EmployeeJobEntry."Calendar Code";
                                                                    "Position No." := EmployeeJobEntry."Position No.";
                                                                  END;
                                                                  PayrollElement.GET("Element Code");
                                                                  IF PayrollElement."Bonus Type" <> 0 THEN
                                                                    "Wage Period From" := PayrollPeriod.PeriodByDate("Starting Date");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Starting Date;
                                                              RUS=Дата начала] }
    { 8   ;   ;Ending Date         ;Date          ;OnValidate=BEGIN
                                                                PayrollElement.GET("Element Code");
                                                                IF PayrollElement."Bonus Type" <> 0 THEN
                                                                  "Wage Period To" := PayrollPeriod.PeriodByDate("Ending Date");
                                                              END;

                                                   CaptionML=[ENU=Ending Date;
                                                              RUS=Дата окончания] }
    { 9   ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              RUS=Сумма];
                                                   DecimalPlaces=0:5 }
    { 10  ;   ;Posting Group       ;Code20        ;TableRelation="Payroll Posting Group";
                                                   CaptionML=[ENU=Posting Group;
                                                              RUS=Учетная группа] }
    { 11  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              RUS=Код валюты] }
    { 12  ;   ;Calendar Code       ;Code10        ;TableRelation="Payroll Calendar";
                                                   CaptionML=[ENU=Calendar Code;
                                                              RUS=Код календаря];
                                                   Editable=No }
    { 13  ;   ;Payroll Calc Group  ;Code10        ;TableRelation="Payroll Calc Group";
                                                   CaptionML=[ENU=Payroll Calc Group;
                                                              RUS=Расчетная группа зарплаты];
                                                   Editable=No }
    { 14  ;   ;Contract No.        ;Code20        ;CaptionML=[ENU=Contract No.;
                                                              RUS=Номер договора];
                                                   Editable=No }
    { 15  ;   ;HR Order No.        ;Code20        ;CaptionML=[ENU=HR Order No.;
                                                              RUS=Номер кадрового приказа] }
    { 16  ;   ;HR Order Date       ;Date          ;CaptionML=[ENU=HR Order Date;
                                                              RUS=Дата кадрового приказа] }
    { 17  ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 19  ;   ;Period Code         ;Code10        ;TableRelation="Payroll Period";
                                                   CaptionML=[ENU=Period Code;
                                                              RUS=Код периода] }
    { 20  ;   ;Position No.        ;Code20        ;TableRelation=Position;
                                                   CaptionML=[ENU=Position No.;
                                                              RUS=Номер позиции];
                                                   Editable=No }
    { 21  ;   ;Person No.          ;Code20        ;TableRelation=Person;
                                                   CaptionML=[ENU=Person No.;
                                                              RUS=Код физ. лица];
                                                   Editable=No }
    { 23  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              RUS=Код ярлыка измерения 1];
                                                   CaptionClass='1,2,1' }
    { 24  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              RUS=Код ярлыка измерения 2];
                                                   CaptionClass='1,2,2' }
    { 25  ;   ;Time Activity Code  ;Code10        ;TableRelation="Time Activity";
                                                   OnValidate=BEGIN
                                                                IF TimeActivity.GET("Time Activity Code") THEN
                                                                  IF ("Element Code" = '') AND (TimeActivity."Element Code" <> '') THEN
                                                                    VALIDATE("Element Code",TimeActivity."Element Code");
                                                              END;

                                                   CaptionML=[ENU=Time Activity Code;
                                                              RUS=Код временной активности] }
    { 26  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              RUS=Кол-во] }
    { 28  ;   ;Post Action         ;Option        ;CaptionML=[ENU=Post Action;
                                                              RUS=Действие при учете];
                                                   OptionCaptionML=[ENU=Add,Update,Close;
                                                                    RUS=Создать,Обновить,Закрыть];
                                                   OptionString=Add,Update,Close }
    { 29  ;   ;Applies-to Entry    ;Integer       ;OnValidate=VAR
                                                                EmployeeLedgEntry@1000 : Record 17413;
                                                              BEGIN
                                                                IF "Applies-to Entry" <> 0 THEN
                                                                  EmployeeLedgEntry.GET("Applies-to Entry");
                                                              END;

                                                   OnLookup=VAR
                                                              EmployeeLedgEntry@1210000 : Record 17413;
                                                              EmployeeLedgEntries@1210001 : Page 17395;
                                                            BEGIN
                                                              IF "Post Action" <> "Post Action"::Add THEN BEGIN
                                                                EmployeeLedgEntry.RESET;
                                                                EmployeeLedgEntry.SETCURRENTKEY("Employee No.","Element Code");
                                                                EmployeeLedgEntry.SETRANGE("Employee No.","Employee No.");
                                                                EmployeeLedgEntry.SETRANGE("Element Code","Element Code");
                                                                EmployeeLedgEntries.SETTABLEVIEW(EmployeeLedgEntry);
                                                                EmployeeLedgEntries.LOOKUPMODE(TRUE);
                                                                IF EmployeeLedgEntries.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                  EmployeeLedgEntries.GETRECORD(EmployeeLedgEntry);
                                                                  VALIDATE("Applies-to Entry",EmployeeLedgEntry."Entry No.");
                                                                END;
                                                              END ELSE
                                                                TESTFIELD("Post Action","Post Action"::Add);
                                                            END;

                                                   CaptionML=[ENU=Applies-to Entry;
                                                              RUS=Примен. к операции] }
    { 30  ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              RUS=Тип документа];
                                                   OptionCaptionML=[ENU=" ,Vacation,Sick Leave,Travel,Other Absence";
                                                                    RUS=" ,Отпуск,Больничный,Командировка,Прочее отсутствие"];
                                                   OptionString=[ ,Vacation,Sick Leave,Travel,Other Absence] }
    { 31  ;   ;Vacation Type       ;Option        ;CaptionML=[ENU=Vacation Type;
                                                              RUS=Тип отпуска];
                                                   OptionCaptionML=[ENU=" ,Regular,Additional,Education,Childcare,Other";
                                                                    RUS=" ,Очередной,Дополнительный,Учебный,По уходу за ребенком,Прочий"];
                                                   OptionString=[ ,Regular,Additional,Education,Childcare,Other] }
    { 32  ;   ;Payment Days        ;Decimal       ;CaptionML=[ENU=Payment Days;
                                                              RUS=Оплачиваемые дни] }
    { 33  ;   ;Payment Percent     ;Decimal       ;CaptionML=[ENU=Payment Percent;
                                                              RUS=Процент оплаты] }
    { 34  ;   ;Sick Leave Type     ;Option        ;CaptionML=[ENU=Sick Leave Type;
                                                              RUS=Тип больничного];
                                                   OptionCaptionML=[ENU=" ,Common Disease,Common Injury,Professional Disease,Work Injury,Family Member Care,Post Vaccination,Quarantine,Sanatory Cure,Pregnancy Leave,Child Care 1.5 years,Child Care 3 years";
                                                                    RUS=" ,Общее заболевание,Общая травма,Проф. заболевание,Произв. травма,Уход за членом семьи,Поствакц. заболевание,Карантин,Санаторное лечение,Беременность,Уход за ребенком до 1.5 лет,Уход за ребенком до 3 лет"];
                                                   OptionString=[ ,Common Disease,Common Injury,Professional Disease,Work Injury,Family Member Care,Post Vaccination,Quarantine,Sanatory Cure,Pregnancy Leave,Child Care 1.5 years,Child Care 3 years] }
    { 35  ;   ;Child Grant Type    ;Option        ;CaptionML=[ENU=Child Grant Type;
                                                              RUS=Тип детского пособия];
                                                   OptionCaptionML=[ENU=0,1,2,3,4,5;
                                                                    RUS=0,1,2,3,4,5];
                                                   OptionString=0,1,2,3,4,5 }
    { 36  ;   ;AE Period From      ;Code10        ;TableRelation="Payroll Period";
                                                   OnValidate=BEGIN
                                                                IF ("AE Period From" <> '') AND ("AE Period To" <> '') THEN
                                                                  IF "AE Period From" > "AE Period To" THEN
                                                                    ERROR(Text001,FIELDCAPTION("AE Period To"),FIELDCAPTION("AE Period From"));

                                                                IF ("Period Code" <> '') AND ("AE Period From" <> '') THEN
                                                                  IF "AE Period From" > "Period Code" THEN
                                                                    ERROR(Text001,FIELDCAPTION("Period Code"),FIELDCAPTION("AE Period From"));
                                                              END;

                                                   CaptionML=[ENU=AE Period From;
                                                              RUS=Период СЗ с] }
    { 37  ;   ;AE Period To        ;Code10        ;TableRelation="Payroll Period";
                                                   OnValidate=BEGIN
                                                                IF ("AE Period From" <> '') AND ("AE Period To" <> '') THEN
                                                                  IF "AE Period From" > "AE Period To" THEN
                                                                    ERROR(Text001,FIELDCAPTION("AE Period To"),FIELDCAPTION("AE Period From"));

                                                                IF ("Period Code" <> '') AND ("AE Period To" <> '') THEN
                                                                  IF "AE Period To" > "Period Code" THEN
                                                                    ERROR(Text001,FIELDCAPTION("Period Code"),FIELDCAPTION("AE Period To"));
                                                              END;

                                                   CaptionML=[ENU=AE Period To;
                                                              RUS=Период СЗ по] }
    { 38  ;   ;Wage Period To      ;Code10        ;TableRelation="Payroll Period";
                                                   CaptionML=[ENU=Wage Period To;
                                                              RUS=Период начисления до] }
    { 39  ;   ;Wage Period From    ;Code10        ;TableRelation="Payroll Period";
                                                   CaptionML=[ENU=Wage Period From;
                                                              RUS=Период начисления от] }
    { 43  ;   ;Days Not Paid       ;Decimal       ;CaptionML=[ENU=Days Not Paid;
                                                              RUS=Неоплачиваемые дни] }
    { 45  ;   ;Relative Person No. ;Code20        ;TableRelation=Person;
                                                   OnLookup=VAR
                                                              EmployeeRelative@1210000 : Record 5205;
                                                            BEGIN
                                                              EmployeeRelative.RESET;
                                                              EmployeeRelative.SETRANGE("Person No.","Person No.");
                                                              IF PAGE.RUNMODAL(0,EmployeeRelative) = ACTION::LookupOK THEN BEGIN
                                                                EmployeeRelative.TESTFIELD("Relative Person No.");
                                                                VALIDATE("Relative Person No.",EmployeeRelative."Relative Person No.");
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Relative Person No.;
                                                              RUS=Код родственника физ. лица] }
    { 46  ;   ;Document No.        ;Code20        ;OnValidate=BEGIN
                                                                IF "HR Order No." = '' THEN
                                                                  "HR Order No." := "Document No.";
                                                              END;

                                                   CaptionML=[ENU=Document No.;
                                                              RUS=Номер документа] }
    { 47  ;   ;Document Date       ;Date          ;OnValidate=BEGIN
                                                                IF "HR Order Date" = 0D THEN
                                                                  "HR Order Date" := "Document Date";
                                                              END;

                                                   CaptionML=[ENU=Document Date;
                                                              RUS=Дата документа] }
    { 48  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              RUS=Код источника];
                                                   Editable=No }
    { 49  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              RUS=Код причины] }
    { 50  ;   ;Posting No. Series  ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=Posting No. Series;
                                                              RUS=Учетная серия номеров] }
    { 51  ;   ;Salary Indexation   ;Boolean       ;CaptionML=[ENU=Salary Indexation;
                                                              RUS=Индексация зарплаты] }
    { 52  ;   ;Depends on Salary Element;Code20   ;TableRelation="Payroll Element" WHERE (Type=CONST(Wage));
                                                   CaptionML=[ENU=Depends on Salary Element;
                                                              RUS=Зависит от зарплатного элемента] }
    { 53  ;   ;Payment Source      ;Option        ;CaptionML=[ENU=Payment Source;
                                                              RUS=Источник оплаты];
                                                   OptionCaptionML=[ENU=Employeer,FSI;
                                                                    RUS=Работодатель,ФСС];
                                                   OptionString=Employeer,FSI }
    { 54  ;   ;Terminated          ;Boolean       ;CaptionML=[ENU=Terminated;
                                                              RUS=Уволен];
                                                   Editable=No }
    { 55  ;   ;External Document No.;Text30       ;CaptionML=[ENU=External Document No.;
                                                              RUS=Номер внешнего документа] }
    { 56  ;   ;External Document Date;Date        ;CaptionML=[ENU=External Document Date;
                                                              RUS=Дата внешнего документа] }
    { 57  ;   ;External Document Issued By;Text50 ;CaptionML=[ENU=External Document Issued By;
                                                              RUS=Внешний документ выдан] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              RUS=Код набора измерений];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Journal Template Name,Journal Batch Name,Line No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Employee@1210006 : Record 5200;
      PayrollElement@1210000 : Record 17400;
      TimeActivity@1210005 : Record 5206;
      EmployeeJnlTemplate@1210001 : Record 17380;
      EmployeeJnlBatch@1210002 : Record 17381;
      EmployeeJnlLine@1210003 : Record 17382;
      PayrollPeriod@1210007 : Record 17426;
      EmployeeJobEntry@1210008 : Record 17363;
      NoSeriesMgt@1210004 : Codeunit 396;
      DimMgt@1210009 : Codeunit 408;
      Text001@1210010 : TextConst 'ENU=%1 should be greater than %2.;RUS=%1 должно быть больше %2.';

    PROCEDURE EmptyLine@5() : Boolean;
    BEGIN
      EXIT(("Employee No." = '') AND ("Element Code" = ''));
    END;

    PROCEDURE SetUpNewLine@8(LastEmployeeJnlLine@1000 : Record 17382);
    BEGIN
      EmployeeJnlTemplate.GET("Journal Template Name");
      EmployeeJnlBatch.GET("Journal Template Name","Journal Batch Name");
      EmployeeJnlLine.SETRANGE("Journal Template Name","Journal Template Name");
      EmployeeJnlLine.SETRANGE("Journal Batch Name","Journal Batch Name");
      IF EmployeeJnlLine.FINDFIRST THEN BEGIN
        "Posting Date" := LastEmployeeJnlLine."Posting Date";
        "HR Order Date" := LastEmployeeJnlLine."Posting Date";
        "HR Order No." := LastEmployeeJnlLine."HR Order No.";
      END ELSE BEGIN
        "Posting Date" := WORKDATE;
        "HR Order Date" := WORKDATE;
        IF EmployeeJnlBatch."No. Series" <> '' THEN BEGIN
          CLEAR(NoSeriesMgt);
          "HR Order No." := NoSeriesMgt.TryGetNextNo(EmployeeJnlBatch."No. Series","Posting Date");
        END;
      END;
      "Source Code" := EmployeeJnlTemplate."Source Code";
      "Reason Code" := EmployeeJnlBatch."Reason Code";
      "Posting No. Series" := EmployeeJnlBatch."Posting No. Series";
    END;

    PROCEDURE ValidateShortcutDimCode@14(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    PROCEDURE LookupShortcutDimCode@18(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
    END;

    PROCEDURE ShowShortcutDimCode@15(VAR ShortcutDimCode@1000 : ARRAY [20] OF Code[20]);
    BEGIN
      DimMgt.GetShortcutDimensions("Dimension Set ID",ShortcutDimCode);
    END;

    PROCEDURE ShowDimensions@41();
    BEGIN
      DimMgt.SetObjectFrom(Rec); // NC NOS-26 SPA
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet2(
          "Dimension Set ID",STRSUBSTNO('%1 %2 %3',"Journal Template Name","Journal Batch Name","Line No."),
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    PROCEDURE CreateDim@13(Type1@1000 : Integer;No1@1001 : Code[20];Type2@1210001 : Integer;No2@1210000 : Code[20]);
    VAR
      TableID@1010 : ARRAY [10] OF Integer;
      No@1011 : ARRAY [10] OF Code[20];
    BEGIN
      TableID[1] := Type1;
      No[1] := No1;
      TableID[2] := Type2;
      No[2] := No2;
      "Shortcut Dimension 1 Code" := '';
      "Shortcut Dimension 2 Code" := '';
      "Dimension Set ID" :=
        DimMgt.GetDefaultDimID(
          TableID,No,"Source Code","Shortcut Dimension 1 Code","Shortcut Dimension 2 Code",0,0);
    END;

    BEGIN
    {
      NC NOS-26 SPA
    }
    END.
  }
}

