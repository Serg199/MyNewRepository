OBJECT Page 14947 VAT Reinstatement Worksheet
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=VAT Reinstatement Worksheet;
               RUS=Журнал восстановления НДС];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table14927;
    PageType=Worksheet;
    SourceTableTemporary=Yes;
    OnOpenPage=BEGIN
                 PeriodType := PeriodType::Month;
                 AmountType := AmountType::"Balance at Date";
                 IF PeriodType = PeriodType::"Accounting Period" THEN
                   FindUserPeriod('')
                 ELSE
                   FindPeriod('');
               END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1470064 ;1   ;ActionGroup;
                      CaptionML=[ENU=Ent&ry;
                                 RUS=Оп&ерация];
                      Image=Entry }
      { 1210006 ;2   ;Action    ;
                      CaptionML=[ENU=Ledger Entry;
                                 RUS=Книга операций];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=No;
                      Image=VendorLedger;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowCVEntry;
                               END;
                                }
      { 1210005 ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=&VAT Entries;
                                 RUS=Операции &НДС];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 315;
                      RunPageView=SORTING(Transaction No.,CV Ledg. Entry No.);
                      RunPageLink=CV Ledg. Entry No.=FIELD(Entry No.);
                      Image=VATLedger }
      { 1210000 ;2   ;Action    ;
                      Name=Dimensions;
                      CaptionML=[ENU=Dimensions;
                                 RUS=Измерения];
                      ApplicationArea=#Basic,#Suite;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1470022 ;1   ;Action    ;
                      CaptionML=[ENU=Previous Period;
                                 RUS=Предыдущий период];
                      ToolTipML=[ENU=Previous Period;
                                 RUS=Предыдущий период];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('<=');
                               END;
                                }
      { 1470021 ;1   ;Action    ;
                      CaptionML=[ENU=Next Period;
                                 RUS=Следующий период];
                      ToolTipML=[ENU=Next Period;
                                 RUS=Следующий период];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('>=');
                               END;
                                }
      { 1470027 ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 RUS=Ф&ункции];
                      Image=Action }
      { 1470028 ;2   ;Action    ;
                      ShortCutKey=Ctrl+F11;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Suggest &Documents;
                                 RUS=Предложить документ&ы];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=MakeOrder;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 SuggestVATReinstLines@1210001 : Report 14972;
                               BEGIN
                                 SuggestVATReinstLines.RUNMODAL;
                                 SuggestVATReinstLines.GetBuffer(Rec);
                               END;
                                }
      { 1210010 ;2   ;Separator  }
      { 1210003 ;2   ;Action    ;
                      ShortCutKey=F9;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Copy Lines to Journal;
                                 RUS=&Копировать строки в журнал];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=SelectLineToApply;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CopySelectionToJnl;
                               END;
                                }
      { 1470042 ;1   ;Action    ;
                      CaptionML=[ENU=&Navigate;
                                 RUS=&Навигатор];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Navigate;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Navigate@1470000 : Page 344;
                               BEGIN
                                 Navigate.SetDoc("Document Date","Document No.");
                                 Navigate.RUN;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1903121901;1;Group  ;
                CaptionML=[ENU=Options;
                           RUS=Параметры] }

    { 1470056;2;Field     ;
                CaptionML=[ENU=View by;
                           RUS=Просмотр по];
                ToolTipML=[ENU=Day;
                           RUS=День];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                 RUS=День,Неделя,Месяц,Квартал,Год,Учетный период];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             IF PeriodType = PeriodType::"Accounting Period" THEN
                               AccountingPerioPeriodTypeOnVal;
                             IF PeriodType = PeriodType::Year THEN
                               YearPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Quarter THEN
                               QuarterPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Month THEN
                               MonthPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Week THEN
                               WeekPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Day THEN
                               DayPeriodTypeOnValidate;
                           END;
                            }

    { 1470058;2;Field     ;
                CaptionML=[ENU=View as;
                           RUS=Просмотр как];
                ToolTipML=[ENU=Net Change;
                           RUS=Оборот];
                OptionCaptionML=[ENU=Net Change,Balance at Date;
                                 RUS=Оборот,Сальдо на дату];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AmountType;
                OnValidate=BEGIN
                             IF AmountType = AmountType::"Balance at Date" THEN
                               BalanceatDateAmountTypeOnValid;
                             IF AmountType = AmountType::"Net Change" THEN
                               NetChangeAmountTypeOnValidate;
                           END;
                            }

    { 1470000;1;Group     ;
                GroupType=Repeater }

    { 1470063;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Date" }

    { 1470047;2;Field     ;
                CaptionML=[ENU=Remaining VAT Amount;
                           RUS=Сумма остатка НДС];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unrealized VAT Amount" - "Realized VAT Amount";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=TRUE;
                OnDrillDown=BEGIN
                              RemVATDrillDown("Entry No.");
                            END;
                             }

    { 1470032;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Realized VAT Amount";
                Editable=FALSE }

    { 1470045;2;Field     ;
                SourceExpr="Realized VAT Base";
                Visible=FALSE;
                Editable=FALSE }

    { 1470034;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Unrealized VAT Amount";
                Editable=FALSE }

    { 1470043;2;Field     ;
                SourceExpr="Unrealized VAT Base";
                Visible=FALSE;
                Editable=FALSE }

    { 1470005;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Date";
                Editable=FALSE }

    { 1470007;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Type";
                Editable=FALSE }

    { 1470009;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document No.";
                Editable=FALSE }

    { 1470053;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="External Document No.";
                Editable=FALSE }

    { 1470003;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="CV No.";
                Editable=FALSE }

    { 1210011;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="CV Name" }

    { 1470011;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                Editable=FALSE }

    { 1470036;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor VAT Invoice No." }

    { 1470049;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor VAT Invoice Date" }

    { 1470051;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor VAT Invoice Rcvd Date" }

    { 1470015;2;Field     ;
                CaptionML=[ENU=Amount Incl. VAT;
                           RUS=Сумма с учетом НДС];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Amount (LCY)";
                Editable=FALSE }

    { 1470017;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Remaining Amt. (LCY)";
                Editable=FALSE }

    { 1470019;2;Field     ;
                SourceExpr="Transaction No.";
                Visible=FALSE }

    { 1470001;2;Field     ;
                SourceExpr="Entry No.";
                Visible=FALSE;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      UserSetup@1210001 : Record 91;
      PeriodType@1470005 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      AmountType@1470004 : 'Net Change,Balance at Date';
      Text001@1210002 : TextConst 'ENU=There is nothing to post.;RUS=Здесь нечего учитывать.';

    LOCAL PROCEDURE FindPeriod@1(SearchText@1210000 : Code[10]);
    VAR
      Calendar@1210001 : Record 2000000007;
      PeriodFormManagement@1210003 : Codeunit 359;
    BEGIN
      IF GETFILTER("Date Filter") <> '' THEN BEGIN
        Calendar.SETFILTER("Period Start",GETFILTER("Date Filter"));
        IF NOT PeriodFormManagement.FindDate('+',Calendar,PeriodType) THEN
          PeriodFormManagement.FindDate('+',Calendar,PeriodType::Day);
        Calendar.SETRANGE("Period Start");
      END;
      PeriodFormManagement.FindDate(SearchText,Calendar,PeriodType);
      IF Calendar."Period Start" = Calendar."Period End" THEN BEGIN
        IF AmountType = AmountType::"Net Change" THEN
          SETRANGE("Date Filter",Calendar."Period Start")
        ELSE
          SETRANGE("Date Filter",0D,Calendar."Period Start");
      END ELSE
        IF AmountType = AmountType::"Net Change" THEN
          SETRANGE("Date Filter",Calendar."Period Start",Calendar."Period End")
        ELSE
          SETRANGE("Date Filter",0D,Calendar."Period End");
    END;

    LOCAL PROCEDURE FindUserPeriod@3(SearchText@1210000 : Code[10]);
    VAR
      Calendar@1210001 : Record 2000000007;
      PeriodFormManagement@1210003 : Codeunit 359;
    BEGIN
      IF UserSetup.GET(USERID) THEN BEGIN
        SETRANGE("Date Filter",UserSetup."Allow Posting From",UserSetup."Allow Posting To");
        IF GETRANGEMIN("Date Filter") = GETRANGEMAX("Date Filter") THEN
          SETRANGE("Date Filter",GETRANGEMIN("Date Filter"));
      END ELSE BEGIN
        IF GETFILTER("Date Filter") <> '' THEN BEGIN
          Calendar.SETFILTER("Period Start",GETFILTER("Date Filter"));
          IF NOT PeriodFormManagement.FindDate('+',Calendar,PeriodType) THEN
            PeriodFormManagement.FindDate('+',Calendar,PeriodType::Day);
          Calendar.SETRANGE("Period Start");
        END;
        PeriodFormManagement.FindDate(SearchText,Calendar,PeriodType);
        SETRANGE("Date Filter",Calendar."Period Start",Calendar."Period End");
        IF GETRANGEMIN("Date Filter") = GETRANGEMAX("Date Filter") THEN
          SETRANGE("Date Filter",GETRANGEMIN("Date Filter"));
      END;
    END;

    PROCEDURE RemVATDrillDown@1470003(CVEntryNo@1470002 : Integer);
    VAR
      VATEntry@1210000 : Record 254;
      VATEntries@1470000 : Page 315;
    BEGIN
      VATEntry.SETRANGE("CV Ledg. Entry No.",CVEntryNo);
      VATEntry.SETRANGE("Unrealized VAT Entry No.",0);
      VATEntry.SETFILTER("Remaining Unrealized Amount",'<>%1',0);
      VATEntry.SETFILTER("VAT Settlement Type",GETFILTER("Type Filter"));
      VATEntry.SETRANGE("Manual VAT Settlement",TRUE);
      VATEntry.SETFILTER("VAT Bus. Posting Group",GETFILTER("VAT Bus. Posting Group Filter"));
      VATEntry.SETFILTER("VAT Prod. Posting Group",GETFILTER("VAT Prod. Posting Group Filter"));
      VATEntries.SETTABLEVIEW(VATEntry);
      VATEntries.RUNMODAL;
    END;

    PROCEDURE CopySelectionToJnl@1210000();
    VAR
      LineToCopy@1210001 : TEMPORARY Record 14927;
      VATEntry@1210003 : Record 254;
      Filters@1210004 : Record 14927;
      CurrRec@1210005 : Record 14927;
      CopyToVATReinstJournal@1210000 : Report 14973;
    BEGIN
      CurrRec := Rec;
      Filters.COPYFILTERS(Rec);
      CurrPage.SETSELECTIONFILTER(Rec);
      IF FINDSET THEN
        REPEAT
          LineToCopy := Rec;
          LineToCopy.INSERT;
        UNTIL NEXT = 0;
      Rec := CurrRec;
      RESET;
      COPYFILTERS(Filters);

      LineToCopy.RESET;
      LineToCopy.SETFILTER("Type Filter",GETFILTER("Type Filter"));
      LineToCopy.SETFILTER("Date Filter",GETFILTER("Date Filter"));
      VATEntry.SETFILTER("VAT Bus. Posting Group",GETFILTER("VAT Bus. Posting Group Filter"));
      VATEntry.SETFILTER("VAT Prod. Posting Group",GETFILTER("VAT Prod. Posting Group Filter"));
      IF LineToCopy.ISEMPTY THEN
        ERROR(Text001);
      CopyToVATReinstJournal.SetParameters(LineToCopy,VATEntry,LineToCopy.GETRANGEMAX("Date Filter"));
      CopyToVATReinstJournal.RUNMODAL;
      LineToCopy.RESET;
      LineToCopy.DELETEALL;
    END;

    LOCAL PROCEDURE AccountingPerioPeriodTypOnPush@19038761();
    BEGIN
      FindUserPeriod('');
    END;

    LOCAL PROCEDURE YearPeriodTypeOnPush@19051042();
    BEGIN
      FindPeriod('');
    END;

    LOCAL PROCEDURE QuarterPeriodTypeOnPush@19018850();
    BEGIN
      FindPeriod('');
    END;

    LOCAL PROCEDURE MonthPeriodTypeOnPush@19047374();
    BEGIN
      FindPeriod('');
    END;

    LOCAL PROCEDURE WeekPeriodTypeOnPush@19046063();
    BEGIN
      FindPeriod('');
    END;

    LOCAL PROCEDURE DayPeriodTypeOnPush@19008851();
    BEGIN
      FindPeriod('');
    END;

    LOCAL PROCEDURE BalanceatDateAmountTypeOnPush@19049003();
    BEGIN
      FindPeriod('');
    END;

    LOCAL PROCEDURE NetChangeAmountTypeOnPush@19074855();
    BEGIN
      FindPeriod('');
    END;

    LOCAL PROCEDURE DayPeriodTypeOnValidate@19012979();
    BEGIN
      DayPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE WeekPeriodTypeOnValidate@19058475();
    BEGIN
      WeekPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE MonthPeriodTypeOnValidate@19021027();
    BEGIN
      MonthPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE QuarterPeriodTypeOnValidate@19015346();
    BEGIN
      QuarterPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE YearPeriodTypeOnValidate@19064743();
    BEGIN
      YearPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE AccountingPerioPeriodTypeOnVal@19058901();
    BEGIN
      AccountingPerioPeriodTypOnPush;
    END;

    LOCAL PROCEDURE NetChangeAmountTypeOnValidate@19062218();
    BEGIN
      NetChangeAmountTypeOnPush;
    END;

    LOCAL PROCEDURE BalanceatDateAmountTypeOnValid@19007073();
    BEGIN
      BalanceatDateAmountTypeOnPush;
    END;

    BEGIN
    END.
  }
}

