OBJECT Table 17201 Tax Register Line Setup
{
  OBJECT-PROPERTIES
  {
    Date=18.12.13;
    Time=12:00:00;
    Version List=NAVRU7.10;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TaxRegSection.GET("Section Code");
               TaxRegSection.ValidateChangeDeclaration;
             END;

    OnModify=BEGIN
               TaxRegSection.GET("Section Code");
               TaxRegSection.ValidateChangeDeclaration;
             END;

    OnDelete=BEGIN
               TaxRegSection.GET("Section Code");
               TaxRegSection.ValidateChangeDeclaration;

               TaxRegDimFilter.SETRANGE("Section Code","Section Code");
               TaxRegDimFilter.SETRANGE("Tax Register No.","Tax Register No.");
               TaxRegDimFilter.SETRANGE(Define,TaxRegDimFilter.Define::"Entry Setup");
               TaxRegDimFilter.SETRANGE("Line No.","Line No.");
               TaxRegDimFilter.DELETEALL(TRUE);

               TaxRegDimComb.SETRANGE("Section Code","Section Code");
               TaxRegDimComb.SETRANGE("Tax Register No.","Tax Register No.");
               TaxRegDimComb.SETRANGE("Line No.","Line No.");
               TaxRegDimComb.DELETEALL(TRUE);
             END;

    CaptionML=[ENU=Tax Register Line Setup;
               RUS=Настройка строк налогового регистра];
    LookupPageID=Page17211;
  }
  FIELDS
  {
    { 1   ;   ;Tax Register No.    ;Code10        ;TableRelation="Tax Register".No.;
                                                   CaptionML=[ENU=Tax Register No.;
                                                              RUS=Код налог. регистра] }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              RUS=Номер строки] }
    { 5   ;   ;Account Type        ;Option        ;OnValidate=BEGIN
                                                                IF "Check Exist Entry" <> "Check Exist Entry"::" " THEN
                                                                  IF "Account Type" <> "Account Type"::"G/L Account" THEN
                                                                    FIELDERROR("Account Type",
                                                                      STRSUBSTNO(Text21000903,"Account Type","Check Exist Entry"));

                                                                IF "Account Type" <> xRec."Account Type" THEN
                                                                  CASE "Account Type" OF
                                                                    "Account Type"::Correspondence:
                                                                      TESTFIELD("Amount Type","Amount Type"::"Net Change");
                                                                    "Account Type"::"G/L Account":
                                                                      TESTFIELD("Bal. Account No.",'');
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=Account Type;
                                                              RUS=Тип счета];
                                                   OptionCaptionML=[ENU=Correspondence,G/L Account;
                                                                    RUS=Корреспонденция,Счет ГК];
                                                   OptionString=Correspondence,G/L Account }
    { 6   ;   ;Account No.         ;Code100       ;TableRelation="G/L Account".No.;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Account No.;
                                                              RUS=Номер счета] }
    { 7   ;   ;Amount Type         ;Option        ;InitValue=Net Change;
                                                   OnValidate=VAR
                                                                SaveAccountNo@1210000 : Code[100];
                                                              BEGIN
                                                                IF "Check Exist Entry" <> "Check Exist Entry"::" " THEN
                                                                  IF "Amount Type" = "Amount Type"::"Net Change" THEN
                                                                    FIELDERROR("Amount Type",
                                                                      STRSUBSTNO(Text21000903,"Amount Type","Check Exist Entry"));
                                                                IF "Amount Type" <> xRec."Amount Type" THEN BEGIN
                                                                  IF ("Account Type" = "Account Type"::Correspondence) AND
                                                                     ("Amount Type" = "Amount Type"::Credit) AND
                                                                     (("Account No." <> '') OR ("Bal. Account No." <> ''))
                                                                  THEN
                                                                    IF CONFIRM(Text21000900,TRUE) THEN BEGIN
                                                                      SaveAccountNo := "Bal. Account No.";
                                                                      "Bal. Account No." := "Account No.";
                                                                      "Account No." := SaveAccountNo;
                                                                    END;
                                                                  CASE "Amount Type" OF
                                                                    "Amount Type"::Debit,
                                                                    "Amount Type"::Credit:
                                                                      TESTFIELD("Account Type","Account Type"::"G/L Account");
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Amount Type;
                                                              RUS=Тип суммы];
                                                   OptionCaptionML=[ENU=Debit,Credit,Net Change;
                                                                    RUS=Дебет,Кредит,Оборот];
                                                   OptionString=Debit,Credit,Net Change }
    { 8   ;   ;Bal. Account No.    ;Code100       ;TableRelation="G/L Account".No.;
                                                   OnValidate=BEGIN
                                                                IF ("Bal. Account No." <> xRec."Bal. Account No.") AND ("Bal. Account No." <> '') THEN
                                                                  TESTFIELD("Account Type","Account Type"::Correspondence);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Bal. Account No.;
                                                              RUS=Номер баланс. счета] }
    { 11  ;   ;Check Exist Entry   ;Option        ;OnValidate=BEGIN
                                                                IF "Check Exist Entry" = "Check Exist Entry"::Item THEN BEGIN
                                                                  TaxReg.GET("Section Code","Tax Register No.");
                                                                  IF TaxReg."Table ID" <> DATABASE::"Tax Register Item Entry" THEN
                                                                    FIELDERROR("Check Exist Entry",
                                                                      STRSUBSTNO(Text21000901,"Check Exist Entry",ItemlLedgEntry.TABLECAPTION));
                                                                  "Account Type" := "Account Type"::"G/L Account";
                                                                  IF "Amount Type" > "Amount Type"::Credit THEN
                                                                    "Amount Type" := "Amount Type"::Debit;
                                                                  "Bal. Account No." := '';
                                                                  "Payroll Source" := "Payroll Source"::" ";
                                                                END;
                                                                IF "Check Exist Entry" = "Check Exist Entry"::Payroll THEN BEGIN
                                                                  TaxReg.GET("Section Code","Tax Register No.");
                                                                  IF TaxReg."Table ID" <> DATABASE::"Tax Register PR Entry" THEN
                                                                    FIELDERROR("Check Exist Entry",
                                                                      STRSUBSTNO(Text21000901,"Check Exist Entry",PayrollLedgEntry.TABLECAPTION));
                                                                  "Account Type" := "Account Type"::"G/L Account";
                                                                  "Amount Type" := "Amount Type"::Debit;
                                                                  "Bal. Account No." := '';
                                                                  IF "Check Exist Entry" <> xRec."Check Exist Entry" THEN
                                                                    "Payroll Source" := "Payroll Source"::Cost;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Check Exist Entry;
                                                              RUS=Проверка существования операции];
                                                   OptionCaptionML=[ENU=" ,Item,Payroll";
                                                                    RUS=" ,Товар,Зарплата"];
                                                   OptionString=[ ,Item,Payroll] }
    { 12  ;   ;Line Code           ;Code10        ;CaptionML=[ENU=Line Code;
                                                              RUS=Код строки] }
    { 13  ;   ;Section Code        ;Code10        ;TableRelation="Tax Register Section";
                                                   CaptionML=[ENU=Section Code;
                                                              RUS=Код секции];
                                                   NotBlank=Yes }
    { 14  ;   ;Dimensions Filters  ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Tax Register Dim. Filter" WHERE (Section Code=FIELD(Section Code),
                                                                                                       Tax Register No.=FIELD(Tax Register No.),
                                                                                                       Define=CONST(Entry Setup),
                                                                                                       Line No.=FIELD(Line No.)));
                                                   CaptionML=[ENU=Dimensions Filters;
                                                              RUS=Фильтры измерений];
                                                   Editable=No }
    { 16  ;   ;Element Type Filter ;Option        ;FieldClass=FlowFilter;
                                                   OnValidate=BEGIN
                                                                IF "Element Type Filter" <> "Element Type Filter"::"31" THEN BEGIN
                                                                  TaxReg.GET("Section Code","Tax Register No.");
                                                                  IF TaxReg."Table ID" <> DATABASE::"Tax Register PR Entry" THEN
                                                                    FIELDERROR("Element Type Filter",
                                                                      STRSUBSTNO(Text21000901,"Element Type Filter",PayrollLedgEntry.TABLECAPTION));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Element Type Filter;
                                                              RUS=Фильтр по типу элемента];
                                                   OptionCaptionML=[ENU=Wage,Bonus,Income Tax,Netto Salary,Tax Deduction,Deduction,Other,Funds,Reporting;
                                                                    RUS=Начисление,Премия,НДФЛ,Зарплата,Налоговый вычет,Удержание,Прочее,Фонды,Отчетность];
                                                   OptionString=Wage,Bonus,Income Tax,Netto Salary,Tax Deduction,Deduction,Other,Funds,Reporting;
                                                   Editable=No }
    { 17  ;   ;G/L Corr. Dimensions Filters;Boolean;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Exist("Tax Reg. G/L Corr. Dim. Filter" WHERE (Section Code=FIELD(Section Code),
                                                                                                             Tax Register No.=FIELD(Tax Register No.),
                                                                                                             Line No.=FIELD(Line No.),
                                                                                                             Define=CONST(Entry Setup)));
                                                   CaptionML=[ENU=G/L Corr. Dimensions Filters;
                                                              RUS=Фильтры изм. по корресп.] }
    { 20  ;   ;Payroll Source      ;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Payroll Source;
                                                              RUS=Источник плат. ведомости];
                                                   OptionCaptionML=[ENU=" ,Cost,Profit,FSI,FOSI";
                                                                    RUS=" ,Себест.,Прибыль,ФСС,ФОМС"];
                                                   OptionString=[ ,Cost,Profit,FSI,FOSI];
                                                   Editable=No }
    { 21  ;   ;Element Type Totaling;Code80       ;OnValidate=BEGIN
                                                                IF "Element Type Totaling" <> '' THEN BEGIN
                                                                  TaxReg.GET("Section Code","Tax Register No.");
                                                                  IF TaxReg."Table ID" <> DATABASE::"Tax Register PR Entry" THEN
                                                                    FIELDERROR("Element Type Totaling",
                                                                      STRSUBSTNO(Text21000901,"Element Type Totaling",PayrollLedgEntry.TABLECAPTION));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Element Type Totaling;
                                                              RUS=Суммирование по типу элемента];
                                                   CharAllowed=0123456789.| }
    { 22  ;   ;Payroll Source Totaling;Code80     ;OnValidate=BEGIN
                                                                IF "Payroll Source Totaling" <> '' THEN BEGIN
                                                                  TaxReg.GET("Section Code","Tax Register No.");
                                                                  IF TaxReg."Table ID" <> DATABASE::"Tax Register PR Entry" THEN
                                                                    FIELDERROR("Payroll Source Totaling",
                                                                      STRSUBSTNO(Text21000901,"Payroll Source Totaling",PayrollLedgEntry.TABLECAPTION));
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Payroll Source Totaling;
                                                              RUS=Суммир. по источнику плат. ведомости] }
    { 23  ;   ;Employee Statistics Group Code;Code80;
                                                   TableRelation="Employee Statistics Group";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Employee Statistics Group Code;
                                                              RUS=Код статистической группы сотрудника] }
    { 24  ;   ;Employee Category Code;Code80      ;TableRelation=Employee;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Employee Category Code;
                                                              RUS=Код категории сотрудника] }
    { 25  ;   ;Payroll Posting Group;Code80       ;TableRelation=Employee;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Payroll Posting Group;
                                                              RUS=Учетные группы зарплаты] }
  }
  KEYS
  {
    {    ;Section Code,Tax Register No.,Line No.  ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      TaxRegSection@1000 : Record 17207;
      Text21000900@1001 : TextConst 'ENU=Exchange Account No. and Bal. Account No.?;RUS=Поменять номер счета и номер баланс. счета?';
      TaxRegDimFilter@1002 : Record 17218;
      ItemlLedgEntry@1003 : Record 32;
      PayrollLedgEntry@1210001 : Record 17418;
      TaxReg@1005 : Record 17200;
      TaxRegDimComb@1021 : Record 17215;
      LookupMgt@1006 : Codeunit 17209;
      Text21000901@1008 : TextConst 'ENU=cannot be %1 if register is not linked to %2.;RUS=невозможно установить равным %1, если регистр не связан с %2.';
      Text21000903@1010 : TextConst 'ENU="cannot be %1 if Check Exist Entry =%2.";RUS="невозможно установить равным %1, если проверка существования операции =%2."';

    PROCEDURE GetGLCorrDimFilter@1210000(DimCode@1210002 : Code[20];FilterGroup@1210000 : 'Debit,Credit') DimFilter : Text[250];
    VAR
      TaxRegGLCorrDimFilter@1210003 : Record 17244;
    BEGIN
      IF TaxRegGLCorrDimFilter.GET("Section Code","Tax Register No.",1,"Line No.",FilterGroup,DimCode) THEN
        DimFilter := TaxRegGLCorrDimFilter."Dimension Value Filter";
    END;

    PROCEDURE FormatElementTypeTotaling@1() : Text[80];
    BEGIN
      EXIT(
        LookupMgt.FormatOptionTotaling(
          DATABASE::"Tax Register Line Setup",FIELDNO("Element Type Filter"),"Element Type Totaling"));
    END;

    PROCEDURE FormatSourcePayTotaling@2() : Text[80];
    BEGIN
      EXIT(
        LookupMgt.FormatOptionTotaling(
          DATABASE::"Tax Register Line Setup",FIELDNO("Payroll Source"),"Payroll Source Totaling"));
    END;

    PROCEDURE LookupElementTypeTotaling@3(VAR Text@1000 : Text[1024]) : Boolean;
    BEGIN
      TaxReg.GET("Section Code","Tax Register No.");
      IF TaxReg."Table ID" <> DATABASE::"Tax Register PR Entry" THEN
        FIELDERROR("Element Type Filter",
          STRSUBSTNO(Text21000901,"Element Type Filter",PayrollLedgEntry.TABLECAPTION));
      EXIT(
        LookupMgt.LookupOptionList(
          DATABASE::"Tax Register Line Setup",FIELDNO("Element Type Filter"),Text));
    END;

    PROCEDURE LookupSourcePayTotaling@4(VAR Text@1000 : Text[1024]) : Boolean;
    BEGIN
      TaxReg.GET("Section Code","Tax Register No.");
      IF TaxReg."Table ID" <> DATABASE::"Tax Register PR Entry" THEN
        FIELDERROR("Payroll Source",
          STRSUBSTNO(Text21000901,"Payroll Source",PayrollLedgEntry.TABLECAPTION));
      EXIT(
        LookupMgt.LookupOptionList(
          DATABASE::"Tax Register Line Setup",FIELDNO("Payroll Source"),Text));
    END;

    PROCEDURE DrillDownElementTypeTotaling@5();
    BEGIN
      TaxReg.GET("Section Code","Tax Register No.");
      IF TaxReg."Table ID" <> DATABASE::"Tax Register PR Entry" THEN
        EXIT;
      LookupMgt.DrillDownOptionList(
        DATABASE::"Tax Register Line Setup",FIELDNO("Element Type Filter"),"Element Type Totaling");
    END;

    PROCEDURE DrillDownSourcePayTotaling@6();
    BEGIN
      TaxReg.GET("Section Code","Tax Register No.");
      IF TaxReg."Table ID" <> DATABASE::"Tax Register PR Entry" THEN
        EXIT;
      LookupMgt.DrillDownOptionList(
        DATABASE::"Tax Register Line Setup",FIELDNO("Payroll Source"),"Payroll Source Totaling");
    END;

    BEGIN
    END.
  }
}

