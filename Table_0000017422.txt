OBJECT Table 17422 Payroll Element Expression
{
  OBJECT-PROPERTIES
  {
    Date=09.09.14;
    Time=12:00:00;
    Version List=NAVRU8.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               PayrollElementExpr2.RESET;
               PayrollElementExpr2.SETRANGE("Element Code","Element Code");
               PayrollElementExpr2.SETRANGE("Period Code","Period Code");
               PayrollElementExpr2.SETRANGE("Calculation Line No.","Calculation Line No.");
               IF PayrollElementExpr2.FINDLAST THEN
                 "Line No." := PayrollElementExpr2."Line No." + 1
               ELSE
                 "Line No." := 1;
             END;

    OnDelete=BEGIN
               PayrollElementExpr2.RESET;
               PayrollElementExpr2.SETRANGE("Element Code","Element Code");
               PayrollElementExpr2.SETRANGE("Period Code","Period Code");
               PayrollElementExpr2.SETRANGE("Calculation Line No.","Calculation Line No.");
               PayrollElementExpr2.SETRANGE("Parent Line No.","Line No.");
               PayrollElementExpr2.DELETEALL(TRUE);
             END;

    CaptionML=[ENU=Payroll Element Expression;
               RUS=Выражение зарплатного элемента];
  }
  FIELDS
  {
    { 1   ;   ;Element Code        ;Code20        ;TableRelation="Payroll Element";
                                                   CaptionML=[ENU=Element Code;
                                                              RUS=Код элемента] }
    { 2   ;   ;Period Code         ;Code10        ;CaptionML=[ENU=Period Code;
                                                              RUS=Код периода] }
    { 3   ;   ;Calculation Line No.;Integer       ;CaptionML=[ENU=Calculation Line No.;
                                                              RUS=Номер строки расчета] }
    { 4   ;   ;Level               ;Integer       ;CaptionML=[ENU=Level;
                                                              RUS=Уровень] }
    { 5   ;   ;Parent Line No.     ;Integer       ;CaptionML=[ENU=Parent Line No.;
                                                              RUS=Номер родительской строки] }
    { 6   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              RUS=Номер строки] }
    { 8   ;   ;Comparison          ;Option        ;CaptionML=[ENU=Comparison;
                                                              RUS=Сравнение];
                                                   OptionCaptionML=[ENU=" ,=0,<>0,>0,<0,>=0,<=0";
                                                                    RUS=" ,=0,<>0,>0,<0,>=0,<=0"];
                                                   OptionString=[ ,=0,<>0,>0,<0,>=0,<=0] }
    { 9   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              RUS=Тип];
                                                   OptionCaptionML=[ENU=Constant,Variable,Field,Expression;
                                                                    RUS=Константа,Переменная,Поле,Выражение];
                                                   OptionString=Constant,Variable,Field,Expression }
    { 10  ;   ;Table No.           ;Integer       ;TableRelation=Object.ID WHERE (Type=CONST(Table),
                                                                                  Company Name=CONST());
                                                   CaptionML=[ENU=Table No.;
                                                              RUS=Номер таблицы];
                                                   Editable=No }
    { 11  ;   ;Table Name          ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Object.Name WHERE (Type=CONST(Table),
                                                                                         Company Name=CONST()));
                                                   CaptionML=[ENU=Table Name;
                                                              RUS=Название таблицы];
                                                   Editable=No }
    { 12  ;   ;Field No.           ;Integer       ;TableRelation=Field.No. WHERE (TableNo=FIELD(Table No.));
                                                   OnValidate=VAR
                                                                FieldName@1210000 : Text[32];
                                                              BEGIN
                                                                CALCFIELDS("Field Name");
                                                                FieldName := "Field Name";
                                                                IF STRPOS(FieldName,' ') > 0 THEN
                                                                  FieldName := STRSUBSTNO('"%1"',FieldName);

                                                                CASE "Source Table" OF
                                                                  "Source Table"::Employee:
                                                                    Expression := STRSUBSTNO(EMPTxt,FieldName);
                                                                  "Source Table"::Person:
                                                                    Expression := STRSUBSTNO(PERTxt,FieldName);
                                                                  "Source Table"::Document:
                                                                    Expression := STRSUBSTNO(DOCTxt,FieldName);
                                                                  "Source Table"::Contract:
                                                                    Expression := STRSUBSTNO(CONTxt,FieldName);
                                                                  "Source Table"::Position:
                                                                    Expression := STRSUBSTNO(POSTxt,FieldName);
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              Field.SETRANGE(TableNo,"Table No.");
                                                              IF "Source Table" = "Source Table"::Document THEN
                                                                Field.SETRANGE(Type,Field.Type::Decimal)
                                                              ELSE
                                                                Field.SETRANGE(Type);
                                                              Field.SETRANGE(Class,Field.Class::Normal,Field.Class::FlowField);
                                                              Fields.SETTABLEVIEW(Field);
                                                              Fields.LOOKUPMODE := TRUE;
                                                              IF Fields.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                Fields.GETRECORD(Field);
                                                                VALIDATE("Field No.",Field."No.");
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Field No.;
                                                              RUS=Номер поля] }
    { 13  ;   ;Field Name          ;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field.FieldName WHERE (TableNo=FIELD(Table No.),
                                                                                             No.=FIELD(Field No.)));
                                                   CaptionML=[ENU=Field Name;
                                                              RUS=Имя поля];
                                                   Editable=No }
    { 14  ;   ;Data Type           ;Option        ;CaptionML=[ENU=Data Type;
                                                              RUS=Тип данных];
                                                   OptionCaptionML=[ENU=" ,Integer,Decimal,Text,Date";
                                                                    RUS=" ,Integer,Decimal,Text,Date"];
                                                   OptionString=[ ,Integer,Decimal,Text,Date] }
    { 15  ;   ;Expression          ;Text250       ;CaptionML=[ENU=Expression;
                                                              RUS=Выражение] }
    { 16  ;   ;Operator            ;Option        ;CaptionML=[ENU=Operator;
                                                              RUS=Оператор];
                                                   OptionCaptionML=[ENU=" ,+,-,*,/,;";
                                                                    RUS=" ,+,-,*,/,;"];
                                                   OptionString=[ ,+,-,*,/,;] }
    { 17  ;   ;Left Bracket        ;Option        ;CaptionML=[ENU=Left Bracket;
                                                              RUS=Левая скобка];
                                                   OptionCaptionML=[ENU=" ,(";
                                                                    RUS=" ,("];
                                                   OptionString=[ ,(] }
    { 18  ;   ;Right Bracket       ;Option        ;CaptionML=[ENU=Right Bracket;
                                                              RUS=Правая скобка];
                                                   OptionCaptionML=[ENU=" ,)";
                                                                    RUS=" ,)"];
                                                   OptionString=[ ,)] }
    { 19  ;   ;Index No.           ;Integer       ;CaptionML=[ENU=Index No.;
                                                              RUS=Номер индекса] }
    { 20  ;   ;Source Table        ;Option        ;OnValidate=BEGIN
                                                                TESTFIELD(Type,Type::Field);

                                                                CASE "Source Table" OF
                                                                  "Source Table"::Document:
                                                                    "Table No." := DATABASE::"Payroll Document Line";
                                                                  "Source Table"::"AE Data":
                                                                    "Table No." := DATABASE::"Payroll Document Line AE";
                                                                  "Source Table"::Employee:
                                                                    "Table No." := DATABASE::Employee;
                                                                  "Source Table"::Person:
                                                                    "Table No." := DATABASE::Person;
                                                                  "Source Table"::Contract:
                                                                    "Table No." := DATABASE::"Labor Contract";
                                                                  "Source Table"::Position:
                                                                    "Table No." := DATABASE::Position;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Source Table;
                                                              RUS=Исходная таблица];
                                                   OptionCaptionML=[ENU=" ,Document,AE Data,Employee,Person,Contract,Position";
                                                                    RUS=" ,Документ,Данные СЗ,Сотрудник,Физ. лицо,Договор,Позиция"];
                                                   OptionString=[ ,Document,AE Data,Employee,Person,Contract,Position] }
    { 22  ;   ;Error Code          ;Code10        ;TableRelation="Payroll Calculation Error";
                                                   CaptionML=[ENU=Error Code;
                                                              RUS=Код ошибки];
                                                   Editable=No }
    { 23  ;   ;Error Text          ;Text50        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Payroll Calculation Error".Description WHERE (Code=FIELD(Error Code)));
                                                   CaptionML=[ENU=Error Text;
                                                              RUS=Сообщение об ошибке];
                                                   Editable=No }
    { 24  ;   ;Assign to Variable  ;Text30        ;OnValidate=BEGIN
                                                                IF ("Assign to Variable" <> '') AND
                                                                   (NOT PayrollElementVariable.GET("Element Code","Period Code","Assign to Variable"))
                                                                THEN BEGIN
                                                                  PayrollElementVariable.INIT;
                                                                  PayrollElementVariable."Element Code" := "Element Code";
                                                                  PayrollElementVariable."Period Code" := "Period Code";
                                                                  PayrollElementVariable.Variable := "Assign to Variable";
                                                                  PayrollElementVariable.INSERT;
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              PayrollElementVariable.RESET;
                                                              PayrollElementVariable.SETRANGE("Element Code","Element Code");
                                                              PayrollElementVariable.SETRANGE("Period Code","Period Code");
                                                              IF PAGE.RUNMODAL(0,PayrollElementVariable) = ACTION::LookupOK THEN
                                                                VALIDATE("Assign to Variable",PayrollElementVariable.Variable);
                                                            END;

                                                   CaptionML=[ENU=Assign to Variable;
                                                              RUS=Переменная для присваивания] }
    { 25  ;   ;Rounding Precision  ;Decimal       ;CaptionML=[ENU=Rounding Precision;
                                                              RUS=Точность округления];
                                                   AutoFormatType=1 }
    { 26  ;   ;Rounding Type       ;Option        ;CaptionML=[ENU=Rounding Type;
                                                              RUS=Тип округления];
                                                   OptionCaptionML=[ENU=Nearest,Up,Down;
                                                                    RUS=Ближайшее,Большее,Меньшее];
                                                   OptionString=Nearest,Up,Down }
    { 27  ;   ;Assign to Field No. ;Integer       ;TableRelation=Field.No. WHERE (TableNo=CONST(17415),
                                                                                  Type=CONST(Decimal),
                                                                                  Class=CONST(Normal));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Assign to Field Name");
                                                              END;

                                                   OnLookup=VAR
                                                              PayrollDocLine@1210000 : Record 17415;
                                                            BEGIN
                                                              Field.SETRANGE(TableNo,DATABASE::"Payroll Document Line");
                                                              Field.SETRANGE(Type,Field.Type::Decimal);
                                                              Field.SETRANGE(Class,Field.Class::Normal);
                                                              Field.SETFILTER("No.",'%1|%2|%3|%4',
                                                                PayrollDocLine.FIELDNO("Payroll Amount"),
                                                                PayrollDocLine.FIELDNO("Taxable Amount"),
                                                                PayrollDocLine.FIELDNO("Corr. Amount"),
                                                                PayrollDocLine.FIELDNO("AE Daily Earnings"));
                                                              Fields.SETTABLEVIEW(Field);
                                                              Fields.LOOKUPMODE := TRUE;
                                                              IF Fields.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                Fields.GETRECORD(Field);
                                                                VALIDATE("Assign to Field No.",Field."No.");
                                                              END;
                                                              CLEAR(Fields);
                                                            END;

                                                   CaptionML=[ENU=Assign to Field No.;
                                                              RUS=Номер поля для присваивания] }
    { 28  ;   ;Assign to Field Name;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field.FieldName WHERE (TableNo=CONST(17415),
                                                                                             No.=FIELD(Assign to Field No.)));
                                                   CaptionML=[ENU=Assign to Field Name;
                                                              RUS=Имя поля для присваивания];
                                                   Editable=No }
    { 30  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 31  ;   ;Logical Suffix      ;Option        ;OnValidate=BEGIN
                                                                TESTFIELD(Level,0);
                                                              END;

                                                   CaptionML=[ENU=Logical Suffix;
                                                              RUS=Логический суффикс];
                                                   OptionCaptionML=[ENU=" ,AND,OR,XOR";
                                                                    RUS=" ,AND,OR,XOR"];
                                                   OptionString=[ ,AND,OR,XOR] }
    { 33  ;   ;Logical Prefix      ;Option        ;CaptionML=[ENU=Logical Prefix;
                                                              RUS=Логический префикс];
                                                   OptionCaptionML=[ENU=" ,NOT";
                                                                    RUS=" ,NOT"];
                                                   OptionString=[ ,NOT] }
  }
  KEYS
  {
    {    ;Element Code,Period Code,Calculation Line No.,Line No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PayrollElementExpr2@1210011 : Record 17422;
      PayrollElementVariable@1210012 : Record 17421;
      Field@1210000 : Record 2000000041;
      ExprMgt@1210007 : Codeunit 17414;
      Fields@1210001 : Page 7702;
      EMPTxt@1210006 : TextConst 'ENU=EMP.%1;RUS=СОТР.%1';
      PERTxt@1210005 : TextConst 'ENU=PER.%1;RUS=ПЕР.%1';
      DOCTxt@1210004 : TextConst 'ENU=DOC.%1;RUS=ДОК.%1';
      CONTxt@1210003 : TextConst 'ENU=CON.%1;RUS=ДОГ.%1';
      POSTxt@1210002 : TextConst 'ENU=POS.%1;RUS=ПОЗ.%1';

    PROCEDURE Compose@1210000() : Text[250];
    VAR
      PayrollElementExpr@1210000 : Record 17422;
      Expr@1210002 : Text[250];
    BEGIN
      Expr := '';
      PayrollElementExpr.RESET;
      PayrollElementExpr.SETRANGE("Element Code","Element Code");
      PayrollElementExpr.SETRANGE("Period Code","Period Code");
      PayrollElementExpr.SETRANGE("Calculation Line No.","Calculation Line No.");
      PayrollElementExpr.SETRANGE(Level,Level + 1);
      PayrollElementExpr.SETRANGE("Parent Line No.","Line No.");
      IF PayrollElementExpr.FINDSET THEN
        REPEAT
          Expr := Expr + ExprMgt.FormatElementStatement(PayrollElementExpr);
        UNTIL PayrollElementExpr.NEXT = 0;

      ExprMgt.CheckParenthesis(Expr);
      Expression := Expr;

      EXIT(Expr);
    END;

    PROCEDURE ExprAssistEdit@1210001();
    VAR
      PayrollElementExpr@1210000 : Record 17422;
      PayrollExpression@1210001 : Page 17436;
      Variables@1210006 : Page 17437;
    BEGIN
      CASE Type OF
        Type::Expression:
          BEGIN
            PayrollElementExpr.RESET;
            PayrollElementExpr.SETRANGE("Element Code","Element Code");
            PayrollElementExpr.SETRANGE("Period Code","Period Code");
            PayrollElementExpr.SETRANGE("Calculation Line No.","Calculation Line No.");
            PayrollElementExpr.SETRANGE(Level,Level + 1);
            PayrollElementExpr.SETRANGE("Parent Line No.","Line No.");

            PayrollExpression.SETTABLEVIEW(PayrollElementExpr);
            PayrollExpression.SetFromElementExpr(Rec);
            PayrollExpression.RUNMODAL;
            CLEAR(PayrollExpression);

            Compose;
          END;
        Type::Variable:
          BEGIN
            PayrollElementVariable.RESET;
            PayrollElementVariable.SETRANGE("Element Code","Element Code");
            PayrollElementVariable.SETRANGE("Period Code","Period Code");
            Variables.SETTABLEVIEW(PayrollElementVariable);
            Variables.LOOKUPMODE(TRUE);
            IF ACTION::LookupOK = Variables.RUNMODAL THEN BEGIN
              Variables.GETRECORD(PayrollElementVariable);
              Expression := PayrollElementVariable.Variable;
            END;
            CLEAR(Variables);
          END;
      END;
    END;

    BEGIN
    END.
  }
}

