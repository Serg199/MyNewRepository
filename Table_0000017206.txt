OBJECT Table 17206 Tax Register Calc. Buffer
{
  OBJECT-PROPERTIES
  {
    Date=18.12.13;
    Time=12:00:00;
    Version List=NAVRU7.10;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Tax Register Calc. Buffer;
               RUS=Буфер расчета налогового регистра];
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              RUS=Номер операции] }
    { 3   ;   ;Term Type           ;Option        ;CaptionML=[ENU=Term Type;
                                                              RUS=Тип термина];
                                                   OptionCaptionML=[ENU=Plus/Minus,Multiply/Divide,Compare,None;
                                                                    RUS=Сложение/вычитание,Умножение/деление,Сравнение,Нет];
                                                   OptionString=Plus/Minus,Multiply/Divide,Compare,None }
    { 4   ;   ;Operation           ;Option        ;CaptionML=[ENU=Operation;
                                                              RUS=Операция];
                                                   OptionCaptionML=[ENU=+,-,*,/,Negative,Zero,Positive,None;
                                                                    RUS=+,-,*,/,Отрицательный,Ноль,Положительный,Нет];
                                                   OptionString=+,-,*,/,Negative,Zero,Positive,None }
    { 5   ;   ;Account Type        ;Option        ;CaptionML=[ENU=Account Type;
                                                              RUS=Тип счета];
                                                   OptionCaptionML=[ENU=Constant,G/L Account,Term,Correspondence,None;
                                                                    RUS=Постоянная,Счет ГК,Условие,Корреспонденция,Нет];
                                                   OptionString=Constant,G/L Account,Term,Correspondence,None }
    { 6   ;   ;Account No.         ;Code100       ;ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Account No.;
                                                              RUS=Номер счета] }
    { 7   ;   ;Amount Type         ;Option        ;CaptionML=[ENU=Amount Type;
                                                              RUS=Тип суммы];
                                                   OptionCaptionML=[ENU=" ,Net Change,Debit,Credit";
                                                                    RUS=" ,Оборот,Дебет,Кредит"];
                                                   OptionString=[ ,Net Change,Debit,Credit] }
    { 8   ;   ;Bal. Account No.    ;Code100       ;ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Bal. Account No.;
                                                              RUS=Номер баланс. счета] }
    { 9   ;   ;Process Sign        ;Option        ;CaptionML=[ENU=Process Sign;
                                                              RUS=Обработка знака];
                                                   OptionCaptionML=[ENU=None,Skip Negative,Skip Positive,Always Positive,Always Negative;
                                                                    RUS=Нет,Обнулить отрицательное,Обнулить положительное,Всегда положительно,Всегда отрицательно];
                                                   OptionString=None,Skip Negative,Skip Positive,Always Positive,Always Negative }
    { 10  ;   ;Template Line No.   ;Integer       ;CaptionML=[ENU=Template Line No.;
                                                              RUS=Номер строки шаблона] }
    { 11  ;   ;Tax Register No.    ;Code10        ;CaptionML=[ENU=Tax Register No.;
                                                              RUS=Код налог. регистра] }
    { 12  ;   ;Description         ;Text150       ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 13  ;   ;Section Code        ;Code10        ;TableRelation="Tax Register Section";
                                                   CaptionML=[ENU=Section Code;
                                                              RUS=Код секции] }
    { 16  ;   ;Line Code           ;Code10        ;CaptionML=[ENU=Line Code;
                                                              RUS=Код строки] }
    { 17  ;   ;Expression Type     ;Option        ;CaptionML=[ENU=Expression Type;
                                                              RUS=Тип выражения];
                                                   OptionCaptionML=[ENU=Term,Link,Total,Header,SumField;
                                                                    RUS=Условие,Ссылка,Сумма,Заголовок,Поле суммы];
                                                   OptionString=Term,Link,Total,Header,SumField }
    { 18  ;   ;Expression          ;Text250       ;CaptionML=[ENU=Expression;
                                                              RUS=Выражение] }
    { 20  ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              RUS=Сумма] }
    { 21  ;   ;Date Filter         ;Text30        ;CaptionML=[ENU=Date Filter;
                                                              RUS=Фильтр по дате] }
    { 22  ;   ;Term Line No.       ;Integer       ;CaptionML=[ENU=Term Line No.;
                                                              RUS=Номер строки термина] }
    { 23  ;   ;Dimensions Filters  ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Tax Register Dim. Filter" WHERE (Section Code=FIELD(Section Code),
                                                                                                       Tax Register No.=FIELD(Tax Register No.),
                                                                                                       Define=CONST(Template),
                                                                                                       Line No.=FIELD(Template Line No.)));
                                                   CaptionML=[ENU=Dimensions Filters;
                                                              RUS=Фильтры измерений];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text1000@1000 : TextConst 'ENU=Filtering only by Global Dimensions.;RUS=Фильтры только по глобальным измерениям.';

    PROCEDURE DrillDownAmount@1();
    VAR
      TaxRegTerm@1000 : Record 17204;
      TaxRegTermFormula@1001 : Record 17205;
      GLEntry@1002 : Record 17;
      GLCorrespondenceEntry@1003 : Record 12401;
      TaxRegAccumulation@1004 : Record 17208;
      TempDimBuf@1005 : TEMPORARY Record 360;
      TempGLEntryGlobalDimFilter@1006 : TEMPORARY Record 17;
      TaxRegTermMgt@1007 : Codeunit 17200;
      NoGlobalDimFilterNeed@1008 : Boolean;
    BEGIN
      IF "Expression Type" = "Expression Type"::Term THEN
        IF TaxRegTerm.GET("Section Code",Expression) THEN
          IF (TaxRegTerm."Expression Type" <> TaxRegTerm."Expression Type"::Compare) AND
             ("Term Type" < "Term Type"::Compare)
          THEN
            IF TaxRegTermFormula.GET("Section Code",Expression,"Term Line No.") THEN BEGIN
              TaxRegTermMgt.CopyTemplateDimFilters(TempDimBuf,"Section Code","Tax Register No.","Template Line No.");
              NoGlobalDimFilterNeed := TaxRegTermMgt.SetDimFilters2GLEntry(TempGLEntryGlobalDimFilter,TempDimBuf);
              IF NoGlobalDimFilterNeed THEN
                MESSAGE(Text1000);
              CASE TaxRegTermFormula."Account Type" OF
                TaxRegTermFormula."Account Type"::"G/L Account":
                  BEGIN
                    GLEntry.RESET;
                    IF TempGLEntryGlobalDimFilter.GETFILTERS = '' THEN BEGIN
                      GLEntry.SETCURRENTKEY("G/L Account No.","Posting Date");
                      GLEntry.SETFILTER("G/L Account No.",TaxRegTermFormula."Account No.");
                      GLEntry.SETFILTER("Posting Date","Date Filter");
                    END ELSE BEGIN
                      GLEntry.SETCURRENTKEY(
                        "G/L Account No.","Business Unit Code",
                        "Global Dimension 1 Code","Global Dimension 2 Code");
                      GLEntry.SETFILTER("G/L Account No.",TaxRegTermFormula."Account No.");
                      TempGLEntryGlobalDimFilter.COPYFILTER(
                        "Global Dimension 1 Code",GLEntry."Global Dimension 1 Code");
                      TempGLEntryGlobalDimFilter.COPYFILTER(
                        "Global Dimension 2 Code",GLEntry."Global Dimension 2 Code");
                    END;
                    GLEntry.SETFILTER("Posting Date","Date Filter");
                    IF TaxRegTermFormula."Amount Type" = TaxRegTermFormula."Amount Type"::Debit THEN
                      GLEntry.SETFILTER("Debit Amount",'<>%1',0);
                    IF TaxRegTermFormula."Amount Type" = TaxRegTermFormula."Amount Type"::Credit THEN
                      GLEntry.SETFILTER("Credit Amount",'<>%1',0);
                    PAGE.RUNMODAL(0,GLEntry);
                  END;
                TaxRegTermFormula."Account Type"::"Net Change":
                  BEGIN
                    GLCorrespondenceEntry.RESET;
                    IF TempGLEntryGlobalDimFilter.GETFILTERS = '' THEN BEGIN
                      GLCorrespondenceEntry.SETCURRENTKEY("Debit Account No.","Credit Account No.");
                      GLCorrespondenceEntry.SETFILTER("Debit Account No.",TaxRegTermFormula."Account No.");
                      GLCorrespondenceEntry.SETFILTER("Credit Account No.",TaxRegTermFormula."Bal. Account No.");
                    END ELSE BEGIN
                      GLCorrespondenceEntry.SETCURRENTKEY(
                        "Debit Account No.","Credit Account No.",
                        "Debit Global Dimension 1 Code","Debit Global Dimension 2 Code",
                        "Business Unit Code","Posting Date");
                      GLCorrespondenceEntry.SETFILTER("Debit Account No.",TaxRegTermFormula."Account No.");
                      GLCorrespondenceEntry.SETFILTER("Credit Account No.",TaxRegTermFormula."Bal. Account No.");
                      TempGLEntryGlobalDimFilter.COPYFILTER(
                        "Global Dimension 1 Code",GLCorrespondenceEntry."Debit Global Dimension 1 Code");
                      TempGLEntryGlobalDimFilter.COPYFILTER(
                        "Global Dimension 2 Code",GLCorrespondenceEntry."Debit Global Dimension 2 Code");
                    END;
                    GLCorrespondenceEntry.SETFILTER("Posting Date","Date Filter");
                    PAGE.RUNMODAL(0,GLCorrespondenceEntry);
                  END;
              END;
            END;
      IF "Expression Type" = "Expression Type"::Total THEN BEGIN
        IF STRPOS("Date Filter",'..') > 0 THEN BEGIN
          IF NOT EVALUATE(TaxRegAccumulation."Starting Date",COPYSTR("Date Filter",1,STRPOS("Date Filter",'..') - 1)) THEN
            EXIT;
          IF NOT EVALUATE(TaxRegAccumulation."Ending Date",COPYSTR("Date Filter",STRPOS("Date Filter",'..') + 2)) THEN
            EXIT;
        END ELSE BEGIN
          IF NOT EVALUATE(TaxRegAccumulation."Ending Date","Date Filter") THEN
            EXIT;
          TaxRegAccumulation."Starting Date" := 0D;
        END;
        TaxRegAccumulation."Template Line No." := "Template Line No.";
        TaxRegAccumulation."Tax Register No." := "Tax Register No.";
        TaxRegAccumulation."Section Code" := "Section Code";
        TaxRegAccumulation.SETRANGE("Date Filter",TaxRegAccumulation."Starting Date",TaxRegAccumulation."Ending Date");
        TaxRegAccumulation.DrillDownAmount;
      END;
    END;

    BEGIN
    END.
  }
}

