OBJECT Codeunit 50023 Load One Closing Operation
{
  OBJECT-PROPERTIES
  {
    Date=14.04.10;
    Time=15:17:51;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    TableNo=50063;
    OnRun=BEGIN
            MovingDataSetup.GET;
            isOK := TRUE;
            RecID := "Record ID";
            IF RecID.TABLENO = 0 THEN
              ERROR(Text001);

            RecRef.OPEN(RecID.TABLENO,FALSE,"Company No.");
            RecRef.GET("Record ID");
            RecRef.SETTABLE(BufferOperationClosing);

            IF BufferOperationClosing."Document ID" = '' THEN BEGIN
              ErrorJournal.AddErrorBuferOperationClosing('',ErrorJournal."Error Group"::Load,ErrorJournal.Type::Error,
                                                         '',0,
                                                         'EDB02',STRSUBSTNO(TextEDB02,BufferOperationClosing.FIELDCAPTION("Document ID")),
                                                         COMPANYNAME,BufferOperationClosing,"Line No.");
              isOK := FALSE;
            END;
            IF BufferOperationClosing."Closing Date" = 0D THEN BEGIN
              ErrorJournal.AddErrorBuferOperationClosing('',ErrorJournal."Error Group"::Load,ErrorJournal.Type::Error,
                                                         '',0,
                                                         'EDB02',STRSUBSTNO(TextEDB02,BufferOperationClosing.FIELDCAPTION("Closing Date")),
                                                         COMPANYNAME,BufferOperationClosing,"Line No.");
              isOK := FALSE;
            END;

            IF NOT isOK THEN BEGIN
              BufferOperationClosing.Status := BufferOperationClosing.Status::"Processing Canceled";
              BufferOperationClosing.MODIFY;
              EXIT;
            END;

            OperationClosing.SETRANGE("Document ID",BufferOperationClosing."Document ID");
            isFind := OperationClosing.FINDLAST;

            IF MovingDataSetup."Exact Processing Change" THEN
              CASE TRUE OF

                (BufferOperationClosing.Type = BufferOperationClosing.Type::New) AND (NOT isFind) :
                  isOK := TRUE;

                (BufferOperationClosing.Type = BufferOperationClosing.Type::New) AND (isFind) :
                  BEGIN
                    CodeError := 'EDB03';
                    TextError := STRSUBSTNO(TextEDB03,BufferOperationClosing.Type,BufferOperationClosing."Entry No.");
                    isOK := FALSE;
                  END;

                (BufferOperationClosing.Type = BufferOperationClosing.Type::Modify) AND (NOT isFind) :
                  BEGIN
                    CodeError := 'EDB10';
                    TextError := STRSUBSTNO(TextEDB10,BufferOperationClosing.Type,BufferOperationClosing."Entry No.");
                    isOK := FALSE;
                  END;

                (BufferOperationClosing.Type = BufferOperationClosing.Type::Modify) AND (isFind) :
                  isOK := TRUE;

                BufferOperationClosing.Type = BufferOperationClosing.Type::Delete :
                  BEGIN
                    CodeError := 'EDB04';
                    TextError := STRSUBSTNO(TextEDB04,BufferOperationClosing.Type,BufferOperationClosing."Entry No.");
                    isOK := FALSE;
                  END;
              END
            ELSE
              CASE TRUE OF

                (BufferOperationClosing.Type = BufferOperationClosing.Type::New) AND (NOT isFind) :
                  isOK := TRUE;

                (BufferOperationClosing.Type = BufferOperationClosing.Type::New) AND (isFind) :
                  BEGIN
                    CodeError := 'EDB09';
                    TextError := STRSUBSTNO(TextEDB09,BufferOperationClosing.Type,BufferOperationClosing."Entry No.");
                    isOK := TRUE;
                  END;

                (BufferOperationClosing.Type = BufferOperationClosing.Type::Modify) AND (NOT isFind) :
                  BEGIN
                    CodeError := 'EDB08';
                    TextError := STRSUBSTNO(TextEDB08,BufferOperationClosing.Type,BufferOperationClosing."Entry No.");
                    isOK := TRUE;
                  END;

                (BufferOperationClosing.Type = BufferOperationClosing.Type::Modify) AND (isFind) :
                  isOK := TRUE;

                BufferOperationClosing.Type = BufferOperationClosing.Type::Delete :
                  BEGIN
                    CodeError := 'EDB08';
                    TextError := STRSUBSTNO(TextEDB04,BufferOperationClosing.Type,BufferOperationClosing."Entry No.");
                    isOK := FALSE;
                  END;
              END;


            IF isOK THEN BEGIN
              IF TextError <> '' THEN BEGIN
                IF isFind THEN
                  ErrorJournal.AddErrorBuferOperClosOperClos('',ErrorJournal."Error Group"::Load,ErrorJournal.Type::Warning,
                                                '',0,
                                                CodeError,TextError,COMPANYNAME,BufferOperationClosing,OperationClosing,"Line No.")
                ELSE
                  ErrorJournal.AddErrorBuferOperationClosing('',ErrorJournal."Error Group"::Load,ErrorJournal.Type::Warning,
                                                '',0,
                                                CodeError,TextError,COMPANYNAME,BufferOperationClosing,"Line No.");
              END;

              IF isFind THEN BEGIN
                OperationClosing."Closing Date" := BufferOperationClosing."Closing Date";
                OperationClosing.MODIFY(TRUE);
              END ELSE BEGIN
                OperationClosing.INIT;
                OperationClosing."Document ID" := BufferOperationClosing."Document ID";
                OperationClosing."Closing Date" := BufferOperationClosing."Closing Date";
                OperationClosing.INSERT(TRUE);
              END;

              BufferOperationClosing.Status := BufferOperationClosing.Status::"Processing Complete";
              BufferOperationClosing.MODIFY;

              BufferOperationClosing.RESET;
              BufferOperationClosing.SETFILTER("Entry No.",'<%1',BufferOperationClosing."Entry No.");
              BufferOperationClosing.SETRANGE("Document ID",BufferOperationClosing."Document ID");
              BufferOperationClosing.SETRANGE(Status,BufferOperationClosing.Status::New);
              BufferOperationClosing.MODIFYALL(Status,BufferOperationClosing.Status::"Canceled Automatic");

            END ELSE BEGIN
              IF isFind THEN
                ErrorJournal.AddErrorBuferOperClosOperClos('',ErrorJournal."Error Group"::Load,ErrorJournal.Type::Error,
                                                    '',0,
                                                    CodeError,TextError,COMPANYNAME,BufferOperationClosing,OperationClosing,"Line No.")
              ELSE
                ErrorJournal.AddErrorBuferOperationClosing('',ErrorJournal."Error Group"::Load,ErrorJournal.Type::Error,
                                              '',0,
                                              CodeError,TextError,COMPANYNAME,BufferOperationClosing,"Line No.");

              BufferOperationClosing.Status := BufferOperationClosing.Status::"Processing Canceled";
              BufferOperationClosing.MODIFY;

            END;

            isOK := TRUE;
          END;

  }
  CODE
  {
    VAR
      MovingDataSetup@1101495020 : Record 50064;
      RecID@1101495000 : RecordID;
      RecRef@1101495001 : RecordRef;
      BufferOperationClosing@1101495002 : Record 50068;
      Text001@1101495003 : TextConst 'ENU=Wrong identifier to record;RUS=Неправильный идентификатор записи';
      TextEDB01@1000000000 : TextConst 'ENU=In the process of implementation %1 unclassified error occurred. %2 Processing stopped.;RUS=В процессе выполнения %1 возникла ошибка. %2 Обработка прекращена.';
      TextEDB02@1101495015 : TextConst 'ENU=In the Buffer of Loading of Operations of Closing submitted incomplete data. Please enter %2. Record not processed.;RUS=В Буфере Загрузки Операций Закрытия переданы не полные данные. Не заполнено поле %1. Запись не обработана.';
      TextEDB03@1101495014 : TextConst 'ENU="In the Buffer of Loading of Operations of Closing handed treatment of type %1 for the operation but the Entry No.= %2. In NAV is an operation with the UID and Operation No. Record not processed.";RUS="В Буфере Загрузки Операций Закрытия передан тип обработки %1 для операции Операция Но.=%2. В NAV есть операция закрытия с таким UID. Действие было пропущено."';
      TextEDB04@1101495013 : TextConst 'ENU="In the Buffer of Loading of Operations of Closing handed treatment of type %2 for the directory %3 Code = %4. Record not processed.";RUS="В Буфере Загрузки Операций Закрытия передан тип обработки %1 для операции Операция Но.=%2. Действие было пропущено. "';
      TextEDB08@1101495009 : TextConst 'ENU="Warning. In the Buffer of Loading of Operations of Closing the type of processing %1 for Entry No. = %2. In NAV there is no operation with such UID.";RUS="Предупреждение. В Буфере Загрузки операций закрытия передан тип обработки %1 для операции Операция Но.=%2. В NAV нет операции закрытия с таким UID."';
      TextEDB09@1101495008 : TextConst 'ENU="Warning. In the Buffer of Loading of Operations of Closing handed treatment of type %2 for the directory %3 Code = %4. In NAV is an element of the directory with this code.";RUS="Предупреждение. В Буфере Загрузки операций закрытия передан тип обработки %1 для операции Операция Но.=%2. В NAV есть элемент справочника с таким кодом."';
      TextEDB10@1101495007 : TextConst 'ENU="In the Buffer of Loading of Operations of Closing handed treatment of type %1 for the operation but the Entry No. = %2. In NAV no operation with the UID and Operation No.";RUS="В Буфере Загрузки Операций Закрытия передан тип обработки %1 для операции Операция Но.=%2. В NAV нет операции закрытия с таким UID."';
      CodeError@1000000001 : Code[10];
      TextError@1101495021 : Text[250];
      ErrorJournal@1101495017 : Record 50023;
      OperationClosing@1101495018 : Record 50069;
      isFind@1101495019 : Boolean;

    BEGIN
    {
      NC MDB02 PCH Создан CU
      ПАРАМЕТРЫ:
        "Company No."
        "Processing Mode" - Test - проверка наличия записей, Load - загрузка
        "Object No." - таблица буфера (Здесь пока не используется)
      ВОЗВРАТ:
        isOK - ОК

      NC MDR01 MP Изменения в коде
    }
    END.
  }
}

