OBJECT Page 14962 Payroll Analysis Lines
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Payroll Analysis Lines;
               RUS=Строки анализа зарплаты];
    MultipleNewLines=Yes;
    SourceTable=Table14962;
    DelayedInsert=Yes;
    PageType=Worksheet;
    AutoSplitKey=Yes;
    OnOpenPage=VAR
                 GLSetup@1001 : Record 98;
                 PayrollAnalysisLineTemplate@1000 : Record 14961;
               BEGIN
                 PayrollAnalysisReportMgt.OpenAnalysisLines(CurrentAnalysisLineTempl,Rec);

                 GLSetup.GET;

                 IF PayrollAnalysisLineTemplate.GET(CurrentAnalysisLineTempl) THEN
                   IF PayrollAnalysisLineTemplate."Payroll Analysis View Code" <> '' THEN
                     PayrollAnalysisView.GET(PayrollAnalysisLineTemplate."Payroll Analysis View Code")
                   ELSE BEGIN
                     CLEAR(PayrollAnalysisView);
                     PayrollAnalysisView."Dimension 1 Code" := GLSetup."Global Dimension 1 Code";
                     PayrollAnalysisView."Dimension 2 Code" := GLSetup."Global Dimension 2 Code";
                   END;
               END;

    OnAfterGetRecord=BEGIN
                       DescriptionIndent := 0;
                       ElementTypeFilter := "Element Type Filter";
                       PayrollAnalysisReportMgt.ValidateFilter(
                         ElementTypeFilter,DATABASE::"Payroll Analysis Line",FIELDNO("Element Type Filter"),FALSE);

                       WorkModeFilter := "Work Mode Filter";
                       PayrollAnalysisReportMgt.ValidateFilter(
                         WorkModeFilter,DATABASE::"Payroll Analysis Line",FIELDNO("Work Mode Filter"),FALSE);

                       DisabilityGroupFilter := "Disability Group Filter";
                       PayrollAnalysisReportMgt.ValidateFilter(
                         DisabilityGroupFilter,DATABASE::"Payroll Analysis Line",FIELDNO("Disability Group Filter"),FALSE);

                       ContractTypeGroupFilter := "Contract Type Filter";
                       PayrollAnalysisReportMgt.ValidateFilter(
                         ContractTypeGroupFilter,DATABASE::"Payroll Analysis Line",FIELDNO("Contract Type Filter"),FALSE);

                       PaymentSourceFilter := "Payment Source Filter";
                       PayrollAnalysisReportMgt.ValidateFilter(
                         PaymentSourceFilter,DATABASE::"Payroll Analysis Line",FIELDNO("Payment Source Filter"),FALSE);
                       DescriptionOnFormat;
                     END;

    OnNewRecord=BEGIN
                  ElementTypeFilter := '';
                  WorkModeFilter := '';
                  DisabilityGroupFilter := '';
                  PaymentSourceFilter := '';
                  ContractTypeGroupFilter := '';
                END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 27      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 RUS=Ф&ункции];
                      Image=Action }
      { 28      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Insert &Payroll Elements;
                                 RUS=Вставить &зарплатные элементы];
                      ApplicationArea=#Basic,#Suite;
                      Image=BulletList;
                      OnAction=BEGIN
                                 InsertLine(0);
                               END;
                                }
      { 1210007 ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Insert Payroll Element &Groups;
                                 RUS=Вставить &группы зарплатных элементов];
                      ApplicationArea=#Basic,#Suite;
                      Image=CreateDocuments;
                      OnAction=BEGIN
                                 InsertLine(1);
                               END;
                                }
      { 29      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Insert &Employees;
                                 RUS=Вставить &сотрудников];
                      ApplicationArea=#Basic,#Suite;
                      Image=NewOpportunity;
                      OnAction=BEGIN
                                 InsertLine(2);
                               END;
                                }
      { 1210006 ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Insert &Org. Units;
                                 RUS=Вставить &подразделения];
                      ApplicationArea=#Basic,#Suite;
                      Image=Hierarchy;
                      OnAction=BEGIN
                                 InsertLine(3);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 25  ;1   ;Field     ;
                Lookup=Yes;
                CaptionML=[ENU=Name;
                           RUS=Название];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CurrentAnalysisLineTempl;
                OnValidate=BEGIN
                             PayrollAnalysisReportMgt.CheckAnalysisLineTemplName(CurrentAnalysisLineTempl,Rec);
                             CurrentAnalysisLineTemplOnAfte;
                           END;

                OnLookup=BEGIN
                           CurrPage.SAVERECORD;
                           PayrollAnalysisReportMgt.LookupAnalysisLineTemplName(CurrentAnalysisLineTempl,Rec);
                           CurrPage.UPDATE(FALSE);
                         END;
                          }

    { 1   ;1   ;Group     ;
                IndentationColumnName=DescriptionIndent;
                IndentationControls=Description;
                GroupType=Repeater }

    { 1210002;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Row No." }

    { 4   ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                Style=Strong;
                StyleExpr=DescriptionEmphasize }

    { 6   ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Type }

    { 1210000;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Expression }

    { 1210004;2;Field     ;
                CaptionML=[ENU=Element Type Filter;
                           RUS=Фильтр по типу элемента];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ElementTypeFilter;
                OnValidate=BEGIN
                             PayrollAnalysisReportMgt.ValidateFilter(
                               ElementTypeFilter,DATABASE::"Payroll Analysis Line",FIELDNO("Element Type Filter"),FALSE);
                             "Element Type Filter" := ElementTypeFilter;
                             PayrollAnalysisReportMgt.ValidateFilter(
                               "Element Type Filter",DATABASE::"Payroll Analysis Line",FIELDNO("Element Type Filter"),TRUE);
                           END;
                            }

    { 1210008;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Element Filter" }

    { 1210012;2;Field     ;
                CaptionML=[ENU=Work Mode Filter;
                           RUS=Фильтр по характеру работы];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=WorkModeFilter;
                OnValidate=BEGIN
                             PayrollAnalysisReportMgt.ValidateFilter(
                               WorkModeFilter,DATABASE::"Payroll Analysis Line",FIELDNO("Work Mode Filter"),FALSE);
                             "Work Mode Filter" := WorkModeFilter;
                             PayrollAnalysisReportMgt.ValidateFilter(
                               "Work Mode Filter",DATABASE::"Payroll Analysis Line",FIELDNO("Work Mode Filter"),TRUE);
                           END;
                            }

    { 1210014;2;Field     ;
                CaptionML=[ENU=Disability Group Filter;
                           RUS=Фильтр по группе инвалидности];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DisabilityGroupFilter;
                OnValidate=BEGIN
                             PayrollAnalysisReportMgt.ValidateFilter(
                               DisabilityGroupFilter,DATABASE::"Payroll Analysis Line",FIELDNO("Disability Group Filter"),FALSE);
                             "Disability Group Filter" := DisabilityGroupFilter;
                             PayrollAnalysisReportMgt.ValidateFilter(
                               "Disability Group Filter",DATABASE::"Payroll Analysis Line",FIELDNO("Disability Group Filter"),TRUE);
                           END;
                            }

    { 121006;2 ;Field     ;
                CaptionML=[ENU=Contract Type Filter;
                           RUS=Фильтр по типу контракта];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ContractTypeGroupFilter;
                OnValidate=BEGIN
                             PayrollAnalysisReportMgt.ValidateFilter(
                               ContractTypeGroupFilter,DATABASE::"Payroll Analysis Line",FIELDNO("Contract Type Filter"),FALSE);
                             "Contract Type Filter" := ContractTypeGroupFilter;
                             PayrollAnalysisReportMgt.ValidateFilter(
                               "Contract Type Filter",DATABASE::"Payroll Analysis Line",FIELDNO("Contract Type Filter"),TRUE);
                           END;
                            }

    { 1210016;2;Field     ;
                CaptionML=[ENU=Payment Source Filter;
                           RUS=Фильтр по источнику оплаты];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PaymentSourceFilter;
                OnValidate=BEGIN
                             PayrollAnalysisReportMgt.ValidateFilter(
                               PaymentSourceFilter,DATABASE::"Payroll Analysis Line",FIELDNO("Payment Source Filter"),FALSE);
                             "Payment Source Filter" := PaymentSourceFilter;
                             PayrollAnalysisReportMgt.ValidateFilter(
                               "Payment Source Filter",DATABASE::"Payroll Analysis Line",FIELDNO("Payment Source Filter"),TRUE);
                           END;
                            }

    { 1210010;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Use PF Accum. System Filter" }

    { 1210024;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Income Tax Base Filter" }

    { 10  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="New Page" }

    { 12  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Show }

    { 14  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Bold }

    { 31  ;2   ;Field     ;
                SourceExpr=Indentation;
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Italic }

    { 18  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Underline }

    { 20  ;2   ;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Show Opposite Sign" }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      PayrollAnalysisView@1210001 : Record 14965;
      PayrollAnalysisReportMgt@1001 : Codeunit 14960;
      CurrentAnalysisLineTempl@1002 : Code[10];
      ElementTypeFilter@1210000 : Text[150];
      WorkModeFilter@1210002 : Text[80];
      DisabilityGroupFilter@1210003 : Text[30];
      ContractTypeGroupFilter@121000 : Text[30];
      PaymentSourceFilter@1210004 : Text[150];
      DescriptionEmphasize@19010547 : Boolean INDATASET;
      DescriptionIndent@19057867 : Integer INDATASET;

    PROCEDURE InsertLine@1(Type@1001 : 'Payroll Element,Payroll Element Group,Employee,Org. Unit');
    VAR
      PayrollAnalysisLine@1003 : Record 14962;
      InsertPayrollAnalysisLine@1002 : Codeunit 14963;
    BEGIN
      CurrPage.UPDATE(TRUE);
      PayrollAnalysisLine.COPY(Rec);
      IF "Line No." = 0 THEN BEGIN
        PayrollAnalysisLine := xRec;
        IF PayrollAnalysisLine.NEXT = 0 THEN
          PayrollAnalysisLine."Line No." := xRec."Line No." + 10000;
      END;
      CASE Type OF
        Type::Employee:
          InsertPayrollAnalysisLine.InsertEmployees(PayrollAnalysisLine);
        Type::"Payroll Element":
          InsertPayrollAnalysisLine.InsertPayrollElements(PayrollAnalysisLine);
        Type::"Payroll Element Group":
          InsertPayrollAnalysisLine.InsertPayrollElementGroups(PayrollAnalysisLine);
        Type::"Org. Unit":
          InsertPayrollAnalysisLine.InsertOrgUnits(PayrollAnalysisLine);
      END;
    END;

    PROCEDURE SetCurrentAnalysisLineTempl@2(AnalysisLineTemlName@1000 : Code[10]);
    BEGIN
      CurrentAnalysisLineTempl := AnalysisLineTemlName;
    END;

    LOCAL PROCEDURE CurrentAnalysisLineTemplOnAfte@19019881();
    VAR
      PayrollAnalysisLineTemplate@1001 : Record 14961;
    BEGIN
      CurrPage.SAVERECORD;
      PayrollAnalysisReportMgt.SetAnalysisLineTemplName(CurrentAnalysisLineTempl,Rec);
      IF PayrollAnalysisLineTemplate.GET(CurrentAnalysisLineTempl) THEN
        CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      DescriptionEmphasize := Bold;
      DescriptionIndent := Indentation;
    END;

    BEGIN
    END.
  }
}

