OBJECT Table 17434 Vacation Request
{
  OBJECT-PROPERTIES
  {
    Date=15.09.15;
    Time=12:00:00;
    Version List=NAVRU9.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               HumanResSetup.GET;
               IF "No." = '' THEN BEGIN
                 TestNoSeries;
                 NoSeriesMgt.InitSeries(GetNoSeriesCode,xRec."No. Series","Request Date","No.","No. Series");
               END;

               InitRecord;

               "Created By User" := USERID;
               "Creation Date" := TODAY;
             END;

    CaptionML=[ENU=Vacation Request;
               RUS=Заявление на отпуск];
    LookupPageID=Page17491;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  HumanResSetup.GET;
                                                                  NoSeriesMgt.TestManual(GetNoSeriesCode);
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              RUS=Номер] }
    { 2   ;   ;Employee No.        ;Code20        ;TableRelation=Employee;
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);

                                                                GetEmployee("Employee No.");
                                                                Employee.TESTFIELD("Termination Date",0D);
                                                                Employee.TESTFIELD(Blocked,FALSE);
                                                                "Employee Name" := Employee.GetFullNameOnDate("Request Date");
                                                                VALIDATE("Org. Unit Code",Employee."Org. Unit Code");
                                                                VALIDATE("Job Title Code",Employee."Job Title Code");
                                                              END;

                                                   CaptionML=[ENU=Employee No.;
                                                              RUS=Код сотрудника] }
    { 3   ;   ;Request Date        ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);

                                                                IF "Request Date" <> 0D THEN BEGIN
                                                                  GetEmployee("Employee No.");
                                                                  IF "Request Date" < Employee."Employment Date" THEN
                                                                    LocMgt.DateMustBeLater(FIELDCAPTION("Request Date"),Employee."Employment Date");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Request Date;
                                                              RUS=Дата запроса] }
    { 4   ;   ;Start Date          ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);

                                                                IF "Start Date" <> 0D THEN BEGIN
                                                                  GetEmployee("Employee No.");
                                                                  IF "Start Date" < Employee."Employment Date" THEN
                                                                    LocMgt.DateMustBeLater(FIELDCAPTION("Start Date"),Employee."Employment Date");
                                                                END;

                                                                LocMgt.CheckPeriodDates("Start Date",xRec."End Date");

                                                                IF ("Start Date" <> 0D) AND ("End Date" <> 0D) THEN BEGIN
                                                                  Employee.GetJobEntry("Employee No.","Start Date",EmployeeJobEntry);
                                                                  "Calendar Days" :=
                                                                    CalendarMgt.GetPeriodInfo(
                                                                      EmployeeJobEntry."Calendar Code","Start Date","End Date",1) -
                                                                    CalendarMgt.GetPeriodInfo(
                                                                      EmployeeJobEntry."Calendar Code","Start Date","End Date",4);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Start Date;
                                                              RUS=Дата начала] }
    { 5   ;   ;End Date            ;Date          ;OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                                TESTFIELD("Start Date");

                                                                LocMgt.CheckPeriodDates("Start Date",xRec."End Date");

                                                                IF ("Start Date" <> 0D) AND ("End Date" <> 0D) THEN BEGIN
                                                                  HRSetup.GET;
                                                                  HRSetup.TESTFIELD("Official Calendar Code");
                                                                  "Calendar Days" :=
                                                                    CalendarMgt.GetPeriodInfo(
                                                                      HRSetup."Official Calendar Code","Start Date","End Date",1) -
                                                                    CalendarMgt.GetPeriodInfo(
                                                                      HRSetup."Official Calendar Code","Start Date","End Date",4);
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=End Date;
                                                              RUS=Дата окончания] }
    { 6   ;   ;Time Activity Code  ;Code10        ;TableRelation="Time Activity" WHERE (Time Activity Type=CONST(Vacation));
                                                   OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);

                                                                TimeActivity.GET("Time Activity Code");
                                                                TimeActivity.TESTFIELD("Time Activity Type",TimeActivity."Time Activity Type"::Vacation);
                                                                Description := COPYSTR(TimeActivity.Description,1,MAXSTRLEN(Description));
                                                              END;

                                                   CaptionML=[ENU=Time Activity Code;
                                                              RUS=Код временной активности] }
    { 7   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 8   ;   ;Calendar Days       ;Decimal       ;OnValidate=BEGIN
                                                                TESTFIELD(Status,Status::Open);
                                                                TESTFIELD("Start Date");
                                                                IF "Calendar Days" > 0 THEN
                                                                  "End Date" := CALCDATE(STRSUBSTNO('<%1D>',"Calendar Days" - 1),"Start Date");
                                                              END;

                                                   CaptionML=[ENU=Calendar Days;
                                                              RUS=Календарные дни];
                                                   MinValue=0 }
    { 10  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              RUS=Серия номеров] }
    { 11  ;   ;Org. Unit Code      ;Code10        ;TableRelation="Organizational Unit";
                                                   OnValidate=BEGIN
                                                                OrganizationalUnit.GET("Org. Unit Code");
                                                                OrganizationalUnit.TESTFIELD(Blocked,FALSE);
                                                                "Org. Unit Name" := OrganizationalUnit.Name;
                                                              END;

                                                   CaptionML=[ENU=Org. Unit Code;
                                                              RUS=Код подразделения];
                                                   Editable=No }
    { 12  ;   ;Job Title Code      ;Code10        ;TableRelation="Job Title";
                                                   OnValidate=BEGIN
                                                                JobTitle.GET("Job Title Code");
                                                                JobTitle.TESTFIELD(Blocked,FALSE);
                                                                "Job Title Name" := JobTitle.Name;
                                                              END;

                                                   CaptionML=[ENU=Job Title Code;
                                                              RUS=Код должности];
                                                   Editable=No }
    { 13  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              RUS=Статус];
                                                   OptionCaptionML=[ENU=Open,Approved,Closed;
                                                                    RUS=Открыто,Утверждено,Закрыто];
                                                   OptionString=Open,Approved,Closed;
                                                   Editable=No }
    { 15  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("HR Order Comment Line" WHERE (Table Name=CONST(Vacation Request),
                                                                                                    No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              RUS=Комментарий];
                                                   Editable=No }
    { 16  ;   ;Scheduled Year      ;Integer       ;TableRelation="Vacation Schedule Name";
                                                   CaptionML=[ENU=Scheduled Year;
                                                              RUS=Год по графику] }
    { 17  ;   ;Scheduled Start Date;Date          ;OnLookup=VAR
                                                              VacationScheduleLines@1210000 : Page 17494;
                                                            BEGIN
                                                              VacationScheduleLine.RESET;
                                                              VacationScheduleLine.SETRANGE(Year,"Scheduled Year");
                                                              VacationScheduleLine.SETRANGE("Employee No.","Employee No.");

                                                              CLEAR(VacationScheduleLines);
                                                              VacationScheduleLines.SETTABLEVIEW(VacationScheduleLine);
                                                              VacationScheduleLines.LOOKUPMODE(TRUE);
                                                              IF VacationScheduleLines.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                VacationScheduleLines.GETRECORD(VacationScheduleLine);
                                                                "Scheduled Start Date" := VacationScheduleLine."Start Date";
                                                                VALIDATE("Start Date",VacationScheduleLine."Start Date");
                                                                VALIDATE("End Date",VacationScheduleLine."End Date");
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Scheduled Start Date;
                                                              RUS=Плановая дата начала] }
    { 18  ;   ;Vacation Used       ;Boolean       ;CaptionML=[ENU=Vacation Used;
                                                              RUS=Исп. отпуск];
                                                   Editable=No }
    { 20  ;   ;Employee Name       ;Text100       ;CaptionML=[ENU=Employee Name;
                                                              RUS=Имя сотрудника];
                                                   Editable=No }
    { 21  ;   ;Org. Unit Name      ;Text50        ;CaptionML=[ENU=Org. Unit Name;
                                                              RUS=Название подразделения];
                                                   Editable=No }
    { 22  ;   ;Job Title Name      ;Text50        ;CaptionML=[ENU=Job Title Name;
                                                              RUS=Название должности] }
    { 33  ;   ;Submit Date         ;Date          ;CaptionML=[ENU=Submit Date;
                                                              RUS=Дата отправки];
                                                   Editable=No }
    { 34  ;   ;Created By User     ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Created By User;
                                                              RUS=Создано пользователем];
                                                   Editable=No }
    { 35  ;   ;Creation Date       ;Date          ;CaptionML=[ENU=Creation Date;
                                                              RUS=Дата создания];
                                                   Editable=No }
    { 36  ;   ;Approved By User    ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Approved By User;
                                                              RUS=Утверждено];
                                                   Editable=No }
    { 37  ;   ;Approval Date       ;Date          ;CaptionML=[ENU=Approval Date;
                                                              RUS=Дата утверждения];
                                                   Editable=No }
    { 38  ;   ;Closed By User      ;Code50        ;TableRelation=User."User Name";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Closed By User;
                                                              RUS=Закрыто пользователем];
                                                   Editable=No }
    { 39  ;   ;Closing Date        ;Date          ;CaptionML=[ENU=Closing Date;
                                                              RUS=Дата закрытия];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Employee No.,Time Activity Code,Status,Start Date;
                                                   SumIndexFields=Calendar Days }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      HumanResSetup@1210000 : Record 5218;
      Employee@1210003 : Record 5200;
      EmployeeJobEntry@1210012 : Record 17363;
      TimeActivity@1210004 : Record 5206;
      AbsenceLine@1210005 : Record 17386;
      HRSetup@1210009 : Record 5218;
      OrganizationalUnit@1210010 : Record 12422;
      JobTitle@1210011 : Record 12423;
      VacationScheduleLine@1210013 : Record 17436;
      NoSeriesMgt@1210001 : Codeunit 396;
      Text000@1210002 : TextConst 'ENU=Request will be closed and you will not be able to reopen it again. Close request?;RUS=Заявление будет закрыто и его открытие будет невозможно. Закрыть заявление?';
      Text001@1210006 : TextConst 'ENU=Request is already used in vacation order.;RUS=Заявление уже использовано в приказе на отпуск.';
      LocMgt@1210008 : Codeunit 12400;
      CalendarMgt@1210007 : Codeunit 17430;

    PROCEDURE InitRecord@1210000();
    BEGIN
      "Request Date" := TODAY;
    END;

    PROCEDURE AssistEdit@1(OldVacationRequest@1000 : Record 17434) : Boolean;
    VAR
      VacationRequest@1001 : Record 17434;
    BEGIN
      WITH VacationRequest DO BEGIN
        COPY(Rec);
        HumanResSetup.GET;
        TestNoSeries;
        IF NoSeriesMgt.SelectSeries(GetNoSeriesCode,OldVacationRequest."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := VacationRequest;
          EXIT(TRUE);
        END;
      END;
    END;

    LOCAL PROCEDURE TestNoSeries@6();
    BEGIN
      HumanResSetup.TESTFIELD("Vacation Request Nos.");
    END;

    LOCAL PROCEDURE GetNoSeriesCode@9() : Code[10];
    BEGIN
      EXIT(HumanResSetup."Vacation Request Nos.");
    END;

    PROCEDURE GetEmployee@1210001(EmployeeNo@1210000 : Code[20]);
    BEGIN
      IF (Employee."No." = '') AND (EmployeeNo <> '') THEN
        Employee.GET(EmployeeNo);
    END;

    PROCEDURE Approve@1210002();
    BEGIN
      TESTFIELD(Status,Status::Open);
      TESTFIELD("Employee No.");
      TESTFIELD("Request Date");
      TESTFIELD("Start Date");
      TESTFIELD("End Date");
      TESTFIELD("Time Activity Code");
      TESTFIELD("Calendar Days");
      TESTFIELD("Org. Unit Code");
      TESTFIELD("Job Title Code");

      TimeActivity.GET("Time Activity Code");
      IF TimeActivity."Use Accruals" THEN BEGIN
        TESTFIELD("Scheduled Year");
        TESTFIELD("Scheduled Start Date");
      END;

      Status := Status::Approved;
      "Approved By User" := USERID;
      "Approval Date" := TODAY;
      MODIFY;
    END;

    PROCEDURE Reopen@1210005();
    BEGIN
      TESTFIELD(Status,Status::Approved);

      AbsenceLine.RESET;
      AbsenceLine.SETRANGE("Vacation Request No.","No.");
      IF NOT AbsenceLine.ISEMPTY THEN
        ERROR(Text001);

      Status := Status::Open;
      MODIFY;
    END;

    PROCEDURE Close@1210003();
    BEGIN
      TESTFIELD(Status,Status::Approved);

      IF NOT CONFIRM(Text000,TRUE) THEN
        EXIT;

      Status := Status::Closed;
      "Closed By User" := USERID;
      "Closing Date" := TODAY;
      MODIFY;
    END;

    PROCEDURE MarkUsed@1210004();
    BEGIN
      IF NOT "Vacation Used" THEN BEGIN
        "Vacation Used" := TRUE;
        TimeActivity.GET("Time Activity Code");
        IF TimeActivity."Use Accruals" THEN BEGIN
          TESTFIELD("Scheduled Year");
          TESTFIELD("Scheduled Start Date");
          VacationScheduleLine.RESET;
          VacationScheduleLine.SETRANGE(Year,"Scheduled Year");
          VacationScheduleLine.SETRANGE("Employee No.","Employee No.");
          VacationScheduleLine.SETRANGE("Start Date","Scheduled Start Date");
          IF VacationScheduleLine.FINDFIRST THEN BEGIN
            VacationScheduleLine."Actual Start Date" := "Start Date";
            IF VacationScheduleLine."Actual Start Date" <> VacationScheduleLine."Start Date" THEN
              VacationScheduleLine."Carry Over Reason" := TABLECAPTION + ' ' + "No.";
            VacationScheduleLine.MODIFY;
          END;
        END;
        MODIFY;
      END;
    END;

    PROCEDURE MarkUnused@1210006();
    BEGIN
      IF "Vacation Used" THEN BEGIN
        "Vacation Used" := FALSE;
        MODIFY;
      END;
    END;

    BEGIN
    END.
  }
}

