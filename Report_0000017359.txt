OBJECT Report 17359 Form 1-NDFL
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Form 1-NDFL;
               RUS=îÆ‡¨† 1-çÑîã];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF DocumentDate = 0D THEN
                    ERROR(Text000);

                  HumanResSetup.GET;
                  CompanyInfo.GET;

                  HumanResSetup.TESTFIELD("NDFL-1 Template Code");
                  FileName := ExcelTemplate.OpenTemplate(HumanResSetup."NDFL-1 Template Code");

                  IF PreviewMode THEN BEGIN
                    DocumentNo := 'XXXXXXXXXX';
                  END ELSE BEGIN
                    HumanResSetup.TESTFIELD("Personal Information Nos.");
                    DocumentNo := NoSeriesMgt.GetNextNo(HumanResSetup."Personal Information Nos.",WORKDATE,TRUE);
                  END;

                  ExcelMgt.OpenBook(FileName);
                END;

    OnPostReport=BEGIN
                   IF NOT TestMode THEN
                     ExcelMgt.GiveUserControl
                   ELSE
                     ExcelMgt.QuitXlApp;
                 END;

  }
  DATASET
  {
    { 3347;    ;DataItem;                    ;
               DataItemTable=Table17392;
               DataItemTableView=SORTING(No.);
               OnAfterGetRecord=VAR
                                  InterimAccruals@1210002 : Decimal;
                                  TotalAccruals@1210004 : Decimal;
                                  TotalPayments@1210005 : Decimal;
                                  RowNo@1210000 : Integer;
                                BEGIN
                                  Person.GET("Person No.");
                                  Employee.SETRANGE("Person No.",Person."No.");
                                  IF NOT Employee.FINDFIRST THEN
                                    ExcelMgt.ErrorExcelProcessing(STRSUBSTNO(Text026,Person."No."));

                                  ExcelMgt.OpenSheet('Sheet1');

                                  ExcelMgt.FillCell('BL3',DocumentNo);
                                  ExcelMgt.FillCell('CS6',CompanyInfo."VAT Registration No.");
                                  IF CompanyInfo."Separated Org. Unit" THEN BEGIN
                                    ExcelMgt.FillCell('DT6',CurrKPP);
                                    ExcelMgt.FillCell('R10',CurrOKATO);
                                  END ELSE BEGIN
                                    ExcelMgt.FillCell('DT6',CompanyInfo."KPP Code");
                                    ExcelMgt.FillCell('R10',CompanyInfo."OKATO Code");
                                  END;
                                  ExcelMgt.FillCell('BK7',Person."Tax Inspection Code");
                                  ExcelMgt.FillCell('BI8',CompanyInfo.Name + CompanyInfo."Name 2");
                                  ExcelMgt.FillCell('J13',Person."VAT Registration No.");
                                  ExcelMgt.FillCell('DH13',Person."Social Security No.");
                                  ExcelMgt.FillCell('AC14',Employee.GetFullNameOnDate(DocumentDate));
                                  IF Person."Identity Document Type" <> '' THEN BEGIN
                                    ExcelMgt.FillCell('BS15',Person."Identity Document Type");
                                    Person.GetIdentityDoc(DMY2DATE(31,12,Year),PersonalDoc);
                                  END ELSE
                                    ExcelMgt.ErrorExcelProcessing(
                                      STRSUBSTNO(Text027,
                                        Person.FIELDCAPTION("Identity Document Type"),Person.TABLECAPTION,
                                        Person.TABLECAPTION,Person."No."));
                                  ExcelMgt.FillCell(
                                    'DU15',PersonalDoc."Document Series" + ' ' + PersonalDoc."Document No.");
                                  IF Employee."Birth Date" <> 0D THEN BEGIN
                                    ExcelMgt.FillCell('AL16',FORMAT(Employee."Birth Date",0,'<Day,2>'));
                                    ExcelMgt.FillCell('AQ16',FORMAT(Employee."Birth Date",0,'<Month,2>'));
                                    ExcelMgt.FillCell('AV16',FORMAT(Employee."Birth Date",0,'<Year4>'));
                                  END ELSE
                                    ExcelMgt.ErrorExcelProcessing(STRSUBSTNO(Text013,Employee."No."));
                                  IF Person.Citizenship = '' THEN
                                    ExcelMgt.ErrorExcelProcessing(
                                      STRSUBSTNO(Text027,
                                        Person.FIELDCAPTION(Citizenship),Person.TABLECAPTION,
                                        Person.TABLECAPTION,Person."No."));
                                  ExcelMgt.FillCell('DX16',Person.Citizenship);
                                  IF Person."Non-Resident" THEN
                                    ExcelMgt.FillCell('CC22','2')
                                  ELSE
                                    ExcelMgt.FillCell('CC22','1');

                                  AltAddr.RESET;
                                  AltAddr.SETRANGE("Person No.",Employee."Person No.");
                                  AltAddr.SETRANGE("Address Type",AltAddr."Address Type"::Registration);
                                  IF AltAddr.FINDLAST THEN BEGIN
                                    IF AltAddr."Post Code" <> '' THEN
                                      ExcelMgt.FillCell('CX17',AltAddr."Post Code")
                                    ELSE
                                      ExcelMgt.ErrorExcelProcessing(STRSUBSTNO(Text017,Employee."No."));
                                    IF AltAddr."KLADR Code" <> '' THEN BEGIN
                                      ExcelMgt.FillCell('BM17',AltAddr."Region Code");
                                      IF AltAddr."Region Code" <> '' THEN
                                        ExcelMgt.FillCell('ER17',AltAddr."Region Code")
                                      ELSE
                                        ExcelMgt.ErrorExcelProcessing(
                                          STRSUBSTNO(Text019,Employee."No.",AltAddr."Region Code" + ' ' + AltAddr."Region Category"));
                                      IF AltAddr.Area <> '' THEN
                                        ExcelMgt.FillCell('H18',AltAddr.Area + ' ' + AltAddr."Area Category");
                                      IF AltAddr.City <> '' THEN
                                        ExcelMgt.FillCell('CM18',AltAddr.City + ' ' + AltAddr."City Category");
                                      IF AltAddr.Locality <> '' THEN
                                        ExcelMgt.FillCell('T19',AltAddr.Locality + ' ' + AltAddr."Locality Category");
                                      IF AltAddr.Street <> '' THEN
                                        ExcelMgt.FillCell('CM19',AltAddr.Street + ' ' + AltAddr."Street Category");
                                      IF AltAddr.House <> '' THEN
                                        ExcelMgt.FillCell('DX19',AltAddr.House);
                                      IF AltAddr.Building <> '' THEN
                                        ExcelMgt.FillCell('EN19',AltAddr.Building);
                                      IF AltAddr.Apartment <> '' THEN
                                        ExcelMgt.FillCell('FE19',AltAddr.Apartment);
                                    END ELSE
                                      ExcelMgt.ErrorExcelProcessing(STRSUBSTNO(Text018,Employee."No."));
                                  END ELSE
                                    ExcelMgt.ErrorExcelProcessing(STRSUBSTNO(Text016,Employee."No."));

                                  AltAddr.SETRANGE("Address Type",AltAddr."Address Type"::Other);
                                  IF AltAddr.FINDLAST THEN
                                    ExcelMgt.FillCell('I21',AltAddr.GetAddress);

                                  // Chapter 3
                                  FillChapter3('Sheet2.1',PersonIncomeEntry."Tax %"::"13");
                                  FillChapter3('Sheet2.2',PersonIncomeEntry."Tax %"::"30");

                                  // Chapter 4
                                  RowNo := 0;
                                  WITH PersonIncomeEntry DO BEGIN
                                    RESET;
                                    SETRANGE("Person Income No.","Person Income Header"."No.");
                                    SETRANGE("Entry Type","Entry Type"::"Taxable Income");
                                    SETFILTER("Tax %",'%1|%2',"Tax %"::"13","Tax %"::"30");
                                    SETFILTER("Tax Code",'<>%1','');
                                    SETRANGE("Advance Payment",FALSE);
                                    IF FINDSET THEN
                                      REPEAT
                                        IF NOT FindIncomeCode("Tax Code",RowNo) AND (RowNo < 5) THEN BEGIN
                                          I := RowNo + 1;
                                          J := ConvertPeriodCode2ColNo("Period Code");
                                          Ch4TaxCode[I] := "Tax Code";
                                          Ch4IncomeAmount[I][J] := Base;
                                          Ch4IncomeAmount[I][13] := Ch4IncomeAmount[I][13] + Base;
                                        END ELSE BEGIN
                                          I := RowNo;
                                          J := ConvertPeriodCode2ColNo("Period Code");
                                          Ch4IncomeAmount[I][J] := Ch4IncomeAmount[I][J] + Base;
                                          Ch4IncomeAmount[I][13] := Ch4IncomeAmount[I][13] + Base;
                                        END;
                                      UNTIL NEXT = 0;
                                  END;

                                  // Calculate accrued income tax
                                  WITH TempPersonIncomeEntry DO BEGIN
                                    RESET;
                                    SETRANGE("Person Income No.","Person Income Header"."No.");
                                    SETRANGE("Entry Type","Entry Type"::"Accrued Income Tax");

                                    PersonIncomeEntry.RESET;
                                    PersonIncomeEntry.SETRANGE("Person Income No.","Person Income Header"."No.");
                                    PersonIncomeEntry.SETRANGE("Entry Type","Entry Type"::"Accrued Income Tax");
                                    PersonIncomeEntry.SETFILTER("Tax %",'%1|%2',"Tax %"::"13","Tax %"::"30");
                                    PersonIncomeEntry.SETRANGE(Interim,FALSE);
                                    IF PersonIncomeEntry.FINDSET THEN
                                      REPEAT
                                        SETRANGE("Period Code",PersonIncomeEntry."Period Code");
                                        IF FINDFIRST THEN BEGIN
                                          Amount += PersonIncomeEntry.Amount;
                                          MODIFY;
                                        END ELSE BEGIN
                                          TempPersonIncomeEntry := PersonIncomeEntry;
                                          INSERT;
                                        END;
                                      UNTIL PersonIncomeEntry.NEXT = 0;

                                    RESET;
                                    IF FINDSET THEN
                                      REPEAT
                                        J := ConvertPeriodCode2ColNo("Period Code");
                                        Ch4Amounts[6][J] += Amount;
                                      UNTIL NEXT = 0;
                                    DELETEALL;
                                  END;

                                  InitColumns(3);
                                  ExcelMgt.OpenSheet('Sheet3');

                                  // 8-12
                                  FOR I := 1 TO 5 DO
                                    IF Ch4TaxCode[I] <> '' THEN BEGIN
                                      ExcelMgt.FillCell('B' + FORMAT(7 + I),Ch4TaxCode[I]);
                                      FOR J := 1 TO 13 DO
                                        IF Ch4IncomeAmount[I,J] <> 0 THEN
                                          ExcelMgt.FillCell(Columns[J] + FORMAT(7 + I),FORMAT(Ch4IncomeAmount[I,J],0,1));
                                    END;

                                  PersonIncomeEntry.RESET;
                                  PersonIncomeEntry.SETRANGE("Person Income No.","No.");
                                  PersonIncomeEntry.SETFILTER("Tax Deduction Code",'<>%1','');
                                  IF PersonIncomeEntry.FINDSET THEN
                                    REPEAT
                                      // Individual deductions
                                      GatherDeductEntries(PayrollDirectory."Tax Deduction Type"::Individual,
                                        PersonIncomeEntry,DeductCodes,DeductAmounts,3);
                                      FillDeductEntries(DeductCodes,DeductAmounts,12,3);
                                      ClearDeductAmounts(DeductAmounts);

                                      // Standart deductions
                                      GatherDeductEntries(PayrollDirectory."Tax Deduction Type"::Standart,
                                        PersonIncomeEntry,DeductCodes,DeductAmounts,7);
                                      FillDeductEntries(DeductCodes,DeductAmounts,19,7);
                                      IncreaceTotalDeductAmounts(DeductAmounts);
                                      ClearDeductAmounts(DeductAmounts);

                                      // Social deductions
                                      GatherDeductEntries(PayrollDirectory."Tax Deduction Type"::Social,
                                        PersonIncomeEntry,DeductCodes,DeductAmounts,2);
                                      FillDeductEntries(DeductCodes,DeductAmounts,28,2);
                                      ClearDeductAmounts(DeductAmounts);

                                      // Material deductions
                                      GatherDeductEntries(PayrollDirectory."Tax Deduction Type"::Material,
                                        PersonIncomeEntry,DeductCodes,DeductAmounts,3);
                                      FillDeductEntries(DeductCodes,DeductAmounts,30,3);
                                      ClearDeductAmounts(DeductAmounts);

                                      // Professional deductions
                                      GatherDeductEntries(PayrollDirectory."Tax Deduction Type"::Professional,
                                        PersonIncomeEntry,DeductCodes,DeductAmounts,3);
                                      FillDeductEntries(DeductCodes,DeductAmounts,33,3);
                                      ClearDeductAmounts(DeductAmounts);
                                    UNTIL PersonIncomeEntry.NEXT = 0;

                                  CalcCh4Amounts;

                                  FOR J := 1 TO 13 DO BEGIN
                                    IF Ch4Amounts[1,J] <> 0 THEN
                                      ExcelMgt.FillCell(Columns[J] + FORMAT(16),FORMAT(Ch4Amounts[1,J],0,1));
                                    IF Ch4Amounts[2,J] <> 0 THEN
                                      ExcelMgt.FillCell(Columns[J] + FORMAT(18),FORMAT(Ch4Amounts[2,J],0,1));
                                    IF Ch4Amounts[3,J] <> 0 THEN
                                      ExcelMgt.FillCell(Columns[J] + FORMAT(27),FORMAT(Ch4Amounts[3,J],0,1));
                                    IF Ch4Amounts[4,J] > 0 THEN
                                      ExcelMgt.FillCell(Columns[J] + FORMAT(37),FORMAT(Ch4Amounts[4,J],0,1));
                                    IF Ch4Amounts[5,J] <> 0 THEN
                                      ExcelMgt.FillCell(Columns[J] + FORMAT(38),FORMAT(Ch4Amounts[5,J],0,1));
                                    IF Ch4Amounts[6,J] <> 0 THEN
                                      ExcelMgt.FillCell(Columns[J] + FORMAT(39),FORMAT(Ch4Amounts[6,J],0,1));
                                    IF Ch4Amounts[7,J] <> 0 THEN
                                      ExcelMgt.FillCell(Columns[J] + FORMAT(40),FORMAT(Ch4Amounts[7,J],0,1));
                                    // IF Ch4Amounts[5,J] > Ch4Amounts[6,J] THEN
                                    // ExcelMgt.FillCell(Columns[J] + FORMAT(41),FORMAT(Ch4Amounts[5,J] - Ch4Amounts[6,J],0,1));
                                    // IF Ch4Amounts[5,J] < Ch4Amounts[6,J] THEN
                                    // ExcelMgt.FillCell(Columns[J] + FORMAT(42),FORMAT(Ch4Amounts[6,J] - Ch4Amounts[5,J],0,1));
                                  END;

                                  // chapter 5
                                  Ch5RowNo := 7;
                                  ExcelMgt.OpenSheet('Sheet4');

                                  // Calculate accrued income tax
                                  WITH TempPersonIncomeEntry DO BEGIN
                                    RESET;
                                    SETRANGE("Person Income No.","Person Income Header"."No.");
                                    SETRANGE("Entry Type","Entry Type"::"Accrued Income Tax");

                                    PersonIncomeEntry.RESET;
                                    PersonIncomeEntry.SETRANGE("Person Income No.","Person Income Header"."No.");
                                    PersonIncomeEntry.SETRANGE("Entry Type","Entry Type"::"Accrued Income Tax");
                                    IF PersonIncomeEntry.FINDSET THEN
                                      REPEAT
                                        SETRANGE("Posting Date",PersonIncomeEntry."Posting Date");
                                        IF FINDFIRST THEN BEGIN
                                          Amount += PersonIncomeEntry.Amount;
                                          MODIFY;
                                        END ELSE BEGIN
                                          TempPersonIncomeEntry := PersonIncomeEntry;
                                          INSERT;
                                        END;
                                      UNTIL PersonIncomeEntry.NEXT = 0;

                                    TotalAccruals := 0;
                                    RESET;
                                    IF FINDSET THEN
                                      REPEAT
                                        TempPersonIncomeEntryByDate.INIT;
                                        TempPersonIncomeEntryByDate := TempPersonIncomeEntry;
                                        TempPersonIncomeEntryByDate.INSERT;
                                        IF NOT TempPersonIncomeEntryByDate.Interim THEN
                                          TotalAccruals += TempPersonIncomeEntryByDate.Amount;
                                      UNTIL NEXT = 0;
                                    DELETEALL;
                                  END;

                                  TempPersonIncomeEntry.DELETEALL;
                                  WITH PersonIncomeEntry DO BEGIN
                                    TotalPayments := 0;
                                    RESET;
                                    SETRANGE("Person Income No.","Person Income Header"."No.");
                                    SETRANGE("Entry Type","Entry Type"::"Paid Income Tax");
                                    IF FINDSET THEN
                                      REPEAT
                                        TempPersonIncomeEntryByDate.INIT;
                                        TempPersonIncomeEntryByDate := PersonIncomeEntry;
                                        TempPersonIncomeEntryByDate.INSERT;
                                        TempPersonIncomeEntry.SETRANGE("Posting Date",TempPersonIncomeEntryByDate."Posting Date");
                                        IF NOT TempPersonIncomeEntry.FINDFIRST THEN BEGIN
                                          TempPersonIncomeEntry := TempPersonIncomeEntryByDate;
                                          TempPersonIncomeEntry.INSERT;
                                          TotalPayments += TempPersonIncomeEntryByDate.Amount;
                                        END;
                                      UNTIL NEXT = 0;
                                  END;

                                  WITH TempPersonIncomeEntryByDate DO BEGIN
                                    TempPersonIncomeEntry.RESET;
                                    TempPersonIncomeEntry.SETCURRENTKEY("Posting Date");
                                    RESET;
                                    SETCURRENTKEY("Posting Date");
                                    InterimAccruals := 0;
                                    IF TempPersonIncomeEntry.FINDSET THEN
                                      REPEAT
                                        SETRANGE("Posting Date",TempPersonIncomeEntry."Posting Date");
                                        IF FINDSET THEN BEGIN
                                          ExcelMgt.CopyRow(Ch5RowNo);
                                          REPEAT
                                            PayrollPeriod.GET("Period Code");
                                            CASE "Entry Type" OF
                                              "Entry Type"::"Accrued Income Tax":
                                                BEGIN
                                                  IF Interim THEN
                                                    InterimAccruals += Amount
                                                  ELSE
                                                    Amount -= InterimAccruals;
                                                  ExcelMgt.FillCell('A' + FORMAT(Ch5RowNo),FORMAT("Posting Date"));
                                                  ExcelMgt.FillCell('O' + FORMAT(Ch5RowNo),PayrollPeriod.Name);
                                                  ExcelMgt.FillCell('AK' + FORMAT(Ch5RowNo),FORMAT("Document Date"));
                                                  ExcelMgt.FillCell('AW' + FORMAT(Ch5RowNo),FORMAT(Amount));
                                                END;
                                              "Entry Type"::"Paid Income Tax":
                                                BEGIN
                                                  ExcelMgt.FillCell('BG' + FORMAT(Ch5RowNo),FORMAT("Posting Date"));
                                                  ExcelMgt.FillCell('CA' + FORMAT(Ch5RowNo),FORMAT(Amount));
                                                  IF VendLedgEntry.GET("Vendor Ledger Entry No.") THEN BEGIN
                                                    VendLedgEntry.CALCFIELDS(Amount);
                                                    ExcelMgt.FillCell('BQ' + FORMAT(Ch5RowNo),VendLedgEntry."Document No.");
                                                    BankAccLedgEntry.RESET;
                                                    BankAccLedgEntry.SETCURRENTKEY("Document No.","Posting Date");
                                                    BankAccLedgEntry.SETRANGE("Document No.",VendLedgEntry."Document No.");
                                                    BankAccLedgEntry.SETRANGE("Posting Date",VendLedgEntry."Posting Date");
                                                    BankAccLedgEntry.SETRANGE("Document Type",VendLedgEntry."Document Type");
                                                    IF BankAccLedgEntry.FINDFIRST THEN BEGIN
                                                      CheckLedgEntry.RESET;
                                                      CheckLedgEntry.SETCURRENTKEY("Bank Account Ledger Entry No.");
                                                      CheckLedgEntry.SETRANGE("Bank Account Ledger Entry No.",BankAccLedgEntry."Entry No.");
                                                      IF CheckLedgEntry.FINDFIRST THEN BEGIN
                                                        ExcelMgt.FillCell('CP' + FORMAT(Ch5RowNo),CheckLedgEntry.KBK);
                                                        ExcelMgt.FillCell('DD' + FORMAT(Ch5RowNo),CheckLedgEntry.OKATO);
                                                      END;
                                                    END;
                                                  END;
                                                END;
                                            END;
                                          UNTIL NEXT = 0;
                                          Ch5RowNo += 1;
                                        END;
                                      UNTIL TempPersonIncomeEntry.NEXT = 0;
                                    ExcelMgt.FillCell('AW' + FORMAT(Ch5RowNo),FORMAT(TotalAccruals));
                                    ExcelMgt.FillCell('CA' + FORMAT(Ch5RowNo),FORMAT(TotalPayments));
                                  END;

                                  // chapter 6 and 7
                                  ExcelMgt.OpenSheet('Sheet5');
                                  FillChapter6;
                                  FillChapter7;

                                  // chapter 8
                                  FillChapter8;
                                END;

               ReqFilterFields=No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   DocumentDate := TODAY;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             RUS=è†‡†¨•‚‡Î] }

      { 1210010;2;Field     ;
                  CaptionML=[ENU=Document Date;
                             RUS=Ñ†‚† §Æ™„¨•≠‚†];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=DocumentDate }

      { 1210000;2;Field     ;
                  CaptionML=[ENU=Preview;
                             RUS=è‡Æ·¨Æ‚‡];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=PreviewMode }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      HumanResSetup@1210004 : Record 5218;
      CompanyInfo@1210003 : Record 79;
      ExcelTemplate@1210006 : Record 14919;
      Employee@1210012 : Record 5200;
      Person@1210020 : Record 17350;
      PersonalDoc@1210051 : Record 17352;
      AltAddr@1210052 : Record 5201;
      PersonIncomeEntry@1210056 : Record 17398;
      TempPersonIncomeEntry@1210011 : TEMPORARY Record 17398;
      TempPersonIncomeEntryByDate@1210066 : TEMPORARY Record 17398;
      PayrollPeriod@1210055 : Record 17426;
      PayrollDirectory@1210062 : Record 17425;
      VendLedgEntry@1210013 : Record 25;
      BankAccLedgEntry@1210061 : Record 271;
      CheckLedgEntry@1210065 : Record 272;
      ExcelMgt@1210002 : Codeunit 12416;
      NoSeriesMgt@1210048 : Codeunit 396;
      Ch4TaxCode@1210000 : ARRAY [5] OF Code[10];
      Columns@1210009 : ARRAY [13] OF Code[2];
      Ch4IncomeAmount@1210001 : ARRAY [5,13] OF Decimal;
      FileName@1210005 : Text[1024];
      I@1210007 : Integer;
      J@1210008 : Integer;
      Ch4Amounts@1210054 : ARRAY [7,13] OF Decimal;
      Ch6Amounts@1210014 : ARRAY [6,13] OF Decimal;
      Ch7Amounts@1210015 : ARRAY [7,13] OF Decimal;
      Ch8Amounts@1210016 : ARRAY [5,7] OF Decimal;
      DocumentDate@1210018 : Date;
      Text000@1210046 : TextConst 'ENU=Enter Create Date.;RUS=Ç¢•§®‚• §†‚„ ·Æß§†≠®Ô';
      Text013@1210034 : TextConst 'ENU=Gender is missing for employee %1.;RUS=é‚·„‚·‚¢„•‚ ØÆ´ §´Ô ·Æ‚‡„§≠®™† %1.';
      Text016@1210031 : TextConst 'ENU=Registration address is missing for employee %1.;RUS=Ä§‡•· ‡•£®·‚‡†Ê®® §´Ô ·Æ‚‡„§≠®™† %1 Æ‚·„‚·‚¢„•‚.';
      Text017@1210030 : TextConst 'ENU=Registration post code is missing for employee %1.;RUS=èÆÁ‚Æ¢Î© ®≠§•™· ‡•£®·‚‡†Ê®® §´Ô ·Æ‚‡„§≠®™† %1 Æ‚·„‚·‚¢„•‚.';
      Text018@1210029 : TextConst 'ENU=Registration address region is missing for employee %1.;RUS=ê•£®Æ≠ †§‡•·† ‡•£®·‚‡†Ê®® §´Ô ·Æ‚‡„§≠®™† %1 Æ‚·„‚·‚¢„•‚.';
      Text019@1210028 : TextConst 'ENU=Registration address region is not found for employee %1.;RUS=ç• „§†´Æ·Ï ≠†©‚® ‡•£®Æ≠ †§‡•·† ‡•£®·‚‡†Ê®® ·Æ‚‡„§≠®™† %1.';
      Text026@1210021 : TextConst 'ENU=There is no Employee No. associated with Person No. %1.;RUS=ç•‚ ™Æ§† ·Æ‚‡„§≠®™†, ·ÆÆ‚¢•‚·‚¢„ÓÈ•£Æ ™Æ§„ ‰®ß®Á•·™Æ£Æ ´®Ê† %1.';
      DocumentNo@1210047 : Code[20];
      CurrOKATO@1210050 : Code[11];
      CurrKPP@1210049 : Code[10];
      PreviewMode@1210053 : Boolean;
      Ch5RowNo@1210017 : Integer;
      TotalDeductAmounts@1210010 : ARRAY [7,13] OF Decimal;
      Text027@1210019 : TextConst 'ENU=Field %1 in table %2 for %3 %4 should not be empty.;RUS=èÆ´• %1 ¢ ‚†°´®Ê• %2 §´Ô %3 %4 ≠• §Æ´¶≠Æ °Î‚Ï Ø„·‚Î¨.';
      DeductCodes@1210063 : ARRAY [7] OF Code[10];
      DeductAmounts@1210064 : ARRAY [7,13] OF Decimal;
      TestMode@1210022 : Boolean;

    PROCEDURE InitColumns@1210035(ChapterNo@1210000 : Integer);
    BEGIN
      CLEAR(Columns);
      CASE ChapterNo OF
        3,4,5:
          BEGIN
            Columns[1] := 'AK';
            Columns[2] := 'AU';
            Columns[3] := 'BE';
            Columns[4] := 'BO';
            Columns[5] := 'BY';
            Columns[6] := 'CI';
            Columns[7] := 'CS';
            Columns[8] := 'DC';
            Columns[9] := 'DM';
            Columns[10] := 'DW';
            Columns[11] := 'EG';
            Columns[12] := 'EQ';
            Columns[13] := 'FA';
          END;
        6:
          BEGIN
            Columns[1] := 'S';
            Columns[2] := 'AK';
            Columns[3] := 'BC';
            Columns[4] := 'BU';
            Columns[5] := 'CM';
            Columns[6] := 'DU';
            Columns[7] := 'EQ';
          END;
      END;
    END;

    PROCEDURE FindIncomeCode@1210006(TaxCode@1210000 : Code[10];VAR RowNo@1210002 : Integer) : Boolean;
    BEGIN
      RowNo := 0;
      FOR I := 1 TO 5 DO BEGIN
        IF Ch4TaxCode[I] <> '' THEN
          RowNo := I;
        IF Ch4TaxCode[I] = TaxCode THEN
          EXIT(TRUE);
      END;

      EXIT(FALSE);
    END;

    PROCEDURE FillChapter3@1210001(SheetName@1210000 : Text[30];TaxPercent@1210001 : Integer);
    VAR
      RowNo@1210002 : Integer;
    BEGIN
      ExcelMgt.OpenSheet(SheetName);
      RowNo := 5;
      PersonIncomeEntry."Tax %" := TaxPercent;
      ExcelMgt.FillCell('AS2',FORMAT(PersonIncomeEntry."Tax %"));

      WITH TempPersonIncomeEntry DO BEGIN
        RESET;
        SETRANGE("Person Income No.","Person Income Header"."No.");
        SETRANGE("Entry Type","Entry Type"::"Taxable Income");

        PersonIncomeEntry.RESET;
        PersonIncomeEntry.SETRANGE("Person Income No.","Person Income Header"."No.");
        PersonIncomeEntry.SETRANGE("Entry Type","Entry Type"::"Taxable Income");
        PersonIncomeEntry.SETFILTER("Tax Code",'<>%1','');
        PersonIncomeEntry.SETRANGE("Tax %",TaxPercent);
        PersonIncomeEntry.SETRANGE("Advance Payment",FALSE);
        IF PersonIncomeEntry.FINDSET THEN
          REPEAT
            SETRANGE("Period Code",PersonIncomeEntry."Period Code");
            SETRANGE("Tax Code",PersonIncomeEntry."Tax Code");
            IF FINDFIRST THEN BEGIN
              Base += PersonIncomeEntry.Base;
              IF "Posting Date" < PersonIncomeEntry."Posting Date" THEN
                "Posting Date" := PersonIncomeEntry."Posting Date";
              MODIFY;
            END ELSE BEGIN
              TempPersonIncomeEntry := PersonIncomeEntry;
              INSERT;
            END;
          UNTIL PersonIncomeEntry.NEXT = 0;

        RESET;
        IF FINDSET THEN
          REPEAT
            PayrollPeriod.GET("Period Code");
            ExcelMgt.CopyRow(RowNo);
            ExcelMgt.FillCell('C' + FORMAT(RowNo),FORMAT("Posting Date"));
            ExcelMgt.FillCell('AM' + FORMAT(RowNo),PayrollPeriod.Name);
            ExcelMgt.FillCell('BG' + FORMAT(RowNo),"Tax Code");
            ExcelMgt.FillCell('CA' + FORMAT(RowNo),FORMAT(Base));
            RowNo += 1;
          UNTIL NEXT = 0;
        DELETEALL;
      END;
    END;

    PROCEDURE FillChapter6@1210002();
    BEGIN
      WITH PersonIncomeEntry DO BEGIN
        RESET;
        SETRANGE("Person Income No.","Person Income Header"."No.");
        SETRANGE("Entry Type","Entry Type"::"Taxable Income");
        SETFILTER("Tax Code",'<>%1','');
        SETRANGE("Tax %","Tax %"::"9");
        IF FINDSET THEN
          REPEAT
            J := ConvertPeriodCode2ColNo("Period Code");
            Ch6Amounts[1][J] := Ch6Amounts[1][J] + Base;
            Ch6Amounts[2][J] := Ch6Amounts[2][J] + Base - "Tax Deduction Amount";
          UNTIL NEXT = 0;
      END;

      InitColumns(4);
      CalcCh6Amounts;

      FOR J := 1 TO 13 DO BEGIN
        IF Ch6Amounts[1,J] <> 0 THEN
          ExcelMgt.FillCell(Columns[J] + FORMAT(5),FORMAT(Ch6Amounts[1,J],0,1));
        IF Ch6Amounts[2,J] <> 0 THEN
          ExcelMgt.FillCell(Columns[J] + FORMAT(9),FORMAT(Ch6Amounts[2,J],0,1));
        IF Ch6Amounts[3,J] <> 0 THEN
          ExcelMgt.FillCell(Columns[J] + FORMAT(10),FORMAT(Ch6Amounts[3,J],0,1));
        IF Ch6Amounts[4,J] <> 0 THEN
          ExcelMgt.FillCell(Columns[J] + FORMAT(11),FORMAT(Ch6Amounts[4,J],0,1));
        IF Ch6Amounts[3,J] > Ch6Amounts[4,J] THEN
          ExcelMgt.FillCell(Columns[J] + FORMAT(12),FORMAT(Ch6Amounts[3,J] - Ch6Amounts[4,J],0,1));
        IF Ch6Amounts[3,J] < Ch6Amounts[4,J] THEN
          ExcelMgt.FillCell(Columns[J] + FORMAT(14),FORMAT(Ch6Amounts[4,J] - Ch6Amounts[3,J],0,1));
      END;
    END;

    PROCEDURE FillChapter7@1210003();
    BEGIN
      WITH PersonIncomeEntry DO BEGIN
        RESET;
        SETRANGE("Person Income No.","Person Income Header"."No.");
        SETRANGE("Entry Type","Entry Type"::"Taxable Income");
        SETFILTER("Tax Code",'<>%1','');
        SETRANGE("Tax %","Tax %"::"35");
        IF FINDSET THEN
          REPEAT
            J := ConvertPeriodCode2ColNo("Period Code");
            Ch7Amounts[1][J] := Ch7Amounts[1][J] + Base;
            Ch7Amounts[2][J] := Ch7Amounts[2][J] + "Tax Deduction Amount";
            Ch7Amounts[3][J] := Ch7Amounts[1][J] + Ch7Amounts[2][J];
          UNTIL NEXT = 0;
      END;

      InitColumns(5);
      CalcCh7Amounts;

      FOR J := 1 TO 13 DO BEGIN
        IF Ch7Amounts[1,J] <> 0 THEN
          ExcelMgt.FillCell(Columns[J] + FORMAT(25),FORMAT(Ch7Amounts[1,J],0,1));
        IF Ch7Amounts[2,J] <> 0 THEN
          ExcelMgt.FillCell(Columns[J] + FORMAT(27),FORMAT(Ch7Amounts[2,J],0,1));
        IF Ch7Amounts[3,J] <> 0 THEN
          ExcelMgt.FillCell(Columns[J] + FORMAT(33),FORMAT(Ch7Amounts[3,J],0,1));
        IF Ch7Amounts[4,J] <> 0 THEN
          ExcelMgt.FillCell(Columns[J] + FORMAT(34),FORMAT(Ch7Amounts[4,J],0,1));
        IF Ch7Amounts[5,J] <> 0 THEN
          ExcelMgt.FillCell(Columns[J] + FORMAT(35),FORMAT(Ch7Amounts[5,J],0,1));
        IF Ch7Amounts[4,J] > Ch7Amounts[5,J] THEN
          ExcelMgt.FillCell(Columns[J] + FORMAT(36),FORMAT(Ch7Amounts[4,J] - Ch7Amounts[5,J],0,1));
        IF Ch7Amounts[4,J] < Ch7Amounts[5,J] THEN
          ExcelMgt.FillCell(Columns[J] + FORMAT(38),FORMAT(Ch7Amounts[5,J] - Ch7Amounts[4,J],0,1));
      END;
    END;

    PROCEDURE FillChapter8@1210005();
    BEGIN
      InitColumns(6);
      CalcCh8Amounts;

      ExcelMgt.OpenSheet('Sheet6');

      FOR I := 1 TO 5 DO
        FOR J := 1 TO 7 DO
          IF Ch8Amounts[I][J] <> 0 THEN
            ExcelMgt.FillCell(Columns[J] + FORMAT(4 + I),FORMAT(Ch8Amounts[I,J],0,1));
    END;

    PROCEDURE ConvertPeriodCode2ColNo@1210000(PeriodCode@1210000 : Code[10]) : Integer;
    BEGIN
      EVALUATE(J,COPYSTR(PeriodCode,3,2));
      EXIT(J);
    END;

    PROCEDURE ConvertColNo2PeriodCode@1210039(ColNo@1210000 : Integer;Year@1210001 : Integer) : Code[10];
    VAR
      PeriodCode@1210002 : Code[10];
    BEGIN
      PeriodCode := COPYSTR(FORMAT(Year),3,2);
      IF ColNo < 10 THEN
        PeriodCode := PeriodCode + '0' + FORMAT(ColNo)
      ELSE
        PeriodCode := PeriodCode + FORMAT(ColNo);
      EXIT(PeriodCode);
    END;

    PROCEDURE CalcPeriodAmount@1210024(EmployeeNo@1210000 : Code[20];ElementCode@1210001 : Code[20];PeriodCode@1210002 : Code[10]) : Decimal;
    BEGIN
      Employee.SETRANGE("Employee No. Filter",EmployeeNo);
      Employee.SETRANGE("Element Code Filter",ElementCode);
      Employee.SETRANGE("Payroll Period Filter",PeriodCode);
      Employee.CALCFIELDS("Payroll Amount");
      EXIT(ABS(Employee."Payroll Amount"));
    END;

    PROCEDURE CalcCh4Amounts@1210020();
    BEGIN
      FOR J := 1 TO 13 DO BEGIN
        FOR I := 1 TO 5 DO
          Ch4Amounts[1][J] := Ch4Amounts[1][J] + Ch4IncomeAmount[I][J];
        IF J = 1 THEN
          Ch4Amounts[2][J] := Ch4Amounts[1][J]
        ELSE
          IF J < 13 THEN
            Ch4Amounts[2][J] := Ch4Amounts[1][J] + Ch4Amounts[2][J - 1]
          ELSE
            Ch4Amounts[2][13] := Ch4Amounts[2][12];
      END;

      FOR J := 1 TO 13 DO BEGIN
        FOR I := 1 TO 7 DO
          Ch4Amounts[3][J] := Ch4Amounts[3][J] + TotalDeductAmounts[I][J];
        IF (J > 1) AND (J <> 13) THEN
          Ch4Amounts[3][J] := Ch4Amounts[3][J] + Ch4Amounts[3][J - 1];
      END;

      FOR J := 1 TO 13 DO BEGIN
        IF J = 1 THEN
          Ch4Amounts[4][J] := Ch4Amounts[1][J] - Ch4Amounts[3][J]
        ELSE
          IF J < 13 THEN
            Ch4Amounts[4][J] := Ch4Amounts[1][J] - Ch4Amounts[3][J] + Ch4Amounts[3][J - 1]
          ELSE
            Ch4Amounts[4][J] := Ch4Amounts[1][J] - Ch4Amounts[3][J];
        IF J = 1 THEN
          Ch4Amounts[5][J] := Ch4Amounts[4][J]
        ELSE
          IF J < 13 THEN
            Ch4Amounts[5][J] := Ch4Amounts[4][J] + Ch4Amounts[5][J - 1]
          ELSE
            Ch4Amounts[5][13] := Ch4Amounts[5][12];
      END;

      FOR J := 1 TO 13 DO BEGIN
        IF J < 13 THEN BEGIN
          Ch4Amounts[6][J] :=
            CalcPeriodAmount(
              Employee."No.",HumanResSetup."Income Tax 13%",ConvertColNo2PeriodCode(J,"Person Income Header".Year));
          Ch4Amounts[6][13] := Ch4Amounts[6][13] + Ch4Amounts[6][J];
        END;
        IF J = 1 THEN
          Ch4Amounts[7][J] := Ch4Amounts[6][J]
        ELSE
          IF J < 13 THEN
            Ch4Amounts[7][J] := Ch4Amounts[6][J] + Ch4Amounts[7][J - 1]
          ELSE
            Ch4Amounts[7][13] := Ch4Amounts[7][12];
      END;
    END;

    PROCEDURE CalcCh6Amounts@1210115();
    BEGIN
      FOR J := 1 TO 12 DO BEGIN
        Ch6Amounts[1][13] := Ch6Amounts[1][13] + Ch6Amounts[1][J];
        Ch6Amounts[2][13] := Ch6Amounts[2][13] + Ch6Amounts[2][J];
        Ch6Amounts[3][J] := ROUND(Ch6Amounts[2][J] / 100 * 9);
        Ch6Amounts[3][13] := Ch6Amounts[3][13] + Ch6Amounts[3][J];
        Ch6Amounts[4][J] :=
          CalcPeriodAmount(
            Employee."No.",HumanResSetup."Income Tax 9%",ConvertColNo2PeriodCode(J,"Person Income Header".Year));
        Ch6Amounts[4][13] := Ch6Amounts[4][13] + Ch6Amounts[4][J];
      END;
    END;

    PROCEDURE CalcCh7Amounts@1210147();
    BEGIN
      FOR J := 1 TO 12 DO BEGIN
        Ch7Amounts[1][13] := Ch7Amounts[1][13] + Ch7Amounts[1][J];
        Ch7Amounts[2][13] := Ch7Amounts[2][13] + Ch7Amounts[2][J];
        Ch7Amounts[3][13] := Ch7Amounts[3][13] + Ch7Amounts[3][J];
        Ch7Amounts[4][J] := ROUND(Ch7Amounts[3][J] / 100 * 35);
        Ch7Amounts[4][13] := Ch7Amounts[4][13] + Ch7Amounts[4][J];
        Ch7Amounts[5][J] :=
          CalcPeriodAmount(
            Employee."No.",HumanResSetup."Income Tax 35%",ConvertColNo2PeriodCode(J,"Person Income Header".Year));
        Ch7Amounts[5][13] := Ch7Amounts[5][13] + Ch7Amounts[5][J];
      END;
    END;

    PROCEDURE CalcCh8Amounts@1210015();
    BEGIN
      Ch8Amounts[1][1] := Ch6Amounts[3,13];
      Ch8Amounts[1][2] := Ch6Amounts[4,13];
      IF Ch6Amounts[3,13] > Ch6Amounts[4,13] THEN
        Ch8Amounts[1][6] := Ch6Amounts[3,13] - Ch6Amounts[4,13];
      IF Ch6Amounts[3,13] < Ch6Amounts[4,13] THEN
        Ch8Amounts[1][7] := Ch6Amounts[4,13] - Ch6Amounts[3,13];

      Ch8Amounts[2][1] := Ch4Amounts[6,13];
      Ch8Amounts[2][2] := Ch4Amounts[6,13];
      IF Ch4Amounts[6,13] > Ch4Amounts[6,13] THEN
        Ch8Amounts[2][6] := Ch4Amounts[6,13] - Ch4Amounts[6,13];
      IF Ch4Amounts[6,13] < Ch4Amounts[6,13] THEN
        Ch8Amounts[2][7] := Ch4Amounts[6,13] - Ch4Amounts[6,13];

      Ch8Amounts[4][1] := Ch7Amounts[4,13];
      Ch8Amounts[4][2] := Ch7Amounts[5,13];
      IF Ch7Amounts[4,13] > Ch7Amounts[5,13] THEN
        Ch8Amounts[4][6] := Ch7Amounts[4,13] - Ch7Amounts[5,13];
      IF Ch7Amounts[4,13] < Ch7Amounts[5,13] THEN
        Ch8Amounts[4][7] := Ch7Amounts[5,13] - Ch7Amounts[4,13];

      FOR I := 1 TO 4 DO BEGIN
        Ch8Amounts[5][1] := Ch8Amounts[5][1] + Ch8Amounts[I,1];
        Ch8Amounts[5][2] := Ch8Amounts[5][2] + Ch8Amounts[I,2];
        Ch8Amounts[5][6] := Ch8Amounts[5][6] + Ch8Amounts[I,6];
        Ch8Amounts[5][7] := Ch8Amounts[5][7] + Ch8Amounts[I,7];
      END;
    END;

    PROCEDURE ValidTaxDeductionCode@1210043(TaxDeductionCode@1210000 : Code[10];CheckDate@1210002 : Date;TaxDeductionType@1210003 : Option) : Boolean;
    VAR
      PayrollDirectory@1210001 : Record 17425;
    BEGIN
      PayrollDirectory.SETRANGE(Type,PayrollDirectory.Type::"Tax Deduction");
      PayrollDirectory.SETRANGE(Code,TaxDeductionCode);
      PayrollDirectory.SETFILTER("Starting Date",'<=%1',CheckDate);
      IF NOT PayrollDirectory.FINDLAST THEN
        EXIT(FALSE);

      EXIT(PayrollDirectory."Tax Deduction Type" = TaxDeductionType)
    END;

    PROCEDURE GatherDeductEntries@1210058(TaxDeductionType@1210000 : Option;VAR PersonIncomeEntry@1210001 : Record 17398;VAR DeductCodes@1210002 : ARRAY [7] OF Code[10];VAR DeductAmounts@1210003 : ARRAY [7,13] OF Decimal;RowsQty@1210007 : Integer);
    VAR
      DeductsPersonIncomeEntry@1210004 : Record 17398;
      I@1210005 : Integer;
      J@1210006 : Integer;
      K@1210008 : Integer;
      K1@1210009 : Integer;
    BEGIN
      DeductsPersonIncomeEntry.SETVIEW(PersonIncomeEntry.GETVIEW);

      I := 1;
      WITH DeductsPersonIncomeEntry DO
        IF FINDSET THEN
          REPEAT
            IF ValidTaxDeductionCode("Tax Deduction Code","Document Date",TaxDeductionType) THEN BEGIN
              J := ConvertPeriodCode2ColNo("Period Code");
              K := 1;
              WHILE K < I DO BEGIN
                IF DeductCodes[K] = "Tax Deduction Code" THEN BEGIN
                  K1 := K;
                  K := I;
                END ELSE
                  K := K + 1;
              END;
              IF K1 > 0 THEN BEGIN
                DeductAmounts[K1][J] := DeductAmounts[K1][J] + "Tax Deduction Amount";
                DeductAmounts[K1][13] := DeductAmounts[K1][13] + "Tax Deduction Amount";
              END ELSE BEGIN
                DeductCodes[I] := "Tax Deduction Code";
                DeductAmounts[I][J] := DeductAmounts[I][J] + "Tax Deduction Amount";
                DeductAmounts[I][13] := DeductAmounts[I][13] + "Tax Deduction Amount";
                I += 1;
              END;
            END;
          UNTIL (NEXT = 0) OR (I > RowsQty);
    END;

    PROCEDURE FillDeductEntries@1210059(DeductCodes@1210001 : ARRAY [7] OF Code[10];DeductAmounts@1210000 : ARRAY [7,13] OF Decimal;StartingRow@1210002 : Decimal;RowsQty@1210003 : Integer);
    VAR
      I@1210004 : Integer;
      J@1210005 : Integer;
    BEGIN
      FOR I := 1 TO RowsQty DO
        IF DeductCodes[I] <> '' THEN BEGIN
          ExcelMgt.FillCell('U' + FORMAT(StartingRow + I),DeductCodes[I]);
          FOR J := 1 TO 13 DO
            IF DeductAmounts[I,J] <> 0 THEN
              ExcelMgt.FillCell(Columns[J] + FORMAT(StartingRow + I),FORMAT(DeductAmounts[I,J],0,1));
        END;
    END;

    PROCEDURE IncreaceTotalDeductAmounts@1210086(DeductAmounts@1210000 : ARRAY [7,13] OF Decimal);
    BEGIN
      FOR I := 1 TO 7 DO
        FOR J := 1 TO 13 DO
          TotalDeductAmounts[I,J] += DeductAmounts[I,J];
    END;

    PROCEDURE ClearDeductAmounts@1210088(VAR DeductAmounts@1210000 : ARRAY [7,13] OF Decimal);
    BEGIN
      FOR I := 1 TO 7 DO
        FOR J := 1 TO 13 DO
          DeductAmounts[I,J] := 0;
    END;

    PROCEDURE SetTestMode@1210008(NewTestMode@1210000 : Boolean);
    BEGIN
      TestMode := NewTestMode;
      DocumentDate := WORKDATE;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

