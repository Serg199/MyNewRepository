OBJECT Report 14905 Letter of Attorney M-2A
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Letter of Attorney M-2A;
               RUS=Доверенность - M-2A];
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 3462;    ;DataItem;Letter of Attorney Header;
               DataItemTable=Table14905;
               DataItemTableView=SORTING(No.);
               OnPreDataItem=VAR
                               FASetup@1210000 : Record 5603;
                             BEGIN
                               CompanyInformation.GET;
                               PurchSetup.GET;
                               PurchSetup.TESTFIELD("Released Letter of Attor. Nos.");

                               FASetup.GET;
                               FASetup.TESTFIELD("M-2a Template Code");
                               ExcelReportBuilderManager.InitTemplate(FASetup."M-2a Template Code");
                               ExcelReportBuilderManager.SetSheet('Sheet1');
                             END;

               OnAfterGetRecord=VAR
                                  LocalReportManagement@1210000 : Codeunit 12401;
                                BEGIN
                                  TESTFIELD("Employee No.");
                                  TESTFIELD("Buy-from Vendor Name");
                                  Employee.GET("Employee No.");
                                  Employee.TESTFIELD("Person No.");
                                  Person.GET(Employee."Person No.");
                                  Person.GetIdentityDoc("Validity Date",PersonalDoc);

                                  IF NOT Preview THEN BEGIN
                                    IF "Letter of Attorney No." = '' THEN
                                      "Letter of Attorney No." := NoSeriesManagement.GetNextNo(PurchSetup."Released Letter of Attor. Nos.",WORKDATE,TRUE);
                                    Release;
                                  END;

                                  ExcelReportBuilderManager.AddSection('REPORTHEADER');
                                  ExcelReportBuilderManager.AddDataToSection('CompanyName',LocalReportManagement.GetCompanyName);
                                  ExcelReportBuilderManager.AddDataToSection('OKPO',CompanyInformation."OKPO Code");
                                  ExcelReportBuilderManager.AddDataToSection('DocNo',"Letter of Attorney No.");
                                  ExcelReportBuilderManager.AddDataToSection('DocDay',FORMAT(DATE2DMY("Document Date",1)));
                                  ExcelReportBuilderManager.AddDataToSection('DocMonth',LocManagement.Month2Text("Document Date"));
                                  ExcelReportBuilderManager.AddDataToSection('DocYear',FORMAT(DATE2DMY("Document Date",3)));
                                  ExcelReportBuilderManager.AddDataToSection('ValidDay',FORMAT(DATE2DMY("Validity Date",1)));
                                  ExcelReportBuilderManager.AddDataToSection('ValidMonth',LocManagement.Month2Text("Validity Date"));
                                  ExcelReportBuilderManager.AddDataToSection('ValidYear',FORMAT(DATE2DMY("Validity Date",3)));
                                  ExcelReportBuilderManager.AddDataToSection('ReceiverName',
                                    LocalReportManagement.GetCompanyName + '  ' +
                                    CompanyInformation.Address + '  ' + CompanyInformation."Address 2");
                                  ExcelReportBuilderManager.AddDataToSection('PayerName',
                                    LocalReportManagement.GetCompanyName + '  ' +
                                    CompanyInformation.Address + '  ' + CompanyInformation."Address 2");
                                  ExcelReportBuilderManager.AddDataToSection('BancAccNo',CompanyInformation."Bank Account No.");
                                  ExcelReportBuilderManager.AddDataToSection('BankName',
                                    CompanyInformation."Bank Name" + BICTxt + CompanyInformation."Bank BIC");
                                  ExcelReportBuilderManager.AddDataToSection('JobTitle',Employee.GetJobTitleName);
                                  ExcelReportBuilderManager.AddDataToSection('EmployeeName',"Employee Full Name");
                                  ExcelReportBuilderManager.AddDataToSection('EmployeeDocSeries',PersonalDoc."Document Series");
                                  ExcelReportBuilderManager.AddDataToSection('EmployeeDocNo',PersonalDoc."Document No.");
                                  ExcelReportBuilderManager.AddDataToSection('IssueAuthority',PersonalDoc."Issue Authority");
                                  ExcelReportBuilderManager.AddDataToSection('DocIssueDay',FORMAT(DATE2DMY(PersonalDoc."Issue Date",1)));
                                  ExcelReportBuilderManager.AddDataToSection('DocIssueMonth',LocManagement.Month2Text(PersonalDoc."Issue Date"));
                                  ExcelReportBuilderManager.AddDataToSection('DocIssueYear',FORMAT(DATE2DMY(PersonalDoc."Issue Date",3)));
                                  ExcelReportBuilderManager.AddDataToSection('VendorName',"Buy-from Vendor Name");
                                  ExcelReportBuilderManager.AddDataToSection('Desription',"Document Description");

                                  ExcelReportBuilderManager.AddSection('PAGEHEADER');
                                  IF NOT PrintItemList THEN BEGIN
                                    ExcelReportBuilderManager.AddSection('BODY');
                                    FillBody('----','----------------','-----','-----------------');
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                IF FileName <> '' THEN
                                  ExcelReportBuilderManager.ExportDataToClientFile(FileName)
                                ELSE
                                  ExcelReportBuilderManager.ExportData;
                              END;

               ReqFilterFields=No. }

    { 1881;1   ;DataItem;Letter of Attorney Line;
               DataItemTable=Table14906;
               DataItemTableView=SORTING(Letter of Attorney No.,Line No.);
               OnPreDataItem=BEGIN
                               IF NOT PrintItemList THEN
                                 CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  Counter += 1;

                                  QuantityText := '';

                                  IF Quantity <> 0 THEN
                                    QuantityText := LocManagement.Integer2Text(Quantity,0,"Unit of Measure","Unit of Measure","Unit of Measure");

                                  IF NOT ExcelReportBuilderManager.TryAddSectionWithPlaceForFooter('BODY','REPORTFOOTER') THEN BEGIN
                                    ExcelReportBuilderManager.AddPagebreak;
                                    ExcelReportBuilderManager.AddSection('PAGEHEADER');
                                    ExcelReportBuilderManager.AddSection('BODY');
                                  END;

                                  FillBody(FORMAT(Counter),Description,"Unit of Measure",QuantityText);
                                END;

               OnPostDataItem=BEGIN
                                IF (Counter = 0) AND PrintItemList THEN BEGIN
                                  ExcelReportBuilderManager.AddSection('BODY');
                                  FillBody('----','----------------','-----','-----------------');
                                END;

                                ExcelReportBuilderManager.AddSection('REPORTFOOTER');
                                ExcelReportBuilderManager.AddDataToSection('ManagerName',CompanyInformation."Director Name");
                                ExcelReportBuilderManager.AddDataToSection('AccountantName',CompanyInformation."Accountant Name");
                              END;

               DataItemLink=Letter of Attorney No.=FIELD(No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             RUS=Параметры] }

      { 1210000;2;Field     ;
                  CaptionML=[ENU=Print Item List;
                             RUS=Печатать перечень ценностей];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=PrintItemList }

      { 1210001;2;Field     ;
                  Name=Preview;
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=Preview }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CompanyInformation@1210012 : Record 79;
      PurchSetup@1210000 : Record 312;
      Employee@1210008 : Record 5200;
      Person@1210009 : Record 17350;
      PersonalDoc@1210004 : Record 17352;
      NoSeriesManagement@1210001 : Codeunit 396;
      LocManagement@1210007 : Codeunit 12400;
      ExcelReportBuilderManager@1210003 : Codeunit 14930;
      QuantityText@1210006 : Text[250];
      Counter@1210005 : Integer;
      PrintItemList@1210002 : Boolean;
      BICTxt@1210010 : TextConst 'ENU=" BIC ";RUS=" БИК "';
      Preview@1210011 : Boolean;
      FileName@1210013 : Text;

    PROCEDURE FillBody@1210018(LineNo@1210000 : Text;Description@1210001 : Text;UoM@1210002 : Text;Quantity@1210003 : Text);
    BEGIN
      ExcelReportBuilderManager.AddDataToSection('LineNo',LineNo);
      ExcelReportBuilderManager.AddDataToSection('Description',Description);
      ExcelReportBuilderManager.AddDataToSection('UoM',UoM);
      ExcelReportBuilderManager.AddDataToSection('Quantity',Quantity);
    END;

    PROCEDURE InitializeRequest@1210004(NewFileName@1210000 : Text;NewPreview@1210001 : Boolean);
    BEGIN
      FileName := NewFileName;
      Preview := NewPreview;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

