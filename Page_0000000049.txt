OBJECT Page 49 Purchase Quote
{
  OBJECT-PROPERTIES
  {
    Date=28.01.17;
    Time=12:00:00;
    Version List=NAVW110.00.00.15140,NAVRU10.00.00.15140;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Purchase Quote;
               RUS=Предложение по покупке];
    SourceTable=Table38;
    SourceTableView=WHERE(Document Type=FILTER(Quote));
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Approve,Request Approval;
                                RUS=Создать,Обработать,Отчет,Утвердить,Запросить утверждение];
    OnOpenPage=BEGIN
                 IF UserMgt.GetPurchasesFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetPurchasesFilter);
                   FILTERGROUP(0);
                 END;

                 SetDocNoVisible;
               END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserMgt.GetPurchasesFilter;

                  IF (NOT DocNoVisible) AND ("No." = '') THEN
                    SetBuyFromVendorFromFilter;
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     EXIT(ConfirmDeletion);
                   END;

    OnAfterGetCurrRecord=BEGIN
                           SetControlAppearance;
                           CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromRecord(Rec);
                           CurrPage.ApprovalFactBox.PAGE.UpdateApprovalEntriesFromSourceRecord(RECORDID);
                           ShowWorkflowStatus := CurrPage.WorkflowStatus.PAGE.SetFilterOnWorkflowRecord(RECORDID);
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 59      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Quote;
                                 RUS=&Предложение];
                      Image=Quote }
      { 61      ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 RUS=Статистика];
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CalcInvDiscForHeader;
                                 COMMIT;
                                 PAGE.RUNMODAL(PAGE::"Purchase Statistics",Rec);
                                 PurchCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 62      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Vendor;
                                 RUS=Поставщик];
                      RunObject=Page 26;
                      RunPageLink=No.=FIELD(Buy-from Vendor No.);
                      Image=Vendor }
      { 63      ;2   ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 RUS=Ко&мментарии];
                      RunObject=Page 66;
                      RunPageLink=Document Type=FIELD(Document Type),
                                  No.=FIELD(No.),
                                  Document Line No.=CONST(0);
                      Image=ViewComments }
      { 111     ;2   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 RUS=Измерения];
                      ToolTipML=[ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 RUS=Просмотр или изменение измерений, например области, проекта или отдела, которые можно назначать документам покупки и продажи для распределения себестоимости и анализа истории транзакций.];
                      Enabled="No." <> '';
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 37      ;2   ;Action    ;
                      Name=Approvals;
                      AccessByPermission=TableData 454=R;
                      CaptionML=[ENU=Approvals;
                                 RUS=Утверждения];
                      ToolTipML=[ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                                 RUS=Просмотр списка записей, ожидающих утверждения. Например, вы можете видеть имя пользователя, запросившего утверждение записи, время отправки запроса и время, когда он должен быть утвержден.];
                      Image=Approvals;
                      OnAction=VAR
                                 ApprovalEntries@1001 : Page 658;
                               BEGIN
                                 ApprovalEntries.Setfilters(DATABASE::"Purchase Header","Document Type","No.");
                                 ApprovalEntries.RUN;
                               END;
                                }
      { 1210000 ;2   ;Action    ;
                      CaptionML=[ENU=Letters of Attorney;
                                 RUS=Доверенности];
                      Image=Email;
                      OnAction=BEGIN
                                 ShowAttorneyLetters;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 23      ;1   ;ActionGroup;
                      CaptionML=[ENU=Approval;
                                 RUS=Утверждение] }
      { 21      ;2   ;Action    ;
                      Name=Approve;
                      CaptionML=[ENU=Approve;
                                 RUS=Утвердить];
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.ApproveRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 18      ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=[ENU=Reject;
                                 RUS=Отклонить];
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.RejectRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 17      ;2   ;Action    ;
                      Name=Delegate;
                      CaptionML=[ENU=Delegate;
                                 RUS=Делегировать];
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.DelegateRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 15      ;2   ;Action    ;
                      Name=Comment;
                      CaptionML=[ENU=Comments;
                                 RUS=Комментарии];
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.GetApprovalComment(Rec);
                               END;
                                }
      { 70      ;1   ;Action    ;
                      Name=Print;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Print;
                                 RUS=&Печать];
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 DocPrint.PrintPurchHeader(Rec);
                               END;
                                }
      { 3       ;1   ;ActionGroup;
                      CaptionML=[ENU=Release;
                                 RUS=Выпустить];
                      Image=ReleaseDoc }
      { 148     ;2   ;Separator  }
      { 118     ;2   ;Action    ;
                      Name=Release;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=[ENU=Re&lease;
                                 RUS=Вы&пустить];
                      Image=ReleaseDoc;
                      OnAction=VAR
                                 ReleasePurchDoc@1000 : Codeunit 415;
                               BEGIN
                                 ReleasePurchDoc.PerformManualRelease(Rec);
                               END;
                                }
      { 119     ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=[ENU=Re&open;
                                 RUS=&Открыть];
                      ToolTipML=[ENU=Reopen the document to change it after it has been approved. Approved documents have the Released status and must be opened before they can be changed;
                                 RUS=Повторное открытие документа для его изменения после утверждения. Утвержденные документы имеют статус "Выпущено", и их необходимо открывать перед изменением.];
                      Promoted=Yes;
                      Enabled=Status <> Status::Open;
                      Image=ReOpen;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ReleasePurchDoc@1001 : Codeunit 415;
                               BEGIN
                                 ReleasePurchDoc.PerformManualReopen(Rec);
                               END;
                                }
      { 64      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 RUS=Ф&ункции];
                      Image=Action }
      { 65      ;2   ;Action    ;
                      Name=CalculateInvoiceDiscount;
                      AccessByPermission=TableData 24=R;
                      CaptionML=[ENU=Calculate &Invoice Discount;
                                 RUS=Вычи&слить скидку по счету];
                      Image=CalculateInvoiceDiscount;
                      OnAction=BEGIN
                                 ApproveCalcInvDisc;
                                 PurchCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 144     ;2   ;Separator  }
      { 143     ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get St&d. Vend. Purchase Codes;
                                 RUS=Получить ст&андарт. коды покупки];
                      Image=VendorCode;
                      OnAction=VAR
                                 StdVendPurchCode@1000 : Record 175;
                               BEGIN
                                 StdVendPurchCode.InsertPurchLines(Rec);
                               END;
                                }
      { 146     ;2   ;Separator  }
      { 66      ;2   ;Action    ;
                      Name=CopyDocument;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Document;
                                 RUS=Копировать документ];
                      Promoted=Yes;
                      Image=CopyDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CopyPurchDoc.SetPurchHeader(Rec);
                                 CopyPurchDoc.RUNMODAL;
                                 CLEAR(CopyPurchDoc);
                                 IF GET("Document Type","No.") THEN;
                               END;
                                }
      { 138     ;2   ;Action    ;
                      Name=Archive Document;
                      CaptionML=[ENU=Archi&ve Document;
                                 RUS=Архи&вировать документ];
                      Image=Archive;
                      OnAction=BEGIN
                                 ArchiveManagement.ArchivePurchDocument(Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 35      ;2   ;ActionGroup;
                      Name=IncomingDocument;
                      CaptionML=[ENU=Incoming Document;
                                 RUS=Входящий документ];
                      ActionContainerType=NewDocumentItems;
                      Image=Documents }
      { 33      ;3   ;Action    ;
                      Name=IncomingDocCard;
                      CaptionML=[ENU=View Incoming Document;
                                 RUS=Просмотр входящего документа];
                      ToolTipML=[ENU=View any incoming document records and file attachments that exist for the entry or document, for example for auditing purposes;
                                 RUS=Просмотр всех входящих записей документов и вложенных файлов, относящихся к операции или к документу, например в целях аудита];
                      Enabled=HasIncomingDocument;
                      Image=ViewOrder;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IncomingDocument.ShowCardFromEntryNo("Incoming Document Entry No.");
                               END;
                                }
      { 31      ;3   ;Action    ;
                      Name=SelectIncomingDoc;
                      AccessByPermission=TableData 130=R;
                      CaptionML=[ENU=Select Incoming Document;
                                 RUS=Выбрать входящий документ];
                      ToolTipML=;
                      Image=SelectLineToApply;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 VALIDATE("Incoming Document Entry No.",IncomingDocument.SelectIncomingDocument("Incoming Document Entry No.",RECORDID));
                               END;
                                }
      { 29      ;3   ;Action    ;
                      Name=IncomingDocAttachFile;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create Incoming Document from File;
                                 RUS=Создать входящий документ из файла];
                      ToolTipML=;
                      Enabled=CreateIncomingDocumentEnabled;
                      Image=Attach;
                      OnAction=VAR
                                 IncomingDocumentAttachment@1000 : Record 133;
                               BEGIN
                                 IncomingDocumentAttachment.NewAttachmentFromPurchaseDocument(Rec);
                               END;
                                }
      { 25      ;3   ;Action    ;
                      Name=RemoveIncomingDoc;
                      CaptionML=[ENU=Remove Incoming Document;
                                 RUS=Удалить входящий документ];
                      ToolTipML=;
                      Enabled=HasIncomingDocument;
                      Image=RemoveLine;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IF IncomingDocument.GET("Incoming Document Entry No.") THEN
                                   IncomingDocument.RemoveLinkToRelatedRecord;
                                 "Incoming Document Entry No." := 0;
                                 MODIFY(TRUE);
                               END;
                                }
      { 39      ;1   ;ActionGroup;
                      CaptionML=[ENU=Request Approval;
                                 RUS=Утверждение запросов] }
      { 153     ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=[ENU=Send A&pproval Request;
                                 RUS=Отправить &запрос на утверждение];
                      Promoted=Yes;
                      Enabled=NOT OpenApprovalEntriesExist;
                      PromotedIsBig=Yes;
                      Image=SendApprovalRequest;
                      PromotedCategory=Category5;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 IF  ApprovalsMgmt.CheckPurchaseApprovalPossible(Rec) THEN
                                   ApprovalsMgmt.OnSendPurchaseDocForApproval(Rec);
                               END;
                                }
      { 154     ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=[ENU=Cancel Approval Re&quest;
                                 RUS=Отменить запрос на &утверждение];
                      Promoted=Yes;
                      Enabled=CanCancelApprovalForRecord;
                      PromotedIsBig=Yes;
                      Image=CancelApprovalRequest;
                      PromotedCategory=Category5;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.OnCancelPurchaseApprovalRequest(Rec);
                               END;
                                }
      { 7       ;1   ;ActionGroup;
                      CaptionML=[ENU=Make Order;
                                 RUS=Сделать заказ];
                      Image=MakeOrder }
      { 69      ;2   ;Action    ;
                      Name=Make Order;
                      CaptionML=[ENU=Make &Order;
                                 RUS=Сделать &заказ];
                      Promoted=Yes;
                      Image=MakeOrder;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckPurch(Rec) THEN
                                   CODEUNIT.RUN(CODEUNIT::"Purch.-Quote to Order (Yes/No)",Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           RUS=Общее] }

    { 2   ;2   ;Field     ;
                SourceExpr="No.";
                Importance=Additional;
                Visible=DocNoVisible;
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Vendor;
                           RUS=Поставщик];
                SourceExpr="Buy-from Vendor Name";
                Importance=Promoted;
                OnValidate=BEGIN
                             IF GETFILTER("Buy-from Vendor No.") = xRec."Buy-from Vendor No." THEN
                               IF "Buy-from Vendor No." <> xRec."Buy-from Vendor No." THEN
                                 SETRANGE("Buy-from Vendor No.");

                             CurrPage.UPDATE;
                           END;
                            }

    { 43  ;2   ;Group     ;
                CaptionML=[ENU=Buy-from;
                           RUS=Поставщик];
                GroupType=Group }

    { 72  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           RUS=Адрес];
                SourceExpr="Buy-from Address";
                Importance=Additional }

    { 74  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           RUS=Адрес 2];
                SourceExpr="Buy-from Address 2";
                Importance=Additional }

    { 77  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           RUS=Индекс];
                SourceExpr="Buy-from Post Code";
                Importance=Additional }

    { 76  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           RUS=Город];
                SourceExpr="Buy-from City";
                Importance=Additional }

    { 139 ;3   ;Field     ;
                CaptionML=[ENU=Contact No.;
                           RUS=Код контакта];
                SourceExpr="Buy-from Contact No.";
                Importance=Additional }

    { 8   ;2   ;Field     ;
                CaptionML=[ENU=Contact;
                           RUS=Контакт];
                SourceExpr="Buy-from Contact" }

    { 19  ;2   ;Field     ;
                SourceExpr="Document Date" }

    { 34  ;2   ;Field     ;
                SourceExpr="Due Date";
                Importance=Promoted }

    { 12  ;2   ;Field     ;
                SourceExpr="Order Date";
                Importance=Promoted }

    { 136 ;2   ;Field     ;
                SourceExpr="No. of Archived Versions";
                Importance=Additional }

    { 110 ;2   ;Field     ;
                SourceExpr="Requested Receipt Date" }

    { 14  ;2   ;Field     ;
                SourceExpr="Vendor Order No." }

    { 16  ;2   ;Field     ;
                SourceExpr="Vendor Shipment No." }

    { 10  ;2   ;Field     ;
                SourceExpr="Purchaser Code";
                OnValidate=BEGIN
                             PurchaserCodeOnAfterValidate;
                           END;
                            }

    { 1102601000;2;Field  ;
                SourceExpr="Campaign No.";
                Importance=Additional }

    { 113 ;2   ;Field     ;
                SourceExpr="Responsibility Center";
                Importance=Additional }

    { 68  ;2   ;Field     ;
                SourceExpr="Assigned User ID";
                Importance=Additional }

    { 107 ;2   ;Field     ;
                SourceExpr=Status;
                Importance=Promoted }

    { 58  ;1   ;Part      ;
                Name=PurchLines;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page97;
                Enabled="Buy-from Vendor No." <> '';
                Editable="Buy-from Vendor No." <> '';
                UpdatePropagation=Both }

    { 1905885101;1;Group  ;
                CaptionML=[ENU=Invoice Details;
                           RUS=Счет - подробности];
                GroupType=Group }

    { 102 ;2   ;Field     ;
                SourceExpr="Currency Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             PurchCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 52  ;2   ;Field     ;
                SourceExpr="Expected Receipt Date";
                Importance=Promoted }

    { 116 ;2   ;Field     ;
                SourceExpr="Prices Including VAT";
                OnValidate=BEGIN
                             PricesIncludingVATOnAfterValid;
                           END;
                            }

    { 150 ;2   ;Field     ;
                SourceExpr="VAT Bus. Posting Group" }

    { 1210002;2;Field     ;
                ToolTipML=[ENU=Specifies the agreement number associated with the purchase header.;
                           RUS=Определяет номер соглашения, связанный с заголовком покупки.];
                SourceExpr="Agreement No." }

    { 32  ;2   ;Field     ;
                SourceExpr="Payment Terms Code";
                Importance=Promoted }

    { 100 ;2   ;Field     ;
                SourceExpr="Payment Method Code" }

    { 54  ;2   ;Field     ;
                SourceExpr="Transaction Type" }

    { 85  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                OnValidate=BEGIN
                             ShortcutDimension1CodeOnAfterV;
                           END;
                            }

    { 87  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                OnValidate=BEGIN
                             ShortcutDimension2CodeOnAfterV;
                           END;
                            }

    { 36  ;2   ;Field     ;
                SourceExpr="Payment Discount %" }

    { 38  ;2   ;Field     ;
                SourceExpr="Pmt. Discount Date";
                Importance=Additional }

    { 89  ;2   ;Field     ;
                SourceExpr="Location Code";
                Importance=Promoted }

    { 50  ;2   ;Field     ;
                SourceExpr="Shipment Method Code" }

    { 11  ;2   ;Field     ;
                SourceExpr="Payment Reference" }

    { 9   ;2   ;Field     ;
                SourceExpr="Creditor No." }

    { 91  ;2   ;Field     ;
                SourceExpr="On Hold" }

    { 1906801201;1;Group  ;
                CaptionML=[ENU=Shipping and Payment;
                           RUS=Отгрузка и оплата];
                GroupType=Group }

    { 45  ;2   ;Group     ;
                CaptionML=[ENU=Ship-to;
                           RUS=Получатель];
                GroupType=Group }

    { 81  ;3   ;Field     ;
                CaptionML=[ENU=Code;
                           RUS=Код];
                SourceExpr="Order Address Code";
                Importance=Additional }

    { 40  ;3   ;Field     ;
                CaptionML=[ENU=Name;
                           RUS=Имя];
                SourceExpr="Ship-to Name";
                Importance=Additional }

    { 42  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           RUS=Адрес];
                SourceExpr="Ship-to Address";
                Importance=Additional }

    { 44  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           RUS=Адрес 2];
                SourceExpr="Ship-to Address 2";
                Importance=Additional }

    { 94  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           RUS=Индекс];
                SourceExpr="Ship-to Post Code";
                Importance=Additional }

    { 46  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           RUS=Город];
                SourceExpr="Ship-to City";
                Importance=Additional }

    { 48  ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           RUS=Контакт];
                SourceExpr="Ship-to Contact";
                Importance=Additional }

    { 51  ;2   ;Group     ;
                CaptionML=[ENU=Pay-to;
                           RUS=Получатель оплаты];
                GroupType=Group }

    { 22  ;3   ;Field     ;
                CaptionML=[ENU=Name;
                           RUS=Имя];
                SourceExpr="Pay-to Name";
                OnValidate=BEGIN
                             IF GETFILTER("Pay-to Vendor No.") = xRec."Pay-to Vendor No." THEN
                               IF "Pay-to Vendor No." <> xRec."Pay-to Vendor No." THEN
                                 SETRANGE("Pay-to Vendor No.");

                             CurrPage.UPDATE;
                           END;
                            }

    { 24  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           RUS=Адрес];
                SourceExpr="Pay-to Address";
                Importance=Additional }

    { 26  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           RUS=Адрес 2];
                SourceExpr="Pay-to Address 2";
                Importance=Additional }

    { 82  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           RUS=Индекс];
                SourceExpr="Pay-to Post Code";
                Importance=Additional }

    { 28  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           RUS=Город];
                SourceExpr="Pay-to City";
                Importance=Additional }

    { 141 ;3   ;Field     ;
                CaptionML=[ENU=Contact No.;
                           RUS=Код контакта];
                SourceExpr="Pay-to Contact No.";
                Importance=Additional }

    { 30  ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           RUS=Контакт];
                SourceExpr="Pay-to Contact";
                Importance=Additional }

    { 1907468901;1;Group  ;
                CaptionML=[ENU=Foreign Trade;
                           RUS=Внешняя торговля] }

    { 98  ;2   ;Field     ;
                SourceExpr="Transaction Specification" }

    { 56  ;2   ;Field     ;
                SourceExpr="Transport Method" }

    { 47  ;2   ;Field     ;
                SourceExpr="Entry Point" }

    { 96  ;2   ;Field     ;
                SourceExpr=Area }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 13  ;1   ;Part      ;
                SubPageLink=Table ID=CONST(38),
                            Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.);
                PagePartID=Page9103;
                Visible=OpenApprovalEntriesExistForCurrUser;
                PartType=Page }

    { 1901138007;1;Part   ;
                SubPageLink=No.=FIELD(Buy-from Vendor No.);
                PagePartID=Page9093;
                Visible=FALSE;
                PartType=Page }

    { 1904651607;1;Part   ;
                SubPageLink=No.=FIELD(Pay-to Vendor No.);
                PagePartID=Page9094;
                PartType=Page }

    { 1903435607;1;Part   ;
                SubPageLink=No.=FIELD(Buy-from Vendor No.);
                PagePartID=Page9095;
                PartType=Page }

    { 1906949207;1;Part   ;
                SubPageLink=No.=FIELD(Pay-to Vendor No.);
                PagePartID=Page9096;
                Visible=FALSE;
                PartType=Page }

    { 5   ;1   ;Part      ;
                SubPageLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(Document No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page9100;
                ProviderID=58;
                PartType=Page }

    { 1906354007;1;Part   ;
                Name=ApprovalFactBox;
                PagePartID=Page9092;
                Visible=FALSE;
                PartType=Page }

    { 27  ;1   ;Part      ;
                Name=IncomingDocAttachFactBox;
                PagePartID=Page193;
                Visible=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 41  ;1   ;Part      ;
                Name=WorkflowStatus;
                PagePartID=Page1528;
                Visible=ShowWorkflowStatus;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      CopyPurchDoc@1002 : Report 492;
      DocPrint@1003 : Codeunit 229;
      UserMgt@1004 : Codeunit 5700;
      ArchiveManagement@1005 : Codeunit 5063;
      PurchCalcDiscByType@1006 : Codeunit 66;
      ChangeExchangeRate@1001 : Page 511;
      HasIncomingDocument@1008 : Boolean;
      DocNoVisible@1000 : Boolean;
      OpenApprovalEntriesExistForCurrUser@1012 : Boolean;
      OpenApprovalEntriesExist@1011 : Boolean;
      ShowWorkflowStatus@1007 : Boolean;
      CanCancelApprovalForRecord@1009 : Boolean;
      CreateIncomingDocumentEnabled@1010 : Boolean;

    LOCAL PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CurrPage.PurchLines.PAGE.ApproveCalcInvDisc;
    END;

    LOCAL PROCEDURE PurchaserCodeOnAfterValidate@19046120();
    BEGIN
      CurrPage.PurchLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE ShortcutDimension1CodeOnAfterV@19029405();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShortcutDimension2CodeOnAfterV@19008725();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PricesIncludingVATOnAfterValid@19009096();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SetDocNoVisible@2();
    VAR
      DocumentNoVisibility@1000 : Codeunit 1400;
      DocType@1003 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Reminder,FinChMemo';
    BEGIN
      DocNoVisible := DocumentNoVisibility.PurchaseDocumentNoIsVisible(DocType::Quote,"No.");
    END;

    LOCAL PROCEDURE SetControlAppearance@5();
    VAR
      ApprovalsMgmt@1002 : Codeunit 1535;
    BEGIN
      OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
      CanCancelApprovalForRecord := ApprovalsMgmt.CanCancelApprovalForRecord(RECORDID);
      HasIncomingDocument := "Incoming Document Entry No." <> 0;
      CreateIncomingDocumentEnabled := (NOT HasIncomingDocument) AND ("No." <> '')
    END;

    BEGIN
    END.
  }
}

