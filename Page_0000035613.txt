OBJECT Page 35613 G/L Corresp. Gen. Ledger Lines
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=G/L Corresp. Gen. Ledger Lines;
               RUS=Строки корреспонденции];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table12400;
    PageType=List;
    OnFindRecord=BEGIN
                   FILTERGROUP(0);
                   RebuildView;
                   FILTERGROUP(0);

                   GLCorr := Rec;
                   ResultFind := GLCorr.FIND(Which);
                   IF ResultFind THEN BEGIN
                     Rec := GLCorr;
                     GLCorrDebit := Rec;
                     GLCorrCredit := Rec;
                     IF NOT GLCorrDebit.FIND THEN
                       GLCorrDebit := GLCorrEmpty;
                     IF NOT GLCorrCredit.FIND THEN
                       GLCorrCredit := GLCorrEmpty;
                   END;
                   EXIT(ResultFind);
                 END;

    OnNextRecord=BEGIN
                   GLCorr := Rec;
                   ResultNext := GLCorr.NEXT(Steps);
                   IF ResultNext <> 0 THEN BEGIN
                     Rec := GLCorr;
                     GLCorrDebit := Rec;
                     GLCorrCredit := Rec;
                     IF NOT GLCorrDebit.FIND THEN
                       GLCorrDebit := GLCorrEmpty;
                     IF NOT GLCorrCredit.FIND THEN
                       GLCorrCredit := GLCorrEmpty;
                   END;
                   EXIT(ResultNext);
                 END;

    OnAfterGetRecord=BEGIN
                       GLCorrDebitAmountOnFormat(FORMAT(GLCorrDebit.Amount));
                       GLCorrCreditAmountOnFormat(FORMAT(GLCorrCredit.Amount));
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the debit account number associated with this correspondence.;
                           RUS=Определяет номер дебетового счета, связанный с этой корреспонденцией.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Debit Account No.";
                Editable=FALSE }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the credit account number associated with this correspondence.;
                           RUS=Определяет номер кредитного счета, связанный с этой корреспонденцией.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Credit Account No.";
                Editable=FALSE }

    { 6   ;2   ;Field     ;
                Name=DebitAmount;
                CaptionML=[ENU=Debit Amount;
                           RUS=Сумма по дебету];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GLCorrDebit.Amount;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DrillDown;
                            END;
                             }

    { 8   ;2   ;Field     ;
                Name=CreditAmount;
                CaptionML=[ENU=Credit Amount;
                           RUS=Сумма по кредиту];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GLCorrCredit.Amount;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DrillDown;
                            END;
                             }

  }
  CODE
  {
    VAR
      GLCorr@1210000 : Record 12400;
      GLCorrDebit@1210001 : Record 12400;
      GLCorrCredit@1210002 : Record 12400;
      GLCorrFilter@1210003 : TEMPORARY Record 12400;
      GLCorrEmpty@1000 : TEMPORARY Record 12400;
      GLCorrEntry@1001 : Record 12401;
      ResultFind@1210004 : Boolean;
      ResultNext@1210005 : Integer;

    PROCEDURE RebuildView@1();
    BEGIN
      GLCorr.CLEARMARKS;
      GLCorrDebit.CLEARMARKS;
      GLCorrCredit.CLEARMARKS;

      GLCorr.MARKEDONLY := FALSE;
      GLCorrDebit.MARKEDONLY := FALSE;
      GLCorrCredit.MARKEDONLY := FALSE;

      GLCorr.RESET;
      GLCorrDebit.RESET;
      GLCorrCredit.RESET;

      GLCorr.COPYFILTERS(Rec);
      GLCorrDebit.COPYFILTERS(Rec);
      GLCorrCredit.COPYFILTERS(Rec);

      GLCorrDebit.COPYFILTERS(Rec);
      GLCorrDebit.SETRANGE("Debit Account No.");
      GLCorrDebit.SETRANGE("Credit Account No.");

      GLCorrCredit.COPYFILTERS(Rec);
      GLCorrCredit.SETRANGE("Debit Account No.");
      GLCorrCredit.SETRANGE("Credit Account No.");

      GLCorr.COPYFILTERS(Rec);
      GLCorr.SETRANGE("Debit Account No.");
      GLCorr.SETRANGE("Credit Account No.");

      GLCorrFilter.SETFILTER("Debit Account No.",GETFILTER("Debit Account No."));
      GLCorrFilter.SETFILTER("Debit Global Dim. 1 Filter",GETFILTER("Debit Global Dim. 1 Filter"));
      GLCorrFilter.SETFILTER("Debit Global Dim. 2 Filter",GETFILTER("Debit Global Dim. 2 Filter"));
      FILTERGROUP(0);

      GLCorr.SETRANGE("Debit Account No.");
      GLCorr.SETRANGE("Credit Account No.");

      GLCorrDebit.SETRANGE("Debit Account No.");
      GLCorrDebit.SETRANGE("Credit Account No.");

      GLCorrCredit.SETRANGE("Debit Account No.");
      GLCorrCredit.SETRANGE("Credit Account No.");

      GLCorrDebit.SETCURRENTKEY("Debit Account No.","Credit Account No.");
      GLCorrDebit.SETFILTER("Debit Account No.",GLCorrFilter.GETFILTER("Debit Account No."));
      IF GLCorrDebit.FIND('-') THEN
        REPEAT
          GLCorrDebit.CALCFIELDS(Amount);
          IF GLCorrDebit.Amount <> 0 THEN BEGIN
            GLCorrDebit.MARK := TRUE;
            GLCorr.GET(GLCorrDebit."Debit Account No.",GLCorrDebit."Credit Account No.");
            GLCorr.MARK := TRUE;
          END;
        UNTIL GLCorrDebit.NEXT(1) = 0;
      GLCorrDebit.SETRANGE("Debit Account No.");

      GLCorrCredit.SETCURRENTKEY("Credit Account No.","Debit Account No.");
      GLCorrCredit.SETFILTER("Credit Account No.",GLCorrFilter.GETFILTER("Debit Account No."));
      IF GLCorrCredit.FIND('-') THEN
        REPEAT
          GLCorrCredit.CALCFIELDS(Amount);
          IF GLCorrCredit.Amount <> 0 THEN BEGIN
            GLCorrCredit.MARK := TRUE;
            GLCorr.GET(GLCorrCredit."Debit Account No.",GLCorrCredit."Credit Account No.");
            GLCorr.MARK := TRUE;
          END;
        UNTIL GLCorrCredit.NEXT(1) = 0;
      GLCorrCredit.SETRANGE("Credit Account No.");

      GLCorr.MARKEDONLY := TRUE;
      GLCorrDebit.MARKEDONLY := TRUE;
      GLCorrCredit.MARKEDONLY := TRUE;
    END;

    PROCEDURE SeparateDebetCredit@2();
    BEGIN
      GLCorrDebit := Rec;
      GLCorrCredit := Rec;
      IF NOT GLCorrDebit.FIND THEN
        GLCorrDebit := GLCorrEmpty;
      IF NOT GLCorrCredit.FIND THEN
        GLCorrCredit := GLCorrEmpty;
      GLCorrDebit.CALCFIELDS(Amount);
      GLCorrCredit.CALCFIELDS(Amount);
    END;

    PROCEDURE FormatAmount@3(Value@1000 : Decimal) : Text[260];
    BEGIN
      IF Value = 0 THEN
        EXIT('');
      EXIT(FORMAT(Value));
    END;

    PROCEDURE DrillDown@1470001();
    BEGIN
      GLCorrEntry.RESET;
      GLCorrEntry.SETCURRENTKEY("Debit Account No.","Credit Account No.");
      GLCorrEntry.SETRANGE("Debit Account No.","Debit Account No.");
      GLCorrEntry.SETRANGE("Credit Account No.","Credit Account No.");
      GLCorrEntry.SETFILTER("Debit Global Dimension 1 Code",GLCorr.GETFILTER("Debit Global Dim. 1 Filter"));
      GLCorrEntry.SETFILTER("Debit Global Dimension 2 Code",GLCorr.GETFILTER("Debit Global Dim. 2 Filter"));
      GLCorrEntry.SETFILTER("Business Unit Code",GLCorr.GETFILTER("Business Unit Filter"));
      GLCorrEntry.SETFILTER("Posting Date",GLCorr.GETFILTER("Date Filter"));
      PAGE.RUN(0,GLCorrEntry);
    END;

    LOCAL PROCEDURE GLCorrDebitAmountOnFormat@19055432(Text@19009260 : Text[1024]);
    BEGIN
      SeparateDebetCredit;
      Text := FormatAmount(GLCorrDebit.Amount);
    END;

    LOCAL PROCEDURE GLCorrCreditAmountOnFormat@19043095(Text@19030231 : Text[1024]);
    BEGIN
      SeparateDebetCredit;
      Text := FormatAmount(GLCorrCredit.Amount);
    END;

    BEGIN
    END.
  }
}

