OBJECT Page 17314 Tax Calc. Line Select Subf
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Tax Calc. Line Select Subf;
               RUS=Субформа выбора строки налогового расчета];
    SourceTable=Table17310;
    DelayedInsert=Yes;
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnAfterGetRecord=BEGIN
                       DescriptionIndent := 0;
                       CALCFIELDS("Dimensions Filters","G/L Corr. Dimensions Filters");
                       IF "Dimensions Filters" THEN
                         DimFilters := Text1001
                       ELSE
                         DimFilters := '';

                       IF "G/L Corr. Dimensions Filters" THEN
                         GLCorrDimFilters := Text1001
                       ELSE
                         GLCorrDimFilters := '';
                       DescriptionOnFormat;
                     END;

    OnNewRecord=BEGIN
                  "Expression Type" := "Expression Type"::SumField;
                  GetDefaultSumField;
                END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                IndentationColumnName=DescriptionIndent;
                IndentationControls=Description;
                GroupType=Repeater }

    { 1000000006;2;Field  ;
                ToolTipML=[ENU=Specifies the tax differences amount associated with the tax calculation line.;
                           RUS=Определяет сумму налоговых разниц, связанную со строкой налогового расчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Tax Diff. Amount (Tax)";
                OnValidate=BEGIN
                             TaxDiffAmountTaxOnAfterValidat;
                           END;
                            }

    { 1000000004;2;Field  ;
                ToolTipML=[ENU=Specifies the base tax differences amount associated with the tax calculation line.;
                           RUS=Определяет базовую сумму налоговых разниц, связанную со строкой налогового расчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Tax Diff. Amount (Base)";
                OnValidate=BEGIN
                             TaxDiffAmountBaseOnAfterValida;
                           END;
                            }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the line code associated with the tax calculation line.;
                           RUS=Определяет код строки, связанный со строкой налогового расчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Line Code" }

    { 1000000000;2;Field  ;
                ToolTipML=[ENU=Specifies the line type associated with the tax calculation line.;
                           RUS=Определяет тип строки, связанный со строкой налогового расчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Line Type" }

    { 20  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the sum field associated with the tax calculation line.;
                           RUS=Определяет номер поля суммы, связанный со строкой налогового расчета.];
                SourceExpr="Sum Field No.";
                Visible=FALSE;
                Editable=FALSE }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the line code description associated with the tax calculation line.;
                           RUS=Определяет описание кода строки, связанное со строкой налогового расчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                Style=Strong;
                StyleExpr=DescriptionEmphasize }

    { 1000000002;2;Field  ;
                ToolTipML=[ENU=Specifies the expression type associated with the tax calculation line.;
                           RUS=Определяет тип выражения, связанный со строкой налогового расчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Expression Type" }

    { 18  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the link register number associated with the tax calculation line.;
                           RUS=Определяет номер регистра связи, связанный со строкой налогового расчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Link Register No." }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the expression associated with the tax calculation line.;
                           RUS=Определяет выражение, связанное со строкой налогового расчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Expression }

    { 22  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the selection line code associated with the tax calculation line.;
                           RUS=Определяет код строки выборки, связанный со строкой налогового расчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Selection Line Code" }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many spaces the field associated with the tax calculation line is indented.;
                           RUS=Определяет количество пробелов отступа для поля, связанного со строкой налогового расчета.];
                SourceExpr=Indentation;
                Visible=FALSE }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the text associated with the tax calculation line is bold.;
                           RUS=Определяет, выделен ли жирным шрифтом текст, связанный со строкой налогового расчета.];
                SourceExpr=Bold;
                Visible=FALSE }

    { 200 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the period associated with the tax calculation line.;
                           RUS=Определяет период, связанный со строкой налогового расчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Period }

    { 100 ;2   ;Field     ;
                DrillDown=No;
                CaptionML=[ENU=Dimensions Filters;
                           RUS=Фильтры измерений];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DimFilters;
                OnAssistEdit=BEGIN
                               ShowDimensionsFilters;
                             END;
                              }

    { 1210000;2;Field     ;
                DrillDown=No;
                CaptionML=[ENU=G/L Corr. Dimensions Filters;
                           RUS=Фильтры изм. по корресп.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GLCorrDimFilters;
                OnAssistEdit=BEGIN
                               ShowGLCorrDimensionsFilters;
                             END;
                              }

    { 1000000008;2;Field  ;
                ToolTipML=[ENU=Specifies the field name associated with the tax calculation line.;
                           RUS=Определяет имя поля, связанное со строкой налогового расчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Field Name" }

  }
  CODE
  {
    VAR
      Text1001@1000 : TextConst 'ENU=Present;RUS=Есть';
      TaxCalcHeader@1210003 : Record 17308;
      DimFilters@1210001 : Text[30];
      GLCorrDimFilters@1210000 : Text[30];
      Text1002@1210002 : TextConst 'ENU=%1 should be used for this type of tax register.;RUS=Для этого типа налогового регистра необходимо использовать %1.';
      DescriptionEmphasize@19010547 : Boolean INDATASET;
      DescriptionIndent@19057867 : Integer INDATASET;

    PROCEDURE ShowDimensionsFilters@1();
    VAR
      TemplateDimFilter@1000 : Record 17313;
      TemplateSection@1001 : Record 17307;
      DimCodeFilter@1002 : Text[1024];
    BEGIN
      CurrPage.SAVERECORD;
      COMMIT;
      TaxCalcHeader.GET("Section Code",Code);
      IF TaxCalcHeader."Table ID" = DATABASE::"Tax Calc. G/L Entry" THEN
        ERROR(Text1002,FIELDCAPTION("G/L Corr. Dimensions Filters"));

      IF ("Line No." <> 0) AND ("Expression Type" = "Expression Type"::SumField) THEN BEGIN
        TemplateSection.GET("Section Code");
        IF (TemplateSection."Dimension 1 Code" <> '') OR
           (TemplateSection."Dimension 2 Code" <> '') OR
           (TemplateSection."Dimension 3 Code" <> '') OR
           (TemplateSection."Dimension 4 Code" <> '')
        THEN BEGIN
          TemplateDimFilter.FILTERGROUP(2);
          TemplateDimFilter.SETRANGE("Section Code","Section Code");
          TemplateDimFilter.SETRANGE("Register No.",Code);
          TemplateDimFilter.SETRANGE(Define,TemplateDimFilter.Define::Template);
          IF TemplateSection."Dimension 1 Code" <> '' THEN
            DimCodeFilter := TemplateSection."Dimension 1 Code";
          IF TemplateSection."Dimension 2 Code" <> '' THEN
            DimCodeFilter := STRSUBSTNO('%1|%2',DimCodeFilter,TemplateSection."Dimension 2 Code");
          IF TemplateSection."Dimension 3 Code" <> '' THEN
            DimCodeFilter := STRSUBSTNO('%1|%2',DimCodeFilter,TemplateSection."Dimension 3 Code");
          IF TemplateSection."Dimension 4 Code" <> '' THEN
            DimCodeFilter := STRSUBSTNO('%1|%2',DimCodeFilter,TemplateSection."Dimension 4 Code");
          DimCodeFilter := DELCHR(DimCodeFilter,'<','|');
          TemplateDimFilter.SETFILTER("Dimension Code",DimCodeFilter);
          TemplateDimFilter.FILTERGROUP(0);
          TemplateDimFilter.SETRANGE("Line No.","Line No.");
          PAGE.RUNMODAL(0,TemplateDimFilter);
        END;
      END;
      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE ShowGLCorrDimensionsFilters@1210000();
    VAR
      TaxDifGLCorrDimFilter@1210000 : Record 17322;
    BEGIN
      CurrPage.SAVERECORD;
      COMMIT;
      TaxCalcHeader.GET("Section Code",Code);
      IF (TaxCalcHeader."Table ID" = DATABASE::"Tax Calc. G/L Entry") AND ("Line No." <> 0) THEN BEGIN
        TaxDifGLCorrDimFilter.FILTERGROUP(2);
        TaxDifGLCorrDimFilter.SETRANGE("Section Code","Section Code");
        TaxDifGLCorrDimFilter.SETRANGE("Tax Calc. No.",Code);
        TaxDifGLCorrDimFilter.SETRANGE(Define,TaxDifGLCorrDimFilter.Define::Template);
        TaxDifGLCorrDimFilter.SETRANGE("Line No.","Line No.");
        TaxDifGLCorrDimFilter.FILTERGROUP(0);
        PAGE.RUNMODAL(0,TaxDifGLCorrDimFilter);
      END ELSE
        ERROR(Text1002,FIELDCAPTION("Dimensions Filters"));
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE TaxDiffAmountTaxOnAfterValidat@19009240();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE TaxDiffAmountBaseOnAfterValida@19068200();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      DescriptionIndent := Indentation;
      DescriptionEmphasize := Bold;
    END;

    BEGIN
    END.
  }
}

