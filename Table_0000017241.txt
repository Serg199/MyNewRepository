OBJECT Table 17241 Tax Reg. Norm Term Formula
{
  OBJECT-PROPERTIES
  {
    Date=18.12.13;
    Time=12:00:00;
    Version List=NAVRU7.10;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               ValidateChangeDeclaration(TRUE);
             END;

    OnModify=BEGIN
               ValidateChangeDeclaration(TRUE);
             END;

    OnDelete=BEGIN
               ValidateChangeDeclaration(TRUE);
             END;

    CaptionML=[ENU=Tax Reg. Norm Term Formula;
               RUS=Формула термина нормы налог. регистра];
    LookupPageID=Page17283;
  }
  FIELDS
  {
    { 1   ;   ;Norm Jurisdiction Code;Code10      ;TableRelation="Tax Register Norm Jurisdiction";
                                                   CaptionML=[ENU=Norm Jurisdiction Code;
                                                              RUS=Код нормы юрисдикции];
                                                   NotBlank=Yes }
    { 2   ;   ;Term Code           ;Code20        ;TableRelation="Tax Reg. Norm Term"."Term Code";
                                                   CaptionML=[ENU=Term Code;
                                                              RUS=Код термина];
                                                   NotBlank=Yes }
    { 3   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              RUS=Номер строки];
                                                   NotBlank=Yes }
    { 4   ;   ;Expression Type     ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Tax Reg. Norm Term"."Expression Type" WHERE (Term Code=FIELD(Term Code)));
                                                   CaptionML=[ENU=Expression Type;
                                                              RUS=Тип выражения];
                                                   OptionCaptionML=[ENU=Plus/Minus,Multiply/Divide,Compare;
                                                                    RUS=Сложение/вычитание,Умножение/деление,Сравнение];
                                                   OptionString=Plus/Minus,Multiply/Divide,Compare }
    { 5   ;   ;Operation           ;Option        ;OnValidate=BEGIN
                                                                CALCFIELDS("Expression Type");
                                                                IF ("Expression Type" = "Expression Type"::"Plus/Minus") AND
                                                                   NOT (Operation = Operation::"+") AND NOT (Operation = Operation::"-")
                                                                THEN
                                                                  ERROR(Text000);

                                                                IF ("Expression Type" = "Expression Type"::"Multiply/Divide") AND
                                                                   NOT (Operation = Operation::"*") AND NOT (Operation = Operation::"/")
                                                                THEN
                                                                  ERROR(Text001);

                                                                IF ("Expression Type" = "Expression Type"::Compare) AND
                                                                   NOT (Operation = Operation::Negative) AND NOT (Operation = Operation::Zero) AND
                                                                   NOT (Operation = Operation::Positive)
                                                                THEN
                                                                  ERROR(Text002);
                                                                ValidateChangeDeclaration(Operation <> xRec.Operation);
                                                              END;

                                                   CaptionML=[ENU=Operation;
                                                              RUS=Операция];
                                                   OptionCaptionML=[ENU=+,-,*,/,Negative,Zero,Positive;
                                                                    RUS=+,-,*,/,Отрицательный,Ноль,Положительный];
                                                   OptionString=+,-,*,/,Negative,Zero,Positive }
    { 6   ;   ;Account Type        ;Option        ;OnValidate=BEGIN
                                                                CALCFIELDS("Expression Type");
                                                                IF "Expression Type" = "Expression Type"::Compare THEN
                                                                  "Account Type" := "Account Type"::Termin
                                                                ELSE BEGIN
                                                                  "Account No." := '';
                                                                  "Bal. Account No." := '';
                                                                  IF "Account Type" = "Account Type"::Norm THEN
                                                                    "Jurisdiction Code" := "Norm Jurisdiction Code"
                                                                  ELSE
                                                                    "Jurisdiction Code" := '';
                                                                END;
                                                                ValidateChangeDeclaration("Account Type" <> xRec."Account Type");
                                                              END;

                                                   CaptionML=[ENU=Account Type;
                                                              RUS=Тип счета];
                                                   OptionCaptionML=[ENU=Constant,GL Acc,Termin,Net Change,Norm;
                                                                    RUS=Постоянная,Счет ГК,Термин,Оборот,Норма];
                                                   OptionString=Constant,GL Acc,Termin,Net Change,Norm }
    { 7   ;   ;Account No.         ;Code100       ;TableRelation=IF (Expression Type=FILTER(<>Compare),
                                                                     Account Type=CONST(GL Acc)) "G/L Account".No.
                                                                     ELSE IF (Expression Type=FILTER(<>Compare),
                                                                              Account Type=CONST(Net Change)) "G/L Account".No.
                                                                              ELSE IF (Account Type=CONST(Termin)) "Tax Reg. Norm Term"."Term Code"
                                                                              ELSE IF (Account Type=CONST(Norm)) "Tax Register Norm Group".Code WHERE (Norm Jurisdiction Code=FIELD(Jurisdiction Code),
                                                                                                                                                       Has Details=CONST(Yes));
                                                   OnValidate=VAR
                                                                TaxRegNormTermFormula@1210000 : Record 17241;
                                                              BEGIN
                                                                CALCFIELDS("Expression Type");
                                                                IF "Expression Type" = "Expression Type"::Compare THEN BEGIN
                                                                  TaxRegNormTermFormula.RESET;
                                                                  TaxRegNormTermFormula.SETRANGE("Norm Jurisdiction Code","Norm Jurisdiction Code");
                                                                  TaxRegNormTermFormula.SETRANGE("Term Code","Term Code");
                                                                  TaxRegNormTermFormula.SETFILTER("Line No.",'<>%1',"Line No.");
                                                                  TaxRegNormTermFormula.MODIFYALL("Account No.","Account No.",FALSE);
                                                                  TaxRegNormTermFormula.RESET;
                                                                END;
                                                                IF "Account Type" = "Account Type"::Norm THEN
                                                                  TESTFIELD("Jurisdiction Code");
                                                                ValidateChangeDeclaration("Account No." <> xRec."Account No.");
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Account No.;
                                                              RUS=Номер счета] }
    { 8   ;   ;Amount Type         ;Option        ;OnValidate=BEGIN
                                                                IF "Account Type" = "Account Type"::"Net Change" THEN BEGIN
                                                                  IF "Amount Type" = "Amount Type"::"Net Change" THEN
                                                                    "Amount Type" := "Amount Type"::Debit;
                                                                  IF NOT ("Amount Type" IN ["Amount Type"::Debit,"Amount Type"::Credit]) THEN
                                                                    FIELDERROR("Amount Type",
                                                                      STRSUBSTNO(Text003,"Amount Type","Account Type"));
                                                                END ELSE
                                                                  IF "Account Type" <> "Account Type"::"GL Acc" THEN
                                                                    TESTFIELD("Amount Type","Amount Type"::" ")
                                                                  ELSE
                                                                    TESTFIELD("Amount Type");
                                                                ValidateChangeDeclaration("Amount Type" <> xRec."Amount Type");
                                                              END;

                                                   CaptionML=[ENU=Amount Type;
                                                              RUS=Тип суммы];
                                                   OptionCaptionML=[ENU=" ,Net Change,Debit,Credit";
                                                                    RUS=" ,Оборот,Дебет,Кредит"];
                                                   OptionString=[ ,Net Change,Debit,Credit] }
    { 9   ;   ;Bal. Account No.    ;Code100       ;OnValidate=BEGIN
                                                                CALCFIELDS("Expression Type");
                                                                IF ("Account Type" = "Account Type"::"Net Change") OR
                                                                   ("Expression Type" = "Expression Type"::Compare)
                                                                THEN
                                                                  TESTFIELD("Bal. Account No.");
                                                                ValidateChangeDeclaration("Bal. Account No." <> xRec."Bal. Account No.");
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Bal. Account No.;
                                                              RUS=Номер баланс. счета] }
    { 10  ;   ;Jurisdiction Code   ;Code10        ;OnValidate=BEGIN
                                                                ValidateChangeDeclaration("Jurisdiction Code" <> xRec."Jurisdiction Code");
                                                                IF "Jurisdiction Code" <> xRec."Jurisdiction Code" THEN
                                                                  "Account No." := '';
                                                                IF "Jurisdiction Code" <> '' THEN
                                                                  TESTFIELD("Account Type","Account Type"::Norm);
                                                              END;

                                                   CaptionML=[ENU=Jurisdiction Code;
                                                              RUS=Код юрисдикции] }
    { 11  ;   ;Process Sign        ;Option        ;OnValidate=BEGIN
                                                                ValidateChangeDeclaration("Process Sign" <> xRec."Process Sign");
                                                              END;

                                                   CaptionML=[ENU=Process Sign;
                                                              RUS=Обработка знака];
                                                   OptionCaptionML=[ENU=" ,Skip Negative,Skip Positive,Always Positive,Always Negative";
                                                                    RUS=" ,Пропустить отрицательные,Пропустить положительные,Только положительные,Только отрицательные"];
                                                   OptionString=[ ,Skip Negative,Skip Positive,Always Positive,Always Negative] }
    { 12  ;   ;Process Division by Zero;Option    ;CaptionML=[ENU=Process Division by Zero;
                                                              RUS=Деление на ноль];
                                                   OptionCaptionML=[ENU=Zero,One;
                                                                    RUS=Ноль,Единица];
                                                   OptionString=Zero,One }
  }
  KEYS
  {
    {    ;Norm Jurisdiction Code,Term Code,Line No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1001 : TextConst 'ENU=Operation must be + or -.;RUS=Операция должна быть сложением или вычитанием';
      Text001@1002 : TextConst 'ENU=Operation must be * or /.;RUS=Операция должна быть умножением или делением';
      Text002@1003 : TextConst 'ENU=Operation must be Compare.;RUS=Операция должна быть сравнением.';
      Text003@1004 : TextConst 'ENU=cannot be %1 if Account Type is %2.;RUS=не может быть %1, если тип счета - %2.';

    PROCEDURE ValidateChangeDeclaration@1(Incident@1000 : Boolean);
    VAR
      TaxRegNormJurisdiction@1001 : Record 17220;
    BEGIN
      IF NOT Incident THEN
        EXIT;

      TaxRegNormJurisdiction.GET("Norm Jurisdiction Code");
    END;

    BEGIN
    END.
  }
}

