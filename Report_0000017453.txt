OBJECT Report 17453 Spreadsheet Account
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Spreadsheet Account;
               RUS=Сводная ведомость проводок в ГК];
    ProcessingOnly=Yes;
    OnPostReport=BEGIN
                   ExcelMgt.GiveUserControl;
                 END;

  }
  DATASET
  {
    { 5444;    ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               FillInBuffer;

                               Buffer.RESET;
                               Buffer.SETCURRENTKEY(Description);
                               SETRANGE(Number,1,Buffer.COUNT);

                               ExcelMgt.CreateBook;
                               ExcelMgt.OpenSheetByNumber(1);
                               FillCell('A1','Организация: ' + LocalRepMngt.GetCompanyName,TRUE,0,0);
                               IF OrgUnitCode <> '' THEN BEGIN
                                 OrganizationalUnit.GET(OrgUnitCode);
                                 OrgUnitName := OrganizationalUnit.Name;
                               END;
                               FillCell('A2','Подразделение: ' + OrgUnitName,TRUE,0,0);
                               FillCell('A3','Сводная ведомость проводок по предприятию № ' + DocumentNo,TRUE,0,0);
                               FillCell('A4',STRSUBSTNO('Учетный период от %1 до %2',
                                   PayrollPeriod."Starting Date",PayrollPeriod."Ending Date"),TRUE,0,0);

                               FillCell('A6','№ п/п',TRUE,1,0);
                               FillCell('B6','Финансовая операция',TRUE,1,0);
                               FillCell('C6','Счет - дебет',TRUE,1,0);
                               FillCell('D6','Счет - кредит',TRUE,1,0);
                               FillCell('E6','Фонд оплаты труда',TRUE,1,0);
                               FillCell('F6','Результат',TRUE,1,0);

                               ExcelMgt.SetColumnSize('A6',3);
                               ExcelMgt.FormatCell_WrapText('A6:F6',TRUE);
                               ExcelMgt.SetColumnSize('B6',36);
                               ExcelMgt.SetColumnSize('C6',10);
                               ExcelMgt.SetColumnSize('D6',10);
                               ExcelMgt.SetColumnSize('E6',11);
                               ExcelMgt.SetColumnSize('F6',11);

                               RowNo := 7;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN
                                    Buffer.FINDSET
                                  ELSE
                                    Buffer.NEXT;

                                  FillCell('A' + FORMAT(RowNo),FORMAT(Number),FALSE,1,0);
                                  FillCell('B' + FORMAT(RowNo),Buffer.Description,FALSE,1,0);
                                  FillCell('C' + FORMAT(RowNo),Buffer."Account No. 1",FALSE,1,0);
                                  FillCell('D' + FORMAT(RowNo),Buffer."Account No. 2",FALSE,1,0);
                                  FillCell('E' + FORMAT(RowNo),FormatAmount(Buffer."Amount 1"),FALSE,1,1);
                                  FillCell('F' + FORMAT(RowNo),FormatAmount(Buffer."Amount 2"),FALSE,1,1);

                                  TotalTaxAmount += Buffer."Amount 1";
                                  TotalPaymentAmount += Buffer."Amount 2";
                                  RowNo += 1;
                                END;

               OnPostDataItem=BEGIN
                                ExcelMgt.MergeCells('A' + FORMAT(RowNo),'D' + FORMAT(RowNo));
                                FillCell('A' + FORMAT(RowNo),'Итого, руб.',TRUE,1,0);
                                ExcelMgt.FormatCellOutsideBorders(STRSUBSTNO('A%1:D%1',FORMAT(RowNo)),1);

                                FillCell('E' + FORMAT(RowNo),FormatAmount(TotalTaxAmount),TRUE,1,1);
                                FillCell('F' + FORMAT(RowNo),FormatAmount(TotalPaymentAmount),TRUE,1,1);
                              END;
                               }

    { 2191;    ;DataItem;AgregateEntries     ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               EntryNo := 0;
                               IF Buffer.FINDSET THEN
                                 REPEAT
                                   AgregateBuffer.SETRANGE("Account No. 1",Buffer."Account No. 1");
                                   AgregateBuffer.SETRANGE("Account No. 2",Buffer."Account No. 2");
                                   IF AgregateBuffer.FINDFIRST THEN BEGIN
                                     AgregateBuffer."Amount 1" += Buffer."Amount 1";
                                     AgregateBuffer."Amount 2" += Buffer."Amount 2";
                                     AgregateBuffer."Number 1" += 1;
                                     AgregateBuffer.MODIFY;
                                   END ELSE BEGIN
                                     EntryNo += 1;
                                     AgregateBuffer."Entry No." := EntryNo;
                                     AgregateBuffer."Account No. 1" := Buffer."Account No. 1";
                                     AgregateBuffer."Account No. 2" := Buffer."Account No. 2";
                                     AgregateBuffer."Amount 1" := Buffer."Amount 1";
                                     AgregateBuffer."Amount 2" := Buffer."Amount 2";
                                     AgregateBuffer."Number 1" := 1;
                                     AgregateBuffer.INSERT;
                                   END;
                                 UNTIL Buffer.NEXT = 0;

                               AgregateBuffer.RESET;

                               SETRANGE(Number,1,AgregateBuffer.COUNT);

                               ExcelMgt.OpenSheetByNumber(2);
                               FillCell('A1','Итоги по проводкам',TRUE,0,0);

                               FillCell('A3','Счет - дебет',TRUE,1,0);
                               FillCell('B3','Счет - кредит',TRUE,1,0);
                               FillCell('C3','Количество проводок',TRUE,1,0);
                               FillCell('D3','Фонд оплаты труда',TRUE,1,0);
                               FillCell('E3','Результат',TRUE,1,0);

                               ExcelMgt.SetColumnSize('A3',10);
                               ExcelMgt.FormatCell_WrapText('A3:E3',TRUE);
                               ExcelMgt.SetColumnSize('B3',10);
                               ExcelMgt.SetColumnSize('C3',12);
                               ExcelMgt.SetColumnSize('D3',11);
                               ExcelMgt.SetColumnSize('E3',11);

                               RowNo := 4;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN
                                    AgregateBuffer.FINDSET
                                  ELSE
                                    AgregateBuffer.NEXT;

                                  FillCell('A' + FORMAT(RowNo),AgregateBuffer."Account No. 1",FALSE,1,0);
                                  FillCell('B' + FORMAT(RowNo),AgregateBuffer."Account No. 2",FALSE,1,0);
                                  FillCell('C' + FORMAT(RowNo),FormatAmount(AgregateBuffer."Number 1"),FALSE,1,0);
                                  FillCell('D' + FORMAT(RowNo),FormatAmount(AgregateBuffer."Amount 1"),FALSE,1,1);
                                  FillCell('E' + FORMAT(RowNo),FormatAmount(AgregateBuffer."Amount 2"),FALSE,1,1);

                                  RowNo += 1;
                                END;

               OnPostDataItem=BEGIN
                                ExcelMgt.MergeCells('A' + FORMAT(RowNo),'C' + FORMAT(RowNo));
                                FillCell('A' + FORMAT(RowNo),'Итого, руб.',TRUE,1,0);
                                ExcelMgt.FormatCellOutsideBorders(STRSUBSTNO('A%1:C%1',FORMAT(RowNo)),1);

                                FillCell('D' + FORMAT(RowNo),FormatAmount(TotalTaxAmount),TRUE,1,1);
                                FillCell('E' + FORMAT(RowNo),FormatAmount(TotalPaymentAmount),TRUE,1,1);
                              END;
                               }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   PeriodCode := PayrollPeriod.PeriodByDate(WORKDATE);
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             RUS=Параметры] }

      { 1210006;2;Field     ;
                  CaptionML=[ENU=Data Source;
                             RUS=Источник данных];
                  OptionCaptionML=[ENU=Posted Entries,Payroll Documents;
                                   RUS=Учтенные операции,Зарплатные документы];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=DataSource }

      { 1210000;2;Field     ;
                  CaptionML=[ENU=Pay Period;
                             RUS=Платежный период];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=PeriodCode }

      { 1210004;2;Field     ;
                  CaptionML=[ENU=Org. Unit Code;
                             RUS=Код подразделения];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=OrgUnitCode;
                  TableRelation="Organizational Unit" }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Vendor@1210011 : Record 23;
      VendorPostingGroup@1210012 : Record 93;
      OrganizationalUnit@1210015 : Record 12422;
      PayrollElement@1210006 : Record 17400;
      PayrollDocLine@1210013 : Record 17415;
      PayrollLedgEntry@1210003 : Record 17418;
      PayrollPostingGroup@1210005 : Record 17401;
      Buffer@1210002 : TEMPORARY Record 17454;
      AgregateBuffer@1210021 : TEMPORARY Record 17454;
      PayrollPeriod@1210007 : Record 17426;
      LocalRepMngt@1210014 : Codeunit 12401;
      ExcelMgt@1210008 : Codeunit 12416;
      DataSource@1210023 : 'Posted Entries,Payroll Documents';
      PeriodCode@1210024 : Code[10];
      OrgUnitCode@1210004 : Code[20];
      DocumentNo@1210017 : Code[20];
      OrgUnitName@1210016 : Text[50];
      RowNo@1210018 : Integer;
      EntryNo@1210022 : Integer;
      TotalTaxAmount@1210019 : Decimal;
      TotalPaymentAmount@1210020 : Decimal;

    PROCEDURE FillInBuffer@1210002();
    BEGIN
      CASE DataSource OF
        DataSource::"Posted Entries":
          BEGIN
            PayrollLedgEntry.SETRANGE("Period Code",PeriodCode);
            IF OrgUnitCode <> '' THEN
              PayrollLedgEntry.SETRANGE("Org. Unit Code",OrgUnitCode);
            IF PayrollLedgEntry.FINDSET THEN
              REPEAT
                UpdateBuffer(
                  PayrollLedgEntry."Element Code",
                  PayrollLedgEntry."Posting Group",
                  PayrollLedgEntry."Taxable Amount",
                  PayrollLedgEntry."Payroll Amount")
              UNTIL PayrollLedgEntry.NEXT = 0;
          END;
        DataSource::"Payroll Documents":
          BEGIN
            PayrollDocLine.SETRANGE("Period Code",PeriodCode);
            IF OrgUnitCode <> '' THEN
              PayrollDocLine.SETRANGE("Org. Unit Code",OrgUnitCode);
            IF PayrollDocLine.FINDSET THEN
              REPEAT
                UpdateBuffer(
                  PayrollDocLine."Element Code",
                  PayrollDocLine."Posting Group",
                  PayrollDocLine."Taxable Amount",
                  PayrollDocLine."Payroll Amount")
              UNTIL PayrollDocLine.NEXT = 0;
          END;
      END;
    END;

    PROCEDURE UpdateBuffer@1210005(ElementCode@1210000 : Code[20];PayrollPostingGroupCode@1210003 : Code[20];TaxableAmount@1210002 : Decimal;PayrollAmount@1210005 : Decimal);
    VAR
      DebitAccountNo@1210004 : Code[20];
      CreditAccountNo@1210006 : Code[20];
    BEGIN
      PayrollElement.GET(ElementCode);
      PayrollPostingGroup.GET(PayrollPostingGroupCode);
      DebitAccountNo := PayrollPostingGroup."Account No.";
      CASE PayrollPostingGroup."Account Type" OF
        PayrollPostingGroup."Account Type"::"G/L Account":
          CreditAccountNo := PayrollPostingGroup."Account No.";
        PayrollPostingGroup."Account Type"::Vendor:
          BEGIN
            PayrollPostingGroup.TESTFIELD("Account No.");
            Vendor.GET(PayrollPostingGroup."Account No.");
            Vendor.TESTFIELD("Vendor Posting Group");
            VendorPostingGroup.GET(Vendor."Vendor Posting Group");
            CreditAccountNo := VendorPostingGroup."Payables Account";
          END;
      END;

      Buffer.RESET;
      IF Buffer.FINDLAST THEN;
      EntryNo := Buffer."Entry No." + 1;
      Buffer.SETRANGE("Element Code",ElementCode);
      Buffer.SETRANGE("Account No. 1",DebitAccountNo);
      Buffer.SETRANGE("Account No. 2",CreditAccountNo);
      IF Buffer.FINDFIRST THEN BEGIN
        Buffer."Amount 1" += TaxableAmount;
        Buffer."Amount 2" += PayrollAmount;
        Buffer.MODIFY;
      END ELSE BEGIN
        Buffer."Entry No." := EntryNo;
        Buffer."Element Code" := ElementCode;
        Buffer."Account No. 1" := DebitAccountNo;
        Buffer."Account No. 2" := CreditAccountNo;
        Buffer."Amount 1" := TaxableAmount;
        Buffer."Amount 2" := PayrollAmount;
        Buffer.Description := PayrollElement.Description;
        Buffer.INSERT;
      END;
    END;

    PROCEDURE FormatAmount@1210031(Amount@1210000 : Decimal) : Text[50];
    BEGIN
      IF Amount = 0 THEN
        EXIT('');

      EXIT(FORMAT(Amount,0,'<Precision,2:2><Standard Format,1>'));
    END;

    PROCEDURE FillCell@1210008(CellName@1210000 : Text[30];CellValue@1210001 : Text[250];Bold@1210003 : Boolean;Borders@1210002 : 'None,Thin,Medium';CellFormat@1210004 : 'Text,Decimal');
    BEGIN
      ExcelMgt.FillCell(CellName,CellValue);
      CASE Borders OF
        Borders::Thin:
          ExcelMgt.FormatCellOutsideBorders(CellName,1);
        Borders::Medium:
          ExcelMgt.FormatCellOutsideBorders(CellName,2);
      END;
      IF Bold THEN
        ExcelMgt.FormatCell_Bold(CellName,TRUE);

      IF CellFormat = CellFormat::Decimal THEN
        ExcelMgt.SetCellNumberFormat(CellName,'0,00');
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

