OBJECT Table 14949 VAT Entry Type
{
  OBJECT-PROPERTIES
  {
    Date=18.12.13;
    Time=12:00:00;
    Version List=NAVRU7.10;
  }
  PROPERTIES
  {
    Permissions=TableData 112=rm,
                TableData 114=rm,
                TableData 122=rm,
                TableData 124=rm;
    CaptionML=[ENU=VAT Entry Type;
               RUS=Тип операции НДС];
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code2         ;CaptionML=[ENU=Code;
                                                              RUS=Код];
                                                   NotBlank=Yes;
                                                   Numeric=Yes }
    { 2   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 3   ;   ;Comment             ;Text250       ;CaptionML=[ENU=Comment;
                                                              RUS=Комментарий] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1210000 : TextConst 'ENU=Length of VAT Entry Type Code cannot be greater than 2.;RUS=Длина кода типа операции НДС не может превышать 2.';

    PROCEDURE LookupSetOfVATEntryCodes@1210000(VAR SetOfVATEntryTypes@1210001 : Code[20]) : Boolean;
    VAR
      VATEntryType@1210002 : Record 14949;
      VATEntryTypes@1210000 : Page 14977;
    BEGIN
      VATEntryTypes.LOOKUPMODE := TRUE;
      VATEntryTypes.EDITABLE := FALSE;
      IF VATEntryTypes.RUNMODAL = ACTION::LookupOK THEN BEGIN
        SetOfVATEntryTypes := VATEntryTypes.GetSelection;
        EXIT(TRUE)
      END;

      EXIT(FALSE);
    END;

    PROCEDURE ValidateSetOfVATEntryCodes@1210001(SetOfVATEntryTypes@1210000 : Code[15]);
    VAR
      VATEntryType@1210002 : Record 14949;
      VATEntryTypeCode@1210003 : Code[15];
      i@1210001 : Integer;
    BEGIN
      IF SetOfVATEntryTypes = '' THEN
        EXIT;

      REPEAT
        i := STRPOS(SetOfVATEntryTypes,';');
        IF i = 0 THEN
          VATEntryTypeCode := SetOfVATEntryTypes
        ELSE
          VATEntryTypeCode := COPYSTR(SetOfVATEntryTypes,1,i - 1);
        IF STRLEN(VATEntryTypeCode) > 2 THEN
          ERROR(Text001);
        VATEntryType.GET(VATEntryTypeCode);
        SetOfVATEntryTypes := COPYSTR(SetOfVATEntryTypes,i + 1);
      UNTIL i = 0;
    END;

    PROCEDURE UpdateSalesVATEntryType@1210002(CustLedgerEntry@1210000 : Record 21);
    VAR
      SalesInvoiceHeader@1210002 : Record 112;
      SalesCrMemoHeader@1210003 : Record 114;
    BEGIN
      ValidateSetOfVATEntryCodes(CustLedgerEntry."VAT Entry Type");

      IF SalesInvoiceHeader.GET(CustLedgerEntry."Document No.") AND
         (CustLedgerEntry."VAT Entry Type" <> SalesInvoiceHeader."VAT Entry Type")
      THEN BEGIN
        SalesInvoiceHeader."VAT Entry Type" := CustLedgerEntry."VAT Entry Type";
        SalesInvoiceHeader.MODIFY;
      END;

      IF SalesCrMemoHeader.GET(CustLedgerEntry."Document No.") AND
         (CustLedgerEntry."VAT Entry Type" <> SalesCrMemoHeader."VAT Entry Type")
      THEN BEGIN
        SalesCrMemoHeader."VAT Entry Type" := CustLedgerEntry."VAT Entry Type";
        SalesCrMemoHeader.MODIFY;
      END;
    END;

    PROCEDURE UpdatePurchVATEntryType@1210005(VendLedgerEntry@1210000 : Record 25);
    VAR
      PurchInvHeader@1210002 : Record 122;
      PurchCrMemoHdr@1210003 : Record 124;
    BEGIN
      ValidateSetOfVATEntryCodes(VendLedgerEntry."VAT Entry Type");

      IF PurchInvHeader.GET(VendLedgerEntry."Document No.") AND
         (VendLedgerEntry."VAT Entry Type" <> PurchInvHeader."VAT Entry Type")
      THEN BEGIN
        PurchInvHeader."VAT Entry Type" := VendLedgerEntry."VAT Entry Type";
        PurchInvHeader.MODIFY;
      END;

      IF PurchCrMemoHdr.GET(VendLedgerEntry."Document No.") AND
         (VendLedgerEntry."VAT Entry Type" <> PurchCrMemoHdr."VAT Entry Type")
      THEN BEGIN
        PurchCrMemoHdr."VAT Entry Type" := VendLedgerEntry."VAT Entry Type";
        PurchCrMemoHdr.MODIFY;
      END;
    END;

    PROCEDURE GetValue@1210003() SetOfVATEntryType : Code[20];
    VAR
      Delimiter@1210001 : Text[1];
    BEGIN
      IF FINDSET THEN
        REPEAT
          SetOfVATEntryType += Delimiter + Code;
          Delimiter := ';';
        UNTIL NEXT = 0;
    END;

    BEGIN
    END.
  }
}

