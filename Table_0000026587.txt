OBJECT Table 26587 Stat. Report Table Mapping
{
  OBJECT-PROPERTIES
  {
    Date=15.09.15;
    Time=12:00:00;
    Version List=NAVRU9.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Report Code,Table Code,Table Row Description,Table Column Header;
    CaptionML=[ENU=Stat. Report Table Mapping;
               RUS=Соответствие таблиц регламентного отчета];
  }
  FIELDS
  {
    { 1   ;   ;Report Code         ;Code20        ;TableRelation="Statutory Report";
                                                   CaptionML=[ENU=Report Code;
                                                              RUS=Код отчета] }
    { 2   ;   ;Table Code          ;Code20        ;TableRelation="Statutory Report Table".Code WHERE (Report Code=FIELD(Report Code));
                                                   CaptionML=[ENU=Table Code;
                                                              RUS=Код таблицы] }
    { 3   ;   ;Table Row No.       ;Integer       ;CaptionML=[ENU=Table Row No.;
                                                              RUS=Номер строки таблицы] }
    { 4   ;   ;Table Column No.    ;Integer       ;CaptionML=[ENU=Table Column No.;
                                                              RUS=Номер столбца таблицы] }
    { 5   ;   ;Table Row Description;Text250      ;CaptionML=[ENU=Table Row Description;
                                                              RUS=Описание строки таблицы] }
    { 6   ;   ;Table Column Header ;Text250       ;CaptionML=[ENU=Table Column Header;
                                                              RUS=Заголовок столбца таблицы] }
    { 7   ;   ;Int. Source Type    ;Option        ;OnValidate=BEGIN
                                                                IF "Int. Source Type" <> xRec."Int. Source Type" THEN BEGIN
                                                                  "Int. Source Section Code" := '';
                                                                  "Int. Source No." := '';
                                                                  "Internal Source Row No." := 0;
                                                                  "Internal Source Column No." := 0;
                                                                  "Int. Source Row Description" := '';
                                                                  "Int. Source Column Header" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Int. Source Type;
                                                              RUS=Тип внутр. источника];
                                                   OptionCaptionML=[ENU=" ,Acc. Schedule,Tax Register,Tax Difference,Payroll Analysis Report";
                                                                    RUS=" ,Фин. отчет,Налоговый регистр,Налоговая разница,Аналитический отчет по зарплате"];
                                                   OptionString=[ ,Acc. Schedule,Tax Register,Tax Difference,Payroll Analysis Report] }
    { 8   ;   ;Int. Source Section Code;Code10    ;TableRelation=IF (Int. Source Type=FILTER(Tax Register)) "Tax Register Section"
                                                                 ELSE IF (Int. Source Type=CONST(Tax Difference)) "Tax Calc. Section";
                                                   OnValidate=BEGIN
                                                                IF "Int. Source Type" IN ["Int. Source Type"::" ","Int. Source Type"::"Acc. Schedule"] THEN
                                                                  FIELDERROR("Int. Source Type");

                                                                IF "Int. Source Section Code" <> xRec."Int. Source Section Code" THEN
                                                                  "Int. Source No." := '';
                                                              END;

                                                   CaptionML=[ENU=Int. Source Section Code;
                                                              RUS=Код секции внутр. источника] }
    { 9   ;   ;Int. Source No.     ;Code10        ;TableRelation=IF (Int. Source Type=CONST(Acc. Schedule)) "Acc. Schedule Name"
                                                                 ELSE IF (Int. Source Type=CONST(Tax Register)) "Tax Register".No. WHERE (Section Code=FIELD(Int. Source Section Code))
                                                                 ELSE IF (Int. Source Type=CONST(Tax Difference)) "Tax Calc. Header".No. WHERE (Section Code=FIELD(Int. Source Section Code));
                                                   OnValidate=BEGIN
                                                                IF "Int. Source No." <> xRec."Int. Source No." THEN BEGIN
                                                                  "Internal Source Row No." := 0;
                                                                  "Internal Source Column No." := 0;
                                                                  "Int. Source Row Description" := '';
                                                                  CASE "Int. Source Type" OF
                                                                    "Int. Source Type"::"Acc. Schedule":
                                                                      "Int. Source Column Header" := '';
                                                                    "Int. Source Type"::"Tax Register",
                                                                    "Int. Source Type"::"Tax Difference":
                                                                      "Int. Source Column Header" :=
                                                                        TaxRegisterAccumulation.FIELDCAPTION(Amount);
                                                                  END;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Int. Source No.;
                                                              RUS=Код внутр. источника] }
    { 10  ;   ;Internal Source Row No.;Integer    ;CaptionML=[ENU=Internal Source Row No.;
                                                              RUS=Номер столбца внутр. источника] }
    { 11  ;   ;Internal Source Column No.;Integer ;CaptionML=[ENU=Internal Source Column No.;
                                                              RUS=Номер строки внутр. источника] }
    { 12  ;   ;Int. Source Row Description;Text250;CaptionML=[ENU=Int. Source Row Description;
                                                              RUS=Описание строки внутреннего источника] }
    { 13  ;   ;Int. Source Column Header;Text250  ;CaptionML=[ENU=Int. Source Column Header;
                                                              RUS=Заголовок столбца внутреннего источника] }
  }
  KEYS
  {
    {    ;Report Code,Table Code,Table Row No.,Table Column No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text001@1210000 : TextConst 'ENU=%1 - %2;RUS=%1 - %2';
      TaxRegisterAccumulation@1210001 : Record 17208;

    PROCEDURE GetRecDescription@1210000() : Text[250];
    BEGIN
      EXIT(STRSUBSTNO(Text001,"Int. Source Row Description","Int. Source Column Header"));
    END;

    PROCEDURE ShowMappingCard@1210001(ReportCode@1210005 : Code[20];TableCode@1210006 : Code[20];LineNo@1210007 : Integer;ColumnNo@1210008 : Integer;VAR NewRecordDescription@1210013 : Text[250]);
    VAR
      StatutoryReportTable@1210003 : Record 26552;
      StatReportTableRow@1210009 : Record 26553;
      StatReportTableMapping@1210004 : Record 26587;
      StatReportTableColumn@1210010 : Record 26554;
      TableIndividualRequisite@1210011 : Record 26556;
      UpdatedStatReportTableMapping@1210002 : Record 26587;
      StatRepTableCellMapping@1210001 : Page 26594;
      NewRecord@1210000 : Boolean;
      Description@1210012 : Text[250];
    BEGIN
      StatutoryReportTable.GET(ReportCode,TableCode);
      StatutoryReportTable.TESTFIELD("Int. Source Type");
      StatutoryReportTable.TESTFIELD("Int. Source No.");

      IF ColumnNo <> 0 THEN BEGIN
        StatReportTableColumn.GET(ReportCode,TableCode,ColumnNo);
        StatReportTableRow.GET(ReportCode,TableCode,LineNo);
        Description := StatReportTableRow.Description;
      END ELSE BEGIN
        TableIndividualRequisite.GET(ReportCode,TableCode,LineNo);
        Description := TableIndividualRequisite.Description
      END;
      IF NOT StatReportTableMapping.GET(ReportCode,TableCode,LineNo,ColumnNo) THEN BEGIN
        StatReportTableMapping.INIT;
        StatReportTableMapping."Report Code" := ReportCode;
        StatReportTableMapping."Table Code" := TableCode;
        StatReportTableMapping."Table Row No." := LineNo;
        StatReportTableMapping."Table Column No." := ColumnNo;
        StatReportTableMapping."Table Row Description" := Description;
        StatReportTableMapping."Table Column Header" := StatReportTableColumn."Column Header";
        StatReportTableMapping."Int. Source Type" := StatutoryReportTable."Int. Source Type";
        StatReportTableMapping."Int. Source Section Code" := StatutoryReportTable."Int. Source Section Code";
        StatReportTableMapping.VALIDATE("Int. Source No.",StatutoryReportTable."Int. Source No.");
        NewRecord := TRUE;
      END;
      StatRepTableCellMapping.SetData(StatReportTableMapping);
      IF StatRepTableCellMapping.RUNMODAL = ACTION::OK THEN BEGIN
        StatRepTableCellMapping.GETRECORD(UpdatedStatReportTableMapping);

        // UpdatedStatReportTableMapping pointing to Temporary table which is the source of StatRepTableCellMapping page
        // So we need copy fields (instead of direct variable assignment)
        StatReportTableMapping.TRANSFERFIELDS(UpdatedStatReportTableMapping);
        IF NewRecord THEN
          StatReportTableMapping.INSERT
        ELSE
          StatReportTableMapping.MODIFY;

        NewRecordDescription := StatReportTableMapping.GetRecDescription;
      END;
    END;

    BEGIN
    END.
  }
}

