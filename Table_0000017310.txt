OBJECT Table 17310 Tax Calc. Line
{
  OBJECT-PROPERTIES
  {
    Date=09.09.14;
    Time=12:00:00;
    Version List=NAVRU8.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TaxCalcSection.GET("Section Code");
               TaxCalcSection.ValidateChange;
             END;

    OnDelete=BEGIN
               TaxCalcSection.GET("Section Code");
               TaxCalcSection.ValidateChange;

               TaxCalcDimFilter.SETRANGE("Section Code","Section Code");
               TaxCalcDimFilter.SETRANGE("Register No.",Code);
               TaxCalcDimFilter.SETRANGE(Define,TaxCalcDimFilter.Define::Template);
               TaxCalcDimFilter.SETRANGE("Line No.","Line No.");
               TaxCalcDimFilter.DELETEALL(TRUE);
             END;

    CaptionML=[ENU=Tax Calc. Line;
               RUS=Строка налогового расчета];
    LookupPageID=Page17320;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;TableRelation="Tax Calc. Header".No.;
                                                   CaptionML=[ENU=Code;
                                                              RUS=Код] }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              RUS=Номер строки] }
    { 3   ;   ;Expression Type     ;Option        ;OnValidate=BEGIN
                                                                IF "Expression Type" <> xRec."Expression Type" THEN BEGIN
                                                                  TaxCalcSection.GET("Section Code");
                                                                  IF "Expression Type" <> "Expression Type"::Norm THEN
                                                                    "Norm Jurisdiction Code" := ''
                                                                  ELSE BEGIN
                                                                    TaxCalcSection.TESTFIELD("Norm Jurisdiction Code");
                                                                    "Norm Jurisdiction Code" := TaxCalcSection."Norm Jurisdiction Code";
                                                                  END;
                                                                  TaxCalcSection.ValidateChange;
                                                                  Expression := '';
                                                                  Value := 0;
                                                                  "Link Register No." := '';
                                                                  "Sum Field No." := 0;
                                                                  "Field Name" := '';
                                                                  "Selection Line Code" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Expression Type;
                                                              RUS=Тип выражения];
                                                   OptionCaptionML=[ENU=Term,Link,Total,Header,SumField,Norm;
                                                                    RUS=Термин,Ссылка,Итог,Заголовок,Поле суммы,Норма];
                                                   OptionString=Term,Link,Total,Header,SumField,Norm }
    { 4   ;   ;Expression          ;Text150       ;OnValidate=BEGIN
                                                                IF Expression <> xRec.Expression THEN BEGIN
                                                                  TaxCalcSection.GET("Section Code");
                                                                  TaxCalcSection.ValidateChange;
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF "Expression Type" = "Expression Type"::Norm THEN BEGIN
                                                                TESTFIELD("Norm Jurisdiction Code");
                                                                TaxRegNormGroup.RESET;
                                                                TaxRegNormGroup.FILTERGROUP(2);
                                                                TaxRegNormGroup.SETRANGE("Norm Jurisdiction Code","Norm Jurisdiction Code");
                                                                TaxRegNormGroup.FILTERGROUP(0);
                                                                IF Expression <> '' THEN
                                                                  IF TaxRegNormGroup.GET("Norm Jurisdiction Code",Expression) THEN ;
                                                                IF ACTION::LookupOK = PAGE.RUNMODAL(0,TaxRegNormGroup) THEN BEGIN
                                                                  Expression := TaxRegNormGroup.Code;
                                                                  IF Description = '' THEN
                                                                    Description := TaxRegNormGroup.Description;
                                                                END;
                                                              END;
                                                              IF "Expression Type" = "Expression Type"::Term THEN BEGIN
                                                                TaxCalcTerm.RESET;
                                                                TaxCalcTerm.FILTERGROUP(2);
                                                                TaxCalcTerm.SETRANGE("Section Code","Section Code");
                                                                TaxCalcTerm.FILTERGROUP(0);
                                                                IF Expression <> '' THEN
                                                                  IF TaxCalcTerm.GET("Section Code",Expression) THEN ;
                                                                IF ACTION::LookupOK = PAGE.RUNMODAL(0,TaxCalcTerm) THEN BEGIN
                                                                  Expression := TaxCalcTerm."Term Code";
                                                                  Description := TaxCalcTerm.Description;
                                                                END;
                                                              END;
                                                              IF "Expression Type" = "Expression Type"::Link THEN BEGIN
                                                                TESTFIELD("Link Register No.");
                                                                TaxCalcHeader.GET("Section Code","Link Register No.");
                                                                TaxCalcLine.RESET;
                                                                TaxCalcLine.FILTERGROUP(2);
                                                                TaxCalcLine.SETRANGE("Section Code",TaxCalcHeader."Section Code");
                                                                TaxCalcLine.SETRANGE(Code,TaxCalcHeader."No.");
                                                                TaxCalcLine.FILTERGROUP(0);
                                                                IF Expression <> '' THEN
                                                                  IF TaxCalcLine.GET("Section Code",Expression) THEN ;
                                                                IF ACTION::LookupOK = PAGE.RUNMODAL(0,TaxCalcLine) THEN BEGIN
                                                                  TaxCalcLine.TESTFIELD("Line Code");
                                                                  Expression := TaxCalcLine."Line Code";
                                                                  Description := TaxCalcLine.Description;
                                                                END;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Expression;
                                                              RUS=Выражение] }
    { 5   ;   ;Line Code           ;Code10        ;OnValidate=BEGIN
                                                                IF ("Line Code" <> xRec."Line Code") AND (xRec."Line Code" <> '') THEN BEGIN
                                                                  TaxCalcSection.GET("Section Code");
                                                                  TaxCalcSection.ValidateChange;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Line Code;
                                                              RUS=Код строки] }
    { 6   ;   ;Description         ;Text150       ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 7   ;   ;Value               ;Decimal       ;CaptionML=[ENU=Value;
                                                              RUS=Значение] }
    { 8   ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              RUS=Фильтр по дате] }
    { 9   ;   ;Link Register No.   ;Code10        ;TableRelation=IF (Expression Type=CONST(Link)) "Tax Calc. Header".No. WHERE (Section Code=FIELD(Section Code));
                                                   OnValidate=BEGIN
                                                                IF "Link Register No." <> xRec."Link Register No." THEN BEGIN
                                                                  TaxCalcSection.GET("Section Code");
                                                                  TaxCalcSection.ValidateChange;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Link Register No.;
                                                              RUS=Ссылка на код регистра] }
    { 10  ;   ;Sum Field No.       ;Integer       ;OnValidate=BEGIN
                                                                IF "Sum Field No." <> xRec."Sum Field No." THEN BEGIN
                                                                  TaxCalcSection.GET("Section Code");
                                                                  TaxCalcSection.ValidateChange;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Sum Field No.;
                                                              RUS=Номер поля суммы] }
    { 12  ;   ;Rounding Precision  ;Decimal       ;OnValidate=BEGIN
                                                                IF "Rounding Precision" <> xRec."Rounding Precision" THEN BEGIN
                                                                  TaxCalcSection.GET("Section Code");
                                                                  TaxCalcSection.ValidateChange;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Rounding Precision;
                                                              RUS=Точность округления];
                                                   DecimalPlaces=0: }
    { 13  ;   ;Section Code        ;Code10        ;TableRelation="Tax Calc. Section";
                                                   CaptionML=[ENU=Section Code;
                                                              RUS=Код секции];
                                                   NotBlank=Yes }
    { 14  ;   ;Dimensions Filters  ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Tax Calc. Dim. Filter" WHERE (Section Code=FIELD(Section Code),
                                                                                                    Register No.=FIELD(Code),
                                                                                                    Define=CONST(Template),
                                                                                                    Line No.=FIELD(Line No.)));
                                                   CaptionML=[ENU=Dimensions Filters;
                                                              RUS=Фильтры измерений];
                                                   Editable=No }
    { 15  ;   ;Norm Jurisdiction Code;Code10      ;TableRelation="Tax Register Norm Jurisdiction";
                                                   CaptionML=[ENU=Norm Jurisdiction Code;
                                                              RUS=Код нормы юрисдикции] }
    { 16  ;   ;Line Type           ;Option        ;OnValidate=BEGIN
                                                                TaxCalcHeader.GET("Section Code",Code);
                                                                TaxCalcHeader.TESTFIELD("Storing Method",TaxCalcHeader."Storing Method"::"Build Entry");
                                                                TaxCalcSection.GET("Section Code");
                                                                IF "Line Type" <> xRec."Line Type" THEN
                                                                  TaxCalcSection.ValidateChange;

                                                                IF "Line Type" = "Line Type"::CalcField THEN
                                                                  "Expression Type" := "Expression Type"::Link
                                                                ELSE
                                                                  "Expression Type" := "Expression Type"::SumField;
                                                                Expression := '';
                                                                Value := 0;
                                                                "Link Register No." := '';
                                                                "Sum Field No." := 0;
                                                                "Field Name" := '';
                                                                "Selection Line Code" := '';
                                                                IF "Line Type" = "Line Type"::" " THEN
                                                                  GetDefaultSumField;
                                                              END;

                                                   CaptionML=[ENU=Line Type;
                                                              RUS=Тип строки];
                                                   OptionCaptionML=[ENU=" ,CalcField,LineField";
                                                                    RUS=" ,Расчетное поле,Поле строки"];
                                                   OptionString=[ ,CalcField,LineField] }
    { 17  ;   ;Field Name          ;Text80        ;OnLookup=BEGIN
                                                              IF ("Expression Type" = "Expression Type"::SumField) OR
                                                                 ("Line Type" <> "Line Type"::" ")
                                                              THEN BEGIN
                                                                TaxCalcHeader.GET("Section Code",Code);
                                                                Fields.RESET;
                                                                IF "Line Type" = "Line Type"::CalcField THEN
                                                                  Fields.SETFILTER("No.",MakeCalcFieldFilter(TaxCalcHeader."Table ID"))
                                                                ELSE
                                                                  Fields.SETFILTER("No.",MakeFieldFilter(TaxCalcHeader."Table ID"));
                                                                IF Fields.GETFILTER("No.") <> '' THEN BEGIN
                                                                  Fields.SETRANGE(TableNo,TaxCalcHeader."Table ID");
                                                                  IF Fields."No." <> 0 THEN
                                                                    IF Fields.GET(TaxCalcHeader."Table ID",Fields."No.") THEN ;
                                                                  IF ACTION::LookupOK = PAGE.RUNMODAL(PAGE::"Tax Register Field Select",Fields) THEN BEGIN
                                                                    "Sum Field No." := Fields."No.";
                                                                    "Field Name" := Fields."Field Caption";
                                                                  END;
                                                                END;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Field Name;
                                                              RUS=Имя поля];
                                                   Editable=No }
    { 18  ;   ;Tax Diff. Amount (Base);Boolean    ;OnValidate=BEGIN
                                                                IF "Tax Diff. Amount (Base)" THEN
                                                                  IF "Line Type" = "Line Type"::CalcField THEN
                                                                    TESTFIELD("Sum Field No.",0)
                                                                  ELSE
                                                                    TESTFIELD("Line Type","Line Type"::" ");
                                                                IF "Tax Diff. Amount (Base)" <> xRec."Tax Diff. Amount (Base)" THEN BEGIN
                                                                  TaxCalcSection.GET("Section Code");
                                                                  TaxCalcSection.ValidateChange;
                                                                END;
                                                                IF "Tax Diff. Amount (Base)" THEN BEGIN
                                                                  TaxCalcLine.RESET;
                                                                  TaxCalcLine.SETRANGE("Section Code","Section Code");
                                                                  TaxCalcLine.SETRANGE(Code,Code);
                                                                  TaxCalcLine.SETFILTER("Line No.",'<>%1',"Line No.");
                                                                  TaxCalcLine.MODIFYALL("Tax Diff. Amount (Base)",FALSE);
                                                                  "Tax Diff. Amount (Tax)" := FALSE;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Tax Diff. Amount (Base);
                                                              RUS=Сумма налог. разниц (БУ)] }
    { 19  ;   ;Tax Diff. Amount (Tax);Boolean     ;OnValidate=BEGIN
                                                                IF "Tax Diff. Amount (Tax)" THEN
                                                                  IF "Line Type" = "Line Type"::CalcField THEN
                                                                    TESTFIELD("Sum Field No.",0)
                                                                  ELSE
                                                                    TESTFIELD("Line Type","Line Type"::" ");
                                                                IF "Tax Diff. Amount (Tax)" <> xRec."Tax Diff. Amount (Tax)" THEN BEGIN
                                                                  TaxCalcSection.GET("Section Code");
                                                                  TaxCalcSection.ValidateChange;
                                                                END;
                                                                IF "Tax Diff. Amount (Tax)" THEN BEGIN
                                                                  TaxCalcLine.RESET;
                                                                  TaxCalcLine.SETRANGE("Section Code","Section Code");
                                                                  TaxCalcLine.SETRANGE(Code,Code);
                                                                  TaxCalcLine.SETFILTER("Line No.",'<>%1',"Line No.");
                                                                  TaxCalcLine.MODIFYALL("Tax Diff. Amount (Tax)",FALSE);
                                                                  "Tax Diff. Amount (Base)" := FALSE;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Tax Diff. Amount (Tax);
                                                              RUS=Сумма налог. разниц (НУ)] }
    { 20  ;   ;G/L Corr. Dimensions Filters;Boolean;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Exist("Tax Diff. Corr. Dim. Filter" WHERE (Section Code=FIELD(Section Code),
                                                                                                          Tax Calc. No.=FIELD(Code),
                                                                                                          Line No.=FIELD(Line No.),
                                                                                                          Define=CONST(Template)));
                                                   CaptionML=[ENU=G/L Corr. Dimensions Filters;
                                                              RUS=Фильтры изм. по корресп.] }
    { 39  ;   ;Indentation         ;Integer       ;CaptionML=[ENU=Indentation;
                                                              RUS=Отступ] }
    { 40  ;   ;Bold                ;Boolean       ;CaptionML=[ENU=Bold;
                                                              RUS=Полужирный] }
    { 41  ;   ;Period              ;Code30        ;OnValidate=BEGIN
                                                                IF NOT ("Expression Type" IN ["Expression Type"::Term,"Expression Type"::SumField]) THEN
                                                                  IF Period <> '' THEN
                                                                    ERROR(Text1000,"Expression Type");
                                                                IF Period <> xRec.Period THEN BEGIN
                                                                  TaxCalcSection.GET("Section Code");
                                                                  TaxCalcSection.ValidateChange;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Period;
                                                              RUS=Период] }
    { 42  ;   ;Selection Line Code ;Code10        ;OnValidate=BEGIN
                                                                IF "Selection Line Code" <> xRec."Selection Line Code" THEN BEGIN
                                                                  TaxCalcSection.GET("Section Code");
                                                                  TaxCalcSection.ValidateChange;
                                                                  TaxCalcSelectionSetup.RESET;
                                                                  TaxCalcSelectionSetup.SETRANGE("Section Code","Section Code");
                                                                  TaxCalcSelectionSetup.SETRANGE("Register No.",Code);
                                                                  TaxCalcSelectionSetup.SETRANGE("Line Code","Selection Line Code");
                                                                  IF NOT TaxCalcSelectionSetup.FINDFIRST THEN
                                                                    FIELDERROR("Selection Line Code");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              IF ("Expression Type" <> "Expression Type"::SumField) OR ("Sum Field No." = 0) THEN
                                                                EXIT;

                                                              TaxCalcSelectionSetup.RESET;
                                                              TaxCalcSelectionSetup.FILTERGROUP(2);
                                                              TaxCalcSelectionSetup.SETRANGE("Section Code","Section Code");
                                                              TaxCalcSelectionSetup.FILTERGROUP(0);
                                                              TaxCalcSelectionSetup.SETRANGE("Register No.",Code);
                                                              IF ACTION::LookupOK = PAGE.RUNMODAL(0,TaxCalcSelectionSetup) THEN BEGIN
                                                                TaxCalcSelectionSetup.TESTFIELD("Register No.",Code);
                                                                TaxCalcSelectionSetup.TESTFIELD("Line Code");
                                                                "Selection Line Code" := TaxCalcSelectionSetup."Line Code";
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Selection Line Code;
                                                              RUS=Код строки выборки] }
    { 43  ;   ;Depreciation Group  ;Code10        ;TableRelation=IF (Expression Type=CONST(SumField)) "Depreciation Group".Code;
                                                   OnValidate=BEGIN
                                                                IF "Depreciation Group" <> xRec."Depreciation Group" THEN BEGIN
                                                                  TaxCalcSection.GET("Section Code");
                                                                  TaxCalcSection.ValidateChange;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Depreciation Group;
                                                              RUS=Группа амортизации] }
    { 44  ;   ;Belonging to Manufacturing;Option  ;OnValidate=BEGIN
                                                                IF "Belonging to Manufacturing" <> xRec."Belonging to Manufacturing" THEN BEGIN
                                                                  TaxCalcSection.GET("Section Code");
                                                                  TaxCalcSection.ValidateChange;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Belonging to Manufacturing;
                                                              RUS=Принадлежность к производству];
                                                   OptionCaptionML=[ENU=" ,Production,Nonproduction";
                                                                    RUS=" ,Производственное,Непроизводственное"];
                                                   OptionString=[ ,Production,Nonproduction] }
    { 45  ;   ;FA Type             ;Option        ;OnValidate=BEGIN
                                                                IF "FA Type" <> xRec."FA Type" THEN BEGIN
                                                                  TaxCalcSection.GET("Section Code");
                                                                  TaxCalcSection.ValidateChange;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=FA Type;
                                                              RUS=Тип ОС];
                                                   OptionCaptionML=[ENU=" ,Fixed Assets,Intangible Assets";
                                                                    RUS=" ,ОС,НМА"];
                                                   OptionString=[ ,Fixed Assets,Intangible Assets] }
    { 46  ;   ;Disposed            ;Boolean       ;OnValidate=BEGIN
                                                                IF Disposed <> xRec.Disposed THEN BEGIN
                                                                  TaxCalcSection.GET("Section Code");
                                                                  TaxCalcSection.ValidateChange;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Disposed;
                                                              RUS=Списано] }
  }
  KEYS
  {
    {    ;Section Code,Code,Line No.              ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      TaxCalcSection@1000 : Record 17307;
      TaxCalcTerm@1002 : Record 17311;
      TaxCalcHeader@1003 : Record 17308;
      TaxCalcSelectionSetup@1004 : Record 17309;
      TaxCalcLine@1005 : Record 17310;
      Fields@1006 : Record 2000000041;
      TaxCalcGLEntry@1007 : Record 17315;
      TaxCalcItemEntry@1008 : Record 17317;
      TaxCalcFAEntry@1009 : Record 17318;
      TaxCalcDimFilter@1010 : Record 17313;
      TaxRegNormGroup@1011 : Record 17221;
      Text1000@1013 : TextConst 'ENU=Period must be empty if Expression Type is %1.;RUS=Период должен быть пустым, если тип выражения - %1.';

    PROCEDURE MakeFieldFilter@1(TaxCalcTableNo@1000 : Integer) : Text[1024];
    BEGIN
      CASE TaxCalcTableNo OF
        DATABASE::"Tax Calc. G/L Entry":
          EXIT(TaxCalcFieldFilter(0));
        DATABASE::"Tax Calc. Item Entry":
          EXIT(TaxCalcItemFieldFilter(0));
        DATABASE::"Tax Calc. FA Entry":
          EXIT(TaxCalcFAFieldFilter(0));
      END;
    END;

    LOCAL PROCEDURE TaxCalcFieldFilter@2(TypeField@1000 : 'SumFields,CalcFields') FilterText : Text[1024];
    BEGIN
      Fields.RESET;
      Fields.SETRANGE(TableNo,DATABASE::"Tax Calc. G/L Entry");
      IF Fields.FINDSET THEN BEGIN
        REPEAT
          IF TaxCalcGLEntry.SetFieldFilter(Fields."No.",TypeField) THEN
            FilterText := STRSUBSTNO('%1|%2',FilterText,Fields."No.");
        UNTIL Fields.NEXT = 0;
        FilterText := DELCHR(FilterText,'<>','|');
      END;
    END;

    PROCEDURE MakeCalcFieldFilter@3(TaxCalcTableNo@1000 : Integer) : Text[1024];
    BEGIN
      CASE TaxCalcTableNo OF
        DATABASE::"Tax Calc. G/L Entry":
          EXIT(TaxCalcFieldFilter(1));
        DATABASE::"Tax Calc. Item Entry":
          EXIT(TaxCalcItemFieldFilter(1));
        DATABASE::"Tax Calc. FA Entry":
          EXIT(TaxCalcFAFieldFilter(1));
      END;
    END;

    LOCAL PROCEDURE TaxCalcItemFieldFilter@4(TypeField@1000 : 'SumFields,CalcFields') FilterText : Text[1024];
    BEGIN
      Fields.RESET;
      Fields.SETRANGE(TableNo,DATABASE::"Tax Calc. Item Entry");
      IF Fields.FINDSET THEN BEGIN
        REPEAT
          IF TaxCalcItemEntry.SetFieldFilter(Fields."No.",TypeField) THEN
            FilterText := STRSUBSTNO('%1|%2',FilterText,Fields."No.");
        UNTIL Fields.NEXT = 0;
        FilterText := DELCHR(FilterText,'<>','|');
      END;
    END;

    LOCAL PROCEDURE TaxCalcFAFieldFilter@5(TypeField@1000 : 'SumFields,CalcFields') FilterText : Text[1024];
    BEGIN
      Fields.RESET;
      Fields.SETRANGE(TableNo,DATABASE::"Tax Calc. FA Entry");
      IF Fields.FINDSET THEN BEGIN
        REPEAT
          IF TaxCalcFAEntry.SetFieldFilter(Fields."No.",TypeField) THEN
            FilterText := STRSUBSTNO('%1|%2',FilterText,Fields."No.");
        UNTIL Fields.NEXT = 0;
        FilterText := DELCHR(FilterText,'<>','|');
      END;
    END;

    PROCEDURE GenerateProfile@7();
    VAR
      GenTemplateProfile@1000 : Record 17237;
      TaxCalcHeader@1001 : Record 17308;
      TaxCalcAccumulation@1002 : Record 17314;
      TaxCalcDimFilter@1003 : Record 17313;
    BEGIN
      IF GenTemplateProfile.GET(DATABASE::"Tax Calc. Line") THEN
        EXIT;

      GenTemplateProfile."Template Line Table No." := DATABASE::"Tax Calc. Line";
      GenTemplateProfile."Template Header Table No." := DATABASE::"Tax Calc. Header";
      GenTemplateProfile."Term Header Table No." := DATABASE::"Tax Calc. Term";
      GenTemplateProfile."Term Line Table No." := DATABASE::"Tax Calc. Term Formula";
      GenTemplateProfile."Dim. Filter Table No." := DATABASE::"Tax Calc. Dim. Filter";

      GenTemplateProfile."Section Code (Hdr)" := TaxCalcHeader.FIELDNO("Section Code");
      GenTemplateProfile."Code (Hdr)" := TaxCalcHeader.FIELDNO("No.");
      GenTemplateProfile."Check (Hdr)" := TaxCalcHeader.FIELDNO(Check);
      GenTemplateProfile."Level (Hdr)" := TaxCalcHeader.FIELDNO(Level);
      GenTemplateProfile."Storing Method (Hdr)" := TaxCalcHeader.FIELDNO("Storing Method");

      GenTemplateProfile."Section Code" := FIELDNO("Section Code");
      GenTemplateProfile.Code := FIELDNO(Code);
      GenTemplateProfile."Line No." := FIELDNO("Line No.");
      GenTemplateProfile."Expression Type" := FIELDNO("Expression Type");
      GenTemplateProfile.Expression := FIELDNO(Expression);
      GenTemplateProfile."Line Code (Line)" := FIELDNO("Line Code");
      GenTemplateProfile."Norm Jurisd. Code (Line)" := FIELDNO("Norm Jurisdiction Code");
      GenTemplateProfile."Link Code" := FIELDNO("Link Register No.");
      GenTemplateProfile."Date Filter" := FIELDNO("Date Filter");
      GenTemplateProfile.Period := FIELDNO(Period);
      GenTemplateProfile.Description := FIELDNO(Description);
      GenTemplateProfile."Rounding Precision" := FIELDNO("Rounding Precision");

      GenTemplateProfile."Header Code (Link)" := TaxCalcAccumulation.FIELDNO("Register No.");
      GenTemplateProfile."Line Code (Link)" := TaxCalcAccumulation.FIELDNO("Template Line Code");
      GenTemplateProfile."Value (Link)" := TaxCalcAccumulation.FIELDNO(Amount);

      GenTemplateProfile."Section Code (Dim)" := TaxCalcDimFilter.FIELDNO("Section Code");
      GenTemplateProfile."Tax Register No. (Dim)" := TaxCalcDimFilter.FIELDNO("Register No.");
      GenTemplateProfile."Define (Dim)" := TaxCalcDimFilter.FIELDNO(Define);
      GenTemplateProfile."Line No. (Dim)" := TaxCalcDimFilter.FIELDNO("Line No.");
      GenTemplateProfile."Dimension Code (Dim)" := TaxCalcDimFilter.FIELDNO("Dimension Code");
      GenTemplateProfile."Dimension Value Filter (Dim)" := TaxCalcDimFilter.FIELDNO("Dimension Value Filter");

      GenTemplateProfile.INSERT;
    END;

    PROCEDURE GetDefaultSumField@8();
    BEGIN
      IF "Expression Type" = "Expression Type"::SumField THEN
        IF TaxCalcHeader.GET("Section Code",Code) THEN BEGIN
          Fields.RESET;
          Fields.SETFILTER("No.",MakeFieldFilter(TaxCalcHeader."Table ID"));
          IF Fields.FINDFIRST THEN
            IF Fields.NEXT = 0 THEN BEGIN
              "Sum Field No." := Fields."No.";
              "Field Name" := Fields."Field Caption";
            END;
        END;
    END;

    PROCEDURE GetGLCorrDimFilter@1210000(DimCode@1210002 : Code[20];FilterGroup@1210000 : 'Debit,Credit') DimFilter : Text[250];
    VAR
      TaxDiffGLCorrDimFilter@1210003 : Record 17322;
    BEGIN
      IF TaxDiffGLCorrDimFilter.GET("Section Code",Code,0,"Line No.",FilterGroup,DimCode) THEN
        DimFilter := TaxDiffGLCorrDimFilter."Dimension Value Filter";
    END;

    BEGIN
    END.
  }
}

