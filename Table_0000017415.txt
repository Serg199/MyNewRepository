OBJECT Table 17415 Payroll Document Line
{
  OBJECT-PROPERTIES
  {
    Date=22.05.17;
    Time=12:07:09;
    Modified=Yes;
    Version List=NAVRU9.00,NOS-26;
  }
  PROPERTIES
  {
    Permissions=TableData 17433=rimd;
    OnDelete=BEGIN
               PayrollDocLineAE.RESET;
               PayrollDocLineAE.SETRANGE("Document No.","Document No.");
               PayrollDocLineAE.SETRANGE("Document Line No.","Line No.");
               PayrollDocLineAE.DELETEALL;

               PayrollPeriodAE.RESET;
               PayrollPeriodAE.SETRANGE("Document No.","Document No.");
               PayrollPeriodAE.SETRANGE("Line No.","Line No.");
               PayrollPeriodAE.DELETEALL;

               PayrollDocLineCalc.RESET;
               PayrollDocLineCalc.SETRANGE("Document No.","Document No.");
               PayrollDocLineCalc.SETRANGE("Document Line No.","Line No.");
               PayrollDocLineCalc.DELETEALL;

               PayrollDocLineVar.RESET;
               PayrollDocLineVar.SETRANGE("Document No.","Document No.");
               PayrollDocLineVar.SETRANGE("Document Line No.","Line No.");
               PayrollDocLineVar.DELETEALL;

               PayrollDocLineExpr.RESET;
               PayrollDocLineExpr.SETRANGE("Document No.","Document No.");
               PayrollDocLineExpr.SETRANGE("Document Line No.","Line No.");
               PayrollDocLineExpr.DELETEALL;
             END;

    CaptionML=[ENU=Payroll Document Line;
               RUS=Строка зарплатного документа];
  }
  FIELDS
  {
    { 1   ;   ;Document No.        ;Code20        ;TableRelation="Payroll Document";
                                                   CaptionML=[ENU=Document No.;
                                                              RUS=Номер документа] }
    { 2   ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              RUS=Номер строки] }
    { 4   ;   ;Employee No.        ;Code20        ;TableRelation=Employee;
                                                   CaptionML=[ENU=Employee No.;
                                                              RUS=Код сотрудника] }
    { 8   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 9   ;   ;Period Code         ;Code10        ;TableRelation="Payroll Period";
                                                   CaptionML=[ENU=Period Code;
                                                              RUS=Код периода] }
    { 11  ;   ;Calc Group          ;Code10        ;TableRelation="Payroll Calc Group";
                                                   CaptionML=[ENU=Calc Group;
                                                              RUS=Расчетная группа] }
    { 13  ;   ;Amount              ;Decimal       ;OnValidate=BEGIN
                                                                CheckDocStatus;
                                                              END;

                                                   CaptionML=[ENU=Amount;
                                                              RUS=Сумма];
                                                   DecimalPlaces=2:2;
                                                   Editable=No }
    { 14  ;   ;Payroll Amount      ;Decimal       ;OnValidate=BEGIN
                                                                CheckDocStatus;
                                                                IF (CurrFieldNo = FIELDNO("Payroll Amount")) AND ("Payroll Amount" <> xRec."Payroll Amount") THEN
                                                                  ConfirmChangeAmount;
                                                              END;

                                                   CaptionML=[ENU=Payroll Amount;
                                                              RUS=Сумма зарплаты];
                                                   DecimalPlaces=2:2 }
    { 15  ;   ;Taxable Amount      ;Decimal       ;OnValidate=BEGIN
                                                                CheckDocStatus;
                                                                IF (CurrFieldNo = FIELDNO("Taxable Amount")) AND ("Taxable Amount" <> xRec."Taxable Amount") THEN
                                                                  ConfirmChangeAmount;
                                                              END;

                                                   CaptionML=[ENU=Taxable Amount;
                                                              RUS=Налогооблагаемая сумма];
                                                   DecimalPlaces=2:2 }
    { 17  ;   ;Quantity            ;Decimal       ;CaptionML=[ENU=Quantity;
                                                              RUS=Кол-во] }
    { 23  ;   ;Posting Group       ;Code20        ;TableRelation="Payroll Posting Group";
                                                   CaptionML=[ENU=Posting Group;
                                                              RUS=Учетная группа] }
    { 24  ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                CheckDocStatus;
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              RUS=Код ярлыка измерения 1];
                                                   CaptionClass='1,2,1' }
    { 25  ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                CheckDocStatus;
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              RUS=Код ярлыка измерения 2];
                                                   CaptionClass='1,2,2' }
    { 26  ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              RUS=Тип документа];
                                                   OptionCaptionML=[ENU=" ,Vacation,Sick Leave,Travel,Other Absence";
                                                                    RUS=" ,Отпуск,Больничный,Командировка,Прочее отсутствие"];
                                                   OptionString=[ ,Vacation,Sick Leave,Travel,Other Absence] }
    { 27  ;   ;HR Order No.        ;Code20        ;CaptionML=[ENU=HR Order No.;
                                                              RUS=Номер кадрового приказа] }
    { 28  ;   ;HR Order Date       ;Date          ;CaptionML=[ENU=HR Order Date;
                                                              RUS=Дата кадрового приказа] }
    { 30  ;   ;Element Code        ;Code20        ;TableRelation="Payroll Element";
                                                   OnValidate=BEGIN
                                                                CheckDocStatus;
                                                                GetDocumentHeader;
                                                                PayrollDoc.TESTFIELD("Employee No.");
                                                                "Employee No." := PayrollDoc."Employee No.";
                                                                "Period Code" := PayrollDoc."Period Code";

                                                                IF "Element Code" = '' THEN BEGIN
                                                                  Calculate := FALSE;
                                                                  EXIT;
                                                                END;

                                                                PayrollElement.GET("Element Code");
                                                                "Depends on Salary Element" := PayrollElement."Depends on Salary Element";
                                                                Calculate := PayrollElement.Calculate;

                                                                AvailabilityIndex := FALSE;

                                                                PayrollCalcGroupLine.RESET;
                                                                PayrollCalcGroupLine.SETRANGE("Payroll Calc Group",Employee."Payroll Calc Group");
                                                                IF PayrollCalcGroupLine.FINDSET THEN
                                                                  REPEAT
                                                                    PayrollCalcTypeLine.RESET;
                                                                    PayrollCalcTypeLine.SETRANGE("Calc Type Code",PayrollCalcGroupLine."Payroll Calc Type");
                                                                    PayrollCalcTypeLine.SETRANGE("Element Code","Element Code");
                                                                    IF PayrollCalcTypeLine.FINDFIRST THEN
                                                                      AvailabilityIndex := TRUE;
                                                                  UNTIL PayrollCalcGroupLine.NEXT = 0;

                                                                CreateDim(DATABASE::"Payroll Element","Element Code");

                                                                IF NOT AvailabilityIndex THEN
                                                                  MESSAGE(Text005);

                                                                CalculatePayroll.CopyElementToPayrollDocLine(PayrollElement,Rec);
                                                                IF PayrollCalcTypeLine."Payroll Posting Group" <> '' THEN
                                                                  "Posting Group" := PayrollCalcTypeLine."Payroll Posting Group";

                                                                IF "Posting Group" = '' THEN
                                                                  IF PayrollElement."Posting Type" = PayrollElement."Posting Type"::Charge THEN
                                                                    IF Employee."Posting Group" <> '' THEN
                                                                      "Posting Group" := Employee."Posting Group";

                                                                IF PayrollElement.Description = '' THEN
                                                                  Description := COPYSTR(
                                                                      Employee."Last Name" + ' ' + Employee."First Name" + ' ' + Employee."Middle Name",1,MAXSTRLEN(Description));

                                                                IF "Element Type" = "Element Type"::"Netto Salary" THEN
                                                                  "Posting Group" := Employee."Posting Group";
                                                              END;

                                                   CaptionML=[ENU=Element Code;
                                                              RUS=Код элемента] }
    { 31  ;   ;Calculate           ;Boolean       ;CaptionML=[ENU=Calculate;
                                                              RUS=Выполнить расчет];
                                                   Editable=No }
    { 32  ;   ;Element Type        ;Option        ;CaptionML=[ENU=Element Type;
                                                              RUS=Тип элемента];
                                                   OptionCaptionML=[ENU=Wage,Bonus,Income Tax,Netto Salary,Tax Deduction,Deduction,Other,Funds,Reporting;
                                                                    RUS=Начисление,Премия,НДФЛ,Зарплата,Налоговый вычет,Удержание,Прочее,Фонды,Отчетность];
                                                   OptionString=Wage,Bonus,Income Tax,Netto Salary,Tax Deduction,Deduction,Other,Funds,Reporting;
                                                   Editable=No }
    { 33  ;   ;Posting Type        ;Option        ;CaptionML=[ENU=Posting Type;
                                                              RUS=Тип учета];
                                                   OptionCaptionML=[ENU=Not Post,Charge,Liability,Liability Charge,Information Only;
                                                                    RUS=Не учитывать,Расход,Обязательство,Расход по обязательству,Только информация];
                                                   OptionString=Not Post,Charge,Liability,Liability Charge,Information Only;
                                                   Editable=No }
    { 34  ;   ;Element Group       ;Code20        ;TableRelation="Payroll Element Group";
                                                   CaptionML=[ENU=Element Group;
                                                              RUS=Группа элемента];
                                                   Editable=No }
    { 35  ;   ;Print in Pay-Sheet  ;Option        ;CaptionML=[ENU=Print in Pay-Sheet;
                                                              RUS=Печатать в платежной ведомости];
                                                   OptionCaptionML=[ENU=Not Print,Current Value,From Starting Year,Balance,Current+From Starting Year,Current+Balance;
                                                                    RUS=Не печатать,Текущее значение,С начала года,Баланс,Текущее + С начала года,Текущее + Баланс];
                                                   OptionString=Not Print,Current Value,From Starting Year,Balance,Current+From Starting Year,Current+Balance }
    { 36  ;   ;Salary Indexation   ;Boolean       ;CaptionML=[ENU=Salary Indexation;
                                                              RUS=Индексация зарплаты] }
    { 37  ;   ;Depends on Salary Element;Code20   ;TableRelation="Payroll Element" WHERE (Type=CONST(Wage));
                                                   CaptionML=[ENU=Depends on Salary Element;
                                                              RUS=Зависит от зарплатного элемента] }
    { 38  ;   ;Payment Source      ;Option        ;CaptionML=[ENU=Payment Source;
                                                              RUS=Источник оплаты];
                                                   OptionCaptionML=[ENU=Employeer,FSI;
                                                                    RUS=Работодатель,ФСС];
                                                   OptionString=Employeer,FSI }
    { 52  ;   ;Time Activity Code  ;Code10        ;TableRelation="Time Activity";
                                                   CaptionML=[ENU=Time Activity Code;
                                                              RUS=Код временной активности] }
    { 55  ;   ;Employee Ledger Entry No.;Integer  ;TableRelation="Employee Ledger Entry";
                                                   CaptionML=[ENU=Employee Ledger Entry No.;
                                                              RUS=Номер операции сотрудника] }
    { 61  ;   ;Bonus Type          ;Option        ;CaptionML=[ENU=Bonus Type;
                                                              RUS=Тип премии];
                                                   OptionCaptionML=[ENU=" ,Monthly,Quarterly,Semi-Annual,Annual";
                                                                    RUS=" ,Ежемесячная,Квартальная,Полугодовая,Годовая"];
                                                   OptionString=[ ,Monthly,Quarterly,Semi-Annual,Annual] }
    { 100 ;   ;Pay-Sheet Print     ;Boolean       ;CaptionML=[ENU=Pay-Sheet Print;
                                                              RUS=Печать платеж. ведомости];
                                                   Editable=Yes }
    { 102 ;   ;Print               ;Integer       ;CaptionML=[ENU=Print;
                                                              RUS=Печать];
                                                   Editable=No }
    { 103 ;   ;Original Amount     ;Decimal       ;CaptionML=[ENU=Original Amount;
                                                              RUS=Начальная сумма];
                                                   DecimalPlaces=2:2;
                                                   Editable=No }
    { 104 ;   ;Corr. Amount        ;Decimal       ;CaptionML=[ENU=Corr. Amount;
                                                              RUS=Корр. сумма];
                                                   DecimalPlaces=2:2;
                                                   Description=DEL;
                                                   Editable=No }
    { 108 ;   ;Calendar Code       ;Code10        ;TableRelation="Payroll Calendar";
                                                   OnValidate=BEGIN
                                                                CheckDocStatus;
                                                              END;

                                                   CaptionML=[ENU=Calendar Code;
                                                              RUS=Код календаря] }
    { 109 ;   ;Corr. Amount 2      ;Decimal       ;CaptionML=[ENU=Corr. Amount 2;
                                                              RUS=Корр. сумма 2];
                                                   DecimalPlaces=2:2;
                                                   Description=DEL }
    { 110 ;   ;Directory Code      ;Code10        ;TableRelation=IF (Element Type=FILTER(Wage|Bonus|Other)) "Payroll Directory".Code WHERE (Type=CONST(Income))
                                                                 ELSE IF (Element Type=FILTER(Tax Deduction)) "Payroll Directory".Code WHERE (Type=CONST(Tax Deduction))
                                                                 ELSE IF (Element Type=CONST(Funds)) "Payroll Directory".Code WHERE (Type=CONST(Tax));
                                                   CaptionML=[ENU=Directory Code;
                                                              RUS=Код справочника] }
    { 111 ;   ;Calc Type Code      ;Code20        ;TableRelation="Payroll Calc Type";
                                                   CaptionML=[ENU=Calc Type Code;
                                                              RUS=Код расчетного типа];
                                                   Editable=No }
    { 112 ;   ;Priority            ;Integer       ;CaptionML=[ENU=Priority;
                                                              RUS=Приоритет] }
    { 113 ;   ;FSI Base            ;Boolean       ;CaptionML=[ENU=FSI Base;
                                                              RUS=База ФСС] }
    { 115 ;   ;Federal FMI Base    ;Boolean       ;CaptionML=[ENU=Federal FMI Base;
                                                              RUS=База федер. ФОМС] }
    { 116 ;   ;Territorial FMI Base;Boolean       ;CaptionML=[ENU=Territorial FMI Base;
                                                              RUS=База террит. ФОМС] }
    { 117 ;   ;Pension Fund Base   ;Boolean       ;CaptionML=[ENU=Pension Fund Base;
                                                              RUS=База ПФ] }
    { 118 ;   ;Income Tax Base     ;Boolean       ;CaptionML=[ENU=Income Tax Base;
                                                              RUS=База НДФЛ] }
    { 119 ;   ;FSI Injury Base     ;Boolean       ;CaptionML=[ENU=FSI Injury Base;
                                                              RUS=База ФСС по травматизму] }
    { 122 ;   ;AE Period From      ;Code10        ;TableRelation="Payroll Period";
                                                   CaptionML=[ENU=AE Period From;
                                                              RUS=Период СЗ с];
                                                   Editable=No }
    { 123 ;   ;AE Period To        ;Code10        ;TableRelation="Payroll Period";
                                                   CaptionML=[ENU=AE Period To;
                                                              RUS=Период СЗ по];
                                                   Editable=No }
    { 124 ;   ;Print Priority      ;Integer       ;CaptionML=[ENU=Print Priority;
                                                              RUS=Приоритет печати] }
    { 129 ;   ;Org. Unit Code      ;Code10        ;TableRelation="Organizational Unit";
                                                   CaptionML=[ENU=Org. Unit Code;
                                                              RUS=Код подразделения] }
    { 130 ;   ;Employee Posting Group;Code20      ;TableRelation="Payroll Posting Group";
                                                   CaptionML=[ENU=Employee Posting Group;
                                                              RUS=Учетная группа сотрудника] }
    { 132 ;   ;Pay Type            ;Option        ;CaptionML=[ENU=Pay Type;
                                                              RUS=Тип оплаты];
                                                   OptionCaptionML=[ENU=" ,Salary Schedule,Social,Other Income";
                                                                    RUS=" ,График зарплаты,Социальный,Прочий доход"];
                                                   OptionString=[ ,Salary Schedule,Social,Other Income] }
    { 136 ;   ;Employee Account No.;Code20        ;CaptionML=[ENU=Employee Account No.;
                                                              RUS=Номер счета сотрудника] }
    { 141 ;   ;Wage Period From    ;Code10        ;TableRelation="Payroll Period";
                                                   CaptionML=[ENU=Wage Period From;
                                                              RUS=Период начисления от] }
    { 142 ;   ;Wage Period To      ;Code10        ;TableRelation="Payroll Period";
                                                   CaptionML=[ENU=Wage Period To;
                                                              RUS=Период начисления до] }
    { 148 ;   ;Amount (ACY)        ;Decimal       ;CaptionML=[ENU=Amount (ACY);
                                                              RUS=Сумма (ДОВ)] }
    { 150 ;   ;Action Starting Date;Date          ;CaptionML=[ENU=Action Starting Date;
                                                              RUS=Дата начала действия] }
    { 151 ;   ;Action Ending Date  ;Date          ;CaptionML=[ENU=Action Ending Date;
                                                              RUS=Дата окончания действия] }
    { 201 ;   ;Source Pay          ;Option        ;CaptionML=[ENU=Source Pay;
                                                              RUS=Источник выплаты];
                                                   OptionCaptionML=[ENU=" ,Cost,Profit,FSI,FOSI";
                                                                    RUS=" ,Себест.,Прибыль,ФСС,ФОМС"];
                                                   OptionString=[ ,Cost,Profit,FSI,FOSI] }
    { 220 ;   ;AE Total Earnings   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Payroll Document Line AE"."Amount for AE" WHERE (Document No.=FIELD(Document No.),
                                                                                                                     Document Line No.=FIELD(Line No.)));
                                                   CaptionML=[ENU=AE Total Earnings;
                                                              RUS=Всего заработок для СЗ];
                                                   Editable=No }
    { 221 ;   ;AE Daily Earnings   ;Decimal       ;CaptionML=[ENU=AE Daily Earnings;
                                                              RUS=Среднедневной заработок];
                                                   Editable=No }
    { 222 ;   ;AE Hourly Earnings  ;Decimal       ;CaptionML=[ENU=AE Hourly Earnings;
                                                              RUS=Среднечасовой заработок] }
    { 223 ;   ;AE Total Days       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Payroll Period AE"."Average Days" WHERE (Document No.=FIELD(Document No.),
                                                                                                             Line No.=FIELD(Line No.)));
                                                   CaptionML=[ENU=AE Total Days;
                                                              RUS=Всего дней для СЗ];
                                                   Editable=No }
    { 224 ;   ;AE Total FSI Earnings;Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Payroll Document Line AE"."Amount for FSI" WHERE (Document No.=FIELD(Document No.),
                                                                                                                      Document Line No.=FIELD(Line No.)));
                                                   CaptionML=[ENU=AE Total FSI Earnings;
                                                              RUS=Общий заработок ФСС для СЗ];
                                                   Editable=No }
    { 225 ;   ;AE Total Earnings Indexed;Decimal  ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Payroll Document Line AE"."Indexed Amount for AE" WHERE (Document No.=FIELD(Document No.),
                                                                                                                             Document Line No.=FIELD(Line No.)));
                                                   CaptionML=[ENU=AE Total Earnings Indexed;
                                                              RUS=Общий индексированный заработок СЗ];
                                                   Editable=No }
    { 234 ;   ;Payment Percent     ;Decimal       ;CaptionML=[ENU=Payment Percent;
                                                              RUS=Процент оплаты] }
    { 240 ;   ;Code OKATO          ;Code11        ;CaptionML=[ENU=Code OKATO;
                                                              RUS=Код ОКАТО] }
    { 241 ;   ;Code KPP            ;Code10        ;CaptionML=[ENU=Code KPP;
                                                              RUS=Код КПП] }
    { 244 ;   ;Vacation Posting Group;Code20      ;TableRelation="Payroll Posting Group";
                                                   CaptionML=[ENU=Vacation Posting Group;
                                                              RUS=Учетная группа отпуска] }
    { 250 ;   ;Planned Days        ;Decimal       ;CaptionML=[ENU=Planned Days;
                                                              RUS=Плановые дни] }
    { 251 ;   ;Planned Hours       ;Decimal       ;CaptionML=[ENU=Planned Hours;
                                                              RUS=Плановые часы] }
    { 252 ;   ;Actual Days         ;Decimal       ;CaptionML=[ENU=Actual Days;
                                                              RUS=Отработанные дни] }
    { 253 ;   ;Actual Hours        ;Decimal       ;CaptionML=[ENU=Actual Hours;
                                                              RUS=Отработанные часы] }
    { 256 ;   ;Payment Days        ;Decimal       ;CaptionML=[ENU=Payment Days;
                                                              RUS=Оплачиваемые дни] }
    { 257 ;   ;Payment Hours       ;Decimal       ;CaptionML=[ENU=Payment Hours;
                                                              RUS=Оплачиваемые часы] }
    { 258 ;   ;Days Not Paid       ;Decimal       ;CaptionML=[ENU=Days Not Paid;
                                                              RUS=Неоплачиваемые дни] }
    { 259 ;   ;Excluded Days       ;Decimal       ;CaptionML=[ENU=Excluded Days;
                                                              RUS=Исключенные дни];
                                                   Editable=No }
    { 260 ;   ;Days To Exclude     ;Decimal       ;CaptionML=[ENU=Days To Exclude;
                                                              RUS=Исключаемые дни];
                                                   Editable=No }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              RUS=Код набора измерений];
                                                   Editable=No }
    { 17400;  ;Payroll Ledger Entry No.;Integer   ;TableRelation="Payroll Ledger Entry";
                                                   CaptionML=[ENU=Payroll Ledger Entry No.;
                                                              RUS=Номер операции зарплаты] }
  }
  KEYS
  {
    {    ;Document No.,Line No.                   ;SumIndexFields=Amount,Payroll Amount;
                                                   Clustered=Yes }
    {    ;Element Type,Employee No.,Period Code,Posting Type;
                                                   SumIndexFields=Amount,Payroll Amount }
    {    ;Element Code                             }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text005@1210007 : TextConst 'ENU=Incorrect element!;RUS=Некорректный элемент!';
      Text008@1210005 : TextConst 'ENU=Do you really want to change this calculated value?;RUS=Действительно удалить это вычисляемое значение?';
      Employee@1210014 : Record 5200;
      PayrollElement@1210003 : Record 17400;
      PayrollCalcTypeLine@1210016 : Record 17405;
      PayrollCalcGroupLine@1210013 : Record 17403;
      PayrollDoc@1210015 : Record 17414;
      PayrollPeriodAE@1210004 : Record 17433;
      PayrollDocLineAE@1210022 : Record 17431;
      PayrollDocLineCalc@1210008 : Record 17459;
      PayrollDocLineExpr@1210000 : Record 17438;
      PayrollDocLineVar@1210002 : Record 17437;
      CalculatePayroll@1210019 : Report 17401;
      DimMgt@1210001 : Codeunit 408;
      AvailabilityIndex@1210012 : Boolean;

    PROCEDURE GetDocumentHeader@1210001();
    BEGIN
      IF "Document No." <> PayrollDoc."No." THEN
        PayrollDoc.GET("Document No.");
    END;

    LOCAL PROCEDURE ConfirmChangeAmount@2();
    BEGIN
      IF Calculate THEN BEGIN
        IF CONFIRM(Text008) THEN
          Calculate := FALSE
        ELSE
          ERROR('');
      END;
    END;

    PROCEDURE CreateDim@1210007(Type1@1000 : Integer;No1@1001 : Code[20]);
    VAR
      SourceCodeSetup@1006 : Record 242;
      TableID@1007 : ARRAY [10] OF Integer;
      No@1008 : ARRAY [10] OF Code[20];
    BEGIN
      SourceCodeSetup.GET;
      TableID[1] := Type1;
      No[1] := No1;
      "Shortcut Dimension 1 Code" := '';
      "Shortcut Dimension 2 Code" := '';
      GetDocumentHeader;
      "Dimension Set ID" :=
        DimMgt.GetDefaultDimID(
          TableID,No,SourceCodeSetup."Payroll Calculation",
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code",
          PayrollDoc."Dimension Set ID",DATABASE::Employee);
      DimMgt.UpdateGlobalDimFromDimSetID("Dimension Set ID","Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
    END;

    PROCEDURE LookupShortcutDimCode@28(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.LookupDimValueCode(FieldNumber,ShortcutDimCode);
      ValidateShortcutDimCode(FieldNumber,ShortcutDimCode);
    END;

    PROCEDURE ShowShortcutDimCode@27(VAR ShortcutDimCode@1000 : ARRAY [20] OF Code[20]);
    BEGIN
      DimMgt.GetShortcutDimensions("Dimension Set ID",ShortcutDimCode);
    END;

    PROCEDURE ShowDimensions@25();
    BEGIN
      DimMgt.SetObjectFrom(Rec); // NC NOS-26 SPA
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2 %3',"Document Type","Document No.","Line No."));
      DimMgt.UpdateGlobalDimFromDimSetID("Dimension Set ID","Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
    END;

    PROCEDURE ShowComments@1210004();
    VAR
      HROrderCommentLine@1210000 : Record 17368;
      HROrderCommentLines@1210001 : Page 17394;
    BEGIN
      HROrderCommentLine.SETRANGE("Table Name",HROrderCommentLine."Table Name"::"Payroll Document");
      HROrderCommentLine.SETRANGE("No.","Document No.");
      HROrderCommentLine.SETRANGE("Line No.","Line No.");
      HROrderCommentLines.SETTABLEVIEW(HROrderCommentLine);
      HROrderCommentLines.RUNMODAL;
    END;

    PROCEDURE ShowCalculation@1210006();
    VAR
      PayrollDocLineCalc@1210000 : Record 17459;
      PayrollDocCalcLines@1210001 : Page 17410;
    BEGIN
      TESTFIELD("Document No.");
      TESTFIELD("Line No.");
      PayrollDocLineCalc.SETRANGE("Document No.","Document No.");
      PayrollDocLineCalc.SETRANGE("Document Line No.","Line No.");
      PayrollDocCalcLines.SETTABLEVIEW(PayrollDocLineCalc);
      PayrollDocCalcLines.RUNMODAL;
    END;

    PROCEDURE ShowAEEntries@1210000();
    VAR
      PayrollDocLine@1000 : Record 17415;
      PayrollDocLineAEForm@1001 : Page 17480;
    BEGIN
      TESTFIELD("Document No.");
      TESTFIELD("Line No.");
      PayrollDocLine.SETRANGE("Document No.","Document No.");
      PayrollDocLine.SETRANGE("Line No.","Line No.");
      PayrollDocLineAEForm.SETTABLEVIEW(PayrollDocLine);
      PayrollDocLineAEForm.RUNMODAL;
    END;

    PROCEDURE ShowAEPeriods@1210003();
    VAR
      PayrollPeriodAE@1210000 : Record 17433;
      PayrollPeriodAEForm@1210001 : Page 17484;
    BEGIN
      TESTFIELD("Document No.");
      TESTFIELD("Line No.");
      PayrollPeriodAE.SETRANGE("Document No.","Document No.");
      PayrollPeriodAE.SETRANGE("Line No.","Line No.");
      PayrollPeriodAEForm.SetDocLine(Rec);
      PayrollPeriodAEForm.SETTABLEVIEW(PayrollPeriodAE);
      PayrollPeriodAEForm.RUNMODAL;
    END;

    PROCEDURE CheckDocStatus@1210005();
    BEGIN
      GetDocumentHeader;
      PayrollDoc.TESTFIELD(Status,PayrollDoc.Status::Open);
    END;

    BEGIN
    {
      NC NOS-26 SPA
    }
    END.
  }
}

