OBJECT Codeunit 42 CaptionManagement
{
  OBJECT-PROPERTIES
  {
    Date=28.06.17;
    Time=12:27:32;
    Modified=Yes;
    Version List=NAVW110.00,NOS-26;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      GLSetup@1000 : Record 98;
      GLSetupRead@1001 : Boolean;
      Text016@1003 : TextConst 'ENU=Excl. VAT;RUS=без НДС';
      Text017@1002 : TextConst 'ENU=Incl. VAT;RUS=с учетом НДС';
      DefaultTxt@1005 : TextConst 'ENU=LCY;RUS=РУБ';
      DefaultLongTxt@1004 : TextConst 'ENU=Local Currency;RUS=Локальная валюта';
      Fields@1101495000 : Record 2000000041;

    PROCEDURE CaptionClassTranslate@1(Language@1000 : Integer;CaptionExpr@1001 : Text[1024]) : Text[1024];
    VAR
      CaptionArea@1002 : Text[80];
      CaptionRef@1003 : Text[1024];
      CommaPosition@1004 : Integer;
    BEGIN
      // LANGUAGE
      // <DataType>   := [Integer]
      // <DataValue>  := Automatically mentioned by the system

      // CAPTIONEXPR
      // <DataType>   := [String]
      // <Length>     <= 80
      // <DataValue>  := <CAPTIONAREA>,<CAPTIONREF>

      // CAPTIONAREA
      // <DataType>   := [SubString]
      // <Length>     <= 10
      // <DataValue>  := 1..9999999999
      // 1 for Dimension Area
      // 2 for VAT

      // CAPTIONREF
      // <DataType>   := [SubString]
      // <Length>     <= 10
      // <DataValue>  :=
      // IF (<CAPTIONAREA> = 1) <DIMCAPTIONTYPE>,<DIMCAPTIONREF>
      // IF (<CAPTIONAREA> = 2) <VATCAPTIONTYPE>

      CommaPosition := STRPOS(CaptionExpr,',');
      IF (CommaPosition > 0) AND (CommaPosition < 80) THEN BEGIN
        CaptionArea := COPYSTR(CaptionExpr,1,CommaPosition - 1);
        CaptionRef := COPYSTR(CaptionExpr,CommaPosition + 1);
        CASE CaptionArea OF
          '1':
            EXIT(DimCaptionClassTranslate(Language,COPYSTR(CaptionRef,1,80)));
          '2':
            EXIT(VATCaptionClassTranslate(COPYSTR(CaptionRef,1,80)));
          '3':
            EXIT(CaptionRef);
          '101':
            EXIT(CurCaptionClassTranslate(CaptionRef));
        END;
      END;
      EXIT(CaptionExpr);
    END;

    LOCAL PROCEDURE DimCaptionClassTranslate@2(Language@1000 : Integer;CaptionExpr@1001 : Text[80]) : Text[80];
    VAR
      Dim@1002 : Record 348;
      DimCaptionType@1003 : Text[80];
      DimCaptionRef@1004 : Text[80];
      DimOptionalParam1@1005 : Text[80];
      DimOptionalParam2@1006 : Text[80];
      CommaPosition@1007 : Integer;
      ConsSetup@1101495000 : Record 50000;
      ConsSource@1101495001 : Record 50001;
      "NCC>"@1101495021 : TextConst 'ENU=""';
      Text50001@1101495020 : TextConst 'ENU=Dimension 1;RUS=Измерение 1';
      Text50002@1101495019 : TextConst 'ENU=Dimension 2;RUS=Измерение 2';
      Text50003@1101495018 : TextConst 'ENU=Dimension 3;RUS=Измерение 3';
      Text50004@1101495017 : TextConst 'ENU=Dimension 4;RUS=Измерение 4';
      Text50005@1101495016 : TextConst 'ENU=Dimension 5;RUS=Измерение 5';
      Text50006@1101495015 : TextConst 'ENU=Dimension 6;RUS=Измерение 6';
      Text50007@1101495014 : TextConst 'ENU=Dimension 7;RUS=Измерение 7';
      Text50008@1101495013 : TextConst 'ENU=Dimension 8;RUS=Измерение 8';
      Text50009@1101495012 : TextConst 'ENU=Dimension 9;RUS=Измерение 9';
      Text50010@1101495011 : TextConst 'ENU=Dimension 10;RUS=Измерение 10';
      Text50011@1101495010 : TextConst 'ENU=Dimension 11;RUS=Измерение 11';
      Text50012@1101495009 : TextConst 'ENU=Dimension 12;RUS=Измерение 12';
      Text50013@1101495008 : TextConst 'ENU=Dimension 13;RUS=Измерение 13';
      Text50014@1101495007 : TextConst 'ENU=Dimension 14;RUS=Измерение 14';
      Text50015@1101495006 : TextConst 'ENU=Dimension 15;RUS=Измерение 15';
      Text50016@1101495005 : TextConst 'ENU=Dimension 16;RUS=Измерение 16';
      Text50017@1101495004 : TextConst 'ENU=LCY;RUS=РУБ';
      Text50018@1101495003 : TextConst 'ENU=Dimension 17;RUS=Измерение 17';
      "NCC<"@1101495002 : TextConst;
      CompanyRec@1101495022 : Record 2000000006;
      TableID@1101495024 : Integer;
      FieldID@1101495023 : Integer;
    BEGIN
      // DIMCAPTIONTYPE
      // <DataType>   := [SubString]
      // <Length>     <= 10
      // <DataValue>  := 1..6
      // 1 to retrieve Code Caption of Global Dimension
      // 2 to retrieve Code Caption of Shortcut Dimension
      // 3 to retrieve Filter Caption of Global Dimension
      // 4 to retrieve Filter Caption of Shortcut Dimension
      // 5 to retrieve Code Caption of any kind of Dimensions
      // 6 to retrieve Filter Caption of any kind of Dimensions

      // DIMCAPTIONREF
      // <DataType>   := [SubString]
      // <Length>     <= 10
      // <DataValue>  :=
      // IF (<DIMCAPTIONTYPE> = 1) 1..2,<DIMOPTIONALPARAM1>,<DIMOPTIONALPARAM2>
      // IF (<DIMCAPTIONTYPE> = 2) 1..8,<DIMOPTIONALPARAM1>,<DIMOPTIONALPARAM2>
      // IF (<DIMCAPTIONTYPE> = 3) 1..2,<DIMOPTIONALPARAM1>,<DIMOPTIONALPARAM2>
      // IF (<DIMCAPTIONTYPE> = 4) 1..8,<DIMOPTIONALPARAM1>,<DIMOPTIONALPARAM2>
      // IF (<DIMCAPTIONTYPE> = 5) [Table]Dimension.[Field]Code,<DIMOPTIONALPARAM1>,<DIMOPTIONALPARAM2>
      // IF (<DIMCAPTIONTYPE> = 6) [Table]Dimension.[Field]Code,<DIMOPTIONALPARAM1>,<DIMOPTIONALPARAM2>

      // DIMOPTIONALPARAM1
      // <DataType>   := [SubString]
      // <Length>     <= 30
      // <DataValue>  := [String]
      // a string added before the dimension name

      // DIMOPTIONALPARAM2
      // <DataType>   := [SubString]
      // <Length>     <= 30
      // <DataValue>  := [String]
      // a string added after the dimension name

      IF NOT GetGLSetup THEN
        EXIT('');

      CommaPosition := STRPOS(CaptionExpr,',');
      IF CommaPosition > 0 THEN BEGIN
        DimCaptionType := COPYSTR(CaptionExpr,1,CommaPosition - 1);
        DimCaptionRef := COPYSTR(CaptionExpr,CommaPosition + 1);
        CommaPosition := STRPOS(DimCaptionRef,',');
        IF CommaPosition > 0 THEN BEGIN
          DimOptionalParam1 := COPYSTR(DimCaptionRef,CommaPosition + 1);
          DimCaptionRef := COPYSTR(DimCaptionRef,1,CommaPosition - 1);
          CommaPosition := STRPOS(DimOptionalParam1,',');
          IF CommaPosition > 0 THEN BEGIN
            DimOptionalParam2 := COPYSTR(DimOptionalParam1,CommaPosition + 1);
            DimOptionalParam1 := COPYSTR(DimOptionalParam1,1,CommaPosition - 1);
          END ELSE
            DimOptionalParam2 := '';
        END ELSE BEGIN
          DimOptionalParam1 := '';
          DimOptionalParam2 := '';
        END;
        CASE DimCaptionType OF
          '1':  // Code Caption - Global Dimension using No. as Reference
            CASE DimCaptionRef OF
              '1':
                EXIT(
                  DimCodeCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Global Dimension 1 Code",
                    GLSetup.FIELDCAPTION("Global Dimension 1 Code")));
              '2':
                EXIT(
                  DimCodeCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Global Dimension 2 Code",
                    GLSetup.FIELDCAPTION("Global Dimension 2 Code")));
            END;
          '2':  // Code Caption - Shortcut Dimension using No. as Reference
            CASE DimCaptionRef OF
              '1':
                EXIT(
                  DimCodeCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 1 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 1 Code")));
              '2':
                EXIT(
                  DimCodeCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 2 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 2 Code")));
              '3':
                EXIT(
                  DimCodeCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 3 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 3 Code")));
              '4':
                EXIT(
                  DimCodeCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 4 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 4 Code")));
              '5':
                EXIT(
                  DimCodeCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 5 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 5 Code")));
              '6':
                EXIT(
                  DimCodeCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 6 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 6 Code")));
              '7':
                EXIT(
                  DimCodeCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 7 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 7 Code")));
              '8':
                EXIT(
                  DimCodeCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 8 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 8 Code")));
              //NC NCS-2356 > DP ()
              '9':
                EXIT(
                  DimCodeCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 9 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 9 Code")));
              '10':
                EXIT(
                  DimCodeCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 10 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 10 Code")));
              //NC NCS-2356 < DP
            END;
          '3':  // Filter Caption - Global Dimension using No. as Reference
            CASE DimCaptionRef OF
              '1':
                EXIT(
                  DimFilterCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Global Dimension 1 Code",
                    GLSetup.FIELDCAPTION("Global Dimension 1 Code")));
              '2':
                EXIT(
                  DimFilterCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Global Dimension 2 Code",
                    GLSetup.FIELDCAPTION("Global Dimension 2 Code")));
            END;
          '4':  // Filter Caption - Shortcut Dimension using No. as Reference
            CASE DimCaptionRef OF
              '1':
                EXIT(
                  DimFilterCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 1 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 1 Code")));
              '2':
                EXIT(
                  DimFilterCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 2 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 2 Code")));
              '3':
                EXIT(
                  DimFilterCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 3 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 3 Code")));
              '4':
                EXIT(
                  DimFilterCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 4 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 4 Code")));
              '5':
                EXIT(
                  DimFilterCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 5 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 5 Code")));
              '6':
                EXIT(
                  DimFilterCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 6 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 6 Code")));
              '7':
                EXIT(
                  DimFilterCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 7 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 7 Code")));
              '8':
                EXIT(
                  DimFilterCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 8 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 8 Code")));
              //NC NCS-2356 > DP
              '9':
                EXIT(
                  DimFilterCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 9 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 9 Code")));
              '10':
                EXIT(
                  DimFilterCaption(
                    Language,DimOptionalParam1,DimOptionalParam2,
                    GLSetup."Shortcut Dimension 10 Code",
                    GLSetup.FIELDCAPTION("Shortcut Dimension 10 Code")));
              //NC NCS-2356 < DP
            END;
          '5':  // Code Caption - using Dimension Code as Reference
            BEGIN
              IF Dim.GET(DimCaptionRef) THEN
                EXIT(DimOptionalParam1 + Dim.GetMLCodeCaption(Language) + DimOptionalParam2);
              EXIT(DimOptionalParam1);
            END;
          '6':  // Filter Caption - using Dimension Code as Reference
            BEGIN
              IF Dim.GET(DimCaptionRef) THEN
                EXIT(DimOptionalParam1 + Dim.GetMLFilterCaption(Language) + DimOptionalParam2);
              EXIT(DimOptionalParam1);
            END;


          //NC PIF001 > DP 07.05.07
          '7':
            BEGIN
              //NC PIF001 > DP 03.10.07
              ConsSetup.GET;
              ConsSetup.TESTFIELD("Main Consolidation Source");
              ConsSource.GET(ConsSetup."Main Consolidation Source");
              //NC PIF001 < DP 03.10.07
              CASE DimCaptionRef OF
                '1':
                  BEGIN
                    IF Dim.GET(ConsSource."Shortcut Dimension 1 Code") THEN
                      EXIT(DimOptionalParam1 + Dim.GetMLCodeCaption(Language) + DimOptionalParam2)
                    ELSE
                      EXIT(DimOptionalParam1 + Text50001 + DimOptionalParam2);
                  END;
                '2':
                  BEGIN
                    IF Dim.GET(ConsSource."Shortcut Dimension 2 Code") THEN
                      EXIT(DimOptionalParam1 + Dim.GetMLCodeCaption(Language) + DimOptionalParam2)
                    ELSE
                      EXIT(DimOptionalParam1 + Text50002 + DimOptionalParam2);
                  END;
                '3':
                  BEGIN
                    IF Dim.GET(ConsSource."Shortcut Dimension 3 Code") THEN
                      EXIT(DimOptionalParam1 + Dim.GetMLCodeCaption(Language) + DimOptionalParam2)
                    ELSE
                      EXIT(DimOptionalParam1 + Text50003 + DimOptionalParam2);
                  END;
                '4':
                  BEGIN
                    IF Dim.GET(ConsSource."Shortcut Dimension 4 Code") THEN
                      EXIT(DimOptionalParam1 + Dim.GetMLCodeCaption(Language) + DimOptionalParam2)
                    ELSE
                      EXIT(DimOptionalParam1 + Text50004 + DimOptionalParam2);
                  END;
                '5':
                  BEGIN
                    IF Dim.GET(ConsSource."Shortcut Dimension 5 Code") THEN
                      EXIT(DimOptionalParam1 + Dim.GetMLCodeCaption(Language) + DimOptionalParam2)
                    ELSE
                      EXIT(DimOptionalParam1 + Text50005 + DimOptionalParam2);
                  END;
                '6':
                  BEGIN
                    IF Dim.GET(ConsSource."Shortcut Dimension 6 Code") THEN
                      EXIT(DimOptionalParam1 + Dim.GetMLCodeCaption(Language) + DimOptionalParam2)
                    ELSE
                      EXIT(DimOptionalParam1 + Text50006 + DimOptionalParam2);
                  END;
                '7':
                  BEGIN
                    IF Dim.GET(ConsSource."Shortcut Dimension 7 Code") THEN
                      EXIT(DimOptionalParam1 + Dim.GetMLCodeCaption(Language) + DimOptionalParam2)
                    ELSE
                      EXIT(DimOptionalParam1 + Text50007 + DimOptionalParam2);
                  END;
                '8':
                  BEGIN
                    IF Dim.GET(ConsSource."Shortcut Dimension 8 Code") THEN
                      EXIT(DimOptionalParam1 + Dim.GetMLCodeCaption(Language) + DimOptionalParam2)
                    ELSE
                      EXIT(DimOptionalParam1 + Text50008 + DimOptionalParam2);
                  END;
                '9':
                  BEGIN
                    IF Dim.GET(ConsSource."Shortcut Dimension 9 Code") THEN
                      EXIT(DimOptionalParam1 + Dim.GetMLCodeCaption(Language) + DimOptionalParam2)
                    ELSE
                      EXIT(DimOptionalParam1 + Text50009 + DimOptionalParam2);
                  END;
                '10':
                  BEGIN
                    IF Dim.GET(ConsSource."Shortcut Dimension 10 Code") THEN
                      EXIT(DimOptionalParam1 + Dim.GetMLCodeCaption(Language) + DimOptionalParam2)
                    ELSE
                      EXIT(DimOptionalParam1 + Text50010 + DimOptionalParam2);
                  END;
                '11':
                  BEGIN
                    IF Dim.GET(ConsSource."Shortcut Dimension 11 Code") THEN
                      EXIT(DimOptionalParam1 + Dim.GetMLCodeCaption(Language) + DimOptionalParam2)
                    ELSE
                      EXIT(DimOptionalParam1 + Text50011 + DimOptionalParam2);
                  END;
                '12':
                  BEGIN
                    IF Dim.GET(ConsSource."Shortcut Dimension 12 Code") THEN
                      EXIT(DimOptionalParam1 + Dim.GetMLCodeCaption(Language) + DimOptionalParam2)
                    ELSE
                      EXIT(DimOptionalParam1 + Text50012 + DimOptionalParam2);
                  END;
                '13':
                  BEGIN
                    IF Dim.GET(ConsSource."Shortcut Dimension 13 Code") THEN
                      EXIT(DimOptionalParam1 + Dim.GetMLCodeCaption(Language) + DimOptionalParam2)
                    ELSE
                      EXIT(DimOptionalParam1 + Text50013 + DimOptionalParam2);
                  END;

                '14':
                  BEGIN
                    IF Dim.GET(ConsSource."Shortcut Dimension 14 Code") THEN
                      EXIT(DimOptionalParam1 + Dim.GetMLCodeCaption(Language) + DimOptionalParam2)
                    ELSE
                      EXIT(DimOptionalParam1 + Text50014 + DimOptionalParam2);
                  END;

                '15':
                  BEGIN
                    IF Dim.GET(ConsSource."Shortcut Dimension 15 Code") THEN
                      EXIT(DimOptionalParam1 + Dim.GetMLCodeCaption(Language) + DimOptionalParam2)
                    ELSE
                      EXIT(DimOptionalParam1 + Text50015 + DimOptionalParam2);
                  END;
                '16':
                  BEGIN
                    IF Dim.GET(ConsSource."Shortcut Dimension 16 Code") THEN
                      EXIT(DimOptionalParam1 + Dim.GetMLCodeCaption(Language) + DimOptionalParam2)
                    ELSE
                      EXIT(DimOptionalParam1 + Text50016 + DimOptionalParam2);
                  END;
                '17':
                  BEGIN
                    IF Dim.GET(ConsSource."Shortcut Dimension 17 Code") THEN
                      EXIT(DimOptionalParam1 + Dim.GetMLCodeCaption(Language) + DimOptionalParam2)
                    ELSE
                      EXIT(DimOptionalParam1 + Text50018 + DimOptionalParam2);
                  END;
                //NC MDB01 > MP
                '18':
                  BEGIN
                    IF Dim.GET(ConsSource."Shortcut Dimension 18 Code") THEN
                      EXIT(DimOptionalParam1 + Dim.GetMLCodeCaption(Language) + DimOptionalParam2)
                    ELSE
                      EXIT(DimOptionalParam1 + Text50018 + DimOptionalParam2);
                  END;
                '19':
                  BEGIN
                    IF Dim.GET(ConsSource."Shortcut Dimension 19 Code") THEN
                      EXIT(DimOptionalParam1 + Dim.GetMLCodeCaption(Language) + DimOptionalParam2)
                    ELSE
                      EXIT(DimOptionalParam1 + Text50018 + DimOptionalParam2);
                  END;
                '20':
                  BEGIN
                    IF Dim.GET(ConsSource."Shortcut Dimension 20 Code") THEN
                      EXIT(DimOptionalParam1 + Dim.GetMLCodeCaption(Language) + DimOptionalParam2)
                    ELSE
                      EXIT(DimOptionalParam1 + Text50018 + DimOptionalParam2);
                  END;
                //NC MDB01 < MP
              END;
            END;
          //NC PIF001 < DP
          //NC PIF001 > DP
          '8':
            BEGIN
              CompanyRec.GET(COMPANYNAME);
              IF CompanyRec."Balance Currency Code" <> '' THEN
                EXIT(DimOptionalParam1 + CompanyRec."Balance Currency Code" + DimOptionalParam2)
              ELSE
                EXIT(DimOptionalParam1 + Text50017 + DimOptionalParam2);

            END;

          //NC PIF001 < DP
          //NC PIF001 > DP
          '9':  // Filter Caption - using Dimension Code as Reference 1
            BEGIN
              IF Dim.GET(DimCaptionRef) THEN
                EXIT(DimOptionalParam1 + Dim.GetMLFilterCaption(Language) + ' 1' + DimOptionalParam2)
              ELSE
                EXIT(DimOptionalParam1);
            END;
          '10':  // Filter Caption - using Dimension Code as Reference 2
            BEGIN
              IF Dim.GET(DimCaptionRef) THEN
                EXIT(DimOptionalParam1 + Dim.GetMLFilterCaption(Language) + ' 2' + DimOptionalParam2)
              ELSE
                EXIT(DimOptionalParam1);
            END;
          //NC PIF001 < DP
          //NC PIF001 > DP
          '11':
            BEGIN
              EVALUATE(TableID,DimOptionalParam1);
              EVALUATE(FieldID,DimOptionalParam2);

              EXIT(SetAmountLCYCaption(TableID,FieldID));
            END;

          //NC PIF001 < DP

        END;
      END;
      EXIT('');
    END;

    LOCAL PROCEDURE DimCodeCaption@5(Language@1002 : Integer;DimOptionalParam1@1003 : Text[80];DimOptionalParam2@1004 : Text[80];DimCode@1005 : Code[20];DimFieldCaption@1006 : Text[1024]) : Text[80];
    VAR
      Dim@1001 : Record 348;
    BEGIN
      IF Dim.GET(DimCode) THEN
        EXIT(DimOptionalParam1 + Dim.GetMLCodeCaption(Language) + DimOptionalParam2);
      EXIT(
        DimOptionalParam1 +
        DimFieldCaption +
        DimOptionalParam2);
    END;

    LOCAL PROCEDURE DimFilterCaption@6(Language@1002 : Integer;DimOptionalParam1@1003 : Text[80];DimOptionalParam2@1004 : Text[80];DimCode@1005 : Code[20];DimFieldCaption@1006 : Text[1024]) : Text[80];
    VAR
      Dim@1001 : Record 348;
    BEGIN
      IF Dim.GET(DimCode) THEN
        EXIT(DimOptionalParam1 + Dim.GetMLFilterCaption(Language) + DimOptionalParam2);
      EXIT(
        DimOptionalParam1 +
        DimFieldCaption +
        DimOptionalParam2);
    END;

    LOCAL PROCEDURE VATCaptionClassTranslate@3(CaptionExpr@1001 : Text[80]) : Text[80];
    VAR
      VATCaptionType@1002 : Text[80];
      VATCaptionRef@1003 : Text[80];
      CommaPosition@1004 : Integer;
    BEGIN
      // VATCAPTIONTYPE
      // <DataType>   := [SubString]
      // <Length>     =  1
      // <DataValue>  :=
      // '0' -> <field caption + 'Excl. VAT'>
      // '1' -> <field caption + 'Incl. VAT'>

      CommaPosition := STRPOS(CaptionExpr,',');
      IF CommaPosition > 0 THEN BEGIN
        VATCaptionType := COPYSTR(CaptionExpr,1,CommaPosition - 1);
        VATCaptionRef := COPYSTR(CaptionExpr,CommaPosition + 1);
        CASE VATCaptionType OF
          '0':
            EXIT(COPYSTR(STRSUBSTNO('%1 %2',VATCaptionRef,Text016),1,80));
          '1':
            EXIT(COPYSTR(STRSUBSTNO('%1 %2',VATCaptionRef,Text017),1,80));
        END;
      END;
      EXIT('');
    END;

    LOCAL PROCEDURE CurCaptionClassTranslate@7(CaptionExpr@1001 : Text) : Text;
    VAR
      Currency@1002 : Record 4;
      GLSetupRead@1003 : Boolean;
      CurrencyResult@1004 : Text[30];
      CommaPosition@1005 : Integer;
      CurCaptionType@1006 : Text[30];
      CurCaptionRef@1007 : Text;
    BEGIN
      // CURCAPTIONTYPE
      // <DataType>   := [SubString]
      // <Length>     =  1
      // <DataValue>  :=
      // '0' -> Currency Result := Local Currency Code
      // '1' -> Currency Result := Local Currency Description
      // '2' -> Currency Result := Additional Reporting Currency Code
      // '3' -> Currency Result := Additional Reporting Currency Description

      // CURCAPTIONREF
      // <DataType>   := [SubString]
      // <Length>     <= 70
      // <DataValue>  := [String]
      // This string is the actual string making up the Caption.
      // It will contain a '%1', and the Currency Result will substitute for it.

      CommaPosition := STRPOS(CaptionExpr,',');
      IF CommaPosition > 0 THEN BEGIN
        CurCaptionType := COPYSTR(CaptionExpr,1,CommaPosition - 1);
        CurCaptionRef := COPYSTR(CaptionExpr,CommaPosition + 1);
        IF NOT GLSetupRead THEN BEGIN
          IF NOT GLSetup.GET THEN
            EXIT(CurCaptionRef);
          GLSetupRead := TRUE;
        END;
        CASE CurCaptionType OF
          '0','1':
            BEGIN
              IF GLSetup."LCY Code" = '' THEN
                IF CurCaptionType = '0' THEN
                  CurrencyResult := DefaultTxt
                ELSE
                  CurrencyResult := DefaultLongTxt
              ELSE
                IF NOT Currency.GET(GLSetup."LCY Code") THEN
                  CurrencyResult := GLSetup."LCY Code"
                ELSE
                  IF CurCaptionType = '0' THEN
                    CurrencyResult := Currency.Code
                  ELSE
                    CurrencyResult := Currency.Description;
              EXIT(COPYSTR(STRSUBSTNO(CurCaptionRef,CurrencyResult),1,MAXSTRLEN(CurCaptionRef)));
            END;
          '2','3':
            BEGIN
              IF GLSetup."Additional Reporting Currency" = '' THEN
                EXIT(CurCaptionRef);
              IF NOT Currency.GET(GLSetup."Additional Reporting Currency") THEN
                CurrencyResult := GLSetup."Additional Reporting Currency"
              ELSE
                IF CurCaptionType = '2' THEN
                  CurrencyResult := Currency.Code
                ELSE
                  CurrencyResult := Currency.Description;
              EXIT(COPYSTR(STRSUBSTNO(CurCaptionRef,CurrencyResult),1,MAXSTRLEN(CurCaptionRef)));
            END;
          ELSE
            EXIT(CurCaptionRef);
        END;
      END;
      EXIT(CaptionExpr);
    END;

    LOCAL PROCEDURE GetGLSetup@4() : Boolean;
    BEGIN
      IF NOT GLSetupRead THEN
        GLSetupRead := GLSetup.GET;
      EXIT(GLSetupRead);
    END;

    PROCEDURE GetRecordFiltersWithCaptions@25(RecVariant@1001 : Variant) Filters : Text;
    VAR
      RecRef@1002 : RecordRef;
      FieldRef@1003 : FieldRef;
      FieldFilter@1005 : Text;
      Name@1006 : Text;
      Cap@1000 : Text;
      Pos@1007 : Integer;
      i@1004 : Integer;
    BEGIN
      RecRef.GETTABLE(RecVariant);
      Filters := RecRef.GETFILTERS;
      IF Filters = '' THEN
        EXIT;

      FOR i := 1 TO RecRef.FIELDCOUNT DO BEGIN
        FieldRef := RecRef.FIELDINDEX(i);
        FieldFilter := FieldRef.GETFILTER;
        IF FieldFilter <> '' THEN BEGIN
          Name := STRSUBSTNO('%1: ',FieldRef.NAME);
          Cap := STRSUBSTNO('%1: ',FieldRef.CAPTION);
          Pos := STRPOS(Filters,Name);
          IF Pos <> 0 THEN
            Filters := INSSTR(DELSTR(Filters,Pos,STRLEN(Name)),Cap,Pos);
        END;
      END;
    END;

    PROCEDURE GetTranslatedFieldCaption@14(LanguageCode@1000 : Code[10];TableID@1001 : Integer;FieldId@1004 : Integer) TranslatedText : Text;
    VAR
      Language@1002 : Record 8;
      Field@1005 : Record 2000000041;
      CurrentLanguageCode@1003 : Integer;
    BEGIN
      CurrentLanguageCode := GLOBALLANGUAGE;
      IF (LanguageCode <> '') AND (Language.GetLanguageID(LanguageCode) <> CurrentLanguageCode) THEN BEGIN
        GLOBALLANGUAGE(Language.GetLanguageID(LanguageCode));
        Field.GET(TableID,FieldId);
        TranslatedText := Field."Field Caption";
        GLOBALLANGUAGE(CurrentLanguageCode);
      END ELSE BEGIN
        Field.GET(TableID,FieldId);
        TranslatedText := Field."Field Caption";
      END;
    END;

    PROCEDURE "NCF>"@1210000();
    BEGIN
    END;

    PROCEDURE SetAmountLCYCaption@1210002(TableNo@1210000 : Integer;FieldNo@1210001 : Integer) : Text[80];
    VAR
      AmtLCYCaption@1210002 : Text[80];
      LCYCaption@1210006 : Text[80];
      i@1210003 : Integer;
      k@1210005 : Integer;
      CompanyLoc@1210004 : Record 2000000006;
      Text50001@1210007 : TextConst 'ENU=LCY;RUS=ВУЧ';
    BEGIN
      //NC PIF001 > DP
      LCYCaption :='';
      AmtLCYCaption :='';
      IF Fields.GET(TableNo,FieldNo) THEN BEGIN
        IF Fields."Field Caption"<>'' THEN BEGIN
           AmtLCYCaption :=Fields."Field Caption";
          i:= STRPOS(Fields."Field Caption",'(');
          IF i>0 THEN BEGIN
            k := STRPOS(AmtLCYCaption,')');
            CompanyLoc.GET(COMPANYNAME);
            IF CompanyLoc."Balance Currency Code" <> '' THEN
              EXIT(COPYSTR(AmtLCYCaption,1,i) + CompanyLoc."Balance Currency Code" + COPYSTR(AmtLCYCaption,k,STRLEN(AmtLCYCaption)-k+1))
            ELSE
              EXIT(COPYSTR(AmtLCYCaption,1,i) + Text50001 + COPYSTR(AmtLCYCaption,k,STRLEN(AmtLCYCaption)-k+1));
          END ELSE EXIT(AmtLCYCaption);
        END ELSE EXIT(AmtLCYCaption);
      END;

      //NC PIF001 < DP
    END;

    BEGIN
    {
      NC MIRG2017 AAP: transfer modification function DimCaptionClassTranslate, SetAmountLCYCaption
    }
    END.
  }
}

