OBJECT Page 466 Tax Jurisdictions
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Tax Jurisdictions;
               RUS=Налоговые юрисдикции];
    SourceTable=Table320;
    PageType=List;
    OnAfterGetRecord=BEGIN
                       DefaultTax := GetDefaultTax;
                     END;

    OnInsertRecord=VAR
                     TaxSetup@1000 : Record 326;
                   BEGIN
                     TaxSetup.GET;
                     DefaultTax := 0;
                     DefaultTaxIsEnabled := TaxSetup."Auto. Create Tax Details";
                   END;

    OnAfterGetCurrRecord=BEGIN
                           DefaultTax := GetDefaultTax;
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 16      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Jurisdiction;
                                 RUS=&Юрисдикция];
                      Image=ViewDetails }
      { 15      ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Ledger &Entries;
                                 RUS=&Книга операций];
                      ToolTipML=[ENU=View Tax entries, which result from posting transactions in journals and sales and purchase documents, and from the Calc. and Post Tax Settlement batch job.;
                                 RUS=Просмотр налоговых операций, являющихся результатом учета транзакций в журналах и документах продажи и покупки, а также результатом выполнения пакетного задания "Вычисление и учет зачета НДС".];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 315;
                      RunPageView=SORTING(Tax Jurisdiction Code);
                      RunPageLink=Tax Jurisdiction Code=FIELD(Code);
                      Image=CustomerLedger;
                      PromotedCategory=Process }
      { 17      ;2   ;Action    ;
                      CaptionML=[ENU=Details;
                                 RUS=Подробности];
                      ToolTipML=[ENU=View tax-detail entries. A tax-detail entry includes all of the information that is used to calculate the amount of tax to be charged.;
                                 RUS=Просмотр записей с данными о налоге. Запись с данными о налоге включает информацию, которая используется для расчета уплачиваемого налога.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 468;
                      RunPageLink=Tax Jurisdiction Code=FIELD(Code);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=View;
                      PromotedCategory=Process }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code you want to assign to this tax jurisdiction. You can enter up to 10 characters, both numbers and letters. It is a good idea to enter a code that is easy to remember.;
                           RUS=Определяет код, который должен быть присвоен этой налоговой юрисдикции. Длина кода не должна превышать 10 знаков (букв или цифр). Рекомендуется выбирать код, который легко запомнить.];
                ApplicationArea=#All;
                SourceExpr=Code }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a description of the tax jurisdiction. For example, if the tax jurisdiction code is ATLANTA GA, enter the description as Atlanta, Georgia.;
                           RUS=Определяет описание налоговой юрисдикции. Например, если код налоговой юрисдикции - "ATLANTA GA", введите описание "Атланта, Джорджия".];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description }

    { 5   ;2   ;Field     ;
                Name=Default Sales and Use Tax;
                CaptionML=[ENU=Default Sales and Use Tax;
                           RUS=Налог с продаж и с использования по умолчанию];
                ToolTipML=[ENU=Specifies the default tax in locations where the sales tax and use tax are identical.;
                           RUS=Определяет значение налога по умолчанию для расположений, где налог с продаж и налог на использование одинаковы.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DefaultTax;
                Enabled=DefaultTaxIsEnabled;
                Style=Subordinate;
                StyleExpr=NOT DefaultTaxIsEnabled;
                OnValidate=BEGIN
                             SetDefaultTax(DefaultTax);
                           END;

                OnLookup=VAR
                           TaxDetail@1000 : Record 322;
                         BEGIN
                           GetDefaultTaxDetail(TaxDetail);
                           PAGE.RUNMODAL(PAGE::"Tax Details",TaxDetail);
                           DefaultTax := GetDefaultTax;
                         END;
                          }

    { 27  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether to calculate the sales tax amount with the tax on tax principle.;
                           RUS=Указывает, нужно ли рассчитывать сумму налога с продаж по принципу "налог на налог".];
                SourceExpr="Calculate Tax on Tax";
                Visible=FALSE }

    { 29  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how to handle unrealized tax, which is tax that is calculated but not due until the invoice is paid.;
                           RUS=Указывает, как должен обрабатываться нереализованный налог, представляющий собой налог рассчитанный, но не уплачиваемый до момента оплаты счета.];
                SourceExpr="Unrealized VAT Type";
                Visible=FALSE }

    { 31  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether to recalculate tax amounts when you post payments that trigger payment discounts.;
                           RUS=Определяет, следует ли пересчитывать суммы налога при учете платежей, инициирующих скидки по оплате.];
                SourceExpr="Adjust for Payment Discount";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the general ledger account you want to use for posting calculated tax on sales transactions.;
                           RUS=Определяет счет главной книги, на котором предполагается учитывать рассчитанный налог на транзакции продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Tax Account (Sales)" }

    { 19  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the general ledger account you want to use for posting calculated unrealized tax on sales transactions.;
                           RUS=Определяет счет главной книги, на котором предполагается учитывать рассчитанный нереализованный налог на транзакции продажи.];
                SourceExpr="Unreal. Tax Acc. (Sales)";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the general ledger account you want to use for posting calculated tax on purchase transactions.;
                           RUS=Определяет счет главной книги, на котором предполагается учитывать рассчитанный налог на транзакции покупки.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Tax Account (Purchases)" }

    { 23  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the general ledger account you want to use for posting calculated reverse-charge tax on purchase transactions.;
                           RUS=Определяет счет главной книги, на котором предполагается учитывать рассчитанный обратный налог на транзакции покупки.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Reverse Charge (Purchases)" }

    { 21  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the general ledger account you want to use for posting calculated unrealized tax on purchase transactions.;
                           RUS=Определяет счет главной книги, на котором предполагается учитывать рассчитанный нереализованный налог на транзакции покупки.];
                SourceExpr="Unreal. Tax Acc. (Purchases)";
                Visible=FALSE }

    { 25  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the general ledger account you want to use for posting calculated unrealized reverse-charge tax on purchase transactions.;
                           RUS=Определяет счет главной книги, на котором предполагается учитывать рассчитанный нереализованный обратный налог на транзакции покупки.];
                SourceExpr="Unreal. Rev. Charge (Purch.)";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the tax jurisdiction you want to associate with the jurisdiction you are setting up. For example, if you are setting up a jurisdiction for Atlanta, Georgia, the report-to jurisdiction is Georgia because Georgia is the tax authority to which you report Atlanta sales tax.;
                           RUS=Определяет налоговую юрисдикцию, которую нужно связать с налоговой юрисдикцией, настраиваемой в текущий момент. Например, если настраивается юрисдикция для Атланты, Джорджия, отчетной юрисдикцией является юрисдикция Джорджии, поскольку в налоговый орган Джорджии подаются из Атланты отчеты о налогах с продаж.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Report-to Jurisdiction" }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      DefaultTax@1000 : Decimal;
      DefaultTaxIsEnabled@1001 : Boolean;

    LOCAL PROCEDURE GetDefaultTax@1() : Decimal;
    VAR
      TaxDetail@1000 : Record 322;
    BEGIN
      GetDefaultTaxDetail(TaxDetail);
      EXIT(TaxDetail."Tax Below Maximum");
    END;

    LOCAL PROCEDURE SetDefaultTax@2(NewTaxBelowMaximum@1000 : Decimal);
    VAR
      TaxDetail@1001 : Record 322;
    BEGIN
      GetDefaultTaxDetail(TaxDetail);
      TaxDetail."Tax Below Maximum" := NewTaxBelowMaximum;
      TaxDetail.MODIFY;
    END;

    LOCAL PROCEDURE GetDefaultTaxDetail@3(VAR TaxDetail@1000 : Record 322);
    BEGIN
      TaxDetail.SETRANGE("Tax Jurisdiction Code",Code);
      TaxDetail.SETRANGE("Tax Group Code",'');
      TaxDetail.SETRANGE("Tax Type",TaxDetail."Tax Type"::"Sales Tax");
      IF TaxDetail.FINDLAST THEN BEGIN
        DefaultTaxIsEnabled := TRUE;
        TaxDetail.SETRANGE("Effective Date",TaxDetail."Effective Date");
        TaxDetail.FINDLAST;
      END ELSE BEGIN
        DefaultTaxIsEnabled := FALSE;
        TaxDetail.SETRANGE("Effective Date");
      END;
    END;

    BEGIN
    END.
  }
}

