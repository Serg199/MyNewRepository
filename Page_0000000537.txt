OBJECT Page 537 Dimension Values
{
  OBJECT-PROPERTIES
  {
    Date=04.08.17;
    Time=10:42:49;
    Modified=Yes;
    Version List=NAVW110.00,NOS-26;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Dimension Values;
               RUS=Значения измерения];
    SourceTable=Table349;
    DelayedInsert=Yes;
    DataCaptionFields=Dimension Code;
    PageType=List;
    OnOpenPage=VAR
                 DimensionCode@1000 : Code[20];
               BEGIN
                 IF GETFILTER("Dimension Code") <> '' THEN
                   DimensionCode := GETRANGEMIN("Dimension Code");
                 IF DimensionCode <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Dimension Code",DimensionCode);
                   FILTERGROUP(0);
                 END;

                 //NC OBM001 > EB
                 FILTERGROUP(2);
                 SETFILTER("Company Name", '%1|%2', '', COMPANYNAME);
                 FILTERGROUP(0);
                 //NC OBM001 < EB
                 //NC S1883 > PCH
                 ConsSetup.GET;
                 ConsSetup.TESTFIELD("Segment Code");
                 Segment.GET(ConsSetup."Segment Code");
                 FILTERGROUP(2);
                 IF Segment."Is General" THEN
                   SETFILTER("Segment Code",'')
                 ELSE
                   SETFILTER("Segment Code",'=%1|=%2','',ConsSetup."Segment Code");
                 FILTERGROUP(0);
                 //NC S1883 < PCH
               END;

    OnAfterGetRecord=BEGIN
                       NameIndent := 0;
                       FormatLine;
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 2       ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 RUS=Ф&ункции];
                      Image=Action }
      { 3       ;2   ;Action    ;
                      CaptionML=[ENU=Indent Dimension Values;
                                 RUS=Отступы для значений измерения];
                      ToolTipML=[ENU=Indent dimension values between a Begin-Total and the matching End-Total one level to make the list easier to read.;
                                 RUS=Сдвиг значений измерений между "Сумма (от)" и соответствующим значением "Сумма (до)" на один уровень для более удобного восприятия списка.];
                      ApplicationArea=#Suite;
                      RunObject=Codeunit 409;
                      RunPageOnRec=Yes;
                      Image=Indent }
      { 1101495012;2 ;Separator  }
      { 1101495013;2 ;Action    ;
                      CaptionML=[ENU=Where used;
                                 RUS=Где используется];
                      Image=Find;
                      OnAction=BEGIN
                                 //NOS-26 #TODO# -- перененсти форму
                               END;
                                }
      { 1101495014;1 ;ActionGroup;
                      CaptionML=[ENU=Value;
                                 RUS=Значение] }
      { 1101495015;2 ;Action    ;
                      CaptionML=[ENU=Linked Dimension;
                                 RUS=Связанные измерения];
                      Image=LinkAccount;
                      OnAction=VAR
                                 DimLinkedValue@1101495000 : Record 50016;
                                 frmDimLinkedValue@1101495001 : Page 50072;
                               BEGIN
                                 //NC PIF001.1 > DP
                                 CLEAR(frmDimLinkedValue);
                                 frmDimLinkedValue.SetValueSelection(blnSelect);
                                 DimLinkedValue.RESET;
                                 DimLinkedValue.SETRANGE("Dimension Code","Dimension Code");
                                 DimLinkedValue.SETRANGE("Dimension Value",Code);
                                 DimLinkedValue.SETFILTER("Value Selection",'%1',blnSelect);
                                 IF DimLinkedValue.FIND('-') THEN;
                                 frmDimLinkedValue.SETTABLEVIEW(DimLinkedValue);
                                 frmDimLinkedValue.SETRECORD(DimLinkedValue);
                                 frmDimLinkedValue.RUN;
                                 //NC PIF001.1 < DP
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                IndentationColumnName=NameIndent;
                IndentationControls=Name;
                GroupType=Repeater }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the dimension value.;
                           RUS=Определяет код значения измерения.];
                ApplicationArea=#Suite;
                SourceExpr=Code;
                Style=Strong;
                StyleExpr=Emphasize }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a descriptive name for the dimension value.;
                           RUS=Определяет описательное имя значения измерения.];
                ApplicationArea=#Suite;
                SourceExpr=Name;
                Style=Strong;
                StyleExpr=Emphasize }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the purpose of the dimension value.;
                           RUS=Определяет назначение значения измерения.];
                ApplicationArea=#Suite;
                SourceExpr="Dimension Value Type" }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a dimension value interval or a list of dimension values.;
                           RUS=Определяет интервал значений измерения или список значений измерения.];
                ApplicationArea=#Suite;
                SourceExpr=Totaling;
                OnLookup=VAR
                           DimVal@1002 : Record 349;
                           DimValList@1003 : Page 560;
                         BEGIN
                           DimVal := Rec;
                           DimVal.SETRANGE("Dimension Code","Dimension Code");
                           DimValList.SETTABLEVIEW(DimVal);
                           DimValList.LOOKUPMODE := TRUE;
                           IF DimValList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             DimValList.GETRECORD(DimVal);
                             Text := DimVal.Code;
                             EXIT(TRUE);
                           END;
                           EXIT(FALSE);
                         END;
                          }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that entries with this dimension value cannot be posted.;
                           RUS=Указывает, что операции с этим значением измерения не могут быть учтены.];
                ApplicationArea=#Suite;
                SourceExpr=Blocked }

    { 19  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies which intercompany dimension value corresponds to the dimension value on the line.;
                           RUS=Определяет, какое межфирменное значение измерения соответствует значению измерения в строке.];
                SourceExpr="Map-to IC Dimension Value Code";
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code that is used for consolidation.;
                           RUS=Определяет код, используемый для консолидации.];
                SourceExpr="Consolidation Code";
                Visible=FALSE }

    { 1101495001;2;Field  ;
                SourceExpr="Map-to IC Dimension Code" }

    { 1101495007;2;Field  ;
                SourceExpr="Parent Code" }

    { 1101495008;2;Field  ;
                SourceExpr="Parent Dimension Code" }

    { 1101495006;2;Field  ;
                SourceExpr="Company Name" }

    { 1101495004;2;Field  ;
                SourceExpr="Allow Posting From" }

    { 1101495005;2;Field  ;
                SourceExpr="Allow Posting To" }

    { 1101495000;2;Field  ;
                SourceExpr=Indentation }

    { 1101495009;2;Field  ;
                SourceExpr="Hierarchy Parent Code" }

    { 1101495002;2;Field  ;
                SourceExpr="Name 2" }

    { 1101495003;2;Field  ;
                SourceExpr="Rec ID" }

    { 1101495010;2;Field  ;
                SourceExpr="Dummy Dimension" }

    { 1101495011;2;Field  ;
                SourceExpr="Use Mid Rate" }

    { 1101495016;2;Field  ;
                SourceExpr="External Code" }

    { 1101495017;2;Field  ;
                SourceExpr="Costcenter Name";
                Visible=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Emphasize@19004235 : Boolean INDATASET;
      NameIndent@19079073 : Integer INDATASET;
      blnSelect@1101495002 : Boolean;
      ConsSetup@1101495001 : Record 50000;
      Segment@1101495000 : Record 50190;

    LOCAL PROCEDURE FormatLine@19039177();
    BEGIN
      Emphasize := "Dimension Value Type" <> "Dimension Value Type"::Standard;
      NameIndent := Indentation;
    END;

    PROCEDURE SetValueSelection@1210000(blnSelection@1210000 : Boolean);
    BEGIN
      //NC PIF001 > DP
      blnSelect := blnSelection;
      //NC PIF001 < DP
    END;

    BEGIN
    {
      NC MDB01 PCH Вынесено поле "Parent Code"
      NC OBM001 EB фильтрация по фирме
      NC S547 PCH добавлено поле Rec ID
      TDRANCS-1073
        Add MenuItem Function -> Where is used
      TDRANCS-1071>
        Added Controls CurrForm."Allow Posting From",CurrForm."Allow Posting To"
      NC S1883 PCH
      NC NCS-2350 DP Added field "Dummy Dimension"
      NC NCS-2361 AA Добавлены поля "External Code", "Costcenter Name"
    }
    END.
  }
}

