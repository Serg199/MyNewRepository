OBJECT Page 43 Sales Invoice
{
  OBJECT-PROPERTIES
  {
    Date=24.07.17;
    Time=17:02:06;
    Modified=Yes;
    Version List=NAVW110.00.00.15140,NAVRU10.00.00.15140,NOS-26;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Invoice;
               RUS=Счет продажи];
    SourceTable=Table36;
    SourceTableView=WHERE(Document Type=FILTER(Invoice));
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Approve,Posting,Prepare,Invoice,Release,Request Approval,View;
                                RUS=Создать,Обработать,Отчет,Утвердить,Учет,Подготовить,Счет,Выпустить,Запросить утверждение,Просмотр];
    OnInit=VAR
             SalesReceivablesSetup@1001 : Record 311;
           BEGIN
             SetExtDocNoMandatoryCondition;
             JobQueuesUsed := SalesReceivablesSetup."Post & Print with Job Queue" OR SalesReceivablesSetup."Post with Job Queue";
           END;

    OnOpenPage=VAR
                 OfficeMgt@1000 : Codeunit 1630;
               BEGIN
                 IF UserMgt.GetSalesFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetSalesFilter);
                   FILTERGROUP(0);
                 END;

                 SetDocNoVisible;

                 IF "Quote No." <> '' THEN
                   ShowQuoteNo := TRUE;

                 IF "No." = '' THEN
                   IF OfficeMgt.CheckForExistingInvoice("Sell-to Customer No.") THEN
                     ERROR(''); // Cancel invoice creation
               END;

    OnAfterGetRecord=BEGIN
                       SetControlAppearance;
                       WorkDescription := GetWorkDescription;
                       UpdateShipToBillToGroupVisibility
                     END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserMgt.GetSalesFilter;
                  IF (NOT DocNoVisible) AND ("No." = '') THEN
                    SetSellToCustomerFromFilter;

                  SetDefaultPaymentServices;
                END;

    OnInsertRecord=BEGIN
                     IF DocNoVisible THEN
                       CheckCreditMaxBeforeInsert;

                     IF ("Sell-to Customer No." = '') AND (GETFILTER("Sell-to Customer No.") <> '') THEN
                       CurrPage.UPDATE(FALSE);
                   END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     EXIT(ConfirmDeletion);
                   END;

    OnQueryClosePage=BEGIN
                       IF NOT DocumentIsPosted THEN
                         EXIT(ConfirmCloseUnposted)
                     END;

    OnAfterGetCurrRecord=BEGIN
                           CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromRecord(Rec);
                           CurrPage.ApprovalFactBox.PAGE.UpdateApprovalEntriesFromSourceRecord(RECORDID);
                           ShowWorkflowStatus := CurrPage.WorkflowStatus.PAGE.SetFilterOnWorkflowRecord(RECORDID);

                           UpdatePaymentService;
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 57      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Invoice;
                                 RUS=&Счет];
                      Image=Invoice }
      { 59      ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 RUS=Статистика];
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 Handled@1000 : Boolean;
                               BEGIN
                                 OnBeforeStatisticsAction(Rec,Handled);
                                 IF NOT Handled THEN BEGIN
                                   CalcInvDiscForHeader;
                                   COMMIT;
                                   PAGE.RUNMODAL(PAGE::"Sales Statistics",Rec);
                                   SalesCalcDiscountByType.ResetRecalculateInvoiceDisc(Rec);
                                 END
                               END;
                                }
      { 171     ;2   ;Separator  }
      { 61      ;2   ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 RUS=Ко&мментарии];
                      RunObject=Page 67;
                      RunPageLink=Document Type=FIELD(Document Type),
                                  No.=FIELD(No.),
                                  Document Line No.=CONST(0);
                      Promoted=Yes;
                      Image=ViewComments;
                      PromotedCategory=Category7 }
      { 1470005 ;2   ;Action    ;
                      CaptionML=[ENU=Employee Si&gnatures;
                                 RUS=Под&писи сотрудников];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 12463;
                      RunPageLink=Table ID=CONST(36),
                                  Document Type=FIELD(Document Type),
                                  Document No.=FIELD(No.);
                      Image=Signature }
      { 162     ;2   ;Action    ;
                      Name=Approvals;
                      AccessByPermission=TableData 454=R;
                      CaptionML=[ENU=Approvals;
                                 RUS=Утверждения];
                      ToolTipML=[ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                                 RUS=Просмотр списка записей, ожидающих утверждения. Например, вы можете видеть имя пользователя, запросившего утверждение записи, время отправки запроса и время, когда он должен быть утвержден.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Approvals;
                      PromotedCategory=Category9;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalEntries@1001 : Page 658;
                               BEGIN
                                 ApprovalEntries.Setfilters(DATABASE::"Sales Header","Document Type","No.");
                                 ApprovalEntries.RUN;
                               END;
                                }
      { 6       ;2   ;Action    ;
                      Name=Function_CustomerCard;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Customer;
                                 RUS=Клиент];
                      ToolTipML=[ENU=View or edit detailed information about the customer.;
                                 RUS=Просмотр или изменение подробных сведений о клиенте.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 21;
                      RunPageLink=No.=FIELD(Sell-to Customer No.);
                      Promoted=Yes;
                      Enabled=CustomerSelected;
                      PromotedIsBig=Yes;
                      Image=Customer;
                      PromotedCategory=Category7;
                      PromotedOnly=Yes }
      { 116     ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 RUS=Измерения];
                      ToolTipML=[ENU=View or edits dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 RUS=Просмотр или изменение измерений, например области, проекта или отдела, которые можно назначать документам покупки и продажи для распределения себестоимости и анализа истории транзакций.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled="No." <> '';
                      PromotedIsBig=Yes;
                      Image=Dimensions;
                      PromotedCategory=Category7;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 1900000004;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 29      ;1   ;ActionGroup;
                      CaptionML=[ENU=Approval;
                                 RUS=Утверждение] }
      { 27      ;2   ;Action    ;
                      Name=Approve;
                      CaptionML=[ENU=Approve;
                                 RUS=Утвердить];
                      ToolTipML=[ENU=Approve the requested changes.;
                                 RUS=Утверждение запрошенных изменений.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ApprovalsMgmt.ApproveRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 25      ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=[ENU=Reject;
                                 RUS=Отклонить];
                      ToolTipML=[ENU=Reject the approval request.;
                                 RUS=Отклонение запроса на утверждение.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ApprovalsMgmt.RejectRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 23      ;2   ;Action    ;
                      Name=Delegate;
                      CaptionML=[ENU=Delegate;
                                 RUS=Делегировать];
                      ToolTipML=[ENU=Delegate the approval to a substitute approver.;
                                 RUS=Делегирование утверждения заместителю утверждающего лица.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 ApprovalsMgmt.DelegateRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 21      ;2   ;Action    ;
                      Name=Comment;
                      CaptionML=[ENU=Comments;
                                 RUS=Комментарии];
                      ToolTipML=[ENU=View or add comments.;
                                 RUS=Просмотр или добавление комментариев.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.GetApprovalComment(Rec);
                               END;
                                }
      { 9       ;1   ;ActionGroup;
                      CaptionML=[ENU=Release;
                                 RUS=Выпустить];
                      Image=ReleaseDoc }
      { 123     ;2   ;Action    ;
                      Name=Release;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=[ENU=Re&lease;
                                 RUS=Вы&пустить];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ReleaseDoc;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 ReleaseSalesDoc@1000 : Codeunit 414;
                               BEGIN
                                 ReleaseSalesDoc.PerformManualRelease(Rec);
                               END;
                                }
      { 124     ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=[ENU=Re&open;
                                 RUS=&Открыть];
                      ToolTipML=[ENU=Reopen the document to change it after it has been approved. Approved documents have the Released status and must be opened before they can be changed.;
                                 RUS=Повторное открытие документа для его изменения после утверждения. Утвержденные документы имеют статус "Выпущено", и их необходимо открывать перед изменением.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=Status <> Status::Open;
                      PromotedIsBig=Yes;
                      Image=ReOpen;
                      PromotedCategory=Category8;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ReleaseSalesDoc@1001 : Codeunit 414;
                               BEGIN
                                 ReleaseSalesDoc.PerformManualReopen(Rec);
                               END;
                                }
      { 62      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 RUS=Ф&ункции];
                      Image=Action }
      { 74      ;2   ;Action    ;
                      Name=CreatePurchaseInvoice;
                      CaptionML=[ENU=Create Purchase Invoice;
                                 RUS=Создать счет покупки];
                      ToolTipML=[ENU=Create a new purchase invoice so you can buy items from a vendor.;
                                 RUS=Создание счета покупки для приобретения товаров у поставщика.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=No;
                      PromotedIsBig=Yes;
                      Image=NewPurchaseInvoice;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 SelectedSalesLine@1001 : Record 37;
                                 PurchInvFromSalesInvoice@1000 : Codeunit 1314;
                               BEGIN
                                 CurrPage.SalesLines.PAGE.SETSELECTIONFILTER(SelectedSalesLine);
                                 PurchInvFromSalesInvoice.CreatePurchaseInvoice(Rec,SelectedSalesLine);
                               END;
                                }
      { 66      ;2   ;Action    ;
                      Name=GetRecurringSalesLines;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get Recurring Sales Lines;
                                 RUS=Получить строки типовых продаж];
                      ToolTipML=[ENU=Insert sales document lines that you have set up for the customer as recurring. Recurring sales lines could be for a monthly replenishment order or a fixed freight expense.;
                                 RUS=Вставка строк документа продажи, настроенных для клиента в качестве типовых. Строки типовых продаж могут использоваться для ежемесячного заказа пополнения запасов или для фиксированных затрат на доставку.];
                      ApplicationArea=#Suite;
                      PromotedIsBig=Yes;
                      Image=CustomerCode;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 StdCustSalesCode@1000 : Record 172;
                               BEGIN
                                 StdCustSalesCode.InsertSalesLines(Rec);
                               END;
                                }
      { 63      ;2   ;Action    ;
                      Name=CalculateInvoiceDiscount;
                      AccessByPermission=TableData 19=R;
                      CaptionML=[ENU=Calculate &Invoice Discount;
                                 RUS=Вычи&слить скидку по счету];
                      ToolTipML=[ENU=Calculate the invoice discount for the entire sales document when all sales invoice lines are entered.;
                                 RUS=Расчет скидки по счету для всего документа продажи, если введены все строки счета продажи.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=CalculateInvoiceDiscount;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 ApproveCalcInvDisc;
                                 SalesCalcDiscountByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 64      ;2   ;Action    ;
                      Name=CopyDocument;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Document;
                                 RUS=Копировать документ];
                      ToolTipML=[ENU=Copy document lines and header information from another sales document to this document. You can copy a posted sales invoice into a new sales invoice to quickly create a similar document.;
                                 RUS=Копирование строк документа и сведений заголовка из другого документа продажи в этот документ. Вы можете скопировать учтенный счет продажи в новый счет продажи, чтобы быстро создать подобный документ.];
                      ApplicationArea=#Suite;
                      Image=CopyDocument;
                      OnAction=BEGIN
                                 CopySalesDoc.SetSalesHeader(Rec);
                                 CopySalesDoc.RUNMODAL;
                                 CLEAR(CopySalesDoc);
                                 IF GET("Document Type","No.") THEN;
                               END;
                                }
      { 115     ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Move Negative Lines;
                                 RUS=Перемещение отрицательных строк];
                      Promoted=Yes;
                      Image=MoveNegativeLines;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 CLEAR(MoveNegSalesLines);
                                 MoveNegSalesLines.SetSalesHeader(Rec);
                                 MoveNegSalesLines.RUNMODAL;
                                 MoveNegSalesLines.ShowDocument;
                               END;
                                }
      { 47      ;2   ;ActionGroup;
                      CaptionML=[ENU=Incoming Document;
                                 RUS=Входящий документ];
                      ActionContainerType=NewDocumentItems;
                      Image=Documents }
      { 45      ;3   ;Action    ;
                      Name=IncomingDocCard;
                      CaptionML=[ENU=View Incoming Document;
                                 RUS=Просмотр входящего документа];
                      ToolTipML=;
                      Enabled=HasIncomingDocument;
                      Image=ViewOrder;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IncomingDocument.ShowCardFromEntryNo("Incoming Document Entry No.");
                               END;
                                }
      { 41      ;3   ;Action    ;
                      Name=SelectIncomingDoc;
                      AccessByPermission=TableData 130=R;
                      CaptionML=[ENU=Select Incoming Document;
                                 RUS=Выбрать входящий документ];
                      ToolTipML=;
                      Image=SelectLineToApply;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 VALIDATE("Incoming Document Entry No.",IncomingDocument.SelectIncomingDocument("Incoming Document Entry No.",RECORDID));
                               END;
                                }
      { 39      ;3   ;Action    ;
                      Name=IncomingDocAttachFile;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create Incoming Document from File;
                                 RUS=Создать входящий документ из файла];
                      ToolTipML=;
                      Enabled=NOT HasIncomingDocument;
                      Image=Attach;
                      OnAction=VAR
                                 IncomingDocumentAttachment@1000 : Record 133;
                               BEGIN
                                 IncomingDocumentAttachment.NewAttachmentFromSalesDocument(Rec);
                               END;
                                }
      { 37      ;3   ;Action    ;
                      Name=RemoveIncomingDoc;
                      CaptionML=[ENU=Remove Incoming Document;
                                 RUS=Удалить входящий документ];
                      ToolTipML=;
                      Enabled=HasIncomingDocument;
                      Image=RemoveLine;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IF IncomingDocument.GET("Incoming Document Entry No.") THEN
                                   IncomingDocument.RemoveLinkToRelatedRecord;
                                 "Incoming Document Entry No." := 0;
                                 MODIFY(TRUE);
                               END;
                                }
      { 49      ;1   ;ActionGroup;
                      CaptionML=[ENU=Request Approval;
                                 RUS=Утверждение запросов] }
      { 159     ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=[ENU=Send A&pproval Request;
                                 RUS=Отправить &запрос на утверждение];
                      ToolTipML=[ENU=Send an approval request.;
                                 RUS=Отправка запроса на утверждение.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=NOT OpenApprovalEntriesExist;
                      Image=SendApprovalRequest;
                      PromotedCategory=Category9;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 IF ApprovalsMgmt.CheckSalesApprovalPossible(Rec) THEN
                                   ApprovalsMgmt.OnSendSalesDocForApproval(Rec);
                               END;
                                }
      { 160     ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=[ENU=Cancel Approval Re&quest;
                                 RUS=Отменить запрос на &утверждение];
                      ToolTipML=[ENU=Cancel the approval request.;
                                 RUS=Отмена запроса на утверждение.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=CanCancelApprovalForRecord;
                      Image=CancelApprovalRequest;
                      PromotedCategory=Category9;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 ApprovalsMgmt.OnCancelSalesApprovalRequest(Rec);
                               END;
                                }
      { 69      ;1   ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 RUS=У&чет];
                      Image=Post }
      { 71      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      CaptionML=[ENU=P&ost;
                                 RUS=У&чет];
                      ToolTipML=[ENU=Finalize the document or journal by posting the amounts and quantities to the related accounts in your company books.;
                                 RUS=Завершение подготовки документа или журнала путем учета сумм и количеств на соответствующих счетах в книгах организации.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Category5;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Sales-Post (Yes/No)",NavigateAfterPost::"Posted Document");
                               END;
                                }
      { 72      ;2   ;Action    ;
                      Name=Printer;
                      ShortCutKey=Shift+F9;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post and &Print;
                                 RUS=Учет и &печать];
                      ToolTipML=[ENU=Finalize and print the sales document.;
                                 RUS=Завершение подготовки и печать документа продажи.];
                      Promoted=Yes;
                      Visible=FALSE;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Sales-Post + Print",NavigateAfterPost::"Posted Document");
                               END;
                                }
      { 1002    ;2   ;Action    ;
                      Name=Email as PDF;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post and &Email as PDF;
                                 RUS=Учесть и &отправить по почте как PDF];
                      ToolTipML=[ENU=Finalize and attach the sales document to an email to the customer.;
                                 RUS=Завершение подготовки и вложение документа продажи в сообщение электронной почты для клиента.];
                      ApplicationArea=#Basic,#Suite;
                      Visible=FALSE;
                      PromotedIsBig=Yes;
                      Image=Email;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Sales-Post + Email",NavigateAfterPost::"Posted Document");
                               END;
                                }
      { 1470098 ;2   ;Action    ;
                      CaptionML=[ENU=Post and Email;
                                 RUS=Учесть и отправить по эл. почте];
                      Promoted=Yes;
                      Visible=FALSE;
                      PromotedIsBig=Yes;
                      Image=PostMail;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 SalesPostPrint@1000 : Codeunit 82;
                               BEGIN
                                 SalesPostPrint.PostAndEmail(Rec);
                               END;
                                }
      { 73      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post &Batch;
                                 RUS=&Пакетный учет];
                      ApplicationArea=#Basic,#Suite;
                      Image=PostBatch;
                      OnAction=BEGIN
                                 REPORT.RUNMODAL(REPORT::"Batch Post Sales Invoices",TRUE,TRUE,Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 7       ;2   ;Action    ;
                      Name=PostAndNew;
                      ShortCutKey=Shift+F9;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post and New;
                                 RUS=Учесть и создать];
                      Promoted=Yes;
                      Image=PostOrder;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Sales-Post (Yes/No)",NavigateAfterPost::"New Document");
                               END;
                                }
      { 68      ;2   ;Action    ;
                      Name=Preview;
                      CaptionML=[ENU=Preview Posting;
                                 RUS=Предварительный просмотр учета];
                      ToolTipML=[ENU=View the sales invoice lines before you perform the actual posting.;
                                 RUS=Просмотр строк счета продажи перед фактическим учетом.];
                      ApplicationArea=#Basic,#Suite;
                      Image=ViewPostedOrder;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 ShowPreview;
                               END;
                                }
      { 55      ;2   ;Action    ;
                      Name=PrintDraftInvoice;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Print Draft Invoice;
                                 RUS=Напечатать черновик счета];
                      ToolTipML=[ENU=View or print the sales invoice as a draft before you perform the actual posting.;
                                 RUS=Просмотр или печать черновика счета продажи перед фактическим учетом.];
                      ApplicationArea=#Basic,#Suite;
                      Image=ViewPostedOrder;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 DocumentPrint@1000 : Codeunit 229;
                               BEGIN
                                 DocumentPrint.PrintSalesHeader(Rec);
                               END;
                                }
      { 78      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Test Report;
                                 RUS=Тестовый отчет];
                      Promoted=Yes;
                      Image=TestReport;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 ReportPrint.PrintSalesHeader(Rec);
                               END;
                                }
      { 3       ;2   ;Action    ;
                      CaptionML=[ENU=Remove From Job Queue;
                                 RUS=Удалить из очереди на работу];
                      Image=RemoveLine;
                      OnAction=BEGIN
                                 CancelBackgroundPosting;
                               END;
                                }
      { 1470003 ;1   ;Action    ;
                      CaptionML=[ENU=&Print;
                                 RUS=&Печать];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 DocPrint@1210000 : Codeunit 229;
                               BEGIN
                                 DocPrint.PrintSalesHeader(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           RUS=Общее];
                GroupType=Group }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the sales document. The field can be filled automatically or manually and can be set up to be invisible.;
                           RUS=Определяет номер документа продажи. Поле можно заполнить вручную или автоматически, а также сделать невидимым.];
                ApplicationArea=#All;
                SourceExpr="No.";
                Importance=Additional;
                Visible=DocNoVisible;
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 4   ;2   ;Field     ;
                CaptionML=[ENU=Customer;
                           RUS=Клиент];
                ToolTipML=[ENU=Specifies the name of the customer who will receive the products and be billed by default.;
                           RUS=Определяет имя клиента, который получит продукты и которому по умолчанию будет выставлен счет.];
                ApplicationArea=#Basic,#Suite;
                NotBlank=Yes;
                SourceExpr="Sell-to Customer Name";
                Importance=Promoted;
                OnValidate=VAR
                             ApplicationAreaSetup@1000 : Record 9178;
                           BEGIN
                             IF GETFILTER("Sell-to Customer No.") = xRec."Sell-to Customer No." THEN
                               IF "Sell-to Customer No." <> xRec."Sell-to Customer No." THEN
                                 SETRANGE("Sell-to Customer No.");

                             IF ApplicationAreaSetup.IsFoundationEnabled THEN
                               SalesCalcDiscountByType.ApplyDefaultInvoiceDiscount(0,Rec);

                             CurrPage.UPDATE;
                           END;

                ShowMandatory=TRUE }

    { 100 ;2   ;Group     ;
                CaptionML=[ENU=Sell-to;
                           RUS=Клиент];
                GroupType=Group }

    { 75  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           RUS=Адрес];
                ToolTipML=[ENU=Specifies the address where the customer is located.;
                           RUS=Определяет адрес, по которому расположен клиент.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Address";
                Importance=Additional }

    { 77  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           RUS=Адрес 2];
                ToolTipML=[ENU=Specifies additional address information.;
                           RUS=Определяет дополнительные сведения адреса.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Address 2";
                Importance=Additional }

    { 80  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           RUS=Индекс];
                ToolTipML=[ENU=Specifies the postal code.;
                           RUS=Определяет почтовый индекс.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Post Code";
                Importance=Additional }

    { 79  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           RUS=Город];
                ToolTipML=[ENU=Specifies the city where the customer is located.;
                           RUS=Определяет город, где расположен клиент.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to City";
                Importance=Additional }

    { 87  ;3   ;Field     ;
                CaptionML=[ENU=Contact No.;
                           RUS=Код контакта];
                ToolTipML=[ENU=Specifies the number of the contact that the sales document will be sent to.;
                           RUS=Определяет номер контакта, которому будет отправлен документ продажи.];
                SourceExpr="Sell-to Contact No.";
                Importance=Additional;
                OnValidate=BEGIN
                             IF ApplicationAreaSetup.IsAdvanced THEN
                               IF GETFILTER("Sell-to Contact No.") = xRec."Sell-to Contact No." THEN
                                 IF "Sell-to Contact No." <> xRec."Sell-to Contact No." THEN
                                   SETRANGE("Sell-to Contact No.");
                           END;
                            }

    { 8   ;2   ;Field     ;
                CaptionML=[ENU=Contact;
                           RUS=Контакт];
                ToolTipML=[ENU=Specifies the name of the person to contact at the customer.;
                           RUS=Определяет имя контактного лица у клиента.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Contact" }

    { 1210014;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Description" }

    { 19  ;2   ;Field     ;
                ToolTipML=;
                SourceExpr="Your Reference";
                Importance=Additional }

    { 43  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date on which you created the sales document.;
                           RUS=Определяет дату создания этого документа продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Date";
                Importance=Additional }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the posting of the sales document will be recorded.;
                           RUS=Определяет дату регистрации учета документа продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Date";
                Importance=Promoted }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies when the sales invoice must be paid.;
                           RUS=Определяет срок оплаты счета продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Due Date";
                Importance=Promoted }

    { 13  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the incoming document that this sales document is created for.;
                           RUS=Определяет номер входящего документа, для которого создается этот документ продажи.];
                SourceExpr="Incoming Document Entry No.";
                Importance=Additional;
                Visible=FALSE }

    { 126 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number that the customer uses in their own system to refer to this sales document.;
                           RUS=Определяет номер, по которому клиент ссылается на этот документ продажи в собственной системе.];
                SourceExpr="External Document No.";
                Importance=Additional;
                ShowMandatory=ExternalDocNoMandatory }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the salesperson who is assigned to the customer.;
                           RUS=Определяет имя менеджера по продажам, назначенного клиенту.];
                ApplicationArea=#Suite;
                SourceExpr="Salesperson Code";
                Importance=Additional;
                OnValidate=BEGIN
                             SalespersonCodeOnAfterValidate;
                           END;
                            }

    { 129 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the campaign that the document is linked to.;
                           RUS=Определяет номер кампании, с которой связан документ.];
                SourceExpr="Campaign No.";
                Importance=Additional }

    { 118 ;2   ;Field     ;
                AccessByPermission=TableData 5714=R;
                ToolTipML=[ENU=Specifies the code of the responsibility center that is associated with the user, company, or vendor.;
                           RUS=Определяет код центра ответственности, который связан с пользователем, компанией или поставщиком.];
                SourceExpr="Responsibility Center";
                Importance=Additional }

    { 67  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of the user who is responsible for the document.;
                           RUS=Определяет код пользователя, который отвечает за документ.];
                SourceExpr="Assigned User ID";
                Importance=Additional }

    { 112 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the document is open, waiting to be approved, has been invoiced for prepayment, or has been released to the next stage of processing.;
                           RUS=Определяет состояние документа: открытый, ожидающий утверждения, с выставленным счетом на предоплату или выпущенный на следующий этап обработки.];
                SourceExpr=Status;
                Importance=Promoted }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the status of a job queue entry or task that handles the posting of sales orders.;
                           RUS=Определяет статус операции очереди работ или задачи, которая выполняет учет заказов на продажу.];
                ApplicationArea=#All;
                SourceExpr="Job Queue Status";
                Importance=Additional;
                Visible=JobQueuesUsed }

    { 135 ;2   ;Group     ;
                CaptionML=[ENU=Work Description;
                           RUS=Описание работы];
                GroupType=Group }

    { 117 ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the products or service being offered;
                           RUS=Определяет предлагаемые товары или услуги.];
                SourceExpr=WorkDescription;
                Importance=Additional;
                MultiLine=Yes;
                OnValidate=BEGIN
                             SetWorkDescription(WorkDescription);
                           END;
                            }

    { 56  ;1   ;Part      ;
                Name=SalesLines;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page47;
                Enabled="Sell-to Customer No." <> '';
                Editable="Sell-to Customer No." <> '' }

    { 1905885101;1;Group  ;
                CaptionML=[ENU=Invoice Details;
                           RUS=Счет - подробности];
                GroupType=Group }

    { 107 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the currency of amounts on the sales document.;
                           RUS=Определяет валюту для сумм в документе продажи.];
                ApplicationArea=#Suite;
                SourceExpr="Currency Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             SalesCalcDiscountByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               IF "Posting Date" <> 0D THEN
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date")
                               ELSE
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 48  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date you expect to ship items on the sales document.;
                           RUS=Определяет дату ожидаемой отгрузки товаров по документу продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Shipment Date";
                Importance=Promoted }

    { 1210042;2;Field     ;
                ToolTipML=[ENU=Specifies the consignor number associated with the sales header.;
                           RUS=Определяет номер грузоотправителя, связанный с заголовком продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Consignor No." }

    { 1210000;2;Field     ;
                ToolTipML=[ENU=Specifies the code of the company registration associated with the sales header.;
                           RUS=Определяет код регистрации компании, связанный с заголовком продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="KPP Code" }

    { 83  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the sales quote that the sales order was created from. You can track the number to sales quote documents that you have printed, saved, or emailed.;
                           RUS=Определяет номер предложения по продаже, из которого был создан заказ на продажу. Вы можете отслеживать номер по документам предложения продажи, которые вы распечатали, сохранили или отправили по электронной почте.];
                ApplicationArea=#All;
                SourceExpr="Quote No.";
                Visible=ShowQuoteNo }

    { 121 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the unit price on the line should be displayed including or excluding VAT.;
                           RUS=Определяет, должна цена за единицу в этой строке отображаться с НДС или без НДС.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Prices Including VAT" }

    { 156 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the customer's VAT specification to link transactions made for this customer to.;
                           RUS=Определяет спецификацию НДС клиента для связывания с транзакциями этого клиента.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Bus. Posting Group";
                OnValidate=VAR
                             ApplicationAreaSetup@1000 : Record 9178;
                           BEGIN
                             IF ApplicationAreaSetup.IsFoundationEnabled THEN
                               SalesCalcDiscountByType.ApplyDefaultInvoiceDiscount(0,Rec);

                             CurrPage.UPDATE;
                           END;
                            }

    { 26  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount on the sales document.;
                           RUS=Определяет формулу, по которой рассчитывается срок оплаты, дата скидки по оплате и сумма скидки по оплате по документу продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Terms Code";
                Importance=Promoted }

    { 101 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how the customer must pay for products on the sales document.;
                           RUS=Определяет, как клиент должен оплатить продукты по документу продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Method Code";
                Importance=Additional;
                OnValidate=BEGIN
                             UpdatePaymentService;
                           END;
                            }

    { 1101495000;2;Field  ;
                SourceExpr="Customer Posting Group" }

    { 1101495001;2;Field  ;
                SourceExpr="Gen. Bus. Posting Group" }

    { 174 ;2   ;Group     ;
                Visible=PaymentServiceVisible;
                GroupType=Group }

    { 175 ;3   ;Field     ;
                Name=SelectedPayments;
                CaptionML=[ENU=Payment Service;
                           RUS=Служба платежей];
                ToolTipML=[ENU=Specifies the online payment service, such as PayPal, that customers can use to pay the sales document.;
                           RUS=Определяет службу интернет-платежей, например PayPal, которую клиенты могут использовать для оплаты документа продажи.];
                ApplicationArea=#All;
                SourceExpr=GetSelectedPaymentServicesText;
                Enabled=PaymentServiceEnabled;
                Editable=FALSE;
                MultiLine=Yes;
                OnAssistEdit=BEGIN
                               ChangePaymentServiceSetting;
                             END;
                              }

    { 52  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of transaction that the sales document represents, for the purpose of reporting to INTRASTAT.;
                           RUS=Определяет тип транзакции, представляемой документом продажи, в целях отчетности Интрастат.];
                SourceExpr="Transaction Type" }

    { 84  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for Shortcut Dimension 1.;
                           RUS=Определяет код ярлыка измерения 1.];
                ApplicationArea=#Suite;
                SourceExpr="Shortcut Dimension 1 Code";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 88  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for Shortcut Dimension 2.;
                           RUS=Определяет код ярлыка измерения 2.];
                ApplicationArea=#Suite;
                SourceExpr="Shortcut Dimension 2 Code";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 30  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the payment discount percentage granted if the customer pays on or before the date entered in the Pmt. Discount Date field.;
                           RUS=Определяет процент скидки по оплате, которая предоставляется при условии совершения клиентом оплаты не позже даты, указанной в поле "Дата скидки оплаты".];
                SourceExpr="Payment Discount %" }

    { 32  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the last date the customer can pay the invoice and still receive a payment discount.;
                           RUS=Определяет последнюю дату, когда клиент может оплатить счет и при этом получить скидку по оплате.];
                SourceExpr="Pmt. Discount Date";
                Importance=Additional }

    { 15  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the direct-debit mandate that the customer has signed to allow direct debit collection of payments.;
                           RUS=Определяет поручение прямого дебетования, подписанное клиентом, чтобы разрешить сбор платежей по принципу прямого дебита.];
                SourceExpr="Direct Debit Mandate ID" }

    { 1210012;2;Field     ;
                ToolTipML=[ENU=Specifies the agreement number associated with the sales header.;
                           RUS=Определяет номер соглашения, связанный с заголовком продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Agreement No." }

    { 90  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the location from where inventory items to the customer on the sales document are to be shipped by default.;
                           RUS=Указывает расположение, из которого по умолчанию отгружаются складские товары клиенту по документу продажи.];
                SourceExpr="Location Code";
                Importance=Additional }

    { 1900000002;1;Group  ;
                CaptionML=[ENU=Shipping and Billing;
                           RUS=Отгрузка и выставление счетов];
                Enabled="Sell-to Customer No." <> '';
                GroupType=Group }

    { 34  ;2   ;Group     ;
                GroupType=Group }

    { 200 ;3   ;Group     ;
                GroupType=Group }

    { 201 ;4   ;Field     ;
                Name=ShippingOptions;
                CaptionML=[ENU=Ship-to;
                           RUS=Получатель];
                ToolTipML=[ENU=Specifies the address that the products on the sales document are shipped to. Default (Sell-to Address): The same as the customer's sell-to address. Alternate Ship-to Address: One of the customer's alternate ship-to addresses. Custom Address: Any ship-to address that you specify in the fields below.;
                           RUS=Определяет адрес, по которому должны быть доставлены продукты из документа продажи. По умолчанию ("Адрес клиента"): адрес совпадает с адресом клиента. "Альтернативный адрес получателя": один из альтернативных адресов получателя для клиента. "Пользовательский адрес": произвольный адрес получателя, задаваемый в расположенных ниже полях.];
                OptionCaptionML=[ENU=Default (Sell-to Address),Alternate Shipping Address,Custom Address;
                                 RUS=По умолчанию (Адрес клиента),Альтернативный адрес отгрузки,Пользовательский адрес];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ShipToOptions;
                OnValidate=VAR
                             ShipToAddress@1001 : Record 222;
                             ShipToAddressList@1000 : Page 301;
                           BEGIN
                             CASE ShipToOptions OF
                               ShipToOptions::"Default (Sell-to Address)":
                                 BEGIN
                                   VALIDATE("Ship-to Code",'');
                                   CopySellToAddressToShipToAddress;
                                 END;
                               ShipToOptions::"Alternate Shipping Address":
                                 BEGIN
                                   ShipToAddress.SETRANGE("Customer No.","Sell-to Customer No.");
                                   ShipToAddressList.LOOKUPMODE := TRUE;
                                   ShipToAddressList.SETTABLEVIEW(ShipToAddress);

                                   IF ShipToAddressList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                     ShipToAddressList.GETRECORD(ShipToAddress);
                                     VALIDATE("Ship-to Code",ShipToAddress.Code);
                                   END ELSE
                                     ShipToOptions := ShipToOptions::"Custom Address";
                                 END;
                               ShipToOptions::"Custom Address":
                                 VALIDATE("Ship-to Code",'');
                             END;
                           END;
                            }

    { 202 ;4   ;Group     ;
                Visible=NOT (ShipToOptions = ShipToOptions::"Default (Sell-to Address)");
                GroupType=Group }

    { 65  ;5   ;Field     ;
                CaptionML=[ENU=Code;
                           RUS=Код];
                ToolTipML=[ENU=Specifies the code for another shipment address than the customer's own address, which is entered by default.;
                           RUS=Определяет код другого адреса получателя, отличающегося от адреса клиента по умолчанию.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Code";
                Importance=Promoted;
                Editable=ShipToOptions = ShipToOptions::"Alternate Shipping Address";
                OnValidate=BEGIN
                             IF (xRec."Ship-to Code" <> '') AND ("Ship-to Code" = '') THEN
                               ERROR(EmptyShipToCodeErr);
                           END;
                            }

    { 36  ;5   ;Field     ;
                CaptionML=[ENU=Name;
                           RUS=Название];
                ToolTipML=[ENU=Specifies the name that products on the sales document will be shipped to.;
                           RUS=Определяет имя, на которое будут отгружены продукты из документа продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Name";
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 38  ;5   ;Field     ;
                CaptionML=[ENU=Address;
                           RUS=Адрес];
                ToolTipML=[ENU=Specifies the address that products on the sales document will be shipped to.;
                           RUS=Определяет адрес, по которому будут доставлены продукты из документа продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Address";
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 40  ;5   ;Field     ;
                CaptionML=[ENU=Address 2;
                           RUS=Адрес 2];
                ToolTipML=[ENU=Specifies additional address information.;
                           RUS=Определяет дополнительные сведения адреса.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Address 2";
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 93  ;5   ;Field     ;
                CaptionML=[ENU=Post Code;
                           RUS=Индекс];
                ToolTipML=[ENU=Specifies the postal code.;
                           RUS=Определяет почтовый индекс.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Post Code";
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 42  ;5   ;Field     ;
                CaptionML=[ENU=City;
                           RUS=Город];
                ToolTipML=[ENU=Specifies the city that products on the sales document will be shipped to.;
                           RUS=Определяет город, в который будут отгружены продукты из документа продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to City";
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 17  ;5   ;Field     ;
                CaptionML=[ENU=Country/Region;
                           RUS=Страна/регион];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Country/Region Code";
                Importance=Additional;
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 44  ;5   ;Field     ;
                CaptionML=[ENU=Contact;
                           RUS=Контакт];
                ToolTipML=[ENU=Specifies the name of the contact person at the address that products on the sales document will be shipped to.;
                           RUS=Определяет имя контактного лица по адресу, куда будут отгружены продукты по документу продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Contact";
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 1210004;5;Field     ;
                ToolTipML=[ENU=Specifies the act signed by name associated with the sales header.;
                           RUS=Определяет акт, подписанный именем, которое связано с заголовком продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Act Signed by Name" }

    { 1210006;5;Field     ;
                ToolTipML=[ENU=Specifies the act signed by the position associated with the sales header.;
                           RUS=Определяет акт, подписанный должностью, которая связана с заголовком продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Act Signed by Position" }

    { 16  ;3   ;Group     ;
                CaptionML=[ENU=Shipment Method;
                           RUS=Метод отгрузки];
                GroupType=Group }

    { 46  ;4   ;Field     ;
                CaptionML=[ENU=Code;
                           RUS=Код];
                ToolTipML=[ENU=Specifies how items on the sales document are shipped to the customer.;
                           RUS=Определяет способ отгрузки товаров из документа продажи клиенту.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Shipment Method Code";
                Importance=Additional }

    { 103 ;4   ;Field     ;
                CaptionML=[ENU=Agent;
                           RUS=Агент];
                ToolTipML=[ENU=Specifies which shipping agent is used to transport the items on the sales document to the customer.;
                           RUS=Определяет экспедитора, который используется для транспортировки клиенту товаров из документа продажи.];
                ApplicationArea=#Suite;
                SourceExpr="Shipping Agent Code";
                Importance=Additional }

    { 11  ;4   ;Field     ;
                CaptionML=[ENU=Agent service;
                           RUS=Услуга агента];
                ToolTipML=[ENU=Specifies which shipping agent service is used to transport the items on the sales document to the customer.;
                           RUS=Определяет услуги экспедитора, которые используются для транспортировки клиенту товаров из документа продажи.];
                ApplicationArea=#Suite;
                SourceExpr="Shipping Agent Service Code";
                Importance=Additional }

    { 105 ;4   ;Field     ;
                ToolTipML=[ENU=Specifies the shipping agent's package number.;
                           RUS=Определяет номер пакета экспедитора.];
                ApplicationArea=#Suite;
                SourceExpr="Package Tracking No.";
                Importance=Additional }

    { 203 ;2   ;Group     ;
                GroupType=Group }

    { 204 ;3   ;Field     ;
                CaptionML=[ENU=Bill-to;
                           RUS=Плательщик];
                ToolTipML=[ENU=Specifies the customer that the sales invoice will be sent to. Default (Customer): The same as the customer on the sales invoice. Another Customer: Any customer that you specify in the fields below.;
                           RUS=Определяет клиента, которому будет отправлен счет продажи. По умолчанию ("Клиент"): адрес совпадает с адресом клиента в счете продажи. "Другой клиент": произвольный клиент, задаваемый в расположенных ниже полях.];
                OptionCaptionML=[ENU=Default (Customer),Another Customer;
                                 RUS=По умолчанию (Клиент),Другой клиент];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BillToOptions;
                OnValidate=BEGIN
                             IF BillToOptions = BillToOptions::"Default (Customer)" THEN
                               VALIDATE("Bill-to Customer No.","Sell-to Customer No.");
                           END;
                            }

    { 205 ;3   ;Group     ;
                Visible=BillToOptions = BillToOptions::"Another Customer";
                GroupType=Group }

    { 14  ;4   ;Field     ;
                CaptionML=[ENU=Name;
                           RUS=Название];
                ToolTipML=[ENU=Specifies the customer to whom you will send the sales invoice, when different from the customer that you are selling to.;
                           RUS=Определяет клиента, которому будет отправлен счет продажи, если продажа осуществляется другому клиенту.];
                ApplicationArea=#Basic,#Suite;
                NotBlank=Yes;
                SourceExpr="Bill-to Name";
                Importance=Promoted;
                OnValidate=VAR
                             ApplicationAreaSetup@1000 : Record 9178;
                           BEGIN
                             IF GETFILTER("Bill-to Customer No.") = xRec."Bill-to Customer No." THEN
                               IF "Bill-to Customer No." <> xRec."Bill-to Customer No." THEN
                                 SETRANGE("Bill-to Customer No.");

                             IF ApplicationAreaSetup.IsFoundationEnabled THEN
                               SalesCalcDiscountByType.ApplyDefaultInvoiceDiscount(0,Rec);

                             CurrPage.UPDATE;
                           END;
                            }

    { 18  ;4   ;Field     ;
                CaptionML=[ENU=Address;
                           RUS=Адрес];
                ToolTipML=[ENU=Specifies the address of the customer that you will send the invoice to.;
                           RUS=Определяет адрес клиента, которому будет отправлен счет.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Address";
                Importance=Additional }

    { 20  ;4   ;Field     ;
                CaptionML=[ENU=Address 2;
                           RUS=Адрес 2];
                ToolTipML=[ENU=Specifies additional address information.;
                           RUS=Определяет дополнительные сведения адреса.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Address 2";
                Importance=Additional }

    { 85  ;4   ;Field     ;
                CaptionML=[ENU=Post Code;
                           RUS=Индекс];
                ToolTipML=[ENU=Specifies the postal code.;
                           RUS=Определяет почтовый индекс.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Post Code";
                Importance=Additional }

    { 22  ;4   ;Field     ;
                CaptionML=[ENU=City;
                           RUS=Город];
                ToolTipML=[ENU=Specifies the city you will send the invoice to.;
                           RUS=Определяет город, в который будет отправлен счет.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to City";
                Importance=Additional }

    { 86  ;4   ;Field     ;
                CaptionML=[ENU=Contact No.;
                           RUS=Код контакта];
                ToolTipML=[ENU=Specifies the number of the contact the invoice will be sent to.;
                           RUS=Определяет номер контакта, которому будет отправлен счет.];
                SourceExpr="Bill-to Contact No.";
                Importance=Additional }

    { 24  ;4   ;Field     ;
                CaptionML=[ENU=Contact;
                           RUS=Контакт];
                ToolTipML=[ENU=Specifies the name of the person you should contact at the customer who you are sending the invoice to.;
                           RUS=Определяет имя контактного лица у клиента, которому направляется счет.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Contact" }

    { 1470000;2;Field     ;
                ToolTipML=[ENU=Specifies the external document text associated with the sales header.;
                           RUS=Определяет текст внешнего документа, связанный с заголовком продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="External Document Text" }

    { 1907468901;1;Group  ;
                CaptionML=[ENU=Foreign Trade;
                           RUS=Внешняя торговля];
                GroupType=Group }

    { 50  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the sales document is part of a three-party trade.;
                           RUS=Определяет, является ли документ продажи частью трехсторонней торговой сделки.];
                SourceExpr="EU 3-Party Trade" }

    { 99  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a code for the sales document's transaction specification, for the purpose of reporting to INTRASTAT.;
                           RUS=Определяет код спецификации транзакции документа продажи в целях отчетности Интрастат.];
                SourceExpr="Transaction Specification" }

    { 54  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the transport method, for the purpose of reporting to INTRASTAT.;
                           RUS=Определяет метод перевозки в целях отчетности Интрастат.];
                SourceExpr="Transport Method" }

    { 95  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the point of exit through which you ship the items out of your country/region, for reporting to Intrastat.;
                           RUS=Определяет точку выхода, через которую производится отгрузка товаров за пределы страны или региона, в целях отчетности Интрастат.];
                SourceExpr="Exit Point" }

    { 97  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the area of the customer's address, for the purpose of reporting to INTRASTAT.;
                           RUS=Определяет регион для адреса клиента в целях отчетности Интрастат.];
                SourceExpr=Area }

    { 1905569601;1;Group  ;
                CaptionML=[ENU=VAT;
                           RUS=НДС] }

    { 1210010;2;Field     ;
                ToolTipML=[ENU=Specifies the additional VAT ledger sheet associated with the sales header.;
                           RUS=Определяет дополнительный лист книги НДС, связанный с заголовком продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Additional VAT Ledger Sheet" }

    { 1210003;2;Field     ;
                ToolTipML=[ENU=Specifies the date of the corrected document associated with the sales header.;
                           RUS=Определяет дату скорректированного документа, связанного с заголовком продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Corrected Document Date" }

    { 1210002;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting No." }

    { 1210001;2;Field     ;
                ToolTipML=[ENU=Specifies the VAT entry type for the sales order.;
                           RUS=Определяет тип операции НДС для заказа на продажу.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Entry Type" }

    { 1170000000;2;Field  ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Corrective Document" }

    { 1170000001;2;Field  ;
                ToolTipML=[ENU=Specifies the revision number associated with the sales header.;
                           RUS=Определяет номер редакции, связанный с заголовком продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Corrective Doc. Type" }

    { 1170000002;2;Field  ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Corrected Doc. Type" }

    { 1170000003;2;Field  ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Corrected Doc. No." }

    { 1170000004;2;Field  ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Revision No." }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1101495002;1;Part   ;
                CaptionML=[ENU=Header Dimensions;
                           RUS=Заголовок Измерения];
                ApplicationArea=#Basic,#Suite;
                SubPageLink=Dimension Set ID=FIELD(Dimension Set ID);
                PagePartID=Page699;
                PartType=Page }

    { 1101495003;1;Part   ;
                CaptionML=[ENU=Line Dimensions;
                           RUS=Строка Измерения];
                ApplicationArea=#Basic,#Suite;
                SubPageLink=Dimension Set ID=FIELD(Dimension Set ID);
                PagePartID=Page699;
                ProviderID=56;
                PartType=Page }

    { 31  ;1   ;Part      ;
                ApplicationArea=#All;
                SubPageLink=Table ID=CONST(36),
                            Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.);
                PagePartID=Page9103;
                Visible=OpenApprovalEntriesExistForCurrUser;
                PartType=Page }

    { 1903720907;1;Part   ;
                SubPageLink=No.=FIELD(Sell-to Customer No.);
                PagePartID=Page9080;
                Visible=FALSE;
                PartType=Page }

    { 1907234507;1;Part   ;
                SubPageLink=No.=FIELD(Bill-to Customer No.);
                PagePartID=Page9081;
                Visible=FALSE;
                PartType=Page }

    { 1902018507;1;Part   ;
                SubPageLink=No.=FIELD(Bill-to Customer No.);
                PagePartID=Page9082;
                PartType=Page }

    { 1900316107;1;Part   ;
                SubPageLink=No.=FIELD(Sell-to Customer No.);
                PagePartID=Page9084;
                PartType=Page }

    { 1906127307;1;Part   ;
                SubPageLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(Document No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page9087;
                ProviderID=56;
                Visible=FALSE;
                PartType=Page }

    { 1901314507;1;Part   ;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page9089;
                ProviderID=56;
                PartType=Page }

    { 33  ;1   ;Part      ;
                Name=IncomingDocAttachFactBox;
                PagePartID=Page193;
                Visible=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1906354007;1;Part   ;
                Name=ApprovalFactBox;
                PagePartID=Page9092;
                Visible=FALSE;
                PartType=Page }

    { 1907012907;1;Part   ;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page9108;
                ProviderID=56;
                Visible=FALSE;
                PartType=Page }

    { 51  ;1   ;Part      ;
                Name=WorkflowStatus;
                ApplicationArea=#All;
                PagePartID=Page1528;
                Visible=ShowWorkflowStatus;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ApplicationAreaSetup@1011 : Record 9178;
      CopySalesDoc@1002 : Report 292;
      MoveNegSalesLines@1006 : Report 6699;
      ReportPrint@1003 : Codeunit 228;
      UserMgt@1004 : Codeunit 5700;
      SalesCalcDiscountByType@1007 : Codeunit 56;
      ApprovalsMgmt@1013 : Codeunit 1535;
      LinesInstructionMgt@1015 : Codeunit 1320;
      ChangeExchangeRate@1001 : Page 511;
      NavigateAfterPost@1017 : 'Posted Document,New Document,Nowhere';
      WorkDescription@1018 : Text;
      HasIncomingDocument@1012 : Boolean;
      DocNoVisible@1005 : Boolean;
      ExternalDocNoMandatory@1008 : Boolean;
      OpenApprovalEntriesExistForCurrUser@1009 : Boolean;
      OpenApprovalEntriesExist@1000 : Boolean;
      ShowWorkflowStatus@1010 : Boolean;
      PaymentServiceVisible@1032 : Boolean;
      PaymentServiceEnabled@1033 : Boolean;
      OpenPostedSalesInvQst@1020 : TextConst 'ENU=The invoice has been posted and moved to the Posted Sales Invoices window.\\Do you want to open the posted invoice?;RUS=Счет учтен и перемещен в окно учтенных счетов продажи.\\Открыть учтенный счет?';
      CustomerSelected@1021 : Boolean;
      OutlookComposeFormAvailable@1024 : Boolean;
      OutlookReadFormAvailable@1025 : Boolean;
      ShowQuoteNo@1029 : Boolean;
      JobQueuesUsed@1031 : Boolean;
      CanCancelApprovalForRecord@1014 : Boolean;
      DocumentIsPosted@1016 : Boolean;
      ShipToOptions@1050 : 'Default (Sell-to Address),Alternate Shipping Address,Custom Address';
      BillToOptions@1051 : 'Default (Customer),Another Customer';
      EmptyShipToCodeErr@1052 : TextConst 'ENU=The Code field can only be empty if you select Custom Address in the Ship-to field.;RUS=Поле "Код" может быть только пустым, если в поле "Получатель" выбрано значение "Пользовательский адрес".';

    LOCAL PROCEDURE Post@4(PostingCodeunitID@1000 : Integer;Navigate@1005 : Option);
    VAR
      SalesHeader@1002 : Record 36;
      SalesInvoiceHeader@1003 : Record 112;
      OfficeMgt@1004 : Codeunit 1630;
      InstructionMgt@1006 : Codeunit 1330;
      PreAssignedNo@1001 : Code[20];
    BEGIN
      IF ApplicationAreaSetup.IsFoundationEnabled THEN
        LinesInstructionMgt.SalesCheckAllLinesHaveQuantityAssigned(Rec);
      PreAssignedNo := "No.";

      SendToPosting(PostingCodeunitID);

      DocumentIsPosted := NOT SalesHeader.GET("Document Type","No.");

      IF "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting" THEN
        CurrPage.CLOSE;
      CurrPage.UPDATE(FALSE);

      IF PostingCodeunitID <> CODEUNIT::"Sales-Post (Yes/No)" THEN
        EXIT;

      IF OfficeMgt.IsAvailable THEN BEGIN
        SalesInvoiceHeader.SETCURRENTKEY("Pre-Assigned No.");
        SalesInvoiceHeader.SETRANGE("Pre-Assigned No.",PreAssignedNo);
        IF SalesInvoiceHeader.FINDFIRST THEN
          PAGE.RUN(PAGE::"Posted Sales Invoice",SalesInvoiceHeader);
      END ELSE
        CASE Navigate OF
          NavigateAfterPost::"Posted Document":
            IF InstructionMgt.IsEnabled(InstructionMgt.ShowPostedConfirmationMessageCode) THEN
              ShowPostedConfirmationMessage(PreAssignedNo);
          NavigateAfterPost::"New Document":
            IF DocumentIsPosted THEN BEGIN
              SalesHeader.INIT;
              SalesHeader.VALIDATE("Document Type",SalesHeader."Document Type"::Invoice);
              SalesHeader.INSERT(TRUE);
              PAGE.RUN(PAGE::"Sales Invoice",SalesHeader);
            END;
        END;
    END;

    LOCAL PROCEDURE ApproveCalcInvDisc@8();
    BEGIN
      CurrPage.SalesLines.PAGE.ApproveCalcInvDisc;
    END;

    LOCAL PROCEDURE ShowPostedConfirmationMessage@17(PreAssignedNo@1001 : Code[20]);
    VAR
      SalesInvoiceHeader@1000 : Record 112;
      InstructionMgt@1002 : Codeunit 1330;
    BEGIN
      SalesInvoiceHeader.SETCURRENTKEY("Pre-Assigned No.");
      SalesInvoiceHeader.SETRANGE("Pre-Assigned No.",PreAssignedNo);
      IF SalesInvoiceHeader.FINDFIRST THEN
        IF InstructionMgt.ShowConfirm(OpenPostedSalesInvQst,InstructionMgt.ShowPostedConfirmationMessageCode) THEN
          PAGE.RUN(PAGE::"Posted Sales Invoice",SalesInvoiceHeader);
    END;

    LOCAL PROCEDURE SalespersonCodeOnAfterValidate@19011896();
    BEGIN
      CurrPage.SalesLines.PAGE.UpdatePage(TRUE);
    END;

    LOCAL PROCEDURE SetDocNoVisible@3();
    VAR
      DocumentNoVisibility@1000 : Codeunit 1400;
      DocType@1003 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Reminder,FinChMemo';
    BEGIN
      DocNoVisible := DocumentNoVisibility.SalesDocumentNoIsVisible(DocType::Invoice,"No.");
    END;

    LOCAL PROCEDURE SetExtDocNoMandatoryCondition@2();
    VAR
      SalesReceivablesSetup@1000 : Record 311;
    BEGIN
      SalesReceivablesSetup.GET;
      ExternalDocNoMandatory := SalesReceivablesSetup."Ext. Doc. No. Mandatory"
    END;

    LOCAL PROCEDURE ShowPreview@5();
    VAR
      SalesPostYesNo@1000 : Codeunit 81;
    BEGIN
      SalesPostYesNo.Preview(Rec);
    END;

    LOCAL PROCEDURE SetControlAppearance@6();
    VAR
      ApprovalsMgmt@1002 : Codeunit 1535;
    BEGIN
      HasIncomingDocument := "Incoming Document Entry No." <> 0;
      SetExtDocNoMandatoryCondition;

      OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
      CanCancelApprovalForRecord := ApprovalsMgmt.CanCancelApprovalForRecord(RECORDID);

      CustomerSelected := "Sell-to Customer No." <> '';
    END;

    LOCAL PROCEDURE UpdatePaymentService@7();
    VAR
      PaymentServiceSetup@1000 : Record 1060;
    BEGIN
      PaymentServiceVisible := PaymentServiceSetup.IsPaymentServiceVisible;
      PaymentServiceEnabled := PaymentServiceSetup.CanChangePaymentService(Rec);
    END;

    LOCAL PROCEDURE UpdateShipToBillToGroupVisibility@9();
    BEGIN
      CASE TRUE OF
        ("Ship-to Code" = '') AND ShipToAddressEqualsSellToAddress:
          ShipToOptions := ShipToOptions::"Default (Sell-to Address)";
        ("Ship-to Code" = '') AND (NOT ShipToAddressEqualsSellToAddress):
          ShipToOptions := ShipToOptions::"Custom Address";
        "Ship-to Code" <> '':
          ShipToOptions := ShipToOptions::"Alternate Shipping Address";
      END;

      IF "Bill-to Customer No." = "Sell-to Customer No." THEN
        BillToOptions := BillToOptions::"Default (Customer)"
      ELSE
        BillToOptions := BillToOptions::"Another Customer";
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeStatisticsAction@1(VAR SalesHeader@1000 : Record 36;VAR Handled@1001 : Boolean);
    BEGIN
    END;

    BEGIN
    {
      NC TR266 EB выведены поля "Customer Posting Group", "Gen. Bus. Posting Group"
      NC TR272 DP Предпросмотр учета
      TDRANCS-1114
        Added Tabs Dimensions for Header and Lines
        Added subforms on tabs Dimensions
      -----
      NC NOS-26 ENK.
    }
    END.
  }
}

