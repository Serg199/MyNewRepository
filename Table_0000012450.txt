OBJECT Table 12450 Item Document Header
{
  OBJECT-PROPERTIES
  {
    Date=18.05.17;
    Time=18:14:16;
    Modified=Yes;
    Version List=NAVRU10.00,NOS-26;
  }
  PROPERTIES
  {
    DataCaptionFields=Document Type,No.;
    OnInsert=BEGIN
               InvtSetup.GET;
               IF "No." = '' THEN BEGIN
                 TestNoSeries;
                 NoSeriesMgt.InitSeries(GetNoSeriesCode,xRec."No. Series","Posting Date","No.","No. Series");
               END;
               InitRecord;

               DocSignMgt.SetDefaults(DATABASE::"Item Document Header","Document Type","No.");
             END;

    OnDelete=BEGIN
               DocSignMgt.DeleteDocSign(DATABASE::"Item Document Header","Document Type","No.");

               ItemDocLine.SETRANGE("Document Type","Document Type");
               ItemDocLine.SETRANGE("Document No.","No.");
               IF ItemDocLine.FIND('-') THEN
                 REPEAT
                   ItemDocLine.SuspendStatusCheck(TRUE);
                   ItemDocLine.DELETE(TRUE);
                 UNTIL ItemDocLine.NEXT = 0;
             END;

    OnRename=BEGIN
               ERROR(Text003,TABLECAPTION);
             END;

    CaptionML=[ENU=Item Document Header;
               RUS=Заголовок товарного документа];
    LookupPageID=Page12456;
  }
  FIELDS
  {
    { 1   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              RUS=Тип документа];
                                                   OptionCaptionML=[ENU=Receipt,Shipment;
                                                                    RUS=Приемка,Отгрузка];
                                                   OptionString=Receipt,Shipment }
    { 2   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  NoSeriesMgt.TestManual(GetNoSeriesCode);
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              RUS=Номер] }
    { 3   ;   ;Posting Description ;Text50        ;CaptionML=[ENU=Posting Description;
                                                              RUS=Описание учета] }
    { 5   ;   ;Document Date       ;Date          ;OnValidate=BEGIN
                                                                UpdateItemDocLines(FIELDNO("Document Date"));
                                                              END;

                                                   CaptionML=[ENU=Document Date;
                                                              RUS=Дата документа] }
    { 6   ;   ;Posting Date        ;Date          ;OnValidate=BEGIN
                                                                UpdateItemDocLines(FIELDNO("Posting Date"));
                                                              END;

                                                   CaptionML=[ENU=Posting Date;
                                                              RUS=Дата учета] }
    { 7   ;   ;Location Code       ;Code10        ;TableRelation=Location.Code WHERE (Use As In-Transit=CONST(No));
                                                   OnValidate=BEGIN
                                                                Location.GET("Location Code");
                                                                IF "Document Type" = "Document Type"::Receipt THEN
                                                                  Location.TESTFIELD("Require Receive",FALSE)
                                                                ELSE
                                                                  Location.TESTFIELD("Require Shipment",FALSE);
                                                                Location.TESTFIELD("Directed Put-away and Pick",FALSE);

                                                                UpdateItemDocLines(FIELDNO("Location Code"));
                                                              END;

                                                   CaptionML=[ENU=Location Code;
                                                              RUS=Код склада] }
    { 8   ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              RUS=Код ярлыка измерения 1];
                                                   CaptionClass='1,2,1' }
    { 9   ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              RUS=Код ярлыка измерения 2];
                                                   CaptionClass='1,2,2' }
    { 10  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=[ENU=Language Code;
                                                              RUS=Код языка] }
    { 11  ;   ;Salesperson/Purchaser Code;Code10  ;TableRelation=Salesperson/Purchaser;
                                                   OnValidate=BEGIN
                                                                CreateDim(
                                                                  DATABASE::"Salesperson/Purchaser","Salesperson/Purchaser Code");
                                                              END;

                                                   CaptionML=[ENU=Salesperson/Purchaser Code;
                                                              RUS=Код менеджера по продажам/закупкам] }
    { 12  ;   ;Receipt Comment     ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Inventory Comment Line" WHERE (Document Type=CONST(Item Receipt),
                                                                                                     No.=FIELD(No.)));
                                                   CaptionML=[ENU=Receipt Comment;
                                                              RUS=Комментарий к накладной];
                                                   Editable=No }
    { 13  ;   ;Shipment Comment    ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Inventory Comment Line" WHERE (Document Type=CONST(Item Shipment),
                                                                                                     No.=FIELD(No.)));
                                                   CaptionML=[ENU=Shipment Comment;
                                                              RUS=Комментарий к расх. накл.];
                                                   Editable=No }
    { 14  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              RUS=Серия номеров];
                                                   Editable=No }
    { 15  ;   ;Posting No. Series  ;Code10        ;TableRelation="No. Series";
                                                   OnValidate=BEGIN
                                                                IF "Posting No. Series" <> '' THEN BEGIN
                                                                  TestNoSeries;
                                                                  NoSeriesMgt.TestSeries(GetPostingNoSeriesCode,"Posting No. Series");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              WITH ItemDocHeader DO BEGIN
                                                                ItemDocHeader := Rec;
                                                                InvtSetup.GET;
                                                                TestNoSeries;
                                                                IF NoSeriesMgt.LookupSeries(GetPostingNoSeriesCode,"Posting No. Series") THEN
                                                                  VALIDATE("Posting No. Series");
                                                                Rec := ItemDocHeader;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Posting No. Series;
                                                              RUS=Учетная серия номеров] }
    { 16  ;   ;External Document No.;Code35       ;CaptionML=[ENU=External Document No.;
                                                              RUS=Номер внешнего документа] }
    { 17  ;   ;Whse. Adj. Bin Code ;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Location Code));
                                                   CaptionML=[ENU=Whse. Adj. Bin Code;
                                                              RUS=Корр. склада - код ячейки] }
    { 20  ;   ;Posting No.         ;Code20        ;CaptionML=[ENU=Posting No.;
                                                              RUS=Учетный номер] }
    { 21  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              RUS=Статус];
                                                   OptionCaptionML=[ENU=Open,Released;
                                                                    RUS=Открыто,Выпущено];
                                                   OptionString=Open,Released }
    { 23  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   OnValidate=BEGIN
                                                                UpdateItemDocLines(FIELDNO("Gen. Bus. Posting Group"));
                                                              END;

                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              RUS=Общая бизнес-группа] }
    { 27  ;   ;No. Printed         ;Integer       ;CaptionML=[ENU=No. Printed;
                                                              RUS=Число напечатанных];
                                                   Editable=No }
    { 30  ;   ;Correction          ;Boolean       ;CaptionML=[ENU=Correction;
                                                              RUS=Корректировка] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDocDim;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              RUS=Код набора измерений];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Document Type,No.                       ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ItemDocHeader@1210020 : Record 12450;
      ItemDocLine@1210019 : Record 12453;
      InvtSetup@1210004 : Record 313;
      Location@1470001 : Record 14;
      DimMgt@1470000 : Codeunit 408;
      Text003@1210002 : TextConst 'ENU=You cannot rename a %1.;RUS=Нельзя переименовать %1.';
      NoSeriesMgt@1210005 : Codeunit 396;
      DocSignMgt@1470003 : Codeunit 12420;
      HideValidationDialog@1210003 : Boolean;
      Text064@1210000 : TextConst 'ENU=You may have changed a dimension.\\Do you want to update the lines?;RUS=Вы, возможно, изменили измерение.\\Обновить строки?';

    PROCEDURE InitRecord@10();
    BEGIN
      CASE "Document Type" OF
        "Document Type"::Receipt:
          BEGIN
            IF ("No. Series" <> '') AND
               (InvtSetup."Item Receipt Nos." = InvtSetup."Posted Item Receipt Nos.")
            THEN
              "Posting No. Series" := "No. Series"
            ELSE
              IF "Posting No. Series" = '' THEN
                NoSeriesMgt.SetDefaultSeries("Posting No. Series",InvtSetup."Posted Item Receipt Nos.");
          END;
        "Document Type"::Shipment:
          BEGIN
            IF ("No. Series" <> '') AND
               (InvtSetup."Item Shipment Nos." = InvtSetup."Posted Item Shipment Nos.")
            THEN
              "Posting No. Series" := "No. Series"
            ELSE
              IF "Posting No. Series" = '' THEN
                NoSeriesMgt.SetDefaultSeries("Posting No. Series",InvtSetup."Posted Item Shipment Nos.");
          END;
      END;

      "Posting Description" := FORMAT("Document Type") + ' ' + "No.";

      IF "Posting No. Series" = '' THEN
        "Posting No. Series" := "No. Series";

      "Posting Date" := WORKDATE;
      "Document Date" := "Posting Date";
    END;

    PROCEDURE AssistEdit@2(OldItemDocHeader@1000 : Record 12450) : Boolean;
    BEGIN
      InvtSetup.GET;
      TestNoSeries;
      IF NoSeriesMgt.SelectSeries(GetNoSeriesCode,OldItemDocHeader."No. Series","No. Series") THEN BEGIN
        InvtSetup.GET;
        TestNoSeries;
        NoSeriesMgt.SetSeries("No.");
        EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE TestNoSeries@6();
    BEGIN
      CASE "Document Type" OF
        "Document Type"::Receipt:
          BEGIN
            InvtSetup.TESTFIELD("Item Receipt Nos.");
            InvtSetup.TESTFIELD("Posted Item Receipt Nos.");
          END;
        "Document Type"::Shipment:
          BEGIN
            InvtSetup.TESTFIELD("Item Shipment Nos.");
            InvtSetup.TESTFIELD("Posted Item Shipment Nos.");
          END;
      END;
    END;

    LOCAL PROCEDURE GetNoSeriesCode@9() : Code[10];
    BEGIN
      CASE "Document Type" OF
        "Document Type"::Receipt:
          EXIT(InvtSetup."Item Receipt Nos.");
        "Document Type"::Shipment:
          EXIT(InvtSetup."Item Shipment Nos.");
      END;
    END;

    LOCAL PROCEDURE GetPostingNoSeriesCode@8() : Code[10];
    BEGIN
      CASE "Document Type" OF
        "Document Type"::Receipt:
          EXIT(InvtSetup."Posted Item Receipt Nos.");
        "Document Type"::Shipment:
          EXIT(InvtSetup."Posted Item Shipment Nos.");
      END;
    END;

    PROCEDURE SetHideValidationDialog@14(NewHideValidationDialog@1000 : Boolean);
    BEGIN
      HideValidationDialog := NewHideValidationDialog;
    END;

    PROCEDURE DocLinesExist@3() : Boolean;
    BEGIN
      ItemDocLine.RESET;
      ItemDocLine.SETRANGE("Document Type","Document Type");
      ItemDocLine.SETRANGE("Document No.","No.");
      EXIT(ItemDocLine.FINDFIRST);
    END;

    PROCEDURE CreateDim@16(Type1@1000 : Integer;No1@1001 : Code[20]);
    VAR
      SourceCodeSetup@1010 : Record 242;
      OldDimSetID@1210000 : Integer;
      TableID@1011 : ARRAY [10] OF Integer;
      No@1012 : ARRAY [10] OF Code[20];
    BEGIN
      SourceCodeSetup.GET;
      TableID[1] := Type1;
      No[1] := No1;
      "Shortcut Dimension 1 Code" := '';
      "Shortcut Dimension 2 Code" := '';
      OldDimSetID := "Dimension Set ID";
      CASE "Document Type" OF
        "Document Type"::Receipt:
          "Dimension Set ID" :=
            DimMgt.GetDefaultDimID(
              TableID,No,SourceCodeSetup."Item Receipt","Shortcut Dimension 1 Code","Shortcut Dimension 2 Code",0,0);
        "Document Type"::Shipment:
          "Dimension Set ID" :=
            DimMgt.GetDefaultDimID(
              TableID,No,SourceCodeSetup."Item Shipment","Shortcut Dimension 1 Code","Shortcut Dimension 2 Code",0,0);
      END;

      IF (OldDimSetID <> "Dimension Set ID") AND DocLinesExist THEN BEGIN
        MODIFY;
        UpdateAllLineDim("Dimension Set ID",OldDimSetID);
      END;
    END;

    PROCEDURE ValidateShortcutDimCode@1210000(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    VAR
      OldDimSetID@1005 : Integer;
    BEGIN
      OldDimSetID := "Dimension Set ID";
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
      IF "No." <> '' THEN
        MODIFY;

      IF OldDimSetID <> "Dimension Set ID" THEN BEGIN
        MODIFY;
        IF DocLinesExist THEN
          UpdateAllLineDim("Dimension Set ID",OldDimSetID);
      END;
    END;

    LOCAL PROCEDURE UpdateItemDocLines@15(FieldRef@1000 : Integer);
    BEGIN
      ItemDocLine.LOCKTABLE;
      ItemDocLine.SETRANGE("Document Type","Document Type");
      ItemDocLine.SETRANGE("Document No.","No.");
      IF ItemDocLine.FINDSET(TRUE,FALSE) THEN BEGIN
        REPEAT
          CASE FieldRef OF
            FIELDNO("Location Code"):
              BEGIN
                ItemDocLine.VALIDATE("Location Code","Location Code");
                ItemDocLine.VALIDATE("Posting Date","Posting Date");
                ItemDocLine.VALIDATE("Document Date","Document Date");
              END;
            FIELDNO("Posting Date"):
              ItemDocLine.VALIDATE("Posting Date","Posting Date");
            FIELDNO("Document Date"):
              ItemDocLine.VALIDATE("Document Date","Document Date");
            FIELDNO("Gen. Bus. Posting Group"):
              ItemDocLine.VALIDATE("Gen. Bus. Posting Group","Gen. Bus. Posting Group");
          END;
          ItemDocLine.MODIFY(TRUE);
        UNTIL ItemDocLine.NEXT = 0;
      END;
    END;

    PROCEDURE ShowDocDim@1210001();
    VAR
      OldDimSetID@1000 : Integer;
    BEGIN
      OldDimSetID := "Dimension Set ID";
      DimMgt.SetObjectFrom(Rec); // NC NOS-26 SPA
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet2(
          "Dimension Set ID",STRSUBSTNO('%1 %2',"Document Type","No."),
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
      IF OldDimSetID <> "Dimension Set ID" THEN BEGIN
        MODIFY;
        IF DocLinesExist THEN
          UpdateAllLineDim("Dimension Set ID",OldDimSetID);
      END;
    END;

    LOCAL PROCEDURE UpdateAllLineDim@34(NewParentDimSetID@1000 : Integer;OldParentDimSetID@1001 : Integer);
    VAR
      NewDimSetID@1002 : Integer;
    BEGIN
      // Update all lines with changed dimensions.

      IF NewParentDimSetID = OldParentDimSetID THEN
        EXIT;
      IF NOT HideValidationDialog THEN
        IF NOT CONFIRM(Text064) THEN
          EXIT;

      ItemDocLine.RESET;
      ItemDocLine.SETRANGE("Document Type","Document Type");
      ItemDocLine.SETRANGE("Document No.","No.");
      ItemDocLine.LOCKTABLE;
      IF ItemDocLine.FIND('-') THEN
        REPEAT
          NewDimSetID := DimMgt.GetDeltaDimSetID(ItemDocLine."Dimension Set ID",NewParentDimSetID,OldParentDimSetID);
          IF ItemDocLine."Dimension Set ID" <> NewDimSetID THEN BEGIN
            ItemDocLine."Dimension Set ID" := NewDimSetID;
            DimMgt.UpdateGlobalDimFromDimSetID(
              ItemDocLine."Dimension Set ID",ItemDocLine."Shortcut Dimension 1 Code",ItemDocLine."Shortcut Dimension 2 Code");
            ItemDocLine.MODIFY;
          END;
        UNTIL ItemDocLine.NEXT = 0;
    END;

    BEGIN
    {
      NC NOS-26 SPA
    }
    END.
  }
}

