OBJECT Page 26550 Statutory Reports
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Statutory Reports;
               RUS=Регламентные отчеты];
    SourceTable=Table26550;
    DelayedInsert=Yes;
    PopulateAllFields=Yes;
    SourceTableView=SORTING(Sequence No.);
    PageType=List;
    OnAfterGetRecord=BEGIN
                       DescriptionIndent := 0;
                       CodeOnFormat;
                       DescriptionOnFormat;
                     END;

    OnInsertRecord=VAR
                     StatutoryReport@1210001 : Record 26550;
                     SequenceNo@1210000 : Integer;
                   BEGIN
                     StatutoryReport.SETCURRENTKEY("Sequence No.");

                     IF BelowxRec THEN BEGIN
                       IF StatutoryReport.FINDLAST THEN;
                       "Sequence No." := StatutoryReport."Sequence No." + 1;
                     END ELSE BEGIN
                       SequenceNo := xRec."Sequence No.";

                       StatutoryReport.SETFILTER("Sequence No.",'%1..',SequenceNo);
                       IF StatutoryReport.FIND('+') THEN
                         REPEAT
                           StatutoryReport."Sequence No." := StatutoryReport."Sequence No." + 1;
                           StatutoryReport.MODIFY;
                         UNTIL StatutoryReport.NEXT(-1) = 0;
                       "Sequence No." := SequenceNo;
                     END;
                   END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1210014 ;1   ;ActionGroup;
                      CaptionML=[ENU=&Setup;
                                 RUS=&Настройка];
                      Image=Setup }
      { 1210017 ;2   ;Action    ;
                      ShortCutKey=Ctrl+T;
                      CaptionML=[ENU=Tables;
                                 RUS=Таблицы];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 26552;
                      RunPageLink=Report Code=FIELD(Code);
                      Image=Table }
      { 1210009 ;2   ;Action    ;
                      ShortCutKey=Ctrl+G;
                      CaptionML=[ENU=Requisites Groups;
                                 RUS=Группы показателей];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 26556;
                      RunPageLink=Report Code=FIELD(Code);
                      Image=AdjustItemCost }
      { 1210005 ;2   ;Action    ;
                      ShortCutKey=Ctrl+E;
                      CaptionML=[ENU=XML Element Lines;
                                 RUS=Строки XML элемента];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 26587;
                      RunPageLink=Report Code=FIELD(Code);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=GetLines;
                      PromotedCategory=Process }
      { 1210015 ;2   ;Separator  }
      { 1210018 ;2   ;Action    ;
                      Name=Copy Report;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Report;
                                 RUS=Копировать отчет];
                      ApplicationArea=#Basic,#Suite;
                      Image=Copy;
                      OnAction=BEGIN
                                 CopyReport;
                               END;
                                }
      { 1210034 ;2   ;Separator  }
      { 1210035 ;2   ;Action    ;
                      Name=Export Report Settings;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Export Report Settings;
                                 RUS=Экспортировать настройки отчета];
                      ApplicationArea=#Basic,#Suite;
                      Image=Export;
                      OnAction=VAR
                                 StatutoryReport@1210000 : Record 26550;
                                 StatutoryReportMgt@1210001 : Codeunit 26550;
                               BEGIN
                                 CurrPage.SETSELECTIONFILTER(StatutoryReport);
                                 StatutoryReportMgt.ExportReportSettings(StatutoryReport);
                               END;
                                }
      { 1210036 ;2   ;Action    ;
                      Name=Import Report Settings;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Import Report Settings;
                                 RUS=Импортировать настройки отчета];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=No;
                      Image=Import;
                      OnAction=VAR
                                 StatutoryReportMgt@1210001 : Codeunit 26550;
                                 FileName@1210000 : Text;
                               BEGIN
                                 IF FileMgt.IsWebClient THEN
                                   UPLOAD(Text007,'','','',FileName)
                                 ELSE
                                   FileName := FileMgt.OpenFileDialog(Text007,'.xml',FileName);

                                 IF FileName <> '' THEN
                                   StatutoryReportMgt.ImportReportSettings(FileName);
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1210023 ;1   ;Action    ;
                      Name=Report Data;
                      CaptionML=[ENU=&Report Data;
                                 RUS=Данн&ые отчета];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 26562;
                      RunPageLink=Report Code=FIELD(Code);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=RegisteredDocs;
                      PromotedCategory=Process }
      { 1210024 ;1   ;Action    ;
                      Name=Export Log;
                      CaptionML=[ENU=Export &Log;
                                 RUS=Экспорт &журнала];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 26571;
                      RunPageLink=Report Code=FIELD(Code);
                      Promoted=No;
                      Image=ExportFile;
                      PromotedCategory=Process }
      { 1210010 ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 RUS=Фу&нкции];
                      Image=Action }
      { 1210016 ;2   ;Action    ;
                      Name=Create Report Data;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Create Report Data;
                                 RUS=&Сформировать данные отчета];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Report;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 StatutoryReport@1210001 : Record 26550;
                                 StatutoryReportDataHeader@1210017 : Record 26563;
                                 CreateReportData@1210016 : Page 26574;
                                 OKEIType@1210015 : '383,384,385';
                                 DocumentType@1210014 : 'Primary,Correction';
                                 PeriodType@1210013 : ' ,Month,Quarter,Year';
                                 DataSource@1210012 : 'Database,Excel';
                                 CorrNumber@1210011 : Integer;
                                 PeriodNo@1210010 : Integer;
                                 CreationDate@1210009 : Date;
                                 StartDate@1210008 : Date;
                                 EndDate@1210007 : Date;
                                 PeriodSign@1210006 : Code[2];
                                 FileName@1210004 : Text[250];
                                 DataDescription@1210003 : Text[250];
                                 PeriodName@1210002 : Text[30];
                               BEGIN
                                 CreateReportData.SetParameters(Code);
                                 IF CreateReportData.RUNMODAL <> ACTION::OK THEN
                                   EXIT;

                                 CreateReportData.GetParameters(
                                   CreationDate,StartDate,EndDate,DocumentType,OKEIType,CorrNumber,FileName,DataDescription,
                                   PeriodType,PeriodNo,PeriodSign,PeriodName,DataSource);

                                 IF (StartDate = 0D) AND (EndDate = 0D) THEN
                                   ERROR(StartEndDateErr);

                                 StatutoryReportDataHeader.CreateReportHeader(
                                   Rec,CreationDate,StartDate,EndDate,DocumentType,OKEIType,CorrNumber,DataDescription,PeriodNo,PeriodSign,PeriodName);

                                 StatutoryReport := Rec;
                                 StatutoryReport.ExportReportData(StatutoryReportDataHeader."No.",StartDate,EndDate,FileName,DataSource);
                               END;
                                }
      { 1210027 ;2   ;Separator  }
      { 1210028 ;2   ;Action    ;
                      Name=Move Up;
                      ShortCutKey=Shift+Ctrl+W;
                      CaptionML=[ENU=Move Up;
                                 RUS=Сдвинуть вверх];
                      ApplicationArea=#Basic,#Suite;
                      Image=MoveUp;
                      OnAction=BEGIN
                                 MoveUp;
                               END;
                                }
      { 1210029 ;2   ;Action    ;
                      Name=Move Down;
                      ShortCutKey=Shift+Ctrl+S;
                      CaptionML=[ENU=Move Down;
                                 RUS=Сдвинуть вниз];
                      ApplicationArea=#Basic,#Suite;
                      Image=MoveDown;
                      OnAction=BEGIN
                                 MoveDown;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1210000;1;Group     ;
                IndentationColumnName=DescriptionIndent;
                IndentationControls=Description;
                GroupType=Repeater }

    { 1210001;2;Field     ;
                ToolTipML=[ENU=Specifies the code for statutory reports.;
                           RUS=Определяет код для регламентных отчетов.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Code;
                Style=Strong;
                StyleExpr=CodeEmphasize }

    { 1210003;2;Field     ;
                ToolTipML=[ENU=Specifies the description associated with the statutory report.;
                           RUS=Определяет описание, связанное с регламентным отчетом.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description;
                Style=Strong;
                StyleExpr=DescriptionEmphasize }

    { 1210032;2;Field     ;
                ToolTipML=[ENU=Specifies the format version code associated with the statutory report.;
                           RUS=Определяет код версии формата, связанный с регламентным отчетом.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Format Version Code" }

    { 1210030;2;Field     ;
                ToolTipML=[ENU=Specifies the header associated with the statutory report.;
                           RUS=Определяет заголовок, связанный с регламентным отчетом.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Header }

    { 1210021;2;Field     ;
                ToolTipML=[ENU=Specifies the report type associated with the statutory report.;
                           RUS=Определяет тип отчета, связанный с регламентным отчетом.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Report Type" }

    { 1210019;2;Field     ;
                ToolTipML=[ENU=Specifies the sender number associated with the statutory report.;
                           RUS=Определяет номер отправителя, связанный с регламентным отчетом.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sender No." }

    { 1210007;2;Field     ;
                ToolTipML=[ENU=Specifies if the statutory report is active.;
                           RUS=Определяет, является ли регламентный отчет активным.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Active }

    { 1210025;2;Field     ;
                ToolTipML=[ENU=Specifies the ending date associated with the statutory report.;
                           RUS=Определяет дату окончания, связанную с регламентным отчетом.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ending Date" }

    { 1210033;2;Field     ;
                ToolTipML=[ENU=Specifies the recipient tax authority code associated with the statutory report.;
                           RUS=Определяет код налогового органа получателя, связанный с регламентным отчетом.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Recipient Tax Authority Code";
                LookupPageID=Tax Authorities }

    { 1210041;2;Field     ;
                ToolTipML=[ENU=Specifies the first four digits of the VAT registration number for the recipient tax authority code.;
                           RUS=Определяет первые четыре цифры ИНН для кода налогового органа получателя.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Recipient Tax Authority SONO" }

    { 1210043;2;Field     ;
                ToolTipML=[ENU=Specifies the administrative tax authority code associated with the statutory report.;
                           RUS=Определяет код административного налогового органа, связанный с регламентным отчетом.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Admin. Tax Authority Code" }

    { 1210045;2;Field     ;
                ToolTipML=[ENU=Specifies the first four digits of the VAT registration number for the administrative tax authority code.;
                           RUS=Определяет первые четыре цифры ИНН для кода административного налогового органа.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Admin. Tax Authority SONO" }

    { 1210006;2;Field     ;
                ToolTipML=[ENU=Specifies the company address code associated with the statutory report.;
                           RUS=Определяет код адреса компании, связанный с регламентным отчетом.];
                SourceExpr="Company Address Code";
                Visible=FALSE }

    { 1210047;2;Field     ;
                ToolTipML=[ENU=Specifies the company address language code associated with the statutory report.;
                           RUS=Определяет код языка адреса компании, связанный с регламентным отчетом.];
                SourceExpr="Company Address Language Code";
                Visible=FALSE }

    { 1210049;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Uppercase Text Excel Format" }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

  }
  CODE
  {
    VAR
      FileMgt@1210007 : Codeunit 419;
      StartEndDateErr@1210001 : TextConst 'ENU=You must specify Start Date or\and End Date.;RUS=Необходимо указать дату начала и\(или) дату окончания.';
      Text007@1210003 : TextConst 'ENU=Import;RUS=Импорт';
      CodeEmphasize@19004235 : Boolean INDATASET;
      DescriptionEmphasize@19010547 : Boolean INDATASET;
      DescriptionIndent@19057867 : Integer INDATASET;

    PROCEDURE MoveUp@1210000();
    VAR
      UpperStatutoryReport@1210000 : Record 26550;
      SequenceNo@1210001 : Integer;
    BEGIN
      UpperStatutoryReport.SETCURRENTKEY("Sequence No.");
      UpperStatutoryReport.SETFILTER("Sequence No.",'..%1',"Sequence No." - 1);
      IF UpperStatutoryReport.FINDLAST THEN BEGIN
        SequenceNo := UpperStatutoryReport."Sequence No.";
        UpperStatutoryReport."Sequence No." := "Sequence No.";
        UpperStatutoryReport.MODIFY;

        "Sequence No." := SequenceNo;
        MODIFY;
      END;
    END;

    PROCEDURE MoveDown@1210008();
    VAR
      LowerStatutoryReport@1210002 : Record 26550;
      SequenceNo@1210001 : Integer;
    BEGIN
      LowerStatutoryReport.SETCURRENTKEY("Sequence No.");
      LowerStatutoryReport.SETFILTER("Sequence No.",'%1..',"Sequence No." + 1);
      IF LowerStatutoryReport.FINDFIRST THEN BEGIN
        SequenceNo := LowerStatutoryReport."Sequence No.";
        LowerStatutoryReport."Sequence No." := "Sequence No.";
        LowerStatutoryReport.MODIFY;

        "Sequence No." := SequenceNo;
        MODIFY;
      END;
    END;

    LOCAL PROCEDURE CodeOnFormat@19037745();
    BEGIN
      CodeEmphasize := Header;
    END;

    LOCAL PROCEDURE DescriptionOnFormat@19023855();
    BEGIN
      IF Header THEN
        DescriptionIndent := 0
      ELSE
        DescriptionIndent := 1;

      DescriptionEmphasize := Header;
    END;

    BEGIN
    END.
  }
}

