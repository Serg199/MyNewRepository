OBJECT Codeunit 14946 FA-1 Report Helper
{
  OBJECT-PROPERTIES
  {
    Date=23.01.17;
    Time=12:00:00;
    Version List=NAVRU10.00.00.15052;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ExcelReportBuilderManager@1210000 : Codeunit 14930;
      StdRepMgt@1210001 : Codeunit 12401;
      LocMgt@1210007 : Codeunit 12400;
      SheetNo@1210002 : Integer;

    PROCEDURE InitReportTemplate@1210001();
    VAR
      FASetup@1210000 : Record 5603;
    BEGIN
      FASetup.GET;
      FASetup.TESTFIELD("FA-1 Template Code");
      ExcelReportBuilderManager.InitTemplate(FASetup."FA-1 Template Code");
    END;

    PROCEDURE SetReportHeaderSheet@1210011();
    BEGIN
      ExcelReportBuilderManager.SetSheet('Sheet1');
    END;

    PROCEDURE SetBodySectionSheet@1210014();
    BEGIN
      ExcelReportBuilderManager.SetSheet('Sheet2');
    END;

    PROCEDURE SetFooterSectionSheet@1210015();
    BEGIN
      ExcelReportBuilderManager.SetSheet('Sheet3');
    END;

    PROCEDURE FillHeader@1210000(OrgInfoArray@1210006 : ARRAY [9] OF Text;ReasonDocNo@1210004 : Text;ReasonDocDate@1210005 : Text;DocNo@1210000 : Text;DocDate@1210002 : Text;DepreciationStartingDate@1210003 : Text;DisposalDate@1210007 : Text;AcqCostAccount@1210008 : Text;DepreciationCode@1210009 : Text;DepreciationGroup@1210010 : Text;InventoryNumber@1210011 : Text;FactoryNo@1210012 : Text;FADescription@1210013 : Text;FALocationName@1210014 : Text;FAManufacturer@1210015 : Text;SuppInfo1@1210016 : Text;SuppInfo2@1210017 : Text);
    VAR
      CompanyInfo@1210001 : Record 79;
    BEGIN
      CompanyInfo.GET;
      ExcelReportBuilderManager.AddSection('REPORTHEADER');
      ExcelReportBuilderManager.AddDataToSection(
        'acquireCompanyName',StdRepMgt.GetCompanyName);
      ExcelReportBuilderManager.AddDataToSection(
        'acquireCompanyAddress',StdRepMgt.GetCompanyAddress);
      ExcelReportBuilderManager.AddDataToSection(
        'acquireBank',StdRepMgt.GetCompanyBank);
      ExcelReportBuilderManager.AddDataToSection(
        'acquireChiefName',CompanyInfo."Director Name");
      ExcelReportBuilderManager.AddDataToSection(
        'acquirecodeOKPO',CompanyInfo."OKPO Code");

      ExcelReportBuilderManager.AddDataToSection('deliverChiefPost',OrgInfoArray[1]);
      ExcelReportBuilderManager.AddDataToSection('deliverChiefName',OrgInfoArray[2]);
      ExcelReportBuilderManager.AddDataToSection('acquireChiefPost',OrgInfoArray[3]);
      ExcelReportBuilderManager.AddDataToSection('acquireDepartamentName',OrgInfoArray[4]);
      ExcelReportBuilderManager.AddDataToSection('deliverCompanyName',OrgInfoArray[5]);
      ExcelReportBuilderManager.AddDataToSection('deliverCompanyAddress',OrgInfoArray[6]);
      ExcelReportBuilderManager.AddDataToSection('deliverBank',COPYSTR(OrgInfoArray[7],1,75));
      ExcelReportBuilderManager.AddDataToSection('deliverDepartamentName',OrgInfoArray[8]);
      ExcelReportBuilderManager.AddDataToSection('Reason',OrgInfoArray[9]);
      ExcelReportBuilderManager.AddDataToSection('ReasonDocNo',ReasonDocNo);
      ExcelReportBuilderManager.AddDataToSection('ReasonDocDate',ReasonDocDate);
      ExcelReportBuilderManager.AddDataToSection('ActNumber',DocNo);
      ExcelReportBuilderManager.AddDataToSection('ActDate',DocDate);
      ExcelReportBuilderManager.AddDataToSection('DateToBusinessAccounting',DepreciationStartingDate);
      ExcelReportBuilderManager.AddDataToSection('DateFromBusinessAccounting',DisposalDate);
      ExcelReportBuilderManager.AddDataToSection('ControlAccount',AcqCostAccount);
      ExcelReportBuilderManager.AddDataToSection('DepreciationCode',DepreciationCode);
      ExcelReportBuilderManager.AddDataToSection('AssetGroup',DepreciationGroup);
      ExcelReportBuilderManager.AddDataToSection('AccountNum',InventoryNumber);
      ExcelReportBuilderManager.AddDataToSection('SerialNum',FactoryNo);
      ExcelReportBuilderManager.AddDataToSection('AssetName',FADescription);
      ExcelReportBuilderManager.AddDataToSection('AssetLocation',FALocationName);
      ExcelReportBuilderManager.AddDataToSection('Make',FAManufacturer);
      ExcelReportBuilderManager.AddDataToSection('SupplementalInfo1',SuppInfo1);
      ExcelReportBuilderManager.AddDataToSection('SupplementalInfo2',SuppInfo2);
    END;

    PROCEDURE FillDataPageHeader@1210016();
    VAR
      InvActLine@1210001 : Record 14909;
    BEGIN
      ExcelReportBuilderManager.AddSection('DATAPAGEHEADER');
    END;

    PROCEDURE FillCharPageHeader@1210017();
    VAR
      InvActLine@1210001 : Record 14909;
    BEGIN
      ExcelReportBuilderManager.AddSection('CHARPAGEHEADER');
    END;

    PROCEDURE FillDataLine@1210003(ManufacturingYear@1210000 : Text;InitialReleaseDate@1210001 : Text;LastMaintenanceDate@1210002 : Text;ActualUse@1210003 : Text;NoOfDeprMonths@1210004 : Text;Depreciation@1210005 : Decimal;BookValue@1210006 : Decimal;AcqCost@1210007 : Decimal;InitAcqCost@1210008 : Text;NewNoOfDeprMonths@1210009 : Text;DeprMethod@1210010 : Text;DepreciationRate@1210011 : Text;PrintFADeprBookLine@1210012 : Boolean);
    BEGIN
      IF NOT ExcelReportBuilderManager.TryAddSectionWithPlaceForFooter('DATABODY','OTHERCHARFOOTER') THEN BEGIN
        ExcelReportBuilderManager.AddPagebreak;
        FillDataPageHeader;
        ExcelReportBuilderManager.AddSection('DATABODY');
      END;

      IF PrintFADeprBookLine THEN BEGIN
        ExcelReportBuilderManager.AddDataToSection('OldGuaranteeDate',ManufacturingYear);
        ExcelReportBuilderManager.AddDataToSection('OldTransDate',InitialReleaseDate);
        ExcelReportBuilderManager.AddDataToSection('OldDateRevaluationLast',LastMaintenanceDate);
        ExcelReportBuilderManager.AddDataToSection('OldObservedLife',ActualUse);
        ExcelReportBuilderManager.AddDataToSection('OldUsefulLife',NoOfDeprMonths);
        ExcelReportBuilderManager.AddDataToSection('OldDepreciation',FORMAT(Depreciation));
        ExcelReportBuilderManager.AddDataToSection('OldDeprCost',FORMAT(BookValue));
        ExcelReportBuilderManager.AddDataToSection('OldAcquisitPrice',FORMAT(AcqCost));
      END;
      ExcelReportBuilderManager.AddDataToSection('NewAcquisitionPrice',InitAcqCost);
      ExcelReportBuilderManager.AddDataToSection('NewUsefulLife',NewNoOfDeprMonths);
      ExcelReportBuilderManager.AddDataToSection('NewDeprProfileName',DeprMethod);
      ExcelReportBuilderManager.AddDataToSection('NewDepreciationRate',DepreciationRate);
    END;

    PROCEDURE FillCharLine@1210004(Name@1210000 : Text;NomenclatureNo@1210001 : Text;UOMCode@1210002 : Code[10];Quantity@1210003 : Text;Mass@1210004 : Text);
    BEGIN
      IF NOT ExcelReportBuilderManager.TryAddSectionWithPlaceForFooter('CHARBODY','OTHERCHARFOOTER') THEN BEGIN
        ExcelReportBuilderManager.AddPagebreak;
        FillCharPageHeader;
        ExcelReportBuilderManager.AddSection('CHARBODY');
      END;

      ExcelReportBuilderManager.AddDataToSection('MetalName',Name);
      ExcelReportBuilderManager.AddDataToSection('MetalNo',NomenclatureNo);
      ExcelReportBuilderManager.AddDataToSection('MetalUOM',StdRepMgt.GetUoMDesc(UOMCode));
      ExcelReportBuilderManager.AddDataToSection('MetalQty',Quantity);
      ExcelReportBuilderManager.AddDataToSection('MetalMass',Mass);
    END;

    PROCEDURE FillCharPageFooter@1210012(Characteristics@1210000 : ARRAY [5] OF Text);
    VAR
      i@1210001 : Integer;
    BEGIN
      ExcelReportBuilderManager.AddSection('OTHERCHARFOOTER');

      FOR i := 1 TO ARRAYLEN(Characteristics) DO
        ExcelReportBuilderManager.AddDataToSection('Char' + FORMAT(i),Characteristics[i]);
    END;

    PROCEDURE FillReportFooter@1210013(Result1@1210004 : Text;Result2@1210005 : Text;ExtraWork1@1210006 : Text;ExtraWork2@1210007 : Text;Conclusion1@1210008 : Text;Conclusion2@1210009 : Text;Appendix1@1210010 : Text;Appendix2@1210011 : Text;Chairman@1210000 : Text;ChairmanName@1210001 : Text;Member1@1210002 : Text;Member1Name@1210003 : Text;Member2@1210018 : Text;Member2Name@1210017 : Text;Receiver@1210012 : Text;ReceiverName@1210013 : Text;StoredBy@1210014 : Text;StoredByName@1210015 : Text);
    VAR
      CompanyInfo@1210016 : Record 79;
    BEGIN
      CompanyInfo.GET;
      ExcelReportBuilderManager.AddSection('REPORTFOOTER');
      ExcelReportBuilderManager.AddDataToSection('Result1',Result1);
      ExcelReportBuilderManager.AddDataToSection('Result2',Result2);
      ExcelReportBuilderManager.AddDataToSection('ExtraWork1',ExtraWork1);
      ExcelReportBuilderManager.AddDataToSection('ExtraWork2',ExtraWork2);
      ExcelReportBuilderManager.AddDataToSection('Conclusion1',Conclusion1);
      ExcelReportBuilderManager.AddDataToSection('Conclusion2',Conclusion2);
      ExcelReportBuilderManager.AddDataToSection('Appendix1',Appendix1);
      ExcelReportBuilderManager.AddDataToSection('Appendix2',Appendix2);
      ExcelReportBuilderManager.AddDataToSection('Chairman',Chairman);
      ExcelReportBuilderManager.AddDataToSection('ChairmanName',ChairmanName);
      ExcelReportBuilderManager.AddDataToSection('Member1',Member1);
      ExcelReportBuilderManager.AddDataToSection('Member1Name',Member1Name);
      ExcelReportBuilderManager.AddDataToSection('Member2',Member2);
      ExcelReportBuilderManager.AddDataToSection('Member2Name',Member2Name);
      ExcelReportBuilderManager.AddDataToSection('Receiver',Receiver);
      ExcelReportBuilderManager.AddDataToSection('ReceiverName',ReceiverName);
      ExcelReportBuilderManager.AddDataToSection('NewEmplTitle',StoredBy);
      ExcelReportBuilderManager.AddDataToSection('NewEmplName',StoredByName);
      ExcelReportBuilderManager.AddDataToSection('NewChiefAccountantName',CompanyInfo."Accountant Name");
      ExcelReportBuilderManager.AddPagebreak;
    END;

    PROCEDURE ExportData@1210002();
    BEGIN
      ExcelReportBuilderManager.ExportData;
    END;

    PROCEDURE ExportDataFile@1210010(FileName@1210000 : Text);
    BEGIN
      ExcelReportBuilderManager.ExportDataToClientFile(FileName);
    END;

    PROCEDURE CheckSignature@1470002(VAR DocSign@1470000 : Record 12420;TableID@1210003 : Integer;DocType@1210001 : Option;DocNo@1210002 : Code[20];EmpType@1470001 : Integer);
    VAR
      DocSignMgt@1210000 : Codeunit 12420;
    BEGIN
      DocSignMgt.GetDocSign(
        DocSign,TableID,
        DocType,DocNo,EmpType,TRUE);
    END;

    PROCEDURE CheckPostedSignature@1210005(VAR DocSign@1470000 : Record 12421;TableID@1210003 : Integer;DocType@1210001 : Option;DocNo@1210002 : Code[20];EmpType@1470001 : Integer);
    VAR
      DocSignMgt@1210000 : Codeunit 12420;
    BEGIN
      DocSignMgt.GetPostedDocSign(
        DocSign,TableID,
        DocType,DocNo,EmpType,TRUE);
    END;

    PROCEDURE CalcActualUse@1210006(PostingDate@1210000 : Date;InitialReleaseDate@1210001 : Date) : Text[30];
    VAR
      LocalisationManagement@1210003 : Codeunit 12400;
      CalculateFrom@1210002 : Date;
    BEGIN
      IF InitialReleaseDate = 0D THEN
        CalculateFrom := PostingDate
      ELSE
        CalculateFrom := InitialReleaseDate;
      EXIT(COPYSTR(LocalisationManagement.GetPeriodDate(CalculateFrom,PostingDate,2),1,30));
    END;

    PROCEDURE CalcDepreciationRate@1210007(FADepreciationBook@1210000 : Record 5612) : Decimal;
    BEGIN
      WITH FADepreciationBook DO BEGIN
        IF "No. of Depreciation Years" <> 0 THEN
          EXIT(ROUND(100 / (12 * "No. of Depreciation Years"),0.01));
        EXIT("Straight-Line %");
      END;
    END;

    PROCEDURE IsPrintFADeprBookLine@1210008(FADepreciationBook@1210001 : Record 5612) : Boolean;
    BEGIN
      EXIT(FADepreciationBook.Depreciation <> 0);
    END;

    BEGIN
    END.
  }
}

