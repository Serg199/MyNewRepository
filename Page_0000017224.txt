OBJECT Page 17224 Tax Register (1.8) CV
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Tax Register (1.8) CV;
               RUS=Налог. регистр (1.8) КП];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table17210;
    DataCaptionExpr=FormTitle();
    SourceTableView=SORTING(Section Code,Register Type)
                    WHERE(Register Type=CONST(Credit Balance),
                          CV Credit Balance Amnt 2=FILTER(<>0));
    PageType=Worksheet;
    OnOpenPage=BEGIN
                 COPYFILTER("Date Filter",Calendar."Period End");
                 TaxRegMgt.SetPeriodAmountType(Calendar,DateFilterText,PeriodType,AmountType);
                 Calendar.RESET;
                 FILTERGROUP(2);
                 SectionCode := GETRANGEMIN("Section Code");
                 FILTERGROUP(0);
                 ShowNewData;
               END;

    OnFindRecord=BEGIN
                   IF DateFilterText <> GETFILTER("Date Filter") THEN
                     ShowNewData;

                   EXIT(FIND(Which));
                 END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 13      ;1   ;Action    ;
                      CaptionML=[ENU=Previous Period;
                                 RUS=Предыдущий период];
                      ToolTipML=[ENU=Previous Period;
                                 RUS=Предыдущий период];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('<=');
                               END;
                                }
      { 12      ;1   ;Action    ;
                      CaptionML=[ENU=Next Period;
                                 RUS=Следующий период];
                      ToolTipML=[ENU=Next Period;
                                 RUS=Следующий период];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('>=');
                               END;
                                }
      { 7       ;1   ;Action    ;
                      CaptionML=[ENU=Create Closing Entries;
                                 RUS=Создать закрывающие операции];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=CreateDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CreateGenJnlLine;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=No.;
                           RUS=Номер];
                ToolTipML=[ENU=Specifies the creditor or debtor number associated with the tax register debtor or creditor entry.;
                           RUS=Определяет номер кредитора или дебитора, связанный с операцией кредитора или дебитора налогового регистра.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="C/V No." }

    { 4   ;2   ;Field     ;
                CaptionML=[ENU=Name;
                           RUS=Название];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ObjectName }

    { 36  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the creditor or debtor credit balance amount associated with the tax register debtor or creditor entry.;
                           RUS=Определяет сумму кредитного сальдо дебитора или кредитора, связанную с операцией дебитора или кредитора налогового регистра.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="CV Credit Balance Amnt 2";
                OnDrillDown=BEGIN
                              DrillDownCVLedgerAmount(FilterDueDate3Years,FALSE,TRUE);
                            END;
                             }

    { 22  ;1   ;Field     ;
                ToolTipML=[ENU=Month;
                           RUS=Месяц];
                OptionCaptionML=[ENU=,,Month,Quarter,Year;
                                 RUS=,,Месяц,Квартал,Год];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             FindPeriod('');
                           END;
                            }

  }
  CODE
  {
    VAR
      Calendar@1000 : Record 2000000007;
      TaxRegMgt@1001 : Codeunit 17201;
      AmountType@1002 : 'Current Period,Tax Period';
      FilterDueDate3Years@1003 : Text[30];
      DateFilterText@1004 : Text;
      PeriodType@1005 : ',,Month,Quarter,Year';
      SectionCode@1006 : Code[10];

    LOCAL PROCEDURE FindPeriod@1(SearchText@1000 : Code[10]);
    BEGIN
      IF GETFILTER("Date Filter") <> '' THEN BEGIN
        Calendar."Period End" := GETRANGEMAX("Date Filter");
        IF NOT TaxRegMgt.FindDate('',Calendar,PeriodType,AmountType::"Tax Period") THEN
          TaxRegMgt.FindDate('',Calendar,PeriodType::Month,AmountType::"Tax Period");
      END;
      TaxRegMgt.FindDate(SearchText,Calendar,PeriodType,AmountType::"Tax Period");

      SETFILTER("Date Filter",'..%1',Calendar."Period End");
    END;

    PROCEDURE ShowNewData@2();
    VAR
      UsingDate@1000 : Date;
    BEGIN
      IF GETFILTER("Date Filter") = '' THEN
        UsingDate := CALCDATE('<CM-1M>',WORKDATE)
      ELSE
        UsingDate := GETRANGEMAX("Date Filter");

      SETRANGE("Ending Date",UsingDate);
      SETFILTER("Date Filter",'..%1',UsingDate);
      DateFilterText := GETFILTER("Date Filter");

      TaxRegMgt.CalcCreditBalancePointDate(SectionCode,GETRANGEMAX("Date Filter"),FilterDueDate3Years);
    END;

    PROCEDURE CreateGenJnlLine@3();
    VAR
      CreateClosingGenJnlLine@1000 : Report 17201;
    BEGIN
      CreateClosingGenJnlLine.SetSearching("Section Code","Ending Date",FALSE,FilterDueDate3Years);
      CreateClosingGenJnlLine.RUNMODAL;
    END;

    BEGIN
    END.
  }
}

