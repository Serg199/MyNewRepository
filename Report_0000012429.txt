OBJECT Report 12429 Calc. Recurring Journal
{
  OBJECT-PROPERTIES
  {
    Date=10.04.17;
    Time=13:37:29;
    Modified=Yes;
    Version List=NAVRU10.00,NOS-26;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Calc. Recurring Journal;
               RUS=Расчет типовых журналов];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF StartingDate = 0D THEN
                    ERROR(Text001);

                  IF EndingDate = 0D THEN
                    ERROR(Text002);
                END;

  }
  DATASET
  {
    { 7024;    ;DataItem;                    ;
               DataItemTable=Table81;
               DataItemTableView=SORTING(Journal Template Name,Journal Batch Name,Line No.);
               OnPreDataItem=BEGIN
                               COPYFILTERS(GenJournalLine);
                               FILTERGROUP(2);
                               IF (GETFILTER("Journal Template Name") = '') OR (GETFILTER("Journal Batch Name") = '') THEN
                                 ERROR(Text000);
                               FILTERGROUP(0);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF ("Acc. Schedule Name" <> '') AND ("Column Layout Name" <> '') THEN BEGIN
                                    AccScheduleName.GET("Acc. Schedule Name");
                                    IF AccScheduleName."Analysis View Name" <> '' THEN
                                      AnalysisView.GET(AccScheduleName."Analysis View Name");
                                    AccScheduleLine.GET("Acc. Schedule Name","Acc. Schedule Line No.");
                                    AccScheduleLine.SETRANGE("Date Filter",StartingDate,EndingDate);
                                    ColumnLayout.GET("Column Layout Name","Column Layout Line No.");
                                    VALIDATE(Amount,
                                    //NC NOS-26 > SPA
                                    //AccSchedManagement.CalcCell(AccScheduleLine,ColumnLayout,FALSE)
                                    AccSchedManagement.CalcCell(AccScheduleLine,ColumnLayout,FALSE,FALSE,0)
                                    //NC NOS-26 < SPA
                                    );
                                    MODIFY;
                                  END
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      InsertAllowed=No;
      DeleteAllowed=No;
      ModifyAllowed=No;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             RUS=Параметры] }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Starting Date;
                             RUS=Дата начала];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=StartingDate }

      { 9   ;2   ;Field     ;
                  CaptionML=[ENU=Ending Date;
                             RUS=Дата окончания];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=EndingDate }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1210013 : TextConst 'ENU=Your must define Template Name and Batch Name for calculation.;RUS=Необходимо определить имя шаблона и код раздела для расчета.';
      GenJournalLine@1210007 : Record 81;
      AccScheduleName@1210006 : Record 84;
      AccScheduleLine@1210001 : Record 85;
      ColumnLayout@1210000 : Record 334;
      AnalysisView@1210008 : Record 363;
      AccSchedManagement@1210002 : Codeunit 8;
      StartingDate@1210018 : Date;
      EndingDate@1210017 : Date;
      Text001@1210003 : TextConst 'ENU=You must define Starting Date.;RUS=Необходимо определить дату начала.';
      Text002@1210004 : TextConst 'ENU=You must define Ending Date.;RUS=Необходимо определить дату окончания.';

    PROCEDURE SetParameters@1210000(VAR NewGenJournalLine@1210000 : Record 81);
    VAR
      NewDateFormula@1210001 : Text[30];
    BEGIN
      GenJournalLine.COPYFILTERS(NewGenJournalLine);
      NewGenJournalLine.TESTFIELD("Recurring Frequency");
      EndingDate := NewGenJournalLine."Posting Date";
      NewDateFormula := '- (' + FORMAT(NewGenJournalLine."Recurring Frequency") + ')';
      StartingDate := CALCDATE(NewDateFormula,EndingDate) + 1;
    END;

    BEGIN
    {
      NC NOS-26 SPA Изменения при миграции
    }
    END.
  }
  RDLDATA
  {
  }
}

