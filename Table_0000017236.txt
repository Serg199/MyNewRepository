OBJECT Table 17236 Tax Register Setup
{
  OBJECT-PROPERTIES
  {
    Date=09.09.14;
    Time=12:00:00;
    Version List=NAVRU8.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TaxRegTemplate.GenerateProfile;
               TaxRegTermName.GenerateProfile;
             END;

    OnModify=BEGIN
               TaxRegTemplate.GenerateProfile;
               TaxRegTermName.GenerateProfile;
             END;

    CaptionML=[ENU=Tax Register Setup;
               RUS=Настройка налоговых регистров];
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=[ENU=Primary Key;
                                                              RUS=Первичный ключ] }
    { 2   ;   ;Condition Dimension Code;Code20    ;TableRelation=Dimension;
                                                   CaptionML=[ENU=Condition Dimension Code;
                                                              RUS=Условие - код измерения] }
    { 3   ;   ;Kind Dimension Code ;Code20        ;TableRelation=Dimension;
                                                   CaptionML=[ENU=Kind Dimension Code;
                                                              RUS=Вид - код измерения] }
    { 4   ;   ;Create Acquis. FA Tax Ledger;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Create Acquis. FA Tax Ledger" = FALSE THEN BEGIN
                                                                  "Create Reclass. FA Tax Ledger" := FALSE;
                                                                  "Create Disposal FA Tax Ledger" := FALSE;
                                                                END ELSE
                                                                  IF "Tax Depreciation Book" <> '' THEN BEGIN
                                                                    DepreciationBook.GET("Tax Depreciation Book");
                                                                    DepreciationBook.TESTFIELD("G/L Integration - Acq. Cost",FALSE);
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=Create Acquis. FA Tax Ledger;
                                                              RUS=Создавать приобр. ОС в НУ] }
    { 5   ;   ;Tax Depreciation Book;Code10       ;TableRelation="Depreciation Book";
                                                   CaptionML=[ENU=Tax Depreciation Book;
                                                              RUS=Книга амортизации для налогового учета] }
    { 6   ;   ;Create Reclass. FA Tax Ledger;Boolean;
                                                   CaptionML=[ENU=Create Reclass. FA Tax Ledger;
                                                              RUS=Создавать рекласс. ОС в НУ] }
    { 7   ;   ;Create Disposal FA Tax Ledger;Boolean;
                                                   OnValidate=BEGIN
                                                                TESTFIELD("Use Group Depr. Method from",0D);
                                                                IF "Create Disposal FA Tax Ledger" THEN
                                                                  IF "Tax Depreciation Book" <> '' THEN BEGIN
                                                                    DepreciationBook.GET("Tax Depreciation Book");
                                                                    DepreciationBook.TESTFIELD("G/L Integration - Disposal",FALSE);
                                                                  END;
                                                              END;

                                                   CaptionML=[ENU=Create Disposal FA Tax Ledger;
                                                              RUS=Создавать реализацию ОС в НУ] }
    { 8   ;   ;Create Acquis. FE Tax Ledger;Boolean;
                                                   CaptionML=[ENU=Create Acquis. FE Tax Ledger;
                                                              RUS=Создавать РБП по приобр. в НУ] }
    { 12400;  ;Sales VAT Ledg. Template Code;Code10;
                                                   TableRelation="Excel Template";
                                                   CaptionML=[ENU=Sales VAT Ledg. Template Code;
                                                              RUS=Код шаблона книги продажи НДС] }
    { 12401;  ;Sales Add. Sheet Templ. Code;Code10;TableRelation="Excel Template";
                                                   CaptionML=[ENU=Sales Add. Sheet Templ. Code;
                                                              RUS=Код шабл. доп. листа продаж] }
    { 12402;  ;Purch. VAT Ledg. Template Code;Code10;
                                                   TableRelation="Excel Template";
                                                   CaptionML=[ENU=Purch. VAT Ledg. Template Code;
                                                              RUS=Код шаблона книги покуп. НДС] }
    { 12403;  ;Purch. Add. Sheet Templ. Code;Code10;
                                                   TableRelation="Excel Template";
                                                   CaptionML=[ENU=Purch. Add. Sheet Templ. Code;
                                                              RUS=Код шабл. доп. листа покуп.] }
    { 12404;  ;VAT Iss./Rcvd. Jnl. Templ Code;Code10;
                                                   TableRelation="Excel Template";
                                                   CaptionML=[ENU=VAT Iss./Rcvd. Jnl. Templ Code;
                                                              RUS=Код шабл. журнала выдачи/приема НДС] }
    { 12405;  ;Tax Register Template Code;Code10  ;TableRelation="Excel Template";
                                                   CaptionML=[ENU=Tax Register Template Code;
                                                              RUS=Код шаблона налогового регистра] }
    { 17200;  ;Future Exp. Depreciation Book;Code10;
                                                   TableRelation="Depreciation Book";
                                                   CaptionML=[ENU=Future Exp. Depreciation Book;
                                                              RUS=Расх. буд. пер. - книга аморт.] }
    { 17201;  ;Rel. Act as Depr. Bonus Base;Boolean;
                                                   CaptionML=[ENU=Rel. Act as Depr. Bonus Base;
                                                              RUS=Вкл. акт ввода в эксп. в расчет аморт. премии] }
    { 17202;  ;Default Depr. Bonus %;Decimal      ;CaptionML=[ENU=Default Depr. Bonus %;
                                                              RUS=Аморт. премия по умолчанию (%)];
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 17214;  ;Use Group Depr. Method from;Date   ;OnValidate=BEGIN
                                                                IF "Use Group Depr. Method from" <> 0D THEN BEGIN
                                                                  IF (DATE2DMY("Use Group Depr. Method from",1) <> 1) OR
                                                                     (DATE2DMY("Use Group Depr. Method from",2) <> 1)
                                                                  THEN
                                                                    ERROR(Text001,FIELDCAPTION("Use Group Depr. Method from"));
                                                                  TESTFIELD("Calculate TD for each FA",FALSE);
                                                                  DepreciationBook.RESET;
                                                                  DepreciationBook.SETRANGE("Control FA Acquis. Cost",TRUE);
                                                                  IF DepreciationBook.FINDFIRST THEN
                                                                    DepreciationBook.FIELDERROR("Control FA Acquis. Cost");
                                                                END ELSE BEGIN
                                                                  "Min. Group Balance" := 0;
                                                                  "Write-off in Charges" := FALSE;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Use Group Depr. Method from;
                                                              RUS=Использ. метод групповой аморт. из] }
    { 17215;  ;Min. Group Balance  ;Decimal       ;CaptionML=[ENU=Min. Group Balance;
                                                              RUS=Миним. баланс по группе];
                                                   MinValue=0 }
    { 17216;  ;Write-off in Charges;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Write-off in Charges;
                                                              RUS=Списание в расходы] }
    { 17218;  ;Calculate TD for each FA;Boolean   ;OnValidate=BEGIN
                                                                IF "Calculate TD for each FA" THEN
                                                                  TESTFIELD("Use Group Depr. Method from",0D);
                                                              END;

                                                   CaptionML=[ENU=Calculate TD for each FA;
                                                              RUS=Вычислять нал. разн. для каждого ОС] }
    { 17220;  ;Depr. Bonus TD Code ;Code10        ;TableRelation="Tax Difference" WHERE (Type=CONST(Temporary),
                                                                                         Depreciation Bonus=CONST(Yes));
                                                   CaptionML=[ENU=Depr. Bonus TD Code;
                                                              RUS=Код нал. разн. по аморт. премии] }
    { 17222;  ;Default FA TD Code  ;Code10        ;TableRelation="Tax Difference" WHERE (Source Code Mandatory=CONST(Yes),
                                                                                         Depreciation Bonus=CONST(No));
                                                   CaptionML=[ENU=Default FA TD Code;
                                                              RUS=Код нал. разн. ОС по умолчанию] }
    { 17223;  ;Depr. Bonus Recovery from;Date     ;CaptionML=[ENU=Depr. Bonus Recovery from;
                                                              RUS=Восстановление аморт. премии c] }
    { 17224;  ;Depr. Bonus Recov. Per. (Year);Integer;
                                                   CaptionML=[ENU=Depr. Bonus Recov. Per. (Year);
                                                              RUS=Период восстановл. аморт. премии (лет)];
                                                   MinValue=1 }
    { 17225;  ;Disposal TD Code    ;Code10        ;TableRelation="Tax Difference" WHERE (Source Code Mandatory=CONST(Yes),
                                                                                         Depreciation Bonus=CONST(No),
                                                                                         Type=CONST(Constant));
                                                   CaptionML=[ENU=Disposal TD Code;
                                                              RUS=Код нал. разн. при реализации] }
    { 17226;  ;Depr. Bonus Recovery TD Code;Code10;TableRelation="Tax Difference" WHERE (Source Code Mandatory=CONST(Yes),
                                                                                         Depreciation Bonus=CONST(No),
                                                                                         Type=CONST(Constant));
                                                   CaptionML=[ENU=Depr. Bonus Recovery TD Code;
                                                              RUS=Код нал.разн. для восстановл. аморт.премии] }
    { 17227;  ;Create Data for Printing Forms;Boolean;
                                                   CaptionML=[ENU=Create Data for Printing Forms;
                                                              RUS=Создать данные для печати форм] }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      TaxRegTemplate@1001 : Record 17202;
      TaxRegTermName@1002 : Record 17204;
      Text001@1210000 : TextConst 'ENU=Only 1 of January can be specified in the %1.;RUS=В %1 можно указать только 1 января.';
      DepreciationBook@1210001 : Record 5611;

    PROCEDURE GetDimCode@1210000(Type@1210000 : 'Condition,Kind') DimCode : Code[20];
    BEGIN
      GET;
      CASE Type OF
        Type::Condition:
          BEGIN
            TESTFIELD("Condition Dimension Code");
            DimCode := "Condition Dimension Code";
          END;
        Type::Kind:
          BEGIN
            TESTFIELD("Kind Dimension Code");
            DimCode := "Kind Dimension Code";
          END;
      END;
    END;

    BEGIN
    END.
  }
}

