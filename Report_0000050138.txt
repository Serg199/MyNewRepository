OBJECT Report 50138 LoadOpenCVEntry
{
  OBJECT-PROPERTIES
  {
    Date=27.03.17;
    Time=14:18:13;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF COMPANYNAME<>'TD Investments R' THEN CurrReport.QUIT;

                  OldCompanyName :='TD Investments';

                  LineMin := 0;
                  LineMax := 0;
                  BalAmt :=0.01;

                  GJLine.RESET;
                  GJLine.CHANGECOMPANY(NewCompanyName);
                  GJLine.SETRANGE("Journal Template Name", Template);
                  GJLine.SETRANGE("Journal Batch Name", Batch);

                  LineNo := 0;

                  IF GJLine.FINDLAST THEN
                    LineNo := GJLine."Line No.";

                  IF LineNo =0 THEN
                    IsZeroLineMin := TRUE;

                  GLSetup.CHANGECOMPANY(OldCompanyName);
                  GLSetup.GET;

                  GLSetup1.GET;
                  GJTemplate.GET(Template);
                  GJBatch.GET(Template, Batch);

                  dlgIndicator.OPEN(Text002);
                END;

    OnPostReport=BEGIN
                   dlgIndicator.CLOSE;
                 END;

  }
  DATASET
  {
    { 5880;    ;DataItem;CustLE              ;
               DataItemTable=Table21;
               DataItemTableView=SORTING(Entry No.)
                                 ORDER(Ascending);
               OnPreDataItem=BEGIN
                               CustLE.CHANGECOMPANY(OldCompanyName);
                               LedgerDim.CHANGECOMPANY(OldCompanyName);
                               CustLE.SETFILTER("Posting Date",'..%1',BalanceDate);
                               CustLE.SETFILTER("Date Filter",'..%1',BalanceDate);
                               intIndicatorTotal :=CustLE.COUNT;
                               intIndicatorCounter := 0;
                             END;

               OnAfterGetRecord=BEGIN
                                  CVLedgEntryBuf.DELETEALL;
                                  intIndicatorCounter += 1;
                                  dlgIndicator.UPDATE(1, ROUND((intIndicatorCounter * 999) / intIndicatorTotal*9, 1));
                                  CustLE.CALCFIELDS("Remaining Amount");
                                  IF ABS(CustLE."Remaining Amount")= BalAmt THEN BEGIN
                                    LedgerDim.RESET;
                                    LedgerDim.SETRANGE("Table ID", 21);
                                    TransferCustLedgEntry(CVLedgEntryBuf,CustLE);
                                    CreateGenJnlLines(CVType::Customer,CVLedgEntryBuf,LedgerDim);
                                  END;
                                END;
                                 }

    { 7881;    ;DataItem;VendLE              ;
               DataItemTable=Table25;
               DataItemTableView=SORTING(Entry No.)
                                 ORDER(Ascending);
               OnPreDataItem=BEGIN
                               VendLE.CHANGECOMPANY(OldCompanyName);
                               LedgerDim.CHANGECOMPANY(OldCompanyName);

                               VendLE.SETFILTER("Posting Date",'..%1',BalanceDate);
                               VendLE.SETFILTER("Date Filter",'..%1',BalanceDate);
                               intIndicatorTotal :=VendLE.COUNT;
                               intIndicatorCounter := 0;
                             END;

               OnAfterGetRecord=BEGIN
                                  CVLedgEntryBuf.DELETEALL;
                                  intIndicatorCounter += 1;
                                  dlgIndicator.UPDATE(1, ROUND((intIndicatorCounter * 999) / intIndicatorTotal*9, 1));
                                  VendLE.CALCFIELDS("Remaining Amount");
                                  IF ABS(VendLE."Remaining Amount")= BalAmt THEN BEGIN
                                    LedgerDim.RESET;
                                    LedgerDim.SETRANGE("Table ID", 25);
                                    TransferVendLedgEntry(CVLedgEntryBuf,VendLE);
                                    CreateGenJnlLines(CVType::Vendor,CVLedgEntryBuf,LedgerDim);
                                  END;
                                END;
                                 }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      BalanceDate@1000000000 : Date;
      GJLine@1000000001 : Record 81;
      LineNo@1000000002 : Integer;
      IsZeroLineMin@1000000003 : Boolean;
      Text002@1000000004 : TextConst 'ENU=Unloading General Ledger Entry...\Processing @1@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;RUS=Обработка Книги Операций...\Выполнено @1@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@';
      GJTemplate@1000000012 : Record 80;
      GJBatch@1000000011 : Record 232;
      CVType@1000000010 : 'Customer,Vendor';
      dlgIndicator@1000000009 : Dialog;
      intIndicatorCounter@1000000008 : Integer;
      intIndicatorTotal@1000000007 : Integer;
      LineMin@1000000006 : Integer;
      LineMax@1000000005 : Integer;
      Template@1000000014 : Code[10];
      Batch@1000000013 : Code[10];
      CVLedgEntryBuf@1000000015 : Record 382;
      LedgerDim@1000000016 : Record 355;
      NewCompanyName@1000000017 : Text[30];
      GLSetup@1000000018 : Record 98;
      GLSetup1@1000000019 : Record 98;
      CurrencyExchangeRate@1000000020 : Record 330;
      OldCompanyName@1000000021 : Text[30];
      BalAmt@1000000022 : Decimal;

    PROCEDURE TransferVendLedgEntry@5(VAR CVLedgEntryBuf@1000 : Record 382;VAR VendLedgEntry@1001 : Record 25);
    BEGIN
        VendLedgEntry.CALCFIELDS(Amount, "Remaining Amount", "Amount (LCY)", "Remaining Amt. (LCY)");
        CVLedgEntryBuf."Entry No." := VendLedgEntry."Entry No.";
        CVLedgEntryBuf."CV No." := VendLedgEntry."Vendor No.";
        CVLedgEntryBuf."Posting Date" := VendLedgEntry."Posting Date";
        CVLedgEntryBuf."Document Type" := VendLedgEntry."Document Type";
        CVLedgEntryBuf."Document No." := VendLedgEntry."Document No.";
        CVLedgEntryBuf.Description := VendLedgEntry.Description;
        CVLedgEntryBuf."Currency Code" := VendLedgEntry."Currency Code";
        CVLedgEntryBuf.Amount := VendLedgEntry.Amount;
        CVLedgEntryBuf."Remaining Amount" := VendLedgEntry."Remaining Amount";
        CVLedgEntryBuf."Original Amount" := VendLedgEntry."Original Amount";
        CVLedgEntryBuf."Original Amt. (LCY)" := VendLedgEntry."Original Amt. (LCY)";
        CVLedgEntryBuf."Remaining Amt. (LCY)" := VendLedgEntry."Remaining Amt. (LCY)";
        CVLedgEntryBuf."Amount (LCY)" := VendLedgEntry."Amount (LCY)";
        CVLedgEntryBuf."Sales/Purchase (LCY)" := VendLedgEntry."Purchase (LCY)";
        CVLedgEntryBuf."Inv. Discount (LCY)" := VendLedgEntry."Inv. Discount (LCY)";
        CVLedgEntryBuf."Bill-to/Pay-to CV No." := VendLedgEntry."Buy-from Vendor No.";
        CVLedgEntryBuf."CV Posting Group" := VendLedgEntry."Vendor Posting Group";
        CVLedgEntryBuf."Global Dimension 1 Code" := VendLedgEntry."Global Dimension 1 Code";
        CVLedgEntryBuf."Global Dimension 2 Code" := VendLedgEntry."Global Dimension 2 Code";
        CVLedgEntryBuf."Salesperson Code" := VendLedgEntry."Purchaser Code";
        CVLedgEntryBuf."User ID" := VendLedgEntry."User ID";
        CVLedgEntryBuf."Source Code" := VendLedgEntry."Source Code";
        CVLedgEntryBuf."On Hold" := VendLedgEntry."On Hold";
        CVLedgEntryBuf."Applies-to Doc. Type" := VendLedgEntry."Applies-to Doc. Type";
        CVLedgEntryBuf."Applies-to Doc. No." := VendLedgEntry."Applies-to Doc. No.";
        CVLedgEntryBuf.Open := VendLedgEntry.Open;
        CVLedgEntryBuf."Due Date" := VendLedgEntry."Due Date" ;
        CVLedgEntryBuf."Pmt. Discount Date" := VendLedgEntry."Pmt. Discount Date";
        CVLedgEntryBuf."Original Pmt. Disc. Possible" := VendLedgEntry."Original Pmt. Disc. Possible";
        CVLedgEntryBuf."Remaining Pmt. Disc. Possible" := VendLedgEntry."Remaining Pmt. Disc. Possible";
        CVLedgEntryBuf."Pmt. Disc. Given (LCY)" := VendLedgEntry."Pmt. Disc. Rcd.(LCY)";
        CVLedgEntryBuf.Positive := VendLedgEntry.Positive;
        CVLedgEntryBuf."Closed by Entry No." := VendLedgEntry."Closed by Entry No.";
        CVLedgEntryBuf."Closed at Date" := VendLedgEntry."Closed at Date";
        CVLedgEntryBuf."Closed by Amount" := VendLedgEntry."Closed by Amount";
        CVLedgEntryBuf."Applies-to ID" := VendLedgEntry."Applies-to ID";
        CVLedgEntryBuf."Journal Batch Name" := VendLedgEntry."Journal Batch Name";
        CVLedgEntryBuf."Reason Code" := VendLedgEntry."Reason Code";
        CVLedgEntryBuf."Bal. Account Type" := VendLedgEntry."Bal. Account Type";
        CVLedgEntryBuf."Bal. Account No." := VendLedgEntry."Bal. Account No.";
        CVLedgEntryBuf."Transaction No." := VendLedgEntry."Transaction No.";
        CVLedgEntryBuf."Closed by Amount (LCY)" := VendLedgEntry."Closed by Amount (LCY)";
        CVLedgEntryBuf."Debit Amount" := VendLedgEntry."Debit Amount";
        CVLedgEntryBuf."Credit Amount" := VendLedgEntry."Credit Amount";
        CVLedgEntryBuf."Debit Amount (LCY)" := VendLedgEntry."Debit Amount (LCY)";
        CVLedgEntryBuf."Credit Amount (LCY)" := VendLedgEntry."Credit Amount (LCY)";
        CVLedgEntryBuf."Document Date" := VendLedgEntry."Document Date";
        CVLedgEntryBuf."External Document No." := VendLedgEntry."External Document No.";
        CVLedgEntryBuf."No. Series" := VendLedgEntry."No. Series";
        CVLedgEntryBuf."Closed by Currency Code" := VendLedgEntry."Closed by Currency Code";
        CVLedgEntryBuf."Closed by Currency Amount" := VendLedgEntry."Closed by Currency Amount";
        CVLedgEntryBuf."Adjusted Currency Factor" := VendLedgEntry."Adjusted Currency Factor";
        CVLedgEntryBuf."Original Currency Factor" := VendLedgEntry."Original Currency Factor";
        CVLedgEntryBuf."Pmt. Disc. Tolerance Date" := VendLedgEntry."Pmt. Disc. Tolerance Date";
        CVLedgEntryBuf."Max. Payment Tolerance" := VendLedgEntry."Max. Payment Tolerance";
        CVLedgEntryBuf."Accepted Payment Tolerance" := VendLedgEntry."Accepted Payment Tolerance";
        CVLedgEntryBuf."Accepted Pmt. Disc. Tolerance" := VendLedgEntry."Accepted Pmt. Disc. Tolerance";
        CVLedgEntryBuf."Amount to Apply" := VendLedgEntry."Amount to Apply";
        CVLedgEntryBuf.Prepayment := VendLedgEntry.Prepayment;
        CVLedgEntryBuf."Prepmt. Diff. Appln. Entry No." := VendLedgEntry."Prepmt. Diff. Appln. Entry No."; //11155
        CVLedgEntryBuf."Agreement No." := VendLedgEntry."Agreement No.";
        CVLedgEntryBuf."Agreement Condition No." := VendLedgEntry."Agreement Condition No.";
        CVLedgEntryBuf."Amount Type" := VendLedgEntry."Amount Type";
    END;

    PROCEDURE TransferCustLedgEntry@8(VAR CVLedgEntryBuf@1000 : Record 382;VAR CustLedgEntry@1001 : Record 21);
    BEGIN

        CVLedgEntryBuf.TRANSFERFIELDS(CustLedgEntry);
        CustLedgEntry.CALCFIELDS(Amount, "Remaining Amount", "Amount (LCY)", "Remaining Amt. (LCY)");
        CVLedgEntryBuf.Amount := CustLedgEntry.Amount;
        CVLedgEntryBuf."Amount (LCY)" := CustLedgEntry."Amount (LCY)";
        CVLedgEntryBuf."Remaining Amount" := CustLedgEntry."Remaining Amount";
        CVLedgEntryBuf."Remaining Amt. (LCY)" := CustLedgEntry."Remaining Amt. (LCY)";
        CVLedgEntryBuf."Original Amount" := CustLedgEntry."Original Amount";
        CVLedgEntryBuf."Original Amt. (LCY)" := CustLedgEntry."Original Amt. (LCY)";
        CVLedgEntryBuf.Prepayment := CustLedgEntry.Prepayment;
        CVLedgEntryBuf."Prepmt. Diff. Appln. Entry No." := CustLedgEntry."Prepmt. Diff. Appln. Entry No.";
    END;

    PROCEDURE CreateGenJnlLines@1101495002(CVType@1101495000 : 'Customer,Vendor';CVLedgEntryBuf@1101495001 : Record 382;VAR LedgerDim@1101495002 : Record 355);
    VAR
      GJLine@1101495004 : Record 81;
      JrnlDim@1101495003 : Record 356;
    BEGIN
      JrnlDim.RESET;

      LineNo += 1000;

      IF (LineMin=0) AND NOT IsZeroLineMin THEN
        LineMin:=LineNo;
      LineMax := LineNo;

      GJLine.INIT;
      GJLine."Journal Template Name" := GJBatch."Journal Template Name";
      GJLine."Journal Batch Name" := GJBatch.Name;
      GJLine."Line No." := LineNo;
      IF CVType = CVType::Vendor THEN
        GJLine."Account Type" := GJLine."Account Type"::Vendor
      ELSE
        GJLine."Account Type" := GJLine."Account Type"::Customer;

      GJLine."Account No." := CVLedgEntryBuf."CV No.";
      GJLine."Posting Date" := BalanceDate;
      GJLine."Document Type" := 0;
      GJLine."Document No." := CVLedgEntryBuf."Document No.";
      GJLine."Document Date" := CVLedgEntryBuf."Document Date";
      GJLine."External Document No." := CVLedgEntryBuf."External Document No.";
      GJLine.Description := CVLedgEntryBuf.Description;

      IF CVLedgEntryBuf."Currency Code"='' THEN
        GJLine."Currency Code" := GLSetup."LCY Code"
      ELSE
        IF CVLedgEntryBuf."Currency Code"=GLSetup1."LCY Code" THEN
          GJLine."Currency Code" := ''
        ELSE
          GJLine."Currency Code" := CVLedgEntryBuf."Currency Code";

      GJLine."Currency Factor" := CurrencyExchangeRate.ExchangeRate(BalanceDate,GJLine."Currency Code");

      GJLine."Posting Group" := CVLedgEntryBuf."CV Posting Group";
      GJLine."Amount Type" := CVLedgEntryBuf."Amount Type";
      GJLine.VALIDATE(Amount, CVLedgEntryBuf."Remaining Amount");
      GJLine."Shortcut Dimension 1 Code" := CVLedgEntryBuf."Global Dimension 1 Code";
      GJLine."Shortcut Dimension 2 Code" := CVLedgEntryBuf."Global Dimension 2 Code";
      GJLine."Salespers./Purch. Code" := CVLedgEntryBuf."Salesperson Code";
      GJLine."Source Code" := CVLedgEntryBuf."Source Code";

      GJLine."Agreement No." := CVLedgEntryBuf."Agreement No.";
      GJLine."Agreement Condition No." := CVLedgEntryBuf."Agreement Condition No.";
      GJLine."Applies-to Doc. No." := CVLedgEntryBuf."Document No.";
      GJLine."Bal. Account No." := '90000000';
      GJLine.INSERT(TRUE);

      LedgerDim.SETRANGE("Entry No.", CVLedgEntryBuf."Entry No.");
      IF LedgerDim.FINDFIRST THEN
        REPEAT
          JrnlDim.INIT;
          JrnlDim."Table ID" := 81;
          JrnlDim."Journal Template Name" := GJBatch."Journal Template Name";
          JrnlDim."Journal Batch Name" := GJBatch.Name;
          JrnlDim."Journal Line No." := GJLine."Line No.";
          JrnlDim."Dimension Code" := LedgerDim."Dimension Code";
          JrnlDim."Dimension Value Code" := LedgerDim."Dimension Value Code";
          IF JrnlDim."Dimension Value Code"<>'' THEN
            IF NOT JrnlDim.INSERT(TRUE) THEN
              JrnlDim.MODIFY(TRUE);
        UNTIL LedgerDim.NEXT = 0;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

