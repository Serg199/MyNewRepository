OBJECT Table 1225 Data Exch. Field Mapping
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Column No.");

               IF IsValidToUseMultiplier AND (Multiplier = 0) THEN
                 VALIDATE(Multiplier,1);
             END;

    OnModify=BEGIN
               IF IsValidToUseMultiplier AND (Multiplier = 0) THEN
                 VALIDATE(Multiplier,1);
             END;

    CaptionML=[ENU=Data Exch. Field Mapping;
               RUS=Сопоставление полей обмена данными];
  }
  FIELDS
  {
    { 1   ;   ;Data Exch. Def Code ;Code20        ;TableRelation="Data Exch. Def".Code;
                                                   CaptionML=[ENU=Data Exch. Def Code;
                                                              RUS=Код определения обмена данными];
                                                   NotBlank=Yes }
    { 2   ;   ;Table ID            ;Integer       ;TableRelation="Data Exch. Mapping"."Table ID";
                                                   CaptionML=[ENU=Table ID;
                                                              RUS=Код таблицы];
                                                   NotBlank=Yes }
    { 3   ;   ;Column No.          ;Integer       ;TableRelation="Data Exch. Column Def"."Column No." WHERE (Data Exch. Def Code=FIELD(Data Exch. Def Code),
                                                                                                             Data Exch. Line Def Code=FIELD(Data Exch. Line Def Code));
                                                   CaptionML=[ENU=Column No.;
                                                              RUS=Номер столбца];
                                                   NotBlank=Yes }
    { 4   ;   ;Field ID            ;Integer       ;TableRelation=Field.No. WHERE (TableNo=FIELD(Table ID));
                                                   CaptionML=[ENU=Field ID;
                                                              RUS=Код поля] }
    { 5   ;   ;Optional            ;Boolean       ;CaptionML=[ENU=Optional;
                                                              RUS=Необязательно] }
    { 6   ;   ;Use Default Value   ;Boolean       ;OnValidate=BEGIN
                                                                IF NOT "Use Default Value" THEN
                                                                  "Default Value" := '';
                                                              END;

                                                   CaptionML=[ENU=Use Default Value;
                                                              RUS=Использовать значение по умолчанию] }
    { 7   ;   ;Default Value       ;Text250       ;OnValidate=BEGIN
                                                                VALIDATE("Use Default Value",TRUE);
                                                              END;

                                                   CaptionML=[ENU=Default Value;
                                                              RUS=Значение по умолчанию] }
    { 8   ;   ;Data Exch. Line Def Code;Code20    ;TableRelation="Data Exch. Line Def".Code WHERE (Data Exch. Def Code=FIELD(Data Exch. Def Code));
                                                   CaptionML=[ENU=Data Exch. Line Def Code;
                                                              RUS=Код определения строки обмена данными];
                                                   NotBlank=Yes }
    { 9   ;   ;Multiplier          ;Decimal       ;InitValue=1;
                                                   OnValidate=BEGIN
                                                                IF IsValidToUseMultiplier AND (Multiplier = 0) THEN
                                                                  ERROR(ZeroNotAllowedErr);
                                                              END;

                                                   CaptionML=[ENU=Multiplier;
                                                              RUS=Коэффициент] }
    { 10  ;   ;Target Table ID     ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(Table));
                                                   CaptionML=[ENU=Target Table ID;
                                                              RUS=Код целевой таблицы] }
    { 11  ;   ;Target Field ID     ;Integer       ;TableRelation=Field.No. WHERE (TableNo=FIELD(Target Table ID));
                                                   OnLookup=VAR
                                                              Field@1001 : Record 2000000041;
                                                              FieldsLookup@1000 : Page 9806;
                                                            BEGIN
                                                              Field.SETRANGE(TableNo,"Target Table ID");
                                                              FieldsLookup.SETTABLEVIEW(Field);
                                                              FieldsLookup.LOOKUPMODE(TRUE);
                                                              IF FieldsLookup.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                FieldsLookup.GETRECORD(Field);
                                                                VALIDATE("Target Field ID",Field."No.");
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Target Field ID;
                                                              RUS=Код целевого поля] }
    { 12  ;   ;Target Table Caption;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Table Metadata".Caption WHERE (ID=FIELD(Target Table ID)));
                                                   CaptionML=[ENU=Target Table Caption;
                                                              RUS=Метка целевой таблицы] }
    { 13  ;   ;Target Field Caption;Text30        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Field."Field Caption" WHERE (TableNo=FIELD(Target Table ID),
                                                                                                   No.=FIELD(Target Field ID)));
                                                   CaptionML=[ENU=Target Field Caption;
                                                              RUS=Заголовок целевого поля] }
    { 20  ;   ;Transformation Rule ;Code20        ;TableRelation="Transformation Rule";
                                                   CaptionML=[ENU=Transformation Rule;
                                                              RUS=Правило преобразования] }
  }
  KEYS
  {
    {    ;Data Exch. Def Code,Data Exch. Line Def Code,Table ID,Column No.,Field ID;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ZeroNotAllowedErr@1000 : TextConst 'ENU=All numeric values are allowed except zero.;RUS=Допускаются все числовые значения, кроме нуля.';

    PROCEDURE InsertRec@1(DataExchDefCode@1003 : Code[20];DataExchLineDefCode@1005 : Code[20];TableId@1000 : Integer;ColumnNo@1001 : Integer;FieldId@1002 : Integer;NewOptional@1004 : Boolean;NewMultiplier@1006 : Decimal);
    BEGIN
      INIT;
      VALIDATE("Data Exch. Def Code",DataExchDefCode);
      VALIDATE("Data Exch. Line Def Code",DataExchLineDefCode);
      "Table ID" := TableId;
      "Column No." := ColumnNo;
      "Field ID" := FieldId;
      VALIDATE(Optional,NewOptional);
      VALIDATE(Multiplier,NewMultiplier);
      INSERT;
    END;

    PROCEDURE FillSourceRecord@2(Field@1000 : Record 2000000041);
    BEGIN
      SETRANGE("Field ID");
      INIT;

      "Table ID" := Field.TableNo;
      "Field ID" := Field."No.";
    END;

    PROCEDURE GetColumnCaption@7() : Text;
    VAR
      DataExchColDef@1000 : Record 1223;
    BEGIN
      DataExchColDef.SETRANGE("Data Exch. Def Code","Data Exch. Def Code");
      DataExchColDef.SETRANGE("Data Exch. Line Def Code","Data Exch. Line Def Code");
      DataExchColDef.SETRANGE("Column No.","Column No.");
      IF DataExchColDef.FINDFIRST THEN
        EXIT(DataExchColDef.Name);
      EXIT('');
    END;

    PROCEDURE GetFieldCaption@12() : Text;
    VAR
      recRef@1000 : RecordRef;
      fieldRef@1001 : FieldRef;
    BEGIN
      recRef.OPEN("Table ID");
      fieldRef := recRef.FIELD("Field ID");
      EXIT(fieldRef.CAPTION);
    END;

    LOCAL PROCEDURE IsValidToUseMultiplier@8() : Boolean;
    VAR
      DataExchDef@1000 : Record 1222;
      DataExchColumnDef@1001 : Record 1223;
    BEGIN
      DataExchDef.GET("Data Exch. Def Code");
      IF DataExchColumnDef.GET("Data Exch. Def Code","Data Exch. Line Def Code","Column No.") THEN
        EXIT(DataExchColumnDef."Data Type" = DataExchColumnDef."Data Type"::Decimal);
      EXIT(FALSE);
    END;

    PROCEDURE GetPath@3() : Text;
    VAR
      DataExchColDef@1000 : Record 1223;
    BEGIN
      DataExchColDef.SETRANGE("Data Exch. Def Code","Data Exch. Def Code");
      DataExchColDef.SETRANGE("Data Exch. Line Def Code","Data Exch. Line Def Code");
      DataExchColDef.SETRANGE("Column No.","Column No.");
      IF DataExchColDef.FINDFIRST THEN
        EXIT(DataExchColDef.Path);
      EXIT('');
    END;

    BEGIN
    END.
  }
}

