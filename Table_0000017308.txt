OBJECT Table 17308 Tax Calc. Header
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TaxCalcSection.GET("Section Code");
               TaxCalcSection.ValidateChange;
               TESTFIELD("Table ID");
               TESTFIELD("No.");
               VALIDATE("No.");
             END;

    OnModify=BEGIN
               TESTFIELD("Table ID");
             END;

    OnDelete=BEGIN
               TaxCalcSection.GET("Section Code");
               TaxCalcSection.ValidateChange;

               TaxCalcSelectionSetup.SETRANGE("Section Code","Section Code");
               TaxCalcSelectionSetup.SETRANGE("Register No.","No.");
               TaxCalcSelectionSetup.DELETEALL(TRUE);

               TaxCalcLine.SETRANGE("Section Code","Section Code");
               TaxCalcLine.SETRANGE(Code,"No.");
               TaxCalcLine.DELETEALL(TRUE);
             END;

    OnRename=BEGIN
               ERROR(Text1000,TABLECAPTION);
             END;

    CaptionML=[ENU=Tax Calc. Header;
               RUS=Заголовок налогового расчета];
    LookupPageID=Page17310;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code10        ;OnValidate=BEGIN
                                                                IF "No." = '' THEN
                                                                  "Register ID" := ''
                                                                ELSE BEGIN
                                                                  NotAllowedChar := '~^';
                                                                  IF STRLEN(DELCHR(CONVERTSTR("No.",NotAllowedChar,'  '),'=',' ')) <> STRLEN("No.") THEN
                                                                    ERROR(Text1001,FIELDCAPTION("No."));
                                                                  "Register ID" := CONVERTSTR("No.",'.',COPYSTR(NotAllowedChar,2))
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              RUS=Номер] }
    { 2   ;   ;Description         ;Text250       ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 3   ;   ;Table ID            ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(Table));
                                                   OnValidate=BEGIN
                                                                IF "Table ID" <> xRec."Table ID" THEN BEGIN
                                                                  TaxCalcSection.GET("Section Code");
                                                                  TaxCalcSection.ValidateChange;
                                                                  IF "Table ID" <> DATABASE::"Tax Calc. G/L Entry" THEN
                                                                    TESTFIELD("G/L Corr. Analysis View Code",'');
                                                                END;
                                                                CASE "Table ID" OF
                                                                  DATABASE::"Tax Calc. G/L Entry",
                                                                  DATABASE::"Tax Calc. Item Entry",
                                                                  DATABASE::"Tax Calc. FA Entry":
                                                                    "Storing Method" := "Storing Method"::"Build Entry";
                                                                  DATABASE::"Tax Calc. Accumulation":
                                                                    "Storing Method" := "Storing Method"::Calculation;
                                                                  ELSE BEGIN
                                                                    "Table ID" := DATABASE::"Tax Calc. G/L Entry";
                                                                    "Storing Method" := "Storing Method"::"Build Entry";
                                                                  END;
                                                                END;
                                                                CALCFIELDS("Table Name");
                                                              END;

                                                   CaptionML=[ENU=Table ID;
                                                              RUS=Код таблицы];
                                                   BlankZero=Yes }
    { 4   ;   ;Table Name          ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Table),
                                                                                                                Object ID=FIELD(Table ID)));
                                                   CaptionML=[ENU=Table Name;
                                                              RUS=Название таблицы];
                                                   Editable=No }
    { 5   ;   ;Page ID             ;Integer       ;TableRelation=AllObjWithCaption."Object ID" WHERE (Object Type=CONST(Page));
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Form Name");
                                                              END;

                                                   CaptionML=[ENU=Page ID;
                                                              RUS=Код страницы] }
    { 6   ;   ;Form Name           ;Text250       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(AllObjWithCaption."Object Caption" WHERE (Object Type=CONST(Page),
                                                                                                                Object ID=FIELD(Page ID)));
                                                   CaptionML=[ENU=Form Name;
                                                              RUS=Название формы] }
    { 7   ;   ;Check               ;Boolean       ;CaptionML=[ENU=Check;
                                                              RUS=Проверка] }
    { 8   ;   ;Level               ;Integer       ;CaptionML=[ENU=Level;
                                                              RUS=Уровень] }
    { 10  ;   ;Register ID         ;Code10        ;CaptionML=[ENU=Register ID;
                                                              RUS=Код регистра];
                                                   Editable=No }
    { 11  ;   ;Storing Method      ;Option        ;OnValidate=BEGIN
                                                                IF "Storing Method" <> xRec."Storing Method" THEN BEGIN
                                                                  TaxCalcSection.GET("Section Code");
                                                                  TaxCalcSection.ValidateChange;
                                                                  IF "Storing Method" <> "Storing Method"::"Build Entry" THEN
                                                                    TESTFIELD("G/L Corr. Analysis View Code",'');
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Storing Method;
                                                              RUS=Метод хранения];
                                                   OptionCaptionML=[ENU=Build Entry,Calculation;
                                                                    RUS=Операции,Расчет];
                                                   OptionString=Build Entry,Calculation }
    { 13  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              RUS=Фильтр по дате] }
    { 15  ;   ;Section Code        ;Code10        ;TableRelation="Tax Calc. Section";
                                                   CaptionML=[ENU=Section Code;
                                                              RUS=Код секции];
                                                   NotBlank=Yes }
    { 19  ;   ;Tax Diff. Code      ;Code10        ;TableRelation="Tax Difference";
                                                   CaptionML=[ENU=Tax Diff. Code;
                                                              RUS=Код налог. разницы] }
    { 25  ;   ;G/L Corr. Analysis View Code;Code10;TableRelation="G/L Corr. Analysis View";
                                                   OnValidate=VAR
                                                                TaxDiffGLCorrDimFilter@1210000 : Record 17322;
                                                              BEGIN
                                                                IF "G/L Corr. Analysis View Code" <> xRec."G/L Corr. Analysis View Code" THEN BEGIN
                                                                  IF "G/L Corr. Analysis View Code" <> '' THEN BEGIN
                                                                    TESTFIELD("Table ID",DATABASE::"Tax Calc. G/L Entry");
                                                                    TESTFIELD("Storing Method","Storing Method"::"Build Entry");
                                                                  END;
                                                                  TaxDiffGLCorrDimFilter.SETRANGE("Section Code","Section Code");
                                                                  TaxDiffGLCorrDimFilter.SETRANGE("Tax Calc. No.","No.");
                                                                  IF NOT TaxDiffGLCorrDimFilter.ISEMPTY THEN
                                                                    IF CONFIRM(Text1002,TRUE) THEN
                                                                      TaxDiffGLCorrDimFilter.DELETEALL
                                                                    ELSE
                                                                      ERROR('');
                                                                  TaxCalcSection.GET("Section Code");
                                                                  TaxCalcSection.ValidateChange;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=G/L Corr. Analysis View Code;
                                                              RUS=Код аналит. отчета по корресп.] }
    { 30  ;   ;Used in Statutory Report;Boolean   ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Stat. Report Table Mapping" WHERE (Int. Source Type=CONST(Tax Difference),
                                                                                                         Int. Source Section Code=FIELD(Section Code),
                                                                                                         Int. Source No.=FIELD(No.)));
                                                   CaptionML=[ENU=Used in Statutory Report;
                                                              RUS=Использ. в регламентном отчете];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Section Code,No.                        ;Clustered=Yes }
    {    ;Section Code,Tax Diff. Code              }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Description,Tax Diff. Code           }
  }
  CODE
  {
    VAR
      TaxCalcSection@1000 : Record 17307;
      TaxCalcSelectionSetup@1001 : Record 17309;
      TaxCalcLine@1002 : Record 17310;
      NotAllowedChar@1003 : Text[10];
      Text1000@1004 : TextConst 'ENU=You can''t rename an %1.;RUS=Нельзя переименовать %1.';
      Text1001@1005 : TextConst 'ENU=The value %1 has illegal symbol.;RUS=В значении %1 использован запрещенный символ';
      Text1002@1210000 : TextConst 'ENU=All related dimension filters will be deleted. Continue?;RUS=Все связанные фильтры измерений будут удалены. Продолжить?';

    PROCEDURE ShowDetails@1(TaxCalcLineNo@1000 : Integer);
    VAR
      TaxCalcItemEntry@1002 : Record 17317;
      TaxCalcFAEntry@1003 : Record 17318;
      TaxCalcLine@1004 : Record 17310;
      TaxCalcDimMgt@1005 : Codeunit 17304;
    BEGIN
      CASE "Table ID" OF
        DATABASE::"Tax Calc. G/L Entry":
          ShowGLEntriesDetails(TaxCalcLineNo);
        DATABASE::"Tax Calc. Item Entry":
          BEGIN
            TaxCalcItemEntry.RESET;
            TaxCalcItemEntry.SETCURRENTKEY("Section Code");
            COPYFILTER("Date Filter",TaxCalcItemEntry."Date Filter");
            TaxCalcItemEntry.FILTERGROUP(2);
            TaxCalcItemEntry.SETRANGE("Section Code","Section Code");
            TaxCalcItemEntry.SETFILTER("Where Used Register IDs",'*~' + "Register ID" + '~*');
            TaxCalcItemEntry.FILTERGROUP(0);
            IF TaxCalcLineNo <> 0 THEN BEGIN
              TaxCalcLine.GET("Section Code","No.",TaxCalcLineNo);
              TaxCalcItemEntry.SetTaxCalcFilter(TaxCalcLine);
              TaxCalcDimMgt.SetDimFilters2TaxCalcItemLine(TaxCalcLine,TaxCalcItemEntry);
            END;
            PAGE.RUN("Page ID",TaxCalcItemEntry);
          END;
        DATABASE::"Tax Calc. FA Entry":
          BEGIN
            TaxCalcFAEntry.RESET;
            TaxCalcFAEntry.SETCURRENTKEY("Section Code");
            TaxCalcFAEntry.FILTERGROUP(2);
            TaxCalcFAEntry.SETRANGE("Section Code","Section Code");
            TaxCalcFAEntry.SETFILTER("Where Used Register IDs",'*~' + "Register ID" + '~*');
            TaxCalcFAEntry.FILTERGROUP(0);
            COPYFILTER("Date Filter",TaxCalcFAEntry."Date Filter");
            IF TaxCalcLineNo <> 0 THEN BEGIN
              TaxCalcLine.GET("Section Code","No.",TaxCalcLineNo);
              IF TaxCalcLine."Depreciation Group" <> '' THEN
                TaxCalcFAEntry.SETFILTER("Depreciation Group",TaxCalcLine."Depreciation Group");
              IF TaxCalcFAEntry.Disposed THEN
                TaxCalcFAEntry.SETRANGE(Disposed,TaxCalcFAEntry.Disposed);
              IF TaxCalcLine."Belonging to Manufacturing" <> 0 THEN
                TaxCalcFAEntry.SETRANGE("Belonging to Manufacturing",TaxCalcLine."Belonging to Manufacturing");
              IF TaxCalcLine."FA Type" <> 0 THEN
                TaxCalcFAEntry.SETRANGE("FA Type",TaxCalcLine."FA Type" - 1);
            END;
            PAGE.RUN("Page ID",TaxCalcFAEntry);
          END;
      END;
    END;

    PROCEDURE ShowGLEntriesDetails@1210000(TaxCalcLineNo@1210003 : Integer);
    VAR
      GLCorrespondenceEntry@1210007 : Record 12401;
      TempGLCorrespondenceEntry@1210008 : TEMPORARY Record 12401;
      GLCorrAnalysisView@1210006 : Record 14940;
      GLCorrAnalysisViewEntry@1210005 : Record 14942;
      TempGLCorrAnalysisViewEntry@1210000 : TEMPORARY Record 14942;
      TaxCalcSelectionSetup@1210001 : Record 17309;
      TaxCalcLine@1210002 : Record 17310;
      TaxDimMgt@1210004 : Codeunit 17304;
    BEGIN
      TaxCalcLine.GET("Section Code","No.",TaxCalcLineNo);
      TaxCalcSelectionSetup.SETFILTER("Section Code","Section Code");
      TaxCalcSelectionSetup.SETRANGE("Register No.","No.");
      IF TaxCalcLine."Selection Line Code" <> '' THEN
        TaxCalcSelectionSetup.SETRANGE("Line Code",TaxCalcLine."Selection Line Code");
      IF TaxCalcSelectionSetup.FINDSET THEN
        REPEAT
          IF "G/L Corr. Analysis View Code" <> '' THEN BEGIN
            GLCorrAnalysisView.GET("G/L Corr. Analysis View Code");
            GLCorrAnalysisViewEntry.RESET;
            TaxDimMgt.SetDimFilters2GLCorrAnViewEntr(
              GLCorrAnalysisViewEntry,
              GLCorrAnalysisView,
              TaxCalcSelectionSetup,
              TaxCalcLine);
            COPYFILTER("Date Filter",GLCorrAnalysisViewEntry."Posting Date");

            IF TaxCalcSelectionSetup."Account No." <> '' THEN
              GLCorrAnalysisViewEntry.SETFILTER("Debit Account No.",TaxCalcSelectionSetup."Account No.");
            IF TaxCalcSelectionSetup."Bal. Account No." <> '' THEN
              GLCorrAnalysisViewEntry.SETFILTER("Credit Account No.",TaxCalcSelectionSetup."Bal. Account No.");
            AddGLCorrAnViewEntr2Buffer(GLCorrAnalysisViewEntry,TempGLCorrAnalysisViewEntry);
          END ELSE BEGIN
            COPYFILTER("Date Filter",GLCorrespondenceEntry."Posting Date");
            IF TaxCalcSelectionSetup."Account No." <> '' THEN
              GLCorrespondenceEntry.SETFILTER("Debit Account No.",TaxCalcSelectionSetup."Account No.");
            IF TaxCalcSelectionSetup."Bal. Account No." <> '' THEN
              GLCorrespondenceEntry.SETFILTER("Credit Account No.",TaxCalcSelectionSetup."Bal. Account No.");
            AddGLCorrEntries2Buffer(GLCorrespondenceEntry,TempGLCorrespondenceEntry);
          END;
        UNTIL TaxCalcSelectionSetup.NEXT = 0;

      IF "G/L Corr. Analysis View Code" <> '' THEN
        PAGE.RUNMODAL(PAGE::"G/L Corr. Analysis View Entr.",TempGLCorrAnalysisViewEntry)
      ELSE
        PAGE.RUNMODAL(PAGE::"G/L Correspondence Entries",TempGLCorrespondenceEntry);
    END;

    PROCEDURE AddGLCorrEntries2Buffer@1210002(VAR GLCorrespondenceEntry@1210001 : Record 12401;VAR TempGLCorrespondenceEntry@1210000 : TEMPORARY Record 12401);
    BEGIN
      IF GLCorrespondenceEntry.FINDSET THEN
        REPEAT
          TempGLCorrespondenceEntry := GLCorrespondenceEntry;
          IF NOT TempGLCorrespondenceEntry.INSERT THEN;
        UNTIL GLCorrespondenceEntry.NEXT = 0;
    END;

    PROCEDURE AddGLCorrAnViewEntr2Buffer@1210006(VAR GLCorrAnalysisViewEntry@1210001 : Record 14942;VAR TempGLCorrAnalysisViewEntry@1210000 : TEMPORARY Record 14942);
    BEGIN
      IF GLCorrAnalysisViewEntry.FINDSET THEN
        REPEAT
          TempGLCorrAnalysisViewEntry := GLCorrAnalysisViewEntry;
          IF NOT TempGLCorrAnalysisViewEntry.INSERT THEN;
        UNTIL GLCorrAnalysisViewEntry.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

