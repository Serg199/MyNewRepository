OBJECT XMLport 17202 Norm Jurisdiction
{
  OBJECT-PROPERTIES
  {
    Date=18.12.13;
    Time=12:00:00;
    Version List=NAVRU7.10;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Norm Jurisdiction;
               RUS=Юрисдикция нормы];
  }
  ELEMENTS
  {
    { [{CA4DCB30-65E9-49C5-BB5D-935557972029}];  ;NormJurisdictionSetup;Element;Text     }

    { [{9A8A858B-F59D-4E63-8FDE-EECA7129086B}];1 ;NormJurisdiction    ;Element ;Table   ;
                                                  SourceTable=Table17220;
                                                  Temporary=Yes;
                                                  MinOccurs=Zero }

    { [{F3A54075-5BCE-4680-855C-DA6B3E421237}];2 ;Code                ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Tax Register Norm Jurisdiction::Code }

    { [{51A52A4A-ED81-4AE1-9B5A-C780B34C6A84}];2 ;Description         ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Tax Register Norm Jurisdiction::Description }

    { [{43EC5B9A-5BD7-4803-8190-4E748E4DE223}];2 ;NormGroup           ;Element ;Table   ;
                                                  SourceTable=Table17221;
                                                  LinkFields=Field1=FIELD(Field1);
                                                  LinkTable=Tax Register Norm Jurisdiction;
                                                  Temporary=Yes;
                                                  MinOccurs=Zero }

    { [{C48413DB-C931-4BB8-8622-65ECE4E479BA}];3 ;NormJurisdictionCode;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Tax Register Norm Group::Norm Jurisdiction Code }

    { [{A8709B8B-9A35-474B-9369-143285AE4DEC}];3 ;Code                ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Tax Register Norm Group::Code }

    { [{2E68F502-98A5-4EDB-9AE8-26C50FBF6CEB}];3 ;Description         ;Element ;Field   ;
                                                  DataType=Text;
                                                  SourceField=Tax Register Norm Group::Description }

    { [{F10E1C09-D374-411C-91BC-5EC7AAB84151}];3 ;SearchDetail        ;Element ;Field   ;
                                                  DataType=Option;
                                                  SourceField=Tax Register Norm Group::Search Detail }

    { [{D6C70EB0-7571-40E8-8E08-432A81EE6AF8}];3 ;StoringMethod       ;Element ;Field   ;
                                                  DataType=Option;
                                                  SourceField=Tax Register Norm Group::Storing Method }

    { [{F61E3763-96DC-4FA1-B48C-8DC2946C52B9}];3 ;Check               ;Element ;Field   ;
                                                  DataType=Boolean;
                                                  SourceField=Tax Register Norm Group::Check }

    { [{C1596D83-445A-421E-BC18-2F20FC3E6603}];3 ;Level               ;Element ;Field   ;
                                                  DataType=Integer;
                                                  SourceField=Tax Register Norm Group::Level }

    { [{B6F43FF7-149C-42B7-BE35-3AC198A0D075}];3 ;NormDetail          ;Element ;Table   ;
                                                  SourceTable=Table17222;
                                                  LinkFields=Field1=FIELD(Field1),
                                                             Field2=FIELD(Field2);
                                                  LinkTable=Tax Register Norm Group;
                                                  Temporary=Yes;
                                                  MinOccurs=Zero }

    { [{57038F8E-353A-4AE1-B510-886A9937FBB1}];4 ;NormJurisdictionCode;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Tax Register Norm Detail::Norm Jurisdiction Code }

    { [{7D6513D7-2DF1-41E9-835D-B52D5C405157}];4 ;NormGroupCode       ;Element ;Field   ;
                                                  DataType=Code;
                                                  SourceField=Tax Register Norm Detail::Norm Group Code }

    { [{429C5754-C2DF-4D7A-9421-909BD0612B58}];4 ;NormType            ;Element ;Field   ;
                                                  DataType=Option;
                                                  SourceField=Tax Register Norm Detail::Norm Type }

    { [{1CB4C2A5-3C23-4442-B259-F2D499555DAD}];4 ;EffectiveDate       ;Element ;Field   ;
                                                  DataType=Date;
                                                  SourceField=Tax Register Norm Detail::Effective Date }

    { [{2A298258-0AB5-43A5-8597-FC21C1A11890}];4 ;Maximum             ;Element ;Field   ;
                                                  DataType=Decimal;
                                                  SourceField=Tax Register Norm Detail::Maximum }

    { [{5254DB04-1AFC-4177-8C15-C6EDE599F6DA}];4 ;Norm                ;Element ;Field   ;
                                                  DataType=Decimal;
                                                  SourceField=Tax Register Norm Detail::Norm }

    { [{42D51EFE-8C42-42C9-884A-7C154BF4FF0A}];4 ;NormAboveMaximum    ;Element ;Field   ;
                                                  DataType=Decimal;
                                                  SourceField=Tax Register Norm Detail::Norm Above Maximum }

  }
  EVENTS
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  CODE
  {
    VAR
      NormGroup@1210012 : Record 17221;
      NormDetail@1210013 : Record 17222;

    PROCEDURE SetData@1210000(VAR NormJurisdiction@1210000 : Record 17220);
    BEGIN
      IF NormJurisdiction.FINDSET THEN
        REPEAT
          "Tax Register Norm Jurisdiction" := NormJurisdiction;
          "Tax Register Norm Jurisdiction".INSERT;

          NormGroup.SETRANGE("Norm Jurisdiction Code",NormJurisdiction.Code);
          IF NormGroup.FINDSET THEN
            REPEAT
              "Tax Register Norm Group" := NormGroup;
              "Tax Register Norm Group".INSERT;

              NormDetail.SETRANGE("Norm Jurisdiction Code",NormJurisdiction.Code);
              NormDetail.SETRANGE("Norm Group Code",NormGroup.Code);
              IF NormDetail.FINDSET THEN
                REPEAT
                  "Tax Register Norm Detail" := NormDetail;
                  "Tax Register Norm Detail".INSERT;
                UNTIL NormDetail.NEXT = 0;
            UNTIL NormGroup.NEXT = 0;
        UNTIL NormJurisdiction.NEXT = 0;
    END;

    PROCEDURE ImportData@1210001();
    VAR
      NormJurisdiction@1210000 : Record 17220;
    BEGIN
      WITH "Tax Register Norm Jurisdiction" DO BEGIN
        RESET;
        IF FINDSET THEN
          REPEAT
            NormJurisdiction := "Tax Register Norm Jurisdiction";
            IF NormJurisdiction.FIND THEN BEGIN
              NormJurisdiction.DELETE(TRUE);
              NormJurisdiction := "Tax Register Norm Jurisdiction";
            END;
            NormJurisdiction.INSERT;
          UNTIL NEXT = 0;
      END;

      WITH "Tax Register Norm Group" DO BEGIN
        RESET;
        IF FINDSET THEN
          REPEAT
            NormGroup := "Tax Register Norm Group";
            IF NormGroup.FIND THEN BEGIN
              NormGroup.DELETE(TRUE);
              NormGroup := "Tax Register Norm Group";
            END;
            NormGroup.INSERT;
          UNTIL NEXT = 0;
      END;

      WITH "Tax Register Norm Detail" DO BEGIN
        RESET;
        IF FINDSET THEN
          REPEAT
            NormDetail := "Tax Register Norm Detail";
            IF NormDetail.FIND THEN BEGIN
              NormDetail.DELETE(TRUE);
              NormDetail := "Tax Register Norm Detail";
            END;
            NormDetail.INSERT;
          UNTIL NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}

