OBJECT Page 51 Purchase Invoice
{
  OBJECT-PROPERTIES
  {
    Date=14.08.17;
    Time=14:11:36;
    Modified=Yes;
    Version List=NAVW110.00.00.15140,NAVRU10.00.00.15140,NOS-26;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Purchase Invoice;
               RUS=Счет покупки];
    SourceTable=Table38;
    SourceTableView=WHERE(Document Type=FILTER(Invoice),
                          Empl. Purchase=FILTER(No));
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Approve,Invoice,Posting,View,Request Approval,Incoming Document;
                                RUS=Создать,Обработать,Отчет,Утвердить,Счет,Учет,Просмотр,Запросить утверждение,Входящий документ];
    OnInit=VAR
             PurchasesPayablesSetup@1001 : Record 312;
           BEGIN
             SetExtDocNoMandatoryCondition;
             JobQueuesUsed := PurchasesPayablesSetup."Post & Print with Job Queue";
           END;

    OnOpenPage=VAR
                 OfficeMgt@1000 : Codeunit 1630;
               BEGIN
                 SetDocNoVisible;
                 IsOfficeAddin := OfficeMgt.IsAvailable;
                 CreateIncomingDocFromEmailAttachment := OfficeMgt.OCRAvailable;
                 CreateIncomingDocumentVisible := NOT OfficeMgt.IsOutlookMobileApp;

                 IF UserMgt.GetPurchasesFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetPurchasesFilter);
                   FILTERGROUP(0);
                 END;
               END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserMgt.GetPurchasesFilter;

                  IF (NOT DocNoVisible) AND ("No." = '') THEN
                    SetBuyFromVendorFromFilter;
                END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     EXIT(ConfirmDeletion);
                   END;

    OnQueryClosePage=BEGIN
                       IF NOT DocumentIsPosted THEN
                         EXIT(ConfirmCloseUnposted);
                     END;

    OnAfterGetCurrRecord=BEGIN
                           CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromRecord(Rec);
                           CurrPage.ApprovalFactBox.PAGE.UpdateApprovalEntriesFromSourceRecord(RECORDID);
                           ShowWorkflowStatus := CurrPage.WorkflowStatus.PAGE.SetFilterOnWorkflowRecord(RECORDID);
                           SetControlAppearance;
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;  ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 55      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Invoice;
                                 RUS=&Счет];
                      Image=Invoice }
      { 57      ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 RUS=Статистика];
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CalcInvDiscForHeader;
                                 COMMIT;
                                 PAGE.RUNMODAL(PAGE::"Purchase Statistics",Rec);
                                 PurchCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 58      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Vendor;
                                 RUS=Поставщик];
                      ToolTipML=[ENU=View or edit detailed information about the vendor on the purchase document.;
                                 RUS=Просмотр или изменение подробных сведений о поставщике в документе покупки.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 26;
                      RunPageLink=No.=FIELD(Buy-from Vendor No.);
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Vendor;
                      PromotedCategory=Category5;
                      PromotedOnly=Yes }
      { 59      ;2   ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 RUS=Ко&мментарии];
                      RunObject=Page 66;
                      RunPageLink=Document Type=FIELD(Document Type),
                                  No.=FIELD(No.),
                                  Document Line No.=CONST(0);
                      Image=ViewComments }
      { 1470002 ;2   ;Action    ;
                      CaptionML=[ENU=FA Comments;
                                 RUS=Комментарии по ОС];
                      ApplicationArea=#FixedAssets;
                      RunObject=Page 12495;
                      RunPageLink=Document Type=CONST(Purchase Invoice),
                                  Document No.=FIELD(No.),
                                  Document Line No.=CONST(0);
                      Image=ViewComments }
      { 113     ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 RUS=Измерения];
                      ToolTipML=[ENU=View or edits dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 RUS=Просмотр или изменение измерений, например области, проекта или отдела, которые можно назначать документам покупки и продажи для распределения себестоимости и анализа истории транзакций.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled="No." <> '';
                      PromotedIsBig=Yes;
                      Image=Dimensions;
                      PromotedCategory=Category5;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 41      ;2   ;ActionGroup;
                      Name=IncomingDocument;
                      CaptionML=[ENU=Incoming Document;
                                 RUS=Входящий документ];
                      Visible=FALSE }
      { 39      ;3   ;Action    ;
                      Name=IncomingDocCard;
                      CaptionML=[ENU=View;
                                 RUS=Просмотр];
                      ToolTipML=[ENU=View any incoming document records and file attachments that exist for the entry or document.;
                                 RUS=Просмотр всех входящих записей документов и вложенных файлов, имеющихся для операции или документа.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=HasIncomingDocument;
                      PromotedIsBig=Yes;
                      Image=ViewOrder;
                      PromotedCategory=Category9;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IncomingDocument.ShowCardFromEntryNo("Incoming Document Entry No.");
                               END;
                                }
      { 37      ;3   ;Action    ;
                      Name=SelectIncomingDoc;
                      AccessByPermission=TableData 130=R;
                      CaptionML=[ENU=Select;
                                 RUS=Выбрать];
                      ToolTipML=[ENU=Select an incoming document record and file attachment that you want to link to the entry or document.;
                                 RUS=Выбор входящей записи документа и вложенного файла, которые нужно связать с операцией или документом.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=SelectLineToApply;
                      PromotedCategory=Category9;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 VALIDATE("Incoming Document Entry No.",IncomingDocument.SelectIncomingDocument("Incoming Document Entry No.",RECORDID));
                               END;
                                }
      { 35      ;3   ;Action    ;
                      Name=IncomingDocAttachFile;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create from File;
                                 RUS=Создать из файла];
                      ToolTipML=[ENU=Create an incoming document record by selecting a file to attach, and then link the incoming document record to the entry or document.;
                                 RUS=Создание входящей записи документа путем выбора файла вложения и связывание входящей записи документа с операцией или документом.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=CreateIncomingDocumentVisible;
                      Enabled=CreateIncomingDocumentEnabled;
                      PromotedIsBig=Yes;
                      Image=Attach;
                      PromotedCategory=Category9;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 IncomingDocumentAttachment@1000 : Record 133;
                               BEGIN
                                 IncomingDocumentAttachment.NewAttachmentFromPurchaseDocument(Rec);
                               END;
                                }
      { 16      ;3   ;Action    ;
                      Name=IncomingDocEmailAttachment;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create from Attachment;
                                 RUS=Создать из вложения];
                      ToolTipML=[ENU=Create an incoming document record by selecting an attachment from outlook email, and then link the incoming document record to the entry or document.;
                                 RUS=Создание записи входящего документа путем выбора вложения из сообщения электронной почты Outlook и связывание записи входящего документа с операцией или документом.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=CreateIncomingDocFromEmailAttachment;
                      Enabled=IncomingDocEmailAttachmentEnabled;
                      PromotedIsBig=Yes;
                      Image=SendElectronicDocument;
                      PromotedCategory=Category9;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 OfficeMgt@1001 : Codeunit 1630;
                               BEGIN
                                 IF NOT INSERT(TRUE) THEN
                                   MODIFY(TRUE);
                                 OfficeMgt.InitiateSendToIncomingDocumentsWithPurchaseHeaderLink(Rec,"Buy-from Vendor No.");
                               END;
                                }
      { 29      ;3   ;Action    ;
                      Name=RemoveIncomingDoc;
                      CaptionML=[ENU=Remove;
                                 RUS=Удалить];
                      ToolTipML=[ENU=Remove an external document that has been recorded, manually or automatically, and attached as a file to a document or ledger entry.;
                                 RUS=Удаление внешнего документа, который был зарегистрирован вручную или автоматически, а также прикреплен в виде файла к документу или к операции книги.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Enabled=HasIncomingDocument;
                      PromotedIsBig=Yes;
                      Image=RemoveLine;
                      PromotedCategory=Category9;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IF IncomingDocument.GET("Incoming Document Entry No.") THEN
                                   IncomingDocument.RemoveLinkToRelatedRecord;
                                 "Incoming Document Entry No." := 0;
                                 MODIFY(TRUE);
                               END;
                                }
      { 25      ;1   ;ActionGroup;
                      CaptionML=[ENU=Approval;
                                 RUS=Утверждение] }
      { 23      ;2   ;Action    ;
                      Name=Approve;
                      CaptionML=[ENU=Approve;
                                 RUS=Утвердить];
                      ToolTipML=[ENU=Approve the requested changes.;
                                 RUS=Утверждение запрошенных изменений.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.ApproveRecordApprovalRequest(RECORDID)
                               END;
                                }
      { 21      ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=[ENU=Reject;
                                 RUS=Отклонить];
                      ToolTipML=[ENU=Reject the approval request.;
                                 RUS=Отклонение запроса на утверждение.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.RejectRecordApprovalRequest(RECORDID)
                               END;
                                }
      { 19      ;2   ;Action    ;
                      Name=Delegate;
                      CaptionML=[ENU=Delegate;
                                 RUS=Делегировать];
                      ToolTipML=[ENU=Delegate the approval to a substitute approver.;
                                 RUS=Делегирование утверждения заместителю утверждающего лица.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.DelegateRecordApprovalRequest(RECORDID)
                               END;
                                }
      { 13      ;2   ;Action    ;
                      Name=Comment;
                      CaptionML=[ENU=Comments;
                                 RUS=Комментарии];
                      ToolTipML=[ENU=View or add comments.;
                                 RUS=Просмотр или добавление комментариев.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.GetApprovalComment(Rec);
                               END;
                                }
      { 9       ;1   ;ActionGroup;
                      CaptionML=[ENU=Release;
                                 RUS=Выпустить];
                      Image=Release }
      { 120     ;2   ;Action    ;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=[ENU=Re&lease;
                                 RUS=Вы&пустить];
                      Promoted=Yes;
                      Image=ReleaseDoc;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ReleasePurchDoc@1000 : Codeunit 415;
                               BEGIN
                                 ReleasePurchDoc.PerformManualRelease(Rec);
                               END;
                                }
      { 121     ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=[ENU=Re&open;
                                 RUS=&Открыть];
                      ToolTipML=[ENU=Reopen the document to change it after it has been approved. Approved documents have the Released status and must be opened before they can be changed.;
                                 RUS=Повторное открытие документа для его изменения после утверждения. Утвержденные документы имеют статус "Выпущено", и их необходимо открывать перед изменением.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=Status <> Status::Open;
                      PromotedIsBig=Yes;
                      Image=ReOpen;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ReleasePurchDoc@1001 : Codeunit 415;
                               BEGIN
                                 ReleasePurchDoc.PerformManualReopen(Rec);
                               END;
                                }
      { 60      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 RUS=Ф&ункции];
                      Image=Action }
      { 4       ;2   ;Action    ;
                      Name=GetRecurringPurchaseLines;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get Recurring Purchase Lines;
                                 RUS=Получить строки типовых покупок];
                      ToolTipML=[ENU=Insert purchase document lines that you have set up for the vendor as recurring. Recurring purchase lines could be for a monthly replenishment order or a fixed freight expense.;
                                 RUS=Вставка строк документа покупки, настроенных для поставщика, в качестве типовых. Строки типовых покупок могут использоваться для ежемесячного заказа пополнения запасов или для фиксированных затрат на доставку.];
                      ApplicationArea=#Suite;
                      PromotedIsBig=Yes;
                      Image=VendorCode;
                      OnAction=VAR
                                 StdVendPurchCode@1000 : Record 175;
                               BEGIN
                                 StdVendPurchCode.InsertPurchLines(Rec);
                               END;
                                }
      { 63      ;2   ;Action    ;
                      Name=CopyDocument;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Document;
                                 RUS=Копировать документ];
                      ToolTipML=[ENU=Copy document lines and header information from another purchase document to this document. You can copy a posted purchase invoice into a new purchase invoice to quickly create a similar document.;
                                 RUS=Копирование строк документа и сведений заголовка из другого документа покупки в этот документ. Вы можете скопировать учтенный счет покупки в новый счет покупки, чтобы быстро создать подобный документ.];
                      ApplicationArea=#Suite;
                      PromotedIsBig=Yes;
                      Image=CopyDocument;
                      OnAction=BEGIN
                                 CopyPurchDoc.SetPurchHeader(Rec);
                                 CopyPurchDoc.RUNMODAL;
                                 CLEAR(CopyPurchDoc);
                               END;
                                }
      { 61      ;2   ;Action    ;
                      Name=CalculateInvoiceDiscount;
                      AccessByPermission=TableData 24=R;
                      CaptionML=[ENU=Calculate &Invoice Discount;
                                 RUS=Вычи&слить скидку по счету];
                      ToolTipML=[ENU=Calculate the invoice discount for the entire purchase invoice.;
                                 RUS=Вычисление скидки по счету для всего счета покупки.];
                      ApplicationArea=#Basic,#Suite;
                      Image=CalculateInvoiceDiscount;
                      OnAction=BEGIN
                                 ApproveCalcInvDisc;
                                 PurchCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 136     ;2   ;Separator  }
      { 1210004 ;2   ;Action    ;
                      CaptionML=[ENU=Create Tracking Specification;
                                 RUS=Создать спецификацию трассировки];
                      ApplicationArea=#Basic,#Suite;
                      Image=ItemTracking;
                      OnAction=VAR
                                 ItemTrackingDocMgt@1210000 : Codeunit 6503;
                               BEGIN
                                 ItemTrackingDocMgt.CreateTrackingInfo(DATABASE::"Purchase Header","Document Type","No.");
                               END;
                                }
      { 1210003 ;2   ;Separator  }
      { 62      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Document;
                                 RUS=Копировать документ];
                      Image=CopyDocument;
                      OnAction=BEGIN
                                 CopyPurchDoc.SetPurchHeader(Rec);
                                 CopyPurchDoc.RUNMODAL;
                                 CLEAR(CopyPurchDoc);
                                 IF GET("Document Type","No.") THEN;
                               END;
                                }
      { 137     ;2   ;Separator  }
      { 112     ;2   ;Action    ;
                      Name=MoveNegativeLines;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Move Negative Lines;
                                 RUS=Перемещение отрицательных строк];
                      Image=MoveNegativeLines;
                      OnAction=BEGIN
                                 CLEAR(MoveNegPurchLines);
                                 MoveNegPurchLines.SetPurchHeader(Rec);
                                 MoveNegPurchLines.RUNMODAL;
                                 MoveNegPurchLines.ShowDocument;
                               END;
                                }
      { 1210001 ;2   ;Action    ;
                      CaptionML=[ENU=Create Letter of Attorney;
                                 RUS=Создать доверенность];
                      ApplicationArea=#Basic,#Suite;
                      Image=CreateDocument;
                      OnAction=BEGIN
                                 CreateAttorneyLetter;
                               END;
                                }
      { 1210002 ;2   ;Action    ;
                      CaptionML=[ENU=Allocate FA Charges;
                                 RUS=Распределить издержки ОС];
                      ApplicationArea=#Basic,#Suite;
                      Image=Allocate;
                      OnAction=VAR
                                 PurchaseHeader@1210000 : Record 38;
                               BEGIN
                                 PurchaseHeader := Rec;
                                 PurchaseHeader.SETRECFILTER;
                                 REPORT.RUNMODAL(REPORT::"Allocate FA Charges",TRUE,FALSE,PurchaseHeader);
                               END;
                                }
      { 47      ;1   ;ActionGroup;
                      CaptionML=[ENU=Request Approval;
                                 RUS=Утверждение запросов] }
      { 45      ;2   ;Action    ;
                      Name=Approvals;
                      AccessByPermission=TableData 454=R;
                      CaptionML=[ENU=Approvals;
                                 RUS=Утверждения];
                      ToolTipML=[ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                                 RUS=Просмотр списка записей, ожидающих утверждения. Например, вы можете видеть имя пользователя, запросившего утверждение записи, время отправки запроса и время, когда он должен быть утвержден.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Approvals;
                      PromotedCategory=Category8;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalEntries@1001 : Page 658;
                               BEGIN
                                 ApprovalEntries.Setfilters(DATABASE::"Purchase Header","Document Type","No.");
                                 ApprovalEntries.RUN;
                               END;
                                }
      { 1470001 ;2   ;Action    ;
                      CaptionML=[ENU=Employee Si&gnatures;
                                 RUS=Под&писи сотрудников];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 12463;
                      RunPageLink=Table ID=CONST(38),
                                  Document Type=FIELD(Document Type),
                                  Document No.=FIELD(No.);
                      Image=Signature }
      { 1210000 ;2   ;Action    ;
                      CaptionML=[ENU=Letters of Attorney;
                                 RUS=Доверенности];
                      ApplicationArea=#Basic,#Suite;
                      Image=Email;
                      OnAction=BEGIN
                                 ShowAttorneyLetters;
                               END;
                                }
      { 142     ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=[ENU=Send A&pproval Request;
                                 RUS=Отправить &запрос на утверждение];
                      ToolTipML=[ENU=Send an approval request.;
                                 RUS=Отправка запроса на утверждение.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=NOT OpenApprovalEntriesExist;
                      PromotedIsBig=Yes;
                      Image=SendApprovalRequest;
                      PromotedCategory=Category8;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.CheckPurchaseApprovalPossible(Rec) THEN
                                   ApprovalsMgmt.OnSendPurchaseDocForApproval(Rec);
                               END;
                                }
      { 143     ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=[ENU=Cancel Approval Re&quest;
                                 RUS=Отменить запрос на &утверждение];
                      ToolTipML=[ENU=Cancel the approval request.;
                                 RUS=Отмена запроса на утверждение.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=CanCancelApprovalForRecord;
                      PromotedIsBig=Yes;
                      Image=CancelApprovalRequest;
                      PromotedCategory=Category8;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.OnCancelPurchaseApprovalRequest(Rec);
                               END;
                                }
      { 66      ;1   ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 RUS=У&чет];
                      Image=Post }
      { 68      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      CaptionML=[ENU=P&ost;
                                 RUS=У&чет];
                      ToolTipML=[ENU=Finalize the document or journal by posting the amounts and quantities to the related accounts in your company books.;
                                 RUS=Завершение подготовки документа или журнала путем учета сумм и количеств на соответствующих счетах в книгах организации.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      PromotedOnly=Yes;
                      OnAction=BEGIN
                                 VerifyTotal;
                                 Post(CODEUNIT::"Purch.-Post (Yes/No)");
                               END;
                                }
      { 33      ;2   ;Action    ;
                      Name=Preview;
                      CaptionML=[ENU=Preview Posting;
                                 RUS=Предварительный просмотр учета];
                      ToolTipML=[ENU=Review the different types of entries that will be created when you post the document or journal.;
                                 RUS=Просмотр различных типов операций, которые будут созданы в результате учета документа или журнала.];
                      ApplicationArea=#Basic,#Suite;
                      Image=ViewPostedOrder;
                      OnAction=VAR
                                 PurchPostYesNo@1000 : Codeunit 91;
                               BEGIN
                                 PurchPostYesNo.Preview(Rec);
                               END;
                                }
      { 67      ;2   ;Action    ;
                      Name=TestReport;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Test Report;
                                 RUS=Тестовый отчет];
                      ToolTipML=[ENU=View a test report so that you can find and correct any errors before you perform the actual posting of the journal or document.;
                                 RUS=Просмотр тестового отчета, чтобы можно было найти и исправить все ошибки перед учетом журнала или документа.];
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintPurchHeader(Rec);
                               END;
                                }
      { 69      ;2   ;Action    ;
                      Name=PostAndPrint;
                      ShortCutKey=Shift+F9;
                      CaptionML=[ENU=Post and &Print;
                                 RUS=Учет и &печать];
                      Promoted=Yes;
                      Visible=NOT IsOfficeAddin;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 VerifyTotal;
                                 Post(CODEUNIT::"Purch.-Post + Print");
                               END;
                                }
      { 70      ;2   ;Action    ;
                      Name=PostBatch;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post &Batch;
                                 RUS=&Пакетный учет];
                      Image=PostBatch;
                      OnAction=BEGIN
                                 VerifyTotal;
                                 REPORT.RUNMODAL(REPORT::"Batch Post Purchase Invoices",TRUE,TRUE,Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 7       ;2   ;Action    ;
                      Name=RemoveFromJobQueue;
                      CaptionML=[ENU=Remove From Job Queue;
                                 RUS=Удалить из очереди на работу];
                      ToolTipML=[ENU=Remove the scheduled processing of this record from the job queue.;
                                 RUS=Удаление запланированной обработки этой записи из очереди работ.];
                      ApplicationArea=#All;
                      Visible="Job Queue Status" = "Job Queue Status"::"Scheduled For Posting";
                      Image=RemoveLine;
                      OnAction=BEGIN
                                 CancelBackgroundPosting;
                               END;
                                }
      { 1470000 ;1   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Print;
                                 RUS=&Печать];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 DocPrint.PrintPurchHeader(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           RUS=Общее] }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the purchase document. The field is only visible if you have not set up a number series for the type of purchase document, or if the Manual Nos. field is selected for the number series.;
                           RUS=Определяет номер документа покупки. Это поле является видимым, только если для данного типа документа покупки не была настроена серия номеров, либо если для серии номеров было выбрано поле "Нумерация вручную".];
                ApplicationArea=#All;
                SourceExpr="No.";
                Importance=Additional;
                Visible=DocNoVisible;
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Vendor;
                           RUS=Поставщик];
                ToolTipML=[ENU=Specifies the name of the vendor who sends the items. The field is filled automatically when you fill the Buy-from Vendor No. field.;
                           RUS=Определяет имя поставщика, который отправляет товары. Поле заполняется автоматически при заполнении поля "Код поставщика".];
                ApplicationArea=#All;
                NotBlank=Yes;
                SourceExpr="Buy-from Vendor Name";
                Importance=Promoted;
                OnValidate=VAR
                             ApplicationAreaSetup@1000 : Record 9178;
                           BEGIN
                             IF GETFILTER("Buy-from Vendor No.") = xRec."Buy-from Vendor No." THEN
                               IF "Buy-from Vendor No." <> xRec."Buy-from Vendor No." THEN
                                 SETRANGE("Buy-from Vendor No.");

                             IF ApplicationAreaSetup.IsFoundationEnabled THEN
                               PurchCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);

                             CurrPage.UPDATE;
                           END;

                ShowMandatory=TRUE }

    { 51  ;2   ;Group     ;
                CaptionML=[ENU=Buy-from;
                           RUS=Поставщик];
                GroupType=Group }

    { 72  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           RUS=Адрес];
                ToolTipML=[ENU=Specifies the address of the vendor who ships the items.;
                           RUS=Определяет адрес поставщика, отгружающего товары.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from Address";
                Importance=Additional }

    { 74  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           RUS=Адрес 2];
                ToolTipML=[ENU=Specifies additional address information.;
                           RUS=Определяет дополнительные сведения адреса.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from Address 2";
                Importance=Additional }

    { 77  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           RUS=Индекс];
                ToolTipML=[ENU=Specifies the postal code.;
                           RUS=Определяет почтовый индекс.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from Post Code";
                Importance=Additional }

    { 76  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           RUS=Город];
                ToolTipML=[ENU=Specifies the city of the vendor who ships the items.;
                           RUS=Определяет город поставщика, отгружающего товары.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from City";
                Importance=Additional }

    { 128 ;3   ;Field     ;
                CaptionML=[ENU=Contact No.;
                           RUS=Код контакта];
                ToolTipML=[ENU=Specifies the number of your contact at the vendor.;
                           RUS=Определяет номер контактного лица поставщика.];
                SourceExpr="Buy-from Contact No.";
                Importance=Additional }

    { 8   ;2   ;Field     ;
                CaptionML=[ENU=Contact;
                           RUS=Контакт];
                ToolTipML=[ENU=Specifies the name of the person to contact about shipment of the item from this vendor.;
                           RUS=Определяет имя контактного лица для решения вопросов по отгрузке товара этим поставщиком.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Buy-from Contact" }

    { 1210007;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Description" }

    { 43  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date on which the vendor created the purchase document.;
                           RUS=Определяет дату создания этого документа покупки поставщиком.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Date";
                Importance=Additional }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the posting of the purchase document will be recorded.;
                           RUS=Определяет дату регистрации учета документа покупки.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Date";
                Importance=Promoted }

    { 30  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies when the invoice is due. The program calculates the date using the Payment Terms Code and Document Date fields.;
                           RUS=Определяет дату, на которую данный счет подлежит оплате. Дата автоматически вычисляется на основе значений полей "Код условий платежа" и "Дата документа".];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Due Date";
                Importance=Promoted }

    { 11  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the incoming document that this purchase document is created for.;
                           RUS=Определяет номер входящего документа, для которого создается этот документ покупки.];
                SourceExpr="Incoming Document Entry No.";
                Importance=Additional;
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number that the vendor uses on the invoice that they sent to you.;
                           RUS=Определяет номер, который используется поставщиком для счета, отправляемого вам.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Invoice No.";
                ShowMandatory=VendorInvoiceNoMandatory }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies which purchaser is assigned to the vendor.;
                           RUS=Определяет менеджера, который назначен для поставщика.];
                ApplicationArea=#Suite;
                SourceExpr="Purchaser Code";
                Importance=Additional;
                OnValidate=BEGIN
                             PurchaserCodeOnAfterValidate;
                           END;
                            }

    { 1102601000;2;Field  ;
                ToolTipML=[ENU=Specifies the campaign number the document is linked to.;
                           RUS=Определяет номер кампании, с которой связан документ.];
                SourceExpr="Campaign No.";
                Importance=Additional }

    { 115 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the responsibility center that is associated with the user, company, or vendor.;
                           RUS=Определяет код центра ответственности, который связан с пользователем, компанией или поставщиком.];
                SourceExpr="Responsibility Center";
                Importance=Additional }

    { 65  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of the user who is responsible for the document.;
                           RUS=Определяет код пользователя, который отвечает за документ.];
                SourceExpr="Assigned User ID";
                Importance=Additional }

    { 118 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the record is open, waiting to be approved, invoiced for prepayment, or released to the next stage of processing.;
                           RUS=Определяет статус записи: открыта, ожидает утверждения, с выставленным счетом на предоплату или выпущена на следующий этап обработки.];
                SourceExpr=Status;
                Importance=Promoted }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the status of a job queue entry that handles the posting of purchase orders.;
                           RUS=Определяет статус операции очереди работ, которая выполняет учет заказов на покупку.];
                ApplicationArea=#All;
                SourceExpr="Job Queue Status";
                Importance=Additional;
                Visible=JobQueuesUsed }

    { 54  ;1   ;Part      ;
                Name=PurchLines;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page55;
                Enabled="Buy-from Vendor No." <> '';
                Editable="Buy-from Vendor No." <> '';
                UpdatePropagation=Both }

    { 1905885101;1;Group  ;
                CaptionML=[ENU=Invoice Details;
                           RUS=Счет - подробности];
                GroupType=Group }

    { 104 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the currency code for amounts on the purchase lines.;
                           RUS=Определяет код валюты для сумм в строках покупки.];
                ApplicationArea=#Suite;
                SourceExpr="Currency Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             PurchCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               IF "Posting Date" <> 0D THEN
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date")
                               ELSE
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 48  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date you expect to receive the items on the purchase document.;
                           RUS=Определяет дату ожидаемого получения товаров по документу покупки.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Expected Receipt Date";
                Importance=Promoted }

    { 1210010;2;Field     ;
                ToolTipML=[ENU=Specifies the vendor receipts number associated with the purchase header.;
                           RUS=Определяет номер накладной поставщика, связанный с заголовком покупки.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Receipts No." }

    { 1210012;2;Field     ;
                ToolTipML=[ENU=Specifies the vendor receipts date associated with the purchase header.;
                           RUS=Определяет дату накладной поставщика, связанную с заголовком покупки.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor Receipts Date" }

    { 108 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the unit price on the line should be displayed including or excluding VAT.;
                           RUS=Определяет, должна цена за единицу в этой строке отображаться с НДС или без НДС.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Prices Including VAT";
                OnValidate=BEGIN
                             PricesIncludingVATOnAfterValid;
                           END;
                            }

    { 138 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the vendor's VAT specification to link transactions made for this vendor with the appropriate general ledger account according to the VAT posting setup.;
                           RUS=Определяет спецификацию НДС поставщика, чтобы связать транзакции, сделанные для этого поставщика, с соответствующим счетом главной книги согласно настройке учета НДС.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Bus. Posting Group";
                OnValidate=VAR
                             ApplicationAreaSetup@1000 : Record 9178;
                           BEGIN
                             CurrPage.UPDATE;

                             IF ApplicationAreaSetup.IsFoundationEnabled THEN
                               PurchCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;
                            }

    { 1210005;2;Field     ;
                ToolTipML=[ENU=Specifies the agreement number associated with the purchase header.;
                           RUS=Определяет номер соглашения, связанный с заголовком покупки.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Agreement No." }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount on the purchase document.;
                           RUS=Определяет формулу, по которой рассчитывается срок оплаты, дата скидки по оплате и сумма скидки по оплате по документу покупки.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Terms Code";
                Importance=Promoted }

    { 102 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how payment for the purchase document must be submitted, such as bank transfer or check.;
                           RUS=Определяет способ отправки платежа по документу покупки: например, с помощью банковского перевода или чека.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Method Code";
                Importance=Additional }

    { 50  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number for the transaction type, for the purpose of reporting to INTRASTAT.;
                           RUS=Определяет номер типа транзакции в целях отчетности Интрастат.];
                SourceExpr="Transaction Type" }

    { 85  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the dimension value code associated with the purchase header.;
                           RUS=Определяет код значения измерения, связанный с заголовком покупки.];
                SourceExpr="Shortcut Dimension 1 Code";
                OnValidate=BEGIN
                             ShortcutDimension1CodeOnAfterV;
                           END;
                            }

    { 87  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the dimension value code associated with the purchase header.;
                           RUS=Определяет код значения измерения, связанный с заголовком покупки.];
                SourceExpr="Shortcut Dimension 2 Code";
                OnValidate=BEGIN
                             ShortcutDimension2CodeOnAfterV;
                           END;
                            }

    { 32  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the payment discount percent granted if payment is made on or before the date in the Pmt. Discount Date field.;
                           RUS=Определяет процент скидки по оплате, которая предоставляется при условии оплаты не позже даты, указанной в поле "Дата скидки оплаты".];
                SourceExpr="Payment Discount %" }

    { 34  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the last date on which you can pay the invoice and still receive a payment discount.;
                           RUS=Определяет последнюю дату, когда можно осуществить оплатить счет и получить скидку по оплате.];
                SourceExpr="Pmt. Discount Date";
                Importance=Additional }

    { 89  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a code for the location where you want the items to be placed when they are received.;
                           RUS=Определяет код склада, в который требуется поместить товары при их получении.];
                SourceExpr="Location Code";
                Importance=Additional }

    { 46  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code that represents the shipment method for this purchase.;
                           RUS=Определяет код метода поставки для этой покупки.];
                SourceExpr="Shipment Method Code";
                Importance=Additional }

    { 17  ;2   ;Field     ;
                ToolTipML=[ENU=Identifies the payment of the purchase invoice.;
                           RUS=Идентифицирует оплату счета покупки.];
                SourceExpr="Payment Reference";
                Importance=Additional }

    { 15  ;2   ;Field     ;
                ToolTipML=[ENU=Identifies the vendor who sent the purchase invoice.;
                           RUS=Идентифицирует поставщика, который отправил счет покупки.];
                SourceExpr="Creditor No.";
                Importance=Additional }

    { 91  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the posted invoice will be included in the payment suggestion.;
                           RUS=Определяет, будет ли включен учтенный счет в предложение по оплате.];
                SourceExpr="On Hold";
                Importance=Additional }

    { 1101495000;2;Field  ;
                SourceExpr="Vendor Posting Group" }

    { 1101495001;2;Field  ;
                SourceExpr="Gen. Bus. Posting Group" }

    { 1906801201;1;Group  ;
                CaptionML=[ENU=Shipping and Payment;
                           RUS=Отгрузка и оплата];
                GroupType=Group }

    { 53  ;2   ;Group     ;
                CaptionML=[ENU=Ship-to;
                           RUS=Получатель];
                GroupType=Group }

    { 81  ;3   ;Field     ;
                CaptionML=[ENU=Code;
                           RUS=Код];
                ToolTipML=[ENU=Specifies the order address code linked to the relevant vendor's order address.;
                           RUS=Определяет код адреса заказа, связанный с соответствующим адресом заказа поставщика.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Order Address Code";
                Importance=Additional }

    { 36  ;3   ;Field     ;
                CaptionML=[ENU=Name;
                           RUS=Название];
                ToolTipML=[ENU=Specifies the name of the company at the address to which you want the items in the purchase order to be shipped.;
                           RUS=Определяет название организации по адресу, по которому требуется поставить товары по заказу на покупку.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Name";
                Importance=Additional }

    { 38  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           RUS=Адрес];
                ToolTipML=[ENU=Specifies the address that you want the items in the purchase order to be shipped to.;
                           RUS=Определяет адрес, по которому требуется поставить товары, указанные в заказе на покупку.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Address";
                Importance=Additional }

    { 40  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           RUS=Адрес 2];
                ToolTipML=[ENU=Specifies additional address information.;
                           RUS=Определяет дополнительные сведения адреса.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Address 2";
                Importance=Additional }

    { 94  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           RUS=Индекс];
                ToolTipML=[ENU=Specifies the postal code.;
                           RUS=Определяет почтовый индекс.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Post Code";
                Importance=Additional }

    { 42  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           RUS=Город];
                ToolTipML=[ENU=Specifies the city the items in the purchase order will be shipped to.;
                           RUS=Определяет город, в который будут поставлены товары, указанные в заказе на покупку.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to City";
                Importance=Additional }

    { 44  ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           RUS=Контакт];
                ToolTipML=[ENU=Specifies the name of a contact person for the address where the items in the purchase order should be shipped.;
                           RUS=Определяет имя контактного лица для адреса, по которому должны быть поставлены товары, указанные в заказе на покупку.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Ship-to Contact";
                Importance=Additional }

    { 56  ;2   ;Group     ;
                CaptionML=[ENU=Pay-to;
                           RUS=Получатель оплаты];
                GroupType=Group }

    { 18  ;3   ;Field     ;
                CaptionML=[ENU=Name;
                           RUS=Название];
                ToolTipML=[ENU=Specifies the name of the vendor sending the invoice.;
                           RUS=Определяет имя поставщика, выставившего счет.];
                ApplicationArea=#Basic,#Suite;
                NotBlank=Yes;
                SourceExpr="Pay-to Name";
                Importance=Promoted;
                OnValidate=VAR
                             ApplicationAreaSetup@1000 : Record 9178;
                           BEGIN
                             IF GETFILTER("Pay-to Vendor No.") = xRec."Pay-to Vendor No." THEN
                               IF "Pay-to Vendor No." <> xRec."Pay-to Vendor No." THEN
                                 SETRANGE("Pay-to Vendor No.");

                             IF ApplicationAreaSetup.IsFoundationEnabled THEN
                               PurchCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);

                             CurrPage.UPDATE;
                           END;
                            }

    { 20  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           RUS=Адрес];
                ToolTipML=[ENU=Specifies the address of the vendor sending the invoice.;
                           RUS=Определяет адрес поставщика, выставившего счет.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to Address";
                Importance=Additional }

    { 22  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           RUS=Адрес 2];
                ToolTipML=[ENU=Specifies additional address information.;
                           RUS=Определяет дополнительные сведения адреса.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to Address 2";
                Importance=Additional }

    { 82  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           RUS=Индекс];
                ToolTipML=[ENU=Specifies the postal code.;
                           RUS=Определяет почтовый индекс.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to Post Code";
                Importance=Additional }

    { 24  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           RUS=Город];
                ToolTipML=[ENU=Specifies the city of the vendor sending the invoice.;
                           RUS=Определяет город поставщика, выставившего счет.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to City";
                Importance=Additional }

    { 130 ;3   ;Field     ;
                CaptionML=[ENU=Contact No.;
                           RUS=Код контакта];
                ToolTipML=[ENU=Specifies the number of the contact who sends the invoice.;
                           RUS=Определяет номер контакта, который отправляет счет.];
                SourceExpr="Pay-to Contact No.";
                Importance=Additional }

    { 26  ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           RUS=Контакт];
                ToolTipML=[ENU=Specifies the name of the person to contact about an invoice from this vendor.;
                           RUS=Определяет имя контактного лица для решения вопросов по счету, полученному от этого поставщика.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Pay-to Contact";
                Importance=Additional }

    { 1907468901;1;Group  ;
                CaptionML=[ENU=Foreign Trade;
                           RUS=Внешняя торговля] }

    { 100 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a code for the purchase header's transaction specification here.;
                           RUS=Определяет код спецификации транзакции из заголовка покупки.];
                SourceExpr="Transaction Specification" }

    { 52  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the transport method to be used with this purchase header.;
                           RUS=Определяет код метода перевозки, который будет использоваться для этого заголовка покупки.];
                SourceExpr="Transport Method" }

    { 96  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the port of entry where the items pass into your country/region.;
                           RUS=Определяет код таможни, через которую товар попадает в страну/регион.];
                SourceExpr="Entry Point" }

    { 98  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code for the area of the vendor's address.;
                           RUS=Определяет код региона, в котором находится адрес поставщика.];
                SourceExpr=Area }

    { 1905569601;1;Group  ;
                CaptionML=[ENU=VAT;
                           RUS=НДС] }

    { 1470141;2;Field     ;
                ToolTipML=[ENU=Specifies if the purchase header contains an additional VAT ledger sheet.;
                           RUS=Определяет, содержит ли заголовок покупки дополнительный лист книги НДС.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Additional VAT Ledger Sheet" }

    { 1470140;2;Field     ;
                ToolTipML=[ENU=Specifies the date of the corrected document associated with the purchase header.;
                           RUS=Определяет дату скорректированного документа, связанного с заголовком покупки.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Corrected Document Date" }

    { 1210014;2;Field     ;
                ToolTipML=[ENU=Specifies the vendor VAT invoice number associated with the purchase header.;
                           RUS=Определяет номер счета-фактуры поставщика, связанный с заголовком покупки.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor VAT Invoice No." }

    { 1210016;2;Field     ;
                ToolTipML=[ENU=Specifies the vendor VAT invoice date associated with the purchase header.;
                           RUS=Определяет дату счета-фактуры поставщика, связанную с заголовком покупки.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor VAT Invoice Date" }

    { 1210018;2;Field     ;
                ToolTipML=[ENU=Specifies the received date of the vendor VAT invoice associated with the purchase header.;
                           RUS=Определяет дату получения счета-фактуры поставщика, связанную с заголовком покупки.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Vendor VAT Invoice Rcvd Date" }

    { 1210013;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Entry Type" }

    { 1170000004;2;Field  ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Corrective Document" }

    { 1170000002;2;Field  ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Corrective Doc. Type" }

    { 1170000003;2;Field  ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Corrected Doc. Type" }

    { 1170000001;2;Field  ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Corrected Doc. No." }

    { 1170000000;2;Field  ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Revision No." }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1101495003;1;Part   ;
                CaptionML=[ENU=Header Dimensions;
                           RUS=Заголовок Измерения];
                ApplicationArea=#Basic,#Suite;
                SubPageLink=Dimension Set ID=FIELD(Dimension Set ID);
                PagePartID=Page699;
                PartType=Page }

    { 1101495002;1;Part   ;
                CaptionML=[ENU=Line Dimensions;
                           RUS=Строка Измерения];
                ApplicationArea=#Basic,#Suite;
                SubPageLink=Dimension Set ID=FIELD(Dimension Set ID);
                PagePartID=Page699;
                ProviderID=54;
                PartType=Page }

    { 27  ;1   ;Part      ;
                ApplicationArea=#All;
                SubPageLink=Table ID=CONST(38),
                            Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.);
                PagePartID=Page9103;
                Visible=OpenApprovalEntriesExistForCurrUser;
                PartType=Page }

    { 1906354007;1;Part   ;
                Name=ApprovalFactBox;
                PagePartID=Page9092;
                Visible=FALSE;
                PartType=Page }

    { 1901138007;1;Part   ;
                SubPageLink=No.=FIELD(Buy-from Vendor No.);
                PagePartID=Page9093;
                Visible=FALSE;
                PartType=Page }

    { 31  ;1   ;Part      ;
                Name=IncomingDocAttachFactBox;
                ApplicationArea=#Basic,#Suite;
                PagePartID=Page193;
                Visible=NOT IsOfficeAddin;
                PartType=Page;
                ShowFilter=No }

    { 1904651607;1;Part   ;
                SubPageLink=No.=FIELD(Pay-to Vendor No.);
                PagePartID=Page9094;
                PartType=Page }

    { 1903435607;1;Part   ;
                SubPageLink=No.=FIELD(Buy-from Vendor No.);
                PagePartID=Page9095;
                Visible=FALSE;
                PartType=Page }

    { 1906949207;1;Part   ;
                SubPageLink=No.=FIELD(Pay-to Vendor No.);
                PagePartID=Page9096;
                Visible=FALSE;
                PartType=Page }

    { 3   ;1   ;Part      ;
                SubPageLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(Document No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page9100;
                ProviderID=54;
                Visible=FALSE;
                PartType=Page }

    { 49  ;1   ;Part      ;
                Name=WorkflowStatus;
                ApplicationArea=#All;
                PagePartID=Page1528;
                Visible=ShowWorkflowStatus;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      DummyApplicationAreaSetup@1027 : Record 9178;
      CopyPurchDoc@1002 : Report 492;
      MoveNegPurchLines@1005 : Report 6698;
      ReportPrint@1003 : Codeunit 228;
      UserMgt@1004 : Codeunit 5700;
      PurchInfoPaneMgmt@1210001 : Codeunit 7181;
      DocPrint@1210000 : Codeunit 229;
      PurchHistoryBtnVisible@19036652 : Boolean INDATASET;
      PayToCommentPictVisible@19020250 : Boolean INDATASET;
      PayToCommentBtnVisible@19034709 : Boolean INDATASET;
      PurchHistoryBtn1Visible@19028975 : Boolean INDATASET;
      PurchCalcDiscByType@1007 : Codeunit 66;
      OfficeMgt@1022 : Codeunit 1630;
      ChangeExchangeRate@1001 : Page 511;
      HasIncomingDocument@1010 : Boolean;
      DocNoVisible@1006 : Boolean;
      VendorInvoiceNoMandatory@1008 : Boolean;
      OpenApprovalEntriesExist@1009 : Boolean;
      OpenApprovalEntriesExistForCurrUser@1000 : Boolean;
      ShowWorkflowStatus@1011 : Boolean;
      JobQueuesUsed@1014 : Boolean;
      OpenPostedPurchaseInvQst@1015 : TextConst 'ENU=The invoice has been posted and moved to the Posted Purchase Invoices window.\\Do you want to open the posted invoice?;RUS=Счет учтен и перемещен в окно учтенных счетов покупки.\\Открыть учтенный счет?';
      IsOfficeAddin@1017 : Boolean;
      CanCancelApprovalForRecord@1013 : Boolean;
      DocumentIsPosted@1012 : Boolean;
      CreateIncomingDocumentEnabled@1016 : Boolean;
      CreateIncomingDocumentVisible@1021 : Boolean;
      CreateIncomingDocFromEmailAttachment@1018 : Boolean;
      TotalsMismatchErr@1019 : TextConst 'ENU=The invoice cannot be posted because the total is different from the total on the related incoming document.;RUS=Невозможно учесть счет, поскольку итог отличается от итога в связанном входящем документе.';
      IncomingDocEmailAttachmentEnabled@1020 : Boolean;

    PROCEDURE LineModified@7();
    BEGIN
    END;

    LOCAL PROCEDURE Post@4(PostingCodeunitID@1000 : Integer);
    VAR
      PurchaseHeader@1002 : Record 38;
      PurchInvHeader@1003 : Record 122;
      LinesInstructionMgt@1001 : Codeunit 1320;
      InstructionMgt@1004 : Codeunit 1330;
    BEGIN
      IF DummyApplicationAreaSetup.IsFoundationEnabled THEN
        LinesInstructionMgt.PurchaseCheckAllLinesHaveQuantityAssigned(Rec);

      SendToPosting(PostingCodeunitID);

      DocumentIsPosted := NOT PurchaseHeader.GET("Document Type","No.");

      IF "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting" THEN
        CurrPage.CLOSE;
      CurrPage.UPDATE(FALSE);

      IF PostingCodeunitID <> CODEUNIT::"Purch.-Post (Yes/No)" THEN
        EXIT;

      IF IsOfficeAddin THEN BEGIN
        PurchInvHeader.SETRANGE("Pre-Assigned No.","No.");
        PurchInvHeader.SETRANGE("Order No.",'');
        IF PurchInvHeader.FINDFIRST THEN
          PAGE.RUN(PAGE::"Posted Purchase Invoice",PurchInvHeader);
      END ELSE
        IF InstructionMgt.IsEnabled(InstructionMgt.ShowPostedConfirmationMessageCode) THEN
          ShowPostedConfirmationMessage;
    END;

    LOCAL PROCEDURE VerifyTotal@22();
    BEGIN
      IF NOT IsTotalValid THEN
        ERROR(TotalsMismatchErr);
    END;

    LOCAL PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CurrPage.PurchLines.PAGE.ApproveCalcInvDisc;
    END;

    LOCAL PROCEDURE PurchaserCodeOnAfterValidate@19046120();
    BEGIN
      CurrPage.PurchLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE ShortcutDimension1CodeOnAfterV@19029405();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShortcutDimension2CodeOnAfterV@19008725();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PricesIncludingVATOnAfterValid@19009096();
    BEGIN
      CurrPage.UPDATE;
      CALCFIELDS("Invoice Discount Amount");
    END;

    LOCAL PROCEDURE SetDocNoVisible@2();
    VAR
      DocumentNoVisibility@1000 : Codeunit 1400;
      DocType@1003 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Reminder,FinChMemo';
    BEGIN
      DocNoVisible := DocumentNoVisibility.PurchaseDocumentNoIsVisible(DocType::Invoice,"No.");
    END;

    LOCAL PROCEDURE SetExtDocNoMandatoryCondition@3();
    VAR
      PurchasesPayablesSetup@1000 : Record 312;
    BEGIN
      PurchasesPayablesSetup.GET;
      VendorInvoiceNoMandatory := PurchasesPayablesSetup."Ext. Doc. No. Mandatory"
    END;

    LOCAL PROCEDURE SetControlAppearance@5();
    VAR
      ApprovalsMgmt@1002 : Codeunit 1535;
    BEGIN
      HasIncomingDocument := "Incoming Document Entry No." <> 0;
      CreateIncomingDocumentEnabled := (NOT HasIncomingDocument) AND ("No." <> '');
      SetExtDocNoMandatoryCondition;

      IncomingDocEmailAttachmentEnabled := OfficeMgt.EmailHasAttachments;
      OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);

      CanCancelApprovalForRecord := ApprovalsMgmt.CanCancelApprovalForRecord(RECORDID);
    END;

    LOCAL PROCEDURE ShowPostedConfirmationMessage@13();
    VAR
      PurchInvHeader@1000 : Record 122;
      InstructionMgt@1001 : Codeunit 1330;
    BEGIN
      PurchInvHeader.SETRANGE("Pre-Assigned No.","No.");
      PurchInvHeader.SETRANGE("Order No.",'');
      IF PurchInvHeader.FINDFIRST THEN
        IF InstructionMgt.ShowConfirm(OpenPostedPurchaseInvQst,InstructionMgt.ShowPostedConfirmationMessageCode) THEN
          PAGE.RUN(PAGE::"Posted Purchase Invoice",PurchInvHeader);
    END;

    BEGIN
    {
      NC TR266 EB выведены поля "Vendor Posting Group", "Gen. Bus. Posting Group"
      NC TR272 DP Предпросмотр учета
      -----
      NC NOS-26 ENK
    }
    END.
  }
}

