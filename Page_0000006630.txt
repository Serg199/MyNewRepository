OBJECT Page 6630 Sales Return Order
{
  OBJECT-PROPERTIES
  {
    Date=28.01.17;
    Time=12:00:00;
    Version List=NAVW110.00.00.15140,NAVRU10.00.00.15140;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Return Order;
               RUS=Возврат продажи];
    SourceTable=Table36;
    SourceTableView=WHERE(Document Type=FILTER(Return Order));
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Approve,Release,Posting,Prepare,Invoice,Request Approval;
                                RUS=Создать,Обработать,Отчет,Утвердить,Выпустить,Учет,Подготовить,Счет,Запросить утверждение];
    OnOpenPage=BEGIN
                 IF UserMgt.GetSalesFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetSalesFilter);
                   FILTERGROUP(0);
                 END;

                 SetDocNoVisible;
               END;

    OnAfterGetRecord=BEGIN
                       SetControlAppearance;
                     END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserMgt.GetSalesFilter;
                  IF (NOT DocNoVisible) AND ("No." = '') THEN
                    SetSellToCustomerFromFilter;
                END;

    OnInsertRecord=BEGIN
                     IF DocNoVisible THEN
                       CheckCreditMaxBeforeInsert;
                   END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     EXIT(ConfirmDeletion);
                   END;

    OnQueryClosePage=BEGIN
                       IF NOT DocumentIsPosted THEN
                         EXIT(ConfirmCloseUnposted);
                     END;

    OnAfterGetCurrRecord=BEGIN
                           ShowWorkflowStatus := CurrPage.WorkflowStatus.PAGE.SetFilterOnWorkflowRecord(RECORDID);
                           CurrPage.ApprovalFactBox.PAGE.UpdateApprovalEntriesFromSourceRecord(RECORDID);
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 49      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Return Order;
                                 RUS=&Возврат];
                      Image=Return }
      { 51      ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 RUS=Статистика];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Statistics;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Handled@1000 : Boolean;
                               BEGIN
                                 OnBeforeStatisticsAction(Rec,Handled);
                                 IF NOT Handled THEN BEGIN
                                   OpenSalesOrderStatistics;
                                   SalesCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                                 END
                               END;
                                }
      { 52      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 RUS=Карточка];
                      RunObject=Page 21;
                      RunPageLink=No.=FIELD(Sell-to Customer No.);
                      Promoted=No;
                      PromotedIsBig=No;
                      Image=EditLines }
      { 105     ;2   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 RUS=Измерения];
                      ToolTipML=[ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 RUS=Просмотр или изменение измерений, например области, проекта или отдела, которые можно назначать документам покупки и продажи для распределения себестоимости и анализа истории транзакций.];
                      Promoted=No;
                      Enabled="No." <> '';
                      PromotedIsBig=No;
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 140     ;2   ;Action    ;
                      Name=Approvals;
                      AccessByPermission=TableData 454=R;
                      CaptionML=[ENU=Approvals;
                                 RUS=Утверждения];
                      ToolTipML=[ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                                 RUS=Просмотр списка записей, ожидающих утверждения. Например, вы можете видеть имя пользователя, запросившего утверждение записи, время отправки запроса и время, когда он должен быть утвержден.];
                      Image=Approvals;
                      OnAction=VAR
                                 ApprovalEntries@1000 : Page 658;
                               BEGIN
                                 ApprovalEntries.Setfilters(DATABASE::"Sales Header","Document Type","No.");
                                 ApprovalEntries.RUN;
                               END;
                                }
      { 53      ;2   ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 RUS=Ко&мментарии];
                      RunObject=Page 67;
                      RunPageLink=Document Type=CONST(Return Order),
                                  No.=FIELD(No.),
                                  Document Line No.=CONST(0);
                      Promoted=No;
                      PromotedIsBig=No;
                      Image=ViewComments }
      { 15      ;1   ;ActionGroup;
                      CaptionML=[ENU=Documents;
                                 RUS=Документы];
                      Image=Documents }
      { 5801    ;2   ;Action    ;
                      CaptionML=[ENU=Return Receipts;
                                 RUS=Возвратные прих. накладные];
                      RunObject=Page 6662;
                      RunPageView=SORTING(Return Order No.);
                      RunPageLink=Return Order No.=FIELD(No.);
                      Image=ReturnReceipt }
      { 5802    ;2   ;Action    ;
                      CaptionML=[ENU=Cred&it Memos;
                                 RUS=Кре&дит-ноты];
                      RunObject=Page 144;
                      RunPageView=SORTING(Return Order No.);
                      RunPageLink=Return Order No.=FIELD(No.);
                      Image=CreditMemo }
      { 1210008 ;2   ;Action    ;
                      CaptionML=[ENU=Employee Sig&natures;
                                 RUS=Подп&иси сотрудников];
                      RunObject=Page 12463;
                      RunPageLink=Table ID=CONST(36),
                                  Document Type=FIELD(Document Type),
                                  Document No.=FIELD(No.);
                      Image=Signature }
      { 131     ;2   ;Separator  }
      { 17      ;1   ;ActionGroup;
                      CaptionML=[ENU=Warehouse;
                                 RUS=Склад];
                      Image=Warehouse }
      { 130     ;2   ;Action    ;
                      CaptionML=[ENU=In&vt. Put-away/Pick Lines;
                                 RUS=Строки &товарного размещения/подбора];
                      RunObject=Page 5774;
                      RunPageView=SORTING(Source Document,Source No.,Location Code);
                      RunPageLink=Source Document=CONST(Sales Return Order),
                                  Source No.=FIELD(No.);
                      Image=PickLines }
      { 120     ;2   ;Action    ;
                      CaptionML=[ENU=Whse. Receipt Lines;
                                 RUS=Строки складской приемки];
                      RunObject=Page 7342;
                      RunPageView=SORTING(Source Type,Source Subtype,Source No.,Source Line No.);
                      RunPageLink=Source Type=CONST(37),
                                  Source Subtype=FIELD(Document Type),
                                  Source No.=FIELD(No.);
                      Image=ReceiptLines }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 29      ;1   ;ActionGroup;
                      CaptionML=[ENU=Approval;
                                 RUS=Утверждение] }
      { 27      ;2   ;Action    ;
                      Name=Approve;
                      CaptionML=[ENU=Approve;
                                 RUS=Утвердить];
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.ApproveRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 25      ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=[ENU=Reject;
                                 RUS=Отклонить];
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.RejectRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 23      ;2   ;Action    ;
                      Name=Delegate;
                      CaptionML=[ENU=Delegate;
                                 RUS=Делегировать];
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.DelegateRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 21      ;2   ;Action    ;
                      Name=Comment;
                      CaptionML=[ENU=Comments;
                                 RUS=Комментарии];
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.GetApprovalComment(Rec);
                               END;
                                }
      { 119     ;1   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Print;
                                 RUS=&Печать];
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 DocPrint.PrintSalesHeader(Rec);
                               END;
                                }
      { 7       ;1   ;ActionGroup;
                      CaptionML=[ENU=Release;
                                 RUS=Выпустить];
                      Image=ReleaseDoc }
      { 112     ;2   ;Action    ;
                      Name=Release;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=[ENU=Re&lease;
                                 RUS=Вы&пустить];
                      Image=ReleaseDoc;
                      OnAction=VAR
                                 ReleaseSalesDoc@1000 : Codeunit 414;
                               BEGIN
                                 ReleaseSalesDoc.PerformManualRelease(Rec);
                               END;
                                }
      { 113     ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=[ENU=Re&open;
                                 RUS=&Открыть];
                      ToolTipML=[ENU=Reopen the document to change it after it has been approved. Approved documents have the Released status and must be opened before they can be changed;
                                 RUS=Повторное открытие документа для его изменения после утверждения. Утвержденные документы имеют статус "Выпущено", и их необходимо открывать перед изменением.];
                      Promoted=Yes;
                      Enabled=Status <> Status::Open;
                      Image=ReOpen;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ReleaseSalesDoc@1001 : Codeunit 414;
                               BEGIN
                                 ReleaseSalesDoc.PerformManualReopen(Rec);
                               END;
                                }
      { 600     ;2   ;Separator  }
      { 54      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 RUS=Ф&ункции];
                      Image=Action }
      { 55      ;2   ;Action    ;
                      Name=CalculateInvoiceDiscount;
                      AccessByPermission=TableData 19=R;
                      CaptionML=[ENU=Calculate &Invoice Discount;
                                 RUS=Вычи&слить скидку по счету];
                      Image=CalculateInvoiceDiscount;
                      OnAction=BEGIN
                                 ApproveCalcInvDisc;
                                 SalesCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 132     ;2   ;Separator  }
      { 93      ;2   ;Action    ;
                      ShortCutKey=Shift+F11;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Apply Entries;
                                 RUS=Применить операции];
                      Promoted=Yes;
                      Image=ApplyEntries;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Sales Header Apply",Rec);
                               END;
                                }
      { 115     ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create Return-Related &Documents;
                                 RUS=Создать &документы для возврата];
                      Promoted=Yes;
                      Image=ApplyEntries;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CLEAR(CreateRetRelDocs);
                                 CreateRetRelDocs.SetSalesHeader(Rec);
                                 CreateRetRelDocs.RUNMODAL;
                                 CreateRetRelDocs.ShowDocuments;
                               END;
                                }
      { 133     ;2   ;Separator  }
      { 56      ;2   ;Action    ;
                      Name=CopyDocument;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Document;
                                 RUS=Копировать документ];
                      Promoted=Yes;
                      Image=CopyDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CopySalesDoc.SetSalesHeader(Rec);
                                 CopySalesDoc.RUNMODAL;
                                 CLEAR(CopySalesDoc);
                                 IF GET("Document Type","No.") THEN;
                               END;
                                }
      { 118     ;2   ;Action    ;
                      Name=MoveNegativeLines;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Move Negative Lines;
                                 RUS=Перемещение отрицательных строк];
                      Image=MoveNegativeLines;
                      OnAction=BEGIN
                                 CLEAR(MoveNegSalesLines);
                                 MoveNegSalesLines.SetSalesHeader(Rec);
                                 MoveNegSalesLines.RUNMODAL;
                                 MoveNegSalesLines.ShowDocument;
                               END;
                                }
      { 139     ;2   ;Action    ;
                      Name=GetPostedDocumentLinesToReverse;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get Posted Doc&ument Lines to Reverse;
                                 RUS=Получить учт. строки доку&ментов для сторнир.];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ReverseLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 GetPstdDocLinesToRevere;
                               END;
                                }
      { 145     ;2   ;Action    ;
                      CaptionML=[ENU=Archive Document;
                                 RUS=Архивировать документ];
                      Image=Archive;
                      OnAction=BEGIN
                                 ArchiveManagement.ArchiveSalesDocument(Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 31      ;2   ;Action    ;
                      AccessByPermission=TableData 410=R;
                      CaptionML=[ENU=Send IC Return Order Cnfmn.;
                                 RUS=Отправить подтв. запроса МФ на возврат];
                      Image=IntercompanyOrder;
                      OnAction=VAR
                                 ICInOutboxMgt@1000 : Codeunit 427;
                                 ApprovalsMgmt@1003 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckSales(Rec) THEN
                                   ICInOutboxMgt.SendSalesDoc(Rec,FALSE);
                               END;
                                }
      { 135     ;2   ;Separator  }
      { 13      ;1   ;ActionGroup;
                      CaptionML=[ENU=Warehouse;
                                 RUS=Склад];
                      Image=Warehouse }
      { 136     ;2   ;Separator  }
      { 122     ;2   ;Action    ;
                      AccessByPermission=TableData 7316=R;
                      CaptionML=[ENU=Create &Whse. Receipt;
                                 RUS=Создать складскую &приемку];
                      Image=NewReceipt;
                      OnAction=VAR
                                 GetSourceDocInbound@1000 : Codeunit 5751;
                               BEGIN
                                 GetSourceDocInbound.CreateFromSalesReturnOrder(Rec);
                               END;
                                }
      { 121     ;2   ;Action    ;
                      AccessByPermission=TableData 7340=R;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create Inventor&y Put-away/Pick;
                                 RUS=Создать &товарное размещение / подбор];
                      Image=CreateInventoryPickup;
                      OnAction=BEGIN
                                 CreateInvtPutAwayPick;
                               END;
                                }
      { 30      ;2   ;Separator  }
      { 59      ;1   ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 RUS=У&чет];
                      Image=Post }
      { 61      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      Ellipsis=Yes;
                      CaptionML=[ENU=P&ost;
                                 RUS=У&чет];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Sales-Post (Yes/No)");
                               END;
                                }
      { 11      ;2   ;Action    ;
                      CaptionML=[ENU=Preview Posting;
                                 RUS=Предварительный просмотр учета];
                      ToolTipML=[ENU=Review the different types of entries that will be created when you post the document or journal.;
                                 RUS=Просмотр различных типов операций, которые будут созданы в результате учета документа или журнала.];
                      Image=ViewPostedOrder;
                      OnAction=BEGIN
                                 ShowPreview;
                               END;
                                }
      { 60      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Test Report;
                                 RUS=Тестовый отчет];
                      ToolTipML=[ENU=View a test report so that you can find and correct any errors before you perform the actual posting of the journal or document.;
                                 RUS=Просмотр тестового отчета, чтобы можно было найти и исправить все ошибки перед учетом журнала или документа.];
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintSalesHeader(Rec);
                               END;
                                }
      { 62      ;2   ;Action    ;
                      ShortCutKey=Shift+F9;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post and &Print;
                                 RUS=Учет и &печать];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Sales-Post + Print");
                               END;
                                }
      { 63      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post &Batch;
                                 RUS=&Пакетный учет];
                      Image=PostBatch;
                      OnAction=BEGIN
                                 REPORT.RUNMODAL(REPORT::"Batch Post Sales Return Orders",TRUE,TRUE,Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 3       ;2   ;Action    ;
                      CaptionML=[ENU=Remove From Job Queue;
                                 RUS=Удалить из очереди на работу];
                      Visible=JobQueueVisible;
                      Image=RemoveLine;
                      OnAction=BEGIN
                                 CancelBackgroundPosting;
                               END;
                                }
      { 9       ;1   ;ActionGroup;
                      CaptionML=[ENU=Request Approval;
                                 RUS=Утверждение запросов] }
      { 142     ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=[ENU=Send A&pproval Request;
                                 RUS=Отправить &запрос на утверждение];
                      Promoted=Yes;
                      Enabled=NOT OpenApprovalEntriesExist;
                      PromotedIsBig=Yes;
                      Image=SendApprovalRequest;
                      PromotedCategory=Category9;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.CheckSalesApprovalPossible(Rec) THEN
                                   ApprovalsMgmt.OnSendSalesDocForApproval(Rec);
                               END;
                                }
      { 143     ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=[ENU=Cancel Approval Re&quest;
                                 RUS=Отменить запрос на &утверждение];
                      Promoted=Yes;
                      Enabled=CanCancelApprovalForRecord;
                      PromotedIsBig=Yes;
                      Image=CancelApprovalRequest;
                      PromotedCategory=Category9;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.OnCancelSalesApprovalRequest(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           RUS=Общее] }

    { 2   ;2   ;Field     ;
                SourceExpr="No.";
                Importance=Additional;
                Visible=DocNoVisible;
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Customer;
                           RUS=Клиент];
                SourceExpr="Sell-to Customer Name";
                Importance=Promoted;
                OnValidate=BEGIN
                             IF GETFILTER("Sell-to Customer No.") = xRec."Sell-to Customer No." THEN
                               IF "Sell-to Customer No." <> xRec."Sell-to Customer No." THEN
                                 SETRANGE("Sell-to Customer No.");

                             CurrPage.UPDATE;
                           END;

                ShowMandatory=TRUE;
                QuickEntry=FALSE }

    { 35  ;2   ;Group     ;
                CaptionML=[ENU=Sell-to;
                           RUS=Клиент];
                GroupType=Group }

    { 65  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           RUS=Адрес];
                SourceExpr="Sell-to Address";
                Importance=Additional }

    { 67  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           RUS=Адрес 2];
                SourceExpr="Sell-to Address 2";
                Importance=Additional }

    { 70  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           RUS=Индекс];
                SourceExpr="Sell-to Post Code";
                Importance=Additional }

    { 69  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           RUS=Город];
                SourceExpr="Sell-to City";
                Importance=Additional;
                QuickEntry=FALSE }

    { 117 ;3   ;Field     ;
                CaptionML=[ENU=Contact No.;
                           RUS=Код контакта];
                SourceExpr="Sell-to Contact No.";
                Importance=Additional;
                OnValidate=BEGIN
                             IF GETFILTER("Sell-to Contact No.") = xRec."Sell-to Contact No." THEN
                               IF "Sell-to Contact No." <> xRec."Sell-to Contact No." THEN
                                 SETRANGE("Sell-to Contact No.");
                           END;
                            }

    { 8   ;2   ;Field     ;
                CaptionML=[ENU=Contact;
                           RUS=Контакт];
                SourceExpr="Sell-to Contact" }

    { 1210006;2;Field     ;
                SourceExpr="Posting Description" }

    { 39  ;2   ;Field     ;
                SourceExpr="Document Date";
                QuickEntry=FALSE }

    { 12  ;2   ;Field     ;
                SourceExpr="Posting Date";
                QuickEntry=FALSE }

    { 125 ;2   ;Field     ;
                SourceExpr="Order Date";
                Importance=Promoted;
                QuickEntry=FALSE }

    { 58  ;2   ;Field     ;
                SourceExpr="External Document No.";
                Importance=Promoted }

    { 147 ;2   ;Field     ;
                SourceExpr="No. of Archived Versions" }

    { 10  ;2   ;Field     ;
                SourceExpr="Salesperson Code";
                OnValidate=BEGIN
                             SalespersonCodeOnAfterValidate;
                           END;

                QuickEntry=FALSE }

    { 104 ;2   ;Field     ;
                SourceExpr="Campaign No." }

    { 107 ;2   ;Field     ;
                SourceExpr="Responsibility Center" }

    { 141 ;2   ;Field     ;
                SourceExpr="Assigned User ID" }

    { 5   ;2   ;Field     ;
                SourceExpr="Job Queue Status";
                Importance=Additional }

    { 110 ;2   ;Field     ;
                SourceExpr=Status;
                Importance=Promoted;
                QuickEntry=FALSE }

    { 48  ;1   ;Part      ;
                Name=SalesLines;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page6631;
                UpdatePropagation=Both }

    { 1905885101;1;Group  ;
                CaptionML=[ENU=Invoice Details;
                           RUS=Счет - подробности];
                GroupType=Group }

    { 91  ;2   ;Field     ;
                SourceExpr="Currency Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                OnAssistEdit=BEGIN
                               IF "Posting Date" <> 0D THEN
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date")
                               ELSE
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 100 ;2   ;Field     ;
                SourceExpr="Prices Including VAT";
                OnValidate=BEGIN
                             PricesIncludingVATOnAfterValid;
                           END;
                            }

    { 137 ;2   ;Field     ;
                SourceExpr="VAT Bus. Posting Group" }

    { 1210004;2;Field     ;
                ToolTipML=[ENU=Specifies the agreement number associated with the sales header.;
                           RUS=Определяет номер соглашения, связанный с заголовком продажи.];
                SourceExpr="Agreement No." }

    { 44  ;2   ;Field     ;
                SourceExpr="Transaction Type" }

    { 74  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                OnValidate=BEGIN
                             ShortcutDimension1CodeOnAfterV;
                           END;
                            }

    { 78  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                OnValidate=BEGIN
                             ShortcutDimension2CodeOnAfterV;
                           END;
                            }

    { 96  ;2   ;Field     ;
                SourceExpr="Shipment Date";
                Importance=Promoted }

    { 14  ;2   ;Field     ;
                SourceExpr="Applies-to Doc. Type";
                Importance=Promoted }

    { 16  ;2   ;Field     ;
                SourceExpr="Applies-to Doc. No.";
                Importance=Promoted }

    { 94  ;2   ;Field     ;
                SourceExpr="Applies-to ID" }

    { 1906801201;1;Group  ;
                CaptionML=[ENU=Shipping and Billing;
                           RUS=Отгрузка и выставление счетов];
                GroupType=Group }

    { 47  ;2   ;Group     ;
                CaptionML=[ENU=Shipment Method;
                           RUS=Метод отгрузки];
                GroupType=Group }

    { 45  ;3   ;Field     ;
                CaptionML=[ENU=Agent;
                           RUS=Агент];
                ToolTipML=[ENU=Specifies which shipping agent is used to transport the items on the sales document to the customer.;
                           RUS=Определяет экспедитора, который используется для транспортировки клиенту товаров из документа продажи.];
                SourceExpr="Shipping Agent Code";
                Importance=Additional }

    { 43  ;3   ;Field     ;
                CaptionML=[ENU=Agent Service;
                           RUS=Услуга агента];
                ToolTipML=[ENU=Specifies which shipping agent service is used to transport the items on the sales document to the customer.;
                           RUS=Определяет услуги экспедитора, которые используются для транспортировки клиенту товаров из документа продажи.];
                SourceExpr="Shipping Agent Service Code";
                Importance=Additional }

    { 4   ;3   ;Field     ;
                ToolTipML=[ENU=Specifies the shipping agent's package number.;
                           RUS=Определяет номер пакета экспедитора.];
                SourceExpr="Package Tracking No.";
                Importance=Additional }

    { 18  ;2   ;Group     ;
                CaptionML=[ENU=Ship-to;
                           RUS=Получатель];
                GroupType=Group }

    { 50  ;3   ;Field     ;
                CaptionML=[ENU=Location;
                           RUS=Расположение];
                SourceExpr="Location Code";
                Importance=Promoted }

    { 32  ;3   ;Field     ;
                CaptionML=[ENU=Name;
                           RUS=Имя];
                SourceExpr="Ship-to Name" }

    { 34  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           RUS=Адрес];
                SourceExpr="Ship-to Address" }

    { 36  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           RUS=Адрес 2];
                SourceExpr="Ship-to Address 2" }

    { 83  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           RUS=Индекс];
                SourceExpr="Ship-to Post Code" }

    { 38  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           RUS=Город];
                SourceExpr="Ship-to City" }

    { 40  ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           RUS=Контакт];
                SourceExpr="Ship-to Contact" }

    { 1210002;2;Field     ;
                ToolTipML=[ENU=Specifies the consignor number associated with the sales header.;
                           RUS=Определяет номер грузоотправителя, связанный с заголовком продажи.];
                SourceExpr="Consignor No." }

    { 1210000;2;Field     ;
                ToolTipML=[ENU=Specifies the code of the company registration associated with the sales header.;
                           RUS=Определяет код регистрации компании, связанный с заголовком продажи.];
                SourceExpr="KPP Code" }

    { 37  ;2   ;Group     ;
                CaptionML=[ENU=Bill-to;
                           RUS=Плательщик];
                GroupType=Group }

    { 20  ;3   ;Field     ;
                CaptionML=[ENU=Name;
                           RUS=Имя];
                SourceExpr="Bill-to Name";
                Importance=Promoted }

    { 22  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           RUS=Адрес];
                SourceExpr="Bill-to Address";
                Importance=Additional }

    { 24  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           RUS=Адрес 2];
                SourceExpr="Bill-to Address 2";
                Importance=Additional }

    { 75  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           RUS=Индекс];
                SourceExpr="Bill-to Post Code";
                Importance=Additional }

    { 26  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           RUS=Город];
                SourceExpr="Bill-to City";
                Importance=Additional }

    { 128 ;3   ;Field     ;
                CaptionML=[ENU=Contact No.;
                           RUS=Код контакта];
                SourceExpr="Bill-to Contact No.";
                Importance=Additional }

    { 28  ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           RUS=Контакт];
                SourceExpr="Bill-to Contact" }

    { 1907468901;1;Group  ;
                CaptionML=[ENU=Foreign Trade;
                           RUS=Внешняя торговля] }

    { 42  ;2   ;Field     ;
                SourceExpr="EU 3-Party Trade" }

    { 89  ;2   ;Field     ;
                SourceExpr="Transaction Specification" }

    { 46  ;2   ;Field     ;
                SourceExpr="Transport Method" }

    { 85  ;2   ;Field     ;
                SourceExpr="Exit Point" }

    { 87  ;2   ;Field     ;
                SourceExpr=Area }

    { 1905569601;1;Group  ;
                CaptionML=[ENU=VAT;
                           RUS=НДС] }

    { 1470139;2;Field     ;
                ToolTipML=[ENU=Specifies if the sales header is included in the purchase VAT ledger.;
                           RUS=Определяет, включается ли заголовок продажи в книгу НДС покупки.];
                SourceExpr="Include In Purch. VAT Ledger" }

    { 1470141;2;Field     ;
                ToolTipML=[ENU=Specifies the additional VAT ledger sheet associated with the sales header.;
                           RUS=Определяет дополнительный лист книги НДС, связанный с заголовком продажи.];
                SourceExpr="Additional VAT Ledger Sheet" }

    { 1470143;2;Field     ;
                ToolTipML=[ENU=Specifies the date of the corrected document associated with the sales header.;
                           RUS=Определяет дату скорректированного документа, связанного с заголовком продажи.];
                SourceExpr="Corrected Document Date" }

    { 1210001;2;Field     ;
                ToolTipML=[ENU=Specifies the VAT entry type for the sales order.;
                           RUS=Определяет тип операции НДС для заказа на продажу.];
                SourceExpr="VAT Entry Type" }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 19  ;1   ;Part      ;
                SubPageLink=Table ID=CONST(36),
                            Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.);
                PagePartID=Page9103;
                Visible=OpenApprovalEntriesExistForCurrUser;
                PartType=Page }

    { 1903720907;1;Part   ;
                SubPageLink=No.=FIELD(Sell-to Customer No.);
                PagePartID=Page9080;
                PartType=Page }

    { 1907234507;1;Part   ;
                SubPageLink=No.=FIELD(Sell-to Customer No.);
                PagePartID=Page9081;
                Visible=FALSE;
                PartType=Page }

    { 1902018507;1;Part   ;
                SubPageLink=No.=FIELD(Bill-to Customer No.);
                PagePartID=Page9082;
                Visible=FALSE;
                PartType=Page }

    { 1900316107;1;Part   ;
                SubPageLink=No.=FIELD(Sell-to Customer No.);
                PagePartID=Page9084;
                PartType=Page }

    { 1906127307;1;Part   ;
                SubPageLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(Document No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page9087;
                ProviderID=48;
                Visible=FALSE;
                PartType=Page }

    { 1906354007;1;Part   ;
                Name=ApprovalFactBox;
                PagePartID=Page9092;
                Visible=FALSE;
                PartType=Page }

    { 1907012907;1;Part   ;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page9108;
                ProviderID=48;
                Visible=FALSE;
                PartType=Page }

    { 33  ;1   ;Part      ;
                Name=WorkflowStatus;
                PagePartID=Page1528;
                Visible=ShowWorkflowStatus;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      CopySalesDoc@1003 : Report 292;
      MoveNegSalesLines@1009 : Report 6699;
      CreateRetRelDocs@1000 : Report 6697;
      ReportPrint@1004 : Codeunit 228;
      DocPrint@1008 : Codeunit 229;
      UserMgt@1005 : Codeunit 5700;
      ArchiveManagement@1006 : Codeunit 5063;
      SalesCalcDiscByType@1010 : Codeunit 56;
      ChangeExchangeRate@1002 : Page 511;
      JobQueueVisible@1001 : Boolean INDATASET;
      DocNoVisible@1007 : Boolean;
      OpenApprovalEntriesExistForCurrUser@1015 : Boolean;
      OpenApprovalEntriesExist@1014 : Boolean;
      ShowWorkflowStatus@1011 : Boolean;
      CanCancelApprovalForRecord@1012 : Boolean;
      DocumentIsPosted@1013 : Boolean;
      OpenPostedSalesReturnOrderQst@1016 : TextConst 'ENU=The return order has been posted and moved to the Posted Sales Credit Memos window.\\Do you want to open the posted credit memo?;RUS=Заказ на возврат учтен и перемещен в окно учтенных кредит-нот продажи.\\Открыть учтенную кредит-ноту?';

    LOCAL PROCEDURE Post@4(PostingCodeunitID@1000 : Integer);
    VAR
      SalesHeader@1001 : Record 36;
      InstructionMgt@1002 : Codeunit 1330;
    BEGIN
      SendToPosting(PostingCodeunitID);

      DocumentIsPosted := NOT SalesHeader.GET("Document Type","No.");

      IF "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting" THEN
        CurrPage.CLOSE;
      CurrPage.UPDATE(FALSE);

      IF PostingCodeunitID <> CODEUNIT::"Sales-Post (Yes/No)" THEN
        EXIT;

      IF InstructionMgt.IsEnabled(InstructionMgt.ShowPostedConfirmationMessageCode) THEN
        ShowPostedConfirmationMessage;
    END;

    LOCAL PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CurrPage.SalesLines.PAGE.ApproveCalcInvDisc;
    END;

    LOCAL PROCEDURE SalespersonCodeOnAfterValidate@19011896();
    BEGIN
      CurrPage.SalesLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE ShortcutDimension1CodeOnAfterV@19029405();
    BEGIN
      CurrPage.SalesLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE ShortcutDimension2CodeOnAfterV@19008725();
    BEGIN
      CurrPage.SalesLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE PricesIncludingVATOnAfterValid@19009096();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SetDocNoVisible@2();
    VAR
      DocumentNoVisibility@1001 : Codeunit 1400;
      DocType@1000 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Reminder,FinChMemo';
    BEGIN
      DocNoVisible := DocumentNoVisibility.SalesDocumentNoIsVisible(DocType::"Return Order","No.");
    END;

    PROCEDURE ShowPreview@3();
    VAR
      SalesPostYesNo@1001 : Codeunit 81;
    BEGIN
      SalesPostYesNo.Preview(Rec);
    END;

    LOCAL PROCEDURE SetControlAppearance@6();
    VAR
      ApprovalsMgmt@1002 : Codeunit 1535;
    BEGIN
      JobQueueVisible := "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting";

      OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
      CanCancelApprovalForRecord := ApprovalsMgmt.CanCancelApprovalForRecord(RECORDID);
    END;

    LOCAL PROCEDURE ShowPostedConfirmationMessage@17();
    VAR
      ReturnOrderSalesHeader@1003 : Record 36;
      SalesCrMemoHeader@1000 : Record 114;
      InstructionMgt@1002 : Codeunit 1330;
    BEGIN
      IF NOT ReturnOrderSalesHeader.GET("Document Type","No.") THEN BEGIN
        SalesCrMemoHeader.SETRANGE("No.","Last Posting No.");
        IF SalesCrMemoHeader.FINDFIRST THEN
          IF InstructionMgt.ShowConfirm(OpenPostedSalesReturnOrderQst,InstructionMgt.ShowPostedConfirmationMessageCode) THEN
            PAGE.RUN(PAGE::"Posted Sales Credit Memo",SalesCrMemoHeader);
      END;
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeStatisticsAction@5(VAR SalesHeader@1000 : Record 36;VAR Handled@1001 : Boolean);
    BEGIN
    END;

    BEGIN
    END.
  }
}

