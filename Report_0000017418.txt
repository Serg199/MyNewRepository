OBJECT Report 17418 Date Compress Payroll Ledger
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    Permissions=TableData 87=rimd,
                TableData 17418=rimd,
                TableData 17424=rimd;
    CaptionML=[ENU=Date Compress Payroll Ledger;
               RUS=Сжатие по дате книги зарплаты];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  PayrollLedgEntryFilter := COPYSTR("Payroll Ledger Entry".GETFILTERS,1,MAXSTRLEN(DateComprReg.Filter));
                END;

  }
  DATASET
  {
    { 3499;    ;DataItem;                    ;
               DataItemTable=Table17418;
               DataItemTableView=SORTING(Employee No.,Posting Date);
               OnPreDataItem=BEGIN
                               IF NOT CONFIRM(Text000,FALSE) THEN
                                 CurrReport.BREAK;

                               IF EntrdDateComprJnl."Ending Date" = 0D THEN
                                 ERROR(EntrdDateComprJnl.FIELDNAME("Ending Date") + Text003);

                               Window.OPEN(
                                 Text004 +
                                 Text005 +
                                 Text006 +
                                 Text007 +
                                 Text008);

                               NewPayrollLedgEntry.LOCKTABLE;
                               PayrollReg.LOCKTABLE;
                               DateComprReg.LOCKTABLE;

                               SourceCode.GET;
                               SourceCode.TESTFIELD("Compress Payroll Journal");

                               IF PayrollReg.FINDLAST THEN;
                               PayrollReg.INIT;
                               PayrollReg."No." := PayrollReg."No." + 1;
                               PayrollReg."Creation Date" := TODAY;
                               PayrollReg."Source Code" := SourceCode."Compress Payroll Journal";
                               PayrollReg."User ID" := USERID;

                               IF DateComprReg.FINDLAST THEN;
                               DateComprReg.INIT;
                               DateComprReg."No." := DateComprReg."No." + 1;
                               DateComprReg."Table ID" := DATABASE::"Payroll Ledger Entry";
                               DateComprReg."Creation Date" := TODAY;
                               DateComprReg."Starting Date" := EntrdDateComprJnl."Starting Date";
                               DateComprReg."Ending Date" := EntrdDateComprJnl."Ending Date";
                               DateComprReg."Period Length" := EntrdDateComprJnl."Period Length";
                               FOR i := 1 TO NoOfFields DO
                                 IF Retain[i] THEN
                                   DateComprReg."Retain Field Contents" :=
                                     COPYSTR(
                                       DateComprReg."Retain Field Contents" + ',' + FieldNameArray[i],1,
                                       MAXSTRLEN(DateComprReg."Retain Field Contents"));
                               DateComprReg."Retain Field Contents" := COPYSTR(DateComprReg."Retain Field Contents",2);
                               DateComprReg.Filter := PayrollLedgEntryFilter;
                               DateComprReg."Register No." := PayrollReg."No.";
                               DateComprReg."Source Code" := SourceCode."Compress Payroll Journal";
                               DateComprReg."User ID" := USERID;

                               IF PayrollLedgEntry2.FIND('+') THEN;
                               LastEntryNo := PayrollLedgEntry2."Entry No.";
                               SETRANGE("Entry No.",0,LastEntryNo);
                               SETRANGE("Posting Date",EntrdDateComprJnl."Starting Date",EntrdDateComprJnl."Ending Date");
                             END;

               OnAfterGetRecord=BEGIN
                                  PayrollLedgEntry2 := "Payroll Ledger Entry";
                                  WITH PayrollLedgEntry2 DO BEGIN
                                    SETCURRENTKEY("Employee No.","Posting Date");
                                    COPYFILTERS("Payroll Ledger Entry");
                                    SETRANGE("Employee No.","Employee No.");
                                    SETRANGE("Element Code","Element Code");

                                    SETFILTER("Posting Date",DateComprMgt.GetDateFilter("Posting Date",EntrdDateComprJnl,TRUE));

                                    LastEntryNo := LastEntryNo + 1;

                                    NewPayrollLedgEntry.INIT;
                                    NewPayrollLedgEntry."Entry No." := LastEntryNo;
                                    NewPayrollLedgEntry."Employee No." := "Employee No.";
                                    NewPayrollLedgEntry."Element Code" := "Element Code";
                                    NewPayrollLedgEntry."Element Type" := "Element Type" ;
                                    NewPayrollLedgEntry."Posting Type" := "Posting Type";
                                    NewPayrollLedgEntry.Description := EntrdPayLedgEntry.Description;

                                    NewPayrollLedgEntry."Posting Date" := GETRANGEMIN("Posting Date");
                                    NewPayrollLedgEntry."Source Code" := SourceCode."Compress Payroll Journal";
                                    NewPayrollLedgEntry."User ID" := USERID;
                                    Window.UPDATE(2,NewPayrollLedgEntry."Posting Date");
                                    DateComprReg."No. of New Records" := DateComprReg."No. of New Records" + 1;
                                    Window.UPDATE(3,DateComprReg."No. of New Records");

                                    IF PayrollReg."From Entry No." = 0 THEN
                                      PayrollReg."From Entry No." := NewPayrollLedgEntry."Entry No.";
                                    PayrollReg."To Entry No." := NewPayrollLedgEntry."Entry No.";

                                    IF RetainNo(FIELDNO("Document No.")) THEN BEGIN
                                      SETRANGE("Document No.","Document No.");
                                      NewPayrollLedgEntry."Document No." := "Document No.";
                                    END;

                                    ComprPayrollEntry(PayrollLedgEntry2,NewPayrollLedgEntry,DateComprReg);
                                    WHILE NEXT <> 0 DO
                                      ComprPayrollEntry(PayrollLedgEntry2,NewPayrollLedgEntry,DateComprReg);
                                    NewPayrollLedgEntry.INSERT;
                                  END;

                                  Window.UPDATE(1,NewPayrollLedgEntry."Employee No.");
                                  Window.UPDATE(2,NewPayrollLedgEntry."Posting Date");
                                  DateComprReg."No. of New Records" := DateComprReg."No. of New Records" + 1;
                                  Window.UPDATE(3,DateComprReg."No. of New Records");

                                  IF DateComprReg."No. Records Deleted" >= NoOfDeleted + 10 THEN BEGIN
                                    NoOfDeleted := DateComprReg."No. Records Deleted";
                                    InsertRegisters(PayrollReg,DateComprReg);
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                IF DateComprReg."No. Records Deleted" <> 0 THEN
                                  InsertRegisters(PayrollReg,DateComprReg);
                              END;

               ReqFilterFields=Employee No.,Element Code }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF EntrdDateComprJnl."Ending Date" = 0D THEN
                     EntrdDateComprJnl."Ending Date" := TODAY;

                   IF EntrdPayLedgEntry.Description = '' THEN
                     EntrdPayLedgEntry.Description := 'Date Compressed';

                   WITH "Payroll Ledger Entry" DO
                     InsertField(FIELDNO("Document No."),FIELDNAME("Document No."));
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             RUS=Параметры] }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Starting Date;
                             RUS=Дата начала];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=EntrdDateComprJnl."Starting Date" }

      { 2   ;2   ;Field     ;
                  CaptionML=[ENU=Ending Date;
                             RUS=Дата окончания];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=EntrdDateComprJnl."Ending Date" }

      { 3   ;2   ;Field     ;
                  CaptionML=[ENU=Length of Period;
                             RUS=Длина периода];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=EntrdDateComprJnl."Period Length" }

      { 9   ;2   ;Field     ;
                  CaptionML=[ENU=Posting Description;
                             RUS=Описание учета];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=EntrdPayLedgEntry.Description }

      { 5   ;2   ;Field     ;
                  CaptionML=[ENU=Document No.;
                             RUS=Номер документа];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=Retain[1] }

      { 6   ;2   ;Field     ;
                  CaptionML=[ENU=Resource No.;
                             RUS=Номер ресурса];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=Retain[2] }

      { 7   ;2   ;Field     ;
                  CaptionML=[ENU=Job No.;
                             RUS=Код работы];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=Retain[3] }

      { 8   ;2   ;Field     ;
                  CaptionML=[ENU=Department Code;
                             RUS=Код подразделения];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=Retain[4] }

      { 4   ;2   ;Field     ;
                  CaptionML=[ENU=Project Code;
                             RUS=Код проекта];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=Retain[5] }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      SourceCode@1210000 : Record 242;
      EntrdDateComprJnl@1210001 : Record 87;
      DateComprReg@1210002 : Record 87;
      PayrollReg@1210003 : Record 17424;
      EntrdPayLedgEntry@1210004 : Record 17418;
      NewPayrollLedgEntry@1210005 : Record 17418;
      PayrollLedgEntry2@1210006 : Record 17418;
      DateComprMgt@1210008 : Codeunit 356;
      Window@1210009 : Dialog;
      PayrollLedgEntryFilter@1210010 : Text[250];
      NoOfFields@1210011 : Integer;
      Retain@1210012 : ARRAY [20] OF Boolean;
      FieldNo@1210013 : ARRAY [20] OF Integer;
      FieldNameArray@1210014 : ARRAY [20] OF Text[30];
      LastEntryNo@1210015 : Integer;
      NoOfDeleted@1210016 : Integer;
      PayJournalxists@1210017 : Boolean;
      i@1210018 : Integer;
      Text000@1210026 : TextConst 'ENU=This batch job deletes entries. Therefore, it is important that you make a backup of the database before you run the batch job.\\Do you want to date compress the entries?;RUS=Это пакетное задание удаляет операции. Поэтому важно создать резервную копию базы данных перед запуском пакетного задания.\\Сжать данные записей?';
      Text003@1210025 : TextConst 'ENU=%1 must be specified.;RUS=%1 должно быть определено.';
      Text004@1210024 : TextConst 'ENU=Date compressing payroll ledger entries...\\;RUS=Сжатие по дате книги операций по зарплате...\\';
      Text005@1210023 : TextConst 'ENU=Employee No.               #1##########\;RUS=Код сотрудника               #1##########\';
      Text006@1210022 : TextConst 'ENU=Date                 #2######\\;RUS=Дата                         #2######\\';
      Text007@1210021 : TextConst 'ENU=No. of new entries   #3######\;RUS=Кол-во новых операций        #3######\';
      Text008@1210020 : TextConst 'ENU=No. of entries del.  #4######;RUS=Кол-во удал. операций        #4######';

    PROCEDURE ComprPayrollEntry@9(PayrollLedgEntry@1210000 : Record 17418;VAR NewPayrollLedgEntry@1210001 : Record 17418;VAR DateComprReg@1210002 : Record 87);
    BEGIN
      WITH PayrollLedgEntry DO BEGIN
        NewPayrollLedgEntry."Payroll Amount" := NewPayrollLedgEntry."Payroll Amount" + "Payroll Amount";
        NewPayrollLedgEntry."Taxable Amount" := NewPayrollLedgEntry."Taxable Amount" + "Taxable Amount";
        DELETE;
        DateComprReg."No. Records Deleted" := DateComprReg."No. Records Deleted" + 1;
        Window.UPDATE(4,DateComprReg."No. Records Deleted");
      END;
    END;

    PROCEDURE InsertRegisters@1(PayrollReg@1210000 : Record 17424;DateComprReg@1210001 : Record 87);
    BEGIN
      IF PayJournalxists THEN BEGIN
        PayrollReg.MODIFY;
        DateComprReg.MODIFY;
      END ELSE BEGIN
        PayrollReg.INSERT;
        DateComprReg.INSERT;
        PayJournalxists := TRUE;
      END;
      COMMIT;
      NewPayrollLedgEntry.LOCKTABLE;
      PayrollReg.LOCKTABLE;
      DateComprReg.LOCKTABLE;
    END;

    PROCEDURE InsertField@2(Number@1210000 : Integer;Name@1210001 : Text[30]);
    BEGIN
      NoOfFields := NoOfFields + 1;
      FieldNo[NoOfFields] := Number;
      FieldNameArray[NoOfFields] := Name;
    END;

    PROCEDURE RetainNo@3(Number@1210000 : Integer) : Boolean;
    BEGIN
      EXIT(Retain[Index(Number)]);
    END;

    PROCEDURE Index@6(Number@1210000 : Integer) : Integer;
    BEGIN
      FOR i := 1 TO NoOfFields DO
        IF Number = FieldNo[i] THEN
          EXIT(i);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

