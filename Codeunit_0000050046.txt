OBJECT Codeunit 50046 Load One Operation Fact
{
  OBJECT-PROPERTIES
  {
    Date=03.08.10;
    Time=13:54:20;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    TableNo=50063;
    OnRun=BEGIN
            GLSetup.GET;
            MovingDataSetup.GET;
            isOK := TRUE;
            RecID := "Record ID";
            IF RecID.TABLENO = 0 THEN
              ERROR(Text001);

            RecRef.OPEN(RecID.TABLENO,FALSE,"Company No.");
            RecRef.GET("Record ID");
            RecRef.SETTABLE(PreBuffer);

            ConsSource.GET(Processor);

            IF PreBuffer."Time Creation" = CREATEDATETIME(0D,0T) THEN BEGIN
              ErrorJournal.AddErrorPreBuferFact("Company No.",ErrorJournal."Error Group"::Load,ErrorJournal.Type::Error,
                                                Processor,"Cons. Register",
                                                'EDB02',STRSUBSTNO(TextEDB02,PreBuffer.FIELDCAPTION("Time Creation")),COMPANYNAME,PreBuffer,
                                                "Line No.");
              isOK := FALSE;
            END;
            IF PreBuffer."Document ID" = '' THEN BEGIN
              ErrorJournal.AddErrorPreBuferFact("Company No.",ErrorJournal."Error Group"::Load,ErrorJournal.Type::Error,
                                                Processor,"Cons. Register",
                                                'EDB02',STRSUBSTNO(TextEDB02,PreBuffer.FIELDCAPTION("Document ID")),COMPANYNAME,PreBuffer,
                                                "Line No.");
              isOK := FALSE;
            END;

            IF NOT isOK THEN BEGIN
              PreBuffer.Status := PreBuffer.Status::"Processing Canceled";
              PreBuffer.MODIFY;
              EXIT;
            END;

            Buffer.SETRANGE("Cons. Source Code",Processor);
            Buffer.SETRANGE("Document ID",PreBuffer."Document ID");
            Buffer.SETRANGE(Removed, FALSE);
            Buffer.SETRANGE("Remove Oper. No", 0);
            //Buffer.SETRANGE(Reposted, FALSE);
            isFind := Buffer.FINDLAST;


            IF MovingDataSetup."Exact Processing Change" THEN
              CASE TRUE OF

                (PreBuffer.Type = PreBuffer.Type::New) AND NOT isFind :
                  isOK := TRUE;

                (PreBuffer.Type = PreBuffer.Type::New) AND isFind :
                  BEGIN
                    CodeError := 'EDB03';
                    TextError := STRSUBSTNO(TextEDB03,PreBuffer.Type);
                    isOK := FALSE;
                  END;

                (PreBuffer.Type = PreBuffer.Type::Modify) AND NOT isFind :
                  BEGIN
                    CodeError := 'EDB10';
                    TextError := STRSUBSTNO(TextEDB10,PreBuffer.Type);
                    isOK := FALSE;
                  END;

                (PreBuffer.Type = PreBuffer.Type::Modify) AND isFind :
                  isOK := TRUE;

                (PreBuffer.Type = PreBuffer.Type::Delete) AND NOT isFind :
                  BEGIN
                    CodeError := 'EDB10';
                    TextError := STRSUBSTNO(TextEDB10,PreBuffer.Type);
                    isOK := FALSE;
                  END;

                (PreBuffer.Type = PreBuffer.Type::Delete) AND isFind :
                  isOK := TRUE;

              END
            ELSE
              CASE TRUE OF

                (PreBuffer.Type = PreBuffer.Type::New) AND NOT isFind :
                  isOK := TRUE;

                (PreBuffer.Type = PreBuffer.Type::New) AND isFind :
                  BEGIN
                    CodeError := 'EDB03';
                    TextError := STRSUBSTNO(TextEDB03,PreBuffer.Type);
                    isOK := FALSE;
                  END;

                (PreBuffer.Type = PreBuffer.Type::Modify) AND NOT isFind :
                  BEGIN
                    CodeError := 'EDB08';
                    TextError := STRSUBSTNO(TextEDB08,PreBuffer.Type);
                    isOK := TRUE;
                  END;

                (PreBuffer.Type = PreBuffer.Type::Modify) AND isFind :
                  isOK := TRUE;

                (PreBuffer.Type = PreBuffer.Type::Delete) AND NOT isFind :
                  BEGIN
                    CodeError := 'EDB10';
                    TextError := STRSUBSTNO(TextEDB10,PreBuffer.Type);
                    isOK := FALSE;
                  END;

                (PreBuffer.Type = PreBuffer.Type::Delete) AND isFind :
                  isOK := TRUE;

              END;

            IF isOK THEN BEGIN
              IF TextError <> '' THEN BEGIN
                IF isFind THEN
                  ErrorJournal.AddErrorPreBuferBufferFact("Company No.",ErrorJournal."Error Group"::Load,ErrorJournal.Type::Warning,
                                                          Processor,"Cons. Register",
                                                          CodeError,TextError,COMPANYNAME,PreBuffer,Buffer,"Line No.")
                ELSE
                  ErrorJournal.AddErrorPreBuferFact("Company No.",ErrorJournal."Error Group"::Load,ErrorJournal.Type::Warning,
                                                    Processor,"Cons. Register",
                                                    CodeError,TextError,COMPANYNAME,PreBuffer,"Line No.");
              END;
              CASE PreBuffer.Type OF
                PreBuffer.Type::New :
                  CopyPreBuffer2Buffer(PreBuffer, BufferNew, 0,
                                       "Begin Entry No.", "Last Entry No.", ConsSource, "Cons. Register");
                PreBuffer.Type::Modify :
                  IF isFind THEN BEGIN
                    IF (Buffer."Export Consolidation Register" > 0)
                       //(Buffer."Source Operation No." > 0)
                    THEN BEGIN
                       //Найденная строка в буфере уже перенесена в Navision или является изменяющей или выгружена операция по ОС
                      Buffer.Reposted := TRUE;
                      Buffer.MODIFY;
                    END ELSE BEGIN
                      //Найденная строка в буфере еще не переносилась в Navision
                      Buffer.Reposted := TRUE;
                      Buffer."Not Translate" := TRUE;
                      Buffer.MODIFY;
                    END;
                    CopyPreBuffer2Buffer(PreBuffer, BufferNew, Buffer."Entry No.",
                                         "Begin Entry No.", "Last Entry No.", ConsSource, "Cons. Register");
                  END ELSE
                    CopyPreBuffer2Buffer(PreBuffer, BufferNew, 0,
                                         "Begin Entry No.", "Last Entry No.", ConsSource, "Cons. Register");
                PreBuffer.Type::Delete :
                  BEGIN
                    CopyBuffer2Buffer(PreBuffer, Buffer, BufferNew,
                                      "Begin Entry No.", "Last Entry No.", ConsSource, "Cons. Register",
                                      Buffer."Export Consolidation Register" = 0);

                    Buffer."Remove Oper. No" := BufferNew."Entry No.";
                    //NC MDR01 > MP
                    IF Buffer."Export Consolidation Register" = 0 THEN
                      Buffer."Remove Oper. No" := BufferNew."Entry No.";
                      Buffer."Not Translate" := TRUE;
                    //NC MDR01 < MP
                    Buffer.MODIFY;
                  END;
              END;

              PreBuffer.Status := PreBuffer.Status::"Processing Complete";
              PreBuffer.MODIFY;

              PreBuffer2.RESET;
              PreBuffer2.SETRANGE("Id Legal Entity",PreBuffer."Id Legal Entity");
              PreBuffer2.SETRANGE("Id External System",PreBuffer."Id External System");
              PreBuffer2.SETRANGE(Status,PreBuffer.Status::"Processing Canceled");
              PreBuffer2.SETRANGE("Document ID",PreBuffer."Document ID");
              PreBuffer2.SETFILTER("Entry No.",'<%1',PreBuffer."Entry No.");
              IF PreBuffer2.FINDSET THEN REPEAT
                IF PreBuffer3.GET(PreBuffer2."Entry No.") THEN BEGIN
                  PreBuffer3.Status := PreBuffer.Status::"Canceled Automatic";
                  PreBuffer3.MODIFY;
                END;
              UNTIL PreBuffer2.NEXT = 0;
            END ELSE BEGIN
              IF isFind THEN
                ErrorJournal.AddErrorPreBuferBufferFact("Company No.",ErrorJournal."Error Group"::Load,ErrorJournal.Type::Error,
                                                        Processor,"Cons. Register",
                                                        CodeError,TextError,COMPANYNAME,PreBuffer,Buffer,"Line No.")
              ELSE
                ErrorJournal.AddErrorPreBuferFact("Company No.",ErrorJournal."Error Group"::Load,ErrorJournal.Type::Error,
                                                  Processor,"Cons. Register",
                                                  CodeError,TextError,COMPANYNAME,PreBuffer,"Line No.");

              PreBuffer.Status := PreBuffer.Status::"Processing Canceled";
              PreBuffer.MODIFY;

            END;

            isOK := TRUE;
          END;

  }
  CODE
  {
    VAR
      MovingDataSetup@1101495020 : Record 50064;
      GLSetup@1000000001 : Record 98;
      ConsSource@1101495023 : Record 50001;
      RecID@1101495000 : RecordID;
      RecRef@1101495001 : RecordRef;
      PreBuffer@1101495002 : Record 50081;
      Text001@1101495003 : TextConst 'ENU=Wrong identifier to record;RUS=Неправильный идентификатор записи';
      TextEDB01@1000000006 : TextConst 'ENU=In the process of implementation %1 unclassified error occurred. %2 Processing stopped.;RUS=В процессе выполнения %1 возникла ошибка. %2 Обработка прекращена.';
      TextEDB02@1101495015 : TextConst 'ENU=In the Buffer of Loading %1 submitted incomplete data. Please enter %2. Record not processed.;RUS=В Буфере Загрузки Операций переданы не полные данные. Не заполнено поле %1. Запись не обработана.';
      TextEDB03@1101495014 : TextConst 'ENU=In the Buffer of Loading operations handed treatment of type %1 for the operation. In NAV is an operation with the UID. Record not processed.;RUS=В Буфере Загрузки операций передан тип обработки %1 для операции. В NAV есть операция с таким UID. Действие было пропущено.';
      TextEDB04@1101495013 : TextConst 'ENU="In the Buffer of Loading directory %1 handed treatment of type %2 for the directory %3 Code = %4. Record not processed.";RUS="В Буфере Загрузки справочника %1 передан тип обработки %2 для справочника %3 Код=%4. Действие было пропущено. "';
      TextEDB05@1101495012 : TextConst 'ENU=In the Buffer of Loading operations zero-quantity and zero-sum transaction in foreign currency accounting system.;RUS=В Буфере Загрузки операций нулевые количество и сумма операции в учетной валюте внешней системы.';
      TextEDB06@1101495011 : TextConst 'ENU=In the Buffer of Loading operations zero-sum in the original currency.;RUS=В Буфере Загрузки операций нулевая сумма в оригинальной валюте.';
      TextEDB07@1101495010 : TextConst 'ENU=In the Buffer of Loading of operations the Debit or the Credit fin. account is not set.;RUS=В Буфере Загрузки операций не задан Дебет или Кредит фин. счет.';
      TextEDB08@1101495009 : TextConst 'ENU=Warning. In the Buffer of Loading of operations the type of processing %1 for operation. In NAV there is no operation with such UID.;RUS=Предупреждение. В Буфере Загрузки операций передан тип обработки %1 для операции. В NAV нет операции с таким UID.';
      TextEDB09@1101495008 : TextConst 'ENU="Warning. In the Buffer of Loading directory %1 handed treatment of type %2 for the directory %3 Code = %4. In NAV is an element of the directory with this code.";RUS="Предупреждение. В Буфере Загрузки справочника %1 передан тип обработки %2 для справочника %3 Код=%4. В NAV есть элемент справочника с таким кодом."';
      TextEDB10@1101495007 : TextConst 'ENU=In the Buffer of Loading operations handed treatment of type %1 for the operation. In NAV no operation with the UID.;RUS=В Буфере Загрузки операций передан тип обработки %1 для операции. В NAV нет операции с таким UID.';
      TextEDB11@1101495006 : TextConst 'ENU="Warning. In the Buffer of Loading directory %1 handed treatment of type %2 for the directory %3 Code = %4. In NAV is no element with such a code book.";RUS="Предупреждение. В Буфере Загрузки справочника %1 передан тип обработки %2 для справочника %3 Код=%4. В NAV нет элемента справочника с таким кодом."';
      TextEDB12@1101495005 : TextConst 'ENU="In the Buffer of Loading directory %1 handed treatment of type %2 for the directory %3 Code = %4. In NAV is an element of the directory with this code. Record not processed.";RUS="В Буфере Загрузки справочника %1 передан тип обработки %2 для справочника %3 Код=%4. В NAV есть элемент справочника с таким кодом. Действие было пропущено. "';
      TextEDB13@1101495004 : TextConst 'ENU="In the Buffer of Loading directory %1 handed treatment of type %2 for the directory %3 Code = %4. In NAV is no element with such a code book. Record not processed.";RUS="В Буфере Загрузки справочника %1 передан тип обработки %2 для справочника %3 Код=%4. В NAV нет элемента справочника с таким кодом. Действие было пропущено. "';
      PreBuffer2@1000000007 : Record 50081;
      PreBuffer3@1000000008 : Record 50081;
      CodeError@1000000005 : Code[10];
      TextError@1101495021 : Text[250];
      ErrorJournal@1101495017 : Record 50023;
      Buffer@1101495018 : Record 50082;
      BufferNew@1101495022 : Record 50082;
      isFind@1101495019 : Boolean;
      TextEDB14@1000000000 : TextConst 'ENU=In the Buffer of Loading operations is not zero sum in the original currency in the wiring on the exchange rate differences.;RUS=В Буфере Загрузки операций не нулевая сумма в оригинальной валюте в проводке по курсовой разнице.';
      CurrConsCode@1000000002 : Code[10];
      Currency@1000000003 : Record 4;
      TextEDB19@1000000004 : TextConst 'ENU=In the Buffer of Loading operations the value of field %1 must be equal to the value of field %2.;RUS=В Буфере Загрузки операций величина в поле %1 должна быть равна величине в поле %2.';
      TextEDB20@1000000009 : TextConst 'ENU=In the Buffer of Loading operations the value have different signs.;RUS=В Буфер Загрузки суммы разных знаков.';

    PROCEDURE CopyPreBuffer2Buffer@1210030(VAR PreBuffer@1210001 : Record 50081;VAR BufferNew@1210000 : Record 50082;SourceEntryNo@1101495002 : Integer;VAR BeginEntryNo@1101495001 : Integer;VAR LastEntryNo@1210002 : Integer;ConsSource@1101495000 : Record 50001;RegisterNo@1000000000 : Integer);
    BEGIN
      IF LastEntryNo = 0 THEN BEGIN
        BufferNew.SETRANGE("Cons. Source Code",ConsSource.Code);
        IF BufferNew.FINDLAST THEN
          LastEntryNo := BufferNew."Entry No.";
        BufferNew.RESET;
      END;
      LastEntryNo += 1;

      BufferNew.INIT;
      BufferNew.TRANSFERFIELDS(PreBuffer);
      BufferNew."Cons. Source Code" := ConsSource.Code;
      BufferNew."Entry No." := LastEntryNo;
      BufferNew."Source Operation No." := SourceEntryNo;
      BufferNew."Export Cons. Source Code" := ConsSource."Export Cons. Source";
      BufferNew."Consolidation Register" := RegisterNo;
      BufferNew."PreBuffer Entry No." := PreBuffer."Entry No.";
      BufferNew."Amount (LCY)" := ROUND(PreBuffer."Amount (LCY)");
      IF SourceEntryNo = 0 THEN
        BufferNew.Type := BufferNew.Type::New
      ELSE
        BufferNew.Type := BufferNew.Type::Modify;
      BufferNew.INSERT(TRUE);

      IF BeginEntryNo = 0 THEN
        BeginEntryNo := LastEntryNo;
    END;

    PROCEDURE CopyBuffer2Buffer@1210047(VAR PreBuffer@1101495004 : Record 50081;VAR Buffer@1210000 : Record 50082;VAR BufferNew@1210001 : Record 50082;VAR BeginEntryNo@1101495001 : Integer;VAR LastEntryNo@1101495000 : Integer;ConsSource@1101495003 : Record 50001;RegisterNo@1101495002 : Integer;NotTranslate@1101495005 : Boolean);
    BEGIN
      IF LastEntryNo = 0 THEN BEGIN
        BufferNew.SETRANGE("Cons. Source Code",ConsSource.Code);
        IF BufferNew.FINDLAST THEN
          LastEntryNo := BufferNew."Entry No.";
        BufferNew.RESET;
      END;
      LastEntryNo += 1;

      BufferNew.INIT;
      BufferNew.TRANSFERFIELDS(Buffer);
      BufferNew."Cons. Source Code" := ConsSource.Code;
      BufferNew."Entry No." := LastEntryNo;
      BufferNew."Export Cons. Source Code" := ConsSource."Export Cons. Source";
      BufferNew.Removed := TRUE;
      BufferNew."Source Operation No." := Buffer."Entry No.";
      BufferNew."Remove Oper. No" := 0;
      BufferNew."Export Consolidation Register" := 0;
      BufferNew."Consolidation Register" := RegisterNo;
      BufferNew."PreBuffer Entry No." := PreBuffer."Entry No.";
      //NC MDR01 > MP
      BufferNew."Not Translate" := NotTranslate;
      //NC MDR01 < MP
      BufferNew.Type := BufferNew.Type::Delete;
      BufferNew.INSERT(TRUE);

      IF BeginEntryNo = 0 THEN
        BeginEntryNo := LastEntryNo;
    END;

    PROCEDURE ConvertToLCY@1000000001(Amount@1000000000 : Decimal;CurrCode@1000000001 : Code[10]) AmountLCY : Decimal;
    VAR
      Currency@1000000002 : Record 4;
    BEGIN
      IF CurrCode = '' THEN
        EXIT(Amount);
      IF NOT Currency.GET(CurrCode) THEN
        EXIT(0);
    END;

    BEGIN
    {
      NC MTF01 PCH Создан CU
      ПАРАМЕТРЫ:
        "Company No."
        "Line No."
        Blocked
        Process
        Description
        "Auto Start"
        Dependency
        "Type Processing" - Ист. Консолидации
        Processor - Код Ист. Консолидации
        "Status Monitor" - 0 - Загрузка из Внеш. Системы
        "Import Format" - 0 - Загрузка из Внеш. Системы
        "External Source" - ID внешней системы
        "Transaction No."
        "Object No." - не используется
        "Processing Mode" - Test - проверка наличия записей, Load - загрузка
        "Record ID" - рекорд  ID буфера
      ВОЗВРАТ:
        isOK - ОК
        "Cons. Register" - регистр в котором произошла загрузка
        Status
        "Time Status"
        "Begin Entry No."
        "Last Entry No."

      NC MDR01 MP Изменения в коде
    }
    END.
  }
}

