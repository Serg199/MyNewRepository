OBJECT Page 157 Item Availability by Periods
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Item Availability by Periods;
               RUS=Наличие товара по периодам];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table27;
    PageType=ListPlus;
    RefreshOnActivate=Yes;
    OnAfterGetRecord=BEGIN
                       SETRANGE("Drop Shipment Filter",FALSE);
                       UpdateSubForm;
                     END;

    OnQueryClosePage=BEGIN
                       IF CloseAction = ACTION::LookupOK THEN
                         LookupOKOnPush;
                     END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 20      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Item;
                                 RUS=&Товар];
                      Image=Item }
      { 21      ;2   ;ActionGroup;
                      CaptionML=[ENU=&Item Availability by;
                                 RUS=Наличие &товара по];
                      Image=ItemAvailability }
      { 2       ;3   ;Action    ;
                      CaptionML=[ENU=Event;
                                 RUS=Событие];
                      ToolTipML=[ENU=View how the actual and projected inventory level of an item will develop over time according to supply and demand events.;
                                 RUS=Просмотр изменений фактического и планового уровня запасов товара с течением времени в соответствии с событиями поставки и требований.];
                      ApplicationArea=#Basic,#Suite;
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromItem(Rec,ItemAvailFormsMgt.ByEvent);
                               END;
                                }
      { 22      ;3   ;Action    ;
                      CaptionML=[ENU=Period;
                                 RUS=периодам];
                      ToolTipML=[ENU=Show the actual and projected quantity of an item over time according to a specified time interval, such as by day, week or month.;
                                 RUS=Показывает изменение фактического и планового уровня запасов товара в пределах указанного интервала времени, например дня, недели или месяца.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 157;
                      RunPageLink=No.=FIELD(No.),
                                  Global Dimension 1 Filter=FIELD(Global Dimension 1 Filter),
                                  Global Dimension 2 Filter=FIELD(Global Dimension 2 Filter),
                                  Location Filter=FIELD(Location Filter),
                                  Drop Shipment Filter=FIELD(Drop Shipment Filter),
                                  Variant Filter=FIELD(Variant Filter);
                      Image=Period }
      { 23      ;3   ;Action    ;
                      CaptionML=[ENU=Variant;
                                 RUS=вариантам];
                      ToolTipML=[ENU=Show the actual and projected quantity of an item over time according to a specified variant.;
                                 RUS=Показывает изменение фактического и планового уровня запасов товара с течением времени в соответствии с указанным вариантом.];
                      RunObject=Page 5414;
                      RunPageLink=No.=FIELD(No.),
                                  Global Dimension 1 Filter=FIELD(Global Dimension 1 Filter),
                                  Global Dimension 2 Filter=FIELD(Global Dimension 2 Filter),
                                  Location Filter=FIELD(Location Filter),
                                  Drop Shipment Filter=FIELD(Drop Shipment Filter),
                                  Variant Filter=FIELD(Variant Filter);
                      Image=ItemVariant }
      { 24      ;3   ;Action    ;
                      CaptionML=[ENU=Location;
                                 RUS=складам];
                      RunObject=Page 492;
                      RunPageLink=No.=FIELD(No.),
                                  Global Dimension 1 Filter=FIELD(Global Dimension 1 Filter),
                                  Global Dimension 2 Filter=FIELD(Global Dimension 2 Filter),
                                  Location Filter=FIELD(Location Filter),
                                  Drop Shipment Filter=FIELD(Drop Shipment Filter),
                                  Variant Filter=FIELD(Variant Filter);
                      Image=Warehouse }
      { 3       ;3   ;Action    ;
                      CaptionML=[ENU=BOM Level;
                                 RUS=Уровень спецификации];
                      ToolTipML=[ENU=Show the availability figures for BOM items that indicate how many units of a parent you can make based on the availability of child items.;
                                 RUS=Просмотр показателей наличия товаров из спецификации, которые указывают, какое количество родительских единиц можно сделать на основании наличия дочерних элементов.];
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromItem(Rec,ItemAvailFormsMgt.ByBOM);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=Options;
                           RUS=Параметры] }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=View by;
                           RUS=Просмотр по];
                ToolTipML=[ENU=Specifies by which period amounts are displayed.;
                           RUS=Определяет период, суммы за который должны отображаться.];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Period;
                                 RUS=День,Неделя,Месяц,Квартал,Год,Период];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             IF PeriodType = PeriodType::Period THEN
                               PeriodPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Year THEN
                               YearPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Quarter THEN
                               QuarterPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Month THEN
                               MonthPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Week THEN
                               WeekPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Day THEN
                               DayPeriodTypeOnValidate;
                           END;
                            }

    { 14  ;2   ;Field     ;
                CaptionML=[ENU=View as;
                           RUS=Просмотр как];
                ToolTipML=[ENU=Specifies how amounts are displayed. Net Change: The net change in the balance for the selected period. Balance at Date: The balance as of the last day in the selected period.;
                           RUS=Определяет способ отображения сумм. "Оборот": отображается оборот сальдо за выбранный период. "Сальдо на дату": отображается сальдо на последний день выбранного периода.];
                OptionCaptionML=[ENU=Net Change,Balance at Date;
                                 RUS=Оборот,Сальдо на дату];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AmountType;
                OnValidate=BEGIN
                             IF AmountType = AmountType::"Balance at Date" THEN
                               BalanceatDateAmountTypeOnValid;
                             IF AmountType = AmountType::"Net Change" THEN
                               NetChangeAmountTypeOnValidate;
                           END;
                            }

    { 5   ;1   ;Part      ;
                Name=ItemAvailLines;
                ApplicationArea=#Basic,#Suite;
                PagePartID=Page353 }

  }
  CODE
  {
    VAR
      ItemAvailFormsMgt@1003 : Codeunit 353;
      PeriodType@1000 : 'Day,Week,Month,Quarter,Year,Period';
      AmountType@1001 : 'Net Change,Balance at Date';
      LastDate@1002 : Date;

    LOCAL PROCEDURE UpdateSubForm@1();
    BEGIN
      CurrPage.ItemAvailLines.PAGE.Set(Rec,PeriodType,AmountType);
    END;

    PROCEDURE GetLastDate@2() : Date;
    BEGIN
      EXIT(LastDate);
    END;

    LOCAL PROCEDURE DayPeriodTypeOnPush@19008851();
    BEGIN
      UpdateSubForm;
    END;

    LOCAL PROCEDURE WeekPeriodTypeOnPush@19046063();
    BEGIN
      UpdateSubForm;
    END;

    LOCAL PROCEDURE MonthPeriodTypeOnPush@19047374();
    BEGIN
      UpdateSubForm;
    END;

    LOCAL PROCEDURE QuarterPeriodTypeOnPush@19018850();
    BEGIN
      UpdateSubForm;
    END;

    LOCAL PROCEDURE YearPeriodTypeOnPush@19051042();
    BEGIN
      UpdateSubForm;
    END;

    LOCAL PROCEDURE PeriodPeriodTypeOnPush@19032639();
    BEGIN
      UpdateSubForm;
    END;

    LOCAL PROCEDURE BalanceatDateAmountTypeOnPush@19049003();
    BEGIN
      UpdateSubForm;
    END;

    LOCAL PROCEDURE NetChangeAmountTypeOnPush@19074855();
    BEGIN
      UpdateSubForm;
    END;

    LOCAL PROCEDURE LookupOKOnPush@19031339();
    VAR
      Date@1001 : Record 2000000007;
    BEGIN
      CurrPage.ItemAvailLines.PAGE.GETRECORD(Date);
      LastDate := Date."Period Start";
    END;

    LOCAL PROCEDURE DayPeriodTypeOnValidate@19012979();
    BEGIN
      DayPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE WeekPeriodTypeOnValidate@19058475();
    BEGIN
      WeekPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE MonthPeriodTypeOnValidate@19021027();
    BEGIN
      MonthPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE QuarterPeriodTypeOnValidate@19015346();
    BEGIN
      QuarterPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE YearPeriodTypeOnValidate@19064743();
    BEGIN
      YearPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE PeriodPeriodTypeOnValidate@19066307();
    BEGIN
      PeriodPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE NetChangeAmountTypeOnValidate@19062218();
    BEGIN
      NetChangeAmountTypeOnPush;
    END;

    LOCAL PROCEDURE BalanceatDateAmountTypeOnValid@19007073();
    BEGIN
      BalanceatDateAmountTypeOnPush;
    END;

    BEGIN
    END.
  }
}

