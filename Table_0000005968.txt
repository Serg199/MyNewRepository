OBJECT Table 5968 Service Contract Template
{
  OBJECT-PROPERTIES
  {
    Date=18.12.13;
    Time=12:00:00;
    Version List=NAVW17.10;
  }
  PROPERTIES
  {
    DataCaptionFields=No.,Description;
    OnInsert=BEGIN
               ServMgtSetup.GET;
               IF "No." = '' THEN BEGIN
                 ServMgtSetup.TESTFIELD("Contract Template Nos.");
                 NoSeriesMgt.InitSeries(ServMgtSetup."Contract Template Nos.",xRec."No. Series",0D,
                   "No.","No. Series");
               END;
             END;

    OnDelete=BEGIN
               DimMgt.DeleteDefaultDim(DATABASE::"Service Contract Header","No.");
               ServContract.SETCURRENTKEY("Template No.");
               ServContract.SETRANGE("Template No.","No.");
               ServContract.MODIFYALL("Template No.",'');
             END;

    CaptionML=[ENU=Service Contract Template;
               RUS=Шаблон сервисного контракта];
    LookupPageID=Page6056;
    DrillDownPageID=Page6056;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  ServMgtSetup.GET;
                                                                  NoSeriesMgt.TestManual(ServMgtSetup."Contract Template Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              RUS=Номер] }
    { 2   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 3   ;   ;Invoice Period      ;Option        ;CaptionML=[ENU=Invoice Period;
                                                              RUS=Расчетный период];
                                                   OptionCaptionML=[ENU=Month,Two Months,Quarter,Half Year,Year,None;
                                                                    RUS=Месяц,Два месяца,Квартал,Полугодие,Год,Нет];
                                                   OptionString=Month,Two Months,Quarter,Half Year,Year,None }
    { 4   ;   ;Max. Labor Unit Price;Decimal      ;CaptionML=[ENU=Max. Labor Unit Price;
                                                              RUS=Макс. цена единицы трудозатрат];
                                                   BlankZero=Yes;
                                                   AutoFormatType=2 }
    { 5   ;   ;Combine Invoices    ;Boolean       ;CaptionML=[ENU=Combine Invoices;
                                                              RUS=Объединить счета] }
    { 6   ;   ;Prepaid             ;Boolean       ;OnValidate=BEGIN
                                                                IF "Invoice after Service" AND Prepaid THEN
                                                                  ERROR(
                                                                    Text001,
                                                                    FIELDCAPTION("Invoice after Service"),
                                                                    FIELDCAPTION(Prepaid));
                                                              END;

                                                   CaptionML=[ENU=Prepaid;
                                                              RUS=Предоплата] }
    { 7   ;   ;Service Zone Code   ;Code10        ;TableRelation="Service Zone";
                                                   CaptionML=[ENU=Service Zone Code;
                                                              RUS=Код сервисной зоны] }
    { 8   ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=[ENU=Language Code;
                                                              RUS=Код языка] }
    { 9   ;   ;Default Response Time (Hours);Decimal;
                                                   CaptionML=[ENU=Default Response Time (Hours);
                                                              RUS=Время отклика по умолчанию (часы)];
                                                   DecimalPlaces=0:5;
                                                   BlankZero=Yes }
    { 10  ;   ;Contract Lines on Invoice;Boolean  ;CaptionML=[ENU=Contract Lines on Invoice;
                                                              RUS=Строки контракта в счете] }
    { 11  ;   ;Default Service Period;DateFormula ;CaptionML=[ENU=Default Service Period;
                                                              RUS=Период серв. обслуживания по умолчанию] }
    { 14  ;   ;Invoice after Service;Boolean      ;OnValidate=BEGIN
                                                                IF NOT ServHeader.READPERMISSION AND
                                                                   "Invoice after Service" = TRUE
                                                                THEN
                                                                  ERROR(Text000);
                                                                IF "Invoice after Service" AND Prepaid THEN
                                                                  ERROR(
                                                                    Text001,
                                                                    FIELDCAPTION("Invoice after Service"),
                                                                    FIELDCAPTION(Prepaid));
                                                              END;

                                                   CaptionML=[ENU=Invoice after Service;
                                                              RUS=Выставление счета после серв. обслуживания] }
    { 15  ;   ;Allow Unbalanced Amounts;Boolean   ;CaptionML=[ENU=Allow Unbalanced Amounts;
                                                              RUS=Разрешить несбаланс. суммы] }
    { 16  ;   ;Contract Group Code ;Code10        ;TableRelation="Contract Group";
                                                   CaptionML=[ENU=Contract Group Code;
                                                              RUS=Код группы контрактов] }
    { 17  ;   ;Service Order Type  ;Code10        ;TableRelation="Service Order Type";
                                                   CaptionML=[ENU=Service Order Type;
                                                              RUS=Тип сервисного заказа] }
    { 18  ;   ;Automatic Credit Memos;Boolean     ;CaptionML=[ENU=Automatic Credit Memos;
                                                              RUS=Автомат. кредит-ноты] }
    { 20  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              RUS=Серия номеров];
                                                   Editable=No }
    { 21  ;   ;Price Update Period ;DateFormula   ;CaptionML=[ENU=Price Update Period;
                                                              RUS=Период обновления цен] }
    { 22  ;   ;Price Inv. Increase Code;Code20    ;TableRelation="Standard Text";
                                                   CaptionML=[ENU=Price Inv. Increase Code;
                                                              RUS=Код повышения цен] }
    { 23  ;   ;Serv. Contract Acc. Gr. Code;Code10;TableRelation="Service Contract Account Group".Code;
                                                   CaptionML=[ENU=Serv. Contract Acc. Gr. Code;
                                                              RUS=Код учетной группы серв. контрактов] }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ServHeader@1001 : Record 5900;
      ServContractTmplt@1000 : Record 5968;
      ServContract@1032 : Record 5965;
      ServMgtSetup@1034 : Record 5911;
      NoSeriesMgt@1045 : Codeunit 396;
      DimMgt@1040 : Codeunit 408;
      Text000@1002 : TextConst 'ENU=You cannot checkmark this field because you do not have permissions for the Service Order Management Area.;RUS=Установка этого флажка невозможна, поскольку отсутствуют права доступа к области управления сервисными заказами.';
      Text001@1003 : TextConst 'ENU=You cannot select both %1 and %2 check boxes.;RUS=Невозможно установить флажки %1 и %2 одновременно.';

    PROCEDURE AssistEdit@1(OldServContractTmplt@1000 : Record 5968) : Boolean;
    BEGIN
      WITH ServContractTmplt DO BEGIN
        ServContractTmplt := Rec;
        ServMgtSetup.GET;
        ServMgtSetup.TESTFIELD("Contract Template Nos.");
        IF NoSeriesMgt.SelectSeries(ServMgtSetup."Contract Template Nos.",OldServContractTmplt."No. Series","No. Series") THEN BEGIN
          NoSeriesMgt.SetSeries("No.");
          Rec := ServContractTmplt;
          EXIT(TRUE);
        END;
      END;
    END;

    BEGIN
    END.
  }
}

