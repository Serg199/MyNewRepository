OBJECT Page 5961 Service Email Queue
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Service Email Queue;
               RUS=Очередь эл. почты сервиса];
    InsertAllowed=No;
    SourceTable=Table5935;
    PageType=List;
    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 22      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Queue;
                                 RUS=&Очередь];
                      Image=CheckList }
      { 23      ;2   ;Action    ;
                      CaptionML=[ENU=&Send by Email;
                                 RUS=&Отправить по эл. почте];
                      Image=Email;
                      OnAction=BEGIN
                                 IF ISEMPTY THEN
                                   ERROR(Text001);

                                 IF Status = Status::Processed THEN
                                   ERROR(Text000);

                                 CLEAR(ServMailMgt);

                                 CLEARLASTERROR;

                                 IF ServMailMgt.RUN(Rec) THEN BEGIN
                                   Status := Status::Processed;
                                   CurrPage.UPDATE;
                                 END ELSE
                                   ERROR(GETLASTERRORTEXT);
                               END;
                                }
      { 24      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Delete Service Order Email Queue;
                                 RUS=&Удалить очередь сообщений эл. почты с серв. заказами];
                      Image=Delete;
                      OnAction=VAR
                                 EMailQueue@1000 : Record 5935;
                               BEGIN
                                 CLEAR(EMailQueue);
                                 EMailQueue.SETCURRENTKEY("Document Type","Document No.");
                                 EMailQueue.SETRANGE("Document Type","Document Type");
                                 EMailQueue.SETRANGE("Document No.","Document No.");
                                 REPORT.RUN(REPORT::"Delete Service Email Queue",FALSE,FALSE,EMailQueue);
                               END;
                                }
      { 16      ;2   ;Action    ;
                      CaptionML=[ENU=D&elete Service Email Queue;
                                 RUS=У&далить очередь сообщений эл. почты сервиса];
                      Image=Delete;
                      OnAction=BEGIN
                                 REPORT.RUNMODAL(REPORT::"Delete Service Email Queue");
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of document linked to this entry.;
                           RUS=Определяет тип документа, связанного с этой операцией.];
                SourceExpr="Document Type";
                Editable=FALSE }

    { 21  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the document linked to this entry.;
                           RUS=Определяет номер документа, связанного с этой операцией.];
                SourceExpr="Document No.";
                Editable=FALSE }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the message status.;
                           RUS=Определяет статус сообщения.];
                SourceExpr=Status }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date the message was sent.;
                           RUS=Определяет дату отправки сообщения.];
                SourceExpr="Sending Date";
                Editable=FALSE }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the time the message was sent.;
                           RUS=Определяет время отправки сообщения.];
                SourceExpr="Sending Time";
                Editable=FALSE }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the email address of the recipient when an email is sent to notify customers that their service items are ready.;
                           RUS=Определяет адрес электронной почты получателя при отправке сообщения электронной почты для информирования клиентов о готовности сервисных товаров.];
                SourceExpr="To Address" }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the email subject line.;
                           RUS=Определяет тему сообщения электронной почты.];
                SourceExpr="Subject Line" }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the text of the body of the email.;
                           RUS=Определяет текст сообщения электронной почты.];
                SourceExpr="Body Line";
                Visible=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=This email  has already been sent.;RUS=Это сообщение эл. почты уже отправлено.';
      Text001@1002 : TextConst 'ENU=There are no items to process.;RUS=Подлежащие обработке товары отсутствуют.';
      ServMailMgt@1001 : Codeunit 5916;

    BEGIN
    END.
  }
}

