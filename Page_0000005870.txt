OBJECT Page 5870 BOM Structure
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=BOM Structure;
               RUS=Структура спецификации];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table5870;
    PageType=Worksheet;
    SourceTableTemporary=Yes;
    OnOpenPage=BEGIN
                 RefreshPage;
               END;

    OnAfterGetRecord=VAR
                       DummyBOMWarningLog@1000 : Record 5874;
                     BEGIN
                       IsParentExpr := NOT "Is Leaf";

                       HasWarning := NOT IsLineOk(FALSE,DummyBOMWarningLog);
                     END;

    ActionList=ACTIONS
    {
      { 29      ;    ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 28      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Item Availability by;
                                 RUS=Наличие &товара по];
                      Image=ItemAvailability }
      { 27      ;2   ;Action    ;
                      CaptionML=[ENU=Event;
                                 RUS=Событие];
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvail(ItemAvailFormsMgt.ByEvent);
                               END;
                                }
      { 26      ;2   ;Action    ;
                      CaptionML=[ENU=Period;
                                 RUS=Период];
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvail(ItemAvailFormsMgt.ByPeriod);
                               END;
                                }
      { 18      ;2   ;Action    ;
                      CaptionML=[ENU=Variant;
                                 RUS=Вариант];
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvail(ItemAvailFormsMgt.ByVariant);
                               END;
                                }
      { 15      ;2   ;Action    ;
                      AccessByPermission=TableData 14=R;
                      CaptionML=[ENU=Location;
                                 RUS=Склад];
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvail(ItemAvailFormsMgt.ByLocation);
                               END;
                                }
      { 13      ;2   ;Action    ;
                      CaptionML=[ENU=BOM Level;
                                 RUS=Уровень спецификации];
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvail(ItemAvailFormsMgt.ByBOM);
                               END;
                                }
      { 5       ;0   ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 30      ;1   ;Action    ;
                      CaptionML=[ENU=Show Warnings;
                                 RUS=Показать предупреждения];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ErrorLog;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowWarningsForAllLines;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 20  ;1   ;Group     ;
                CaptionML=[ENU=Option;
                           RUS=Параметр];
                GroupType=GridLayout }

    { 19  ;2   ;Field     ;
                CaptionML=[ENU=Item Filter;
                           RUS=Фильтр по товару];
                ToolTipML=[ENU=Specifies the items that are shown in the BOM Structure window.;
                           RUS=Определяет товары, отображаемые в окне "Структура спецификации".];
                SourceExpr=ItemFilter;
                OnValidate=BEGIN
                             RefreshPage;
                           END;

                OnLookup=VAR
                           Item@1001 : Record 27;
                           ItemList@1000 : Page 31;
                         BEGIN
                           ItemList.SETTABLEVIEW(Item);
                           ItemList.LOOKUPMODE := TRUE;
                           IF ItemList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             ItemList.GETRECORD(Item);
                             Text := Item."No.";
                             EXIT(TRUE);
                           END;
                           EXIT(FALSE);
                         END;
                          }

    { 2   ;1   ;Group     ;
                Name=Group;
                CaptionML=[ENU=Lines;
                           RUS=Строки];
                IndentationColumnName=Indentation;
                ShowAsTree=Yes;
                GroupType=Repeater }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the item's position in the BOM hierarchy. Lower-level items are indented under their parents.;
                           RUS=Определяет положение товара в иерархии спецификации. Товары более низкого уровня размещаются с отступами относительно родительских товаров.];
                SourceExpr=Type }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the item.;
                           RUS=Определяет номер товара.];
                SourceExpr="No.";
                Editable=FALSE;
                Style=Strong;
                StyleExpr=IsParentExpr }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the item's description.;
                           RUS=Определяет описание товара.];
                SourceExpr=Description;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=IsParentExpr }

    { 7   ;2   ;Field     ;
                CaptionML=[ENU=Warning;
                           RUS=Предупреждение];
                ToolTipML=[ENU=Specifies if the BOM line has setup or data issues.;
                           RUS=Определяет, имеются ли у строки спецификации проблемы с настройкой или с данными.];
                BlankZero=Yes;
                SourceExpr=HasWarning;
                Editable=FALSE;
                Style=Attention;
                StyleExpr=HasWarning;
                OnDrillDown=BEGIN
                              IF HasWarning THEN
                                ShowWarnings;
                            END;
                             }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the item's level in the BOM.;
                           RUS=Определяет уровень товара в спецификации.];
                SourceExpr="Low-Level Code";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the variant code that you entered in the Variant Filter field in the Item Availability by BOM Level window.;
                           RUS=Определяет код варианта, введенный в поле "Фильтр по варианту" в окне "Доступность товаров по уровням спецификации".];
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 21  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many units of the component are required to assemble or produce one unit of the parent.;
                           RUS=Определяет количество единиц компонента, необходимое для сборки или производства одной единицы родительского товара.];
                DecimalPlaces=0:5;
                SourceExpr="Qty. per Parent";
                Editable=FALSE }

    { 22  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many units of the component are required to assemble or produce one unit of the top item.;
                           RUS=Определяет количество единиц компонента, необходимое для сборки или производства одной единицы товара верхнего уровня.];
                DecimalPlaces=0:5;
                SourceExpr="Qty. per Top Item";
                Visible=FALSE;
                Editable=FALSE }

    { 23  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the item's unit of measure.;
                           RUS=Определяет единицу измерения товара.];
                SourceExpr="Unit of Measure Code";
                Editable=FALSE }

    { 24  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the item's replenishment system.;
                           RUS=Определяет метод пополнения товара.];
                SourceExpr="Replenishment System";
                Editable=FALSE }

    { 25  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the total number of days that are required to assemble or produce the item.;
                           RUS=Определяет общее количество дней, необходимых для сборки или производства товара.];
                SourceExpr="Lead-Time Offset";
                Visible=FALSE }

    { 9   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies any safety lead time that is defined for the item.;
                           RUS=Определяет любое значение страхового запаса времени подготовки, которое определено для товара.];
                SourceExpr="Safety Lead Time";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how long it takes to replenish the item, by purchase, assembly, or production.;
                           RUS=Определяет время, необходимое для пополнения запаса товара путем покупки, сборки или производства.];
                SourceExpr="Lead Time Calculation";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      Item@1004 : Record 27;
      AsmHeader@1009 : Record 900;
      ProdOrderLine@1002 : Record 5406;
      ItemAvailFormsMgt@1001 : Codeunit 353;
      IsParentExpr@1010 : Boolean INDATASET;
      ItemFilter@1008 : Code[250];
      ShowBy@1005 : 'Item,Assembly,Production';
      Text000@1012 : TextConst 'ENU=Could not find items with BOM levels.;RUS=Позиции с уровнями спецификации не найдены.';
      HasWarning@1011 : Boolean INDATASET;
      Text001@1003 : TextConst 'ENU=There are no warnings.;RUS=Предупреждений нет.';

    PROCEDURE InitItem@1(VAR NewItem@1000 : Record 27);
    BEGIN
      Item.COPY(NewItem);
      ItemFilter := Item."No.";
      ShowBy := ShowBy::Item;
    END;

    PROCEDURE InitAsmOrder@5(NewAsmHeader@1000 : Record 900);
    BEGIN
      AsmHeader := NewAsmHeader;
      ShowBy := ShowBy::Assembly;
    END;

    PROCEDURE InitProdOrder@6(NewProdOrderLine@1000 : Record 5406);
    BEGIN
      ProdOrderLine := NewProdOrderLine;
      ShowBy := ShowBy::Production;
    END;

    LOCAL PROCEDURE RefreshPage@2();
    VAR
      CalcBOMTree@1000 : Codeunit 5870;
    BEGIN
      Item.SETFILTER("No.",ItemFilter);
      CalcBOMTree.SetItemFilter(Item);
      CASE ShowBy OF
        ShowBy::Item:
          BEGIN
            Item.FINDFIRST;
            IF (NOT Item.HasBOM) AND (Item."Routing No." = '') THEN
              ERROR(Text000);
            CalcBOMTree.GenerateTreeForItems(Item,Rec,0);
          END;
        ShowBy::Production:
          CalcBOMTree.GenerateTreeForProdLine(ProdOrderLine,Rec,0);
        ShowBy::Assembly:
          CalcBOMTree.GenerateTreeForAsm(AsmHeader,Rec,0);
      END;

      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ShowWarnings@10();
    VAR
      TempBOMWarningLog@1001 : TEMPORARY Record 5874;
    BEGIN
      IF IsLineOk(TRUE,TempBOMWarningLog) THEN
        MESSAGE(Text001)
      ELSE
        PAGE.RUNMODAL(PAGE::"BOM Warning Log",TempBOMWarningLog);
    END;

    LOCAL PROCEDURE ShowWarningsForAllLines@27();
    VAR
      TempBOMWarningLog@1001 : TEMPORARY Record 5874;
    BEGIN
      IF AreAllLinesOk(TempBOMWarningLog) THEN
        MESSAGE(Text001)
      ELSE
        PAGE.RUNMODAL(PAGE::"BOM Warning Log",TempBOMWarningLog);
    END;

    LOCAL PROCEDURE ItemAvail@32(AvailType@1000 : Option);
    VAR
      Item@1001 : Record 27;
    BEGIN
      TESTFIELD(Type,Type::Item);

      Item.GET("No.");
      Item.SETFILTER("No.","No.");
      Item.SETRANGE("Date Filter",0D,"Needed by Date");
      Item.SETFILTER("Variant Filter","Variant Code");
      IF ShowBy <> ShowBy::Item THEN
        Item.SETFILTER("Location Filter","Location Code");

      ItemAvailFormsMgt.ShowItemAvailFromItem(Item,AvailType);
    END;

    BEGIN
    END.
  }
}

