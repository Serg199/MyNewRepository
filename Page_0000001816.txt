OBJECT Page 1816 Job Creation Wizard
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Create New Job;
               RUS=Создать работу];
    SourceTable=Table167;
    DelayedInsert=Yes;
    PageType=NavigatePage;
    OnInit=BEGIN
             LoadTopBanners;
           END;

    OnOpenPage=BEGIN
                 INIT;

                 Step := Step::Start;
                 EnableControls;
               END;

    ActionList=ACTIONS
    {
      { 10      ;    ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 15      ;1   ;Action    ;
                      Name=ActionBack;
                      CaptionML=[ENU=Back;
                                 RUS=Назад];
                      ToolTipML=;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=BackActionEnabled;
                      InFooterBar=Yes;
                      Image=PreviousRecord;
                      OnAction=BEGIN
                                 NextStep(TRUE);
                               END;
                                }
      { 14      ;1   ;Action    ;
                      Name=ActionNext;
                      CaptionML=[ENU=Next;
                                 RUS=Далее];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NextActionEnabled;
                      InFooterBar=Yes;
                      Image=NextRecord;
                      OnAction=BEGIN
                                 NextStep(FALSE);
                               END;
                                }
      { 11      ;1   ;Action    ;
                      Name=ActionFinish;
                      CaptionML=[ENU=Finish;
                                 RUS=Готово];
                      ToolTipML=;
                      ApplicationArea=#Basic,#Suite;
                      Enabled=FinishActionEnabled;
                      InFooterBar=Yes;
                      Image=Approve;
                      OnAction=BEGIN
                                 FinishAction;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 96  ;1   ;Group     ;
                Visible=TopBannerVisible AND NOT FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 97  ;2   ;Field     ;
                ApplicationArea=#Jobs;
                SourceExpr=MediaRepositoryStandard.Image;
                Editable=FALSE;
                ShowCaption=No }

    { 98  ;1   ;Group     ;
                Visible=TopBannerVisible AND FinalStepVisible;
                Editable=FALSE;
                GroupType=Group }

    { 99  ;2   ;Field     ;
                ApplicationArea=#Jobs;
                SourceExpr=MediaRepositoryDone.Image;
                Editable=FALSE;
                ShowCaption=No }

    { 25  ;1   ;Group     ;
                Visible=FirstStepVisible;
                GroupType=Group }

    { 24  ;2   ;Group     ;
                CaptionML=[ENU=Welcome to Create New Job;
                           RUS=Вас приветствует мастер создания работы];
                Visible=FirstStepVisible;
                GroupType=Group }

    { 23  ;3   ;Group     ;
                Visible=FirstStepVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=Do you want to create a new job from an existing job?;
                                     RUS=Вы хотите создать новую работу на основе имеющейся?] }

    { 21  ;4   ;Field     ;
                Name=YesCheckbox;
                CaptionML=[ENU=Yes;
                           RUS=Да];
                ApplicationArea=#Jobs;
                SourceExpr=FromExistingJobYes;
                OnValidate=BEGIN
                             IF FromExistingJobYes THEN
                               FromExistingJobNo := FALSE;
                           END;
                            }

    { 22  ;4   ;Field     ;
                Name=NoCheckbox;
                CaptionML=[ENU=No;
                           RUS=Нет];
                ApplicationArea=#Jobs;
                SourceExpr=FromExistingJobNo;
                OnValidate=BEGIN
                             IF FromExistingJobNo THEN
                               FromExistingJobYes := FALSE;
                           END;
                            }

    { 19  ;1   ;Group     ;
                Visible=CreationStepVisible;
                GroupType=Group }

    { 20  ;2   ;Group     ;
                CaptionML=[ENU=Welcome to Create New Job;
                           RUS=Вас приветствует мастер создания работы];
                Visible=CreationStepVisible;
                GroupType=Group }

    { 18  ;3   ;Group     ;
                Visible=CreationStepVisible;
                GroupType=Group;
                InstructionalTextML=[ENU=Fill in the following fields for the new job.;
                                     RUS=Заполните следующие поля для новой работы.] }

    { 16  ;4   ;Field     ;
                CaptionML=[ENU=No.;
                           RUS=Номер];
                ApplicationArea=#Jobs;
                SourceExpr="No.";
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 26  ;4   ;Field     ;
                CaptionML=[ENU=Description;
                           RUS=Описание];
                ApplicationArea=#Jobs;
                SourceExpr=Description }

    { 27  ;4   ;Field     ;
                CaptionML=[ENU=Bill-to Customer No.;
                           RUS=Код плательщика];
                ApplicationArea=#Jobs;
                SourceExpr="Bill-to Customer No.";
                TableRelation=Customer }

    { 9   ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=[ENU=To select the tasks to copy from an existing job, choose Next.;
                                     RUS=Нажмите "Далее", чтобы выбрать задачи, которые будут скопированы из имеющейся работы.] }

    { 8   ;1   ;Group     ;
                Visible=FinalStepVisible;
                GroupType=Group }

    { 12  ;2   ;Group     ;
                CaptionML=[ENU=That's it!;
                           RUS=Вот и все!];
                GroupType=Group }

    { 4   ;3   ;Group     ;
                GroupType=Group;
                InstructionalTextML=[ENU=To view your new job, choose Finish.;
                                     RUS=Нажмите "Готово", чтобы просмотреть новую работу.] }

  }
  CODE
  {
    VAR
      MediaRepositoryStandard@1040 : Record 9400;
      MediaRepositoryDone@1041 : Record 9400;
      Step@1012 : 'Start,Creation,Finish';
      TopBannerVisible@1042 : Boolean;
      FirstStepVisible@1000 : Boolean;
      CreationStepVisible@1010 : Boolean;
      FinalStepVisible@1015 : Boolean;
      FinishActionEnabled@1009 : Boolean;
      BackActionEnabled@1013 : Boolean;
      NextActionEnabled@1014 : Boolean;
      FromExistingJobYes@1022 : Boolean;
      FromExistingJobNo@1021 : Boolean;
      SelectYesNoMsg@1025 : TextConst 'ENU=To continue, specify if you want to create the new job based on an existing job.;RUS=Для продолжения укажите, нужно ли создавать новую работу на основе имеющейся.';
      SelectJobNumberMsg@1026 : TextConst 'ENU=To continue, specify the job number that you want to copy.;RUS=Для продолжения укажите номер работы, которую требуется скопировать.';
      SelectCustomerNumberMsg@1027 : TextConst 'ENU=To continue, specify the customer of the new job.;RUS=Для продолжения укажите клиента новой работы.';

    LOCAL PROCEDURE EnableControls@2();
    BEGIN
      IF Step = Step::Creation THEN
        IF (NOT FromExistingJobNo) AND (NOT FromExistingJobYes) THEN BEGIN
          MESSAGE(SelectYesNoMsg);
          Step := Step - 1;
          EXIT;
        END;

      IF Step = Step::Finish THEN BEGIN
        IF "No." = '' THEN BEGIN
          MESSAGE(SelectJobNumberMsg);
          Step := Step - 1;
          EXIT;
        END;

        IF "Bill-to Customer No." = '' THEN BEGIN
          MESSAGE(SelectCustomerNumberMsg);
          Step := Step - 1;
          EXIT;
        END;
      END;

      ResetControls;

      CASE Step OF
        Step::Start:
          ShowStartStep;
        Step::Creation:
          ShowCreationStep;
        Step::Finish:
          ShowFinalStep;
      END;
    END;

    LOCAL PROCEDURE FinishAction@12();
    BEGIN
      PAGE.RUN(PAGE::"Job Card",Rec);
      CurrPage.CLOSE;
    END;

    LOCAL PROCEDURE NextStep@41(Backwards@1000 : Boolean);
    BEGIN
      IF Backwards THEN
        Step := Step - 1
      ELSE
        Step := Step + 1;

      EnableControls;
    END;

    LOCAL PROCEDURE ShowStartStep@24();
    BEGIN
      FirstStepVisible := TRUE;
      FinishActionEnabled := FALSE;
      BackActionEnabled := FALSE;
      FromExistingJobYes := TRUE;
      FromExistingJobNo := FALSE;
    END;

    LOCAL PROCEDURE ShowCreationStep@33();
    BEGIN
      CreationStepVisible := TRUE;
      FinishActionEnabled := FALSE;

      // If user clicked "Back", the Job will already exist, so don't try to create it again.
      IF "No." = '' THEN BEGIN
        INSERT(TRUE);
        COMMIT;
      END;

      IF FromExistingJobNo THEN
        FinishAction;
    END;

    LOCAL PROCEDURE ShowFinalStep@34();
    VAR
      CopyJobTasks@1000 : Page 1041;
    BEGIN
      FinalStepVisible := TRUE;
      BackActionEnabled := FALSE;
      NextActionEnabled := FALSE;

      CopyJobTasks.SetToJob(Rec);
      CopyJobTasks.RUN;
    END;

    LOCAL PROCEDURE ResetControls@1();
    BEGIN
      FinishActionEnabled := TRUE;
      BackActionEnabled := TRUE;
      NextActionEnabled := TRUE;

      FirstStepVisible := FALSE;
      CreationStepVisible := FALSE;
      FinalStepVisible := FALSE;
    END;

    LOCAL PROCEDURE LoadTopBanners@40();
    BEGIN
      IF MediaRepositoryStandard.GET('AssistedSetup-NoText-400px.png',FORMAT(CURRENTCLIENTTYPE)) AND
         MediaRepositoryDone.GET('AssistedSetupDone-NoText-400px.png',FORMAT(CURRENTCLIENTTYPE))
      THEN
        TopBannerVisible := MediaRepositoryDone.Image.HASVALUE;
    END;

    BEGIN
    END.
  }
}

