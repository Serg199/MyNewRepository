OBJECT Report 14921 FA Phys. Inventory INV-1a
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=FA Phys. Inventory INV-1a;
               RUS=Инвентарная опись НМА - ИНВ-1а];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  FASetup.GET;
                  FASetup.TESTFIELD("INV-1a Template Code");
                  ExcelReportBuilderMgr.InitTemplate(FASetup."INV-1a Template Code");
                  ExcelReportBuilderMgr.SetSheet('Sheet1');
                END;

    OnPostReport=BEGIN
                   IF FileName <> '' THEN
                     ExcelReportBuilderMgr.ExportDataToClientFile(FileName)
                   ELSE
                     ExcelReportBuilderMgr.ExportData;
                 END;

  }
  DATASET
  {
    { 5165;    ;DataItem;                    ;
               DataItemTable=Table12430;
               DataItemTableView=SORTING(User ID) }

    { 3215;1   ;DataItem;                    ;
               DataItemTable=Table5621;
               DataItemTableView=SORTING(Journal Template Name,Journal Batch Name,Line No.);
               OnPreDataItem=BEGIN
                               IF "Document Print Buffer"."Table ID" <> DATABASE::"FA Journal Line" THEN
                                 CurrReport.BREAK;

                               FillGeneralInfo;

                               ExcelReportBuilderMgr.SetSheet('Sheet2');
                               ExcelReportBuilderMgr.AddSection('MAINPAGEHEADER');
                             END;

               OnAfterGetRecord=BEGIN
                                  IF NOT FA.GET("FA No.") THEN
                                    CurrReport.SKIP;

                                  IF FA."FA Type" <> FA."FA Type"::"Intangible Asset" THEN
                                    CurrReport.SKIP;

                                  IF NOT ExcelReportBuilderMgr.TryAddSectionWithPlaceForFooter('MAINPAGEBODY','MAINPAGEFOOTER') THEN BEGIN
                                    FillMainPageTotals;
                                    ExcelReportBuilderMgr.AddPagebreak;
                                    ExcelReportBuilderMgr.AddSection('MAINPAGEHEADER');
                                    ExcelReportBuilderMgr.AddSection('MAINPAGEBODY');

                                    QtyNumberPPPage := 0;
                                    CLEAR(PageAmount);
                                  END;

                                  QtyNumberPP += 1;
                                  QtyNumberPPPage += 1;

                                  AddTotals(PageAmount,"Actual Amount","Calc. Amount");
                                  AddTotals(TotalAmount,"Actual Amount","Calc. Amount");

                                  ExcelReportBuilderMgr.AddDataToSection('LineNum',FORMAT(QtyNumberPP));
                                  ExcelReportBuilderMgr.AddDataToSection('ItemName',Description);
                                  ExcelReportBuilderMgr.AddDataToSection('ReleaseDate',FORMAT(FA."Initial Release Date"));
                                  ExcelReportBuilderMgr.AddDataToSection('ActualAmount',FORMAT("Actual Amount"));
                                  ExcelReportBuilderMgr.AddDataToSection('CalcAmount',FORMAT("Calc. Amount"));
                                END;

               OnPostDataItem=BEGIN
                                FillMainPageTotals;
                                FillLastPage;
                              END;

               DataItemLink=Journal Template Name=FIELD(Journal Template Name),
                            Journal Batch Name=FIELD(Journal Batch Name) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             RUS=Параметры] }

      { 1210018;2;Group     ;
                  CaptionML=[ENU=Commission;
                             RUS=Комиссия] }

      { 1210004;3;Field     ;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=Commission1;
                  TableRelation=Employee }

      { 1210002;3;Field     ;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=Commission2;
                  TableRelation=Employee }

      { 1210001;3;Field     ;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=Commission3;
                  TableRelation=Employee }

      { 1210019;2;Group     ;
                  CaptionML=[ENU=Responsible Person;
                             RUS=Материально ответственное лицо] }

      { 1210022;3;Field     ;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=ResponsiblePerson1;
                  TableRelation=Employee }

      { 1210024;3;Field     ;
                  ApplicationArea=#FixedAssets;
                  SourceExpr=ResponsiblePerson2;
                  TableRelation=Employee }

      { 1210015;2;Field     ;
                  CaptionML=[ENU=Document No.;
                             RUS=Номер документа];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=DocumentNo }

      { 1210012;2;Field     ;
                  CaptionML=[ENU=Document Date;
                             RUS=Дата документа];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=DocumentDate }

      { 1210010;2;Field     ;
                  CaptionML=[ENU=Starting Date;
                             RUS=Дата начала];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=StartDate }

      { 1210008;2;Field     ;
                  CaptionML=[ENU=Ending Date;
                             RUS=Дата окончания];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=EndDate }

      { 1210006;2;Field     ;
                  CaptionML=[ENU=Chairman;
                             RUS=Председатель];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=Chairman;
                  TableRelation=Employee }

      { 1210000;2;Field     ;
                  CaptionML=[ENU=Supervisor;
                             RUS=Контролер];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=CheckedBy;
                  TableRelation=Employee }

      { 1210016;2;Field     ;
                  CaptionML=[ENU=Location;
                             RUS=Склад];
                  ApplicationArea=#FixedAssets;
                  SourceExpr=FALocationCode;
                  TableRelation="FA Location" }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CompanyInfo@1210000 : Record 79;
      FALocation@1210010 : Record 5609;
      FA@1210012 : Record 5600;
      FASetup@1210016 : Record 5603;
      LocMgt@1210003 : Codeunit 12400;
      StdRepMgt@1210002 : Codeunit 12401;
      ExcelReportBuilderMgr@1210007 : Codeunit 14930;
      FileName@1210008 : Text;
      StartDate@1210014 : Date;
      EndDate@1210015 : Date;
      DocumentNo@1210017 : Code[20];
      DocumentDate@1210018 : Date;
      QtyNumberPP@1210006 : Integer;
      QtyNumberPPPage@1210021 : Integer;
      TotalAmount@1210024 : ARRAY [2] OF Decimal;
      PageAmount@1210009 : ARRAY [2] OF Decimal;
      Chairman@1210032 : Code[20];
      Commission1@1210033 : Code[20];
      Commission2@1210034 : Code[20];
      Commission3@1210035 : Code[20];
      CheckedBy@1210036 : Code[20];
      ResponsiblePerson1@1210043 : Code[20];
      ResponsiblePerson2@1210045 : Code[20];
      FALocationCode@1210005 : Code[10];
      ValueIndex@1210001 : ',FactAmt,CalcAmt';

    PROCEDURE FillGeneralInfo@1210002();
    BEGIN
      CompanyInfo.GET;
      ExcelReportBuilderMgr.AddSection('FIRSTPAGE');

      ExcelReportBuilderMgr.AddDataToSection('CompanyName',StdRepMgt.GetCompanyName);
      IF FALocation.GET(FALocationCode) THEN BEGIN
        ExcelReportBuilderMgr.AddDataToSection('LocationName',FALocation.Name);
        ExcelReportBuilderMgr.AddDataToSection('DepartmentName',StdRepMgt.GetEmpDepartment(FALocation."Employee No."));
      END;
      ExcelReportBuilderMgr.AddDataToSection('OKPO',CompanyInfo."OKPO Code");
      ExcelReportBuilderMgr.AddDataToSection('StartDate',FORMAT(StartDate));
      ExcelReportBuilderMgr.AddDataToSection('EndDate',FORMAT(EndDate));
      ExcelReportBuilderMgr.AddDataToSection('DocNumber',DocumentNo);
      ExcelReportBuilderMgr.AddDataToSection('DocDate',FORMAT(DocumentDate));
      ExcelReportBuilderMgr.AddDataToSection('RespFirstPageTitle1',StdRepMgt.GetEmpPosition(ResponsiblePerson1));
      ExcelReportBuilderMgr.AddDataToSection('RespFirstPageName1',StdRepMgt.GetEmpName(ResponsiblePerson1));
      ExcelReportBuilderMgr.AddDataToSection('RespFirstPageTitle2',StdRepMgt.GetEmpPosition(ResponsiblePerson2));
      ExcelReportBuilderMgr.AddDataToSection('RespFirstPageName2',StdRepMgt.GetEmpName(ResponsiblePerson2));
    END;

    PROCEDURE SetFileNameSilent@1210007(NewFileName@1210001 : Text);
    BEGIN
      FileName := NewFileName;
    END;

    LOCAL PROCEDURE GetDecimals@1210029(FullAmount@1210000 : Decimal) : Decimal;
    BEGIN
      EXIT(ABS((FullAmount - ROUND(FullAmount,1,'<')) * 100));
    END;

    LOCAL PROCEDURE AddTotals@1210020(VAR TotalArr@1210000 : ARRAY [2] OF Decimal;ActualAmt@1210001 : Decimal;CalcAmt@1210002 : Decimal);
    BEGIN
      TotalArr[ValueIndex::FactAmt] += ActualAmt;
      TotalArr[ValueIndex::CalcAmt] += CalcAmt;
    END;

    LOCAL PROCEDURE FillMainPageTotals@1210064();
    BEGIN
      ExcelReportBuilderMgr.AddSection('MAINPAGEFOOTER');
      ExcelReportBuilderMgr.AddDataToSection('TotalFactAmount',FORMAT(PageAmount[ValueIndex::FactAmt]));
      ExcelReportBuilderMgr.AddDataToSection('TotalAccountingAmount',FORMAT(PageAmount[ValueIndex::CalcAmt]));
      ExcelReportBuilderMgr.AddDataToSection('AssetCnt',LocMgt.Integer2Text(QtyNumberPPPage,1,'','',''));
      ExcelReportBuilderMgr.AddDataToSection('AmountFact',LocMgt.Integer2Text(PageAmount[ValueIndex::FactAmt],1,'','',''));
      ExcelReportBuilderMgr.AddDataToSection('Cent',FORMAT(GetDecimals(PageAmount[ValueIndex::FactAmt])));
    END;

    LOCAL PROCEDURE FillLastPage@1210004();
    BEGIN
      ExcelReportBuilderMgr.SetSheet('Sheet3');
      ExcelReportBuilderMgr.AddSection('LASTPAGE');

      ExcelReportBuilderMgr.AddDataToSection('LineNumTotalStr',LocMgt.Integer2Text(QtyNumberPP,2,'','',''));
      ExcelReportBuilderMgr.AddDataToSection('CountedAmountTotalStr',
        LocMgt.Integer2Text(TotalAmount[ValueIndex::FactAmt],2,'','',''));
      ExcelReportBuilderMgr.AddDataToSection('CountedAmountTotalCent',
        StdRepMgt.FormatReportValue(GetDecimals(TotalAmount[ValueIndex::FactAmt]),0));
      ExcelReportBuilderMgr.AddDataToSection('CountTo',FORMAT(QtyNumberPP));

      ExcelReportBuilderMgr.AddDataToSection('Chairman',StdRepMgt.GetEmpPosition(Chairman));
      ExcelReportBuilderMgr.AddDataToSection('ChairmanName',StdRepMgt.GetEmpName(Chairman));
      ExcelReportBuilderMgr.AddDataToSection('Member1',StdRepMgt.GetEmpPosition(Commission1));
      ExcelReportBuilderMgr.AddDataToSection('MemberName1',StdRepMgt.GetEmpName(Commission1));
      ExcelReportBuilderMgr.AddDataToSection('Member2',StdRepMgt.GetEmpPosition(Commission2));
      ExcelReportBuilderMgr.AddDataToSection('MemberName2',StdRepMgt.GetEmpName(Commission2));
      ExcelReportBuilderMgr.AddDataToSection('Member3',StdRepMgt.GetEmpPosition(Commission3));
      ExcelReportBuilderMgr.AddDataToSection('MemberName3',StdRepMgt.GetEmpName(Commission3));

      ExcelReportBuilderMgr.AddDataToSection('RespLastPageTitle1',StdRepMgt.GetEmpPosition(ResponsiblePerson1));
      ExcelReportBuilderMgr.AddDataToSection('RespLastPageName1',StdRepMgt.GetEmpName(ResponsiblePerson1));
      ExcelReportBuilderMgr.AddDataToSection('RespLastPageTitle2',StdRepMgt.GetEmpPosition(ResponsiblePerson2));
      ExcelReportBuilderMgr.AddDataToSection('RespLastPageName2',StdRepMgt.GetEmpName(ResponsiblePerson2));
      ExcelReportBuilderMgr.AddDataToSection('CheckedByTitleLastPage',StdRepMgt.GetEmpPosition(CheckedBy));
      ExcelReportBuilderMgr.AddDataToSection('CheckedByNameLastPage',StdRepMgt.GetEmpName(CheckedBy));
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

