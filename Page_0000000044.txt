OBJECT Page 44 Sales Credit Memo
{
  OBJECT-PROPERTIES
  {
    Date=09.06.17;
    Time=16:22:12;
    Modified=Yes;
    Version List=NAVW110.00.00.15140,NAVRU10.00.00.15140,NOS-26;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Credit Memo;
               RUS=Кредит-нота продажи];
    SourceTable=Table36;
    SourceTableView=WHERE(Document Type=FILTER(Credit Memo));
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Approve,Release,Posting,Prepare,Credit Memo,Request Approval;
                                RUS=Создать,Обработать,Отчет,Утвердить,Выпустить,Учет,Подготовить,Кредит-нота,Запросить утверждение];
    OnInit=BEGIN
             SetExtDocNoMandatoryCondition;
           END;

    OnOpenPage=VAR
                 OfficeMgt@1210000 : Codeunit 1630;
               BEGIN
                 IF UserMgt.GetSalesFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetSalesFilter);
                   FILTERGROUP(0);
                 END;

                 SetDocNoVisible;
                 SetControlAppearance;
                 OfficeMgtHideAction := OfficeMgt.IsAvailable;
               END;

    OnAfterGetRecord=BEGIN
                       SetControlAppearance;
                     END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserMgt.GetSalesFilter;
                  IF (NOT DocNoVisible) AND ("No." = '') THEN
                    SetSellToCustomerFromFilter;
                  SetControlAppearance;
                END;

    OnInsertRecord=BEGIN
                     IF DocNoVisible THEN
                       CheckCreditMaxBeforeInsert;
                   END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     EXIT(ConfirmDeletion);
                   END;

    OnQueryClosePage=BEGIN
                       IF NOT DocumentIsPosted THEN
                         EXIT(ConfirmCloseUnposted);
                     END;

    OnAfterGetCurrRecord=BEGIN
                           CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromRecord(Rec);
                           CurrPage.ApprovalFactBox.PAGE.UpdateApprovalEntriesFromSourceRecord(RECORDID);
                           ShowWorkflowStatus := CurrPage.WorkflowStatus.PAGE.SetFilterOnWorkflowRecord(RECORDID);
                           SetControlAppearance;
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 49      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Credit Memo;
                                 RUS=&Кредит-нота];
                      Image=CreditMemo }
      { 51      ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 RUS=Статистика];
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Category8;
                      OnAction=VAR
                                 Handled@1000 : Boolean;
                               BEGIN
                                 OnBeforeStatisticsAction(Rec,Handled);
                                 IF NOT Handled THEN BEGIN
                                   CalcInvDiscForHeader;
                                   COMMIT;
                                   PAGE.RUNMODAL(PAGE::"Sales Statistics",Rec);
                                   SalesCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                                 END
                               END;
                                }
      { 52      ;2   ;Action    ;
                      Name=CreditMemo_CustomerCard;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Customer;
                                 RUS=Клиент];
                      RunObject=Page 21;
                      RunPageLink=No.=FIELD(Sell-to Customer No.);
                      Enabled=CustomerSelected;
                      Image=EditLines }
      { 53      ;2   ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 RUS=Ко&мментарии];
                      RunObject=Page 67;
                      RunPageLink=Document Type=FIELD(Document Type),
                                  No.=FIELD(No.),
                                  Document Line No.=CONST(0);
                      Promoted=Yes;
                      Image=ViewComments;
                      PromotedCategory=Category8 }
      { 105     ;2   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 RUS=Измерения];
                      ToolTipML=[ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 RUS=Просмотр или изменение измерений, например области, проекта или отдела, которые можно назначать документам покупки и продажи для распределения себестоимости и анализа истории транзакций.];
                      Promoted=Yes;
                      Enabled="No." <> '';
                      Image=Dimensions;
                      PromotedCategory=Category8;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 121     ;2   ;Action    ;
                      Name=Approvals;
                      AccessByPermission=TableData 454=R;
                      CaptionML=[ENU=Approvals;
                                 RUS=Утверждения];
                      ToolTipML=[ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                                 RUS=Просмотр списка записей, ожидающих утверждения. Например, вы можете видеть имя пользователя, запросившего утверждение записи, время отправки запроса и время, когда он должен быть утвержден.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Image=Approvals;
                      PromotedCategory=Category9;
                      OnAction=VAR
                                 ApprovalEntries@1001 : Page 658;
                               BEGIN
                                 ApprovalEntries.Setfilters(DATABASE::"Sales Header","Document Type","No.");
                                 ApprovalEntries.RUN;
                               END;
                                }
      { 1470000 ;2   ;Action    ;
                      CaptionML=[ENU=Sig&natures;
                                 RUS=&Подписи];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 12463;
                      RunPageLink=Table ID=CONST(36),
                                  Document Type=FIELD(Document Type),
                                  Document No.=FIELD(No.);
                      Image=Signature }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 73      ;1   ;ActionGroup;
                      Name=Credit Memo;
                      CaptionML=[ENU=&Credit Memo;
                                 RUS=&Кредит-нота];
                      Image=CreditMemo }
      { 72      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Customer;
                                 RUS=Клиент];
                      ToolTipML=[ENU=View or edit detailed information about the customer on the sales document.;
                                 RUS=Просмотр или изменение подробных сведений о клиенте в документе продажи.];
                      ApplicationArea=#Basic,#Suite;
                      RunObject=Page 21;
                      RunPageLink=No.=FIELD(Sell-to Customer No.);
                      Promoted=Yes;
                      Enabled=CustomerSelected;
                      PromotedIsBig=Yes;
                      Image=Customer;
                      PromotedCategory=Category8 }
      { 64      ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 RUS=Измерения];
                      ToolTipML=[ENU=View or edits dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 RUS=Просмотр или изменение измерений, например области, проекта или отдела, которые можно назначать документам покупки и продажи для распределения себестоимости и анализа истории транзакций.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Dimensions;
                      PromotedCategory=Category8;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 29      ;1   ;ActionGroup;
                      CaptionML=[ENU=Approval;
                                 RUS=Утверждение] }
      { 27      ;2   ;Action    ;
                      Name=Approve;
                      CaptionML=[ENU=Approve;
                                 RUS=Утвердить];
                      ToolTipML=[ENU=Approve the requested changes.;
                                 RUS=Утверждение запрошенных изменений.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.ApproveRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 25      ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=[ENU=Reject;
                                 RUS=Отклонить];
                      ToolTipML=[ENU=Reject the approval request.;
                                 RUS=Отклонение запроса на утверждение.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.RejectRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 23      ;2   ;Action    ;
                      Name=Delegate;
                      CaptionML=[ENU=Delegate;
                                 RUS=Делегировать];
                      ToolTipML=[ENU=Delegate the approval to a substitute approver.;
                                 RUS=Делегирование утверждения заместителю утверждающего лица.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.DelegateRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 31      ;2   ;Action    ;
                      Name=Comment;
                      CaptionML=[ENU=Comments;
                                 RUS=Комментарии];
                      ToolTipML=[ENU=View or add comments.;
                                 RUS=Просмотр или добавление комментариев.];
                      ApplicationArea=#All;
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.GetApprovalComment(Rec);
                               END;
                                }
      { 7       ;1   ;ActionGroup;
                      CaptionML=[ENU=Release;
                                 RUS=Выпустить];
                      Image=ReleaseDoc }
      { 122     ;2   ;Action    ;
                      Name=Release;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=[ENU=Re&lease;
                                 RUS=Вы&пустить];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ReleaseDoc;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 ReleaseSalesDoc@1000 : Codeunit 414;
                               BEGIN
                                 ReleaseSalesDoc.PerformManualRelease(Rec);
                               END;
                                }
      { 123     ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=[ENU=Re&open;
                                 RUS=&Открыть];
                      ToolTipML=[ENU=Reopen the document to change it after it has been approved. Approved documents have the Released status and must be opened before they can be changed.;
                                 RUS=Повторное открытие документа для его изменения после утверждения. Утвержденные документы имеют статус "Выпущено", и их необходимо открывать перед изменением.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=Status <> Status::Open;
                      PromotedIsBig=Yes;
                      Image=ReOpen;
                      PromotedCategory=Category5;
                      OnAction=VAR
                                 ReleaseSalesDoc@1001 : Codeunit 414;
                               BEGIN
                                 ReleaseSalesDoc.PerformManualReopen(Rec);
                               END;
                                }
      { 58      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 RUS=Ф&ункции];
                      Image=Action }
      { 120     ;2   ;Action    ;
                      Name=GetPostedDocumentLinesToReverse;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get Posted Doc&ument Lines to Reverse;
                                 RUS=Получить учт. строки доку&ментов для сторнир.];
                      Promoted=Yes;
                      Image=ReverseLines;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 GetPstdDocLinesToRevere;
                               END;
                                }
      { 114     ;2   ;Action    ;
                      Name=CalculateInvoiceDiscount;
                      AccessByPermission=TableData 19=R;
                      CaptionML=[ENU=Calculate &Invoice Discount;
                                 RUS=Вычи&слить скидку по счету];
                      ToolTipML=[ENU=Calculate the invoice discount that applies to the sales credit memo.;
                                 RUS=Расчет скидки по счету, применимой к кредит-ноте продажи.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=CalculateInvoiceDiscount;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 ApproveCalcInvDisc;
                                 SalesCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 113     ;2   ;Separator  }
      { 150     ;2   ;Action    ;
                      Name=ApplyEntries;
                      ShortCutKey=Shift+F11;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Apply Entries;
                                 RUS=Применить операции];
                      ToolTipML=[ENU=Select one or more ledger entries that you want to apply this record to so that the related posted documents are closed as paid or refunded.;
                                 RUS=Выберите одну или несколько операций книги, которые нужно применить к этой записи, чтобы связанные учтенные документы были закрыты как оплаченные или возмещенные.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=ApplyEntries;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 CODEUNIT.RUN(CODEUNIT::"Sales Header Apply",Rec);
                               END;
                                }
      { 126     ;2   ;Separator  }
      { 112     ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Get St&d. Cust. Sales Codes;
                                 RUS=Получить ст&андарт. коды продажи клиента];
                      Promoted=Yes;
                      Image=CustomerCode;
                      PromotedCategory=Category7;
                      OnAction=VAR
                                 StdCustSalesCode@1000 : Record 172;
                               BEGIN
                                 StdCustSalesCode.InsertSalesLines(Rec);
                               END;
                                }
      { 128     ;2   ;Separator  }
      { 115     ;2   ;Action    ;
                      Name=CopyDocument;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Document;
                                 RUS=Копировать документ];
                      ToolTipML=[ENU=Copy document lines and header information from another sales document to this document. You can copy a posted sales invoice into a new sales invoice to quickly create a similar document.;
                                 RUS=Копирование строк документа и сведений заголовка из другого документа продажи в этот документ. Вы можете скопировать учтенный счет продажи в новый счет продажи, чтобы быстро создать подобный документ.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Image=CopyDocument;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 CopySalesDoc.SetSalesHeader(Rec);
                                 CopySalesDoc.RUNMODAL;
                                 CLEAR(CopySalesDoc);
                                 IF GET("Document Type","No.") THEN;
                               END;
                                }
      { 56      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Move Negative Lines;
                                 RUS=Перемещение отрицательных строк];
                      Promoted=Yes;
                      Image=MoveNegativeLines;
                      PromotedCategory=Category7;
                      OnAction=BEGIN
                                 CLEAR(MoveNegSalesLines);
                                 MoveNegSalesLines.SetSalesHeader(Rec);
                                 MoveNegSalesLines.RUNMODAL;
                                 MoveNegSalesLines.ShowDocument;
                               END;
                                }
      { 47      ;2   ;ActionGroup;
                      Name=IncomingDocument;
                      CaptionML=[ENU=Incoming Document;
                                 RUS=Входящий документ];
                      ActionContainerType=NewDocumentItems;
                      Image=Documents }
      { 45      ;3   ;Action    ;
                      Name=IncomingDocCard;
                      CaptionML=[ENU=View Incoming Document;
                                 RUS=Просмотр входящего документа];
                      ToolTipML=[ENU=View any incoming document records and file attachments that exist for the entry or document.;
                                 RUS=Просмотр всех входящих записей документов и вложенных файлов, имеющихся для операции или документа.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=HasIncomingDocument;
                      Image=ViewOrder;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IncomingDocument.ShowCardFromEntryNo("Incoming Document Entry No.");
                               END;
                                }
      { 43      ;3   ;Action    ;
                      Name=SelectIncomingDoc;
                      AccessByPermission=TableData 130=R;
                      CaptionML=[ENU=Select Incoming Document;
                                 RUS=Выбрать входящий документ];
                      ToolTipML=[ENU=Select an incoming document record and file attachment that you want to link to the entry or document.;
                                 RUS=Выбор входящей записи документа и вложенного файла, которые нужно связать с операцией или документом.];
                      ApplicationArea=#Basic,#Suite;
                      Image=SelectLineToApply;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 VALIDATE("Incoming Document Entry No.",IncomingDocument.SelectIncomingDocument("Incoming Document Entry No.",RECORDID));
                               END;
                                }
      { 41      ;3   ;Action    ;
                      Name=IncomingDocAttachFile;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create Incoming Document from File;
                                 RUS=Создать входящий документ из файла];
                      ToolTipML=[ENU=Create an incoming document record by selecting a file to attach, and then link the incoming document record to the entry or document.;
                                 RUS=Создание входящей записи документа путем выбора файла вложения и связывание входящей записи документа с операцией или документом.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=NOT HasIncomingDocument;
                      Image=Attach;
                      OnAction=VAR
                                 IncomingDocumentAttachment@1000 : Record 133;
                               BEGIN
                                 IncomingDocumentAttachment.NewAttachmentFromSalesDocument(Rec);
                               END;
                                }
      { 37      ;3   ;Action    ;
                      Name=RemoveIncomingDoc;
                      CaptionML=[ENU=Remove Incoming Document;
                                 RUS=Удалить входящий документ];
                      ToolTipML=[ENU=Remove incoming document records and file attachments.;
                                 RUS=Удаление записей входящих документов и вложенных файлов.];
                      ApplicationArea=#Basic,#Suite;
                      Enabled=HasIncomingDocument;
                      Image=RemoveLine;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IF IncomingDocument.GET("Incoming Document Entry No.") THEN
                                   IncomingDocument.RemoveLinkToRelatedRecord;
                                 "Incoming Document Entry No." := 0;
                                 MODIFY(TRUE);
                               END;
                                }
      { 9       ;1   ;ActionGroup;
                      CaptionML=[ENU=Request Approval;
                                 RUS=Утверждение запросов];
                      Image=Approval }
      { 139     ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=[ENU=Send A&pproval Request;
                                 RUS=Отправить &запрос на утверждение];
                      ToolTipML=[ENU=Send an approval request.;
                                 RUS=Отправка запроса на утверждение.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=NOT OpenApprovalEntriesExist;
                      Image=SendApprovalRequest;
                      PromotedCategory=Category9;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.CheckSalesApprovalPossible(Rec) THEN
                                   ApprovalsMgmt.OnSendSalesDocForApproval(Rec);
                               END;
                                }
      { 140     ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=[ENU=Cancel Approval Re&quest;
                                 RUS=Отменить запрос на &утверждение];
                      ToolTipML=[ENU=Cancel the approval request.;
                                 RUS=Отмена запроса на утверждение.];
                      ApplicationArea=#Suite;
                      Promoted=Yes;
                      Enabled=CanCancelApprovalForRecord;
                      Image=CancelApprovalRequest;
                      PromotedCategory=Category9;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.OnCancelSalesApprovalRequest(Rec);
                               END;
                                }
      { 59      ;1   ;ActionGroup;
                      CaptionML=[ENU=P&osting;
                                 RUS=У&чет];
                      Image=Post }
      { 61      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      CaptionML=[ENU=P&ost;
                                 RUS=У&чет];
                      ToolTipML=[ENU=Finalize the document or journal by posting the amounts and quantities to the related accounts in your company books.;
                                 RUS=Завершение подготовки документа или журнала путем учета сумм и количеств на соответствующих счетах в книгах организации.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 Post(CODEUNIT::"Sales-Post (Yes/No)");
                               END;
                                }
      { 71      ;2   ;Action    ;
                      Name=TestReport;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Test Report;
                                 RUS=Тестовый отчет];
                      ToolTipML=[ENU=View a test report so that you can find and correct any errors before you perform the actual posting of the journal or document.;
                                 RUS=Просмотр тестового отчета, чтобы можно было найти и исправить все ошибки перед учетом журнала или документа.];
                      Promoted=Yes;
                      Image=TestReport;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 ReportPrint.PrintSalesHeader(Rec);
                               END;
                                }
      { 62      ;2   ;Action    ;
                      Name=PostAndPrint;
                      ShortCutKey=Shift+F9;
                      CaptionML=[ENU=Post and &Print;
                                 RUS=Учет и &печать];
                      ToolTipML=[ENU=Finalize and prepare to print the document. The report request window for the document opens so you can specify which information to include on the print-out.;
                                 RUS=Завершение подготовки документа и его подготовка к печати. Открывается окно запроса отчета для документа, чтобы вы могли указать, какая информация должна выводиться на печать.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=NOT OfficeMgtHideAction;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Category6;
                      OnAction=BEGIN
                                 CheckSalesCheckAllLinesHaveQuantityAssigned;
                                 Post(CODEUNIT::"Sales-Post + Print");
                               END;
                                }
      { 17      ;2   ;Action    ;
                      Name=PostAndEmail;
                      CaptionML=[ENU=Post and Email;
                                 RUS=Учесть и отправить по эл. почте];
                      ToolTipML=[ENU=Finalize and prepare to email the document according to the customer's sending profile.;
                                 RUS=Завершение подготовки документа и его подготовка к отправке по электронной почте в соответствии с профилем отправки клиента.];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Visible=NOT OfficeMgtHideAction;
                      PromotedIsBig=Yes;
                      Image=PostMail;
                      PromotedCategory=Category6;
                      OnAction=VAR
                                 SalesPostPrint@1000 : Codeunit 82;
                               BEGIN
                                 CheckSalesCheckAllLinesHaveQuantityAssigned;
                                 SalesPostPrint.PostAndEmail(Rec);
                               END;
                                }
      { 63      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Post &Batch;
                                 RUS=П&акетный учет];
                      ToolTipML=[ENU=Post several sales credit memos at once.;
                                 RUS=Учет нескольких кредит-нот продажи одновременно.];
                      ApplicationArea=#Basic,#Suite;
                      Image=PostBatch;
                      OnAction=BEGIN
                                 CheckSalesCheckAllLinesHaveQuantityAssigned;
                                 REPORT.RUNMODAL(REPORT::"Batch Post Sales Credit Memos",TRUE,TRUE,Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 3       ;2   ;Action    ;
                      CaptionML=[ENU=Remove From Job Queue;
                                 RUS=Удалить из очереди на работу];
                      ToolTipML=[ENU=Remove the scheduled processing of this record from the job queue.;
                                 RUS=Удаление запланированной обработки этой записи из очереди работ.];
                      ApplicationArea=#All;
                      Visible=JobQueueVisible;
                      Image=RemoveLine;
                      OnAction=BEGIN
                                 CancelBackgroundPosting;
                               END;
                                }
      { 35      ;2   ;Action    ;
                      CaptionML=[ENU=Preview Posting;
                                 RUS=Предварительный просмотр учета];
                      ToolTipML=[ENU=Review the different types of entries that will be created when you post the document or journal.;
                                 RUS=Просмотр различных типов операций, которые будут созданы в результате учета документа или журнала.];
                      ApplicationArea=#Basic,#Suite;
                      Image=ViewPostedOrder;
                      OnAction=BEGIN
                                 ShowPreview;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           RUS=Общее] }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the sales document. The field can be filled automatically or manually and can be set up to be invisible.;
                           RUS=Определяет номер документа продажи. Поле можно заполнить вручную или автоматически, а также сделать невидимым.];
                ApplicationArea=#All;
                SourceExpr="No.";
                Importance=Additional;
                Visible=DocNoVisible;
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Customer;
                           RUS=Клиент];
                ToolTipML=[ENU=Specifies the name of the customer who will receive the products and be billed by default.;
                           RUS=Определяет имя клиента, который получит продукты и которому по умолчанию будет выставлен счет.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Customer Name";
                Importance=Promoted;
                OnValidate=BEGIN
                             IF "No." = '' THEN
                               InitRecord;

                             IF GETFILTER("Sell-to Customer No.") = xRec."Sell-to Customer No." THEN
                               IF "Sell-to Customer No." <> xRec."Sell-to Customer No." THEN
                                 SETRANGE("Sell-to Customer No.");

                             SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);

                             CurrPage.UPDATE;
                           END;

                ShowMandatory=TRUE }

    { 79  ;2   ;Group     ;
                CaptionML=[ENU=Sell-to;
                           RUS=Клиент];
                GroupType=Group }

    { 65  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           RUS=Адрес];
                ToolTipML=[ENU=Specifies the address where the customer is located.;
                           RUS=Определяет адрес, по которому расположен клиент.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Address";
                Importance=Additional }

    { 67  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           RUS=Адрес 2];
                ToolTipML=[ENU=Specifies additional address information.;
                           RUS=Определяет дополнительные сведения адреса.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Address 2";
                Importance=Additional }

    { 70  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           RUS=Индекс];
                ToolTipML=[ENU=Specifies the postal code.;
                           RUS=Определяет почтовый индекс.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Post Code";
                Importance=Additional }

    { 69  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           RUS=Город];
                ToolTipML=[ENU=Specifies the city where the customer is located.;
                           RUS=Определяет город, где расположен клиент.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to City";
                Importance=Additional }

    { 57  ;3   ;Field     ;
                CaptionML=[ENU=Contact No.;
                           RUS=Код контакта];
                ToolTipML=[ENU=Specifies the number of the contact that the sales document will be sent to.;
                           RUS=Определяет номер контакта, которому будет отправлен документ продажи.];
                SourceExpr="Sell-to Contact No.";
                Importance=Additional;
                OnValidate=BEGIN
                             IF GETFILTER("Sell-to Contact No.") = xRec."Sell-to Contact No." THEN
                               IF "Sell-to Contact No." <> xRec."Sell-to Contact No." THEN
                                 SETRANGE("Sell-to Contact No.");
                           END;
                            }

    { 8   ;2   ;Field     ;
                CaptionML=[ENU=Contact;
                           RUS=Контакт];
                ToolTipML=[ENU=Specifies the name of the person to contact at the customer.;
                           RUS=Определяет имя контактного лица у клиента.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Sell-to Contact" }

    { 1210014;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Description" }

    { 21  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the customer's reference. The contents will be printed on sales documents.;
                           RUS=Определяет ссылку на клиента. Содержимое будет распечатываться на документах продажи.];
                SourceExpr="Your Reference";
                Importance=Additional }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the posting of the sales document will be recorded.;
                           RUS=Определяет дату регистрации учета документа продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Date";
                Importance=Promoted }

    { 39  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date on which you created the sales document.;
                           RUS=Определяет дату создания этого документа продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Document Date";
                Importance=Additional }

    { 133 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies when the sales invoice must be paid.;
                           RUS=Определяет срок оплаты счета продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Due Date";
                Importance=Promoted }

    { 11  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the incoming document that this sales document is created for.;
                           RUS=Определяет номер входящего документа, для которого создается этот документ продажи.];
                SourceExpr="Incoming Document Entry No.";
                Importance=Additional;
                Visible=FALSE }

    { 54  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number that the customer uses in their own system to refer to this sales document.;
                           RUS=Определяет номер, по которому клиент ссылается на этот документ продажи в собственной системе.];
                SourceExpr="External Document No.";
                Importance=Additional;
                ShowMandatory=ExternalDocNoMandatory }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the name of the salesperson who is assigned to the customer.;
                           RUS=Определяет имя менеджера по продажам, назначенного клиенту.];
                ApplicationArea=#Suite;
                SourceExpr="Salesperson Code";
                Importance=Additional;
                OnValidate=BEGIN
                             SalespersonCodeOnAfterValidate;
                           END;
                            }

    { 104 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the campaign number the document is linked to.;
                           RUS=Определяет номер кампании, с которой связан документ.];
                SourceExpr="Campaign No.";
                Importance=Additional }

    { 107 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the responsibility center that is associated with the user, company, or vendor.;
                           RUS=Определяет код центра ответственности, который связан с пользователем, компанией или поставщиком.];
                SourceExpr="Responsibility Center";
                Importance=Additional }

    { 119 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of the user who is responsible for the document.;
                           RUS=Определяет код пользователя, который отвечает за документ.];
                SourceExpr="Assigned User ID";
                Importance=Additional }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the status of a job queue entry or task that handles the posting of sales orders.;
                           RUS=Определяет статус операции очереди работ или задачи, которая выполняет учет заказов на продажу.];
                SourceExpr="Job Queue Status";
                Importance=Additional }

    { 110 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the document is open, waiting to be approved, has been invoiced for prepayment, or has been released to the next stage of processing.;
                           RUS=Определяет состояние документа: открытый, ожидающий утверждения, с выставленным счетом на предоплату или выпущенный на следующий этап обработки.];
                SourceExpr=Status;
                Importance=Promoted }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of the posted document that this document or journal line will be applied to when you post, for example to register payment.;
                           RUS=Определяет тип учтенного документа, к которому будет применен этот документ или строка журнала, например при учете с целью регистрации оплаты.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to Doc. Type";
                Importance=Additional }

    { 16  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the posted document that this document or journal line will be applied to when you post, for example to register payment.;
                           RUS=Определяет номер учтенного документа, к которому будет применен этот документ или строка журнала, например при учете с целью регистрации оплаты.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to Doc. No.";
                Importance=Additional }

    { 94  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of entries that will be applied to when you choose the Apply Entries action.;
                           RUS=Определяет код операций, которые будут применены при выборе команды "Применить операции".];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Applies-to ID";
                Importance=Additional }

    { 1905569601;1;Group  ;
                CaptionML=[ENU=VAT;
                           RUS=НДС] }

    { 1210008;2;Field     ;
                ToolTipML=[ENU=Specifies if the sales header is included in the purchase VAT ledger.;
                           RUS=Определяет, включается ли заголовок продажи в книгу НДС покупки.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Include In Purch. VAT Ledger" }

    { 1210006;2;Field     ;
                ToolTipML=[ENU=Specifies the additional VAT ledger sheet associated with the sales header.;
                           RUS=Определяет дополнительный лист книги НДС, связанный с заголовком продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Additional VAT Ledger Sheet" }

    { 1210003;2;Field     ;
                ToolTipML=[ENU=Specifies the date of the corrected document associated with the sales header.;
                           RUS=Определяет дату скорректированного документа, связанного с заголовком продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Corrected Document Date" }

    { 1210002;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting No." }

    { 1210001;2;Field     ;
                ToolTipML=[ENU=Specifies the VAT entry type for the sales order.;
                           RUS=Определяет тип операции НДС для заказа на продажу.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Entry Type" }

    { 1170000004;2;Field  ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Corrective Document" }

    { 1170000002;2;Field  ;
                ToolTipML=[ENU=Specifies the revision number associated with the sales header.;
                           RUS=Определяет номер редакции, связанный с заголовком продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Corrective Doc. Type" }

    { 1170000003;2;Field  ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Corrected Doc. Type" }

    { 1170000001;2;Field  ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Corrected Doc. No." }

    { 1170000000;2;Field  ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Revision No." }

    { 48  ;1   ;Part      ;
                Name=SalesLines;
                ApplicationArea=#Basic,#Suite;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page96;
                Enabled="Sell-to Customer No." <> '';
                Editable="Sell-to Customer No." <> '';
                UpdatePropagation=Both }

    { 1906801201;1;Group  ;
                CaptionML=[ENU=Credit Memo Details;
                           RUS=Подробные сведения кредит-ноты];
                GroupType=Group }

    { 91  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the currency of amounts on the sales document.;
                           RUS=Определяет валюту для сумм в документе продажи.];
                ApplicationArea=#Suite;
                SourceExpr="Currency Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               IF "Posting Date" <> 0D THEN
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date")
                               ELSE
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 96  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date you expect to ship items on the sales document.;
                           RUS=Определяет дату ожидаемой отгрузки товаров по документу продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Shipment Date";
                Importance=Promoted }

    { 100 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the unit price on the line should be displayed including or excluding VAT.;
                           RUS=Определяет, должна цена за единицу в этой строке отображаться с НДС или без НДС.];
                SourceExpr="Prices Including VAT";
                OnValidate=BEGIN
                             PricesIncludingVATOnAfterValid;
                           END;
                            }

    { 30  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the customer's VAT specification to link transactions made for this customer to.;
                           RUS=Определяет спецификацию НДС клиента для связывания с транзакциями этого клиента.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="VAT Bus. Posting Group";
                OnValidate=VAR
                             TempApplicationAreaSetup@1000 : TEMPORARY Record 9178;
                           BEGIN
                             IF TempApplicationAreaSetup.IsFoundationEnabled THEN
                               SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;
                            }

    { 1210012;2;Field     ;
                ToolTipML=[ENU=Specifies the agreement number associated with the sales header.;
                           RUS=Определяет номер соглашения, связанный с заголовком продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Agreement No." }

    { 1210010;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Correction }

    { 131 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a formula that calculates the payment due date, payment discount date, and payment discount amount on the sales document.;
                           RUS=Определяет формулу, по которой рассчитывается срок оплаты, дата скидки по оплате и сумма скидки по оплате по документу продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Terms Code";
                Importance=Promoted }

    { 142 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how the customer must pay for products on the sales document.;
                           RUS=Определяет, как клиент должен оплатить продукты по документу продажи.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Payment Method Code";
                Importance=Additional }

    { 44  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the type of transaction that the sales document represents, for the purpose of reporting to Intrastat.;
                           RUS=Определяет тип транзакции, представляемой документом продажи, в целях отчетности Интрастат.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Transaction Type" }

    { 74  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the dimension value code associated with the sales header.;
                           RUS=Определяет код значения измерения, связанный с заголовком продажи.];
                SourceExpr="Shortcut Dimension 1 Code";
                OnValidate=BEGIN
                             ShortcutDimension1CodeOnAfterV;
                           END;
                            }

    { 78  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the dimension value code associated with the sales header.;
                           RUS=Определяет код значения измерения, связанный с заголовком продажи.];
                SourceExpr="Shortcut Dimension 2 Code";
                OnValidate=BEGIN
                             ShortcutDimension2CodeOnAfterV;
                           END;
                            }

    { 135 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the payment discount percentage granted if the customer pays on or before the date entered in the Pmt. Discount Date field.;
                           RUS=Определяет процент скидки по оплате, которая предоставляется при условии совершения клиентом оплаты не позже даты, указанной в поле "Дата скидки оплаты".];
                SourceExpr="Payment Discount %" }

    { 137 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the last date the customer can pay the invoice and still receive a payment discount.;
                           RUS=Определяет последнюю дату, когда клиент может оплатить счет и при этом получить скидку по оплате.];
                SourceExpr="Pmt. Discount Date";
                Importance=Additional }

    { 80  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the location from where inventory items to the customer on the sales document are to be shipped by default.;
                           RUS=Указывает расположение, из которого по умолчанию отгружаются складские товары клиенту по документу продажи.];
                SourceExpr="Location Code";
                Importance=Additional }

    { 1101495000;2;Field  ;
                SourceExpr="Customer Posting Group" }

    { 1101495001;2;Field  ;
                SourceExpr="Gen. Bus. Posting Group" }

    { 1905885101;1;Group  ;
                CaptionML=[ENU=Billing;
                           RUS=Выставление счетов];
                GroupType=Group }

    { 77  ;2   ;Group     ;
                CaptionML=[ENU=Bill-to;
                           RUS=Плательщик];
                GroupType=Group }

    { 20  ;3   ;Field     ;
                CaptionML=[ENU=Name;
                           RUS=Название];
                ToolTipML=[ENU=Specifies the customer to whom you will send the sales invoice, when different from the customer that you are selling to.;
                           RUS=Определяет клиента, которому будет отправлен счет продажи, если продажа осуществляется другому клиенту.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Name";
                Importance=Promoted;
                OnValidate=BEGIN
                             IF GETFILTER("Bill-to Customer No.") = xRec."Bill-to Customer No." THEN
                               IF "Bill-to Customer No." <> xRec."Bill-to Customer No." THEN
                                 SETRANGE("Bill-to Customer No.");

                             SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);

                             CurrPage.UPDATE;
                           END;
                            }

    { 22  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           RUS=Адрес];
                ToolTipML=[ENU=Specifies the address of the customer that you will send the invoice to.;
                           RUS=Определяет адрес клиента, которому будет отправлен счет.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Address";
                Importance=Additional }

    { 24  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           RUS=Адрес 2];
                ToolTipML=[ENU=Specifies additional address information.;
                           RUS=Определяет дополнительные сведения адреса.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Address 2";
                Importance=Additional }

    { 75  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           RUS=Индекс];
                ToolTipML=[ENU=Specifies the postal code.;
                           RUS=Определяет почтовый индекс.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Post Code";
                Importance=Additional }

    { 26  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           RUS=Город];
                ToolTipML=[ENU=Specifies the city you will send the invoice to.;
                           RUS=Определяет город, в который будет отправлен счет.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to City";
                Importance=Additional }

    { 124 ;3   ;Field     ;
                CaptionML=[ENU=Contact No;
                           RUS=Код контакта];
                ToolTipML=[ENU=Specifies the number of the contact the invoice will be sent to.;
                           RUS=Определяет номер контакта, которому будет отправлен счет.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Contact No.";
                Importance=Additional }

    { 28  ;3   ;Field     ;
                CaptionML=[ENU=Contact;
                           RUS=Контакт];
                ToolTipML=[ENU=Specifies the name of the person you should contact at the customer who you are sending the invoice to.;
                           RUS=Определяет имя контактного лица у клиента, которому направляется счет.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bill-to Contact" }

    { 1907468901;1;Group  ;
                CaptionML=[ENU=Foreign Trade;
                           RUS=Внешняя торговля] }

    { 42  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies whether the sales document is part of a three-party trade.;
                           RUS=Определяет, является ли документ продажи частью трехсторонней торговой сделки.];
                SourceExpr="EU 3-Party Trade" }

    { 89  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a code for the sales document's transaction specification, for the purpose of reporting to INTRASTAT.;
                           RUS=Определяет код спецификации транзакции документа продажи в целях отчетности Интрастат.];
                SourceExpr="Transaction Specification" }

    { 46  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the transport method, for the purpose of reporting to INTRASTAT.;
                           RUS=Определяет метод перевозки в целях отчетности Интрастат.];
                SourceExpr="Transport Method" }

    { 85  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the point of exit through which you ship the items out of your country/region, for reporting to Intrastat.;
                           RUS=Определяет точку выхода, через которую производится отгрузка товаров за пределы страны или региона, в целях отчетности Интрастат.];
                SourceExpr="Exit Point" }

    { 87  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the area of the customer's address, for the purpose of reporting to INTRASTAT.;
                           RUS=Определяет регион для адреса клиента в целях отчетности Интрастат.];
                SourceExpr=Area }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 19  ;1   ;Part      ;
                ApplicationArea=#All;
                SubPageLink=Table ID=CONST(36),
                            Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.);
                PagePartID=Page9103;
                Visible=OpenApprovalEntriesExistForCurrUser;
                PartType=Page }

    { 1903720907;1;Part   ;
                SubPageLink=No.=FIELD(Sell-to Customer No.);
                PagePartID=Page9080;
                Visible=FALSE;
                PartType=Page }

    { 1907234507;1;Part   ;
                SubPageLink=No.=FIELD(Sell-to Customer No.);
                PagePartID=Page9081;
                Visible=FALSE;
                PartType=Page }

    { 1902018507;1;Part   ;
                SubPageLink=No.=FIELD(Bill-to Customer No.);
                PagePartID=Page9082;
                PartType=Page }

    { 1900316107;1;Part   ;
                SubPageLink=No.=FIELD(Sell-to Customer No.);
                PagePartID=Page9084;
                PartType=Page }

    { 1906127307;1;Part   ;
                SubPageLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(Document No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page9087;
                ProviderID=48;
                Visible=FALSE;
                PartType=Page }

    { 1906354007;1;Part   ;
                Name=ApprovalFactBox;
                PagePartID=Page9092;
                Visible=FALSE;
                PartType=Page }

    { 33  ;1   ;Part      ;
                Name=IncomingDocAttachFactBox;
                PagePartID=Page193;
                Visible=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1907012907;1;Part   ;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page9108;
                ProviderID=48;
                Visible=FALSE;
                PartType=Page }

    { 50  ;1   ;Part      ;
                Name=WorkflowStatus;
                ApplicationArea=#All;
                PagePartID=Page1528;
                Visible=ShowWorkflowStatus;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      CopySalesDoc@1003 : Report 292;
      MoveNegSalesLines@1008 : Report 6699;
      ReportPrint@1004 : Codeunit 228;
      UserMgt@1005 : Codeunit 5700;
      SalesCalcDiscByType@1006 : Codeunit 56;
      LinesInstructionMgt@1017 : Codeunit 1320;
      ChangeExchangeRate@1002 : Page 511;
      JobQueueVisible@1000 : Boolean INDATASET;
      DocPrint@1470000 : Codeunit 229;
      HasIncomingDocument@1012 : Boolean;
      DocNoVisible@1001 : Boolean;
      ExternalDocNoMandatory@1007 : Boolean;
      OpenApprovalEntriesExistForCurrUser@1016 : Boolean;
      OpenApprovalEntriesExist@1015 : Boolean;
      ShowWorkflowStatus@1009 : Boolean;
      OpenPostedSalesCrMemoQst@1018 : TextConst 'ENU=The credit memo has been posted and archived.\\Do you want to open the posted credit memo from the Posted Sales Credit Memos window?;RUS=Кредит-нота учтена и помещена в архив.\\Открыть учтенную кредит-ноту из окна учтенных кредит-нот продажи?';
      OfficeMgtHideAction@1210000 : Boolean;
      CanCancelApprovalForRecord@1010 : Boolean;
      DocumentIsPosted@1011 : Boolean;
      CustomerSelected@1013 : Boolean;

    LOCAL PROCEDURE Post@4(PostingCodeunitID@1000 : Integer);
    VAR
      SalesHeader@1003 : Record 36;
      SalesCrMemoHeader@1004 : Record 114;
      OfficeMgt@1005 : Codeunit 1630;
      InstructionMgt@1006 : Codeunit 1330;
      PreAssignedNo@1001 : Code[20];
    BEGIN
      CheckSalesCheckAllLinesHaveQuantityAssigned;
      PreAssignedNo := "No.";

      SendToPosting(PostingCodeunitID);
      DocumentIsPosted := NOT SalesHeader.GET("Document Type","No.");

      IF "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting" THEN
        CurrPage.CLOSE;
      CurrPage.UPDATE(FALSE);

      IF PostingCodeunitID <> CODEUNIT::"Sales-Post (Yes/No)" THEN
        EXIT;

      IF OfficeMgt.IsAvailable THEN BEGIN
        SalesCrMemoHeader.SETRANGE("Pre-Assigned No.",PreAssignedNo);
        IF SalesCrMemoHeader.FINDFIRST THEN
          PAGE.RUN(PAGE::"Posted Sales Credit Memo",SalesCrMemoHeader);
      END ELSE
        IF InstructionMgt.IsEnabled(InstructionMgt.ShowPostedConfirmationMessageCode) THEN
          ShowPostedConfirmationMessage(PreAssignedNo);
    END;

    LOCAL PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CurrPage.SalesLines.PAGE.ApproveCalcInvDisc;
    END;

    LOCAL PROCEDURE SalespersonCodeOnAfterValidate@19011896();
    BEGIN
      CurrPage.SalesLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE ShortcutDimension1CodeOnAfterV@19029405();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShortcutDimension2CodeOnAfterV@19008725();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PricesIncludingVATOnAfterValid@19009096();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SetDocNoVisible@2();
    VAR
      DocumentNoVisibility@1000 : Codeunit 1400;
      DocType@1003 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Reminder,FinChMemo';
    BEGIN
      DocNoVisible := DocumentNoVisibility.SalesDocumentNoIsVisible(DocType::"Credit Memo","No.");
    END;

    LOCAL PROCEDURE SetExtDocNoMandatoryCondition@3();
    VAR
      SalesReceivablesSetup@1000 : Record 311;
    BEGIN
      SalesReceivablesSetup.GET;
      ExternalDocNoMandatory := SalesReceivablesSetup."Ext. Doc. No. Mandatory"
    END;

    PROCEDURE ShowPreview@5();
    VAR
      SalesPostYesNo@1000 : Codeunit 81;
    BEGIN
      SalesPostYesNo.Preview(Rec);
    END;

    LOCAL PROCEDURE SetControlAppearance@8();
    VAR
      ApprovalsMgmt@1002 : Codeunit 1535;
    BEGIN
      JobQueueVisible := "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting";
      HasIncomingDocument := "Incoming Document Entry No." <> 0;
      SetExtDocNoMandatoryCondition;

      OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
      CanCancelApprovalForRecord := ApprovalsMgmt.CanCancelApprovalForRecord(RECORDID);
      CustomerSelected := "Sell-to Customer No." <> '';
    END;

    LOCAL PROCEDURE CheckSalesCheckAllLinesHaveQuantityAssigned@6();
    VAR
      ApplicationAreaSetup@1000 : Record 9178;
    BEGIN
      IF ApplicationAreaSetup.IsFoundationEnabled THEN
        LinesInstructionMgt.SalesCheckAllLinesHaveQuantityAssigned(Rec);
    END;

    LOCAL PROCEDURE ShowPostedConfirmationMessage@7(PreAssignedNo@1001 : Code[20]);
    VAR
      SalesCrMemoHeader@1000 : Record 114;
      InstructionMgt@1002 : Codeunit 1330;
    BEGIN
      SalesCrMemoHeader.SETRANGE("Pre-Assigned No.",PreAssignedNo);
      IF SalesCrMemoHeader.FINDFIRST THEN
        IF InstructionMgt.ShowConfirm(OpenPostedSalesCrMemoQst,InstructionMgt.ShowPostedConfirmationMessageCode) THEN
          PAGE.RUN(PAGE::"Posted Sales Credit Memo",SalesCrMemoHeader);
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeStatisticsAction@9(VAR SalesHeader@1000 : Record 36;VAR Handled@1001 : Boolean);
    BEGIN
    END;

    BEGIN
    {
      NC TR266 EB выведены поля "Customer Posting Group", "Gen. Bus. Posting Group"
      NC TR272 DP Предпросмотр учета
      -----
      NC NOS-26 ENK
    }
    END.
  }
}

