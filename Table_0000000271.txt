OBJECT Table 271 Bank Account Ledger Entry
{
  OBJECT-PROPERTIES
  {
    Date=09.06.17;
    Time=14:48:22;
    Modified=Yes;
    Version List=NAVW110.00,NAVRU10.00,NOS-26;
  }
  PROPERTIES
  {
    OnDelete=VAR
               CheckLE@1101495000 : Record 272;
             BEGIN
               //NC NOS-26 > ENK
               {
               //NC OAM23 > DP
               LEDim.RESET;
               LEDim.SETRANGE("Table ID",271);
               LEDim.SETRANGE("Entry No.", "Entry No.");
               LEDim.DELETEALL;
               }
               //NC NOS-26 > ENK
               CheckLE.RESET;
               CheckLE.SETRANGE("Bank Account No.","Bank Account No.");
               CheckLE.SETRANGE("Bank Account Ledger Entry No.", "Entry No.");
               CheckLE.DELETEALL;
               //NC OAM23 < DP
             END;

    CaptionML=[ENU=Bank Account Ledger Entry;
               RUS=Книга банковских операций];
    LookupPageID=Page372;
    DrillDownPageID=Page372;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              RUS=Номер операции] }
    { 3   ;   ;Bank Account No.    ;Code20        ;TableRelation="Bank Account";
                                                   CaptionML=[ENU=Bank Account No.;
                                                              RUS=Код банк. счета] }
    { 4   ;   ;Posting Date        ;Date          ;CaptionML=[ENU=Posting Date;
                                                              RUS=Дата учета] }
    { 5   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              RUS=Тип документа];
                                                   OptionCaptionML=[ENU=" ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund";
                                                                    RUS=" ,Платеж,Счет,Кредит-нота,Процент-нота,Напоминание,Возмещение"];
                                                   OptionString=[ ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund] }
    { 6   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              RUS=Номер документа] }
    { 7   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 11  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              RUS=Код валюты] }
    { 13  ;   ;Amount              ;Decimal       ;CaptionML=[ENU=Amount;
                                                              RUS=Сумма];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 14  ;   ;Remaining Amount    ;Decimal       ;CaptionML=[ENU=Remaining Amount;
                                                              RUS=Сумма остатка];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 17  ;   ;Amount (LCY)        ;Decimal       ;CaptionML=[ENU=Amount (LCY);
                                                              RUS=Сумма (руб.)];
                                                   Description=NOS-26;
                                                   AutoFormatType=1;
                                                   CaptionClass=['1,11,1,271,17' ] }
    { 22  ;   ;Bank Acc. Posting Group;Code10     ;TableRelation="Bank Account Posting Group";
                                                   CaptionML=[ENU=Bank Acc. Posting Group;
                                                              RUS=Банк. счет - учетная группа] }
    { 23  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              RUS=Код глобального измерения 1];
                                                   CaptionClass='1,1,1' }
    { 24  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              RUS=Код глобального измерения 2];
                                                   CaptionClass='1,1,2' }
    { 25  ;   ;Our Contact Code    ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=[ENU=Our Contact Code;
                                                              RUS=Код нашего контакта] }
    { 27  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              RUS=Код пользователя] }
    { 28  ;   ;Source Code         ;Code10        ;TableRelation="Source Code";
                                                   CaptionML=[ENU=Source Code;
                                                              RUS=Код источника] }
    { 36  ;   ;Open                ;Boolean       ;CaptionML=[ENU=Open;
                                                              RUS=Открыто] }
    { 43  ;   ;Positive            ;Boolean       ;CaptionML=[ENU=Positive;
                                                              RUS=Положит.] }
    { 44  ;   ;Closed by Entry No. ;Integer       ;TableRelation="Bank Account Ledger Entry";
                                                   CaptionML=[ENU=Closed by Entry No.;
                                                              RUS=Номер закрывающей операции] }
    { 45  ;   ;Closed at Date      ;Date          ;CaptionML=[ENU=Closed at Date;
                                                              RUS=Закрыто на дату] }
    { 49  ;   ;Journal Batch Name  ;Code10        ;CaptionML=[ENU=Journal Batch Name;
                                                              RUS=Код раздела журнала] }
    { 50  ;   ;Reason Code         ;Code10        ;TableRelation="Reason Code";
                                                   CaptionML=[ENU=Reason Code;
                                                              RUS=Код причины] }
    { 51  ;   ;Bal. Account Type   ;Option        ;CaptionML=[ENU=Bal. Account Type;
                                                              RUS=Тип баланс. счета];
                                                   OptionCaptionML=[ENU=G/L Account,Customer,Vendor,Bank Account,Fixed Asset;
                                                                    RUS=Счет ГК,Клиент,Поставщик,Банк. счет,ОС];
                                                   OptionString=G/L Account,Customer,Vendor,Bank Account,Fixed Asset }
    { 52  ;   ;Bal. Account No.    ;Code20        ;TableRelation=IF (Bal. Account Type=CONST(G/L Account)) "G/L Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Customer)) Customer
                                                                 ELSE IF (Bal. Account Type=CONST(Vendor)) Vendor
                                                                 ELSE IF (Bal. Account Type=CONST(Bank Account)) "Bank Account"
                                                                 ELSE IF (Bal. Account Type=CONST(Fixed Asset)) "Fixed Asset";
                                                   CaptionML=[ENU=Bal. Account No.;
                                                              RUS=Номер баланс. счета] }
    { 53  ;   ;Transaction No.     ;Integer       ;CaptionML=[ENU=Transaction No.;
                                                              RUS=Номер транзакции] }
    { 55  ;   ;Statement Status    ;Option        ;CaptionML=[ENU=Statement Status;
                                                              RUS=Статус выписки];
                                                   OptionCaptionML=[ENU=Open,Bank Acc. Entry Applied,Check Entry Applied,Closed;
                                                                    RUS=Открыта,Операция банк. счета применена,Операция платежа применена,Закрыта];
                                                   OptionString=Open,Bank Acc. Entry Applied,Check Entry Applied,Closed }
    { 56  ;   ;Statement No.       ;Code20        ;TableRelation="Bank Acc. Reconciliation Line"."Statement No." WHERE (Bank Account No.=FIELD(Bank Account No.));
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Statement No.;
                                                              RUS=Номер выписки] }
    { 57  ;   ;Statement Line No.  ;Integer       ;TableRelation="Bank Acc. Reconciliation Line"."Statement Line No." WHERE (Bank Account No.=FIELD(Bank Account No.),
                                                                                                                             Statement No.=FIELD(Statement No.));
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Statement Line No.;
                                                              RUS=Номер строки выписки] }
    { 58  ;   ;Debit Amount        ;Decimal       ;CaptionML=[ENU=Debit Amount;
                                                              RUS=Сумма по дебету];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 59  ;   ;Credit Amount       ;Decimal       ;CaptionML=[ENU=Credit Amount;
                                                              RUS=Сумма по кредиту];
                                                   BlankZero=Yes;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 60  ;   ;Debit Amount (LCY)  ;Decimal       ;CaptionML=[ENU=Debit Amount (LCY);
                                                              RUS=Сумма по дебету (руб.)];
                                                   BlankZero=Yes;
                                                   Description=NOS-26;
                                                   AutoFormatType=1;
                                                   CaptionClass=['1,11,1,271,60' ] }
    { 61  ;   ;Credit Amount (LCY) ;Decimal       ;CaptionML=[ENU=Credit Amount (LCY);
                                                              RUS=Сумма по кредиту (руб.)];
                                                   BlankZero=Yes;
                                                   Description=NOS-26;
                                                   AutoFormatType=1;
                                                   CaptionClass=['1,11,1,271,61' ] }
    { 62  ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              RUS=Дата документа];
                                                   ClosingDates=Yes }
    { 63  ;   ;External Document No.;Code35       ;CaptionML=[ENU=External Document No.;
                                                              RUS=Номер внешнего документа] }
    { 64  ;   ;Reversed            ;Boolean       ;CaptionML=[ENU=Reversed;
                                                              RUS=Сторнировано] }
    { 65  ;   ;Reversed by Entry No.;Integer      ;TableRelation="Bank Account Ledger Entry";
                                                   CaptionML=[ENU=Reversed by Entry No.;
                                                              RUS=Номер сторнирующей операции];
                                                   BlankZero=Yes }
    { 66  ;   ;Reversed Entry No.  ;Integer       ;TableRelation="Bank Account Ledger Entry";
                                                   CaptionML=[ENU=Reversed Entry No.;
                                                              RUS=Номер сторнированной операции];
                                                   BlankZero=Yes }
    { 70  ;   ;Check Ledger Entries;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Check Ledger Entry" WHERE (Bank Account Ledger Entry No.=FIELD(Entry No.)));
                                                   CaptionML=[ENU=Check Ledger Entries;
                                                              RUS=Книга платежных документов] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDimensions;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              RUS=Код набора измерений];
                                                   Editable=No }
    { 12400;  ;Company Name        ;Text100       ;CaptionML=[ENU=Company Name;
                                                              RUS=Название организации] }
    { 12490;  ;Agreement No.       ;Code20        ;TableRelation=IF (Bal. Account Type=CONST(Customer)) "Customer Agreement".No. WHERE (Customer No.=FIELD(Bal. Account No.))
                                                                 ELSE IF (Bal. Account Type=CONST(Vendor)) "Vendor Agreement" WHERE (Vendor No.=FIELD(Bal. Account No.));
                                                   CaptionML=[ENU=Agreement No.;
                                                              RUS=Номер договора] }
    { 50000;  ;External System ID  ;Code2         ;TableRelation="External System";
                                                   CaptionML=[ENU=External System ID;
                                                              RUS=Внешняя Система ID];
                                                   Description=NC MTD02 AIG }
    { 50010;  ;Payment Assignment  ;Text80        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Check Ledger Entry"."Payment Purpose" WHERE (Bank Account Ledger Entry No.=FIELD(Entry No.)));
                                                   OnValidate=BEGIN
                                                                // NC SPA #TODO# -- рассчет проводился по полю Text 1 . Сейчас такого поля  нет. Устанвоил поле с тем же ID 12402
                                                              END;

                                                   CaptionML=[ENU=Payment Assignment;
                                                              RUS=Назначение платежа];
                                                   Description=NC NCS-1209.2 DP }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
    {    ;Bank Account No.,Posting Date           ;SumIndexFields=Amount,Amount (LCY),Debit Amount,Credit Amount,Debit Amount (LCY),Credit Amount (LCY) }
    {    ;Bank Account No.,Open                    }
    {    ;Document Type,Bank Account No.,Posting Date;
                                                   SumIndexFields=Amount;
                                                   MaintainSQLIndex=No }
    {    ;Document No.,Posting Date                }
    {    ;Transaction No.                          }
    { No ;Bank Account No.,Global Dimension 1 Code,Global Dimension 2 Code,Posting Date;
                                                   SumIndexFields=Amount,Amount (LCY),Debit Amount,Credit Amount,Debit Amount (LCY),Credit Amount (LCY) }
    {    ;Posting Date,Positive                    }
    {    ;Currency Code                            }
    {    ;Bank Account No.,Bank Acc. Posting Group,Posting Date;
                                                   SumIndexFields=Amount,Amount (LCY),Debit Amount,Credit Amount,Debit Amount (LCY),Credit Amount (LCY) }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Entry No.,Description,Bank Account No.,Posting Date,Document Type,Document No. }
  }
  CODE
  {
    VAR
      DimMgt@1000 : Codeunit 408;

    PROCEDURE ShowDimensions@1();
    BEGIN
      DimMgt.ShowDimensionSet("Dimension Set ID",STRSUBSTNO('%1 %2',TABLECAPTION,"Entry No."));
    END;

    PROCEDURE CopyFromGenJnlLine@3(GenJnlLine@1000 : Record 81);
    BEGIN
      "Bank Account No." := GenJnlLine."Account No.";
      "Posting Date" := GenJnlLine."Posting Date";
      "Document Date" := GenJnlLine."Document Date";
      "Document Type" := GenJnlLine."Document Type";
      "Document No." := GenJnlLine."Document No.";
      "External Document No." := GenJnlLine."External Document No.";
      Description := GenJnlLine.Description;
      "Global Dimension 1 Code" := GenJnlLine."Shortcut Dimension 1 Code";
      "Global Dimension 2 Code" := GenJnlLine."Shortcut Dimension 2 Code";
      "Dimension Set ID" := GenJnlLine."Dimension Set ID";
      "Our Contact Code" := GenJnlLine."Salespers./Purch. Code";
      "Source Code" := GenJnlLine."Source Code";
      "Journal Batch Name" := GenJnlLine."Journal Batch Name";
      "Reason Code" := GenJnlLine."Reason Code";
      "Currency Code" := GenJnlLine."Currency Code";
      "User ID" := USERID;
      "Bal. Account Type" := GenJnlLine."Bal. Account Type";
      "Bal. Account No." := GenJnlLine."Bal. Account No.";
    END;

    PROCEDURE UpdateDebitCredit@2(Correction@1000 : Boolean);
    BEGIN
      IF (Amount > 0) AND (NOT Correction) OR
         (Amount < 0) AND Correction
      THEN BEGIN
        "Debit Amount" := Amount;
        "Credit Amount" := 0;
        "Debit Amount (LCY)" := "Amount (LCY)";
        "Credit Amount (LCY)" := 0;
      END ELSE BEGIN
        "Debit Amount" := 0;
        "Credit Amount" := -Amount;
        "Debit Amount (LCY)" := 0;
        "Credit Amount (LCY)" := -"Amount (LCY)";
      END;
    END;

    PROCEDURE IsApplied@4() IsApplied : Boolean;
    VAR
      CheckLedgerEntry@1000 : Record 272;
    BEGIN
      CheckLedgerEntry.SETRANGE("Bank Account No.","Bank Account No.");
      CheckLedgerEntry.SETRANGE("Bank Account Ledger Entry No.","Entry No.");
      CheckLedgerEntry.SETRANGE(Open,TRUE);
      CheckLedgerEntry.SETRANGE("Statement Status",CheckLedgerEntry."Statement Status"::"Check Entry Applied");
      CheckLedgerEntry.SETFILTER("Statement No.",'<>%1','');
      CheckLedgerEntry.SETFILTER("Statement Line No.",'<>%1',0);
      IsApplied := NOT CheckLedgerEntry.ISEMPTY;

      IsApplied := IsApplied OR
        (("Statement Status" = "Statement Status"::"Bank Acc. Entry Applied") AND
         ("Statement No." <> '') AND ("Statement Line No." <> 0));

      EXIT(IsApplied);
    END;

    PROCEDURE SetStyle@5() : Text;
    BEGIN
      IF IsApplied THEN
        EXIT('Favorable');

      EXIT('');
    END;

    PROCEDURE SetFilterBankAccNoOpen@6(BankAccNo@1000 : Code[20]);
    BEGIN
      RESET;
      SETCURRENTKEY("Bank Account No.",Open);
      SETRANGE("Bank Account No.",BankAccNo);
      SETRANGE(Open,TRUE);
    END;

    BEGIN
    {
      NCS CFM Added key "Posting Date,Positive", fields and keys "RFP No.","RFP Entry No."
      NC MTD02 AIG Добавлено поле
      NC OAM22 DP Изменено свойство Caption Class полей ..(LCY)
      NC OAM23 DP Очистка измерений при удалении
      NC NCS-1209 DP Добавлена ссылка на поле Payment Assignment Платеж Книги Операций
      NC NCS-1209.1 DP Изменена ссылка (теперь на поле Text 1 Платеж Книги Операций)
      NC NCS-1209.2 DP Изменена размерность поля Payment Assignment 50->80
      -----
      NC NOS-26 ENK
        Change function: OnDelete.
    }
    END.
  }
}

