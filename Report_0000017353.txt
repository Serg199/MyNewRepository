OBJECT Report 17353 Employee Card T-2
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Employee Card T-2;
               RUS=Карточка сотрудника Т-2];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF CompositionDate = 0D THEN
                    ERROR(Text14808);

                  HumResSetup.GET;
                  HumResSetup.TESTFIELD("T-2 Template Code");

                  FileName := ExcelTemplate.OpenTemplate(HumResSetup."T-2 Template Code");

                  CompanyInfo.GET;
                END;

    OnPostReport=BEGIN
                   ExcelMgt.GiveUserControl;
                 END;

  }
  DATASET
  {
    { 7528;    ;DataItem;                    ;
               DataItemTable=Table5200;
               OnPreDataItem=BEGIN
                               ExcelMgt.OpenBook(FileName);
                             END;

               OnAfterGetRecord=VAR
                                  ClassificatorOKIN@1210000 : Record 17358;
                                  AlternativeAddress@1210002 : Record 5201;
                                  Country@1210003 : Record 9;
                                  ShiftInRows@1170000000 : Integer;
                                BEGIN
                                  Person.GET("Person No.");
                                  Position.GET("Position No.");
                                  ExcelMgt.OpenSheet('Sheet1');

                                  ExcelMgt.FillCell('A7',FORMAT(CompanyInfo.Name));
                                  ExcelMgt.FillCell('AV7',FORMAT(CompanyInfo."OKPO Code"));

                                  ExcelMgt.FillCell('A16',FORMAT(CompositionDate));
                                  ExcelMgt.FillCell('H16',"No.");
                                  ExcelMgt.FillCell('L16',Person."VAT Registration No.");
                                  ExcelMgt.FillCell('V16',"Social Security No.");
                                  ExcelMgt.FillCell('AG16',COPYSTR(Employee."Last Name",1,1));
                                  ExcelMgt.FillCell('BH16',FORMAT(Gender));

                                  ExcelMgt.FillCell('H26',"Last Name");
                                  ExcelMgt.FillCell('AB26',"First Name");
                                  ExcelMgt.FillCell('AW26',"Middle Name");

                                  ExcelMgt.FillCell('K29',FORMAT("Birth Date"));

                                  AlternativeAddress.SETRANGE("Person No.","Person No.");
                                  AlternativeAddress.SETRANGE("Address Type",AlternativeAddress."Address Type"::Birthplace);
                                  IF AlternativeAddress.FINDFIRST THEN BEGIN
                                    ExcelMgt.FillCell('L31',AlternativeAddress.City + ', ' + AlternativeAddress.Address);
                                    ExcelMgt.FillCell('BG30',AlternativeAddress.OKATO);
                                  END;

                                  IF Country.GET(Person."Citizenship Country/Region") THEN
                                    ExcelMgt.FillCell('J32',Country.Name);
                                  ExcelMgt.FillCell('BG32',Person.Citizenship);

                                  FillLastJobInfo("No.");
                                  PrintLangInfo("Person No.");
                                  FillLastEducation("Person No.");
                                  FillEducationInfo("Person No.");
                                  FillEmployeePositionInfo("Position No.");

                                  // Sheet2
                                  ExcelMgt.OpenSheet('Sheet2');

                                  FillServicePeriodInfo("Person No.");
                                  IF Person."Family Status" <> '' THEN
                                    IF ClassificatorOKIN.GET('10',Person."Family Status") THEN BEGIN
                                      ExcelMgt.FillCell('M10',ClassificatorOKIN.Name);
                                      ExcelMgt.FillCell('BC10',ClassificatorOKIN.Code);
                                    END;

                                  FillFamilyInfo("Person No.");

                                  Person.GetIdentityDoc(CompositionDate,PersonalDoc);
                                  ExcelMgt.FillCell('H24',PersonalDoc."Document Series");
                                  ExcelMgt.FillCell('N24',PersonalDoc."Document No.");
                                  ExcelMgt.FillCell('AK24',LocMgt.Date2Text(PersonalDoc."Issue Date"));
                                  ExcelMgt.FillCell('H25',PersonalDoc."Issue Authority");

                                  FillAdressInfo(31,AlternativeAddress."Address Type"::Registration,"Person No.");
                                  FillAdressInfo(35,AlternativeAddress."Address Type"::Permanent,"Person No.");

                                  ExcelMgt.FillCell('K39',"Phone No.");

                                  FillMilitaryInfo("Person No.");

                                  ExcelMgt.FillCell('B59',LocMgt.Date2Text(CompositionDate));

                                  // Sheet3
                                  ExcelMgt.OpenSheet('Sheet3');

                                  FillJobHistoryInfo("No.");
                                  FillAttestationInfo("Person No.");

                                  // Sheet4
                                  ExcelMgt.OpenSheet('Sheet4');
                                  ShiftInRows := FillVacationInfo("No.");
                                  FillDismissalInfo("No.",49 + ShiftInRows);
                                END;

               ReqFilterFields=No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnOpenPage=BEGIN
                   CompositionDate := TODAY;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             RUS=Параметры] }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Creation Date;
                             RUS=Дата создания];
                  ApplicationArea=#Basic,#Suite;
                  SourceExpr=CompositionDate }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Person@1210002 : Record 17350;
      Position@1210005 : Record 17370;
      CompanyInfo@1210001 : Record 79;
      PersonalDoc@1210003 : Record 17352;
      Text14808@1210103 : TextConst 'ENU=You should enter Composition Date.;RUS=Необходимо ввести дату состава.';
      HumResSetup@1210108 : Record 5218;
      ExcelTemplate@1210115 : Record 14919;
      ExcelMgt@1210113 : Codeunit 12416;
      LocMgt@1210000 : Codeunit 12400;
      RecordMgt@1210004 : Codeunit 17350;
      FileName@1210109 : Text[1024];
      CompositionDate@1210008 : Date;
      Text17300@1170000002 : TextConst 'ENU=Order No. %1 according to %2 from %3;RUS=Заказ номер %1 согласно %2 из %3';
      Text17301@1170000003 : TextConst 'ENU=Order No. %1 from %2;RUS=Заказ номер %1 из %2';
      PostHighSchoolEducation@1170000000 : TextConst 'ENU=19;RUS=19';
      PostHighSchoolEducationGroup@1170000001 : TextConst 'ENU=34;RUS=34';

    PROCEDURE PrintLangInfo@1210000(PersonNo@1210000 : Code[20]);
    VAR
      Language@1210002 : Record 8;
      EmployeeQualification@1210001 : Record 5203;
      OKINCodes@1210004 : Record 17358;
      RowNo@1210003 : Integer;
    BEGIN
      WITH EmployeeQualification DO BEGIN
        RowNo := 0;

        RESET;
        SETRANGE("Person No.",PersonNo);
        SETRANGE("Qualification Type","Qualification Type"::Language);

        IF FINDSET THEN
          REPEAT
            IF Language.GET("Language Code") THEN BEGIN
              ExcelMgt.FillCell('R' + FORMAT(33 + 2 * RowNo),FORMAT(Language.Name));
              IF OKINCodes.GET('05',"Language Proficiency") THEN BEGIN
                ExcelMgt.FillCell('AJ' + FORMAT(33 + 2 * RowNo),FORMAT(OKINCodes.Name));
                ExcelMgt.FillCell('BG' + FORMAT(33 + 2 * RowNo),FORMAT("Language Proficiency" + Language."OKIN Code"));
              END;
            END;

            RowNo += 1;
          UNTIL (NEXT = 0) OR (RowNo > 1);
      END;
    END;

    PROCEDURE FillLastJobInfo@1210064(EmployeeNo@1210001 : Code[30]);
    VAR
      EmplJobEntry@1210000 : Record 17363;
    BEGIN
      EmplJobEntry.RESET;
      EmplJobEntry.SETCURRENTKEY("Employee No.","Starting Date","Ending Date");
      EmplJobEntry.SETRANGE("Employee No.",EmployeeNo);
      EmplJobEntry.FINDLAST;

      ExcelMgt.FillCell('AK16',FORMAT(EmplJobEntry."Kind of Work"));
      ExcelMgt.FillCell('AU16',FORMAT(EmplJobEntry."Work Mode"));

      ExcelMgt.FillCell('AY23',EmplJobEntry."Contract No.");
      ExcelMgt.FillCell('AY24',FORMAT(EmplJobEntry."Document Date"));
    END;

    PROCEDURE FillLastEducation@1210016(PersonNo@1210001 : Code[30]);
    VAR
      EmployeeQualification@1210002 : Record 5203;
      MaxQualification@1210000 : Record 5203;
      OKINCodes@1210003 : Record 17358;
    BEGIN
      WITH EmployeeQualification DO BEGIN
        RESET;
        SETRANGE("Person No.",PersonNo);
        SETRANGE("Qualification Type","Qualification Type"::Education);
        SETFILTER("Type of Education",'<>%1&<>%2','',PostHighSchoolEducation);

        IF FINDSET THEN
          REPEAT
            IF MaxQualification."Type of Education" < "Type of Education" THEN
              MaxQualification := EmployeeQualification;
          UNTIL NEXT = 0;

        IF GET(PersonNo,MaxQualification."Qualification Type",
             MaxQualification."From Date",MaxQualification."Line No.")
        THEN
          IF OKINCodes.GET('30',MaxQualification."Type of Education") THEN BEGIN
            ExcelMgt.FillCell('J37',OKINCodes.Name);
            ExcelMgt.FillCell('BG36',"Type of Education");
          END;
      END
    END;

    PROCEDURE FillEducationInfo@1210090(PersonNo@1210001 : Code[30]);
    VAR
      EmployeeQualification@1210002 : Record 5203;
      RowNo@1210000 : Integer;
      I@1210004 : Integer;
    BEGIN
      WITH EmployeeQualification DO BEGIN
        RowNo := 1;
        I := 1;

        RESET;
        SETRANGE("Person No.",PersonNo);
        SETRANGE("Qualification Type","Qualification Type"::Education);
        SETFILTER("Type of Education",'<>%1&<>%2','',PostHighSchoolEducation);
        IF FIND('+') THEN
          REPEAT
            FillEducationCells(RowNo,EmployeeQualification);
            RowNo += 1;
          UNTIL (NEXT(-1) = 0) OR (RowNo > 2);

        RowNo := 3;
        RESET;
        SETRANGE("Person No.",PersonNo);
        SETRANGE("Qualification Type","Qualification Type"::Education);
        SETFILTER("Type of Education",PostHighSchoolEducation);
        IF FIND('+') THEN
          FillEducationCells(RowNo,EmployeeQualification);
      END
    END;

    PROCEDURE FillEducationCells@1210092(RowNo@1210001 : Integer;VAR EmployeeQualification@1210000 : Record 5203);
    VAR
      ClassificatorOKIN@1170000000 : Record 17358;
    BEGIN
      WITH EmployeeQualification DO BEGIN
        ExcelMgt.FillCell('EducationInstitutionName' + FORMAT(RowNo),"Institution/Company");

        IF "To Date" <> 0D THEN BEGIN
          ExcelMgt.FillCell('EducationYear' + FORMAT(RowNo),FORMAT(DATE2DMY("To Date",3)));
          ExcelMgt.FillCell('EducationDocName' + FORMAT(RowNo),FORMAT("Document Type"));
          ExcelMgt.FillCell('EducationQualification' + FORMAT(RowNo),Description);
          ExcelMgt.FillCell('EducationKind' + FORMAT(RowNo),Speciality);
          ExcelMgt.FillCell('EducationDocNo' + FORMAT(RowNo),"Document No.");
          ExcelMgt.FillCell('OKSOCode' + FORMAT(RowNo),"Science Degree");

          IF "Type of Education" = PostHighSchoolEducation THEN BEGIN
            ExcelMgt.FillCell('BG55',"Type of Education");
            IF ClassificatorOKIN.GET(PostHighSchoolEducationGroup,"Kind of Education") THEN
              ExcelMgt.FillCell('AB55',ClassificatorOKIN.Name);
          END;

          IF RowNo <> 3 THEN
            ExcelMgt.FillCell('EducationSeries' + FORMAT(RowNo),"Document Series");
        END;
      END;
    END;

    PROCEDURE FillEmployeePositionInfo@1210117(PositionNo@1210000 : Code[20]);
    VAR
      EmployeePosition@1210001 : Record 17370;
      JobTitle@1210002 : Record 12423;
    BEGIN
      IF EmployeePosition.GET(PositionNo) THEN BEGIN
        ExcelMgt.FillCell('I66',EmployeePosition."Job Title Name");

        IF JobTitle.GET(EmployeePosition."Job Title Code") THEN
          ExcelMgt.FillCell('BG66',JobTitle."Code OKPDTR");
      END
    END;

    PROCEDURE FillServicePeriodInfo@1210127(PersonNo@1210000 : Code[30]);
    VAR
      ServicePeriod@1210004 : ARRAY [3] OF Integer;
    BEGIN
      ExcelMgt.FillCell('U3',LocMgt.Date2Text(CompositionDate) + ' )');

      RecordMgt.CalcPersonTotalService(PersonNo,TRUE,ServicePeriod);
      IF ServicePeriodIsEmpty(ServicePeriod) THEN
        FillServPeriodFromPersonCard(PersonNo,ServicePeriod,TRUE);
      FillServiceCells(ServicePeriod,5);

      RecordMgt.CalcPersonTotalService(PersonNo,FALSE,ServicePeriod);
      IF ServicePeriodIsEmpty(ServicePeriod) THEN
        FillServPeriodFromPersonCard(PersonNo,ServicePeriod,FALSE);

      FillServiceCells(ServicePeriod,6);
    END;

    PROCEDURE FillServiceCells@1210129(ServicePeriod@1210000 : ARRAY [3] OF Integer;RowNo@1210001 : Integer);
    BEGIN
      ExcelMgt.FillCell('AC' + FORMAT(RowNo),FORMAT(ServicePeriod[1]));
      ExcelMgt.FillCell('AO' + FORMAT(RowNo),FORMAT(ServicePeriod[2]));
      ExcelMgt.FillCell('BB' + FORMAT(RowNo),FORMAT(ServicePeriod[3]));
    END;

    PROCEDURE FillFamilyInfo@1210134(PersonNo@1210000 : Code[30]);
    VAR
      EmployeeRelative@1210001 : Record 5205;
      Person2@1210003 : Record 17350;
      RowNo@1210002 : Integer;
    BEGIN
      WITH EmployeeRelative DO BEGIN
        RESET;
        SETRANGE("Person No.",PersonNo);
        IF FINDSET THEN BEGIN
          RowNo := 17;
          REPEAT
            ExcelMgt.FillCell('A' + FORMAT(RowNo),"Relative Code");

            IF Person2.GET("Relative Person No.") THEN
              ExcelMgt.FillCell('Q' + FORMAT(RowNo),Person2.GetFullName)
            ELSE
              ExcelMgt.FillCell('Q' + FORMAT(RowNo),"Last Name" + ' ' + "First Name" + ' ' + "Middle Name");

            IF "Birth Date" <> 0D THEN
              ExcelMgt.FillCell('AY' + FORMAT(RowNo),FORMAT(DATE2DMY("Birth Date",3)));

            RowNo += 1;
          UNTIL (RowNo > 22) OR (NEXT = 0);
        END;
      END;
    END;

    PROCEDURE FillMilitaryInfo@1210145(PersonNo@1210000 : Code[20]);
    VAR
      Person@1210001 : Record 17350;
      MilitaryRank@1210002 : Record 17358;
    BEGIN
      IF Person.GET(PersonNo) THEN
        WITH Person DO BEGIN
          IF "Military Status" = "Military Status"::"Not Liable" THEN
            EXIT;

          ExcelMgt.FillCell('M45',FORMAT("Military Retirement Category"));

          MilitaryRank.SETRANGE(Group,'17');
          MilitaryRank.SETRANGE(Code,"Military Rank");
          IF MilitaryRank.FINDFIRST THEN
            ExcelMgt.FillCell('M46',MilitaryRank.Name);

          ExcelMgt.FillCell('M47',FORMAT("Military Structure"));
          ExcelMgt.FillCell('X48',FORMAT("Military Speciality No."));
          ExcelMgt.FillCell('AH46',FORMAT("Military Registration Office"));
          ExcelMgt.FillCell('AI50',FORMAT("Military Registration No."));
        END
    END;

    PROCEDURE FillJobHistoryInfo@1210159(EmployeeNo@1210001 : Code[30]);
    VAR
      EmplJobEntry@1210000 : Record 17363;
      RowNo@1210002 : Integer;
    BEGIN
      WITH EmplJobEntry DO BEGIN
        RESET;
        SETCURRENTKEY("Employee No.","Starting Date","Ending Date");
        SETRANGE("Employee No.",EmployeeNo);
        SETFILTER(Type,'<>%1',Type::Termination);
        SETRANGE("Position Changed",TRUE);

        IF FINDSET THEN BEGIN
          IF COUNT > 13 THEN
            NEXT(COUNT - 13);

          RowNo := 11;
          REPEAT
            FillJobHistoryCells(RowNo,EmplJobEntry);
            RowNo += 1;
          UNTIL (NEXT = 0)
        END
      END
    END;

    PROCEDURE FillJobHistoryCells@1210161(RowNo@1210000 : Integer;VAR EmployeeJobEntry@1210001 : Record 17363);
    VAR
      OrganizationalUnit@1210002 : Record 12422;
      JobTitle@1210003 : Record 12423;
      Employee@1210005 : Record 5200;
      Position@1210006 : Record 17370;
    BEGIN
      WITH EmployeeJobEntry DO BEGIN
        ExcelMgt.FillCell('A' + FORMAT(RowNo),FORMAT("Starting Date"));

        IF OrganizationalUnit.GET("Org. Unit Code") THEN
          ExcelMgt.FillCell('H' + FORMAT(RowNo),OrganizationalUnit.Name);

        IF JobTitle.GET("Job Title Code") THEN
          ExcelMgt.FillCell('V' + FORMAT(RowNo),JobTitle.Name);

        IF Position.GET("Position No.") THEN
          IF JobTitle.GET("Job Title Code") THEN
            ExcelMgt.FillCell('AJ' + FORMAT(RowNo),FORMAT(Position."Monthly Salary Amount"));

        Employee.GET("Employee No.");
        IF "Supplement No." <> '' THEN
          ExcelMgt.FillCell('AS' + FORMAT(RowNo),STRSUBSTNO(Text17300,"Document No.","Supplement No.","Document Date"))
        ELSE
          ExcelMgt.FillCell('AS' + FORMAT(RowNo),STRSUBSTNO(Text17301,"Document No.","Document Date"));
      END
    END;

    PROCEDURE FillAttestationInfo@1210165(PersonNo@1210000 : Code[30]);
    VAR
      EmployeeQualification@1210001 : Record 5203;
      RowNo@1210002 : Integer;
    BEGIN
      WITH EmployeeQualification DO BEGIN
        RESET;
        SETRANGE("Person No.",PersonNo);
        SETRANGE("Qualification Type","Qualification Type"::Attestation);
        IF FINDSET THEN BEGIN
          IF COUNT > 2 THEN
            NEXT(COUNT - 2);
          RowNo := 30;
          REPEAT
            ExcelMgt.FillCell('A' + FORMAT(RowNo),FORMAT("Document Date"));
            ExcelMgt.FillCell('H' + FORMAT(RowNo),Description);
            ExcelMgt.FillCell('AJ' + FORMAT(RowNo),"Document No.");
            ExcelMgt.FillCell('AQ' + FORMAT(RowNo),FORMAT("Document Date"));

            RowNo += 1;
          UNTIL NEXT = 0;
        END;
      END
    END;

    PROCEDURE FillVacationInfo@1210175(EmployeeNo@1210000 : Code[30]) ShiftInRows : Integer;
    VAR
      EmplAbsenceEntry@1210001 : Record 17389;
      ClassificatorOKIN@1210003 : Record 17358;
      AccrualPeriod@1210004 : Record 17389;
      RowNo@1210002 : Integer;
      I@1170000000 : Integer;
    BEGIN
      WITH EmplAbsenceEntry DO BEGIN
        RESET;
        SETRANGE("Employee No.",EmployeeNo);
        SETRANGE("Entry Type","Entry Type"::Usage);
        SETFILTER("Vacation Type",'<>%1',0);
        IF FINDSET THEN BEGIN
          RowNo := 18;
          IF COUNT > 9 THEN BEGIN
            FOR I := 1 TO COUNT - 9 DO
              ExcelMgt.CopyRow(RowNo);
            ShiftInRows := COUNT - 9;
          END;
          REPEAT
            ExcelMgt.FillCell('A' + FORMAT(RowNo),FORMAT("Vacation Type"));

            IF AccrualPeriod.GET("Accrual Entry No.") THEN BEGIN
              ExcelMgt.FillCell('Q' + FORMAT(RowNo),FORMAT(AccrualPeriod."Start Date"));
              ExcelMgt.FillCell('X' + FORMAT(RowNo),FORMAT(AccrualPeriod."End Date"));
            END;

            ExcelMgt.FillCell('AE' + FORMAT(RowNo),FORMAT("Calendar Days"));
            ExcelMgt.FillCell('AM' + FORMAT(RowNo),FORMAT("Start Date"));
            ExcelMgt.FillCell('AT' + FORMAT(RowNo),FORMAT("End Date"));

            IF ClassificatorOKIN.GET("Time Activity Code") THEN
              ExcelMgt.FillCell('BA' + FORMAT(RowNo),ClassificatorOKIN.Name);

            RowNo += 1;
          UNTIL NEXT = 0;
        END;
      END;
    END;

    PROCEDURE FillDismissalInfo@1210185(EmployeeNo@1210000 : Code[30];RowNo@1170000002 : Integer);
    VAR
      LaborContractLines@1210004 : Record 17361;
      EmployeeJobEntry@1210005 : Record 17363;
      Employee@1170000000 : Record 5200;
      GroundsForTermination@1170000001 : Record 5217;
    BEGIN
      EmployeeJobEntry.RESET;
      EmployeeJobEntry.SETCURRENTKEY("Employee No.","Starting Date","Ending Date");
      EmployeeJobEntry.SETRANGE("Employee No.",EmployeeNo);
      IF EmployeeJobEntry.FINDLAST THEN BEGIN
        LaborContractLines.SETRANGE("Contract No.",EmployeeJobEntry."Contract No.");
        LaborContractLines.SETRANGE("Operation Type",LaborContractLines."Operation Type"::Dismissal);
        IF LaborContractLines.FINDLAST THEN BEGIN
          IF Employee.GET(EmployeeNo) THEN BEGIN
            IF GroundsForTermination.GET(Employee."Grounds for Term. Code") THEN
              ExcelMgt.FillCell(
                'AE' + FORMAT(RowNo),GroundsForTermination."Dismissal Article" + '. ' + GroundsForTermination.Description);
          END ELSE
            ExcelMgt.FillCell('AE' + FORMAT(RowNo),FORMAT(LaborContractLines."Dismissal Reason"));
          ExcelMgt.FillCell('L' + FORMAT(RowNo + 3),FORMAT(LaborContractLines."Starting Date"));
          ExcelMgt.FillCell('P' + FORMAT(RowNo + 5),LaborContractLines."Order No.");
          ExcelMgt.FillCell('AD' + FORMAT(RowNo + 5),FORMAT(LaborContractLines."Order Date"));
        END
      END
    END;

    PROCEDURE FillAdressInfo@1210033(RowNo@1210000 : Integer;Type@1210001 : Integer;PersonNo@1210003 : Code[20]);
    VAR
      AlternativeAddress@1210002 : Record 5201;
    BEGIN
      AlternativeAddress.SETRANGE("Person No.",PersonNo);
      AlternativeAddress.SETRANGE("Address Type",Type);
      IF AlternativeAddress.FINDLAST THEN BEGIN
        ExcelMgt.FillCell('I' + FORMAT(RowNo),AlternativeAddress."Post Code");
        IF AlternativeAddress.City <> '' THEN
          ExcelMgt.FillCell(
            'T' + FORMAT(RowNo),
            AlternativeAddress."City Category" + '. ' + AlternativeAddress.City + ', ' + AlternativeAddress.Address)
        ELSE
          IF AlternativeAddress.Region <> '' THEN
            ExcelMgt.FillCell(
              'T' + FORMAT(RowNo),
              AlternativeAddress."Region Category" + '. ' + AlternativeAddress.Region + ', ' + AlternativeAddress.Address);

        IF AlternativeAddress."Address Type" = AlternativeAddress."Address Type"::Registration THEN BEGIN
          ExcelMgt.FillCell('X38',FORMAT(DATE2DMY(AlternativeAddress."Valid from Date",1)));
          ExcelMgt.FillCell('AB38',LocMgt.GetMonthName(AlternativeAddress."Valid from Date",TRUE));
          ExcelMgt.FillCell('AP38',FORMAT(DATE2DMY(AlternativeAddress."Valid from Date",3)));
        END;
      END;
    END;

    PROCEDURE ServicePeriodIsEmpty@1170000001(ServicePeriod@1170000000 : ARRAY [3] OF Integer) : Boolean;
    VAR
      I@1170000001 : Integer;
    BEGIN
      FOR I := 1 TO 3 DO
        IF ServicePeriod[I] <> 0 THEN
          EXIT(FALSE);

      EXIT(TRUE);
    END;

    PROCEDURE FillServPeriodFromPersonCard@1170000002(PersonNo@1170000001 : Code[30];VAR ServicePeriod@1170000000 : ARRAY [3] OF Integer;Total@1170000002 : Boolean);
    VAR
      Person@1170000003 : Record 17350;
    BEGIN
      IF NOT Person.GET(PersonNo) THEN
        EXIT;

      IF Total THEN BEGIN
        ServicePeriod[1] := Person."Total Service (Years)";
        ServicePeriod[2] := Person."Total Service (Months)";
        ServicePeriod[3] := Person."Total Service (Days)";
      END ELSE BEGIN
        ServicePeriod[1] := Person."Unbroken Service (Years)";
        ServicePeriod[2] := Person."Unbroken Service (Months)";
        ServicePeriod[3] := Person."Unbroken Service (Days)";
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

