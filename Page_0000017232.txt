OBJECT Page 17232 Tax Register (4.1) FA
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Tax Register (4.1) FA;
               RUS=Налог. регистр (4.1) ОС];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table17211;
    DataCaptionExpr=FormTitle();
    SourceTableView=SORTING(Section Code);
    PageType=Worksheet;
    OnOpenPage=BEGIN
                 COPYFILTER("Date Filter",Calendar."Period End");
                 TaxRegMgt.SetPeriodAmountType(Calendar,DateFilterText,PeriodType,AmountType);
                 Calendar.RESET;
                 DateFilterText := '*';
               END;

    OnFindRecord=BEGIN
                   IF DateFilterText <> GETFILTER("Date Filter") THEN
                     ShowNewData;

                   EXIT(FIND(Which));
                 END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 30      ;1   ;ActionGroup;
                      CaptionML=[ENU=Fixed Asset;
                                 RUS=ОС];
                      Image=FixedAssets }
      { 31      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 RUS=Карточка];
                      RunObject=Page 5600;
                      RunPageLink=No.=FIELD(FA No.);
                      Image=EditLines }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 23      ;1   ;Action    ;
                      CaptionML=[ENU=Previous Period;
                                 RUS=Предыдущий период];
                      ToolTipML=[ENU=Previous Period;
                                 RUS=Предыдущий период];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('<=');
                               END;
                                }
      { 24      ;1   ;Action    ;
                      CaptionML=[ENU=Next Period;
                                 RUS=Следующий период];
                      ToolTipML=[ENU=Next Period;
                                 RUS=Следующий период];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('>=');
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                CaptionML=[ENU=Posting Date;
                           RUS=Дата учета];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GetMonthYear }

    { 32  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the fixed asset number associated with the tax register fixed asset entry.;
                           RUS=Определяет номер основного средства, связанный с операцией ОС налогового регистра.];
                SourceExpr="FA No.";
                Visible=FALSE }

    { 1210002;2;Field     ;
                ToolTipML=[ENU=Specifies the depreciation group associated with the tax register fixed asset entry.;
                           RUS=Определяет группу амортизации, связанную с операцией ОС налогового регистра.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Depreciation Group" }

    { 4   ;2   ;Field     ;
                CaptionML=[ENU=Name;
                           RUS=Название];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ObjectName }

    { 26  ;2   ;Field     ;
                DrillDown=No;
                ToolTipML=[ENU=Specifies how the fixed asset is used in manufacturing.;
                           RUS=Определяет способ использования ОС в производстве.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Belonging to Manufacturing" }

    { 6   ;2   ;Field     ;
                DrillDown=No;
                ToolTipML=[ENU=Specifies the depreciation method associated with the tax register fixed asset entry.;
                           RUS=Определяет метод амортизации, связанный с операцией ОС налогового регистра.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Depreciation Method" }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the acquisition cost associated with the tax register fixed asset entry.;
                           RUS=Определяет стоимость приобретения, связанную с операцией ОС налогового регистра.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Acquisition Cost" }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the book value amount associated with the tax register fixed asset entry.;
                           RUS=Определяет балансовую стоимость, связанную с операцией ОС налогового регистра.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Book Value Amount" }

    { 1210004;2;Field     ;
                CaptionML=[ENU=No. Month Expensive;
                           RUS=Кол-во месяцев фактич. списания];
                ApplicationArea=#Basic,#Suite;
                DecimalPlaces=2:8;
                SourceExpr=CalcQtyMonthsUsefulLife }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the depreciation amount associated with the tax register fixed asset entry.;
                           RUS=Определяет сумму амортизации, связанную с операцией ОС налогового регистра.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Depreciation Amount" }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the total depreciation amount associated with the tax register fixed asset entry.;
                           RUS=Определяет общую сумму амортизации, связанную с операцией ОС налогового регистра.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Total Depreciation Amount" }

    { 1210000;2;Field     ;
                ToolTipML=[ENU=Specifies the depreciation group elimination associated with the tax register fixed asset entry.;
                           RUS=Определяет исключение группы амортизации, связанное с операцией ОС налогового регистра.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Depr. Group Elimination" }

    { 20  ;1   ;Field     ;
                ToolTipML=[ENU=Month;
                           RUS=Месяц];
                OptionCaptionML=[ENU=,,Month,Quarter,Year;
                                 RUS=,,Месяц,Квартал,Год];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             FindPeriod('');
                           END;
                            }

    { 101 ;1   ;Field     ;
                ToolTipML=[ENU=Current Period;
                           RUS=Текущий период];
                OptionCaptionML=[ENU=Current Period,Tax Period;
                                 RUS=Текущий период,Налоговый период];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AmountType;
                OnValidate=BEGIN
                             FindPeriod('');
                           END;
                            }

  }
  CODE
  {
    VAR
      Calendar@1000 : Record 2000000007;
      TaxRegMgt@1001 : Codeunit 17201;
      DateFilterText@1002 : Text;
      PeriodType@1003 : ',,Month,Quarter,Year';
      AmountType@1004 : 'Current Period,Tax Period';

    PROCEDURE ShowNewData@1();
    BEGIN
      FindPeriod('');
      DateFilterText := GETFILTER("Date Filter");

      SETFILTER("Date Filter",DateFilterText);
      SETFILTER("Ending Date",DateFilterText);
    END;

    LOCAL PROCEDURE FindPeriod@2(SearchText@1000 : Code[10]);
    VAR
      Calendar@1001 : Record 2000000007;
    BEGIN
      IF GETFILTER("Date Filter") <> '' THEN BEGIN
        Calendar."Period End" := GETRANGEMAX("Date Filter");
        IF NOT TaxRegMgt.FindDate('',Calendar,PeriodType,AmountType) THEN
          TaxRegMgt.FindDate('',Calendar,PeriodType::Month,AmountType);
      END;
      TaxRegMgt.FindDate(SearchText,Calendar,PeriodType,AmountType);

      SETFILTER("Date Filter",'%1..%2',Calendar."Period Start",Calendar."Period End");
    END;

    BEGIN
    END.
  }
}

