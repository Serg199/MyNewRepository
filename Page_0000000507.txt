OBJECT Page 507 Blanket Sales Order
{
  OBJECT-PROPERTIES
  {
    Date=28.01.17;
    Time=12:00:00;
    Version List=NAVW110.00.00.15140,NAVRU10.00.00.15140;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Blanket Sales Order;
               RUS=Общий заказ на продажу];
    SourceTable=Table36;
    SourceTableView=WHERE(Document Type=FILTER(Blanket Order));
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[ENU=New,Process,Report,Approve,Request Approval;
                                RUS=Создать,Обработать,Отчет,Утвердить,Запросить утверждение];
    OnOpenPage=BEGIN
                 IF UserMgt.GetSalesFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetSalesFilter);
                   FILTERGROUP(0);
                 END;

                 SetDocNoVisible;
               END;

    OnAfterGetRecord=BEGIN
                       SetControlAppearance;
                       UpdateShipToBillToGroupVisibility
                     END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserMgt.GetSalesFilter;
                  IF (NOT DocNoVisible) AND ("No." = '') THEN
                    SetSellToCustomerFromFilter;
                END;

    OnInsertRecord=BEGIN
                     IF DocNoVisible THEN
                       CheckCreditMaxBeforeInsert;

                     IF ("Sell-to Customer No." = '') AND (GETFILTER("Sell-to Customer No.") <> '') THEN
                       CurrPage.UPDATE(FALSE);
                   END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     EXIT(ConfirmDeletion);
                   END;

    OnAfterGetCurrRecord=BEGIN
                           ShowWorkflowStatus := CurrPage.WorkflowStatus.PAGE.SetFilterOnWorkflowRecord(RECORDID);
                           CurrPage.ApprovalFactBox.PAGE.UpdateApprovalEntriesFromSourceRecord(RECORDID);
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 59      ;1   ;ActionGroup;
                      CaptionML=[ENU=O&rder;
                                 RUS=З&аказ];
                      Image=Order }
      { 61      ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=[ENU=Statistics;
                                 RUS=Статистика];
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 Handled@1000 : Boolean;
                               BEGIN
                                 OnBeforeStatisticsAction(Rec,Handled);
                                 IF NOT Handled THEN BEGIN
                                   OpenSalesOrderStatistics;
                                   SalesCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                                 END
                               END;
                                }
      { 62      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[ENU=Card;
                                 RUS=Карточка];
                      RunObject=Page 21;
                      RunPageLink=No.=FIELD(Sell-to Customer No.);
                      Image=EditLines }
      { 63      ;2   ;Action    ;
                      CaptionML=[ENU=Co&mments;
                                 RUS=Ко&мментарии];
                      RunObject=Page 67;
                      RunPageLink=Document Type=CONST(Blanket Order),
                                  No.=FIELD(No.),
                                  Document Line No.=CONST(0);
                      Image=ViewComments }
      { 115     ;2   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 RUS=Измерения];
                      ToolTipML=[ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 RUS=Просмотр или изменение измерений, например области, проекта или отдела, которые можно назначать документам покупки и продажи для распределения себестоимости и анализа истории транзакций.];
                      Enabled="No." <> '';
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDocDim;
                               END;
                                }
      { 137     ;2   ;Action    ;
                      Name=Approvals;
                      AccessByPermission=TableData 454=R;
                      CaptionML=[ENU=Approvals;
                                 RUS=Утверждения];
                      ToolTipML=[ENU=View a list of the records that are waiting to be approved. For example, you can see who requested the record to be approved, when it was sent, and when it is due to be approved.;
                                 RUS=Просмотр списка записей, ожидающих утверждения. Например, вы можете видеть имя пользователя, запросившего утверждение записи, время отправки запроса и время, когда он должен быть утвержден.];
                      Image=Approvals;
                      OnAction=VAR
                                 ApprovalEntries@1000 : Page 658;
                               BEGIN
                                 ApprovalEntries.Setfilters(DATABASE::"Sales Header","Document Type","No.");
                                 ApprovalEntries.RUN;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 11      ;1   ;ActionGroup;
                      CaptionML=[ENU=Approval;
                                 RUS=Утверждение] }
      { 9       ;2   ;Action    ;
                      Name=Approve;
                      CaptionML=[ENU=Approve;
                                 RUS=Утвердить];
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.ApproveRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 7       ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=[ENU=Reject;
                                 RUS=Отклонить];
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.RejectRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 5       ;2   ;Action    ;
                      Name=Delegate;
                      CaptionML=[ENU=Delegate;
                                 RUS=Делегировать];
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.DelegateRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 3       ;2   ;Action    ;
                      Name=Comment;
                      CaptionML=[ENU=Comments;
                                 RUS=Комментарии];
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.GetApprovalComment(Rec);
                               END;
                                }
      { 66      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 RUS=Ф&ункции];
                      Image=Action }
      { 67      ;2   ;Action    ;
                      Name=CalculateInvoiceDiscount;
                      AccessByPermission=TableData 19=R;
                      CaptionML=[ENU=Calculate &Invoice Discount;
                                 RUS=Вычи&слить скидку по счету];
                      Image=CalculateInvoiceDiscount;
                      OnAction=BEGIN
                                 ApproveCalcInvDisc;
                                 SalesCalcDiscByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 134     ;2   ;Separator  }
      { 68      ;2   ;Action    ;
                      Name=CopyDocument;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Document;
                                 RUS=Копировать документ];
                      Image=CopyDocument;
                      OnAction=BEGIN
                                 CopySalesDoc.SetSalesHeader(Rec);
                                 CopySalesDoc.RUNMODAL;
                                 CLEAR(CopySalesDoc);
                               END;
                                }
      { 138     ;2   ;Separator  }
      { 121     ;2   ;Action    ;
                      Name=Release;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=[ENU=Re&lease;
                                 RUS=Вы&пустить];
                      Image=ReleaseDoc;
                      OnAction=VAR
                                 ReleaseSalesDoc@1000 : Codeunit 414;
                               BEGIN
                                 ReleaseSalesDoc.PerformManualRelease(Rec);
                               END;
                                }
      { 122     ;2   ;Action    ;
                      Name=Reopen;
                      CaptionML=[ENU=Re&open;
                                 RUS=&Открыть];
                      ToolTipML=[ENU=Reopen the document to change it after it has been approved. Approved documents have the Released status and must be opened before they can be changed;
                                 RUS=Повторное открытие документа для его изменения после утверждения. Утвержденные документы имеют статус "Выпущено", и их необходимо открывать перед изменением.];
                      Promoted=Yes;
                      Enabled=Status <> Status::Open;
                      Image=ReOpen;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ReleaseSalesDoc@1001 : Codeunit 414;
                               BEGIN
                                 ReleaseSalesDoc.PerformManualReopen(Rec);
                               END;
                                }
      { 73      ;1   ;Action    ;
                      Name=MakeOrder;
                      CaptionML=[ENU=Make &Order;
                                 RUS=Сделать &заказ];
                      Promoted=Yes;
                      Image=MakeOrder;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckSales(Rec) THEN
                                   CODEUNIT.RUN(CODEUNIT::"Blnkt Sales Ord. to Ord. (Y/N)",Rec);
                               END;
                                }
      { 78      ;1   ;Action    ;
                      Name=Print;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Print;
                                 RUS=&Печать];
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 DocPrint.PrintSalesHeader(Rec);
                               END;
                                }
      { 15      ;1   ;ActionGroup;
                      CaptionML=[ENU=Request Approval;
                                 RUS=Утверждение запросов] }
      { 139     ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=[ENU=Send A&pproval Request;
                                 RUS=Отправить &запрос на утверждение];
                      Promoted=Yes;
                      Enabled=NOT OpenApprovalEntriesExist;
                      PromotedIsBig=Yes;
                      Image=SendApprovalRequest;
                      PromotedCategory=Category5;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.CheckSalesApprovalPossible(Rec) THEN
                                   ApprovalsMgmt.OnSendSalesDocForApproval(Rec);
                               END;
                                }
      { 140     ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=[ENU=Cancel Approval Re&quest;
                                 RUS=Отменить запрос на &утверждение];
                      Promoted=Yes;
                      Enabled=CanCancelApprovalForRecord;
                      PromotedIsBig=Yes;
                      Image=CancelApprovalRequest;
                      PromotedCategory=Category5;
                      PromotedOnly=Yes;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.OnCancelSalesApprovalRequest(Rec);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           RUS=Общее] }

    { 2   ;2   ;Field     ;
                SourceExpr="No.";
                Importance=Additional;
                Visible=DocNoVisible;
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Customer;
                           RUS=Клиент];
                SourceExpr="Sell-to Customer Name";
                Importance=Promoted;
                OnValidate=BEGIN
                             IF GETFILTER("Sell-to Customer No.") = xRec."Sell-to Customer No." THEN
                               IF "Sell-to Customer No." <> xRec."Sell-to Customer No." THEN
                                 SETRANGE("Sell-to Customer No.");

                             CurrPage.UPDATE;
                           END;
                            }

    { 19  ;2   ;Group     ;
                CaptionML=[ENU=Sell-to;
                           RUS=Клиент];
                GroupType=Group }

    { 81  ;3   ;Field     ;
                CaptionML=[ENU=Address;
                           RUS=Адрес];
                SourceExpr="Sell-to Address";
                Importance=Additional }

    { 83  ;3   ;Field     ;
                CaptionML=[ENU=Address 2;
                           RUS=Адрес 2];
                SourceExpr="Sell-to Address 2";
                Importance=Additional }

    { 72  ;3   ;Field     ;
                CaptionML=[ENU=Post Code;
                           RUS=Индекс];
                SourceExpr="Sell-to Post Code";
                Importance=Additional }

    { 86  ;3   ;Field     ;
                CaptionML=[ENU=City;
                           RUS=Город];
                SourceExpr="Sell-to City";
                Importance=Additional }

    { 125 ;3   ;Field     ;
                CaptionML=[ENU=Contact No.;
                           RUS=Код контакта];
                SourceExpr="Sell-to Contact No.";
                Importance=Additional;
                OnValidate=BEGIN
                             IF GETFILTER("Sell-to Contact No.") = xRec."Sell-to Contact No." THEN
                               IF "Sell-to Contact No." <> xRec."Sell-to Contact No." THEN
                                 SETRANGE("Sell-to Contact No.");
                           END;
                            }

    { 8   ;2   ;Field     ;
                CaptionML=[ENU=Contact;
                           RUS=Контакт];
                SourceExpr="Sell-to Contact" }

    { 45  ;2   ;Field     ;
                SourceExpr="Document Date" }

    { 30  ;2   ;Field     ;
                SourceExpr="Due Date" }

    { 14  ;2   ;Field     ;
                SourceExpr="Order Date" }

    { 507 ;2   ;Field     ;
                SourceExpr="External Document No." }

    { 10  ;2   ;Field     ;
                SourceExpr="Salesperson Code";
                OnValidate=BEGIN
                             SalespersonCodeOnAfterValidate;
                           END;
                            }

    { 105 ;2   ;Field     ;
                SourceExpr="Campaign No." }

    { 117 ;2   ;Field     ;
                SourceExpr="Responsibility Center" }

    { 141 ;2   ;Field     ;
                SourceExpr="Assigned User ID" }

    { 119 ;2   ;Field     ;
                SourceExpr=Status }

    { 58  ;1   ;Part      ;
                Name=SalesLines;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page508;
                UpdatePropagation=Both }

    { 1905885101;1;Group  ;
                CaptionML=[ENU=Invoice Details;
                           RUS=Счет - подробности];
                GroupType=Group }

    { 12  ;2   ;Field     ;
                SourceExpr="Currency Code";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 50  ;2   ;Field     ;
                SourceExpr="Shipment Date" }

    { 71  ;2   ;Field     ;
                SourceExpr="Prices Including VAT";
                OnValidate=BEGIN
                             PricesIncludingVATOnAfterValid;
                           END;
                            }

    { 135 ;2   ;Field     ;
                SourceExpr="VAT Bus. Posting Group" }

    { 1210002;2;Field     ;
                ToolTipML=[ENU=Specifies the agreement number associated with the sales header.;
                           RUS=Определяет номер соглашения, связанный с заголовком продажи.];
                SourceExpr="Agreement No." }

    { 28  ;2   ;Field     ;
                SourceExpr="Payment Terms Code" }

    { 74  ;2   ;Field     ;
                SourceExpr="Payment Method Code" }

    { 54  ;2   ;Field     ;
                SourceExpr="Transaction Type" }

    { 84  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                OnValidate=BEGIN
                             ShortcutDimension1CodeOnAfterV;
                           END;
                            }

    { 92  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                OnValidate=BEGIN
                             ShortcutDimension2CodeOnAfterV;
                           END;
                            }

    { 34  ;2   ;Field     ;
                SourceExpr="Pmt. Discount Date" }

    { 32  ;2   ;Field     ;
                SourceExpr="Payment Discount %" }

    { 94  ;2   ;Field     ;
                SourceExpr="Location Code" }

    { 27  ;1   ;Group     ;
                CaptionML=[ENU=Shipping and Billing;
                           RUS=Отгрузка и выставление счетов];
                Enabled="Sell-to Customer No." <> '';
                GroupType=Group }

    { 25  ;2   ;Group     ;
                GroupType=Group }

    { 21  ;3   ;Group     ;
                GroupType=Group }

    { 16  ;4   ;Field     ;
                Name=ShippingOptions;
                CaptionML=[ENU=Ship-to;
                           RUS=Получатель];
                ToolTipML=[ENU=Specifies the address that the products on the sales document are shipped to. Default (Sell-to Address): The same as the customer's sell-to address. Alternate Ship-to Address: One of the customer's alternate ship-to addresses. Custom Address: Any ship-to address that you specify in the fields below.;
                           RUS=Определяет адрес, по которому должны быть доставлены продукты из документа продажи. По умолчанию ("Адрес клиента"): адрес совпадает с адресом клиента. "Альтернативный адрес получателя": один из альтернативных адресов получателя для клиента. "Пользовательский адрес": произвольный адрес получателя, задаваемый в расположенных ниже полях.];
                OptionCaptionML=[ENU=Default (Sell-to Address),Alternate Shipping Address,Custom Address;
                                 RUS=По умолчанию (Адрес клиента),Альтернативный адрес отгрузки,Пользовательский адрес];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ShipToOptions;
                OnValidate=VAR
                             ShipToAddress@1001 : Record 222;
                             ShipToAddressList@1000 : Page 301;
                           BEGIN
                             CASE ShipToOptions OF
                               ShipToOptions::"Default (Sell-to Address)":
                                 BEGIN
                                   VALIDATE("Ship-to Code",'');
                                   CopySellToAddressToShipToAddress;
                                 END;
                               ShipToOptions::"Alternate Shipping Address":
                                 BEGIN
                                   ShipToAddress.SETRANGE("Customer No.","Sell-to Customer No.");
                                   ShipToAddressList.LOOKUPMODE := TRUE;
                                   ShipToAddressList.SETTABLEVIEW(ShipToAddress);

                                   IF ShipToAddressList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                     ShipToAddressList.GETRECORD(ShipToAddress);
                                     VALIDATE("Ship-to Code",ShipToAddress.Code);
                                   END ELSE
                                     ShipToOptions := ShipToOptions::"Custom Address";
                                 END;
                               ShipToOptions::"Custom Address":
                                 VALIDATE("Ship-to Code",'');
                             END;
                           END;
                            }

    { 4   ;4   ;Group     ;
                Visible=NOT (ShipToOptions = ShipToOptions::"Default (Sell-to Address)");
                GroupType=Group }

    { 36  ;5   ;Field     ;
                CaptionML=[ENU=Code;
                           RUS=Код];
                SourceExpr="Ship-to Code";
                Importance=Promoted;
                Editable=ShipToOptions = ShipToOptions::"Alternate Shipping Address";
                OnValidate=BEGIN
                             IF (xRec."Ship-to Code" <> '') AND ("Ship-to Code" = '') THEN
                               ERROR(EmptyShipToCodeErr);
                           END;
                            }

    { 38  ;5   ;Field     ;
                CaptionML=[ENU=Name;
                           RUS=Имя];
                SourceExpr="Ship-to Name";
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 40  ;5   ;Field     ;
                CaptionML=[ENU=Address;
                           RUS=Адрес];
                SourceExpr="Ship-to Address";
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 42  ;5   ;Field     ;
                CaptionML=[ENU=Address 2;
                           RUS=Адрес 2];
                SourceExpr="Ship-to Address 2";
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 97  ;5   ;Field     ;
                CaptionML=[ENU=Post Code;
                           RUS=Индекс];
                SourceExpr="Ship-to Post Code";
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 44  ;5   ;Field     ;
                CaptionML=[ENU=City;
                           RUS=Город];
                SourceExpr="Ship-to City";
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 29  ;5   ;Field     ;
                CaptionML=[ENU=Country/Region;
                           RUS=Страна/регион];
                SourceExpr="Ship-to Country/Region Code";
                Importance=Additional;
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 46  ;5   ;Field     ;
                CaptionML=[ENU=Contact;
                           RUS=Контакт];
                SourceExpr="Ship-to Contact";
                Editable=ShipToOptions = ShipToOptions::"Custom Address" }

    { 1210000;5;Field     ;
                ToolTipML=[ENU=Specifies the code of the company registration associated with the sales header.;
                           RUS=Определяет код регистрации компании, связанный с заголовком продажи.];
                SourceExpr="KPP Code" }

    { 39  ;3   ;Group     ;
                CaptionML=[ENU=Shipment Method;
                           RUS=Метод поставки];
                GroupType=Group }

    { 37  ;4   ;Field     ;
                CaptionML=[ENU=Code;
                           RUS=Код];
                ToolTipML=[ENU=Specifies how items on the sales document are shipped to the customer.;
                           RUS=Определяет способ отгрузки клиенту товаров из документа продажи.];
                SourceExpr="Shipment Method Code";
                Importance=Additional }

    { 35  ;4   ;Field     ;
                CaptionML=[ENU=Agent;
                           RUS=Агент];
                ToolTipML=[ENU=Specifies which shipping agent is used to transport the items on the sales document to the customer.;
                           RUS=Определяет экспедитора, который используется для транспортировки клиенту товаров из документа продажи.];
                SourceExpr="Shipping Agent Code";
                Importance=Additional }

    { 33  ;4   ;Field     ;
                CaptionML=[ENU=Agent service;
                           RUS=Услуга агента];
                ToolTipML=[ENU=Specifies which shipping agent service is used to transport the items on the sales document to the customer.;
                           RUS=Определяет услуги экспедитора, которые используются для транспортировки клиенту товаров из документа продажи.];
                SourceExpr="Shipping Agent Service Code";
                Importance=Additional }

    { 31  ;4   ;Field     ;
                ToolTipML=[ENU=Specifies the shipping agent's package number.;
                           RUS=Определяет номер пакета экспедитора.];
                SourceExpr="Package Tracking No.";
                Importance=Additional }

    { 41  ;2   ;Group     ;
                GroupType=Group }

    { 23  ;3   ;Field     ;
                Name=BilltoOptions;
                CaptionML=[ENU=Bill-to;
                           RUS=Плательщик];
                ToolTipML=[ENU=Specifies the customer that the sales invoice will be sent to. Default (Customer): The same as the customer on the sales invoice. Another Customer: Any customer that you specify in the fields below.;
                           RUS=Определяет клиента, которому будет отправлен счет продажи. По умолчанию ("Клиент"): адрес совпадает с адресом клиента в счете продажи. "Другой клиент": произвольный клиент, задаваемый в расположенных ниже полях.];
                OptionCaptionML=[ENU=Default (Customer),Another Customer;
                                 RUS=По умолчанию (Клиент),Другой клиент];
                SourceExpr=BillToOptions;
                OnValidate=BEGIN
                             IF BillToOptions = BillToOptions::"Default (Customer)" THEN
                               VALIDATE("Bill-to Customer No.","Sell-to Customer No.");
                           END;
                            }

    { 43  ;3   ;Group     ;
                Visible=BillToOptions = BillToOptions::"Another Customer";
                GroupType=Group }

    { 18  ;4   ;Field     ;
                CaptionML=[ENU=Name;
                           RUS=Имя];
                SourceExpr="Bill-to Name";
                Importance=Promoted;
                OnValidate=VAR
                             ApplicationAreaSetup@1000 : Record 9178;
                           BEGIN
                             IF GETFILTER("Bill-to Customer No.") = xRec."Bill-to Customer No." THEN
                               IF "Bill-to Customer No." <> xRec."Bill-to Customer No." THEN
                                 SETRANGE("Bill-to Customer No.");

                             IF ApplicationAreaSetup.IsFoundationEnabled THEN
                               SalesCalcDiscByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;
                            }

    { 20  ;4   ;Field     ;
                CaptionML=[ENU=Address;
                           RUS=Адрес];
                SourceExpr="Bill-to Address";
                Importance=Additional }

    { 22  ;4   ;Field     ;
                CaptionML=[ENU=Address 2;
                           RUS=Адрес 2];
                SourceExpr="Bill-to Address 2";
                Importance=Additional }

    { 89  ;4   ;Field     ;
                CaptionML=[ENU=Post Code;
                           RUS=Индекс];
                SourceExpr="Bill-to Post Code";
                Importance=Additional }

    { 24  ;4   ;Field     ;
                CaptionML=[ENU=City;
                           RUS=Город];
                SourceExpr="Bill-to City";
                Importance=Additional }

    { 127 ;4   ;Field     ;
                CaptionML=[ENU=Contact No.;
                           RUS=Код контакта];
                SourceExpr="Bill-to Contact No.";
                Importance=Additional }

    { 26  ;4   ;Field     ;
                CaptionML=[ENU=Contact;
                           RUS=Контакт];
                SourceExpr="Bill-to Contact" }

    { 1907468901;1;Group  ;
                CaptionML=[ENU=Foreign Trade;
                           RUS=Внешняя торговля] }

    { 52  ;2   ;Field     ;
                SourceExpr="EU 3-Party Trade" }

    { 103 ;2   ;Field     ;
                SourceExpr="Transaction Specification" }

    { 56  ;2   ;Field     ;
                SourceExpr="Transport Method" }

    { 99  ;2   ;Field     ;
                SourceExpr="Exit Point" }

    { 101 ;2   ;Field     ;
                SourceExpr=Area }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 13  ;1   ;Part      ;
                SubPageLink=Table ID=CONST(36),
                            Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.);
                PagePartID=Page9103;
                Visible=OpenApprovalEntriesExistForCurrUser;
                PartType=Page }

    { 1902018507;1;Part   ;
                SubPageLink=No.=FIELD(Bill-to Customer No.);
                PagePartID=Page9082;
                PartType=Page }

    { 1900316107;1;Part   ;
                SubPageLink=No.=FIELD(Sell-to Customer No.);
                PagePartID=Page9084;
                PartType=Page }

    { 1906127307;1;Part   ;
                SubPageLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(Document No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page9087;
                ProviderID=58;
                Visible=FALSE;
                PartType=Page }

    { 1906354007;1;Part   ;
                Name=ApprovalFactBox;
                PagePartID=Page9092;
                Visible=FALSE;
                PartType=Page }

    { 1907012907;1;Part   ;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page9108;
                ProviderID=58;
                Visible=FALSE;
                PartType=Page }

    { 17  ;1   ;Part      ;
                Name=WorkflowStatus;
                PagePartID=Page1528;
                Visible=ShowWorkflowStatus;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      CopySalesDoc@1006 : Report 292;
      DocPrint@1007 : Codeunit 229;
      UserMgt@1009 : Codeunit 5700;
      SalesCalcDiscByType@1001 : Codeunit 56;
      ChangeExchangeRate@1005 : Page 511;
      DocNoVisible@1000 : Boolean;
      OpenApprovalEntriesExistForCurrUser@1010 : Boolean;
      OpenApprovalEntriesExist@1008 : Boolean;
      ShowWorkflowStatus@1002 : Boolean;
      CanCancelApprovalForRecord@1003 : Boolean;
      ShipToOptions@1011 : 'Default (Sell-to Address),Alternate Shipping Address,Custom Address';
      BillToOptions@1004 : 'Default (Customer),Another Customer';
      EmptyShipToCodeErr@1012 : TextConst 'ENU=The Code field can only be empty if you select Custom Address in the Ship-to field.;RUS=Поле "Код" может быть только пустым, если в поле "Получатель" выбрано значение "Пользовательский адрес".';

    LOCAL PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CurrPage.SalesLines.PAGE.ApproveCalcInvDisc;
    END;

    LOCAL PROCEDURE SalespersonCodeOnAfterValidate@19011896();
    BEGIN
      CurrPage.SalesLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE ShortcutDimension1CodeOnAfterV@19029405();
    BEGIN
      CurrPage.SalesLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE ShortcutDimension2CodeOnAfterV@19008725();
    BEGIN
      CurrPage.SalesLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE PricesIncludingVATOnAfterValid@19009096();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SetDocNoVisible@2();
    VAR
      DocumentNoVisibility@1001 : Codeunit 1400;
      DocType@1000 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Reminder,FinChMemo';
    BEGIN
      DocNoVisible := DocumentNoVisibility.SalesDocumentNoIsVisible(DocType::"Blanket Order","No.");
    END;

    LOCAL PROCEDURE SetControlAppearance@5();
    VAR
      ApprovalsMgmt@1002 : Codeunit 1535;
    BEGIN
      OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);
      CanCancelApprovalForRecord := ApprovalsMgmt.CanCancelApprovalForRecord(RECORDID);
    END;

    LOCAL PROCEDURE UpdateShipToBillToGroupVisibility@9();
    BEGIN
      CASE TRUE OF
        ("Ship-to Code" = '') AND ShipToAddressEqualsSellToAddress:
          ShipToOptions := ShipToOptions::"Default (Sell-to Address)";
        ("Ship-to Code" = '') AND (NOT ShipToAddressEqualsSellToAddress):
          ShipToOptions := ShipToOptions::"Custom Address";
        "Ship-to Code" <> '':
          ShipToOptions := ShipToOptions::"Alternate Shipping Address";
      END;

      IF "Bill-to Customer No." = "Sell-to Customer No." THEN
        BillToOptions := BillToOptions::"Default (Customer)"
      ELSE
        BillToOptions := BillToOptions::"Another Customer";
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeStatisticsAction@3(VAR SalesHeader@1000 : Record 36;VAR Handled@1001 : Boolean);
    BEGIN
    END;

    BEGIN
    END.
  }
}

