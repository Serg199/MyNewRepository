OBJECT Report 14913 Create Invent. Act Lines
{
  OBJECT-PROPERTIES
  {
    Date=18.12.13;
    Time=12:00:00;
    Version List=NAVRU7.10;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Create Invent. Act Lines;
               RUS=Создание строк акта сверки взаиморасчетов];
    ProcessingOnly=Yes;
  }
  DATASET
  {
    { 7663;    ;DataItem;                    ;
               DataItemTable=Table14908;
               DataItemTableView=SORTING(No.);
               OnPreDataItem=BEGIN
                               IF COUNT <> 1 THEN
                                 ERROR(Text001);
                             END;

               OnAfterGetRecord=BEGIN
                                  TESTFIELD("Inventory Date");
                                END;
                                 }

    { 6836;    ;DataItem;                    ;
               DataItemTable=Table18;
               OnAfterGetRecord=BEGIN
                                  CustPostGroupBuffer.DELETEALL;

                                  CustLedgerEntry.SETCURRENTKEY("Customer No.","Posting Date","Currency Code");
                                  CustLedgerEntry.SETRANGE("Customer No.","No.");
                                  CustLedgerEntry.SETRANGE("Posting Date",0D,"Invent. Act Header"."Inventory Date");
                                  IF CustLedgerEntry.FINDSET THEN
                                    REPEAT
                                      IF NOT CustPostGroupBuffer.GET(CustLedgerEntry."Customer Posting Group") THEN BEGIN
                                        CustPostGroup.GET(CustLedgerEntry."Customer Posting Group");
                                        CustPostGroupBuffer := CustPostGroup;
                                        CustPostGroupBuffer.INSERT;
                                      END;
                                    UNTIL CustLedgerEntry.NEXT = 0;

                                  IF CustPostGroupBuffer.FINDSET THEN
                                    REPEAT
                                      DebtsAmount := 0;
                                      LiabilitiesAmount := 0;

                                      CustLedgerEntry.SETRANGE("Date Filter",0D,"Invent. Act Header"."Inventory Date");
                                      CustLedgerEntry.SETRANGE("Customer Posting Group",CustPostGroupBuffer.Code);
                                      IF CustLedgerEntry.FINDSET THEN
                                        REPEAT
                                          CustLedgerEntry.CALCFIELDS("Remaining Amt. (LCY)");
                                          IF CustLedgerEntry."Remaining Amt. (LCY)" > 0 THEN
                                            DebtsAmount += CustLedgerEntry."Remaining Amt. (LCY)"
                                          ELSE
                                            LiabilitiesAmount -= CustLedgerEntry."Remaining Amt. (LCY)"
                                        UNTIL CustLedgerEntry.NEXT = 0;

                                      IF DebtsAmount <> 0 THEN
                                        AddLine(0,"No.",0,CustPostGroupBuffer.Code,CustPostGroupBuffer."Receivables Account",DebtsAmount);
                                      IF LiabilitiesAmount <> 0 THEN
                                        AddLine(0,"No.",1,CustPostGroupBuffer.Code,CustPostGroupBuffer."Receivables Account",LiabilitiesAmount);
                                    UNTIL CustPostGroupBuffer.NEXT = 0;
                                END;

               ReqFilterFields=No. }

    { 3182;    ;DataItem;                    ;
               DataItemTable=Table23;
               OnAfterGetRecord=BEGIN
                                  VendPostGroupBuffer.DELETEALL;

                                  VendLedgerEntry.SETCURRENTKEY("Vendor No.","Posting Date","Currency Code");
                                  VendLedgerEntry.SETRANGE("Vendor No.","No.");
                                  VendLedgerEntry.SETRANGE("Posting Date",0D,"Invent. Act Header"."Inventory Date");
                                  IF VendLedgerEntry.FINDSET THEN
                                    REPEAT
                                      IF NOT VendPostGroupBuffer.GET(VendLedgerEntry."Vendor Posting Group") THEN BEGIN
                                        VendPostGroup.GET(VendLedgerEntry."Vendor Posting Group");
                                        VendPostGroupBuffer := VendPostGroup;
                                        VendPostGroupBuffer.INSERT;
                                      END;
                                    UNTIL VendLedgerEntry.NEXT = 0;

                                  IF VendPostGroupBuffer.FINDSET THEN
                                    REPEAT
                                      DebtsAmount := 0;
                                      LiabilitiesAmount := 0;

                                      VendLedgerEntry.SETRANGE("Date Filter",0D,"Invent. Act Header"."Inventory Date");
                                      VendLedgerEntry.SETRANGE("Vendor Posting Group",VendPostGroupBuffer.Code);
                                      IF VendLedgerEntry.FINDSET THEN
                                        REPEAT
                                          VendLedgerEntry.CALCFIELDS("Remaining Amt. (LCY)");
                                          IF VendLedgerEntry."Remaining Amt. (LCY)" > 0 THEN
                                            DebtsAmount += VendLedgerEntry."Remaining Amt. (LCY)"
                                          ELSE
                                            LiabilitiesAmount -= VendLedgerEntry."Remaining Amt. (LCY)"
                                        UNTIL VendLedgerEntry.NEXT = 0;

                                      IF DebtsAmount <> 0 THEN
                                        AddLine(1,"No.",0,VendPostGroupBuffer.Code,VendPostGroupBuffer."Payables Account",DebtsAmount);
                                      IF LiabilitiesAmount <> 0 THEN
                                        AddLine(1,"No.",1,VendPostGroupBuffer.Code,VendPostGroupBuffer."Payables Account",LiabilitiesAmount);
                                    UNTIL VendPostGroupBuffer.NEXT = 0;
                                END;

               ReqFilterFields=No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CustLedgerEntry@1210000 : Record 21;
      VendLedgerEntry@1210001 : Record 25;
      InventActLine@1210002 : Record 14909;
      Text001@1210003 : TextConst 'ENU=Incorrect using of report.;RUS=Неправильное использование отчета.';
      CustPostGroup@1210007 : Record 92;
      CustPostGroupBuffer@1210006 : TEMPORARY Record 92;
      VendPostGroup@1210009 : Record 93;
      VendPostGroupBuffer@1210008 : TEMPORARY Record 93;
      DebtsAmount@1210005 : Decimal;
      LiabilitiesAmount@1210004 : Decimal;
      Text002@1470000 : TextConst 'ENU=Line %1 already exists. Do you want to overwrite?;RUS=Строка %1 уже существует. Перезаписать?';

    PROCEDURE AddLine@1210001(ContractorType@1210002 : 'Customer,Vendor';ContractorNo@1210000 : Code[20];Category@1210001 : 'Debts,Liabilities';PostingGroup@1210003 : Code[10];GLAccount@1210004 : Code[20];Amount@1210005 : Decimal);
    BEGIN
      InventActLine.INIT;
      InventActLine."Act No." := "Invent. Act Header"."No.";
      InventActLine."Contractor Type" := ContractorType;
      InventActLine."Contractor No." := ContractorNo;
      InventActLine."Posting Group" := PostingGroup;
      InventActLine.Category := Category;
      IF ContractorType = ContractorType::Customer THEN
        InventActLine."Contractor Name" := Customer.Name + Customer."Name 2"
      ELSE
        InventActLine."Contractor Name" := Vendor.Name + Vendor."Name 2";
      InventActLine."G/L Account No." := GLAccount;
      InventActLine."Total Amount" := Amount;
      InventActLine."Confirmed Amount" := Amount;
      IF NOT InventActLine.INSERT THEN
        IF CONFIRM(Text002,FALSE,InventActLine.GetRecDescription) THEN
          InventActLine.MODIFY;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

