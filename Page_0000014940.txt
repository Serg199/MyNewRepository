OBJECT Page 14940 G/L Corr. Analysis by Dim.
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=G/L Corr. Analysis by Dim.;
               RUS=Анализ по изм. корреспонденции];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table367;
    DataCaptionExpr=GLCorrAnalysisViewCode;
    PageType=Document;
    OnInit=BEGIN
             CreditDim3FilterEnable := TRUE;
             CreditDim2FilterEnable := TRUE;
             CreditDim1FilterEnable := TRUE;
             DebitDim3FilterEnable := TRUE;
             DebitDim2FilterEnable := TRUE;
             DebitDim1FilterEnable := TRUE;
           END;

    OnOpenPage=BEGIN
                 ValidateGLCorrAnalysisViewCode;

                 GLSetup.GET;

                 IF LineDimCode = '' THEN
                   LineDimCode := FindFirstDimension;
                 LineDimOption := DimCodeToOption(LineDimCode,DimGroupType);

                 CalculateClosingDateFilter;
                 FindPeriod('');
               END;

    OnFindRecord=BEGIN
                   EXIT(FindRec(LineDimOption,Rec,Which));
                 END;

    OnNextRecord=BEGIN
                   EXIT(NextRec(LineDimOption,Rec,Steps));
                 END;

    OnAfterGetRecord=BEGIN
                       NameIndent := 0;
                       DebitAmount := CalcDebitAmount;
                       CreditAmount := CalcCreditAmount;
                       CodeOnFormat;
                       NameOnFormat;
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 12      ;1   ;Action    ;
                      CaptionML=[ENU=Previous Period;
                                 RUS=Предыдущий период];
                      ToolTipML=[ENU=Previous Period;
                                 RUS=Предыдущий период];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('<=');
                               END;
                                }
      { 11      ;1   ;Action    ;
                      CaptionML=[ENU=Next Period;
                                 RUS=Следующий период];
                      ToolTipML=[ENU=Next Period;
                                 RUS=Следующий период];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('>=');
                               END;
                                }
      { 1210022 ;1   ;Action    ;
                      CaptionML=[ENU=&Print;
                                 RUS=&Печать];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Print;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Print;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=Options;
                           RUS=Параметры] }

    { 5   ;2   ;Field     ;
                CaptionML=[ENU=G/L Corr. Analysis View Code;
                           RUS=Код аналит. отчета по корресп.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=GLCorrAnalysisViewCode;
                TableRelation="G/L Corr. Analysis View";
                OnValidate=BEGIN
                             ValidateGLCorrAnalysisViewCode;
                             ValidateLineDimCode;
                             CurrPage.UPDATE;
                           END;

                OnLookup=VAR
                           GLCorrAnalysisViewList@1002 : Page 14942;
                         BEGIN
                           GLCorrAnalysisViewList.LOOKUPMODE := TRUE;
                           GLCorrAnalysisViewList.SETRECORD(GLCorrAnalysisView);
                           IF GLCorrAnalysisViewList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                             GLCorrAnalysisViewList.GETRECORD(GLCorrAnalysisView);
                             GLCorrAnalysisViewCode := GLCorrAnalysisView.Code;
                             Text := GLCorrAnalysisView.Code;
                             ValidateGLCorrAnalysisViewCode;
                             ValidateLineDimCode;
                             CurrPage.UPDATE;
                             EXIT(TRUE);
                           END;
                         END;
                          }

    { 1210013;2;Field     ;
                CaptionML=[ENU=Dimension Group Type;
                           RUS=Тип группы измерения];
                OptionCaptionML=[ENU=Debit,Credit;
                                 RUS=Дебет,Кредит];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DimGroupType;
                OnValidate=BEGIN
                             DimGroupTypeOnAfterValidate;
                           END;
                            }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Show as Lines;
                           RUS=Показывать в строках];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=LineDimCode;
                OnValidate=BEGIN
                             ValidateLineDimCode;
                             CurrPage.UPDATE;
                           END;

                OnLookup=VAR
                           NewCode@1002 : Text[30];
                         BEGIN
                           NewCode := GetDimSelection(LineDimCode);
                           IF NewCode = LineDimCode THEN
                             EXIT(FALSE);

                           Text := NewCode;
                           LineDimCode := NewCode;
                           ValidateLineDimCode;
                           CurrPage.UPDATE;
                           EXIT(TRUE);
                         END;
                          }

    { 36  ;2   ;Field     ;
                CaptionML=[ENU=Date Filter;
                           RUS=Фильтр по дате];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DateFilter;
                OnValidate=VAR
                             GLAcc@1001 : Record 15;
                             ApplicationManagement@1002 : Codeunit 1;
                           BEGIN
                             IF ApplicationManagement.MakeDateFilter(DateFilter) = 0 THEN;
                             GLAcc.SETFILTER("Date Filter",DateFilter);
                             DateFilter := GLAcc.GETFILTER("Date Filter");
                             StartDate := GLCorrAnalysisViewEntry.GETRANGEMIN("Posting Date");
                             EndDate := GLCorrAnalysisViewEntry.GETRANGEMAX("Posting Date");
                             CurrPage.UPDATE;
                           END;
                            }

    { 38  ;2   ;Field     ;
                CaptionML=[ENU=Debit Account Filter;
                           RUS=Фильтр по дебетовым счетам ГК];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DebitAccFilter;
                TableRelation="G/L Account";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1210015;2;Field     ;
                CaptionML=[ENU=Credit Account Filter;
                           RUS=Фильтр по кредитовым счетам ГК];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CreditAccFilter;
                TableRelation="G/L Account";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1210020;2;Field     ;
                CaptionML=[ENU=Business Unit Filter;
                           RUS=Фильтр по филиалу];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BusUnitFilter;
                TableRelation="Business Unit";
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 43  ;2   ;Field     ;
                CaptionML=[ENU=View by;
                           RUS=Просмотр по];
                ToolTipML=[ENU=Day;
                           RUS=День];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                 RUS=День,Неделя,Месяц,Квартал,Год,Учетный период];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             FindPeriod('');
                             CurrPage.UPDATE;
                           END;
                            }

    { 14  ;2   ;Field     ;
                CaptionML=[ENU=View as;
                           RUS=Просмотр как];
                ToolTipML=[ENU=Net Change;
                           RUS=Оборот];
                OptionCaptionML=[ENU=Net Change,Balance at Date;
                                 RUS=Оборот,Сальдо на дату];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AmountType;
                OnValidate=BEGIN
                             FindPeriod('');
                             CurrPage.UPDATE;
                           END;
                            }

    { 1210000;1;Group     ;
                IndentationColumnName=NameIndent;
                IndentationControls=Name;
                GroupType=Repeater }

    { 1210001;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Code;
                Editable=false;
                Style=Strong;
                StyleExpr=CodeEmphasize;
                OnLookup=BEGIN
                           LookUpCode(LineDimCode,Code);
                         END;
                          }

    { 1210003;2;Field     ;
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Name;
                Editable=false;
                Style=Strong;
                StyleExpr=NameEmphasize }

    { 1210005;2;Field     ;
                CaptionML=[ENU=Debit Amount;
                           RUS=Сумма по дебету];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DebitAmount;
                Editable=false;
                OnDrillDown=BEGIN
                              DrillDown(0);
                            END;
                             }

    { 1210017;2;Field     ;
                CaptionML=[ENU=Credit Amount;
                           RUS=Сумма по кредиту];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CreditAmount;
                Editable=false;
                OnDrillDown=BEGIN
                              DrillDown(1);
                            END;
                             }

    { 1900242701;1;Group  ;
                CaptionML=[ENU=Dimension Filters;
                           RUS=Фильтры измерения] }

    { 34  ;2   ;Field     ;
                Name=DebitDim1Filter;
                CaptionML=[ENU=Debit Dimension 1 Filter;
                           RUS=Фильтр дебетового измерения 1];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DebitDim1Filter;
                CaptionClass=GetCaptionClass(1);
                Enabled=DebitDim1FilterEnable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;

                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(GLCorrAnalysisView."Debit Dimension 1 Code",Text));
                         END;
                          }

    { 30  ;2   ;Field     ;
                Name=DebitDim2Filter;
                CaptionML=[ENU=Debit Dimension 2 Filter;
                           RUS=Фильтр дебетового измерения 2];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DebitDim2Filter;
                CaptionClass=GetCaptionClass(2);
                Enabled=DebitDim2FilterEnable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;

                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(GLCorrAnalysisView."Debit Dimension 2 Code",Text));
                         END;
                          }

    { 46  ;2   ;Field     ;
                Name=DebitDim3Filter;
                CaptionML=[ENU=Debit Dimension 3 Filter;
                           RUS=Фильтр дебетового измерения 3];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=DebitDim3Filter;
                CaptionClass=GetCaptionClass(3);
                Enabled=DebitDim3FilterEnable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;

                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(GLCorrAnalysisView."Debit Dimension 3 Code",Text));
                         END;
                          }

    { 1210011;2;Field     ;
                Name=CreditDim1Filter;
                CaptionML=[ENU=Credit Dimension 1 Filter;
                           RUS=Фильтр кредитового измерения 1];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CreditDim1Filter;
                CaptionClass=GetCaptionClass(4);
                Enabled=CreditDim1FilterEnable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;

                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(GLCorrAnalysisView."Credit Dimension 1 Code",Text));
                         END;
                          }

    { 1210009;2;Field     ;
                Name=CreditDim2Filter;
                CaptionML=[ENU=Credit Dimension 2 Filter;
                           RUS=Фильтр кредитового измерения 2];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CreditDim2Filter;
                CaptionClass=GetCaptionClass(5);
                Enabled=CreditDim2FilterEnable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;

                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(GLCorrAnalysisView."Credit Dimension 2 Code",Text));
                         END;
                          }

    { 1210007;2;Field     ;
                Name=CreditDim3Filter;
                CaptionML=[ENU=Credit Dimension 3 Filter;
                           RUS=Фильтр кредитового измерения 3];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CreditDim3Filter;
                CaptionClass=GetCaptionClass(6);
                Enabled=CreditDim3FilterEnable;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;

                OnLookup=BEGIN
                           EXIT(LookUpDimFilter(GLCorrAnalysisView."Credit Dimension 3 Code",Text));
                         END;
                          }

    { 1900533801;1;Group  ;
                CaptionML=[ENU=Parameters;
                           RUS=Параметры] }

    { 52  ;2   ;Field     ;
                CaptionML=[ENU=Closing Entries;
                           RUS=Закрывающие операции];
                OptionCaptionML=[ENU=Include,Exclude;
                                 RUS=Включать,Исключать];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ClosingEntryFilter;
                OnValidate=BEGIN
                             CalculateClosingDateFilter;
                             FindPeriod('=');
                             Amount := CalcDebitAmount;
                           END;
                            }

    { 18  ;2   ;Field     ;
                CaptionML=[ENU=Rounding Factor;
                           RUS=Коэфф. округления];
                OptionCaptionML=[ENU=None,1,1000,1000000;
                                 RUS=Нет,1,1000,1000000];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=RoundingFactor;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'ENU=<Sign><Integer Thousand><Decimals,2>;RUS=<Sign><Integer Thousand><Decimals,2>';
      Text002@1002 : TextConst 'ENU=You have not yet defined an analysis view.;RUS=Аналитический отчет еще не определен.';
      Text003@1003 : TextConst 'ENU=%1 is not a valid line definition.;RUS=%1 не является допустимым определением строки.';
      Text005@1005 : TextConst 'ENU=1,6,,Debit Dimension 1 Filter;RUS=1,6,,Фильтр измерения 1 для дебета';
      Text006@1006 : TextConst 'ENU=1,6,,Debit Dimension 2 Filter;RUS=1,6,,Фильтр измерения 2 для дебета';
      Text007@1007 : TextConst 'ENU=1,6,,Debit Dimension 3 Filter;RUS=1,6,,Фильтр измерения 3 для дебета';
      Text008@1008 : TextConst 'ENU=1,6,,Credit Dimension 1 Filter;RUS=1,6,,Фильтр измерения 1 для кредита';
      GLSetup@1009 : Record 98;
      GLCorrAnalysisView@1011 : Record 14940;
      GLCorrAnalysisViewEntry@1012 : Record 14942;
      GLCorrAnalysisViewCode@1016 : Code[10];
      LineDimOption@1017 : 'Debit Dimension 1,Debit Dimension 2,Debit Dimension 3,Credit Dimension 1,Credit Dimension 2,Credit Dimension 3';
      LineDimCode@1019 : Text[30];
      PeriodType@1021 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      AmountType@1022 : 'Net Change,Balance at Date';
      RoundingFactor@1023 : 'None,1,1000,1000000';
      ClosingEntryFilter@1028 : 'Include,Exclude';
      DimGroupType@1210003 : 'Debit,Credit';
      DateFilter@1030 : Text;
      ExcludeClosingDateFilter@1032 : Text;
      DebitAccFilter@1033 : Text;
      CreditAccFilter@1210006 : Text;
      DebitDim1Filter@1035 : Text;
      DebitDim2Filter@1036 : Text;
      DebitDim3Filter@1037 : Text;
      CreditDim1Filter@1210002 : Text;
      CreditDim2Filter@1210001 : Text;
      CreditDim3Filter@1210000 : Text;
      BusUnitFilter@1043 : Text;
      Text009@1210005 : TextConst 'ENU=1,6,,Credit Dimension 2 Filter;RUS=1,6,,Фильтр измерения 2 для кредита';
      Text010@1210004 : TextConst 'ENU=1,6,,Credit Dimension 3 Filter;RUS=1,6,,Фильтр измерения 3 для кредита';
      DebitAmount@1210007 : Decimal;
      CreditAmount@1210008 : Decimal;
      StartDate@1210009 : Date;
      EndDate@1210010 : Date;
      CodeEmphasize@19004235 : Boolean INDATASET;
      NameEmphasize@19018670 : Boolean INDATASET;
      NameIndent@19079073 : Integer INDATASET;
      DebitDim1FilterEnable@19070958 : Boolean INDATASET;
      DebitDim2FilterEnable@19045649 : Boolean INDATASET;
      DebitDim3FilterEnable@19059688 : Boolean INDATASET;
      CreditDim1FilterEnable@19068014 : Boolean INDATASET;
      CreditDim2FilterEnable@19015795 : Boolean INDATASET;
      CreditDim3FilterEnable@19050611 : Boolean INDATASET;

    LOCAL PROCEDURE DimCodeToOption@21(DimCode@1000 : Code[30];GroupType@1210000 : 'Debit,Credit') : Integer;
    BEGIN
      CASE GroupType OF
        GroupType::Debit:
          CASE DimCode OF
            '':
              EXIT(-1);
            GLCorrAnalysisView."Debit Dimension 1 Code":
              EXIT(0);
            GLCorrAnalysisView."Debit Dimension 2 Code":
              EXIT(1);
            GLCorrAnalysisView."Debit Dimension 3 Code":
              EXIT(2);
            ELSE
              EXIT(-1);
          END;
        GroupType::Credit:
          CASE DimCode OF
            '':
              EXIT(-1);
            GLCorrAnalysisView."Credit Dimension 1 Code":
              EXIT(3);
            GLCorrAnalysisView."Credit Dimension 2 Code":
              EXIT(4);
            GLCorrAnalysisView."Credit Dimension 3 Code":
              EXIT(5);
            ELSE
              EXIT(-1);
          END;
      END;
    END;

    LOCAL PROCEDURE FindRec@59(DimOption@1000 : 'Debit Dimension 1,Debit Dimension 2,Debit Dimension 3,Credit Dimension 1,Credit Dimension 2,Credit Dimension 3';VAR DimCodeBuf@1001 : Record 367;Which@1002 : Text[250]) : Boolean;
    VAR
      DimVal@1006 : Record 349;
      Found@1008 : Boolean;
    BEGIN
      CASE DimOption OF
        DimOption::"Debit Dimension 1":
          BEGIN
            IF DebitDim1Filter <> '' THEN
              DimVal.SETFILTER(Code,DebitDim1Filter);
            DimVal."Dimension Code" := GLCorrAnalysisView."Debit Dimension 1 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            Found := DimVal.FIND(Which);
            IF Found THEN
              CopyDimValueToBuf(DimVal,DimCodeBuf);
          END;
        DimOption::"Debit Dimension 2":
          BEGIN
            IF DebitDim2Filter <> '' THEN
              DimVal.SETFILTER(Code,DebitDim2Filter);
            DimVal."Dimension Code" := GLCorrAnalysisView."Debit Dimension 2 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            Found := DimVal.FIND(Which);
            IF Found THEN
              CopyDimValueToBuf(DimVal,DimCodeBuf);
          END;
        DimOption::"Debit Dimension 3":
          BEGIN
            IF DebitDim3Filter <> '' THEN
              DimVal.SETFILTER(Code,DebitDim3Filter);
            DimVal."Dimension Code" := GLCorrAnalysisView."Debit Dimension 3 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            Found := DimVal.FIND(Which);
            IF Found THEN
              CopyDimValueToBuf(DimVal,DimCodeBuf);
          END;
        DimOption::"Credit Dimension 1":
          BEGIN
            IF CreditDim1Filter <> '' THEN
              DimVal.SETFILTER(Code,CreditDim1Filter);
            DimVal."Dimension Code" := GLCorrAnalysisView."Credit Dimension 1 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            Found := DimVal.FIND(Which);
            IF Found THEN
              CopyDimValueToBuf(DimVal,DimCodeBuf);
          END;
        DimOption::"Credit Dimension 2":
          BEGIN
            IF CreditDim2Filter <> '' THEN
              DimVal.SETFILTER(Code,CreditDim2Filter);
            DimVal."Dimension Code" := GLCorrAnalysisView."Credit Dimension 2 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            Found := DimVal.FIND(Which);
            IF Found THEN
              CopyDimValueToBuf(DimVal,DimCodeBuf);
          END;
        DimOption::"Credit Dimension 3":
          BEGIN
            IF CreditDim3Filter <> '' THEN
              DimVal.SETFILTER(Code,CreditDim3Filter);
            DimVal."Dimension Code" := GLCorrAnalysisView."Credit Dimension 3 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            Found := DimVal.FIND(Which);
            IF Found THEN
              CopyDimValueToBuf(DimVal,DimCodeBuf);
          END;
      END;
      EXIT(Found);
    END;

    LOCAL PROCEDURE NextRec@60(DimOption@1000 : 'Debit Dimension 1,Debit Dimension 2,Debit Dimension 3,Credit Dimension 1,Credit Dimension 2,Credit Dimension 3';VAR DimCodeBuf@1001 : Record 367;Steps@1002 : Integer) : Integer;
    VAR
      DimVal@1006 : Record 349;
      ResultSteps@1008 : Integer;
    BEGIN
      CASE DimOption OF
        DimOption::"Debit Dimension 1":
          BEGIN
            IF DebitDim1Filter <> '' THEN
              DimVal.SETFILTER(Code,DebitDim1Filter);
            DimVal."Dimension Code" := GLCorrAnalysisView."Debit Dimension 1 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            ResultSteps := DimVal.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyDimValueToBuf(DimVal,DimCodeBuf);
          END;
        DimOption::"Debit Dimension 2":
          BEGIN
            IF DebitDim2Filter <> '' THEN
              DimVal.SETFILTER(Code,DebitDim2Filter);
            DimVal."Dimension Code" := GLCorrAnalysisView."Debit Dimension 2 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            ResultSteps := DimVal.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyDimValueToBuf(DimVal,DimCodeBuf);
          END;
        DimOption::"Debit Dimension 3":
          BEGIN
            IF DebitDim3Filter <> '' THEN
              DimVal.SETFILTER(Code,DebitDim3Filter);
            DimVal."Dimension Code" := GLCorrAnalysisView."Debit Dimension 3 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            ResultSteps := DimVal.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyDimValueToBuf(DimVal,DimCodeBuf);
          END;
        DimOption::"Credit Dimension 1":
          BEGIN
            IF CreditDim1Filter <> '' THEN
              DimVal.SETFILTER(Code,CreditDim1Filter);
            DimVal."Dimension Code" := GLCorrAnalysisView."Credit Dimension 1 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            ResultSteps := DimVal.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyDimValueToBuf(DimVal,DimCodeBuf);
          END;
        DimOption::"Credit Dimension 2":
          BEGIN
            IF CreditDim2Filter <> '' THEN
              DimVal.SETFILTER(Code,CreditDim2Filter);
            DimVal."Dimension Code" := GLCorrAnalysisView."Credit Dimension 2 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            ResultSteps := DimVal.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyDimValueToBuf(DimVal,DimCodeBuf);
          END;
        DimOption::"Credit Dimension 3":
          BEGIN
            IF CreditDim3Filter <> '' THEN
              DimVal.SETFILTER(Code,CreditDim3Filter);
            DimVal."Dimension Code" := GLCorrAnalysisView."Credit Dimension 3 Code";
            DimVal.SETRANGE("Dimension Code",DimVal."Dimension Code");
            DimVal.Code := DimCodeBuf.Code;
            ResultSteps := DimVal.NEXT(Steps);
            IF ResultSteps <> 0 THEN
              CopyDimValueToBuf(DimVal,DimCodeBuf);
          END;
      END;
      EXIT(ResultSteps);
    END;

    LOCAL PROCEDURE CopyDimValueToBuf@9(VAR TheDimVal@1000 : Record 349;VAR TheDimCodeBuf@1001 : Record 367);
    BEGIN
      WITH TheDimCodeBuf DO BEGIN
        INIT;
        Code := TheDimVal.Code;
        Name := TheDimVal.Name;
        Totaling := TheDimVal.Totaling;
        Indentation := TheDimVal.Indentation;
        "Show in Bold" :=
          TheDimVal."Dimension Value Type" <> TheDimVal."Dimension Value Type"::Standard;
      END;
    END;

    LOCAL PROCEDURE FindPeriod@2(SearchText@1000 : Code[10]);
    VAR
      Calendar@1001 : Record 2000000007;
      PeriodFormMgt@1002 : Codeunit 359;
    BEGIN
      IF DateFilter <> '' THEN BEGIN
        Calendar.SETFILTER("Period Start",DateFilter);
        IF NOT PeriodFormMgt.FindDate('+',Calendar,PeriodType) THEN
          PeriodFormMgt.FindDate('+',Calendar,PeriodType::Day);
        Calendar.SETRANGE("Period Start");
      END;
      IF PeriodFormMgt.FindDate(SearchText,Calendar,PeriodType) THEN
        IF ClosingEntryFilter = ClosingEntryFilter::Include THEN
          Calendar."Period End" := CLOSINGDATE(Calendar."Period End");
      IF AmountType = AmountType::"Net Change" THEN BEGIN
        GLCorrAnalysisViewEntry.SETRANGE("Posting Date",Calendar."Period Start",Calendar."Period End");
        IF GLCorrAnalysisViewEntry.GETRANGEMIN("Posting Date") = GLCorrAnalysisViewEntry.GETRANGEMAX("Posting Date") THEN
          GLCorrAnalysisViewEntry.SETRANGE("Posting Date",GLCorrAnalysisViewEntry.GETRANGEMIN("Posting Date"));
      END ELSE
        GLCorrAnalysisViewEntry.SETRANGE("Posting Date",0D,Calendar."Period End");

      DateFilter := GLCorrAnalysisViewEntry.GETFILTER("Posting Date");
      StartDate := GLCorrAnalysisViewEntry.GETRANGEMIN("Posting Date");
      EndDate := GLCorrAnalysisViewEntry.GETRANGEMAX("Posting Date");
    END;

    LOCAL PROCEDURE CalculateClosingDateFilter@45();
    VAR
      AccountingPeriod@1000 : Record 50;
      FirstRec@1001 : Boolean;
    BEGIN
      IF ClosingEntryFilter = ClosingEntryFilter::Include THEN
        ExcludeClosingDateFilter := ''
      ELSE BEGIN
        AccountingPeriod.SETCURRENTKEY("New Fiscal Year");
        AccountingPeriod.SETRANGE("New Fiscal Year",TRUE);
        FirstRec := TRUE;
        IF AccountingPeriod.FIND('-') THEN
          REPEAT
            IF FirstRec THEN
              ExcludeClosingDateFilter :=
                STRSUBSTNO('<>%1',CLOSINGDATE(AccountingPeriod."Starting Date" - 1))
            ELSE
              ExcludeClosingDateFilter :=
                ExcludeClosingDateFilter + STRSUBSTNO('&<>%1',CLOSINGDATE(AccountingPeriod."Starting Date" - 1));
            FirstRec := FALSE;
          UNTIL AccountingPeriod.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE GetDimSelection@3(OldDimSelCode@1000 : Text[30]) : Text[30];
    VAR
      DimSelection@1001 : Page 568;
    BEGIN
      CASE DimGroupType OF
        DimGroupType::Debit:
          BEGIN
            IF GLCorrAnalysisView."Debit Dimension 1 Code" <> '' THEN
              DimSelection.InsertDimSelBuf(FALSE,GLCorrAnalysisView."Debit Dimension 1 Code",'');
            IF GLCorrAnalysisView."Debit Dimension 2 Code" <> '' THEN
              DimSelection.InsertDimSelBuf(FALSE,GLCorrAnalysisView."Debit Dimension 2 Code",'');
            IF GLCorrAnalysisView."Debit Dimension 3 Code" <> '' THEN
              DimSelection.InsertDimSelBuf(FALSE,GLCorrAnalysisView."Debit Dimension 3 Code",'');
          END;
        DimGroupType::Credit:
          BEGIN
            IF GLCorrAnalysisView."Credit Dimension 1 Code" <> '' THEN
              DimSelection.InsertDimSelBuf(FALSE,GLCorrAnalysisView."Credit Dimension 1 Code",'');
            IF GLCorrAnalysisView."Credit Dimension 2 Code" <> '' THEN
              DimSelection.InsertDimSelBuf(FALSE,GLCorrAnalysisView."Credit Dimension 2 Code",'');
            IF GLCorrAnalysisView."Credit Dimension 3 Code" <> '' THEN
              DimSelection.InsertDimSelBuf(FALSE,GLCorrAnalysisView."Credit Dimension 3 Code",'');
          END;
      END;
      DimSelection.LOOKUPMODE := TRUE;
      IF DimSelection.RUNMODAL = ACTION::LookupOK THEN
        EXIT(DimSelection.GetDimSelCode);

      EXIT(OldDimSelCode);
    END;

    LOCAL PROCEDURE LookUpCode@4(DimCode@1001 : Text[30];Code@1002 : Text[30]);
    VAR
      DimVal@1005 : Record 349;
      DimValList@1006 : Page 560;
    BEGIN
      DimVal.SETRANGE("Dimension Code",DimCode);
      DimVal.GET(DimCode,Code);
      DimValList.SETTABLEVIEW(DimVal);
      DimValList.SETRECORD(DimVal);
      DimValList.RUNMODAL;
    END;

    LOCAL PROCEDURE LookUpDimFilter@57(Dim@1000 : Code[20];VAR Text@1001 : Text[250]) : Boolean;
    VAR
      DimVal@1002 : Record 349;
      DimValList@1003 : Page 560;
    BEGIN
      IF Dim = '' THEN
        EXIT(FALSE);
      DimValList.LOOKUPMODE(TRUE);
      DimVal.SETRANGE("Dimension Code",Dim);
      DimValList.SETTABLEVIEW(DimVal);
      IF DimValList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        DimValList.GETRECORD(DimVal);
        Text := DimValList.GetSelectionFilter;
        EXIT(TRUE);
      END;
      EXIT(FALSE)
    END;

    LOCAL PROCEDURE SetCommonFilters@15(VAR TheGLCorrAnalysisViewEntry@1000 : Record 14942);
    VAR
      DateFilter2@1001 : Text;
    BEGIN
      WITH TheGLCorrAnalysisViewEntry DO BEGIN
        IF DateFilter = '' THEN
          DateFilter2 := ExcludeClosingDateFilter
        ELSE BEGIN
          IF AmountType = AmountType::"Net Change" THEN
            DateFilter2 := DateFilter
          ELSE BEGIN
            SETFILTER("Posting Date",DateFilter);
            DateFilter2 := STRSUBSTNO('..%1',GETRANGEMAX("Posting Date"));
          END;
          IF ExcludeClosingDateFilter <> '' THEN
            DateFilter2 := DateFilter2 + '&' + ExcludeClosingDateFilter;
        END;
        RESET;
        SETRANGE("G/L Corr. Analysis View Code",GLCorrAnalysisView.Code);
        IF BusUnitFilter <> '' THEN
          SETFILTER("Business Unit Code",BusUnitFilter);
        IF DebitAccFilter <> '' THEN
          SETFILTER("Debit Account No.",DebitAccFilter);
        IF CreditAccFilter <> '' THEN
          SETFILTER("Credit Account No.",CreditAccFilter);
        SETFILTER("Posting Date",DateFilter2);
        IF DebitDim1Filter <> '' THEN
          SETFILTER("Debit Dimension 1 Value Code",DebitDim1Filter);
        IF DebitDim2Filter <> '' THEN
          SETFILTER("Debit Dimension 2 Value Code",DebitDim2Filter);
        IF DebitDim3Filter <> '' THEN
          SETFILTER("Debit Dimension 3 Value Code",DebitDim3Filter);
        IF CreditDim1Filter <> '' THEN
          SETFILTER("Credit Dimension 1 Value Code",CreditDim1Filter);
        IF CreditDim2Filter <> '' THEN
          SETFILTER("Credit Dimension 2 Value Code",CreditDim2Filter);
        IF CreditDim3Filter <> '' THEN
          SETFILTER("Credit Dimension 3 Value Code",CreditDim3Filter);
      END;
    END;

    LOCAL PROCEDURE SetDimFilters@17(VAR TheGLCorrAnalysisViewEntry@1000 : Record 14942;DimOption@1210000 : 'Debit Dimension 1,Debit Dimension 2,Debit Dimension 3,Credit Dimension 1,Credit Dimension 2,Credit Dimension 3');
    VAR
      DimCodeBuf@1003 : Record 367;
    BEGIN
      DimCodeBuf := Rec;

      CASE DimOption OF
        DimOption::"Debit Dimension 1":
          IF DimCodeBuf.Totaling = '' THEN
            TheGLCorrAnalysisViewEntry.SETRANGE("Debit Dimension 1 Value Code",DimCodeBuf.Code)
          ELSE
            TheGLCorrAnalysisViewEntry.SETFILTER("Debit Dimension 1 Value Code",DimCodeBuf.Totaling);
        DimOption::"Debit Dimension 2":
          IF DimCodeBuf.Totaling = '' THEN
            TheGLCorrAnalysisViewEntry.SETRANGE("Debit Dimension 2 Value Code",DimCodeBuf.Code)
          ELSE
            TheGLCorrAnalysisViewEntry.SETFILTER("Debit Dimension 2 Value Code",DimCodeBuf.Totaling);
        DimOption::"Debit Dimension 3":
          IF DimCodeBuf.Totaling = '' THEN
            TheGLCorrAnalysisViewEntry.SETRANGE("Debit Dimension 3 Value Code",DimCodeBuf.Code)
          ELSE
            TheGLCorrAnalysisViewEntry.SETFILTER("Debit Dimension 3 Value Code",DimCodeBuf.Totaling);
        DimOption::"Credit Dimension 1":
          IF DimCodeBuf.Totaling = '' THEN
            TheGLCorrAnalysisViewEntry.SETRANGE("Credit Dimension 1 Value Code",DimCodeBuf.Code)
          ELSE
            TheGLCorrAnalysisViewEntry.SETFILTER("Credit Dimension 1 Value Code",DimCodeBuf.Totaling);
        DimOption::"Credit Dimension 2":
          IF DimCodeBuf.Totaling = '' THEN
            TheGLCorrAnalysisViewEntry.SETRANGE("Credit Dimension 2 Value Code",DimCodeBuf.Code)
          ELSE
            TheGLCorrAnalysisViewEntry.SETFILTER("Credit Dimension 2 Value Code",DimCodeBuf.Totaling);
        DimOption::"Credit Dimension 3":
          IF DimCodeBuf.Totaling = '' THEN
            TheGLCorrAnalysisViewEntry.SETRANGE("Credit Dimension 3 Value Code",DimCodeBuf.Code)
          ELSE
            TheGLCorrAnalysisViewEntry.SETFILTER("Credit Dimension 3 Value Code",DimCodeBuf.Totaling);
        ELSE // filter for non-existing entries
          TheGLCorrAnalysisViewEntry.SETRANGE("Entry No.",-1);
      END;
    END;

    LOCAL PROCEDURE DrillDown@30(GroupType@1210001 : 'Debit,Credit');
    VAR
      GLCorrByDim@1210000 : Page 14945;
    BEGIN
      GLCorrAnalysisViewEntry.RESET;
      SetCommonFilters(GLCorrAnalysisViewEntry);
      SetDimFilters(GLCorrAnalysisViewEntry,DimCodeToOption(LineDimCode,GroupType));
      GLCorrByDim.InitParameters(GLCorrAnalysisViewEntry);
      GLCorrByDim.RUNMODAL;
    END;

    LOCAL PROCEDURE ValidateGLCorrAnalysisViewCode@11();
    VAR
      GLCorrAnalysisViewFilter@1000 : Record 364;
    BEGIN
      GLCorrAnalysisView.Code := GLCorrAnalysisViewCode;
      IF NOT GLCorrAnalysisView.FIND('=<>') THEN
        ERROR(Text002);
      GLCorrAnalysisViewCode := GLCorrAnalysisView.Code;
      DebitDim1Filter := '';
      DebitDim2Filter := '';
      DebitDim3Filter := '';
      CreditDim1Filter := '';
      CreditDim2Filter := '';
      CreditDim3Filter := '';
      DebitDim1Filter := GETFILTER("Dimension 1 Value Filter");
      DebitDim2Filter := GETFILTER("Dimension 2 Value Filter");
      DebitDim3Filter := GETFILTER("Dimension 3 Value Filter");
      CreditDim1Filter := GETFILTER("Credit Dim. 1 Value Filter");
      CreditDim2Filter := GETFILTER("Credit Dim. 2 Value Filter");
      CreditDim3Filter := GETFILTER("Credit Dim. 3 Value Filter");

      DebitDim1FilterEnable :=
        (GLCorrAnalysisView."Debit Dimension 1 Code" <> '') AND
        (GETFILTER("Dimension 1 Value Filter") = '');
      DebitDim2FilterEnable :=
        (GLCorrAnalysisView."Debit Dimension 2 Code" <> '') AND
        (GETFILTER("Dimension 2 Value Filter") = '');
      DebitDim3FilterEnable :=
        (GLCorrAnalysisView."Debit Dimension 3 Code" <> '') AND
        (GETFILTER("Dimension 3 Value Filter") = '');
      CreditDim1FilterEnable :=
        (GLCorrAnalysisView."Credit Dimension 1 Code" <> '') AND
        (GETFILTER("Credit Dim. 1 Value Filter") = '');
      CreditDim2FilterEnable :=
        (GLCorrAnalysisView."Credit Dimension 2 Code" <> '') AND
        (GETFILTER("Credit Dim. 2 Value Filter") = '');
      CreditDim3FilterEnable :=
        (GLCorrAnalysisView."Credit Dimension 3 Code" <> '') AND
        (GETFILTER("Credit Dim. 3 Value Filter") = '');

      IF DebitDim1FilterEnable THEN
        IF GLCorrAnalysisViewFilter.GET(GLCorrAnalysisView.Code,GLCorrAnalysisView."Debit Dimension 1 Code") THEN
          DebitDim1Filter := GLCorrAnalysisViewFilter."Dimension Value Filter";

      IF DebitDim2FilterEnable THEN
        IF GLCorrAnalysisViewFilter.GET(GLCorrAnalysisView.Code,GLCorrAnalysisView."Debit Dimension 2 Code") THEN
          DebitDim2Filter := GLCorrAnalysisViewFilter."Dimension Value Filter";

      IF DebitDim3FilterEnable THEN
        IF GLCorrAnalysisViewFilter.GET(GLCorrAnalysisView.Code,GLCorrAnalysisView."Debit Dimension 3 Code") THEN
          DebitDim3Filter := GLCorrAnalysisViewFilter."Dimension Value Filter";

      IF CreditDim1FilterEnable THEN
        IF GLCorrAnalysisViewFilter.GET(GLCorrAnalysisView.Code,GLCorrAnalysisView."Credit Dimension 1 Code") THEN
          CreditDim1Filter := GLCorrAnalysisViewFilter."Dimension Value Filter";

      IF CreditDim2FilterEnable THEN
        IF GLCorrAnalysisViewFilter.GET(GLCorrAnalysisView.Code,GLCorrAnalysisView."Credit Dimension 2 Code") THEN
          CreditDim2Filter := GLCorrAnalysisViewFilter."Dimension Value Filter";

      IF CreditDim3FilterEnable THEN
        IF GLCorrAnalysisViewFilter.GET(GLCorrAnalysisView.Code,GLCorrAnalysisView."Credit Dimension 3 Code") THEN
          CreditDim3Filter := GLCorrAnalysisViewFilter."Dimension Value Filter";
    END;

    LOCAL PROCEDURE ValidateLineDimCode@19();
    BEGIN
      IF (UPPERCASE(LineDimCode) <> GLCorrAnalysisView."Debit Dimension 1 Code") AND
         (UPPERCASE(LineDimCode) <> GLCorrAnalysisView."Debit Dimension 2 Code") AND
         (UPPERCASE(LineDimCode) <> GLCorrAnalysisView."Debit Dimension 3 Code") AND
         (UPPERCASE(LineDimCode) <> GLCorrAnalysisView."Credit Dimension 1 Code") AND
         (UPPERCASE(LineDimCode) <> GLCorrAnalysisView."Credit Dimension 2 Code") AND
         (UPPERCASE(LineDimCode) <> GLCorrAnalysisView."Credit Dimension 3 Code") AND
         (LineDimCode <> '')
      THEN BEGIN
        MESSAGE(Text003,LineDimCode);
        LineDimCode := '';
      END;
      LineDimOption := DimCodeToOption(LineDimCode,DimGroupType);
      DateFilter := GLCorrAnalysisViewEntry.GETFILTER("Posting Date");
    END;

    LOCAL PROCEDURE CalcDebitAmount@27() : Decimal;
    VAR
      Amount@1001 : Decimal;
    BEGIN
      GLCorrAnalysisViewEntry.RESET;
      SetCommonFilters(GLCorrAnalysisViewEntry);
      SetDimFilters(GLCorrAnalysisViewEntry,DimCodeToOption(LineDimCode,DimGroupType::Debit));

      GLCorrAnalysisViewEntry.CALCSUMS(Amount);
      Amount := GLCorrAnalysisViewEntry.Amount;

      EXIT(RoundAmount(Amount));
    END;

    LOCAL PROCEDURE CalcCreditAmount@1210004() : Decimal;
    VAR
      Amount@1001 : Decimal;
    BEGIN
      GLCorrAnalysisViewEntry.RESET;
      SetCommonFilters(GLCorrAnalysisViewEntry);
      SetDimFilters(GLCorrAnalysisViewEntry,DimCodeToOption(LineDimCode,DimGroupType::Credit));

      GLCorrAnalysisViewEntry.CALCSUMS(Amount);
      Amount := GLCorrAnalysisViewEntry.Amount;

      EXIT(RoundAmount(Amount));
    END;

    LOCAL PROCEDURE GetCaptionClass@12(GLCorrAnalysisViewDimType@1000 : Integer) : Text[250];
    BEGIN
      IF GLCorrAnalysisView.Code <> GLCorrAnalysisViewCode THEN
        GLCorrAnalysisView.GET(GLCorrAnalysisViewCode);
      CASE GLCorrAnalysisViewDimType OF
        1:
          BEGIN
            IF GLCorrAnalysisView."Debit Dimension 1 Code" <> '' THEN
              EXIT('1,6,' + GLCorrAnalysisView."Debit Dimension 1 Code");

            EXIT(Text005);
          END;
        2:
          BEGIN
            IF GLCorrAnalysisView."Debit Dimension 2 Code" <> '' THEN
              EXIT('1,6,' + GLCorrAnalysisView."Debit Dimension 2 Code");

            EXIT(Text006);
          END;
        3:
          BEGIN
            IF GLCorrAnalysisView."Debit Dimension 3 Code" <> '' THEN
              EXIT('1,6,' + GLCorrAnalysisView."Debit Dimension 3 Code");

            EXIT(Text007);
          END;
        4:
          BEGIN
            IF GLCorrAnalysisView."Credit Dimension 1 Code" <> '' THEN
              EXIT('1,6,' + GLCorrAnalysisView."Credit Dimension 1 Code");

            EXIT(Text008);
          END;
        5:
          BEGIN
            IF GLCorrAnalysisView."Credit Dimension 2 Code" <> '' THEN
              EXIT('1,6,' + GLCorrAnalysisView."Credit Dimension 2 Code");

            EXIT(Text009);
          END;
        6:
          BEGIN
            IF GLCorrAnalysisView."Credit Dimension 3 Code" <> '' THEN
              EXIT('1,6,' + GLCorrAnalysisView."Credit Dimension 3 Code");

            EXIT(Text010);
          END;
      END;
    END;

    PROCEDURE FindFirstDimension@1210000() : Code[20];
    BEGIN
      CASE DimGroupType OF
        DimGroupType::Debit:
          BEGIN
            IF GLCorrAnalysisView."Debit Dimension 1 Code" <> '' THEN
              EXIT(GLCorrAnalysisView."Debit Dimension 1 Code");
            IF GLCorrAnalysisView."Debit Dimension 2 Code" <> '' THEN
              EXIT(GLCorrAnalysisView."Debit Dimension 2 Code");
            IF GLCorrAnalysisView."Debit Dimension 3 Code" <> '' THEN
              EXIT(GLCorrAnalysisView."Debit Dimension 3 Code");
          END;
        DimGroupType::Credit:
          BEGIN
            IF GLCorrAnalysisView."Credit Dimension 1 Code" <> '' THEN
              EXIT(GLCorrAnalysisView."Credit Dimension 1 Code");
            IF GLCorrAnalysisView."Credit Dimension 2 Code" <> '' THEN
              EXIT(GLCorrAnalysisView."Credit Dimension 2 Code");
            IF GLCorrAnalysisView."Credit Dimension 3 Code" <> '' THEN
              EXIT(GLCorrAnalysisView."Credit Dimension 3 Code");
          END;
      END;

      EXIT('');
    END;

    PROCEDURE Print@1210001();
    VAR
      AnalyticAccountCardByDim@1210001 : Report 14940;
      ReportPeriodType@1210000 : 'Month,Quarter,Year';
    BEGIN
      CASE PeriodType OF
        PeriodType::Month:
          ReportPeriodType := ReportPeriodType::Month;
        PeriodType::Quarter:
          ReportPeriodType := ReportPeriodType::Quarter;
        PeriodType::Year:
          ReportPeriodType := ReportPeriodType::Year;
        ELSE
          ReportPeriodType := ReportPeriodType::Month;
      END;

      AnalyticAccountCardByDim.SetParameters(
        GLCorrAnalysisViewCode,
        DimGroupType,
        LineDimCode,
        BusUnitFilter,
        DebitAccFilter,
        StartDate,
        EndDate,
        DebitDim1Filter,
        DebitDim2Filter,
        DebitDim3Filter,
        CreditDim1Filter,
        CreditDim2Filter,
        CreditDim3Filter);

      AnalyticAccountCardByDim.RUNMODAL;
    END;

    PROCEDURE SetAnalysisViewCode@14(NextAnalysisViewCode@1000 : Code[10]);
    BEGIN
      GLCorrAnalysisViewCode := NextAnalysisViewCode;
    END;

    LOCAL PROCEDURE DimGroupTypeOnAfterValidate@19005237();
    BEGIN
      LineDimCode := FindFirstDimension;
      LineDimOption := DimCodeToOption(LineDimCode,DimGroupType);
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE CodeOnFormat@19037745();
    BEGIN
      CodeEmphasize := "Show in Bold";
    END;

    LOCAL PROCEDURE NameOnFormat@19039177();
    BEGIN
      NameEmphasize := "Show in Bold";
      NameIndent := Indentation;
    END;

    LOCAL PROCEDURE RoundAmount@1210003(Amount@1210000 : Decimal) : Decimal;
    BEGIN
      CASE RoundingFactor OF
        RoundingFactor::"1":
          Amount := ROUND(Amount,1);
        RoundingFactor::"1000":
          Amount := ROUND(Amount / 1000,0.1);
        RoundingFactor::"1000000":
          Amount := ROUND(Amount / 1000000,0.1);
      END;
      EXIT(Amount);
    END;

    BEGIN
    END.
  }
}

