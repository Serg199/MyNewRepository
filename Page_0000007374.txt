OBJECT Page 7374 Bin Contents
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Bin Contents;
               RUS=Содержимое ячейки];
    SaveValues=Yes;
    InsertAllowed=No;
    SourceTable=Table7302;
    DataCaptionExpr=DataCaption;
    PageType=Worksheet;
    OnOpenPage=BEGIN
                 ItemDescription := '';
                 GetWhseLocation(LocationCode,ZoneCode);
               END;

    OnAfterGetCurrRecord=BEGIN
                           GetItemDescr("Item No.","Variant Code",ItemDescription);
                           DataCaption := STRSUBSTNO('%1 ',"Bin Code");
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 55      ;1   ;ActionGroup;
                      CaptionML=[ENU=&Line;
                                 RUS=&Строка];
                      Image=Line }
      { 57      ;2   ;Action    ;
                      CaptionML=[ENU=Warehouse Entries;
                                 RUS=Складские операции];
                      RunObject=Page 7318;
                      RunPageView=SORTING(Item No.,Bin Code,Location Code,Variant Code);
                      RunPageLink=Item No.=FIELD(Item No.),
                                  Location Code=FIELD(Location Code),
                                  Bin Code=FIELD(Bin Code),
                                  Variant Code=FIELD(Variant Code);
                      Image=BinLedger }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 4   ;1   ;Group     ;
                CaptionML=[ENU=Options;
                           RUS=Параметры] }

    { 20  ;2   ;Field     ;
                CaptionML=[ENU=Location Filter;
                           RUS=Фильтр по складу];
                SourceExpr=LocationCode;
                OnValidate=BEGIN
                             ZoneCode := '';
                             IF LocationCode <> '' THEN BEGIN
                               IF WMSMgt.LocationIsAllowed(LocationCode) THEN BEGIN
                                 Location.GET(LocationCode);
                                 Location.TESTFIELD("Bin Mandatory",TRUE);
                               END ELSE
                                 ERROR(Text000,USERID);
                             END;
                             DefFilter;
                             LocationCodeOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           Location.RESET;
                           Location.SETRANGE("Bin Mandatory",TRUE);
                           IF LocationCode <> '' THEN
                             Location.Code := LocationCode;
                           IF PAGE.RUNMODAL(PAGE::"Locations with Warehouse List",Location) = ACTION::LookupOK THEN BEGIN
                             Location.TESTFIELD("Bin Mandatory",TRUE);
                             LocationCode := Location.Code;
                             DefFilter;
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 45  ;2   ;Field     ;
                CaptionML=[ENU=Zone Filter;
                           RUS=Фильтр по зоне];
                SourceExpr=ZoneCode;
                OnValidate=BEGIN
                             DefFilter;
                             ZoneCodeOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           Zone.RESET;
                           IF ZoneCode <> '' THEN
                             Zone.Code := ZoneCode;
                           IF LocationCode <> '' THEN
                             Zone.SETRANGE("Location Code",LocationCode);
                           IF PAGE.RUNMODAL(0,Zone) = ACTION::LookupOK THEN BEGIN
                             ZoneCode := Zone.Code;
                             LocationCode := Zone."Location Code";
                             DefFilter;
                           END;
                           CurrPage.UPDATE(TRUE);
                         END;
                          }

    { 37  ;1   ;Group     ;
                GroupType=Repeater }

    { 50  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the location code of the bin.;
                           RUS=Определяет код склада ячейки.];
                SourceExpr="Location Code";
                Visible=FALSE }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the zone code of the bin.;
                           RUS=Определяет код зоны ячейки.];
                SourceExpr="Zone Code";
                Visible=FALSE }

    { 1   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the bin code.;
                           RUS=Определяет код ячейки.];
                SourceExpr="Bin Code";
                OnValidate=BEGIN
                             CheckQty;
                           END;
                            }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the item that will be stored in the bin.;
                           RUS=Определяет номер товара, который будет храниться в ячейке.];
                SourceExpr="Item No.";
                OnValidate=BEGIN
                             CheckQty;
                           END;
                            }

    { 23  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the variant code for the item in the bin.;
                           RUS=Определяет код варианта товара в ячейке.];
                SourceExpr="Variant Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             CheckQty;
                           END;
                            }

    { 39  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the unit of measure code of the item in the bin.;
                           RUS=Определяет код единицы измерения товара в ячейке.];
                SourceExpr="Unit of Measure Code" }

    { 28  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of base units of measure that are in the unit of measure specified for the item in the bin.;
                           RUS=Определяет количество базовых единиц измерения, соответствующее одной единице измерения, указанной для товара в ячейке.];
                SourceExpr="Qty. per Unit of Measure";
                Visible=FALSE;
                OnValidate=BEGIN
                             CheckQty;
                           END;
                            }

    { 59  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the bin is the default bin for the associated item.;
                           RUS=Указывает, является ли ячейка ячейкой по умолчанию для соответствующего товара.];
                SourceExpr=Default }

    { 30  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the bin is used as a dedicated bin, which means that its bin content is available only to certain resources.;
                           RUS="Указывает, используется ли ячейка как выделенная ячейка; это означает, что ее содержимое доступно только для определенных ресурсов."];
                SourceExpr=Dedicated }

    { 9   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the warehouse class code. Only items with the same warehouse class can be stored in this bin.;
                           RUS=Определяет код класса склада. В этой ячейке могут храниться только товары, имеющие одинаковый код класса склада.];
                SourceExpr="Warehouse Class Code" }

    { 7   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the bin type that was selected for this bin.;
                           RUS=Определяет код типа ячейки, выбранного для этой ячейки.];
                SourceExpr="Bin Type Code" }

    { 17  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the bin ranking.;
                           RUS=Определяет рейтинг ячейки.];
                SourceExpr="Bin Ranking" }

    { 11  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how the movement of a particular item, or bin content, into or out of this bin, is blocked.;
                           RUS=Определяет порядок блокировки перемещения конкретного товара или содержимого ячейки в эту ячейку или из нее.];
                SourceExpr="Block Movement" }

    { 13  ;2   ;Field     ;
                ToolTipML=[ENU=Indicates the minimum number of units of the item that you want to have in the bin at all times.;
                           RUS=Определяет минимальное количество единиц товара, которое постоянно должно быть в наличии в ячейке.];
                SourceExpr="Min. Qty." }

    { 15  ;2   ;Field     ;
                ToolTipML=[ENU=Indicates the maximum number of units of the item that you want to have in the bin.;
                           RUS=Показывает количество единиц товара, которое должно быть в наличии в ячейке.];
                SourceExpr="Max. Qty." }

    { 19  ;2   ;Field     ;
                CaptionML=[ENU=Quantity;
                           RUS=Кол-во];
                DecimalPlaces=0:5;
                SourceExpr=CalcQtyUOM }

    { 61  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many units of the item, in the base unit of measure, are stored in the bin.;
                           RUS=Определяет количество базовых единиц измерения, хранящихся в ячейке.];
                SourceExpr="Quantity (Base)" }

    { 63  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many units of the item, in the base unit of measure, will be picked from the bin.;
                           RUS=Определяет количество базовых единиц измерения, которое будет подобрано из ячейки.];
                SourceExpr="Pick Quantity (Base)" }

    { 6   ;2   ;Field     ;
                SourceExpr="ATO Components Pick Qty (Base)" }

    { 65  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many item units, in the base unit of measure, will be posted on journal lines as negative quantities.;
                           RUS=Определяет количество базовых единиц измерения, которое будет учтено в строках журнала как расход (отрицательное количество).];
                SourceExpr="Negative Adjmt. Qty. (Base)" }

    { 67  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many units of the item, in the base unit of measure, will be put away in the bin.;
                           RUS=Определяет количество базовых единиц измерения, которое будет размещено в ячейке.];
                SourceExpr="Put-away Quantity (Base)" }

    { 69  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many item units, in the base unit of measure, will be posted on journal lines as positive quantities.;
                           RUS=Определяет количество базовых единиц измерения, которое будет учтено в строках журнала как приход (положительное количество).];
                SourceExpr="Positive Adjmt. Qty. (Base)" }

    { 47  ;2   ;Field     ;
                CaptionML=[ENU=Available Qty. to Take;
                           RUS=Доступное кол-во];
                ToolTipML=[ENU=Specifies the quantity of the item that is available in the bin.;
                           RUS=Определяет количество товара, доступное в ячейке.];
                DecimalPlaces=0:5;
                SourceExpr=CalcQtyAvailToTakeUOM;
                Editable=FALSE }

    { 43  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that the item (bin content) has been associated with this bin, and that the bin should normally contain the item.;
                           RUS=Указывает, что товар (содержимое ячейки) закреплен за этой ячейкой, и что обычно ячейка должна содержать именно этот товар.];
                SourceExpr=Fixed }

    { 56  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the bin content is in a cross-dock bin.;
                           RUS=Указывает, находится ли содержимое ячейки в ячейке переброски.];
                SourceExpr="Cross-Dock Bin" }

    { 49  ;1   ;Group      }

    { 1903651201;2;Group  ;
                GroupType=FixedLayout }

    { 1900206101;3;Group  ;
                CaptionML=[ENU=Item Description;
                           RUS=Описание товара] }

    { 54  ;4   ;Field     ;
                SourceExpr=ItemDescription;
                Editable=FALSE;
                ShowCaption=No }

    { 1900205901;3;Group  ;
                CaptionML=[ENU=Qty. on Adjustment Bin;
                           RUS=Кол-во в ячейке для коррекций] }

    { 52  ;4   ;Field     ;
                CaptionML=[ENU=Qty. on Adjustment Bin;
                           RUS=Кол-во в ячейке для коррекций];
                DecimalPlaces=0:5;
                SourceExpr=CalcQtyonAdjmtBin;
                Editable=FALSE;
                OnDrillDown=VAR
                              WhseEntry@1001 : Record 7312;
                            BEGIN
                              LocationGet("Location Code");
                              WhseEntry.SETCURRENTKEY(
                                "Item No.","Bin Code","Location Code","Variant Code","Unit of Measure Code");
                              WhseEntry.SETRANGE("Item No.","Item No.");
                              WhseEntry.SETRANGE("Bin Code",AdjmtLocation."Adjustment Bin Code");
                              WhseEntry.SETRANGE("Location Code","Location Code");
                              WhseEntry.SETRANGE("Variant Code","Variant Code");
                              WhseEntry.SETRANGE("Unit of Measure Code","Unit of Measure Code");

                              PAGE.RUNMODAL(PAGE::"Warehouse Entries",WhseEntry);
                            END;
                             }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 2   ;1   ;Part      ;
                SubPageLink=Item No.=FIELD(Item No.),
                            Variant Code=FIELD(Variant Code),
                            Location Code=FIELD(Location Code);
                PagePartID=Page9126;
                Visible=false;
                PartType=Page }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Location@1001 : Record 14;
      AdjmtLocation@1006 : Record 14;
      Zone@1002 : Record 7300;
      WMSMgt@1003 : Codeunit 7302;
      LocationCode@1009 : Code[10];
      ZoneCode@1010 : Code[10];
      DataCaption@1012 : Text[80];
      ItemDescription@1000 : Text[50];
      Text000@1004 : TextConst 'ENU=Location code is not allowed for user %1.;RUS=Код склада не разрешен для пользователя %1.';
      LocFilter@1005 : Text[250];

    LOCAL PROCEDURE DefFilter@1();
    BEGIN
      FILTERGROUP := 2;
      IF LocationCode <> '' THEN
        SETRANGE("Location Code",LocationCode)
      ELSE BEGIN
        CLEAR(LocFilter);
        CLEAR(Location);
        Location.SETRANGE("Bin Mandatory",TRUE);
        IF Location.FIND('-') THEN
          REPEAT
            IF WMSMgt.LocationIsAllowed(Location.Code) THEN
              LocFilter := LocFilter + Location.Code + '|';
          UNTIL Location.NEXT = 0;
        IF STRLEN(LocFilter) <> 0 THEN
          LocFilter := COPYSTR(LocFilter,1,(STRLEN(LocFilter) - 1));
        SETFILTER("Location Code",LocFilter);
      END;
      IF ZoneCode <> '' THEN
        SETRANGE("Zone Code",ZoneCode)
      ELSE
        SETRANGE("Zone Code");
      FILTERGROUP := 0;
    END;

    LOCAL PROCEDURE CheckQty@2();
    BEGIN
      TESTFIELD(Quantity,0);
      TESTFIELD("Pick Qty.",0);
      TESTFIELD("Put-away Qty.",0);
      TESTFIELD("Pos. Adjmt. Qty.",0);
      TESTFIELD("Neg. Adjmt. Qty.",0);
    END;

    LOCAL PROCEDURE LocationGet@4(LocationCode@1000 : Code[10]);
    BEGIN
      IF AdjmtLocation.Code <> LocationCode THEN
        AdjmtLocation.GET(LocationCode);
    END;

    LOCAL PROCEDURE LocationCodeOnAfterValidate@19034787();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE ZoneCodeOnAfterValidate@19054042();
    BEGIN
      CurrPage.UPDATE(TRUE);
    END;

    BEGIN
    END.
  }
}

