OBJECT Codeunit 17304 Tax Calc. Dim. Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=09.09.14;
    Time=12:00:00;
    Version List=NAVRU8.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      TaxCalcSection@1003 : Record 17307;
      TempDimBuf1@1004 : TEMPORARY Record 360;
      Text1004@1005 : TextConst 'ENU=Entry %1 %2\Debit %3 Credit %4;RUS=Операция %1 %2\дб. %3 - кр. %4';
      Text1005@1006 : TextConst 'ENU=\\Skip?;RUS=\\Пропустить?';
      GLSetup@1008 : Record 98;
      GLSetupReady@1009 : Boolean;
      Text1006@1010 : TextConst 'ENU=Entry %1 %2 Debit %3;RUS=Операция %1 %2, дб. %3';
      Text1007@1011 : TextConst 'ENU=Entry %1 %2 Credit %3;RUS=Операция %1 %2, кр. %3';
      Text1008@1012 : TextConst 'ENU=Entry %1 %2 Line %3;RUS=Операция %1 %2, строка %3';
      Text1009@1013 : TextConst 'ENU=\Dimension %1 not found.\Filter %2;RUS=\Измерение %1 не найдено.\Фильтр %2';

    PROCEDURE SetDimFilters2TaxGLLine@1(TaxCalcLine@1000 : Record 17310;VAR TaxCalcEntry@1001 : Record 17315);
    VAR
      TaxCalcDimFilter@1002 : Record 17313;
    BEGIN
      TaxCalcDimFilter.SETRANGE("Section Code",TaxCalcLine."Section Code");
      TaxCalcDimFilter.SETRANGE("Register No.",TaxCalcLine.Code);
      TaxCalcDimFilter.SETRANGE(Define,TaxCalcDimFilter.Define::Template);
      TaxCalcDimFilter.SETRANGE("Line No.",TaxCalcLine."Line No.");
      TaxCalcDimFilter.SETFILTER("Dimension Value Filter",'<>''''');
      IF TaxCalcDimFilter.FINDSET THEN BEGIN
        IF TaxCalcSection.Code <> TaxCalcLine."Section Code" THEN
          TaxCalcSection.GET(TaxCalcLine."Section Code");
        REPEAT
          IF TaxCalcSection."Dimension 1 Code" = TaxCalcDimFilter."Dimension Code" THEN
            TaxCalcEntry.SETFILTER("Dimension 1 Value Code",TaxCalcDimFilter."Dimension Value Filter");
          IF TaxCalcSection."Dimension 2 Code" = TaxCalcDimFilter."Dimension Code" THEN
            TaxCalcEntry.SETFILTER("Dimension 2 Value Code",TaxCalcDimFilter."Dimension Value Filter");
          IF TaxCalcSection."Dimension 3 Code" = TaxCalcDimFilter."Dimension Code" THEN
            TaxCalcEntry.SETFILTER("Dimension 3 Value Code",TaxCalcDimFilter."Dimension Value Filter");
          IF TaxCalcSection."Dimension 4 Code" = TaxCalcDimFilter."Dimension Code" THEN
            TaxCalcEntry.SETFILTER("Dimension 4 Value Code",TaxCalcDimFilter."Dimension Value Filter");
        UNTIL TaxCalcDimFilter.NEXT(1) = 0;
      END;
    END;

    PROCEDURE SetDimFilters2TaxCalcItemLine@2(TaxCalcLine@1000 : Record 17310;VAR TaxCalcEntry@1001 : Record 17317);
    VAR
      TaxCalcDimFilter@1210000 : Record 17313;
    BEGIN
      TaxCalcDimFilter.SETRANGE("Section Code",TaxCalcLine."Section Code");
      TaxCalcDimFilter.SETRANGE("Register No.",TaxCalcLine.Code);
      TaxCalcDimFilter.SETRANGE(Define,TaxCalcDimFilter.Define::Template);
      TaxCalcDimFilter.SETRANGE("Line No.",TaxCalcLine."Line No.");
      TaxCalcDimFilter.SETFILTER("Dimension Value Filter",'<>''''');
      IF TaxCalcDimFilter.FINDSET THEN BEGIN
        IF TaxCalcSection.Code <> TaxCalcLine."Section Code" THEN
          TaxCalcSection.GET(TaxCalcLine."Section Code");
        REPEAT
          IF TaxCalcSection."Dimension 1 Code" = TaxCalcDimFilter."Dimension Code" THEN
            TaxCalcEntry.SETFILTER("Dimension 1 Value Code",TaxCalcDimFilter."Dimension Value Filter");
          IF TaxCalcSection."Dimension 2 Code" = TaxCalcDimFilter."Dimension Code" THEN
            TaxCalcEntry.SETFILTER("Dimension 2 Value Code",TaxCalcDimFilter."Dimension Value Filter");
          IF TaxCalcSection."Dimension 3 Code" = TaxCalcDimFilter."Dimension Code" THEN
            TaxCalcEntry.SETFILTER("Dimension 3 Value Code",TaxCalcDimFilter."Dimension Value Filter");
          IF TaxCalcSection."Dimension 4 Code" = TaxCalcDimFilter."Dimension Code" THEN
            TaxCalcEntry.SETFILTER("Dimension 4 Value Code",TaxCalcDimFilter."Dimension Value Filter");
        UNTIL TaxCalcDimFilter.NEXT(1) = 0;
      END;
    END;

    PROCEDURE ValidateTaxCalcDimFilters@3(TaxCalcLine@1000 : Record 17310) : Boolean;
    VAR
      TaxCalcDimFilter@1001 : Record 17313;
      DimensionValue@1002 : Record 349;
    BEGIN
      TempDimBuf1.RESET;

      TaxCalcDimFilter.SETRANGE("Section Code",TaxCalcLine."Section Code");
      TaxCalcDimFilter.SETRANGE("Register No.",TaxCalcLine.Code);
      TaxCalcDimFilter.SETRANGE(Define,TaxCalcDimFilter.Define::Template);
      TaxCalcDimFilter.SETRANGE("Line No.",TaxCalcLine."Line No.");
      IF TaxCalcDimFilter.FINDSET THEN
        REPEAT
          IF NOT TempDimBuf1.GET(0,0,TaxCalcDimFilter."Dimension Code") THEN BEGIN
            IF NOT (TaxCalcDimFilter."Dimension Value Filter" IN ['','''''']) THEN
              EXIT(FALSE);
          END ELSE BEGIN
            DimensionValue.SETRANGE("Dimension Code",TaxCalcDimFilter."Dimension Code");
            DimensionValue.SETFILTER(Code,TaxCalcDimFilter."Dimension Value Filter");
            DimensionValue."Dimension Code" := TaxCalcDimFilter."Dimension Code";
            DimensionValue.Code := TempDimBuf1."Dimension Value Code";
            IF NOT DimensionValue.FIND THEN
              EXIT(FALSE);
          END;
        UNTIL TaxCalcDimFilter.NEXT(1) = 0;

      EXIT(TRUE);
    END;

    PROCEDURE SetTaxCalcEntryDim@4(TaxCalcSectionCode@1000 : Code[10];Dimension1ValueCode@1001 : Code[20];Dimension2ValueCode@1002 : Code[20];Dimension3ValueCode@1003 : Code[20];Dimension4ValueCode@1004 : Code[20]);
    BEGIN
      IF TaxCalcSection.Code <> TaxCalcSectionCode THEN
        TaxCalcSection.GET(TaxCalcSectionCode);
      TempDimBuf1.RESET;
      TempDimBuf1.DELETEALL;

      IF (Dimension1ValueCode <> '') AND (TaxCalcSection."Dimension 1 Code" <> '') THEN BEGIN
        TempDimBuf1."Dimension Code" := TaxCalcSection."Dimension 1 Code";
        TempDimBuf1."Dimension Value Code" := Dimension1ValueCode;
        TempDimBuf1.INSERT;
      END;

      IF (Dimension2ValueCode <> '') AND (TaxCalcSection."Dimension 2 Code" <> '') THEN BEGIN
        TempDimBuf1."Dimension Code" := TaxCalcSection."Dimension 2 Code";
        TempDimBuf1."Dimension Value Code" := Dimension2ValueCode;
        TempDimBuf1.INSERT;
      END;

      IF (Dimension3ValueCode <> '') AND (TaxCalcSection."Dimension 3 Code" <> '') THEN BEGIN
        TempDimBuf1."Dimension Code" := TaxCalcSection."Dimension 3 Code";
        TempDimBuf1."Dimension Value Code" := Dimension3ValueCode;
        TempDimBuf1.INSERT;
      END;

      IF (Dimension4ValueCode <> '') AND (TaxCalcSection."Dimension 4 Code" <> '') THEN BEGIN
        TempDimBuf1."Dimension Code" := TaxCalcSection."Dimension 4 Code";
        TempDimBuf1."Dimension Value Code" := Dimension4ValueCode;
        TempDimBuf1.INSERT;
      END;
    END;

    PROCEDURE WhereUsedByDimensions@5(TaxCalcCorrespEntry@1000 : Record 17319;VAR TaxCalcIDTotaling@1001 : Code[250];VAR Dimension1ValueCode@1002 : Code[20];VAR Dimension2ValueCode@1003 : Code[20];VAR Dimension3ValueCode@1004 : Code[20];VAR Dimension4ValueCode@1005 : Code[20]) : Boolean;
    VAR
      TaxCalcDimCorFilter@1006 : Record 17320;
      TaxCalcDimFilter@1007 : Record 17313;
      TaxCalcHeader@1009 : Record 17308;
      MessageText@1010 : Text[250];
    BEGIN
      Dimension1ValueCode := '';
      Dimension2ValueCode := '';
      Dimension3ValueCode := '';
      Dimension4ValueCode := '';
      IF (TaxCalcCorrespEntry."Debit Account No." <> '') AND (TaxCalcCorrespEntry."Credit Account No." <> '') THEN
        MessageText :=
          STRSUBSTNO(Text1004,
            TaxCalcHeader.TABLECAPTION,TaxCalcDimFilter."Register No.",
            TaxCalcCorrespEntry."Debit Account No.",TaxCalcCorrespEntry."Credit Account No.")
      ELSE
        IF TaxCalcCorrespEntry."Debit Account No." <> '' THEN
          MessageText :=
            STRSUBSTNO(Text1006,
              TaxCalcHeader.TABLECAPTION,TaxCalcDimFilter."Register No.",
              TaxCalcCorrespEntry."Debit Account No.")
        ELSE
          MessageText :=
            STRSUBSTNO(Text1007,
              TaxCalcHeader.TABLECAPTION,TaxCalcDimFilter."Register No.",
              TaxCalcCorrespEntry."Credit Account No.");

      TaxCalcDimCorFilter.SETRANGE("Section Code",TaxCalcCorrespEntry."Section Code");
      TaxCalcDimCorFilter.SETRANGE("Corresp. Entry No.",TaxCalcCorrespEntry."Entry No.");
      TaxCalcIDTotaling := TaxCalcCorrespEntry."Tax Register ID Totaling";
      IF TaxCalcDimCorFilter.FINDSET THEN
        REPEAT
          TaxCalcDimFilter.SETCURRENTKEY("Section Code","Entry No.");
          TaxCalcDimFilter.SETRANGE("Section Code",TaxCalcCorrespEntry."Section Code");
          TaxCalcDimFilter.SETRANGE("Entry No.",TaxCalcDimCorFilter."Connection Entry No.");
          IF CheckSetupDimFilters(TaxCalcDimFilter,MessageText) THEN
            IF TaxCalcDimFilter.FINDSET THEN
              REPEAT
                TaxCalcHeader.GET(TaxCalcDimFilter."Section Code",TaxCalcDimFilter."Register No.");
                IF TaxCalcIDTotaling = '' THEN
                  TaxCalcIDTotaling := '~';
                IF STRPOS(TaxCalcIDTotaling,'~' + TaxCalcHeader."Register ID" + '~') = 0 THEN
                  TaxCalcIDTotaling :=
                    STRSUBSTNO('%1%2~',TaxCalcIDTotaling,TaxCalcHeader."Register ID");
              UNTIL TaxCalcDimFilter.NEXT(1) = 0;
        UNTIL TaxCalcDimCorFilter.NEXT(1) = 0;
      TempDimBuf1.RESET;
      IF TempDimBuf1.FINDSET THEN
        REPEAT
          CASE TempDimBuf1."Dimension Code" OF
            TaxCalcSection."Dimension 1 Code":
              Dimension1ValueCode := TempDimBuf1."Dimension Value Code";
            TaxCalcSection."Dimension 2 Code":
              Dimension2ValueCode := TempDimBuf1."Dimension Value Code";
            TaxCalcSection."Dimension 3 Code":
              Dimension3ValueCode := TempDimBuf1."Dimension Value Code";
            TaxCalcSection."Dimension 4 Code":
              Dimension4ValueCode := TempDimBuf1."Dimension Value Code";
          END;
        UNTIL TempDimBuf1.NEXT(1) = 0;
      EXIT(TaxCalcIDTotaling <> '');
    END;

    LOCAL PROCEDURE CheckSetupDimFilters@6(VAR TaxCalcDimFilter@1000 : Record 17313;MessageText@1001 : Text[250]) : Boolean;
    VAR
      DimensionValue@1002 : Record 349;
    BEGIN
      TempDimBuf1.RESET;
      IF TempDimBuf1.FINDSET THEN
        REPEAT
          TaxCalcDimFilter.SETRANGE("Dimension Code",TempDimBuf1."Dimension Code");
          IF TaxCalcDimFilter.FINDSET THEN BEGIN
            DimensionValue."Dimension Code" := TempDimBuf1."Dimension Code";
            DimensionValue.Code := TempDimBuf1."Dimension Value Code";
            DimensionValue.SETRANGE("Dimension Code",TempDimBuf1."Dimension Code");
            REPEAT
              DimensionValue.SETFILTER(Code,TaxCalcDimFilter."Dimension Value Filter");
              IF NOT DimensionValue.FIND THEN
                EXIT(FALSE);
            UNTIL TaxCalcDimFilter.NEXT(1) = 0;
          END;
        UNTIL TempDimBuf1.NEXT = 0;

      TaxCalcDimFilter.SETRANGE("Dimension Code");
      IF TaxCalcDimFilter.FINDSET THEN
        REPEAT
          IF TaxCalcDimFilter."If No Value" <> TaxCalcDimFilter."If No Value"::Ignore THEN BEGIN
            TempDimBuf1.SETRANGE("Dimension Code",TaxCalcDimFilter."Dimension Code");
            IF NOT TempDimBuf1.FINDFIRST THEN
              CASE TaxCalcDimFilter."If No Value" OF
                TaxCalcDimFilter."If No Value"::Skip:
                  EXIT(FALSE);
                TaxCalcDimFilter."If No Value"::Confirm:
                  BEGIN
                    IF CONFIRM(MessageText + Text1009 + Text1005,
                         FALSE,
                         TaxCalcDimFilter."Dimension Code",
                         TaxCalcDimFilter."Dimension Value Filter")
                    THEN
                      EXIT(FALSE);
                    ERROR('');
                  END;
                TaxCalcDimFilter."If No Value"::Error:
                  ERROR(MessageText + Text1009,
                    TaxCalcDimFilter."Dimension Code",
                    TaxCalcDimFilter."Dimension Value Filter");
              END;
          END;
        UNTIL TaxCalcDimFilter.NEXT(1) = 0;
      EXIT(TRUE);
    END;

    PROCEDURE ValidateSetupDimFilters@7(TaxCalcSelectionSetup@1000 : Record 17309) : Boolean;
    VAR
      TaxCalcDimFilter@1001 : Record 17313;
      TaxCalcHeader@1002 : Record 17308;
      MessageText@1003 : Text[250];
    BEGIN
      WITH TaxCalcSelectionSetup DO BEGIN
        MessageText :=
          STRSUBSTNO(Text1008,
            TaxCalcHeader.TABLECAPTION,"Register No.","Line No.");
        TaxCalcDimFilter.SETRANGE("Section Code","Section Code");
        TaxCalcDimFilter.SETRANGE("Register No.","Register No.");
        TaxCalcDimFilter.SETRANGE(Define,TaxCalcDimFilter.Define::"Entry Setup");
        TaxCalcDimFilter.SETRANGE("Line No.","Line No.");
        EXIT(CheckSetupDimFilters(TaxCalcDimFilter,MessageText))
      END;
    END;

    PROCEDURE SetLedgEntryDim@8(TaxCalcSectionCode@1000 : Code[10];DimSetID@1210000 : Integer);
    VAR
      TempDimSetEntry@1210002 : TEMPORARY Record 480;
      DimMgt@1210001 : Codeunit 408;
    BEGIN
      IF TaxCalcSection.Code <> TaxCalcSectionCode THEN
        TaxCalcSection.GET(TaxCalcSectionCode);
      TempDimBuf1.RESET;
      TempDimBuf1.DELETEALL;

      DimMgt.GetDimensionSet(TempDimSetEntry,DimSetID);
      IF TempDimSetEntry.FINDSET THEN
        REPEAT
          TempDimBuf1."Dimension Code" := TempDimSetEntry."Dimension Code";
          TempDimBuf1."Dimension Value Code" := TempDimSetEntry."Dimension Value Code";
          TempDimBuf1.INSERT;
        UNTIL TempDimSetEntry.NEXT = 0;
    END;

    PROCEDURE SetDimFilters2GLCorrAnViewEntr@1210000(VAR GLCorrAnalysisViewEntry@1210000 : Record 14942;GLCorrAnalysisView@1210003 : Record 14940;TaxCalcSelectionSetup@1210002 : Record 17309;TaxCalcLine@1210001 : Record 17310);
    BEGIN
      GLCorrAnalysisViewEntry.FILTERGROUP(2);
      GLCorrAnalysisViewEntry.SETFILTER(
        "Debit Dimension 1 Value Code",
        TaxCalcLine.GetGLCorrDimFilter(GLCorrAnalysisView."Debit Dimension 1 Code",0));
      GLCorrAnalysisViewEntry.SETFILTER(
        "Debit Dimension 2 Value Code",
        TaxCalcLine.GetGLCorrDimFilter(GLCorrAnalysisView."Debit Dimension 2 Code",0));
      GLCorrAnalysisViewEntry.SETFILTER(
        "Debit Dimension 3 Value Code",
        TaxCalcLine.GetGLCorrDimFilter(GLCorrAnalysisView."Debit Dimension 3 Code",0));
      GLCorrAnalysisViewEntry.SETFILTER(
        "Credit Dimension 1 Value Code",
        TaxCalcLine.GetGLCorrDimFilter(GLCorrAnalysisView."Credit Dimension 1 Code",1));
      GLCorrAnalysisViewEntry.SETFILTER(
        "Credit Dimension 2 Value Code",
        TaxCalcLine.GetGLCorrDimFilter(GLCorrAnalysisView."Credit Dimension 2 Code",1));
      GLCorrAnalysisViewEntry.SETFILTER(
        "Credit Dimension 3 Value Code",
        TaxCalcLine.GetGLCorrDimFilter(GLCorrAnalysisView."Credit Dimension 3 Code",1));
      GLCorrAnalysisViewEntry.FILTERGROUP(4);
      GLCorrAnalysisViewEntry.SETFILTER(
        "Debit Dimension 1 Value Code",
        TaxCalcSelectionSetup.GetGLCorrDimFilter(GLCorrAnalysisView."Debit Dimension 1 Code",0));
      GLCorrAnalysisViewEntry.SETFILTER(
        "Debit Dimension 2 Value Code",
        TaxCalcSelectionSetup.GetGLCorrDimFilter(GLCorrAnalysisView."Debit Dimension 2 Code",0));
      GLCorrAnalysisViewEntry.SETFILTER(
        "Debit Dimension 3 Value Code",
        TaxCalcSelectionSetup.GetGLCorrDimFilter(GLCorrAnalysisView."Debit Dimension 3 Code",0));
      GLCorrAnalysisViewEntry.SETFILTER(
        "Credit Dimension 1 Value Code",
        TaxCalcSelectionSetup.GetGLCorrDimFilter(GLCorrAnalysisView."Credit Dimension 1 Code",1));
      GLCorrAnalysisViewEntry.SETFILTER(
        "Credit Dimension 2 Value Code",
        TaxCalcSelectionSetup.GetGLCorrDimFilter(GLCorrAnalysisView."Credit Dimension 2 Code",1));
      GLCorrAnalysisViewEntry.SETFILTER(
        "Credit Dimension 3 Value Code",
        TaxCalcSelectionSetup.GetGLCorrDimFilter(GLCorrAnalysisView."Credit Dimension 3 Code",1));
      GLCorrAnalysisViewEntry.FILTERGROUP(0);
    END;

    BEGIN
    END.
  }
}

