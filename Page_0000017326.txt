OBJECT Page 17326 Tax Calc. Item Entries
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Tax Calc. Item Entries;
               RUS=Товарные операции налогового расчета];
    SourceTable=Table17317;
    DataCaptionExpr=FormTitle();
    SourceTableView=SORTING(Section Code,Posting Date);
    PageType=Worksheet;
    OnOpenPage=BEGIN
                 COPYFILTER("Date Filter",Calendar."Period End");
                 COPYFILTER("Date Filter","Posting Date");
                 TaxRegMgt.SetPeriodAmountType(Calendar,DateFilterText,PeriodType,AmountType);
                 Calendar.RESET;
               END;

    OnFindRecord=BEGIN
                   IF DateFilterText <> GETFILTER("Date Filter") THEN
                     ShowNewData;

                   EXIT(FIND(Which));
                 END;

    OnAfterGetRecord=BEGIN
                       OutstandQuantityOnFormat(FORMAT("Outstand. Quantity"));
                     END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 133     ;1   ;Action    ;
                      CaptionML=[ENU=Previous Period;
                                 RUS=Предыдущий период];
                      ToolTipML=[ENU=Previous Period;
                                 RUS=Предыдущий период];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('<=');
                               END;
                                }
      { 134     ;1   ;Action    ;
                      CaptionML=[ENU=Next Period;
                                 RUS=Следующий период];
                      ToolTipML=[ENU=Next Period;
                                 RUS=Следующий период];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 FindPeriod('>=');
                               END;
                                }
      { 125     ;1   ;Action    ;
                      CaptionML=[ENU=Navigate;
                                 RUS=Навигатор];
                      ApplicationArea=#Basic,#Suite;
                      Promoted=Yes;
                      Image=Navigate;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Navigating;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 100 ;1   ;Group     ;
                Editable=FALSE;
                GroupType=Repeater }

    { 113 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the posting date associated with the tax calculation item entry.;
                           RUS=Определяет дату учета, связанную с товарной операцией налогового расчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Posting Date" }

    { 115 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the description associated with the tax calculation item entry.;
                           RUS=Определяет описание, связанное с товарной операцией налогового расчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Description }

    { 105 ;2   ;Field     ;
                CaptionML=[ENU=UOM Name;
                           RUS=Наим. ед. изм.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=UOMName() }

    { 107 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the credit quantity associated with the tax calculation item entry.;
                           RUS=Определяет количество по кредиту, связанное с товарной операцией налогового расчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Credit Quantity" }

    { 109 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the credit amount, including tax, associated with the tax calculation item entry.;
                           RUS=Определяет сумму кредита включая налог, связанную с товарной операцией налогового расчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Credit Amount (Tax)" }

    { 1000000000;2;Field  ;
                ToolTipML=[ENU=Specifies the actual credit amount associated with the tax calculation item entry.;
                           RUS=Определяет фактическую сумму кредита, связанную с товарной операцией налогового расчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Credit Amount (Actual)" }

    { 117 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the debit quantity associated with the tax calculation item entry.;
                           RUS=Определяет количество по дебету, связанное с товарной операцией налогового расчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Debit Quantity" }

    { 119 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the debit amount, including tax, associated with the tax calculation item entry.;
                           RUS=Определяет сумму дебета включая налог, связанную с товарной операцией налогового расчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Debit Amount (Tax)" }

    { 1000000002;2;Field  ;
                ToolTipML=[ENU=Specifies the actual debit amount associated with the tax calculation item entry.;
                           RUS=Определяет фактическую сумму дебета, связанную с товарной операцией налогового расчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Debit Amount (Actual)" }

    { 121 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the outstanding quantity of the tax calculation item entry.;
                           RUS=Определяет недопоставленное количество товарной операции налогового расчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Outstand. Quantity" }

    { 1   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ledger entry number associated with the tax calculation item entry.;
                           RUS=Определяет номер операции главной книги, связанный с товарной операцией налогового расчета.];
                SourceExpr="Ledger Entry No.";
                Visible=FALSE }

    { 103 ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the applied entry number associated with the tax calculation item entry.;
                           RUS=Определяет номер примененной операции, связанный с товарной операцией налогового расчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Appl. Entry No." }

    { 130 ;1   ;Field     ;
                ToolTipML=[ENU=Month;
                           RUS=Месяц];
                OptionCaptionML=[ENU=,,Month,Quarter,Year;
                                 RUS=,,Месяц,Квартал,Год];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             IF PeriodType = PeriodType::Year THEN
                               YearPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Quarter THEN
                               QuarterPeriodTypeOnValidate;
                             IF PeriodType = PeriodType::Month THEN
                               MonthPeriodTypeOnValidate;
                           END;
                            }

    { 123 ;1   ;Field     ;
                ToolTipML=[ENU=Current Period;
                           RUS=Текущий период];
                OptionCaptionML=[ENU=Current Period,Tax Period;
                                 RUS=Текущий период,Налоговый период];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=AmountType;
                OnValidate=BEGIN
                             IF AmountType = AmountType::"Tax Period" THEN
                               TaxPeriodAmountTypeOnValidate;
                             IF AmountType = AmountType::"Current Period" THEN
                               CurrentPeriodAmountTypeOnValid;
                           END;
                            }

  }
  CODE
  {
    VAR
      Calendar@1210001 : Record 2000000007;
      TaxRegMgt@1210000 : Codeunit 17201;
      DateFilterText@1000 : Text;
      PeriodType@1001 : ',,Month,Quarter,Year';
      AmountType@1002 : 'Current Period,Tax Period';

    PROCEDURE ShowNewData@1();
    BEGIN
      FindPeriod('');
      DateFilterText := GETFILTER("Date Filter");

      SETFILTER("Posting Date",DateFilterText);
      SETFILTER("Date Filter",DateFilterText);
    END;

    LOCAL PROCEDURE FindPeriod@2(SearchText@1000 : Code[10]);
    VAR
      Calendar@1001 : Record 2000000007;
    BEGIN
      IF GETFILTER("Date Filter") <> '' THEN BEGIN
        Calendar."Period End" := GETRANGEMAX("Date Filter");
        IF NOT TaxRegMgt.FindDate('',Calendar,PeriodType,AmountType) THEN
          TaxRegMgt.FindDate('',Calendar,PeriodType::Month,AmountType);
      END;
      TaxRegMgt.FindDate(SearchText,Calendar,PeriodType,AmountType);

      SETFILTER("Posting Date",'%1..%2',Calendar."Period Start",Calendar."Period End");
      SETFILTER("Date Filter",'%1..%2',Calendar."Period Start",Calendar."Period End");
    END;

    LOCAL PROCEDURE MonthPeriodTypeOnPush@19047374();
    BEGIN
      FindPeriod('');
    END;

    LOCAL PROCEDURE QuarterPeriodTypeOnPush@19018850();
    BEGIN
      FindPeriod('');
    END;

    LOCAL PROCEDURE YearPeriodTypeOnPush@19051042();
    BEGIN
      FindPeriod('');
    END;

    LOCAL PROCEDURE CurrentPeriodAmountTypeOnPush@19039366();
    BEGIN
      FindPeriod('');
    END;

    LOCAL PROCEDURE TaxPeriodAmountTypeOnPush@19068511();
    BEGIN
      FindPeriod('');
    END;

    LOCAL PROCEDURE OutstandQuantityOnFormat@19072008(Text@19053080 : Text[1024]);
    BEGIN
      IF "Appl. Entry No." = 0 THEN
        Text := '0';
    END;

    LOCAL PROCEDURE MonthPeriodTypeOnValidate@19021027();
    BEGIN
      MonthPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE QuarterPeriodTypeOnValidate@19015346();
    BEGIN
      QuarterPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE YearPeriodTypeOnValidate@19064743();
    BEGIN
      YearPeriodTypeOnPush;
    END;

    LOCAL PROCEDURE CurrentPeriodAmountTypeOnValid@19036813();
    BEGIN
      CurrentPeriodAmountTypeOnPush;
    END;

    LOCAL PROCEDURE TaxPeriodAmountTypeOnValidate@19037601();
    BEGIN
      TaxPeriodAmountTypeOnPush;
    END;

    BEGIN
    END.
  }
}

