OBJECT Table 12470 FA Document Header
{
  OBJECT-PROPERTIES
  {
    Date=18.05.17;
    Time=18:15:05;
    Modified=Yes;
    Version List=NAVRU8.00,NOS-26;
  }
  PROPERTIES
  {
    DataCaptionFields=No.;
    OnInsert=BEGIN
               FASetup.GET;
               IF "No." = '' THEN BEGIN
                 TestNoSeries;
                 NoSeriesMgt.InitSeries(GetNoSeriesCode,xRec."No. Series","FA Posting Date","No.","No. Series");
               END;
               InitRecord;

               DocSignMgt.SetDefaults(DATABASE::"FA Document Header","Document Type","No.");
             END;

    OnDelete=VAR
               FAComment@1470000 : Record 12478;
             BEGIN
               FAComment.RESET;
               FAComment.SETRANGE("Document Type","Document Type");
               FAComment.SETRANGE("Document No.","No.");
               FAComment.DELETEALL;

               DocSignMgt.DeleteDocSign(DATABASE::"FA Document Header","Document Type","No.");

               FADocLine.RESET;
               FADocLine.SETRANGE("Document Type","Document Type");
               FADocLine.SETRANGE("Document No.","No.");
               FADocLine.DELETEALL(TRUE);
             END;

    OnRename=BEGIN
               ERROR(Text003,TABLECAPTION);
             END;

    CaptionML=[ENU=FA Document Header;
               RUS=Заголовок документа ОС];
    LookupPageID=Page12483;
  }
  FIELDS
  {
    { 1   ;   ;Document Type       ;Option        ;CaptionML=[ENU=Document Type;
                                                              RUS=Тип документа];
                                                   OptionCaptionML=[ENU=Writeoff,Release,Movement;
                                                                    RUS=Списание,Ввод в эксплуатацию,Перемещение];
                                                   OptionString=Writeoff,Release,Movement }
    { 2   ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              RUS=Номер] }
    { 3   ;   ;Posting Description ;Text50        ;CaptionML=[ENU=Posting Description;
                                                              RUS=Описание учета] }
    { 5   ;   ;Posting Date        ;Date          ;OnValidate=BEGIN
                                                                VALIDATE("FA Posting Date","Posting Date");
                                                                UpdateFADocLines(FIELDNO("Posting Date"));
                                                              END;

                                                   CaptionML=[ENU=Posting Date;
                                                              RUS=Дата учета] }
    { 6   ;   ;FA Posting Date     ;Date          ;OnValidate=BEGIN
                                                                UpdateFADocLines(FIELDNO("FA Posting Date"));
                                                              END;

                                                   CaptionML=[ENU=FA Posting Date;
                                                              RUS=Дата учета ОС] }
    { 8   ;   ;Shortcut Dimension 1 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Shortcut Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 1 Code;
                                                              RUS=Код ярлыка измерения 1];
                                                   CaptionClass='1,2,1' }
    { 9   ;   ;Shortcut Dimension 2 Code;Code20   ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Shortcut Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Shortcut Dimension 2 Code;
                                                              RUS=Код ярлыка измерения 2];
                                                   CaptionClass='1,2,2' }
    { 10  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=[ENU=Language Code;
                                                              RUS=Код языка] }
    { 11  ;   ;Purchaser Code      ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=[ENU=Purchaser Code;
                                                              RUS=Код менеджера] }
    { 12  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Comment Line" WHERE (Table Name=CONST(12471),
                                                                                           No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              RUS=Комментарий];
                                                   Editable=No }
    { 14  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              RUS=Серия номеров];
                                                   Editable=No }
    { 15  ;   ;Posting No. Series  ;Code10        ;TableRelation="No. Series";
                                                   OnValidate=BEGIN
                                                                IF "Posting No. Series" <> '' THEN BEGIN
                                                                  FASetup.GET;
                                                                  TestNoSeries;
                                                                  NoSeriesMgt.TestSeries(GetPostingNoSeriesCode,"Posting No. Series");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              WITH FADocHeader DO BEGIN
                                                                FADocHeader := Rec;
                                                                FASetup.GET;
                                                                TestNoSeries;
                                                                IF NoSeriesMgt.LookupSeries(GetPostingNoSeriesCode,"Posting No. Series") THEN
                                                                  VALIDATE("Posting No. Series");
                                                                Rec := FADocHeader;
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Posting No. Series;
                                                              RUS=Учетная серия номеров] }
    { 16  ;   ;External Document No.;Code35       ;CaptionML=[ENU=External Document No.;
                                                              RUS=Номер внешнего документа] }
    { 20  ;   ;Posting No.         ;Code10        ;CaptionML=[ENU=Posting No.;
                                                              RUS=Учетный номер] }
    { 22  ;   ;Reason Document No. ;Code20        ;CaptionML=[ENU=Reason Document No.;
                                                              RUS=Номер документа-основания] }
    { 23  ;   ;Reason Document Date;Date          ;CaptionML=[ENU=Reason Document Date;
                                                              RUS=Дата документа-основания] }
    { 24  ;   ;FA Location Code    ;Code10        ;TableRelation="FA Location";
                                                   OnValidate=VAR
                                                                FALocation@1210000 : Record 5609;
                                                              BEGIN
                                                                IF FALocation.GET("FA Location Code") THEN
                                                                  "FA Employee No." := FALocation."Employee No.";
                                                                CheckLines;
                                                              END;

                                                   CaptionML=[ENU=FA Location Code;
                                                              RUS=Код местонахождения ОС] }
    { 25  ;   ;New FA Location Code;Code10        ;TableRelation="FA Location";
                                                   OnValidate=BEGIN
                                                                UpdateFADocLines(FIELDNO("New FA Location Code"));
                                                              END;

                                                   CaptionML=[ENU=New FA Location Code;
                                                              RUS=Новый код местонахождения ОС] }
    { 26  ;   ;FA Employee No.     ;Code20        ;TableRelation=Employee;
                                                   OnValidate=BEGIN
                                                                CheckLines;
                                                              END;

                                                   CaptionML=[ENU=FA Employee No.;
                                                              RUS=Материал.-ответств. лицо] }
    { 27  ;   ;No. Printed         ;Integer       ;CaptionML=[ENU=No. Printed;
                                                              RUS=Число напечатанных] }
    { 480 ;   ;Dimension Set ID    ;Integer       ;TableRelation="Dimension Set Entry";
                                                   OnLookup=BEGIN
                                                              ShowDocDim;
                                                            END;

                                                   CaptionML=[ENU=Dimension Set ID;
                                                              RUS=Код набора измерений];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Document Type,No.                       ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      FADocHeader@1470000 : Record 12470;
      FADocLine@1470001 : Record 12477;
      FASetup@1470004 : Record 5603;
      DimMgt@1210000 : Codeunit 408;
      Text003@1210002 : TextConst 'ENU=You cannot rename a %1.;RUS=Нельзя переименовать %1.';
      NoSeriesMgt@1210005 : Codeunit 396;
      DocSignMgt@1470005 : Codeunit 12420;
      Text064@1210001 : TextConst 'ENU=You may have changed a dimension.\\Do you want to update the lines?;RUS=Вы, возможно, изменили измерение.\\Обновить строки?';

    PROCEDURE InitRecord@10();
    BEGIN
      CASE "Document Type" OF
        "Document Type"::Writeoff:
          BEGIN
            IF ("No. Series" <> '') AND
               (FASetup."Writeoff Nos." = FASetup."Posted Writeoff Nos.")
            THEN
              "Posting No. Series" := "No. Series"
            ELSE
              IF "Posting No. Series" = '' THEN
                NoSeriesMgt.SetDefaultSeries("Posting No. Series",FASetup."Posted Writeoff Nos.");
          END;
        "Document Type"::Release:
          BEGIN
            IF ("No. Series" <> '') AND
               (FASetup."Release Nos." = FASetup."Posted Release Nos.")
            THEN
              "Posting No. Series" := "No. Series"
            ELSE
              IF "Posting No. Series" = '' THEN
                NoSeriesMgt.SetDefaultSeries("Posting No. Series",FASetup."Posted Release Nos.");
          END;
        "Document Type"::Movement:
          BEGIN
            IF ("No. Series" <> '') AND
               (FASetup."Disposal Nos." = FASetup."Posted Disposal Nos.")
            THEN
              "Posting No. Series" := "No. Series"
            ELSE
              IF "Posting No. Series" = '' THEN
                NoSeriesMgt.SetDefaultSeries("Posting No. Series",FASetup."Posted Disposal Nos.");
          END;
      END;

      IF "Posting No. Series" = '' THEN
        "Posting No. Series" := "No. Series";

      "Posting Date" := WORKDATE;
      "FA Posting Date" := WORKDATE;

      "Posting Description" := STRSUBSTNO('%1 %2',"Document Type","No.");
    END;

    PROCEDURE AssistEdit@2(OldFADocHeader@1000 : Record 12470) : Boolean;
    BEGIN
      FASetup.GET;
      TestNoSeries;
      IF NoSeriesMgt.SelectSeries(GetNoSeriesCode,OldFADocHeader."No. Series","No. Series") THEN BEGIN
        FASetup.GET;
        TestNoSeries;
        NoSeriesMgt.SetSeries("No.");
        EXIT(TRUE);
      END;
    END;

    LOCAL PROCEDURE TestNoSeries@6();
    BEGIN
      CASE "Document Type" OF
        "Document Type"::Writeoff:
          BEGIN
            FASetup.TESTFIELD("Writeoff Nos.");
            FASetup.TESTFIELD("Posted Writeoff Nos.");
          END;
        "Document Type"::Release:
          BEGIN
            FASetup.TESTFIELD("Release Nos.");
            FASetup.TESTFIELD("Posted Release Nos.");
          END;
        "Document Type"::Movement:
          BEGIN
            FASetup.TESTFIELD("Disposal Nos.");
            FASetup.TESTFIELD("Posted Disposal Nos.");
          END;
      END;
    END;

    LOCAL PROCEDURE GetNoSeriesCode@9() : Code[10];
    BEGIN
      CASE "Document Type" OF
        "Document Type"::Writeoff:
          EXIT(FASetup."Writeoff Nos.");
        "Document Type"::Release:
          EXIT(FASetup."Release Nos.");
        "Document Type"::Movement:
          EXIT(FASetup."Disposal Nos.");
      END;
    END;

    LOCAL PROCEDURE GetPostingNoSeriesCode@8() : Code[10];
    BEGIN
      CASE "Document Type" OF
        "Document Type"::Writeoff:
          EXIT(FASetup."Posted Writeoff Nos.");
        "Document Type"::Release:
          EXIT(FASetup."Posted Release Nos.");
        "Document Type"::Movement:
          EXIT(FASetup."Posted Disposal Nos.");
      END;
    END;

    PROCEDURE DocLinesExist@3() : Boolean;
    BEGIN
      FADocLine.RESET;
      FADocLine.SETRANGE("Document Type","Document Type");
      FADocLine.SETRANGE("Document No.","No.");
      EXIT(NOT FADocLine.ISEMPTY);
    END;

    PROCEDURE CreateDim@16(Type1@1000 : Integer;No1@1001 : Code[20];Type2@1002 : Integer;No2@1003 : Code[20];Type3@1004 : Integer;No3@1005 : Code[20];Type4@1006 : Integer;No4@1007 : Code[20];Type5@1008 : Integer;No5@1009 : Code[20]);
    VAR
      SourceCodeSetup@1010 : Record 242;
      TableID@1011 : ARRAY [10] OF Integer;
      No@1012 : ARRAY [10] OF Code[20];
    BEGIN
      SourceCodeSetup.GET;
      TableID[1] := Type1;
      No[1] := No1;
      TableID[2] := Type2;
      No[2] := No2;
      TableID[3] := Type3;
      No[3] := No3;
      TableID[4] := Type4;
      No[4] := No4;
      TableID[5] := Type5;
      No[5] := No5;
      "Shortcut Dimension 1 Code" := '';
      "Shortcut Dimension 2 Code" := '';
      DimMgt.GetDefaultDimID(
        TableID,No,SourceCodeSetup."Fixed Asset G/L Journal","Shortcut Dimension 1 Code","Shortcut Dimension 2 Code",0,0);
    END;

    PROCEDURE ValidateShortcutDimCode@1210000(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    VAR
      OldDimSetID@1005 : Integer;
    BEGIN
      OldDimSetID := "Dimension Set ID";
      DimMgt.ValidateShortcutDimValues(FieldNumber,ShortcutDimCode,"Dimension Set ID");
      IF "No." <> '' THEN
        MODIFY;

      IF OldDimSetID <> "Dimension Set ID" THEN BEGIN
        MODIFY;
        IF DocLinesExist THEN
          UpdateAllLineDim("Dimension Set ID",OldDimSetID);
      END;
    END;

    LOCAL PROCEDURE UpdateFADocLines@15(CalledByFieldNo@1000 : Integer);
    BEGIN
      FADocLine.SETRANGE("Document Type","Document Type");
      FADocLine.SETRANGE("Document No.","No.");
      FADocLine.LOCKTABLE;
      IF FADocLine.FIND('-') THEN
        REPEAT
          CASE CalledByFieldNo OF
            FIELDNO("Posting Date"):
              FADocLine.VALIDATE("Posting Date","Posting Date");
            FIELDNO("FA Posting Date"):
              FADocLine.VALIDATE("FA Posting Date","FA Posting Date");
            FIELDNO("New FA Location Code"):
              FADocLine.VALIDATE("FA Location Code","New FA Location Code");
          END;
          FADocLine.MODIFY(TRUE);
        UNTIL FADocLine.NEXT = 0;
    END;

    PROCEDURE GetFAComments@1470000(VAR Comment@1470000 : ARRAY [5] OF Text[80];Type@1470001 : Integer);
    VAR
      FAComment@1470003 : Record 12478;
      Index@1210000 : Integer;
    BEGIN
      CLEAR(Comment);
      Index := 0;
      FAComment.RESET;
      FAComment.SETCURRENTKEY("Document Type","Document No.","Document Line No.",Type);
      FAComment.SETRANGE("Document Type","Document Type");
      FAComment.SETRANGE("Document No.","No.");
      FAComment.SETRANGE("Document Line No.",0);
      FAComment.SETRANGE(Type,Type);
      IF FAComment.FINDSET THEN
        REPEAT
          Index += 1;
          Comment[Index] := FAComment.Comment
        UNTIL (FAComment.NEXT = 0) OR (Index = ARRAYLEN(Comment));
    END;

    PROCEDURE CheckLines@1470001();
    VAR
      FADocLine@1470000 : Record 12477;
    BEGIN
      FADocLine.SETRANGE("Document Type","Document Type");
      FADocLine.SETRANGE("Document No.","No.");
      IF FADocLine.FINDSET THEN
        REPEAT
          FADocLine.Check("FA Location Code","New FA Location Code","FA Employee No.");
        UNTIL FADocLine.NEXT = 0;
    END;

    PROCEDURE ShowDocDim@1210001();
    VAR
      OldDimSetID@1000 : Integer;
    BEGIN
      OldDimSetID := "Dimension Set ID";
      DimMgt.SetObjectFrom(Rec); // NC NOS-26 SPA
      "Dimension Set ID" :=
        DimMgt.EditDimensionSet2(
          "Dimension Set ID",STRSUBSTNO('%1 %2',"Document Type","No."),
          "Shortcut Dimension 1 Code","Shortcut Dimension 2 Code");
      IF OldDimSetID <> "Dimension Set ID" THEN BEGIN
        MODIFY;
        IF DocLinesExist THEN
          UpdateAllLineDim("Dimension Set ID",OldDimSetID);
      END;
    END;

    LOCAL PROCEDURE UpdateAllLineDim@34(NewParentDimSetID@1000 : Integer;OldParentDimSetID@1001 : Integer);
    VAR
      NewDimSetID@1002 : Integer;
    BEGIN
      // Update all lines with changed dimensions.

      IF NewParentDimSetID = OldParentDimSetID THEN
        EXIT;
      IF NOT CONFIRM(Text064) THEN
        EXIT;

      FADocLine.RESET;
      FADocLine.SETRANGE("Document Type","Document Type");
      FADocLine.SETRANGE("Document No.","No.");
      FADocLine.LOCKTABLE;
      IF FADocLine.FIND('-') THEN
        REPEAT
          NewDimSetID := DimMgt.GetDeltaDimSetID(FADocLine."Dimension Set ID",NewParentDimSetID,OldParentDimSetID);
          IF FADocLine."Dimension Set ID" <> NewDimSetID THEN BEGIN
            FADocLine."Dimension Set ID" := NewDimSetID;
            DimMgt.UpdateGlobalDimFromDimSetID(
              FADocLine."Dimension Set ID",FADocLine."Shortcut Dimension 1 Code",FADocLine."Shortcut Dimension 2 Code");
            FADocLine.MODIFY;
          END;
        UNTIL FADocLine.NEXT = 0;
    END;

    BEGIN
    {
      NC NOS-26 SPA
    }
    END.
  }
}

