OBJECT Table 249 VAT Registration Log
{
  OBJECT-PROPERTIES
  {
    Date=28.01.17;
    Time=12:00:00;
    Version List=NAVW110.00.00.15140;
  }
  PROPERTIES
  {
    CaptionML=[ENU=VAT Registration Log;
               RUS=Журнал ИНН];
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;AutoIncrement=Yes;
                                                   CaptionML=[ENU=Entry No.;
                                                              RUS=Номер операции] }
    { 2   ;   ;VAT Registration No.;Text20        ;CaptionML=[ENU=VAT Registration No.;
                                                              RUS=ИНН];
                                                   NotBlank=Yes }
    { 3   ;   ;Account Type        ;Option        ;CaptionML=[ENU=Account Type;
                                                              RUS=Тип счета];
                                                   OptionCaptionML=[ENU=Customer,Vendor,Contact;
                                                                    RUS=Клиент,Поставщик,Контакт];
                                                   OptionString=Customer,Vendor,Contact }
    { 4   ;   ;Account No.         ;Code20        ;TableRelation=IF (Account Type=CONST(Customer)) Customer
                                                                 ELSE IF (Account Type=CONST(Vendor)) Vendor;
                                                   CaptionML=[ENU=Account No.;
                                                              RUS=Номер счета] }
    { 5   ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region.Code;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              RUS=Код страны/региона];
                                                   NotBlank=Yes }
    { 6   ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              RUS=Код пользователя] }
    { 10  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              RUS=Статус];
                                                   OptionCaptionML=[ENU=Not Verified,Valid,Invalid;
                                                                    RUS=Не проверен,Допустим,Недопустим];
                                                   OptionString=Not Verified,Valid,Invalid }
    { 11  ;   ;Verified Name       ;Text150       ;CaptionML=[ENU=Verified Name;
                                                              RUS=Проверенное имя] }
    { 12  ;   ;Verified Address    ;Text150       ;CaptionML=[ENU=Verified Address;
                                                              RUS=Проверенный адрес] }
    { 13  ;   ;Verified Date       ;DateTime      ;CaptionML=[ENU=Verified Date;
                                                              RUS=Проверенная дата] }
  }
  KEYS
  {
    {    ;Entry No.                               ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;Brick               ;Country/Region Code,VAT Registration No.,Status }
  }
  CODE
  {

    PROCEDURE GetCountryCode@2() : Code[10];
    VAR
      CompanyInformation@1000 : Record 79;
      CountryRegion@1001 : Record 9;
    BEGIN
      IF "Country/Region Code" = '' THEN BEGIN
        IF NOT CompanyInformation.GET THEN
          EXIT('');
        EXIT(CompanyInformation."Country/Region Code");
      END;
      CountryRegion.GET("Country/Region Code");
      IF CountryRegion."EU Country/Region Code" = '' THEN
        EXIT("Country/Region Code");
      EXIT(CountryRegion."EU Country/Region Code");
    END;

    PROCEDURE GetVATRegNo@12() : Code[20];
    VAR
      VatRegNo@1000 : Code[20];
    BEGIN
      VatRegNo := UPPERCASE("VAT Registration No.");
      VatRegNo := DELCHR(VatRegNo,'=',DELCHR(VatRegNo,'=','ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'));
      IF STRPOS(VatRegNo,UPPERCASE(GetCountryCode)) = 1 THEN
        VatRegNo := DELSTR(VatRegNo,1,STRLEN(GetCountryCode));
      EXIT(VatRegNo);
    END;

    BEGIN
    END.
  }
}

