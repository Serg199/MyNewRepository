OBJECT Page 9700 Email Dialog
{
  OBJECT-PROPERTIES
  {
    Date=28.01.17;
    Time=12:00:00;
    Version List=NAVW110.00.00.15140;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Send Email;
               RUS=Отправить сообщение эл. почты];
    SaveValues=Yes;
    SourceTable=Table9500;
    PageType=StandardDialog;
    SourceTableTemporary=Yes;
    OnInit=BEGIN
             HasAttachment := FALSE;
           END;

    OnOpenPage=VAR
                 TempBlob@1003 : TEMPORARY Record 99008535;
                 FileManagement@1005 : Codeunit 419;
                 OfficeMgt@1001 : Codeunit 1630;
                 OrigMailBodyText@1000 : Text;
               BEGIN
                 OriginalFromEmail := OrigEmailItem."From Address";

                 IF NOT IsEditEnabled THEN
                   LocalEdit := FALSE;
                 IF ForceOutlook THEN
                   LocalEdit := TRUE;
                 IF NOT LocalEdit THEN
                   ShownFromEmail := OriginalFromEmail
                 ELSE
                   ShownFromEmail := '';

                 EmailItem.Subject := OrigEmailItem.Subject;
                 EmailItem."Attachment Name" := OrigEmailItem."Attachment Name";

                 SendToText := OrigEmailItem."Send to";
                 IF OrigEmailItem."Send CC" <> '' THEN
                   CcText := OrigEmailItem."Send CC"
                 ELSE
                   EmailItem."Send CC" := CcText;
                 IF OrigEmailItem."Send BCC" <> '' THEN
                   BccText := OrigEmailItem."Send BCC"
                 ELSE
                   EmailItem."Send BCC" := BccText;

                 BodyText := '';

                 IF EmailItem."Plaintext Formatted" THEN
                   EmailItem."Message Type" := EmailItem."Message Type"::"Custom Message"
                 ELSE BEGIN
                   EmailItem."Body File Path" := OrigEmailItem."Body File Path";
                   FileManagement.BLOBImportFromServerFile(TempBlob,EmailItem."Body File Path");
                   EmailItem.Body := TempBlob.Blob;
                   EmailItem."Message Type" := EmailItem."Message Type"::"From Email Body Template";
                 END;

                 OrigMailBodyText := EmailItem.GetBodyText;
                 IF OrigMailBodyText <> '' THEN
                   BodyText := OrigMailBodyText
                 ELSE
                   EmailItem.SetBodyText(BodyText);

                 UpdatePlainTextVisible;
                 IsOfficeAddin := OfficeMgt.IsAvailable;
               END;

    OnClosePage=BEGIN
                  Rec := EmailItem;
                END;

  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 3   ;1   ;Field     ;
                Name=FromAddress;
                CaptionML=[ENU=From;
                           RUS=От];
                ToolTipML=[ENU=Specifies the sender of the email.;
                           RUS=Определяет отправителя электронной почты.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ShownFromEmail;
                Visible=False;
                Enabled=False }

    { 10  ;1   ;Field     ;
                Name=SendTo;
                CaptionML=[ENU=To;
                           RUS=Кому];
                ToolTipML=[ENU=Specifies the recipient of the email.;
                           RUS=Определяет получателя электронной почты.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=SendToText;
                OnValidate=BEGIN
                             EmailItem.VALIDATE("Send to",SendToText);
                             SendToText := EmailItem."Send to";
                           END;
                            }

    { 4   ;1   ;Field     ;
                Name=CcText;
                CaptionML=[ENU=Cc;
                           RUS=Копия];
                ToolTipML=[ENU=Specifies one or more additional recipients.;
                           RUS=Определяет одного или нескольких дополнительных получателей.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=CcText;
                OnValidate=BEGIN
                             EmailItem.VALIDATE("Send CC",CcText);
                             CcText := EmailItem."Send CC";
                           END;
                            }

    { 7   ;1   ;Field     ;
                Name=BccText;
                CaptionML=[ENU=Bcc;
                           RUS=Скрытая копия];
                ToolTipML=[ENU=Specifies one or more additional recipients.;
                           RUS=Определяет одного или нескольких дополнительных получателей.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BccText;
                OnValidate=BEGIN
                             EmailItem.VALIDATE("Send BCC",BccText);
                             BccText := EmailItem."Send BCC";
                           END;
                            }

    { 11  ;1   ;Field     ;
                Name=Subject;
                CaptionML=[ENU=Subject;
                           RUS=Тема];
                ToolTipML=[ENU=Specifies the text that will display as the subject of the email.;
                           RUS=Определяет текст темы сообщения электронной почты.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=EmailItem.Subject }

    { 2   ;1   ;Field     ;
                Name=Attachment Name;
                CaptionML=[ENU=Attachment Name;
                           RUS=Имя вложения];
                ToolTipML=[ENU=Specifies the name of the attached document.;
                           RUS=Определяет имя вложенного документа.];
                ApplicationArea=#All;
                SourceExpr=EmailItem."Attachment Name";
                Visible=HasAttachment;
                Enabled=NOT IsOfficeAddin;
                Editable=IsOfficeAddin;
                OnAssistEdit=VAR
                               MailManagement@1000 : Codeunit 9520;
                             BEGIN
                               MailManagement.DownloadPdfAttachment(EmailItem);
                             END;
                              }

    { 5   ;1   ;Field     ;
                Name=MessageContents;
                CaptionML=[ENU=Message Content;
                           RUS=Содержимое сообщения];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=EmailItem."Message Type";
                Visible=NOT PlainTextVisible;
                OnValidate=VAR
                             TempBlob@1001 : Record 99008535;
                             FileManagement@1000 : Codeunit 419;
                           BEGIN
                             UpdatePlainTextVisible;

                             CASE EmailItem."Message Type" OF
                               EmailItem."Message Type"::"From Email Body Template":
                                 BEGIN
                                   FileManagement.BLOBImportFromServerFile(TempBlob,EmailItem."Body File Path");
                                   EmailItem.Body := TempBlob.Blob;
                                   BodyText := EmailItem.GetBodyText;
                                 END;
                               EmailItem."Message Type"::"Custom Message":
                                 BEGIN
                                   BodyText := PreviousBodyText;
                                   EmailItem.SetBodyText(BodyText);
                                 END;
                             END;
                           END;
                            }

    { 14  ;1   ;Group     ;
                GroupType=Group }

    { 12  ;2   ;Group     ;
                Visible=NOT PlainTextVisible;
                GroupType=Group }

    { 6   ;3   ;Field     ;
                Name=BodyHTMLMessage;
                CaptionML=[ENU=Body HTML Message;
                           RUS=Содержание сообщения (HTML)];
                ToolTipML=[ENU=Specifies a preview of the email message.;
                           RUS=Задает предварительный просмотр сообщения электронной почты.];
                ApplicationArea=#Basic,#Suite;
                MultiLine=Yes;
                ControlAddIn=[Microsoft.Dynamics.Nav.Client.WebPageViewer;PublicKeyToken=31bf3856ad364e35];
                ShowCaption=No }

    { 13  ;2   ;Group     ;
                Visible=PlainTextVisible;
                GroupType=Group }

    { 8   ;3   ;Field     ;
                Name=BodyText;
                CaptionML=[ENU=Message;
                           RUS=Сообщение];
                ToolTipML=[ENU=Specifies the body of the email.;
                           RUS=Определяет текст сообщения электронной почты.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=BodyText;
                MultiLine=Yes;
                OnValidate=BEGIN
                             EmailItem.SetBodyText(BodyText);

                             IF "Message Type" = "Message Type"::"Custom Message" THEN
                               PreviousBodyText := BodyText;
                           END;

                ShowCaption=No }

    { 9   ;1   ;Field     ;
                Name=OutlookEdit;
                CaptionML=[ENU=Edit in Outlook;
                           RUS=Изменить в Outlook];
                ToolTipML=[ENU=Specifies that Microsoft Outlook will open so you can complete the email there.;
                           RUS=Указывает, что будет открыто приложение Microsoft Outlook, чтобы вы могли завершить сообщение в нем.];
                ApplicationArea=#All;
                SourceExpr=LocalEdit;
                Visible=IsEditEnabled;
                MultiLine=Yes;
                OnValidate=BEGIN
                             IF LocalEdit = TRUE THEN
                               ShownFromEmail := ''
                             ELSE
                               ShownFromEmail := OriginalFromEmail;
                           END;
                            }

  }
  CODE
  {
    VAR
      EmailItem@1009 : Record 9500;
      OrigEmailItem@1001 : Record 9500;
      LocalEdit@1003 : Boolean;
      IsEditEnabled@1006 : Boolean;
      HasAttachment@1008 : Boolean;
      ForceOutlook@1007 : Boolean;
      PlainTextVisible@1013 : Boolean;
      IsOfficeAddin@1012 : Boolean;
      OriginalFromEmail@1000 : Text[250];
      BodyText@1002 : Text;
      SendToText@1005 : Text[250];
      BccText@1010 : Text[250];
      CcText@1011 : Text[250];
      ShownFromEmail@1004 : Text;
      PreviousBodyText@1014 : Text;

    PROCEDURE SetValues@1(ParmEmailItem@1000 : Record 9500;ParmOutlookSupported@1005 : Boolean;ParmSmtpSupported@1001 : Boolean);
    BEGIN
      EmailItem := ParmEmailItem;
      OrigEmailItem.COPY(ParmEmailItem);

      ForceOutlook := ParmOutlookSupported AND NOT ParmSmtpSupported;
      IsEditEnabled := ParmOutlookSupported AND (CURRENTCLIENTTYPE = CLIENTTYPE::Windows);
      IF NOT IsEditEnabled THEN
        LocalEdit := FALSE
      ELSE
        LocalEdit := TRUE;

      IF EmailItem."Attachment File Path" <> '' THEN
        HasAttachment := TRUE;
    END;

    PROCEDURE GetDoEdit@6() : Boolean;
    BEGIN
      EXIT(LocalEdit);
    END;

    LOCAL PROCEDURE UpdatePlainTextVisible@11();
    BEGIN
      PlainTextVisible := EmailItem."Message Type" = EmailItem."Message Type"::"Custom Message";
    END;

    EVENT BodyHTMLMessage@-6::ControlAddInReady@3(callbackUrl@1000 : Text);
    BEGIN
      CurrPage.BodyHTMLMessage.LinksOpenInNewWindow;
      CurrPage.BodyHTMLMessage.SetContent(BodyText);
    END;

    EVENT BodyHTMLMessage@-6::DocumentReady@7();
    BEGIN
    END;

    EVENT BodyHTMLMessage@-6::Callback@4(data@1000 : Text);
    BEGIN
    END;

    EVENT BodyHTMLMessage@-6::Refresh@5(CallbackUrl@1000 : Text);
    BEGIN
      CurrPage.BodyHTMLMessage.LinksOpenInNewWindow;
      CurrPage.BodyHTMLMessage.SetContent(BodyText);
    END;

    BEGIN
    END.
  }
}

