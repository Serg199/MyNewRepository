OBJECT Codeunit 1550 Record Restriction Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=08.06.17;
    Time=11:38:25;
    Modified=Yes;
    Version List=NAVW110.00,NOS-26;
  }
  PROPERTIES
  {
    Permissions=TableData 1550=rimd;
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      RecordRestrictedTxt@1000 : TextConst '@@@=You cannot use Customer 10000 for this action.;ENU=You cannot use %1 for this action.;RUS=Нельзя использовать %1 для этого действия.';
      RestrictLineUsageDetailsTxt@1001 : TextConst 'ENU=The restriction was imposed because the line requires approval.;RUS=Ограничение наложено в связи с тем, что данная строка требует утверждения.';
      RestrictBatchUsageDetailsTxt@1002 : TextConst 'ENU=The restriction was imposed because the journal batch requires approval.;RUS=Ограничение наложено в связи с тем, что данный раздел журнала требует утверждения.';

    PROCEDURE RestrictRecordUsage@2(RecID@1000 : RecordID;RestrictionDetails@1002 : Text);
    VAR
      RestrictedRecord@1001 : Record 1550;
      RecRef@1003 : RecordRef;
    BEGIN
      IF NOT RecRef.GET(RecID) THEN
        EXIT;

      RestrictedRecord.SETRANGE("Record ID",RecID);
      IF RestrictedRecord.FINDFIRST THEN BEGIN
        RestrictedRecord.Details := COPYSTR(RestrictionDetails,1,MAXSTRLEN(RestrictedRecord.Details));
        RestrictedRecord.MODIFY(TRUE);
      END ELSE BEGIN
        RestrictedRecord.INIT;
        RestrictedRecord."Record ID" := RecID;
        RestrictedRecord.Details := COPYSTR(RestrictionDetails,1,MAXSTRLEN(RestrictedRecord.Details));
        RestrictedRecord.INSERT(TRUE);
      END;
    END;

    PROCEDURE AllowGenJournalBatchUsage@28(GenJournalBatch@1000 : Record 232);
    VAR
      GenJournalLine@1001 : Record 81;
    BEGIN
      AllowRecordUsage(GenJournalBatch.RECORDID);

      GenJournalLine.SETRANGE("Journal Template Name",GenJournalBatch."Journal Template Name");
      GenJournalLine.SETRANGE("Journal Batch Name",GenJournalBatch.Name);
      IF GenJournalLine.FINDSET THEN
        REPEAT
          AllowRecordUsage(GenJournalLine.RECORDID);
        UNTIL GenJournalLine.NEXT = 0;
    END;

    PROCEDURE AllowRecordUsage@1(RecID@1000 : RecordID);
    VAR
      RestrictedRecord@1001 : Record 1550;
    BEGIN
      RestrictedRecord.SETRANGE("Record ID",RecID);
      RestrictedRecord.DELETEALL(TRUE);
    END;

    LOCAL PROCEDURE UpdateRestriction@23(RecID@1000 : RecordID;xRecID@1001 : RecordID);
    VAR
      RestrictedRecord@1002 : Record 1550;
    BEGIN
      RestrictedRecord.SETRANGE("Record ID",xRecID);
      RestrictedRecord.MODIFYALL("Record ID",RecID);
    END;

    [EventSubscriber(Table,81,OnAfterInsertEvent)]
    PROCEDURE RestrictGenJournalLineAfterInsert@26(VAR Rec@1000 : Record 81;RunTrigger@1001 : Boolean);
    BEGIN
      //NC NOS-26 > SPA
      IF Rec."Transaction Type" <> Rec."Transaction Type"::Automatic THEN
      //NC NOS-26 < SPA
      RestrictGenJournalLine(Rec);
    END;

    [EventSubscriber(Table,81,OnAfterModifyEvent)]
    PROCEDURE RestrictGenJournalLineAfterModify@29(VAR Rec@1000 : Record 81;VAR xRec@1001 : Record 81;RunTrigger@1004 : Boolean);
    BEGIN
      //NC NOS-26 > SPA
      IF Rec."Transaction Type" = Rec."Transaction Type"::Automatic THEN
        EXIT;
      //NC NOS-26 < SPA
      IF FORMAT(Rec) = FORMAT(xRec) THEN
        EXIT;
      RestrictGenJournalLine(Rec);
    END;

    LOCAL PROCEDURE RestrictGenJournalLine@17(VAR GenJournalLine@1000 : Record 81);
    VAR
      GenJournalBatch@1003 : Record 232;
      ApprovalsMgmt@1002 : Codeunit 1535;
    BEGIN
      IF GenJournalLine."System-Created Entry" OR GenJournalLine.ISTEMPORARY THEN
        EXIT;

      IF ApprovalsMgmt.IsGeneralJournalLineApprovalsWorkflowEnabled(GenJournalLine) THEN
        RestrictRecordUsage(GenJournalLine.RECORDID,RestrictLineUsageDetailsTxt);

      IF GenJournalBatch.GET(GenJournalLine."Journal Template Name",GenJournalLine."Journal Batch Name") THEN
        IF ApprovalsMgmt.IsGeneralJournalBatchApprovalsWorkflowEnabled(GenJournalBatch) THEN
          RestrictRecordUsage(GenJournalLine.RECORDID,RestrictBatchUsageDetailsTxt);
    END;

    LOCAL PROCEDURE CheckGenJournalBatchHasUsageRestrictions@19(GenJournalBatch@1000 : Record 232);
    VAR
      GenJournalLine@1001 : Record 81;
    BEGIN
      CheckRecordHasUsageRestrictions(GenJournalBatch.RECORDID);

      GenJournalLine.SETRANGE("Journal Template Name",GenJournalBatch."Journal Template Name");
      GenJournalLine.SETRANGE("Journal Batch Name",GenJournalBatch.Name);
      IF GenJournalLine.FINDSET THEN
        REPEAT
          CheckRecordHasUsageRestrictions(GenJournalLine.RECORDID);
        UNTIL GenJournalLine.NEXT = 0;
    END;

    [TryFunction]
    PROCEDURE CheckRecordHasUsageRestrictions@4(RecID@1000 : RecordID);
    VAR
      RestrictedRecord@1001 : Record 1550;
      ErrorMessage@1002 : Text;
    BEGIN
      RestrictedRecord.SETRANGE("Record ID",RecID);
      IF NOT RestrictedRecord.FINDFIRST THEN
        EXIT;

      ErrorMessage := STRSUBSTNO(RecordRestrictedTxt,
          FORMAT(FORMAT(RestrictedRecord."Record ID",0,1))) + '\\' + RestrictedRecord.Details;
      ERROR(ErrorMessage);
    END;

    [EventSubscriber(Table,36,OnCheckSalesPostRestrictions)]
    PROCEDURE CustomerCheckSalesPostRestrictions@3(VAR Sender@1000 : Record 36);
    VAR
      Customer@1001 : Record 18;
    BEGIN
      Customer.GET(Sender."Sell-to Customer No.");
      CheckRecordHasUsageRestrictions(Customer.RECORDID);
      IF Sender."Sell-to Customer No." = Sender."Bill-to Customer No." THEN
        EXIT;
      Customer.GET(Sender."Bill-to Customer No.");
      CheckRecordHasUsageRestrictions(Customer.RECORDID);
    END;

    [EventSubscriber(Table,38,OnCheckPurchasePostRestrictions)]
    PROCEDURE VendorCheckPurchasePostRestrictions@43(VAR Sender@1000 : Record 38);
    VAR
      Vendor@1001 : Record 23;
    BEGIN
      Vendor.GET(Sender."Buy-from Vendor No.");
      CheckRecordHasUsageRestrictions(Vendor.RECORDID);
      IF Sender."Buy-from Vendor No." = Sender."Pay-to Vendor No." THEN
        EXIT;
      Vendor.GET(Sender."Pay-to Vendor No.");
      CheckRecordHasUsageRestrictions(Vendor.RECORDID);
    END;

    [EventSubscriber(Table,81,OnCheckGenJournalLinePostRestrictions)]
    PROCEDURE CustomerCheckGenJournalLinePostRestrictions@5(VAR Sender@1000 : Record 81);
    VAR
      Customer@1001 : Record 18;
    BEGIN
      //NC NOS-26 > SPA
      IF Sender."Transaction Type" = Sender."Transaction Type"::Automatic THEN
        EXIT;
      //NC NOS-26 < SPA
      IF (Sender."Account Type" = Sender."Account Type"::Customer) AND (Sender."Account No." <> '') THEN BEGIN
        Customer.GET(Sender."Account No.");
        CheckRecordHasUsageRestrictions(Customer.RECORDID);
      END;

      IF (Sender."Bal. Account Type" = Sender."Bal. Account Type"::Customer) AND (Sender."Bal. Account No." <> '') THEN BEGIN
        Customer.GET(Sender."Bal. Account No.");
        CheckRecordHasUsageRestrictions(Customer.RECORDID);
      END;
    END;

    [EventSubscriber(Table,81,OnCheckGenJournalLinePostRestrictions)]
    PROCEDURE VendorCheckGenJournalLinePostRestrictions@35(VAR Sender@1000 : Record 81);
    VAR
      Vendor@1001 : Record 23;
    BEGIN
      //NC NOS-26 > SPA
      IF Sender."Transaction Type" = Sender."Transaction Type"::Automatic THEN
        EXIT;
      //NC NOS-26 < SPA
      IF (Sender."Account Type" = Sender."Account Type"::Vendor) AND (Sender."Account No." <> '') THEN BEGIN
        Vendor.GET(Sender."Account No.");
        CheckRecordHasUsageRestrictions(Vendor.RECORDID);
      END;

      IF (Sender."Bal. Account Type" = Sender."Bal. Account Type"::Vendor) AND (Sender."Bal. Account No." <> '') THEN BEGIN
        Vendor.GET(Sender."Bal. Account No.");
        CheckRecordHasUsageRestrictions(Vendor.RECORDID);
      END;
    END;

    [EventSubscriber(Table,81,OnCheckGenJournalLinePostRestrictions)]
    PROCEDURE GenJournalLineCheckGenJournalLinePostRestrictions@10(VAR Sender@1000 : Record 81);
    BEGIN
      //NC NOS-26 > SPA
      IF Sender."Transaction Type" = Sender."Transaction Type"::Automatic THEN
        EXIT;
      //NC NOS-26 < SPA
      CheckRecordHasUsageRestrictions(Sender.RECORDID);
    END;

    [EventSubscriber(Table,81,OnCheckGenJournalLinePrintCheckRestrictions)]
    PROCEDURE GenJournalLineCheckGenJournalLinePrintCheckRestrictions@21(VAR Sender@1000 : Record 81);
    BEGIN
      //NC NOS-26 > SPA
      IF Sender."Transaction Type" = Sender."Transaction Type"::Automatic THEN
        EXIT;
      //NC NOS-26 < SPA
      IF Sender."Bank Payment Type" = Sender."Bank Payment Type"::"Computer Check" THEN
        CheckRecordHasUsageRestrictions(Sender.RECORDID);
    END;

    [EventSubscriber(Table,272,OnBeforeInsertEvent)]
    PROCEDURE CheckPrintRestrictionsBeforeInsertCheckLedgerEntry@22(VAR Rec@1000 : Record 272;RunTrigger@1001 : Boolean);
    VAR
      RecordIdToPrint@1002 : RecordID;
    BEGIN
      RecordIdToPrint := Rec."Record ID to Print";
      CheckRecordHasUsageRestrictions(RecordIdToPrint);
    END;

    [EventSubscriber(Table,272,OnBeforeModifyEvent)]
    PROCEDURE CheckPrintRestrictionsBeforeModifyCheckLedgerEntry@27(VAR Rec@1000 : Record 272;VAR xRec@1001 : Record 272;RunTrigger@1002 : Boolean);
    VAR
      RecordIdToPrint@1003 : RecordID;
    BEGIN
      RecordIdToPrint := Rec."Record ID to Print";
      CheckRecordHasUsageRestrictions(RecordIdToPrint);
    END;

    [EventSubscriber(Table,81,OnCheckGenJournalLinePostRestrictions)]
    PROCEDURE GenJournalBatchCheckGenJournalLinePostRestrictions@11(VAR Sender@1000 : Record 81);
    VAR
      GenJournalBatch@1001 : Record 232;
    BEGIN
      //NC NOS-26 > SPA
      IF Sender."Transaction Type" = Sender."Transaction Type"::Automatic THEN
        EXIT;
      //NC NOS-26 < SPA
      IF GenJournalBatch.GET(Sender."Journal Template Name",Sender."Journal Batch Name") THEN
        CheckRecordHasUsageRestrictions(GenJournalBatch.RECORDID);
    END;

    [EventSubscriber(Table,232,OnCheckGenJournalLineExportRestrictions)]
    PROCEDURE GenJournalBatchCheckGenJournalLineExportRestrictions@24(VAR Sender@1000 : Record 232);
    BEGIN
      IF NOT Sender."Allow Payment Export" THEN
        EXIT;

      CheckGenJournalBatchHasUsageRestrictions(Sender);
    END;

    [EventSubscriber(Table,36,OnCheckSalesPostRestrictions)]
    PROCEDURE SalesHeaderCheckSalesPostRestrictions@9(VAR Sender@1000 : Record 36);
    BEGIN
      CheckRecordHasUsageRestrictions(Sender.RECORDID);
    END;

    [EventSubscriber(Table,36,OnCheckSalesReleaseRestrictions)]
    PROCEDURE SalesHeaderCheckSalesReleaseRestrictions@31(VAR Sender@1000 : Record 36);
    BEGIN
      CheckRecordHasUsageRestrictions(Sender.RECORDID);
    END;

    [EventSubscriber(Table,38,OnCheckPurchasePostRestrictions)]
    PROCEDURE PurchaseHeaderCheckPurchasePostRestrictions@12(VAR Sender@1000 : Record 38);
    BEGIN
      CheckRecordHasUsageRestrictions(Sender.RECORDID);
    END;

    [EventSubscriber(Table,38,OnCheckPurchaseReleaseRestrictions)]
    PROCEDURE PurchaseHeaderCheckPurchaseReleaseRestrictions@30(VAR Sender@1000 : Record 38);
    BEGIN
      CheckRecordHasUsageRestrictions(Sender.RECORDID);
    END;

    [EventSubscriber(Table,18,OnBeforeDeleteEvent)]
    PROCEDURE RemoveCustomerRestrictionsBeforeDelete@13(VAR Rec@1000 : Record 18;RunTrigger@1001 : Boolean);
    BEGIN
      AllowRecordUsage(Rec.RECORDID);
    END;

    [EventSubscriber(Table,23,OnBeforeDeleteEvent)]
    PROCEDURE RemoveVendorRestrictionsBeforeDelete@32(VAR Rec@1000 : Record 23;RunTrigger@1001 : Boolean);
    BEGIN
      AllowRecordUsage(Rec.RECORDID);
    END;

    [EventSubscriber(Table,27,OnBeforeDeleteEvent)]
    PROCEDURE RemoveItemRestrictionsBeforeDelete@33(VAR Rec@1000 : Record 27;RunTrigger@1001 : Boolean);
    BEGIN
      AllowRecordUsage(Rec.RECORDID);
    END;

    [EventSubscriber(Table,81,OnBeforeDeleteEvent)]
    PROCEDURE RemoveGenJournalLineRestrictionsBeforeDelete@6(VAR Rec@1000 : Record 81;RunTrigger@1001 : Boolean);
    BEGIN
      //NC NOS-26 > SPA
      IF Rec."Transaction Type" = Rec."Transaction Type"::Automatic THEN
        EXIT;
      //NC NOS-26 < SPA
      AllowRecordUsage(Rec.RECORDID);
    END;

    [EventSubscriber(Table,232,OnBeforeDeleteEvent)]
    PROCEDURE RemoveGenJournalBatchRestrictionsBeforeDelete@8(VAR Rec@1000 : Record 232;RunTrigger@1001 : Boolean);
    BEGIN
      AllowRecordUsage(Rec.RECORDID);
    END;

    [EventSubscriber(Table,36,OnBeforeDeleteEvent)]
    PROCEDURE RemoveSalesHeaderRestrictionsBeforeDelete@14(VAR Rec@1000 : Record 36;RunTrigger@1001 : Boolean);
    BEGIN
      AllowRecordUsage(Rec.RECORDID);
    END;

    [EventSubscriber(Table,38,OnBeforeDeleteEvent)]
    PROCEDURE RemovePurchaseHeaderRestrictionsBeforeDelete@15(VAR Rec@1000 : Record 38;RunTrigger@1001 : Boolean);
    BEGIN
      AllowRecordUsage(Rec.RECORDID);
    END;

    [EventSubscriber(Table,81,OnAfterRenameEvent)]
    PROCEDURE UpdateGenJournalLineRestrictionsAfterRename@20(VAR Rec@1000 : Record 81;VAR xRec@1001 : Record 81;RunTrigger@1002 : Boolean);
    BEGIN
      //NC NOS-26 > SPA
      IF Rec."Transaction Type" = Rec."Transaction Type"::Automatic THEN
        EXIT;
      //NC NOS-26 < SPA
      UpdateRestriction(Rec.RECORDID,xRec.RECORDID);
    END;

    [EventSubscriber(Table,130,OnCheckIncomingDocSetForOCRRestrictions)]
    PROCEDURE IncomingDocCheckSetForOCRRestrictions@7(VAR Sender@1000 : Record 130);
    BEGIN
      CheckRecordHasUsageRestrictions(Sender.RECORDID);
    END;

    [EventSubscriber(Table,130,OnCheckIncomingDocReleaseRestrictions)]
    PROCEDURE IncomingDocCheckReleaseRestrictions@25(VAR Sender@1000 : Record 130);
    BEGIN
      CheckRecordHasUsageRestrictions(Sender.RECORDID);
    END;

    [EventSubscriber(Table,232,OnAfterRenameEvent)]
    PROCEDURE UpdateGenJournalBatchRestrictionsAfterRename@18(VAR Rec@1000 : Record 232;VAR xRec@1001 : Record 232;RunTrigger@1002 : Boolean);
    BEGIN
      UpdateRestriction(Rec.RECORDID,xRec.RECORDID);
    END;

    [EventSubscriber(Table,36,OnAfterRenameEvent)]
    PROCEDURE UpdateSalesHeaderRestrictionsAfterRename@16(VAR Rec@1000 : Record 36;VAR xRec@1001 : Record 36;RunTrigger@1002 : Boolean);
    BEGIN
      UpdateRestriction(Rec.RECORDID,xRec.RECORDID);
    END;

    [EventSubscriber(Table,38,OnAfterRenameEvent)]
    PROCEDURE UpdatePurchaseHeaderRestrictionsAfterRename@37(VAR Rec@1000 : Record 38;VAR xRec@1001 : Record 38;RunTrigger@1002 : Boolean);
    BEGIN
      UpdateRestriction(Rec.RECORDID,xRec.RECORDID);
    END;

    [EventSubscriber(Table,130,OnCheckIncomingDocCreateDocRestrictions)]
    PROCEDURE IncomingDocCheckCreateDocRestrictions@76(VAR Sender@1000 : Record 130);
    BEGIN
      CheckRecordHasUsageRestrictions(Sender.RECORDID);
    END;

    BEGIN
    {
      NC NOS-26 SPA Добавлено ограничение для автоматического фин. журнала
    }
    END.
  }
}

