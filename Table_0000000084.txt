OBJECT Table 84 Acc. Schedule Name
{
  OBJECT-PROPERTIES
  {
    Date=27.03.17;
    Time=15:33:25;
    Modified=Yes;
    Version List=NAVW110.00,NAVRU10.00,NOS-26;
  }
  PROPERTIES
  {
    DataCaptionFields=Name,Description;
    OnDelete=BEGIN
               AccSchedLine.SETRANGE("Schedule Name",Name);
               AccSchedLine.DELETEALL;
             END;

    CaptionML=[ENU=Acc. Schedule Name;
               RUS=Название финансового отчета];
    LookupPageID=Page103;
  }
  FIELDS
  {
    { 1   ;   ;Name                ;Code10        ;CaptionML=[ENU=Name;
                                                              RUS=Название];
                                                   NotBlank=Yes }
    { 2   ;   ;Description         ;Text80        ;CaptionML=[ENU=Description;
                                                              RUS=Описание] }
    { 3   ;   ;Default Column Layout;Code10       ;TableRelation="Column Layout Name";
                                                   CaptionML=[ENU=Default Column Layout;
                                                              RUS=Раскладка столбцов по умолчанию] }
    { 4   ;   ;Analysis View Name  ;Code10        ;TableRelation="Analysis View";
                                                   CaptionML=[ENU=Analysis View Name;
                                                              RUS=Название аналитического отчета] }
    { 12400;  ;Used in Statutory Report;Boolean   ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Stat. Report Table Mapping" WHERE (Int. Source Type=CONST(Acc. Schedule),
                                                                                                         Int. Source No.=FIELD(Name)));
                                                   CaptionML=[ENU=Used in Statutory Report;
                                                              RUS=Использ. в регламентном отчете];
                                                   Editable=No }
    { 50001;  ;Page Setup Zoom     ;Integer       ;CaptionML=[ENU=Page Setup Zoom;
                                                              RUS=Стр. Настройка Масштаб] }
    { 50002;  ;Page Setup FitToPagesTall;Integer  ;CaptionML=[ENU=Page Setup FitToPagesTall;
                                                              RUS=Стр. Настройка В Высоту] }
    { 50003;  ;Page Setup FitToPagesWide;Integer  ;CaptionML=[ENU=Page Setup FitToPagesWide;
                                                              RUS=Стр. Настройка В Ширину] }
    { 50004;  ;Page Setup Orientation;Integer     ;CaptionML=[ENU=Page Setup Orientation;
                                                              RUS=Стр. Настройка Ориентация] }
    { 50005;  ;Page Setup HeaderMargin;Integer    ;CaptionML=[ENU=Page Setup HeaderMargin;
                                                              RUS=Стр. Настройка Верх. Колонт.] }
    { 50006;  ;Page Setup FooterMargin;Integer    ;CaptionML=[ENU=Page Setup FooterMargin;
                                                              RUS=Стр. Настройка Ниж. Колонт.] }
    { 50007;  ;Page Setup LeftMargin;Integer      ;CaptionML=[ENU=Page Setup LeftMargin;
                                                              RUS=Стр. Настройка Лев. Поле] }
    { 50008;  ;Page Setup RightMargin;Integer     ;CaptionML=[ENU=Page Setup RightMargin;
                                                              RUS=Стр. Настройка Прав. Поле] }
    { 50009;  ;Page Setup TopMargin;Integer       ;CaptionML=[ENU=Page Setup TopMargin;
                                                              RUS=Стр. Настройка Верх. Поле] }
    { 50010;  ;Page Setup BottomMargin;Integer    ;CaptionML=[ENU=Page Setup BottomMargin;
                                                              RUS=Стр. Настройка Ниж. Поле] }
    { 50020;  ;G/L Corr. Analysis View Name;Code20;TableRelation="G/L Corr. Analysis View";
                                                   CaptionML=[ENU=G/L Corr. Analysis View Name;
                                                              RUS=Корресп. Аналитический Отчет];
                                                   Description=NC NCS-1631 }
    { 50021;  ;G/L Corr. Account Filter;Text250   ;CaptionML=[ENU=G/L Corr. Account Filter;
                                                              RUS=Корреспонд. Фин. Счёт Фильтр];
                                                   Description=NC NCS-1631 }
    { 50022;  ;Analysis View Name Add.;Code10     ;TableRelation="Analysis View";
                                                   CaptionML=[ENU=Additional Analysis View Name;
                                                              RUS=Название Доп. Аналитического Отчета];
                                                   Description=NC NCS-1701 USE }
  }
  KEYS
  {
    {    ;Name                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      AccSchedLine@1000 : Record 85;
      Text26550@1210002 : TextConst 'ENU=Select a filename to import File Settings.;RUS=Выберите имя файла для импорта настроек файла.';
      Text26551@1210001 : TextConst 'ENU=Select a filename to export File Settings to.;RUS=Выберите имя файла для экспорта в файл настроек.';
      FileMgt@1210005 : Codeunit 419;
      Text12400@1210006 : TextConst 'ENU=File Name;RUS=Имя файла';

    PROCEDURE ExportSettings@1210002(VAR AccScheduleName@1210000 : Record 84);
    VAR
      StatutoryReport@1210005 : Record 26550;
      AccountSchedules@1210001 : XMLport 26552;
      OutputFile@1210002 : File;
      OutStr@1210003 : OutStream;
      ClientFileName@1210006 : Text;
      ServerFileName@1210007 : Text;
    BEGIN
      ClientFileName := 'AccSchedule.xml';
      ServerFileName := FileMgt.ServerTempFileName('.xml');

      OutputFile.CREATE(ServerFileName);
      OutputFile.CREATEOUTSTREAM(OutStr);

      AccountSchedules.SETDESTINATION(OutStr);
      AccountSchedules.SetData(AccScheduleName);
      AccountSchedules.EXPORT;
      OutputFile.CLOSE;
      CLEAR(OutStr);

      IF FileMgt.IsWebClient THEN
        DOWNLOAD(ServerFileName,'','','',ClientFileName)
      ELSE BEGIN
        ClientFileName := FileMgt.SaveFileDialog(Text26551,ClientFileName,FileMgt.GetToFilterText('','.xml'));
        FileMgt.DownloadToFile(ServerFileName,ClientFileName);
      END;
    END;

    PROCEDURE ImportSettings@1210000(ServerFileName@1210000 : Text);
    VAR
      AccountSchedules@1210004 : XMLport 26552;
      InputFile@1210002 : File;
      InStr@1210003 : InStream;
    BEGIN
      IF ServerFileName = '' THEN
        ServerFileName := FileMgt.UploadFile('','.xml');

      InputFile.OPEN(ServerFileName);
      InputFile.CREATEINSTREAM(InStr);

      AccountSchedules.SETSOURCE(InStr);
      AccountSchedules.IMPORT;
      AccountSchedules.ImportData;

      CLEAR(InStr);
      InputFile.CLOSE;
    END;

    PROCEDURE Print@1();
    VAR
      AccountSchedule@1000 : Report 25;
    BEGIN
      AccountSchedule.SetAccSchedName(Name);
      AccountSchedule.SetColumnLayoutName("Default Column Layout");
      AccountSchedule.RUN;
    END;

    BEGIN
    {
      NC PIF001 GS - добавил новые поля
      NC NCS-1631 DP Добавлены поля "G/L Corr. Analysis View Name", "G/L Corr. Account Filter"
      NC NCS-1701 USE Добавлено поле Analysis View Name Add.
    }
    END.
  }
}

