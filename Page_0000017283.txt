OBJECT Page 17283 Tax Reg. Norm Term Formula
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Norm Term Lines;
               RUS=Строки термина нормы];
    SourceTable=Table17241;
    PageType=List;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             AmountTypeEditable := TRUE;
             AccountTypeEditable := TRUE;
             OperationEditable := TRUE;
             BalAccountNoEditable := TRUE;
           END;

    OnAfterGetRecord=BEGIN
                       SetEnable;
                     END;

    OnNewRecord=BEGIN
                  CALCFIELDS("Expression Type");
                  IF "Expression Type" = "Expression Type"::"Plus/Minus" THEN
                    Operation := Operation::"+"
                  ELSE
                    IF "Expression Type" = "Expression Type"::"Multiply/Divide" THEN
                      Operation := Operation::"*"
                    ELSE BEGIN
                      IF NOT (COUNT = 3) THEN
                        CurrPage.CLOSE;
                      Operation := Operation::Negative;
                      "Account Type" := "Account Type"::Termin;
                    END;
                END;

    OnDeleteRecord=BEGIN
                     CALCFIELDS("Expression Type");
                     IF "Expression Type" = "Expression Type"::Compare THEN BEGIN
                       IF NOT CONFIRM(Text001,FALSE) THEN
                         EXIT(FALSE);
                       DELETEALL;
                       CurrPage.CLOSE;
                     END;
                     EXIT(TRUE);
                   END;

    OnQueryClosePage=BEGIN
                       CALCFIELDS("Expression Type");
                       IF NOT ("Expression Type" = "Expression Type"::Compare) THEN
                         EXIT(TRUE);
                       IF NOT (COUNT = 3) THEN
                         EXIT(TRUE);
                       ExternReportFormula1.COPY(Rec);
                       ExternReportFormula1.FINDSET;
                       IF ExternReportFormula1."Account No." = '' THEN BEGIN
                         Rec := ExternReportFormula1;
                         CurrPage.UPDATE(FALSE);
                         ExternReportFormula1.TESTFIELD("Account No.");
                       END;
                       REPEAT
                         IF ExternReportFormula1."Bal. Account No." = '' THEN BEGIN
                           Rec := ExternReportFormula1;
                           CurrPage.UPDATE(FALSE);
                           ExternReportFormula1.TESTFIELD("Bal. Account No.");
                         END;
                       UNTIL ExternReportFormula1.NEXT = 0;
                     END;

    OnAfterGetCurrRecord=BEGIN
                           SetEnable;
                         END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the operation associated with the norm term line.;
                           RUS=Определяет операцию, связанную со строкой термина нормы.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Operation;
                Editable=OperationEditable }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the account type of the norm term line.;
                           RUS=Определяет тип счета строки термина нормы.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Account Type";
                Editable=AccountTypeEditable;
                OnValidate=BEGIN
                             AccountTypeOnAfterValidate;
                           END;
                            }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the account number associated with the norm term line.;
                           RUS=Определяет номер счета, связанный со строкой термина нормы.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Account No.";
                OnValidate=BEGIN
                             AccountNoOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           CASE "Account Type" OF
                             "Account Type"::"GL Acc","Account Type"::"Net Change":
                               BEGIN
                                 GLAcc.RESET;
                                 IF "Bal. Account No." <> '' THEN
                                   IF STRPOS('|&<>',COPYSTR("Account No.",STRLEN("Account No."))) = 0 THEN BEGIN
                                     GLAcc.SETFILTER("No.","Account No.");
                                     IF GLAcc.FINDFIRST THEN;
                                     GLAcc.SETRANGE("No.");
                                   END;
                                 IF ACTION::LookupOK = PAGE.RUNMODAL(0,GLAcc) THEN BEGIN
                                   Text := GLAcc."No.";
                                   EXIT(TRUE);
                                 END;
                               END;
                             "Account Type"::Termin:
                               BEGIN
                                 NormTermName.RESET;
                                 IF "Account No." <> '' THEN BEGIN
                                   NormTermName.SETFILTER("Term Code","Account No.");
                                   IF NormTermName.FINDFIRST THEN;
                                   NormTermName.SETRANGE("Term Code");
                                 END;
                                 IF ACTION::LookupOK = PAGE.RUNMODAL(0,NormTermName) THEN BEGIN
                                   "Account No." := '';
                                   Text := NormTermName."Term Code";
                                   EXIT(TRUE);
                                 END;
                               END;
                             "Account Type"::Norm:
                               IF "Jurisdiction Code" <> '' THEN BEGIN
                                 NormGroup.RESET;
                                 NormGroup.FILTERGROUP(2);
                                 NormGroup.SETRANGE("Norm Jurisdiction Code","Jurisdiction Code");
                                 NormGroup.FILTERGROUP(0);
                                 NormGroup.SETRANGE("Has Details",TRUE);
                                 IF NormGroup.GET("Jurisdiction Code",COPYSTR("Account No.",1,MAXSTRLEN(NormGroup.Code))) THEN ;
                                 IF ACTION::LookupOK = PAGE.RUNMODAL(0,NormGroup) THEN BEGIN
                                   "Account No." := '';
                                   Text := NormGroup.Code;
                                   EXIT(TRUE);
                                 END;
                               END;
                           END;
                           EXIT(FALSE);
                         END;
                          }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the balance account number associated with the norm term line.;
                           RUS=Определяет номер балансового счета, связанный со строкой термина нормы.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Bal. Account No.";
                Editable=BalAccountNoEditable;
                OnLookup=BEGIN
                           IF "Account Type" = "Account Type"::"Net Change" THEN BEGIN
                             GLAcc.RESET;
                             IF "Bal. Account No." <> '' THEN
                               IF STRPOS('|&<>',COPYSTR("Bal. Account No.",STRLEN("Bal. Account No."))) = 0 THEN BEGIN
                                 GLAcc.SETFILTER("No.","Bal. Account No.");
                                 IF GLAcc.FINDFIRST THEN;
                                 GLAcc.SETRANGE("No.");
                               END;
                             IF ACTION::LookupOK = PAGE.RUNMODAL(0,GLAcc) THEN BEGIN
                               Text := GLAcc."No.";
                               EXIT(TRUE);
                             END;
                           END;
                           CALCFIELDS("Expression Type");
                           IF "Expression Type" = "Expression Type"::Compare THEN BEGIN
                             NormTermName.RESET;
                             IF "Bal. Account No." <> '' THEN BEGIN
                               NormTermName.SETFILTER("Term Code","Bal. Account No.");
                               IF NormTermName.FINDFIRST THEN;
                               NormTermName.SETRANGE("Term Code");
                             END;
                             IF ACTION::LookupOK = PAGE.RUNMODAL(0,NormTermName) THEN BEGIN
                               "Bal. Account No." := '';
                               Text := NormTermName."Term Code";
                               EXIT(TRUE);
                             END;
                           END;
                           EXIT(FALSE);
                         END;
                          }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the amount type associated with the norm term line.;
                           RUS=Определяет тип суммы, связанный со строкой термина нормы.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Amount Type";
                Editable=AmountTypeEditable }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the process sign associated with the norm term line.;
                           RUS=Определяет знак обработки, связанный со строкой термина нормы.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Process Sign" }

    { 14  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the process division by zero associated with the norm term line.;
                           RUS=Определяет деление на ноль, связанное со строкой термина нормы.];
                SourceExpr="Process Division by Zero";
                Visible=FALSE }

    { 1000000000;2;Field  ;
                ToolTipML=[ENU=Specifies the jurisdiction code associated with the norm term line.;
                           RUS=Определяет код юрисдикции, связанный со строкой термина нормы.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Jurisdiction Code" }

  }
  CODE
  {
    VAR
      Text001@1001 : TextConst 'ENU=Delete all lines?;RUS=Удалить все строки?';
      GLAcc@1002 : Record 15;
      ExternReportFormula1@1003 : Record 17241;
      NormTermName@1004 : Record 17240;
      NormGroup@1005 : Record 17221;
      BalAccountNoEditable@19037417 : Boolean INDATASET;
      OperationEditable@19015421 : Boolean INDATASET;
      AccountTypeEditable@19025853 : Boolean INDATASET;
      AmountTypeEditable@19052850 : Boolean INDATASET;

    LOCAL PROCEDURE SetEnable@1();
    BEGIN
      CALCFIELDS("Expression Type");
      IF "Expression Type" = "Expression Type"::Compare THEN BEGIN
        BalAccountNoEditable := TRUE;
        OperationEditable := FALSE;
        AccountTypeEditable := FALSE;
      END ELSE
        BalAccountNoEditable := "Account Type" = "Account Type"::"Net Change";

      AmountTypeEditable := "Account Type" IN ["Account Type"::"GL Acc","Account Type"::"Net Change"];
    END;

    LOCAL PROCEDURE AccountTypeOnAfterValidate@19013737();
    BEGIN
      SetEnable;
    END;

    LOCAL PROCEDURE AccountNoOnAfterValidate@19049580();
    BEGIN
      SetEnable;
      CurrPage.UPDATE(TRUE);
    END;

    BEGIN
    END.
  }
}

