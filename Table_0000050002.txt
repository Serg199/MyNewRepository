OBJECT Table 50002 CoA Mapping
{
  OBJECT-PROPERTIES
  {
    Date=23.05.17;
    Time=18:14:35;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    DataCaptionFields=Mapping Code;
    OnInsert=BEGIN
               //NC OPT > PCH
               CalcRatingTransformation;
               //NC OPT < PCH
               //NC MDTC10 > MP
               ConsMgt.CheckMappingIsBlocked("Mapping Code");
               //NC MDTC10 < MP
             END;

    OnModify=BEGIN
               //NC OPT > PCH
               CalcRatingTransformation;
               //NC OPT < PCH
               //NC MDTC10 > MP
               ConsMgt.CheckMappingIsBlocked("Mapping Code");
               //NC MDTC10 < MP
             END;

    OnDelete=BEGIN
               //NC MDTC10 > MP
               ConsMgt.CheckMappingIsBlocked("Mapping Code");
               //NC MDTC10 < MP
             END;

    OnRename=BEGIN
               //NC OPT > PCH
               CalcRatingTransformation;
               //NC OPT < PCH
               //NC MDTC10 > MP
               ConsMgt.CheckMappingIsBlocked("Mapping Code");
               //NC MDTC10 < MP
             END;

    CaptionML=[ENU=CoA Mapping;
               RUS=Преобразование Плана Счетов];
    LookupPageID=Page50010;
    DrillDownPageID=Page50010;
  }
  FIELDS
  {
    { 10  ;   ;Mapping Code        ;Code20        ;TableRelation=Mapping;
                                                   CaptionML=[ENU=Mapping Code;
                                                              RUS=Код Мэппинга] }
    { 15  ;   ;Line No.            ;Integer       ;CaptionML=[ENU=Line No.;
                                                              RUS=Линия Но.];
                                                   Description=NCMDTM02 MP }
    { 20  ;   ;Source Account Code ;Code20        ;OnValidate=BEGIN
                                                                //NC PIF001 > DP
                                                                {
                                                                ConsolidationSource.GET(GETFILTER("Mapping Code"));
                                                                IF ConsolidationSource."Import Format"  = ConsolidationSource."Import Format"::FromNavision THEN BEGIN
                                                                  GLAccount.CHANGECOMPANY(ConsolidationSource."Company Name");
                                                                  IF GLAccount.GET("Source Account Code") THEN
                                                                    "Source Account Name" := GLAccount.Name
                                                                  ELSE
                                                                    MESSAGE(Text00001,"Source Account Code", ConsolidationSource."Company Name");
                                                                END;
                                                                }
                                                                //NC PIF001 < DP
                                                              END;

                                                   OnLookup=BEGIN
                                                              {
                                                              ConsolidationSource.GET("Mapping Code");
                                                              IF ConsolidationSource."Import Format"  = ConsolidationSource."Import Format"::FromNavision THEN BEGIN
                                                                GLAccountList.SetIntercompanyName(ConsolidationSource."Company Name");

                                                                GLAccountList.LOOKUPMODE := TRUE;
                                                                IF GLAccountList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                  GLAccountList.GETRECORD(GLAccount);
                                                                  "Source Account Code" := GLAccount."No.";
                                                                  "Source Account Name" := GLAccount.Name;
                                                                END;
                                                                CLEAR(GLAccountList);
                                                              END;
                                                              }
                                                            END;

                                                   CaptionML=[ENU=Source Account Code;
                                                              RUS=Код Счета Источника];
                                                   NotBlank=Yes }
    { 30  ;   ;Source Account Name ;Text250       ;CaptionML=[ENU=Source Account Name;
                                                              RUS=Источник Счет Описание];
                                                   Editable=Yes }
    { 35  ;   ;Source Corresp. Account Code;Code20;OnValidate=BEGIN
                                                                //NC PIF001 > DP
                                                                {
                                                                ConsolidationSource.GET(GETFILTER("Mapping Code"));
                                                                IF ConsolidationSource."Import Format"  = ConsolidationSource."Import Format"::FromNavision THEN BEGIN
                                                                  GLAccount.CHANGECOMPANY(ConsolidationSource."Company Name");
                                                                  IF GLAccount.GET("Source Account Code") THEN
                                                                    "Source Account Name" := GLAccount.Name
                                                                  ELSE
                                                                    MESSAGE(Text00001,"Source Account Code", ConsolidationSource."Company Name");
                                                                END;
                                                                }
                                                                //NC PIF001 < DP
                                                              END;

                                                   OnLookup=BEGIN
                                                              {
                                                              ConsolidationSource.GET("Mapping Code");
                                                              IF ConsolidationSource."Import Format"  = ConsolidationSource."Import Format"::FromNavision THEN BEGIN
                                                                GLAccountList.SetIntercompanyName(ConsolidationSource."Company Name");

                                                                GLAccountList.LOOKUPMODE := TRUE;
                                                                IF GLAccountList.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                  GLAccountList.GETRECORD(GLAccount);
                                                                  "Source Account Code" := GLAccount."No.";
                                                                  "Source Account Name" := GLAccount.Name;
                                                                END;
                                                                CLEAR(GLAccountList);
                                                              END;
                                                              }
                                                            END;

                                                   CaptionML=[ENU=Source Corresp. Account Code;
                                                              RUS=Код Корр. Счета Источника] }
    { 40  ;   ;Receiver Account Code;Code20       ;TableRelation="G/L Account";
                                                   OnValidate=VAR
                                                                GLAccount@1000000000 : Record 15;
                                                              BEGIN
                                                                //NC PIF001 > DP
                                                                IF (("Receiver Account Code" <> xRec."Receiver Account Code") AND ("Receiver Account Code" <> '')) THEN
                                                                BEGIN
                                                                  GLAccount.GET("Receiver Account Code");
                                                                  "Receiver Account Name" := GLAccount.Name;
                                                                END;
                                                                //NC PIF001 < DP
                                                              END;

                                                   CaptionML=[ENU=Target Account Code;
                                                              RUS=Код Счета Приемника];
                                                   NotBlank=Yes }
    { 50  ;   ;Receiver Account Name;Text150      ;CaptionML=[ENU=Target Account Name;
                                                              RUS=Получатель Счет Описание];
                                                   Editable=No }
    { 60  ;   ;Active              ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Active;
                                                              RUS=Активен];
                                                   Editable=No }
    { 50001;  ;Company Name        ;Text30        ;TableRelation=Company;
                                                   CaptionML=[ENU=Company Name;
                                                              RUS=Фирма Название] }
    { 50002;  ;Ext. Source Type    ;Option        ;CaptionML=[ENU=Ext. Source Type;
                                                              RUS=Внеш. Тип Источника];
                                                   OptionCaptionML=[ENU=G/L Account,Customer,Vendor,Bank Account,G/L Account(force);
                                                                    RUS=Фин. Счет,Клиент,Поставщик,Банк. Счет,Фин. Счет(принудительно)];
                                                   OptionString=G/L Account,Customer,Vendor,Bank Account,G/L Account(force);
                                                   Description=NC MTD02 AIG,NCS-2044 DP }
    { 50003;  ;Source Posting Group;Code10        ;TableRelation=IF (Ext. Source Type=CONST(Customer)) "Customer Posting Group"
                                                                 ELSE IF (Ext. Source Type=CONST(Vendor)) "Vendor Posting Group"
                                                                 ELSE IF (Ext. Source Type=CONST(Bank Account)) "Bank Account Posting Group";
                                                   CaptionML=[ENU=Source Posting Group;
                                                              RUS=Источник Учетная Группа];
                                                   Description=NC MTD02 AIG }
    { 55000;  ;Operation Type      ;Option        ;CaptionML=[ENU=Operation Type;
                                                              RUS=Тип Операции];
                                                   OptionCaptionML=[ENU=" ,Debit,Credit";
                                                                    RUS=" ,Дебет,Кредит"];
                                                   OptionString=[ ,Debit,Credit] }
    { 55010;  ;Convert to Currency Code;Code10    ;TableRelation=Currency;
                                                   CaptionML=[ENU=Convert to Currency Code;
                                                              RUS=Конвертировать к Валюте Код];
                                                   Description=NC MIO-10 }
    { 55030;  ;Source Dimension Code 1;Code20     ;TableRelation=Dimension;
                                                   CaptionML=[ENU=Source Dimension 1 Code;
                                                              RUS=Источник Измерение Код 1];
                                                   Description=NC PIF001 }
    { 55035;  ;Source Dimension Value Code 1;Code20;
                                                   OnValidate=BEGIN
                                                                {
                                                                ConsolidationSource.GET("Mapping Code");
                                                                }
                                                                //TESTFIELD("Source Dimension Code 1");
                                                                IF "Source Dimension Value Code 1" <> '' THEN BEGIN
                                                                  TESTFIELD("Source Dimension Code 1");
                                                                  //NC MDTM02.2 > AIG
                                                                  SourceDimValidate := TRUE;
                                                                  //NC MDTM02.2 < AIG
                                                                  ValidateDimensionValue(COMPANYNAME,"Source Dimension Code 1","Source Dimension Value Code 1");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              {
                                                              ConsolidationSource.GET("Mapping Code");
                                                              }
                                                              DimValueCode := '';
                                                              TESTFIELD("Source Dimension Code 1");
                                                              IF LookUpDimensionValue(COMPANYNAME,"Source Dimension Code 1",DimValueCode) THEN
                                                                VALIDATE("Source Dimension Value Code 1",DimValueCode);
                                                            END;

                                                   CaptionML=[ENU=Source Dimension 1 Value Code;
                                                              RUS=Источник Изм. Зн. Код 1] }
    { 55040;  ;Source Dimension Code 2;Code20     ;TableRelation=Dimension;
                                                   CaptionML=[ENU=Source Dimension 2 Code;
                                                              RUS=Источник Измерение Код 2];
                                                   Description=NC PIF001 }
    { 55045;  ;Source Dimension Value Code 2;Code20;
                                                   OnValidate=BEGIN
                                                                {
                                                                ConsolidationSource.GET("Mapping Code");
                                                                }
                                                                //TESTFIELD("Source Dimension Code 2");
                                                                IF "Source Dimension Value Code 2" <> '' THEN BEGIN
                                                                  TESTFIELD("Source Dimension Code 2");
                                                                  //NC MDTM02.2 > AIG
                                                                  SourceDimValidate := TRUE;
                                                                  //NC MDTM02.2 < AIG
                                                                  ValidateDimensionValue(COMPANYNAME,"Source Dimension Code 2","Source Dimension Value Code 2");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              {
                                                              ConsolidationSource.GET("Mapping Code");
                                                              }
                                                              DimValueCode := '';
                                                              TESTFIELD("Source Dimension Code 2");
                                                              IF LookUpDimensionValue(COMPANYNAME,"Source Dimension Code 2",DimValueCode) THEN
                                                                VALIDATE("Source Dimension Value Code 2",DimValueCode);
                                                            END;

                                                   CaptionML=[ENU=Source Dimension 2 Value Code;
                                                              RUS=Источник Изм. Зн. Код 2] }
    { 55050;  ;Source Dimension Code 3;Code20     ;TableRelation=Dimension;
                                                   CaptionML=[ENU=Source Dimension 3 Code;
                                                              RUS=Источник Измерение Код 3];
                                                   Description=NC PIF001 }
    { 55060;  ;Source Dimension Value Code 3;Code20;
                                                   OnValidate=BEGIN
                                                                {
                                                                ConsolidationSource.GET("Mapping Code");
                                                                }
                                                                //TESTFIELD("Source Dimension Code 3");
                                                                IF "Source Dimension Value Code 3" <> '' THEN BEGIN
                                                                  TESTFIELD("Source Dimension Code 3");
                                                                  //NC MDTM02.2 > AIG
                                                                  SourceDimValidate := TRUE;
                                                                  //NC MDTM02.2 < AIG
                                                                  ValidateDimensionValue(COMPANYNAME,"Source Dimension Code 3","Source Dimension Value Code 3");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              {
                                                              ConsolidationSource.GET("Mapping Code");
                                                              }
                                                              DimValueCode := '';
                                                              TESTFIELD("Source Dimension Code 3");
                                                              IF LookUpDimensionValue(COMPANYNAME,"Source Dimension Code 3",DimValueCode) THEN
                                                                VALIDATE("Source Dimension Value Code 3",DimValueCode);
                                                            END;

                                                   CaptionML=[ENU=Source Dimension 3 Value Code;
                                                              RUS=Источник Изм. Зн. Код 3];
                                                   Description=NC PIF001 }
    { 55070;  ;Receiver Dimension Code 1;Code20   ;TableRelation=Dimension;
                                                   CaptionML=[ENU=Receiver Dimension 1 Code;
                                                              RUS=Приемник Измерение Код 1];
                                                   Description=NC PIF010 }
    { 55080;  ;Receiver Dim. Value Code 1;Text50  ;OnValidate=BEGIN
                                                                {
                                                                ConsolidationSource.GET("Mapping Code");
                                                                }
                                                                //TESTFIELD("Receiver Dimension Code 1");
                                                                IF "Receiver Dim. Value Code 1" <> '' THEN BEGIN
                                                                  TESTFIELD("Receiver Dimension Code 1");
                                                                  //NC MDTM02.2 > AIG
                                                                  SourceDimValidate := FALSE;
                                                                  //NC MDTM02.2 < AIG

                                                                  //NCS-2089 > AAP
                                                                  IF STRLEN("Receiver Dim. Value Code 1") > 20 THEN
                                                                    ERROR(Text00006,"Receiver Dim. Value Code 1");
                                                                  //NCS-2089 < AAP

                                                                  ValidateDimensionValue(COMPANYNAME,"Receiver Dimension Code 1","Receiver Dim. Value Code 1");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              {
                                                              ConsolidationSource.GET("Mapping Code");
                                                              }
                                                              DimValueCode := '';
                                                              TESTFIELD("Receiver Dimension Code 1");
                                                              IF LookUpDimensionValue(COMPANYNAME,"Receiver Dimension Code 1",DimValueCode) THEN
                                                                VALIDATE("Receiver Dim. Value Code 1",DimValueCode);
                                                            END;

                                                   CaptionML=[ENU=Receiver Dimension 1 Value Code;
                                                              RUS=Приемник Изм. Зн. Код 1];
                                                   Description=NC PIF010,NCS-2089 }
    { 55085;  ;Receiver Forced Dim. Value 1;Boolean;
                                                   OnValidate=BEGIN
                                                                //NCS-2089 > AAP
                                                                IF "Receiver Forced Dim. Value 1" THEN BEGIN
                                                                  TESTFIELD("Receiver Dimension Code 1");
                                                                  TESTFIELD("Receiver Dim. Value Code 1");
                                                                END;
                                                                //NCS-2089 < AAP
                                                              END;

                                                   CaptionML=[ENU=Receiver Forced Dim. Value 1;
                                                              RUS=Приемник Принудительно Изм. Зн. 1];
                                                   Description=NCS-2089 }
    { 55090;  ;Receiver Dimension Code 2;Code20   ;TableRelation=Dimension;
                                                   CaptionML=[ENU=Receiver Dimension 2 Code;
                                                              RUS=Приемник Измерение Код 2];
                                                   Description=NC PIF010 }
    { 55100;  ;Receiver Dim. Value Code 2;Text50  ;OnValidate=BEGIN
                                                                {
                                                                ConsolidationSource.GET("Mapping Code");
                                                                }
                                                                //TESTFIELD("Receiver Dimension Code 2");
                                                                IF "Receiver Dim. Value Code 2" <> '' THEN BEGIN
                                                                  TESTFIELD("Receiver Dimension Code 2");
                                                                  //NC MDTM02.2 > AIG
                                                                  SourceDimValidate := FALSE;
                                                                  //NC MDTM02.2 < AIG

                                                                  //NCS-2089 > AAP
                                                                  IF STRLEN("Receiver Dim. Value Code 2") > 20 THEN
                                                                    ERROR(Text00006,"Receiver Dim. Value Code 2");
                                                                  //NCS-2089 < AAP

                                                                  ValidateDimensionValue(COMPANYNAME,"Receiver Dimension Code 2","Receiver Dim. Value Code 2");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              {
                                                              ConsolidationSource.GET("Mapping Code");
                                                              }
                                                              DimValueCode := '';
                                                              TESTFIELD("Receiver Dimension Code 2");
                                                              IF LookUpDimensionValue(COMPANYNAME,"Receiver Dimension Code 2",DimValueCode) THEN
                                                                VALIDATE("Receiver Dim. Value Code 2",DimValueCode);
                                                            END;

                                                   CaptionML=[ENU=Receiver Dimension 2 Value Code;
                                                              RUS=Приемник Изм. Зн. Код 2];
                                                   Description=NC PIF010,NCS-2089 }
    { 55105;  ;Receiver Forced Dim. Value 2;Boolean;
                                                   OnValidate=BEGIN
                                                                //NCS-2089 > AAP
                                                                IF "Receiver Forced Dim. Value 2" THEN BEGIN
                                                                  TESTFIELD("Receiver Dimension Code 2");
                                                                  TESTFIELD("Receiver Dim. Value Code 2");
                                                                END;
                                                                //NCS-2089 < AAP
                                                              END;

                                                   CaptionML=[ENU=Receiver Forced Dim. Value 2;
                                                              RUS=Приемник Принудительно Изм. Зн. 2];
                                                   Description=NCS-2089 }
    { 55110;  ;Receiver Dimension Code 3;Code20   ;TableRelation=Dimension;
                                                   CaptionML=[ENU=Receiver Dimension 3 Code;
                                                              RUS=Приемник Измерение Код 3];
                                                   Description=NC PIF010 }
    { 55120;  ;Receiver Dim. Value Code 3;Text50  ;OnValidate=BEGIN
                                                                {
                                                                ConsolidationSource.GET("Mapping Code");
                                                                }
                                                                //TESTFIELD("Receiver Dimension Code 3");
                                                                IF "Receiver Dim. Value Code 3" <> '' THEN BEGIN
                                                                  TESTFIELD("Receiver Dimension Code 3");
                                                                  //NC MDTM02.2 > AIG
                                                                  SourceDimValidate := FALSE;
                                                                  //NC MDTM02.2 < AIG

                                                                  //NCS-2089 > AAP
                                                                  IF STRLEN("Receiver Dim. Value Code 3") > 20 THEN
                                                                    ERROR(Text00006,"Receiver Dim. Value Code 3");
                                                                  //NCS-2089 < AAP

                                                                  ValidateDimensionValue(COMPANYNAME,"Receiver Dimension Code 3","Receiver Dim. Value Code 3");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              {
                                                              ConsolidationSource.GET("Mapping Code");
                                                              }
                                                              DimValueCode := '';
                                                              TESTFIELD("Receiver Dimension Code 3");
                                                              IF LookUpDimensionValue(COMPANYNAME,"Receiver Dimension Code 3",DimValueCode) THEN
                                                                VALIDATE("Receiver Dim. Value Code 3",DimValueCode);
                                                            END;

                                                   CaptionML=[ENU=Receiver Dimension 3 Value Code;
                                                              RUS=Приемник Изм. Зн. Код 3];
                                                   Description=NC PIF010,NCS-2089 }
    { 55125;  ;Receiver Forced Dim. Value 3;Boolean;
                                                   OnValidate=BEGIN
                                                                //NCS-2089 > AAP
                                                                IF "Receiver Forced Dim. Value 3" THEN BEGIN
                                                                  TESTFIELD("Receiver Dimension Code 3");
                                                                  TESTFIELD("Receiver Dim. Value Code 3");
                                                                END;
                                                                //NCS-2089 < AAP
                                                              END;

                                                   CaptionML=[ENU=Receiver Forced Dim. Value 3;
                                                              RUS=Приемник Принудительно Изм. Зн. 3];
                                                   Description=NCS-2089 }
    { 55130;  ;Description         ;Text250       ;CaptionML=[ENU=Description;
                                                              RUS=Описание];
                                                   Description=NC PIF010 }
    { 55140;  ;Rating Transformation;Integer      ;CaptionML=[ENU=Rating Transformation;
                                                              RUS=Рейтинг Преобразования];
                                                   Description=NC OPT PCH;
                                                   Editable=No }
    { 55150;  ;Gen. Posting Type   ;Option        ;CaptionML=[ENU=Gen. Posting Type;
                                                              RUS=Общий Тип Учета];
                                                   OptionCaptionML=[ENU=" ,Purchase,Sale,Settlement";
                                                                    RUS=" ,Покупка,Продажа,Зачет"];
                                                   OptionString=[ ,Purchase,Sale,Settlement];
                                                   Description=NCS-1908 }
    { 55160;  ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              RUS=НДС Бизнес Группа];
                                                   Description=NCS-1908 }
    { 55170;  ;VAT Prod. Posting Group;Code10     ;TableRelation="VAT Product Posting Group";
                                                   CaptionML=[ENU=VAT Prod. Posting Group;
                                                              RUS=НДС Товарная Группа];
                                                   Description=NCS-1908 }
    { 55180;  ;Copy dims from balance account;Boolean;
                                                   CaptionML=[ENU=Copy dims from balance account;
                                                              RUS=Копировать измерения для балансовых счетов];
                                                   Description=NC S1907 PCH }
  }
  KEYS
  {
    {    ;Mapping Code,Line No.                    }
    {    ;Mapping Code,Source Account Code,Operation Type,Source Dimension Code 1,Source Dimension Value Code 1,Source Dimension Code 2,Source Dimension Value Code 2,Source Dimension Code 3,Source Dimension Value Code 3;
                                                   Clustered=Yes }
    {    ;Receiver Account Code,Source Dimension Code 1,Source Dimension Value Code 1,Source Dimension Code 2,Source Dimension Value Code 2,Source Dimension Code 3,Source Dimension Value Code 3 }
    {    ;Mapping Code,Source Account Code,Operation Type,Rating Transformation,Active }
    {    ;Mapping Code,Company Name,Source Account Code,Source Corresp. Account Code,Operation Type,Rating Transformation,Active }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Mapping@1000000000 : Record 50022;
      Text00001@1000000001 : TextConst 'ENU=G\L Account %1 does not exist in Source Company %2;RUS=Фин. Счет Но. %1 не существует в компании источнике %2';
      GLAccount@1210000 : Record 15;
      ConsolidationSetup@1210002 : Record 50000;
      DimensionValue@1210003 : Record 349;
      DimValueCode@1101495000 : Code[20];
      Text00002@1101495001 : TextConst 'ENU=Value %1 of Dimension %2 does not exist in Source Company %3;RUS=Значения %1 Измерения %2 нет в компании-источнике %3';
      ConsMgt@1000000002 : Codeunit 50000;
      SourceDimValidate@1000000003 : Boolean;
      Text00003@1101495002 : TextConst 'ENU=%1 must be of type %2.;RUS=%1 должен иметь тип %2.';
      Text00004@1101495003 : TextConst 'ENU=Mapping line %1 %2, field %3 contains an invalid value: %4. Cause: The excess length of 20 characters.;RUS=Строка меппинга %1 %2, поле %3 содержит недопустимое значение: %4. Причина: превышение длины 20 символов.';
      Text00005@1101495004 : TextConst 'ENU=Process% 1 is impossible. Table entry %2 is unavailable.;RUS=Выполнить преобразование %1 невозможно. Недоступна запись таблицы %2.';
      Text00006@1101495005 : TextConst 'ENU=The dimension value %1 can not exceed 20 characters;RUS=Значение измерения %1 не должно превышать 20 символов';

    PROCEDURE "NCF>"@1210000();
    BEGIN
    END;

    PROCEDURE ImportSourceGLAccounts@1000000002();
    VAR
      GLAccount@1000000001 : Record 15;
      ConsolidationSource@1000000000 : Record 50001;
      "Conv. of Chart of Accounts"@1000000002 : Record 50002;
    BEGIN
      //NC PIF001 > DP
      {
      ConsolidationSource.GET("Mapping Code");
      IF ConsolidationSource."Import Format" = ConsolidationSource."Import Format"::FromNavision THEN
        GLAccount.CHANGECOMPANY(ConsolidationSource."Company Name");
      //NC PIF001 > DP
      GLAccount.SETRANGE("Account Type",GLAccount."Account Type"::Posting);
      //NC PIF001 < DP
      IF GLAccount.FIND ('-') THEN
        REPEAT
          IF NOT GET("Mapping Code",GLAccount."No.") THEN BEGIN
            "Conv. of Chart of Accounts".INIT;
            "Conv. of Chart of Accounts"."Mapping Code" := "Mapping Code";
            "Conv. of Chart of Accounts"."Source Account Code" := GLAccount."No.";
            "Conv. of Chart of Accounts"."Source Account Name" := GLAccount.Name;
            "Conv. of Chart of Accounts".INSERT (TRUE);
          END;
        UNTIL GLAccount.NEXT = 0;
      }
      //NC PIF001 < DP
    END;

    PROCEDURE LookUpDimensionValue@1101495000(CompName@1101495000 : Text[30];DimCode@1101495001 : Code[20];VAR DimValCode@1101495002 : Code[20]) : Boolean;
    VAR
      DimValue@1101495003 : Record 349;
      DimValueList@1101495004 : Page 560;
    BEGIN
      //NC PIF001 > MP
      {
      IF CompName <> COMPANYNAME THEN
        DimValue.CHANGECOMPANY(CompName);
      }
      DimValue.SETRANGE("Dimension Code",DimCode);
      {
      DimValueList.ChangeComp(ConsolidationSource."Company Name");
      }
      DimValueList.SETTABLEVIEW(DimValue);
      DimValueList.LOOKUPMODE := TRUE;
      IF DimValueList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        DimValueList.GETRECORD(DimValue);
        DimValCode := DimValue.Code;
        CLEAR(DimValueList);
        EXIT(TRUE);
      END;
      CLEAR(DimValueList);
      EXIT(FALSE);
      //NC PIF001 < MP
    END;

    PROCEDURE ValidateDimensionValue@1101495002(CompName@1101495000 : Text[30];DimCode@1101495001 : Code[20];DimValCode@1101495002 : Code[20]);
    VAR
      DimValue@1101495003 : Record 349;
      DimMappingSelection@1000000000 : Record 50031;
    BEGIN
      //NC PIF001 > MP
      IF CompName <> COMPANYNAME THEN
        DimValue.CHANGECOMPANY(CompName);
      //NC MDTM02.2 > AIG
      IF (NOT SourceDimValidate) OR (SourceDimValidate AND NOT DimMappingSelection.GET("Mapping Code", DimCode)) THEN
      //NC MDTM02.2 < AIG
      IF NOT DimValue.GET(DimCode,DimValCode) THEN
        ERROR(Text00002,DimValCode,DimCode,CompName);
      //NC PIF001 < MP
    END;

    PROCEDURE CalcRatingTransformation@1101495003();
    BEGIN
      "Rating Transformation" := 0;
      IF ("Source Dimension Code 1" <> '') AND ("Source Dimension Value Code 1" <> '') THEN
        "Rating Transformation" -= 1;
      IF ("Source Dimension Code 2" <> '') AND ("Source Dimension Value Code 2" <> '') THEN
        "Rating Transformation" -= 1;
      IF ("Source Dimension Code 3" <> '') AND ("Source Dimension Value Code 3" <> '') THEN
        "Rating Transformation" -= 1;
    END;

    PROCEDURE "NCF<"@1210001();
    BEGIN
    END;

    PROCEDURE SelectField@1101495001(FieldType@1101495002 : Code[30];SelectTable@1101495004 : Integer) retFldText : Text[50];
    VAR
      recField@1101495001 : Record 2000000041;
      fldRef@1101495003 : FieldRef;
    BEGIN
      //MIGR
      {
      //NCS-2089 > AAP
      recField.RESET;
      IF SelectTable <> 0 THEN
        recField.SETFILTER(TableNo,'%1',SelectTable)
      ELSE
        //NCS-2345 > AAP
        //recField.SETFILTER(TableNo,'%1|%2|%3',DATABASE::"Buffer G/L Entry",DATABASE::Deal,DATABASE::"Financial Instrument");
        recField.SETFILTER(TableNo,'%1|%2|%3|%4',DATABASE::"Cons. Data Buffer",DATABASE::"Buffer G/L Entry",DATABASE::Deal,
            DATABASE::"Financial Instrument");
        //NCS-2345 < AAP

      FieldsForm.SETTABLEVIEW(recField);
      FieldsForm.LOOKUPMODE(TRUE);
      IF FieldsForm.RUNMODAL = ACTION::LookupOK THEN BEGIN
        FieldsForm.GETRECORD(recField);

        CASE FieldType OF
          'TEXT','CODE' :
            IF NOT (recField.Type IN [recField.Type::OemText,recField.Type::OemCode]) THEN
              ERROR(Text00003,recField.FieldName,FieldType);
          'DECIMAL','INTEGER','OPTION' :
            IF NOT (recField.Type IN [recField.Type::Decimal,recField.Type::Integer,recField.Type::Option]) THEN
              ERROR(Text00003,recField.FieldName,FieldType);
          'DATE' :
            IF NOT (recField.Type IN [recField.Type::Date]) THEN
              ERROR(Text00003,recField.FieldName,FieldType);
          'TIME' :
            IF NOT (recField.Type IN [recField.Type::Time]) THEN
              ERROR(Text00003,recField.FieldName,FieldType);
          'DATETIME' :
            IF NOT (recField.Type IN [recField.Type::DateTime]) THEN
              ERROR(Text00003,recField.FieldName,FieldType);
          'BOOLEAN' :
            IF NOT (recField.Type IN [recField.Type::Boolean]) THEN
              ERROR(Text00003,recField.FieldName,FieldType);
        END;

        IF recField.TableNo = DATABASE::Deal THEN
          retFldText := '%DEAL.' + recField.FieldName + '%'
        ELSE IF recField.TableNo = DATABASE::"Financial Instrument" THEN
          retFldText := '%FI.' + recField.FieldName + '%'
        ELSE
          retFldText := '%' + recField.FieldName + '%';
      END ELSE
        retFldText := '';
      //NCS-2089 < AAP
      }
    END;

    PROCEDURE ReceiverDimValueCode@1101495004(FieldNum@1101495000 : Integer;VAR GLEntryBuffer@1101495004 : Record 50093) : Code[20];
    VAR
      FieldValue@1101495001 : Text[100];
      FieldValue2@1101495003 : Text[100];
      FieldCaption@1101495002 : Text[100];
    BEGIN
      //NCS-2089 > AAP
      CASE FieldNum OF
        1: BEGIN
          FieldValue  := "Receiver Dim. Value Code 1";
          FieldCaption:= Rec.FIELDCAPTION("Receiver Dim. Value Code 1");
        END;
        2: BEGIN
          FieldValue  := "Receiver Dim. Value Code 2";
          FieldCaption:= Rec.FIELDCAPTION("Receiver Dim. Value Code 2");
        END;
        3: BEGIN
          FieldValue  := "Receiver Dim. Value Code 3";
          FieldCaption:= Rec.FIELDCAPTION("Receiver Dim. Value Code 3");
        END;
      END;

      FieldValue2 := GetDimValue(FieldValue,GLEntryBuffer);

      IF STRLEN(FieldValue2) < 20 THEN BEGIN
        CASE FieldNum OF
          1: "Receiver Dim. Value Code 1" := FieldValue2;
          2: "Receiver Dim. Value Code 2" := FieldValue2;
          3: "Receiver Dim. Value Code 3" := FieldValue2;
        END;
        EXIT(FieldValue2);
      END ELSE BEGIN
        ERROR(Text00004,"Mapping Code","Line No.",FieldCaption,FieldValue2);
      END;
      //NCS-2089 < AAP
    END;

    PROCEDURE GetDimValue@1101495019(Str@1101495000 : Text[50];VAR GLEntryBuffer@1101495001 : Record 50093) : Text[250];
    VAR
      BufDim@1101495020 : Record 50094;
      FromPos@1101495019 : Integer;
      ToPos@1101495018 : Integer;
      i@1101495017 : Integer;
      RecRefBuffer@1101495016 : RecordRef;
      RecRefDeal@1101495015 : RecordRef;
      txtInstruction@1101495014 : Text[1024];
      txtInstruction2@1101495013 : Text[1024];
      FldNo@1101495012 : Integer;
      fldRef@1101495011 : FieldRef;
      txtValue@1101495010 : Text[100];
      Deal@1101495009 : Record 50037;
      FI@1101495021 : Record 50021;
      Dim@1101495008 : Record 348;
      DimValue@1101495007 : Record 349;
      EUFunctions@1101495006 : Record 50200;
      FldType@1101495005 : Code[20];
      v_dec@1101495004 : Decimal;
      v_date@1101495003 : Date;
      v_str@1101495002 : Text[250];
      GLEntryBuffer2@1101495022 : Record 50093;
      FunRecRef@1101495023 : Codeunit 50010;
    BEGIN
      //NCS-2089 > AAP
      IF Str[1] = '%' THEN BEGIN
        IF (GLEntryBuffer."External System ID" = '') AND (GLEntryBuffer."Id Legal Entity" = '') THEN BEGIN
          ERROR(Text00005,Str,GLEntryBuffer.TABLECAPTION);
        END;

        txtInstruction := UPPERCASE(COPYSTR(Str, 2, STRLEN(Str)-2));
        CASE TRUE OF
          COPYSTR(txtInstruction,1,5) = 'DEAL.' :
            BEGIN
              IF BufDim.GET(GLEntryBuffer."External System ID",GLEntryBuffer."Id Legal Entity",17,GLEntryBuffer."Entry No.",'DEAL') THEN
              BEGIN
                IF Deal.GET(BufDim."Dimension Value Code") THEN BEGIN
                  RecRefDeal.GETTABLE(Deal);

                  txtInstruction2 := COPYSTR(txtInstruction,6);

                  FldNo := FunRecRef.GetFieldNo(RecRefDeal,txtInstruction2);
                  IF FldNo <> 0 THEN BEGIN
                    fldRef := RecRefDeal.FIELD(FldNo);
                    EXIT(ConvertToScript(fldRef));
                  END;
                END;
              END;
            END;
          COPYSTR(txtInstruction,1,3) = 'FI.' :
            BEGIN
              IF BufDim.GET(GLEntryBuffer."External System ID",GLEntryBuffer."Id Legal Entity",17,GLEntryBuffer."Entry No.",'DEAL') THEN
              BEGIN
                IF Deal.GET(BufDim."Dimension Value Code") THEN BEGIN
                  IF FI.GET(Deal."Financial instrument No.") THEN BEGIN
                    RecRefDeal.GETTABLE(FI);

                    txtInstruction2 := COPYSTR(txtInstruction,4);

                    FldNo := FunRecRef.GetFieldNo(RecRefDeal,txtInstruction2);
                    IF FldNo <> 0 THEN BEGIN
                      fldRef := RecRefDeal.FIELD(FldNo);
                      EXIT(ConvertToScript(fldRef));
                    END;
                  END;
                END;
              END;
            END;
          ELSE BEGIN
            GLEntryBuffer2.GET(GLEntryBuffer."External System ID",GLEntryBuffer."Id Legal Entity",GLEntryBuffer."Entry No.");
            RecRefBuffer.GETTABLE(GLEntryBuffer2);
            FldNo := FunRecRef.GetFieldNo(RecRefBuffer,txtInstruction);
            IF FldNo <> 0 THEN BEGIN
              fldRef := RecRefBuffer.FIELD(FldNo);
              EXIT(ConvertToScript(fldRef));
            END;
          END
        END;
      END ELSE BEGIN
        EXIT(Str);
      END;
      //NCS-2089 < AAP
    END;

    PROCEDURE ConvertToScript@1101495014(fldRefValue@1101495000 : FieldRef) retValue : Text[1024];
    VAR
      LastFldType@1101495001 : Code[20];
    BEGIN
      //NCS-2089 > AAP (Функция перенесена из таблицы 50170)
      LastFldType := UPPERCASE(FORMAT(fldRefValue.TYPE));
      CASE LastFldType OF
        'TEXT', 'CODE' :
          BEGIN
            retValue := FORMAT(fldRefValue.VALUE);
          END;
        'INTEGER', 'OPTION' :
          BEGIN
            retValue := FORMAT(fldRefValue.VALUE,0,9);
          END;
        'DECIMAL' :
          BEGIN
            retValue := FORMAT(fldRefValue.VALUE,0,9);
          END;
        'BOOLEAN' :
          BEGIN
            IF fldRefValue.VALUE THEN
              retValue := '1'
            ELSE
              retValue := '0';
          END;
        'DATE' :
          BEGIN
            retValue := FORMAT(fldRefValue.VALUE,0,9);
            IF retValue = '' THEN
              retValue := ''
            ELSE
              retValue := retValue;
          END;
      END;
      //NCS-2089 < AAP
    END;

    PROCEDURE ReceiverDimValueCode2@1101495006(FieldNum@1101495000 : Integer;EntryNo@1101495006 : Integer;GLBuffer@1101495005 : Record 50008) : Code[20];
    VAR
      FieldValue@1101495001 : Text[100];
      FieldValue2@1101495003 : Text[100];
      FieldCaption@1101495002 : Text[100];
    BEGIN
      //MIGR
      {
      //NCS-2345 > AAP
      CASE FieldNum OF
        1: BEGIN
          FieldValue  := "Receiver Dim. Value Code 1";
          FieldCaption:= Rec.FIELDCAPTION("Receiver Dim. Value Code 1");
        END;
        2: BEGIN
          FieldValue  := "Receiver Dim. Value Code 2";
          FieldCaption:= Rec.FIELDCAPTION("Receiver Dim. Value Code 2");
        END;
        3: BEGIN
          FieldValue  := "Receiver Dim. Value Code 3";
          FieldCaption:= Rec.FIELDCAPTION("Receiver Dim. Value Code 3");
        END;
      END;

      FieldValue2 := GetDimValue2(FieldValue,EntryNo,GLBuffer,LedgEntryDim);

      IF STRLEN(FieldValue2) < 20 THEN BEGIN
        CASE FieldNum OF
          1: "Receiver Dim. Value Code 1" := FieldValue2;
          2: "Receiver Dim. Value Code 2" := FieldValue2;
          3: "Receiver Dim. Value Code 3" := FieldValue2;
        END;
        EXIT(FieldValue2);
      END ELSE BEGIN
        ERROR(Text00004,"Mapping Code","Line No.",FieldCaption,FieldValue2);
      END;
      //NCS-2345 < AAP
      }
    END;

    PROCEDURE GetDimValue2@1101495005(Str@1101495000 : Text[50];EntryNo@1101495022 : Integer;GLBuffer@1101495001 : Record 50008) : Text[250];
    VAR
      FromPos@1101495019 : Integer;
      ToPos@1101495018 : Integer;
      i@1101495017 : Integer;
      RecRefBuffer@1101495016 : RecordRef;
      RecRefDeal@1101495015 : RecordRef;
      txtInstruction@1101495014 : Text[1024];
      txtInstruction2@1101495013 : Text[1024];
      FldNo@1101495012 : Integer;
      fldRef@1101495011 : FieldRef;
      txtValue@1101495010 : Text[100];
      Deal@1101495009 : Record 50037;
      FI@1101495021 : Record 50021;
      Dim@1101495008 : Record 348;
      DimValue@1101495007 : Record 349;
      EUFunctions@1101495006 : Record 50200;
      FldType@1101495005 : Code[20];
      v_dec@1101495004 : Decimal;
      v_date@1101495003 : Date;
      v_str@1101495002 : Text[250];
      FunRecRef@1101495023 : Codeunit 50010;
      GLBuffer2@1101495020 : Record 50008;
    BEGIN
      //MIGR
      {
      //NCS-2345 > AAP
      IF Str[1] = '%' THEN BEGIN

        txtInstruction := UPPERCASE(COPYSTR(Str, 2, STRLEN(Str)-2));
        CASE TRUE OF
          COPYSTR(txtInstruction,1,5) = 'DEAL.' :
            BEGIN
              IF LedgEntryDim.GET(17,EntryNo,'DEAL') THEN
              BEGIN
                IF Deal.GET(LedgEntryDim."Dimension Value Code") THEN BEGIN
                  RecRefDeal.GETTABLE(Deal);

                  txtInstruction2 := COPYSTR(txtInstruction,6);

                  FldNo := FunRecRef.GetFieldNo(RecRefDeal,txtInstruction2);
                  IF FldNo <> 0 THEN BEGIN
                    fldRef := RecRefDeal.FIELD(FldNo);
                    EXIT(ConvertToScript(fldRef));
                  END;
                END;
              END;
            END;
          COPYSTR(txtInstruction,1,3) = 'FI.' :
            BEGIN
              IF LedgEntryDim.GET(17,EntryNo,'DEAL') THEN
              BEGIN
                IF Deal.GET(LedgEntryDim."Dimension Value Code") THEN BEGIN
                  IF FI.GET(Deal."Financial instrument No.") THEN BEGIN
                    RecRefDeal.GETTABLE(FI);

                    txtInstruction2 := COPYSTR(txtInstruction,4);

                    FldNo := FunRecRef.GetFieldNo(RecRefDeal,txtInstruction2);
                    IF FldNo <> 0 THEN BEGIN
                      fldRef := RecRefDeal.FIELD(FldNo);
                      EXIT(ConvertToScript(fldRef));
                    END;
                  END;
                END;
              END;
            END;
          ELSE BEGIN
            GLBuffer2.GET(GLBuffer."Cons. Source Code",GLBuffer."Entry No.");
            RecRefBuffer.GETTABLE(GLBuffer2);
            FldNo := FunRecRef.GetFieldNo(RecRefBuffer,txtInstruction);
            IF FldNo <> 0 THEN BEGIN
              fldRef := RecRefBuffer.FIELD(FldNo);
              EXIT(ConvertToScript(fldRef));
            END;
          END
        END;
      END ELSE BEGIN
        EXIT(Str);
      END;
      //NCS-2345 < AAP
      }
    END;

    BEGIN
    {
      NC PIF001 AK Таблица перенесена с другого проекта и кастомизирована
      NC PIF010 MP
      NC OPT PCH Добавлено поле "Rating Transformation" и его автозаполнение
      NC MDTM03 MP Новый ключ
      NC MDTC10 MP Проверка использования в момент трансформации
      NC MDTM02.2 AIG Изменение в коде
      NC MTD02 AIG Добавлены поля Ext. Source Type и Source Posting Group
      NC MIO-10 DP Добавлено поле "Convert to Currency Code"
      NC NCS-1908 DP Добавлены поля "Gen. Posting Type", "VAT Bus. Posting Group", "VAT Prod. Posting Group"
      NC S1907 PCH Copy dims from balance account
      NC NCS-2044 DP Добавлена опция для поля "Ext. Source Type": G/L Account(force)
      NC S2089 AAP Добавлены поля "Receiver Forced Dim. Value 1", "Receiver Forced Dim. Value 2", "Receiver Forced Dim. Value 3",
                   изменены поля (Code20 -> Text50) "Receiver Dim. Value Code 1", "Receiver Dim. Value Code 2",
                     "Receiver Dim. Value Code 3",
                   добавлена функция SelectField.

      NC NCS-2345 AAP Добавлены функции GetDimValue2, ReceiverDimValueCode2,
                      Изменена функция SelectField
    }
    END.
  }
}

