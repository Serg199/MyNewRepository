OBJECT Page 50227 Event Upload Templates
{
  OBJECT-PROPERTIES
  {
    Date=12.07.17;
    Time=14:57:10;
    Modified=Yes;
    Version List=NOS-26;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Event Upload Templates;
               RUS=Шаблон Загрузки Событий];
    SourceTable=Table50170;
    DelayedInsert=Yes;
    PageType=List;
    AutoSplitKey=Yes;
    OnAfterGetCurrRecord=BEGIN
                           SetEditable;
                         END;

  }
  CONTROLS
  {
    { 1101495000;0;Container;
                ContainerType=ContentArea }

    { 1101495001;1;Group  ;
                Name=Group;
                IndentationColumnName=Indentation;
                IndentationControls=Line Type;
                GroupType=Repeater }

    { 1101495002;2;Field  ;
                SourceExpr="Line No.";
                Editable=FALSE }

    { 1101495003;2;Field  ;
                SourceExpr="Line Type";
                OnValidate=BEGIN
                             SetEditable;
                           END;
                            }

    { 1101495004;2;Field  ;
                SourceExpr="Condition Field 1";
                OnAssistEdit=BEGIN
                               //NC S1914 > PCH
                               SelFld := SelectFunction('');
                               IF SelFld <> '' THEN
                                 "Condition Field 1" := SelFld;
                               //NC S1914 < PCH
                             END;
                              }

    { 1101495005;2;Field  ;
                SourceExpr="Condition Type" }

    { 1101495006;2;Field  ;
                SourceExpr="Condition Field 2";
                OnAssistEdit=BEGIN
                               //NC S1914 > PCH
                               SelFld := SelectFunction('');
                               IF SelFld <> '' THEN
                                 "Condition Field 1" := SelFld;
                               //NC S1914 < PCH
                             END;
                              }

    { 1101495007;2;Field  ;
                SourceExpr="Link Condition Type" }

    { 1101495008;2;Field  ;
                SourceExpr="Link Condition Line No." }

    { 1101495009;2;Field  ;
                SourceExpr=Unreversable;
                Editable=FieldEditable }

    { 1101495010;2;Field  ;
                SourceExpr="Account Type";
                Editable=FieldEditable }

    { 1101495011;2;Field  ;
                SourceExpr="Account No.";
                Editable=FieldEditable }

    { 1101495012;2;Field  ;
                SourceExpr="Posting Date";
                Editable=FieldEditable }

    { 1101495013;2;Field  ;
                SourceExpr="Posting Date Formula";
                Editable=FieldEditable }

    { 1101495014;2;Field  ;
                SourceExpr=Description;
                Editable=FieldEditable }

    { 1101495015;2;Field  ;
                SourceExpr="Description 2";
                Editable=FieldEditable }

    { 1101495016;2;Field  ;
                SourceExpr="Currency Code";
                Editable=FieldEditable }

    { 1101495017;2;Field  ;
                SourceExpr=Correction;
                Editable=FieldEditable }

    { 1101495018;2;Field  ;
                SourceExpr=Sign;
                Editable=FieldEditable }

    { 1101495019;2;Field  ;
                SourceExpr=Amount;
                Editable=FieldEditable;
                OnAssistEdit=BEGIN
                               //NC S1914 > PCH
                               SelFld := SelectFunction('');
                               IF SelFld <> '' THEN
                                 "Condition Field 1" := SelFld;
                               //NC S1914 < PCH
                             END;
                              }

    { 1101495020;2;Field  ;
                SourceExpr="Posting Group";
                Editable=FieldEditable }

    { 1101495021;2;Field  ;
                SourceExpr="Source Code";
                Editable=FieldEditable }

    { 1101495022;2;Field  ;
                SourceExpr="Due Date";
                Editable=FieldEditable }

    { 1101495023;2;Field  ;
                SourceExpr="Reversing Entry";
                Editable=FieldEditable }

    { 1101495024;2;Field  ;
                SourceExpr="Allow Zero-Amount Posting";
                Editable=FieldEditable }

    { 1101495025;2;Field  ;
                SourceExpr="Agreement No.";
                Editable=FieldEditable }

    { 1101495026;2;Field  ;
                SourceExpr="Source Historical Date";
                Editable=FieldEditable }

    { 1101495027;2;Field  ;
                SourceExpr="Source Historical Date Formula";
                Editable=FieldEditable }

    { 1101495028;2;Field  ;
                SourceExpr="Document Type";
                Editable=FieldEditable }

    { 1101495029;2;Field  ;
                SourceExpr=Quantity;
                Editable=FieldEditable }

    { 1101495030;2;Field  ;
                SourceExpr="Gen. Posting Type";
                Editable=FieldEditable }

    { 1101495031;2;Field  ;
                SourceExpr="Gen. Bus. Posting Group";
                Editable=FieldEditable }

    { 1101495032;2;Field  ;
                SourceExpr="Gen. Prod. Posting Group";
                Editable=FieldEditable }

    { 1101495033;2;Field  ;
                SourceExpr="Document Date";
                Editable=FieldEditable }

    { 1101495034;2;Field  ;
                SourceExpr="External Document No.";
                Editable=FieldEditable }

    { 1101495035;2;Field  ;
                SourceExpr="VAT Bus. Posting Group";
                Editable=FieldEditable }

    { 1101495036;2;Field  ;
                SourceExpr="VAT Prod. Posting Group";
                Editable=FieldEditable }

    { 1101495037;2;Field  ;
                SourceExpr="Additional-Currency Posting";
                Editable=FieldEditable }

    { 1101495038;2;Field  ;
                SourceExpr="VAT Amount";
                Editable=FieldEditable }

    { 1101495039;2;Field  ;
                SourceExpr="Amount (LCY)";
                Editable=FieldEditable }

    { 1101495040;2;Field  ;
                SourceExpr="Currency Index Entry";
                Editable=FieldEditable }

    { 1101495041;2;Field  ;
                SourceExpr="Currency Index";
                Editable=FieldEditable }

    { 1101495042;2;Field  ;
                SourceExpr="Financial Instrument No.";
                Editable=FieldEditable }

  }
  CODE
  {
    VAR
      GV@1101495001 : Codeunit 50033;
      SelFld@1101495000 : Text[50];
      Text001@1101495002 : TextConst 'ENU=Checked lines %1.\Errors were not found.;RUS=Проверено строк %1.\Ошибок не обнаружено.';
      FieldEditable@1101495003 : Boolean INDATASET;

    PROCEDURE ShowDimensions@1000000000();
    VAR
      EventUploadTemplateDim@1101495000 : Record 50171;
    BEGIN
      TESTFIELD("Line No.");
      EventUploadTemplateDim.RESET;
      EventUploadTemplateDim.FILTERGROUP(2);
      EventUploadTemplateDim.RESET;
      EventUploadTemplateDim.SETRANGE("Mapping Code","Mapping Code");
      EventUploadTemplateDim.SETRANGE("Event Code","Event Code");
      EventUploadTemplateDim.SETRANGE("Deal Type","Deal Type");
      EventUploadTemplateDim.SETRANGE("Settlement Type","Settlement Type");
      EventUploadTemplateDim.SETRANGE("Deal Between Books","Deal Between Books");
      //NCS-2019 > AAP
      EventUploadTemplateDim.SETRANGE("Company Name","Company Name");
      //NCS-2019 < AAP
      EventUploadTemplateDim.SETRANGE("Line No.","Line No.");
      EventUploadTemplateDim.FILTERGROUP(0);
      PAGE.RUNMODAL(0,EventUploadTemplateDim);
    END;

    PROCEDURE CheskLines@1101495000(Mode@1101495011 : 'All,Selected');
    VAR
      BufferDealXMLTemp@1101495000 : TEMPORARY Record 50168;
      BufferDealXMLTemp2@1101495005 : TEMPORARY Record 50168;
      Dim@1101495008 : Record 348;
      DimValue@1101495001 : Record 349;
      Deal@1101495002 : Record 50037;
      FI@1101495003 : Record 50021;
      Customer@1101495004 : Record 18;
      EventUploadTemplate@1101495006 : Record 50170;
      GenJournalLineTemp@1101495010 : TEMPORARY Record 81;
      ConditionsBufferTemp@1000000000 : TEMPORARY Record 382;
      EUFunctionsTemp@1101495012 : TEMPORARY Record 50200;
      Dim1Temp@1101495007 : TEMPORARY Record 480;
    BEGIN
      GV.ClearCU;

      Deal.SETFILTER("Deal ID",'<>%1','');
      //NC S1947 > PCH
      Deal.SETFILTER("Financial instrument No.",'<>%1','');
      //NC S1947 < PCH
      //NC S2008 > PCH
      Deal.SETFILTER("Maturity Date",'<>%1',0D);
      Deal.SETFILTER("Settlement Date",'<>%1',0D);
      //NC S2008 < PCH
      Deal.FINDFIRST;
      //NC S1947 > PCH
      IF NOT FI.GET(Deal."Financial instrument No.") THEN BEGIN
      //NC S1947 < PCH
        FI.SETFILTER("No.",'<>%1','');
        FI.FINDFIRST;
      //NC S1947 > PCH
      END;
      //NC S1947 < PCH
      Customer.SETFILTER("No.",'<>%1','');
      Customer.FINDFIRST;

      BufferDealXMLTemp.INIT;
      BufferDealXMLTemp."Entry No." := 1;
      BufferDealXMLTemp."Id External System" := '';
      BufferDealXMLTemp."Time Creation" := CURRENTDATETIME;
      BufferDealXMLTemp.Type := BufferDealXMLTemp.Type::New;
      BufferDealXMLTemp.Status := BufferDealXMLTemp.Status::New;
      BufferDealXMLTemp."Not Translate" := FALSE;
      BufferDealXMLTemp."ID Message" := 'TEST';
      BufferDealXMLTemp."ID Queue" := 'TEST';
      BufferDealXMLTemp."Source Entry No." := 0;
      BufferDealXMLTemp."Document ID" := 'TEST';
      BufferDealXMLTemp."Currency Code" := 'USD';
      BufferDealXMLTemp."External Deal Type" := "Deal Type";
      BufferDealXMLTemp."Event Code" := "Event Code";
      BufferDealXMLTemp."Execution Type" := 'TEST';
      BufferDealXMLTemp."Message Text" := 'TEST';
      BufferDealXMLTemp."Original Trade Date" := TODAY;
      BufferDealXMLTemp."Deal ID" := Deal."Deal ID";
      BufferDealXMLTemp."Report ID" := 'TEST';
      BufferDealXMLTemp."Report Ref. Id" := 'TEST';
      BufferDealXMLTemp."Trade Date" := TODAY;
      BufferDealXMLTemp."Description Fin. Instrument" := 'TEST';
      BufferDealXMLTemp."Fin. Instrument No." := FI."No.";
      BufferDealXMLTemp."Ext. Sys. Sent Message" := 'TEST';
      BufferDealXMLTemp."Trade Direction" := BufferDealXMLTemp."Trade Direction"::Buy;
      BufferDealXMLTemp.Comment := 'TEST';
      BufferDealXMLTemp."Id Legal Entity" := '';
      BufferDealXMLTemp."Customer No." := Customer."No.";

      DimValue.RESET;
      DimValue.SETRANGE("Dimension Code",'BOOK');
      DimValue.FINDFIRST;
      BufferDealXMLTemp."Book left FO" := DimValue.Code;
      BufferDealXMLTemp."Book left BO" := DimValue.Code;
      BufferDealXMLTemp."Book right FO" := DimValue.Code;
      BufferDealXMLTemp."Book right BO" := DimValue.Code;

      BufferDealXMLTemp."Deal between Book" := "Deal Between Books";
      BufferDealXMLTemp."Payment Amount" := 500;
      BufferDealXMLTemp."Payment Due Date" := TODAY;
      BufferDealXMLTemp."Payment PV Amount" := 500;
      BufferDealXMLTemp."Payment SubType" := 1;
      BufferDealXMLTemp."Payment Type" := '';
      BufferDealXMLTemp."Settlement Type" := "Settlement Type";
      BufferDealXMLTemp.INSERT;

      Dim.RESET;
      IF Dim.FINDSET THEN REPEAT
        DimValue.RESET;
        DimValue.SETRANGE("Dimension Code",Dim.Code);
        DimValue.SETFILTER(Code,'<>%1','');
        IF DimValue.FINDFIRST THEN BEGIN
          Dim1Temp.INIT;
          //Dim1Temp."Table ID" := DATABASE::"G/L Entry";
          //Dim1Temp."Entry No." := BufferDealXMLTemp."Entry No.";
          Dim1Temp."Dimension Code" := DimValue."Dimension Code";
          Dim1Temp."Dimension Value Code" := DimValue.Code;
          Dim1Temp.INSERT;
        END;

      UNTIL Dim.NEXT = 0;

      //Проверка на пустые знчения
      BufferDealXMLTemp2 := BufferDealXMLTemp;
      BufferDealXMLTemp2."Document ID" := '';
      BufferDealXMLTemp2."Currency Code" := '';
      BufferDealXMLTemp2."Original Trade Date" := 0D;
      BufferDealXMLTemp2."Trade Date" := 0D;
      BufferDealXMLTemp2."Description Fin. Instrument" := '';
      BufferDealXMLTemp2."Fin. Instrument No." := '';
      BufferDealXMLTemp2."Book left FO" := '';
      BufferDealXMLTemp2."Book left BO" := '';
      BufferDealXMLTemp2."Book right FO" := '';
      BufferDealXMLTemp2."Book right BO" := '';
      BufferDealXMLTemp2."Payment Amount" := 0;
      BufferDealXMLTemp2."Payment Due Date" := 0D;
      BufferDealXMLTemp2."Payment PV Amount" := 0;
      BufferDealXMLTemp2.INSERT;


      IF Mode = Mode::All THEN BEGIN
        // проверка всех строк
        EventUploadTemplate.SETVIEW(GETVIEW);
        EventUploadTemplate.SETRANGE("Mapping Code","Mapping Code");
        EventUploadTemplate.SETRANGE("Event Code","Event Code");
        EventUploadTemplate.SETRANGE("Deal Type","Deal Type");
        EventUploadTemplate.SETRANGE("Settlement Type","Settlement Type");
        EventUploadTemplate.SETRANGE("Deal Between Books","Deal Between Books");

        //NCS-2019 > AAP
        EventUploadTemplate.SETRANGE("Company Name","Company Name");
        //NCS-2019 < AAP

        IF EventUploadTemplate.FINDSET THEN BEGIN
          EventUploadTemplate.SetTestMode(TRUE);
          REPEAT
            ConditionsBufferTemp.RESET;
            ConditionsBufferTemp.DELETEALL;

            //NC NCS-2420 > DP
            EventUploadTemplate.fn_TempEUFunc;
            //NC NCS-2420 < DP

            //NC S1914 > PCH
            //EventUploadTemplate.Run(0,0D,BufferDealXMLTemp,Dim1Temp,GenJournalLineTemp,DimGenJnlLineTemp,
            //                        ConditionsBufferTemp);
            EUFunctionsTemp.RESET;
            EUFunctionsTemp.DELETEALL;
            EventUploadTemplate.Run(0,0D,BufferDealXMLTemp,Dim1Temp,GenJournalLineTemp,
                                    ConditionsBufferTemp,EUFunctionsTemp);
            //NC S1914 < PCH
            ConditionsBufferTemp.RESET;
            ConditionsBufferTemp.DELETEALL;
            //NC S1914 > PCH
            //EventUploadTemplate.Run(0,0D,BufferDealXMLTemp2,Dim1Temp,GenJournalLineTemp,DimGenJnlLineTemp,
            //                        ConditionsBufferTemp);
            EUFunctionsTemp.RESET;
            EUFunctionsTemp.DELETEALL;
            EventUploadTemplate.Run(0,0D,BufferDealXMLTemp2,Dim1Temp,GenJournalLineTemp,
                                    ConditionsBufferTemp,EUFunctionsTemp);
            //NC S1914 < PCH
          UNTIL EventUploadTemplate.NEXT = 0;
          MESSAGE(Text001,EventUploadTemplate.COUNT);
          EventUploadTemplate.SetTestMode(FALSE);
        END ELSE BEGIN
          SetTestMode(TRUE);
          //NC NCS-2420 > DP
          EventUploadTemplate.fn_TempEUFunc;
          //NC NCS-2420 < DP

          ConditionsBufferTemp.RESET;
          ConditionsBufferTemp.DELETEALL;
          //NC S1914 > PCH
          //Run(0,0D,BufferDealXMLTemp,Dim1Temp,GenJournalLineTemp,DimGenJnlLineTemp,
          //                          ConditionsBufferTemp);
          EUFunctionsTemp.RESET;
          EUFunctionsTemp.DELETEALL;
          Run(0,0D,BufferDealXMLTemp,Dim1Temp,GenJournalLineTemp,
                                    ConditionsBufferTemp,EUFunctionsTemp);
          //NC S1914 < PCH
          ConditionsBufferTemp.RESET;
          ConditionsBufferTemp.DELETEALL;
          //NC S1914 > PCH
          //Run(0,0D,BufferDealXMLTemp2,Dim1Temp,GenJournalLineTemp,DimGenJnlLineTemp,
          //                          ConditionsBufferTemp);
          EUFunctionsTemp.RESET;
          EUFunctionsTemp.DELETEALL;
          Run(0,0D,BufferDealXMLTemp2,Dim1Temp,GenJournalLineTemp,
                                    ConditionsBufferTemp,EUFunctionsTemp);
          //NC S1914 < PCH
          MESSAGE(Text001,1);
          SetTestMode(FALSE);
        END;
      END ELSE BEGIN
        // проверка выделенных
        CurrPage.SETSELECTIONFILTER(EventUploadTemplate);
        EventUploadTemplate.MARKEDONLY(TRUE);
        IF EventUploadTemplate.FINDSET THEN BEGIN
          EventUploadTemplate.SetTestMode(TRUE);
          REPEAT
            ConditionsBufferTemp.RESET;
            ConditionsBufferTemp.DELETEALL;

            //NC NCS-2420 > DP
            EventUploadTemplate.fn_TempEUFunc;
            //NC NCS-2420 < DP

            //NC S1914 > PCH
            //EventUploadTemplate.Run(0,0D,BufferDealXMLTemp,Dim1Temp,GenJournalLineTemp,DimGenJnlLineTemp,
            //                        ConditionsBufferTemp);
            EUFunctionsTemp.RESET;
            EUFunctionsTemp.DELETEALL;
            EventUploadTemplate.Run(0,0D,BufferDealXMLTemp,Dim1Temp,GenJournalLineTemp,
                                    ConditionsBufferTemp,EUFunctionsTemp);
            //NC S1914 < PCH
            ConditionsBufferTemp.RESET;
            ConditionsBufferTemp.DELETEALL;
            //NC S1914 > PCH
            //EventUploadTemplate.Run(0,0D,BufferDealXMLTemp2,Dim1Temp,GenJournalLineTemp,DimGenJnlLineTemp,
            //                        ConditionsBufferTemp);
            EUFunctionsTemp.RESET;
            EUFunctionsTemp.DELETEALL;
            EventUploadTemplate.Run(0,0D,BufferDealXMLTemp2,Dim1Temp,GenJournalLineTemp,
                                    ConditionsBufferTemp,EUFunctionsTemp);
            //NC S1914 < PCH
          UNTIL EventUploadTemplate.NEXT = 0;
          MESSAGE(Text001,EventUploadTemplate.COUNT);
          EventUploadTemplate.SetTestMode(FALSE);
        END ELSE BEGIN
          SetTestMode(TRUE);

          //NC NCS-2420 > DP
          EventUploadTemplate.fn_TempEUFunc;
          //NC NCS-2420 < DP

          ConditionsBufferTemp.RESET;
          ConditionsBufferTemp.DELETEALL;
          //NC S1914 > PCH
          //Run(0,0D,BufferDealXMLTemp,Dim1Temp,GenJournalLineTemp,DimGenJnlLineTemp,
          //    ConditionsBufferTemp);
          EUFunctionsTemp.RESET;
          EUFunctionsTemp.DELETEALL;
          Run(0,0D,BufferDealXMLTemp,Dim1Temp,GenJournalLineTemp,
              ConditionsBufferTemp,EUFunctionsTemp);
          //NC S1914 < PCH
          ConditionsBufferTemp.RESET;
          ConditionsBufferTemp.DELETEALL;
          //NC S1914 > PCH
          //Run(0,0D,BufferDealXMLTemp2,Dim1Temp,GenJournalLineTemp,DimGenJnlLineTemp,
          //    ConditionsBufferTemp);
          EUFunctionsTemp.RESET;
          EUFunctionsTemp.DELETEALL;
          Run(0,0D,BufferDealXMLTemp2,Dim1Temp,GenJournalLineTemp,
              ConditionsBufferTemp,EUFunctionsTemp);
          //NC S1914 < PCH
          MESSAGE(Text001,1);
          SetTestMode(FALSE);
        END;
      END;
    END;

    PROCEDURE SetEditable@1101495001();
    BEGIN
      //NC NOS-26 > SPA
      {
      CurrForm."Account Type".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."Account No.".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."Posting Date".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."Posting Date Formula".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm.Description.EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."Description 2".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."Currency Code".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm.Sign.EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm.Correction.EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm.Amount.EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."Posting Group".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."Source Code".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."Due Date".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."Reversing Entry".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."Allow Zero-Amount Posting".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."Agreement No.".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."Source Historical Date".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."Source Historical Date Formula".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."Document Type".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm.Quantity.EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."Gen. Posting Type".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."Gen. Bus. Posting Group".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."Gen. Prod. Posting Group".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."Document Date".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."External Document No.".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."VAT Bus. Posting Group".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."VAT Prod. Posting Group".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."Additional-Currency Posting".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."VAT Amount".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."Amount (LCY)".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."Currency Index Entry".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."Currency Index".EDITABLE("Line Type" = "Line Type"::Entry);
      CurrForm."Financial Instrument No.".EDITABLE("Line Type" = "Line Type"::Entry);
      //NC S1910 > PCH
      CurrForm.Unreversable.EDITABLE("Line Type" = "Line Type"::Entry);
      //NC S1910 < PCH
      }
      FieldEditable := ("Line Type" = "Line Type"::Entry);
      //NC NOS-26 < SPA
    END;

    PROCEDURE UpdateIndentation@1101495002();
    VAR
      EventUploadTemplate@1101495000 : Record 50170;
    BEGIN
      EventUploadTemplate.SETVIEW(GETVIEW);
      EventUploadTemplate.SETRANGE("Mapping Code","Mapping Code");
      EventUploadTemplate.SETRANGE("Event Code","Event Code");
      EventUploadTemplate.SETRANGE("Deal Type","Deal Type");
      EventUploadTemplate.SETRANGE("Settlement Type","Settlement Type");
      EventUploadTemplate.SETRANGE("Deal Between Books","Deal Between Books");

      //NCS2019 > AAP
      EventUploadTemplate.SETRANGE("Company Name","Company Name");
      //NCS2019 < AAP

      IF EventUploadTemplate.FINDSET THEN REPEAT
        EventUploadTemplate.Indentation := EventUploadTemplate.CalcIndentation;
        EventUploadTemplate.MODIFY;
      UNTIL EventUploadTemplate.NEXT = 0;
    END;

    BEGIN
    {
      NC S1753 PCH
      NC S1910 PCH добавлено поле Unreversable
      NC S1914 PCH добавлены AssistEdit для полей
      NC S1947 PCH
      NC S2008 PCH
      NC S2019 Добавлено поле "Company Name". Поле включено в первичный ключ.
      NC NCS-2420 DP Changed function CheskLines
    }
    END.
  }
}

