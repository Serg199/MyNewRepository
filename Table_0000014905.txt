OBJECT Table 14905 Letter of Attorney Header
{
  OBJECT-PROPERTIES
  {
    Date=09.09.14;
    Time=12:00:00;
    Version List=NAVRU8.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               IF "No." = '' THEN BEGIN
                 PurchSetup.GET;
                 PurchSetup.TESTFIELD("Letter of Attorney Nos.");
                 "No." := NoSeriesManagement.GetNextNo(PurchSetup."Letter of Attorney Nos.",WORKDATE,TRUE);
               END;

               VALIDATE("Document Date",WORKDATE);

               CompanyInformation.GET;
               "User ID" := USERID;
               "Last Modified" := CURRENTDATETIME;

               VALIDATE("Source Document No.");
             END;

    OnModify=BEGIN
               "User ID" := USERID;
               "Last Modified" := CURRENTDATETIME;
             END;

    OnDelete=VAR
               LetterOfAttorneyLine@1210000 : Record 14906;
             BEGIN
               TestStatusOpen;

               LetterOfAttorneyLine.SETRANGE("Letter of Attorney No.","No.");
               LetterOfAttorneyLine.DELETEALL;
             END;

    OnRename=BEGIN
               ERROR(Text003,TABLECAPTION);
             END;

    CaptionML=[ENU=Letter of Attorney Header;
               RUS=Заголовок доверенности];
    LookupPageID=Page14906;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;CaptionML=[ENU=No.;
                                                              RUS=Номер] }
    { 2   ;   ;Document Date       ;Date          ;OnValidate=BEGIN
                                                                TestStatusOpen;

                                                                IF "Document Date" <> 0D THEN
                                                                  "Validity Date" := CALCDATE('<+15D>',"Document Date")
                                                                ELSE
                                                                  "Validity Date" := 0D;
                                                              END;

                                                   CaptionML=[ENU=Document Date;
                                                              RUS=Дата документа] }
    { 3   ;   ;Validity Date       ;Date          ;OnValidate=BEGIN
                                                                TestStatusOpen;
                                                              END;

                                                   CaptionML=[ENU=Validity Date;
                                                              RUS=Срок действия] }
    { 4   ;   ;Letter of Attorney No.;Code20      ;OnValidate=BEGIN
                                                                TestStatusOpen;
                                                              END;

                                                   CaptionML=[ENU=Letter of Attorney No.;
                                                              RUS=Номер доверенности] }
    { 10  ;   ;Employee No.        ;Code20        ;TableRelation=Employee;
                                                   OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                IF "Employee No." <> '' THEN BEGIN
                                                                  Employee.GET("Employee No.");
                                                                  "Employee Full Name" := Employee."First Name" + ' ' +
                                                                    Employee."Middle Name" + ' ' + Employee."Last Name";
                                                                  "Employee Job Title" := Employee."Job Title";
                                                                END ELSE BEGIN
                                                                  "Employee Full Name" := '';
                                                                  "Employee Job Title" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Employee No.;
                                                              RUS=Код сотрудника] }
    { 11  ;   ;Employee Full Name  ;Text100       ;OnValidate=BEGIN
                                                                TestStatusOpen;
                                                              END;

                                                   CaptionML=[ENU=Employee Full Name;
                                                              RUS=ФИО сотрудника] }
    { 12  ;   ;Employee Job Title  ;Text50        ;OnValidate=BEGIN
                                                                TestStatusOpen;
                                                              END;

                                                   CaptionML=[ENU=Employee Job Title;
                                                              RUS=Должность сотрудника] }
    { 16  ;   ;Source Document Type;Option        ;OnValidate=BEGIN
                                                                TestStatusOpen;
                                                              END;

                                                   CaptionML=[ENU=Source Document Type;
                                                              RUS=Тип исходного документа];
                                                   OptionCaptionML=[ENU=" ,Quote,Order,Invoice,,Blanket Order";
                                                                    RUS=" ,Предложение,Заказ,Счет,,Общий заказ"];
                                                   OptionString=[ ,Quote,Order,Invoice,,Blanket Order] }
    { 17  ;   ;Source Document No. ;Code20        ;OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                IF "Source Document No." <> '' THEN BEGIN
                                                                  PurchHeader.GET("Source Document Type" - 1,"Source Document No.");
                                                                  VALIDATE("Buy-from Vendor No.",PurchHeader."Buy-from Vendor No.");
                                                                  "Document Description" :=
                                                                    STRSUBSTNO(Text002,
                                                                      PurchHeader."Document Type",PurchHeader."No.",PurchHeader."Document Date");
                                                                END ELSE
                                                                  VALIDATE("Buy-from Vendor No.",'');
                                                              END;

                                                   OnLookup=BEGIN
                                                              LookupSourceDocument;
                                                            END;

                                                   CaptionML=[ENU=Source Document No.;
                                                              RUS=Номер исходного документа] }
    { 20  ;   ;Buy-from Vendor No. ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=BEGIN
                                                                TestStatusOpen;
                                                                IF "Buy-from Vendor No." <> '' THEN BEGIN
                                                                  Vendor.GET("Buy-from Vendor No.");
                                                                  "Buy-from Vendor Name" := Vendor.Name + Vendor."Name 2";
                                                                END ELSE
                                                                  "Buy-from Vendor Name" := '';
                                                              END;

                                                   CaptionML=[ENU=Buy-from Vendor No.;
                                                              RUS=Код поставщика] }
    { 21  ;   ;Buy-from Vendor Name;Text250       ;OnValidate=BEGIN
                                                                TestStatusOpen;
                                                              END;

                                                   CaptionML=[ENU=Buy-from Vendor Name;
                                                              RUS=Название поставщика] }
    { 30  ;   ;Document Description;Text100       ;OnValidate=BEGIN
                                                                TestStatusOpen;
                                                              END;

                                                   CaptionML=[ENU=Document Description;
                                                              RUS=Описание документа] }
    { 40  ;   ;Status              ;Option        ;CaptionML=[ENU=Status;
                                                              RUS=Статус];
                                                   OptionCaptionML=[ENU=Open,Released;
                                                                    RUS=Открыто,Выпущено];
                                                   OptionString=Open,Released;
                                                   Editable=No }
    { 45  ;   ;User ID             ;Code50        ;TableRelation=User."User Name";
                                                   OnLookup=VAR
                                                              UserMgt@1000 : Codeunit 418;
                                                            BEGIN
                                                              UserMgt.LookupUserID("User ID");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=User ID;
                                                              RUS=Код пользователя];
                                                   Editable=No }
    { 46  ;   ;Last Modified       ;DateTime      ;CaptionML=[ENU=Last Modified;
                                                              RUS=Дата последнего изменения];
                                                   Editable=No }
    { 50  ;   ;Realization Check   ;Text30        ;CaptionML=[ENU=Realization Check;
                                                              RUS=Отметка о выполнении] }
    { 97  ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              RUS=Серия номеров];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Letter of Attorney No.                   }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Vendor@1210003 : Record 23;
      PurchHeader@1210004 : Record 38;
      CompanyInformation@1210005 : Record 79;
      PurchSetup@1210001 : Record 312;
      Employee@1210000 : Record 5200;
      NoSeriesManagement@1210002 : Codeunit 396;
      Text001@1210006 : TextConst 'ENU=Existing Letter of Attorney Lines will be deleted. Continue?;RUS=Существующие строки доверенности будут удалены. Продолжить?';
      Text002@1210007 : TextConst 'ENU=%1 No. %2 from %3.;RUS=%1 номер %2 из %3.';
      Text003@1210011 : TextConst 'ENU=You cannot rename %1.;RUS=Переименование %1 невозможно.';

    PROCEDURE Release@1210000();
    BEGIN
      Status := Status::Released;
      MODIFY;
    END;

    PROCEDURE Reopen@1210001();
    BEGIN
      Status := Status::Open;
      MODIFY;
    END;

    PROCEDURE CreateAttorneyLetterLines@1210002();
    VAR
      PurchaseLine@1210000 : Record 39;
      LetterOfAttorneyLine@1210001 : Record 14906;
    BEGIN
      TestStatusOpen;

      LetterOfAttorneyLine.RESET;
      LetterOfAttorneyLine.SETRANGE("Letter of Attorney No.","No.");
      IF LetterOfAttorneyLine.FINDFIRST THEN BEGIN
        IF NOT CONFIRM(Text001) THEN
          EXIT;
        LetterOfAttorneyLine.DELETEALL;
      END;

      PurchaseLine.SETRANGE("Document Type","Source Document Type" - 1);
      PurchaseLine.SETRANGE("Document No.","Source Document No.");
      IF PurchaseLine.FINDSET THEN
        REPEAT
          IF (PurchaseLine."Qty. to Receive" <> 0) OR
             (PurchaseLine.Type = PurchaseLine.Type::" ")
          THEN BEGIN
            LetterOfAttorneyLine.INIT;
            LetterOfAttorneyLine."Letter of Attorney No." := "No.";
            LetterOfAttorneyLine."Line No." := PurchaseLine."Line No.";
            CASE PurchaseLine.Type OF
              PurchaseLine.Type::Item:
                LetterOfAttorneyLine.Type := LetterOfAttorneyLine.Type::Item;
              PurchaseLine.Type::"Fixed Asset":
                LetterOfAttorneyLine.Type := LetterOfAttorneyLine.Type::"Fixed Asset";
              ELSE
                LetterOfAttorneyLine.Type := LetterOfAttorneyLine.Type::" "
            END;
            IF LetterOfAttorneyLine.Type IN [LetterOfAttorneyLine.Type::Item,LetterOfAttorneyLine.Type::"Fixed Asset"] THEN
              LetterOfAttorneyLine."No." := PurchaseLine."No."
            ELSE
              LetterOfAttorneyLine."No." := '';
            LetterOfAttorneyLine.Description := PurchaseLine.Description;
            LetterOfAttorneyLine."Description 2" := PurchaseLine."Description 2";
            LetterOfAttorneyLine.Quantity := PurchaseLine."Qty. to Receive";
            LetterOfAttorneyLine."Unit of Measure Code" := PurchaseLine."Unit of Measure Code";
            LetterOfAttorneyLine."Unit of Measure" := PurchaseLine."Unit of Measure";
            LetterOfAttorneyLine.INSERT;
          END;
        UNTIL PurchaseLine.NEXT = 0;
    END;

    PROCEDURE Print@1210003();
    VAR
      LetterOfAttorneyHeader@1210000 : Record 14905;
    BEGIN
      LetterOfAttorneyHeader := Rec;
      LetterOfAttorneyHeader.SETRECFILTER;
      REPORT.RUNMODAL(REPORT::"Letter of Attorney M-2A",TRUE,FALSE,LetterOfAttorneyHeader);
    END;

    PROCEDURE TestStatusOpen@1210004();
    BEGIN
      TESTFIELD(Status,Status::Open);
    END;

    PROCEDURE AssistEdit@1210005() : Boolean;
    BEGIN
      PurchSetup.GET;
      PurchSetup.TESTFIELD("Letter of Attorney Nos.");
      IF NoSeriesManagement.SelectSeries(PurchSetup."Letter of Attorney Nos.",xRec."No. Series","No. Series") THEN BEGIN
        NoSeriesManagement.SetSeries("No.");
        EXIT(TRUE);
      END;
    END;

    PROCEDURE LookupSourceDocument@1210008();
    VAR
      PurchaseHeader@1210000 : Record 38;
    BEGIN
      IF "Source Document Type" = "Source Document Type"::" " THEN
        EXIT;
      PurchaseHeader.FILTERGROUP(2);
      PurchaseHeader.SETRANGE("Document Type","Source Document Type" - 1);
      IF "Source Document Type" = "Source Document Type"::Invoice THEN
        PurchaseHeader.SETRANGE("Empl. Purchase",FALSE);
      PurchaseHeader.FILTERGROUP(0);
      IF PAGE.RUNMODAL(0,PurchaseHeader) = ACTION::LookupOK THEN
        VALIDATE("Source Document No.",PurchaseHeader."No.");
    END;

    BEGIN
    END.
  }
}

