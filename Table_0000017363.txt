OBJECT Table 17363 Employee Job Entry
{
  OBJECT-PROPERTIES
  {
    Date=15.09.15;
    Time=12:00:00;
    Version List=NAVRU9.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Employee Job Entry;
               RUS=Трудовая книжка сотрудника];
    DrillDownPageID=Page17373;
  }
  FIELDS
  {
    { 1   ;   ;Entry No.           ;Integer       ;CaptionML=[ENU=Entry No.;
                                                              RUS=Номер операции] }
    { 3   ;   ;Employee No.        ;Code20        ;TableRelation=Employee;
                                                   CaptionML=[ENU=Employee No.;
                                                              RUS=Код сотрудника] }
    { 4   ;   ;Starting Date       ;Date          ;OnValidate=BEGIN
                                                                IF "Insured Period Starting Date" = 0D THEN
                                                                  VALIDATE("Insured Period Starting Date","Starting Date");
                                                              END;

                                                   CaptionML=[ENU=Starting Date;
                                                              RUS=Дата начала] }
    { 5   ;   ;Ending Date         ;Date          ;OnValidate=BEGIN
                                                                IF "Insured Period Ending Date" = 0D THEN
                                                                  VALIDATE("Insured Period Ending Date","Ending Date");
                                                              END;

                                                   CaptionML=[ENU=Ending Date;
                                                              RUS=Дата окончания] }
    { 6   ;   ;Contract No.        ;Code20        ;TableRelation="Labor Contract";
                                                   CaptionML=[ENU=Contract No.;
                                                              RUS=Номер договора] }
    { 7   ;   ;Person No.          ;Code20        ;TableRelation=Person;
                                                   CaptionML=[ENU=Person No.;
                                                              RUS=Код физ. лица] }
    { 8   ;   ;Employer No.        ;Code20        ;TableRelation=Contact WHERE (Type=CONST(Company));
                                                   CaptionML=[ENU=Employer No.;
                                                              RUS=Код работодателя] }
    { 9   ;   ;Type                ;Option        ;CaptionML=[ENU=Type;
                                                              RUS=Тип];
                                                   OptionCaptionML=[ENU=" ,Hire,Transfer,Termination";
                                                                    RUS=" ,Найм,Перевод,Увольнение"];
                                                   OptionString=[ ,Hire,Transfer,Termination] }
    { 10  ;   ;Position No.        ;Code20        ;TableRelation=Position;
                                                   OnValidate=BEGIN
                                                                IF Position.GET("Position No.") THEN BEGIN
                                                                  "Org. Unit Code" := Position."Org. Unit Code";
                                                                  "Job Title Code" := Position."Job Title Code";
                                                                  "Category Code" := Position."Category Code";
                                                                  "Calendar Code" := Position."Calendar Code";
                                                                  "Worktime Norm" := Position."Worktime Norm";
                                                                  "Use Trial Period" := Position."Use Trial Period";
                                                                  "Trial Period" := Position."Trial Period Description";
                                                                  "Liability for Breakage" := Position."Liability for Breakage";
                                                                  "Hire Conditions" := Position."Hire Conditions";
                                                                  "Kind of Work" := Position."Kind of Work";
                                                                  "Conditions of Work" := Position."Conditions of Work";
                                                                  "Out-of-Staff" := Position."Out-of-Staff";
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Position No.;
                                                              RUS=Номер позиции] }
    { 12  ;   ;Position Changed    ;Boolean       ;CaptionML=[ENU=Position Changed;
                                                              RUS=Позиция изменена] }
    { 15  ;   ;Supplement No.      ;Code10        ;CaptionML=[ENU=Supplement No.;
                                                              RUS=Номер приложения] }
    { 20  ;   ;Insured Period Starting Date;Date  ;OnValidate=BEGIN
                                                                IF ("Insured Period Starting Date" <> 0D) AND ("Insured Period Starting Date" < "Starting Date") THEN
                                                                  ERROR(Text14700,
                                                                    FIELDCAPTION("Insured Period Starting Date"),
                                                                    FIELDCAPTION("Starting Date"));
                                                              END;

                                                   CaptionML=[ENU=Insured Period Starting Date;
                                                              RUS=Дата начала страхового периода] }
    { 21  ;   ;Insured Period Ending Date;Date    ;OnValidate=BEGIN
                                                                IF ("Insured Period Ending Date" <> 0D) AND ("Insured Period Ending Date" > "Ending Date") THEN
                                                                  ERROR(Text14701,
                                                                    FIELDCAPTION("Insured Period Ending Date"),
                                                                    FIELDCAPTION("Ending Date"));
                                                              END;

                                                   CaptionML=[ENU=Insured Period Ending Date;
                                                              RUS=Дата окончания страхового периода] }
    { 30  ;   ;Uninterrupted Service;Boolean      ;CaptionML=[ENU=Uninterrupted Service;
                                                              RUS=Непрерывный стаж] }
    { 31  ;   ;Org. Unit Code      ;Code10        ;TableRelation="Organizational Unit";
                                                   CaptionML=[ENU=Org. Unit Code;
                                                              RUS=Код подразделения] }
    { 32  ;   ;Job Title Code      ;Code10        ;TableRelation="Job Title";
                                                   CaptionML=[ENU=Job Title Code;
                                                              RUS=Код должности] }
    { 33  ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              RUS=Номер документа];
                                                   Editable=No }
    { 34  ;   ;Document Date       ;Date          ;CaptionML=[ENU=Document Date;
                                                              RUS=Дата документа];
                                                   Editable=No }
    { 35  ;   ;Speciality Code     ;Code10        ;CaptionML=[ENU=Speciality Code;
                                                              RUS=Код специальности] }
    { 36  ;   ;Speciality Name     ;Text50        ;CaptionML=[ENU=Speciality Name;
                                                              RUS=Название специальности] }
    { 40  ;   ;Position Rate       ;Decimal       ;CaptionML=[ENU=Position Rate;
                                                              RUS=Ставка позиции] }
    { 43  ;   ;Category Code       ;Code10        ;TableRelation="Employee Category";
                                                   CaptionML=[ENU=Category Code;
                                                              RUS=Код категории] }
    { 44  ;   ;Calendar Code       ;Code10        ;TableRelation="Payroll Calendar";
                                                   CaptionML=[ENU=Calendar Code;
                                                              RUS=Код календаря] }
    { 46  ;   ;Worktime Norm       ;Code10        ;TableRelation="Worktime Norm";
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Worktime Norm;
                                                              RUS=Норма рабочего времени] }
    { 47  ;   ;Use Trial Period    ;Boolean       ;CaptionML=[ENU=Use Trial Period;
                                                              RUS=Исп. испытательный срок] }
    { 48  ;   ;Trial Period        ;Text50        ;CaptionML=[ENU=Trial Period;
                                                              RUS=Испытательный срок] }
    { 49  ;   ;Liability for Breakage;Option      ;CaptionML=[ENU=Liability for Breakage;
                                                              RUS=Материальная ответственность];
                                                   OptionCaptionML=[ENU=None,Team,Personal;
                                                                    RUS=Нет,Командная,Личная];
                                                   OptionString=None,Team,Personal }
    { 50  ;   ;Hire Conditions     ;Code20        ;TableRelation="General Directory".Code WHERE (Type=FILTER(Hire Condition));
                                                   CaptionML=[ENU=Hire Conditions;
                                                              RUS=Условия найма] }
    { 51  ;   ;Kind of Work        ;Option        ;CaptionML=[ENU=Kind of Work;
                                                              RUS=Вид работы];
                                                   OptionCaptionML=[ENU=" ,Permanent,Temporary,Seasonal";
                                                                    RUS=" ,Постоянная,Временная,Сезонная"];
                                                   OptionString=[ ,Permanent,Temporary,Seasonal] }
    { 52  ;   ;Work Mode           ;Option        ;CaptionML=[ENU=Work Mode;
                                                              RUS=Характер работы];
                                                   OptionCaptionML=[ENU=Primary Job,Internal Co-work,External Co-work;
                                                                    RUS=Основная работа,Внутреннее совмест.,Внешнее совмест.];
                                                   OptionString=Primary Job,Internal Co-work,External Co-work }
    { 53  ;   ;Conditions of Work  ;Option        ;CaptionML=[ENU=Conditions of Work;
                                                              RUS=Условия труда];
                                                   OptionCaptionML=[ENU=" ,Regular,Heavy,Unhealthy,Very Heavy";
                                                                    RUS=" ,Нормальные,Тяжелые,Вредные,Очень тяжелые"];
                                                   OptionString=[ ,Regular,Heavy,Unhealthy,Very Heavy] }
    { 54  ;   ;Out-of-Staff        ;Boolean       ;CaptionML=[ENU=Out-of-Staff;
                                                              RUS=Внештатная позиция] }
    { 55  ;   ;Working Schedule    ;Option        ;CaptionML=[ENU=Working Schedule;
                                                              RUS=График работы];
                                                   OptionCaptionML=[ENU=" ,5 Days,160 Hours,Day - Night - 2 Home,One in Three,Hour Tariff,Other";
                                                                    RUS=" ,5 дней,160 часов,День - ночь - 2 дня дома,День через три,Почасовой тариф,Прочее"];
                                                   OptionString=[ ,5 Days,160 Hours,Day - Night - 2 Home,One in Three,Hour Tariff,Other] }
    { 56  ;   ;Territorial Conditions;Code20      ;TableRelation="General Directory".Code WHERE (Type=FILTER(Territor. Condition));
                                                   CaptionML=[ENU=Territorial Conditions;
                                                              RUS=Территориальные условия] }
    { 57  ;   ;Special Conditions  ;Code20        ;TableRelation="General Directory".Code WHERE (Type=FILTER(Special Work Condition));
                                                   CaptionML=[ENU=Special Conditions;
                                                              RUS=Особые условия] }
    { 58  ;   ;Time Unit of Measure;Option        ;CaptionML=[ENU=Time Unit of Measure;
                                                              RUS=Единица измерения времени];
                                                   OptionCaptionML=[ENU=Day,Hour;
                                                                    RUS=День,Час];
                                                   OptionString=Day,Hour }
    { 59  ;   ;Record of Service Reason;Code20    ;TableRelation="General Directory".Code WHERE (Type=FILTER(Countable Service Reason));
                                                   CaptionML=[ENU=Calc Seniority: Reason;
                                                              RUS=Исчисл. труд. стаж: основание] }
    { 60  ;   ;Record of Service Additional;Code20;TableRelation="General Directory".Code WHERE (Type=FILTER(Countable Service Addition));
                                                   CaptionML=[ENU=Calc Seniority: Addition;
                                                              RUS=Исчисл. труд. стаж: доп. свед.] }
    { 61  ;   ;Service Years Reason;Code20        ;TableRelation="General Directory".Code WHERE (Type=FILTER(Long Service Reason));
                                                   CaptionML=[ENU=Long Service: Reason;
                                                              RUS=Выслуга лет: основание] }
    { 62  ;   ;Service Years Additional;Code20    ;TableRelation="General Directory".Code WHERE (Type=FILTER(Long Service Addition));
                                                   CaptionML=[ENU=Service Years Additional;
                                                              RUS=Дополнительный стаж] }
  }
  KEYS
  {
    {    ;Entry No.                                }
    {    ;Employee No.,Starting Date,Ending Date  ;Clustered=Yes }
    {    ;Position No.,Starting Date              ;SumIndexFields=Position Rate }
    {    ;Org. Unit Code,Job Title Code,Starting Date;
                                                   SumIndexFields=Position Rate }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text14700@1210000 : TextConst 'ENU=%1 should not be earlier than %2.;RUS=%1 не должна быть раньше %2.';
      Text14701@1210001 : TextConst 'ENU=%1 should not be later than %2.;RUS=%1 не должна быть позже %2.';
      Position@1210003 : Record 17370;
      EmployeeJobEntry@1210004 : Record 17363;
      Text14702@1210005 : TextConst 'ENU=%1 is not employed for period from %2 to %3.;RUS=%1 не является сотрудником за период с %2 по %3.';

    PROCEDURE PositionChangeExist@1210000(EmployeeNo@1210000 : Code[20];StartDate@1210001 : Date;EndDate@1210002 : Date) : Boolean;
    VAR
      JobsNo@1210003 : Integer;
    BEGIN
      EmployeeJobEntry.RESET;
      EmployeeJobEntry.SETCURRENTKEY("Employee No.","Starting Date","Ending Date");
      EmployeeJobEntry.SETRANGE("Employee No.",EmployeeNo);
      EmployeeJobEntry.SETFILTER("Starting Date",'..%1',EndDate);
      EmployeeJobEntry.SETFILTER("Ending Date",'%1|%2..',0D,StartDate);
      JobsNo := EmployeeJobEntry.COUNT;
      CASE JobsNo OF
        0:
          ERROR(Text14702,EmployeeNo,StartDate,EndDate);
        1:
          EXIT(FALSE);
        ELSE
          EXIT(TRUE);
      END;
    END;

    PROCEDURE GetEmployeeNo@1210007(PositionNo@1210002 : Code[20];CurrDate@1210001 : Date) : Code[20];
    BEGIN
      EmployeeJobEntry.RESET;
      EmployeeJobEntry.SETCURRENTKEY("Employee No.","Starting Date","Ending Date");
      EmployeeJobEntry.SETRANGE("Position No.",PositionNo);
      EmployeeJobEntry.SETFILTER("Starting Date",'..%1',CurrDate);
      EmployeeJobEntry.SETFILTER("Ending Date",'%1|%2..',0D,CurrDate);
      EmployeeJobEntry.SETRANGE("Position Changed",TRUE);
      IF EmployeeJobEntry.FINDFIRST THEN
        EXIT(EmployeeJobEntry."Employee No.");

      EXIT('');
    END;

    BEGIN
    END.
  }
}

