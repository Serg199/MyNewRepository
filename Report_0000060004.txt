OBJECT Report 60004 Temp
{
  OBJECT-PROPERTIES
  {
    Date=27.03.17;
    Time=14:18:19;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    OnPreReport=VAR
                  ConsSource@1101495000 : Record 50001;
                  Company@1101495001 : Record 2000000006;
                BEGIN
                  GenJournalLine.RESET;
                  GenJournalLine.SETRANGE("Journal Template Name", 'GENJL');
                  GenJournalLine.SETRANGE("Journal Batch Name", 'GJNEW_S');
                  IF GenJournalLine.FINDSET THEN
                  REPEAT
                    IF GenJournalLine."Account Type" = GenJournalLine."Account Type"::Vendor THEN BEGIN
                      IF GenJournalLine."Agreement No." = 'DUMMY' THEN BEGIN
                        Vendor.GET(GenJournalLine."Account No.");
                        IF Vendor."Agreement Posting" = Vendor."Agreement Posting"::"No Agreement" THEN BEGIN
                          GenJournalLine."Agreement No." := '';
                          GenJournalLine.MODIFY;
                        END;
                      END;
                    END;
                  UNTIL GenJournalLine.NEXT = 0;

                  {
                  IF Company.FINDSET THEN
                  REPEAT
                    GLSetup.CHANGECOMPANY(Company.Name);
                    GLSetup.GET;
                    IF GLSetup."LCY Code" <> Company."Balance Currency Code" THEN
                      MESSAGE(Company.Name);
                  UNTIL Company.NEXT = 0;
                  }
                  {
                  Company.RESET;
                  IF Company.FINDSET THEN
                  REPEAT
                    ConsSource.INIT;
                    ConsSource.Code := Company."Legal Entity Id";
                    ConsSource."Company Name" := Company.Name;
                    ConsSource.Name := 'Импорт из ' + Company.Name;
                    ConsSource."Gen. Journal Batch" := 'GJNEW';
                    ConsSource."Source  No. Series" := 'GJGEN';
                    ConsSource."Import Format" := ConsSource."Import Format"::FromNavision;
                    ConsSource."Reposted Journal Batch" := 'GJREP';
                    ConsSource."Reposted  No. Series" := 'GJREP';
                    ConsSource."Removed Journal Batch" := 'GJREM';
                    ConsSource."Removed  No. Series" := 'GJREM';
                    ConsSource."Business Unit Code" := Company."Legal Entity Id";
                    ConsSource."Mapping Code" := 'CONS_IFRS';
                    IF ConsSource.INSERT(TRUE) THEN;
                  UNTIL Company.NEXT = 0;
                  }
                  {
                  CurrencyExchangeRate.RESET;
                  CurrencyExchangeRate.SETRANGE("Currency Code",'RUR$');
                  IF CurrencyExchangeRate.FINDSET THEN
                  REPEAT
                    CurrencyExchangeRate."Relational Adjmt Exch Rate Amt" := 1;
                    CurrencyExchangeRate."Relational Exch. Rate Amount" := 1;
                    CurrencyExchangeRate.MODIFY;
                  UNTIL CurrencyExchangeRate.NEXT = 0;
                  }
                  {
                  CoAMapping.RESET;
                  CoAMapping.SETRANGE("Mapping Code", 'TDU');
                  IF CoAMapping.FINDSET THEN REPEAT
                    CoAMapping.MODIFY(TRUE);
                  UNTIL CoAMapping.NEXT = 0;
                  }
                  {
                  ConsDataBuffer.RESET;
                  ConsDataBuffer.SETRANGE("Cons. Source Code", 'ERA');
                  IF ConsDataBuffer.FINDSET THEN REPEAT
                    ConsDataBuffer."Debit Dimension 5 Value Code" := DelSpace(ConsDataBuffer."Debit Dimension 5 Value Code");
                    ConsDataBuffer."Debit Dimension 5 Value Code" := DelSpace(ConsDataBuffer."Debit Dimension 5 Value Code");

                    ConsDataBuffer."Credit Dimension 5 Value Code" := DelSpace(ConsDataBuffer."Credit Dimension 5 Value Code");
                    ConsDataBuffer."Credit Dimension 5 Value Code" := DelSpace(ConsDataBuffer."Credit Dimension 5 Value Code");

                    ConsDataBuffer.MODIFY;
                  UNTIL ConsDataBuffer.NEXT = 0;
                  }
                  {
                  DimensionValue.RESET;
                  DimensionValue.SETRANGE("Dimension Code", 'BANK.ACC');
                  IF DimensionValue.FINDSET THEN
                  REPEAT
                    IF NOT BankAccount.GET(DimensionValue.Code) THEN BEGIN
                      BankAccount1.INIT;
                      BankAccount1."No." := DimensionValue.Code;
                      BankAccount1.INSERT;
                    END;
                  UNTIL DimensionValue.NEXT = 0;
                  }
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ConsDataBuffer@1000000000 : Record 50008;
      pos@1000000001 : Integer;
      BankAccount@1000000002 : Record 270;
      BankAccount1@1000000004 : Record 270;
      DimensionValue@1000000003 : Record 349;
      CoAMapping@1000000005 : Record 50002;
      CurrencyExchangeRate@1000000006 : Record 330;
      GLEntry@1101495000 : Record 17;
      Company@1101495001 : Record 2000000006;
      GLSetup@1101495002 : Record 98;
      GenJournalLine@1101495003 : Record 81;
      Vendor@1101495004 : Record 23;

    PROCEDURE DelSpace@1000000000(InputText@1000000000 : Text[30]) : Text[30];
    BEGIN
      pos := STRPOS(InputText, ' ');
      IF pos <> 0 THEN BEGIN
        InputText := DELSTR(InputText, pos, 1);
        InputText := INSSTR(InputText, 'X', pos);
      END;

      EXIT(InputText);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>6c12d40b-66f8-4f34-b9c1-bd9413a707c3</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <Code>Public Function BlankZero(ByVal Value As Decimal)
    if Value = 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankPos(ByVal Value As Decimal)
    if Value &gt; 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankZeroAndPos(ByVal Value As Decimal)
    if Value &gt;= 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankNeg(ByVal Value As Decimal)
    if Value &lt; 0 then
        Return ""
    end if
    Return Value
End Function

Public Function BlankNegAndZero(ByVal Value As Decimal)
    if Value &lt;= 0 then
        Return ""
    end if
    Return Value
End Function
</Code>
  <Language>=User!Language</Language>
  <ConsumeContainerWhitespace>true</ConsumeContainerWhitespace>
  <rd:ReportUnitType>Inch</rd:ReportUnitType>
  <rd:ReportID>0eeb6585-38ae-40f1-885b-8d50088d51b4</rd:ReportID>
</Report>
    END_OF_RDLDATA
  }
}

