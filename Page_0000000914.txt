OBJECT Page 914 Assemble-to-Order Lines
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Assemble-to-Order Lines;
               RUS=Строки сборки на заказ];
    SourceTable=Table901;
    DataCaptionExpr=GetCaption;
    DelayedInsert=Yes;
    PopulateAllFields=Yes;
    PageType=Worksheet;
    AutoSplitKey=Yes;
    OnAfterGetRecord=BEGIN
                       UpdateAvailWarning;
                     END;

    OnDeleteRecord=VAR
                     AssemblyLineReserve@1000 : Codeunit 926;
                   BEGIN
                     IF (Quantity <> 0) AND ItemExists("No.") THEN BEGIN
                       COMMIT;
                       IF NOT AssemblyLineReserve.DeleteLineConfirm(Rec) THEN
                         EXIT(FALSE);
                       AssemblyLineReserve.DeleteLine(Rec);
                     END;
                   END;

    ActionList=ACTIONS
    {
      { 27      ;    ;ActionContainer;
                      CaptionML=[ENU=Line;
                                 RUS=Строка];
                      ActionContainerType=ActionItems }
      { 37      ;1   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Reserve;
                                 RUS=&Резервировать];
                      Promoted=Yes;
                      Image=LineReserve;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 ShowReservation;
                               END;
                                }
      { 26      ;1   ;Action    ;
                      CaptionML=[ENU=Select Item Substitution;
                                 RUS=Выбрать замену товара];
                      Image=SelectItemSubstitution;
                      OnAction=BEGIN
                                 ShowItemSub;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 14      ;1   ;Action    ;
                      CaptionML=[ENU=Explode BOM;
                                 RUS=Раскрыть спецификацию];
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeAssemblyList;
                                 CurrPage.UPDATE;
                               END;
                                }
      { 16      ;1   ;Action    ;
                      CaptionML=[ENU=Assembly BOM;
                                 RUS=Сборочная спецификация];
                      Image=BulletList;
                      OnAction=BEGIN
                                 ShowAssemblyList;
                               END;
                                }
      { 44      ;1   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create Inventor&y Movement;
                                 RUS=Создать перемещение &запасов];
                      Image=CreatePutAway;
                      OnAction=VAR
                                 AssemblyHeader@1000 : Record 900;
                                 ATOMovementsCreated@1001 : Integer;
                                 TotalATOMovementsToBeCreated@1002 : Integer;
                               BEGIN
                                 AssemblyHeader.GET("Document Type","Document No.");
                                 AssemblyHeader.CreateInvtMovement(FALSE,FALSE,FALSE,ATOMovementsCreated,TotalATOMovementsToBeCreated);
                               END;
                                }
      { 45      ;    ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 36      ;1   ;Action    ;
                      CaptionML=[ENU=Show Document;
                                 RUS=Показать документ];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=View;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ATOLink@1002 : Record 904;
                                 SalesLine@1000 : Record 37;
                               BEGIN
                                 ATOLink.GET("Document Type","Document No.");
                                 SalesLine.GET(ATOLink."Document Type",ATOLink."Document No.",ATOLink."Document Line No.");
                                 ATOLink.ShowAsm(SalesLine);
                               END;
                                }
      { 23      ;1   ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[ENU=Dimensions;
                                 RUS=Измерения];
                      ToolTipML=[ENU=View or edit dimensions, such as area, project, or department, that you can assign to sales and purchase documents to distribute costs and analyze transaction history.;
                                 RUS=Просмотр или изменение измерений, например области, проекта или отдела, которые можно назначать документам покупки и продажи для распределения себестоимости и анализа истории транзакций.];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 40      ;1   ;Action    ;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=[ENU=Item &Tracking Lines;
                                 RUS=Строки трассир&овки товаров];
                      Promoted=Yes;
                      Image=ItemTrackingLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 OpenItemTrackingLines;
                               END;
                                }
      { 25      ;1   ;ActionGroup;
                      CaptionML=[ENU=Item Availability by;
                                 RUS=Наличие товара по];
                      ActionContainerType=NewDocumentItems;
                      Image=ItemAvailability }
      { 39      ;2   ;Action    ;
                      CaptionML=[ENU=Event;
                                 RUS=Событие];
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromAsmLine(Rec,ItemAvailFormsMgt.ByEvent);
                               END;
                                }
      { 28      ;2   ;Action    ;
                      CaptionML=[ENU=Period;
                                 RUS=Период];
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromAsmLine(Rec,ItemAvailFormsMgt.ByPeriod);
                               END;
                                }
      { 32      ;2   ;Action    ;
                      CaptionML=[ENU=Variant;
                                 RUS=Вариант];
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromAsmLine(Rec,ItemAvailFormsMgt.ByVariant);
                               END;
                                }
      { 29      ;2   ;Action    ;
                      AccessByPermission=TableData 14=R;
                      CaptionML=[ENU=Location;
                                 RUS=Склад];
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromAsmLine(Rec,ItemAvailFormsMgt.ByLocation);
                               END;
                                }
      { 43      ;2   ;Action    ;
                      CaptionML=[ENU=BOM Level;
                                 RUS=Уровень спецификации];
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromAsmLine(Rec,ItemAvailFormsMgt.ByBOM);
                               END;
                                }
      { 21      ;1   ;Action    ;
                      CaptionML=[ENU=Comments;
                                 RUS=Комментарии];
                      RunObject=Page 907;
                      RunPageLink=Document Type=FIELD(Document Type),
                                  Document No.=FIELD(Document No.),
                                  Document Line No.=FIELD(Line No.);
                      Image=ViewComments }
      { 34      ;1   ;Action    ;
                      Name=ShowWarning;
                      CaptionML=[ENU=Show Warning;
                                 RUS=Показывать предупреждение];
                      Image=ShowWarning;
                      OnAction=BEGIN
                                 ShowAvailabilityWarning;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1   ;0   ;Container ;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                Name=Group;
                GroupType=Repeater }

    { 33  ;2   ;Field     ;
                DrillDown=Yes;
                ToolTipML=[ENU=Specifies Yes if the assembly component is not available in the quantity and on the due date of the assembly order line.;
                           RUS=Указывает значение "Да", если сборочный компонент недоступен в количестве и в срок, указанный в строке заказа на сборку.];
                BlankZero=Yes;
                SourceExpr="Avail. Warning";
                OnDrillDown=BEGIN
                              ShowAvailabilityWarning;
                            END;
                             }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies if the assembly order line is of type Item or Resource.;
                           RUS=Определяет, имеет ли строка заказа на сборку тип "Товар" или "Ресурс".];
                SourceExpr=Type }

    { 35  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the item or resource that is represented by the assembly order line.;
                           RUS=Определяет товар или ресурс, представленный в строке заказа на сборку.];
                SourceExpr="No." }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the description of the assembly component.;
                           RUS=Определяет описание сборочного компонента.];
                SourceExpr=Description }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the second description of the assembly component.;
                           RUS=Определяет второе описание сборочного компонента.];
                SourceExpr="Description 2";
                Visible=FALSE }

    { 4   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the item variant of the assembly component.;
                           RUS=Определяет код варианта товара сборочного компонента.];
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 12  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the location from which you want to post consumption of the assembly component.;
                           RUS=Определяет склад, на котором требуется учесть потребление сборочного компонента.];
                SourceExpr="Location Code";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the unit of measure in which the assembly component is consumed on the assembly order.;
                           RUS=Определяет единицу измерения, по которой сборочный компонент учтен в заказе на сборку.];
                SourceExpr="Unit of Measure Code" }

    { 13  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many units of the assembly component are required to assemble one assembly item.;
                           RUS=Определяет количество единиц сборочного компонента, необходимое для сборки одного сборочного элемента.];
                SourceExpr="Quantity per" }

    { 15  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many units of the assembly component are expected to be consumed.;
                           RUS=Определяет количество единиц сборочного компонента, которое ожидается для потребления.];
                SourceExpr=Quantity }

    { 20  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many units of the assembly component have been reserved for this assembly order line.;
                           RUS=Определяет количество единиц сборочного компонента, которое было зарезервировано для этой строки заказа на сборку.];
                SourceExpr="Reserved Quantity" }

    { 38  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many units of the assembly component have been posted as consumed during the assembly.;
                           RUS=Определяет количество единиц сборочного компонента, которое было учтено как потребленное во время сборки.];
                SourceExpr="Consumed Quantity";
                Visible=FALSE }

    { 41  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many units of the assembly component have been moved or picked for the assembly order line.;
                           RUS=Определяет количество единиц сборочного компонента, которое было перемещено или подобрано для строки заказа на сборку.];
                SourceExpr="Qty. Picked";
                Visible=FALSE }

    { 42  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how many units of the assembly component are currently on warehouse pick lines.;
                           RUS=Определяет количество единиц сборочного компонента, имеющееся в данный момент в строках складского подбора.];
                SourceExpr="Pick Qty.";
                Visible=FALSE }

    { 24  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the date when the assembly component must be available for consumption by the assembly order.;
                           RUS=Определяет дату, на которую сборочный компонент должен быть доступен для потребления в заказе на сборку.];
                SourceExpr="Due Date";
                Visible=FALSE }

    { 30  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the lead-time offset that is defined for the assembly component on the assembly BOM.;
                           RUS=Определяет подготовительный период, который указан для сборочного компонента в сборочной спецификации.];
                SourceExpr="Lead-Time Offset";
                Visible=FALSE }

    { 9   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the shortcut dimension 1 value that the assembly order line is linked to.;
                           RUS=Определяет код значения ярлыка измерения 1, с которым связана строка заказа на сборку.];
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 10  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the shortcut dimension 2 value that the assembly order line is linked to.;
                           RUS=Определяет код значения ярлыка измерения 2, с которым связана строка заказа на сборку.];
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 11  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the code of the bin where assembly components must be placed prior to assembly and from where they are posted as consumed.;
                           RUS=Определяет код ячейки, куда должны быть помещены сборочные компоненты перед сборкой и откуда они учитываются как потребленные.];
                SourceExpr="Bin Code";
                Visible=FALSE }

    { 17  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the inventory posting group to which the item on this assembly order line is posted.;
                           RUS=Определяет товарную группу, в которой учитывается товар из данной строки заказа на сборку.];
                SourceExpr="Inventory Posting Group";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the unit cost of the assembly component.;
                           RUS=Определяет себестоимость единицы сборочного компонента.];
                SourceExpr="Unit Cost";
                Visible=FALSE }

    { 19  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the cost of the assembly order line.;
                           RUS=Определяет себестоимость строки заказа на сборку.];
                SourceExpr="Cost Amount" }

    { 46  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the quantity per unit of measure of the component item on the assembly order line.;
                           RUS=Определяет количество на единицу измерения товара компонента в строке заказа на сборку.];
                SourceExpr="Qty. per Unit of Measure";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies how the cost of the resource on the assembly order line is allocated to the assembly item.;
                           RUS=Определяет способ распределения стоимости ресурса в строке заказа на сборку для сборочного элемента.];
                SourceExpr="Resource Usage Type" }

    { 7   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of a particular item ledger entry that the assembly order line is applied to.;
                           RUS=Определяет номер конкретной операции книги товаров, к которой применяется строка заказа на сборку.];
                SourceExpr="Appl.-to Item Entry";
                Visible=FALSE }

    { 31  ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the number of the item ledger entry that the assembly order line is applied from.;
                           RUS=Определяет номер операции книги товаров, из которой была применена строка заказа на сборку.];
                SourceExpr="Appl.-from Item Entry";
                Visible=FALSE }

  }
  CODE
  {
    VAR
      ItemAvailFormsMgt@1000 : Codeunit 353;

    LOCAL PROCEDURE GetCaption@1() : Text[250];
    VAR
      ObjTransln@1009 : Record 377;
      AsmHeader@1003 : Record 900;
      SourceTableName@1002 : Text[250];
      SourceFilter@1001 : Text[200];
      Description@1000 : Text[100];
    BEGIN
      Description := '';

      IF AsmHeader.GET("Document Type","Document No.") THEN BEGIN
        SourceTableName := ObjTransln.TranslateObject(ObjTransln."Object Type"::Table,27);
        SourceFilter := AsmHeader."Item No.";
        Description := AsmHeader.Description;
      END;
      EXIT(STRSUBSTNO('%1 %2 %3',SourceTableName,SourceFilter,Description));
    END;

    BEGIN
    END.
  }
}

