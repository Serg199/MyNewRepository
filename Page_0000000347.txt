OBJECT Page 347 Report Selection - Purchase
{
  OBJECT-PROPERTIES
  {
    Date=25.10.16;
    Time=12:00:00;
    Version List=NAVW110.00,NAVRU10.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Report Selection - Purchase;
               RUS=Выбор отчета - покупка];
    SaveValues=Yes;
    SourceTable=Table77;
    PageType=Worksheet;
    OnOpenPage=BEGIN
                 SetUsageFilter(FALSE);
               END;

    OnNewRecord=BEGIN
                  NewRecord;
                END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 11  ;1   ;Field     ;
                CaptionML=[ENU=Usage;
                           RUS=Использование];
                ToolTipML=[ENU=Specifies which type of document the report is used for.;
                           RUS=Определяет тип документа, для которого используется отчет.];
                OptionCaptionML=[ENU=Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Receipt,Return Shipment,Purchase Document - Test,Prepayment Document - Test,P.Arch. Quote,P.Arch. Order,P. Arch. Return Order,UnPosted Advance Statement,Advance Statement,UnPosted Invoice,UnPosted Cr. Memo;
                                 RUS=Предложение,Общий заказ,Заказ,Счет,Возврат,Кредит-нота,Прих. накладная,Возвр. расх. накладная,Документ покупки - тест,Документ предоплаты - тест,Арх. предложение покупки,Арх. заказ на покупку,Арх. заказ на возврат покупки,Неучт. авансовый отчет,Авансовый отчет,Неучт. счет,Неучт. кредит-нота];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=ReportUsage2;
                OnValidate=BEGIN
                             SetUsageFilter(TRUE);
                           END;
                            }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a number that indicates where this report is in the printing order.;
                           RUS=Определяет номер, задающий место отчета в очереди печати.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Sequence }

    { 9   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of the report that the program will print.;
                           RUS=Определяет код отчета, который будет напечатан программой.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Report ID";
                LookupPageID=Objects }

    { 4   ;2   ;Field     ;
                DrillDown=No;
                ToolTipML=[ENU=Specifies the name of the report.;
                           RUS=Определяет имя отчета.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Report Caption" }

    { 1210000;2;Field     ;
                ToolTipML=[ENU=Specifies if the report ID is the default for the report selection.;
                           RUS=Определяет, выбран ли этот код отчета по умолчанию.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr=Default }

    { 1210002;2;Field     ;
                ToolTipML=[ENU=Specifies if the report selection will be exported.;
                           RUS=Определяет, будет ли экспортироваться выбранное в отчете.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Excel Export" }

    { 7   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that summarized information, such as invoice number, due date, and payment service link, will be inserted in the body of the email that you send.;
                           RUS=Определяет сводные сведения, такие как номер счета, срок оплаты, ссылка на службу платежей, которые будут вставлены в текст отправляемого сообщения электронной почты.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Use for Email Body" }

    { 6   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies that the related document will be attached to the email.;
                           RUS=Указывает, что связанный документ будет вложен в сообщение электронной почты.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Use for Email Attachment" }

    { 5   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies the ID of the email body layout that is used.;
                           RUS=Определяет идентификатор используемого макета содержания сообщения электронной почты.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Email Body Layout Code";
                Visible=FALSE }

    { 3   ;2   ;Field     ;
                ToolTipML=[ENU=Specifies a description of the email body layout that is used.;
                           RUS=Определяет описание используемого макета содержания сообщения электронной почты.];
                ApplicationArea=#Basic,#Suite;
                SourceExpr="Email Body Layout Description";
                OnDrillDown=VAR
                              CustomReportLayout@1000 : Record 9650;
                            BEGIN
                              IF CustomReportLayout.LookupLayoutOK("Report ID") THEN
                                VALIDATE("Email Body Layout Code",CustomReportLayout.Code);
                            END;
                             }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      ReportUsage2@1000 : 'Quote,Blanket Order,Order,Invoice,Return Order,Credit Memo,Receipt,Return Shipment,Purchase Document - Test,Prepayment Document - Test,P.Arch. Quote,P.Arch. Order,P. Arch. Return Order,UnPosted Advance Statement,Advance Statement,UnPosted Invoice,UnPosted Cr. Memo';

    LOCAL PROCEDURE SetUsageFilter@1(ModifyRec@1000 : Boolean);
    BEGIN
      IF ModifyRec THEN
        IF MODIFY THEN;
      FILTERGROUP(2);
      CASE ReportUsage2 OF
        ReportUsage2::Quote:
          SETRANGE(Usage,Usage::PQ);
        ReportUsage2::"Blanket Order":
          SETRANGE(Usage,Usage::PB);
        ReportUsage2::Order:
          SETRANGE(Usage,Usage::PO);
        ReportUsage2::Invoice:
          SETRANGE(Usage,Usage::PI);
        ReportUsage2::"Return Order":
          SETRANGE(Usage,Usage::PRet);
        ReportUsage2::"Credit Memo":
          SETRANGE(Usage,Usage::PCM);
        ReportUsage2::Receipt:
          SETRANGE(Usage,Usage::PR);
        ReportUsage2::"Return Shipment":
          SETRANGE(Usage,Usage::PRS);
        ReportUsage2::"Purchase Document - Test":
          SETRANGE(Usage,Usage::PT);
        ReportUsage2::"Prepayment Document - Test":
          SETRANGE(Usage,Usage::PTP);
        ReportUsage2::"P.Arch. Quote":
          SETRANGE(Usage,Usage::PAQ);
        ReportUsage2::"P.Arch. Order":
          SETRANGE(Usage,Usage::PAO);
        ReportUsage2::"P. Arch. Return Order":
          SETRANGE(Usage,Usage::PARO);
        ReportUsage2::"UnPosted Advance Statement":
          SETRANGE(Usage,Usage::UAS);
        ReportUsage2::"Advance Statement":
          SETRANGE(Usage,Usage::AS);
        ReportUsage2::"UnPosted Invoice":
          SETRANGE(Usage,Usage::UPI);
        ReportUsage2::"UnPosted Cr. Memo":
          SETRANGE(Usage,Usage::UPCM);
      END;
      FILTERGROUP(0);
      CurrPage.UPDATE;
    END;

    BEGIN
    END.
  }
}

