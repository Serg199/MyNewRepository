OBJECT Codeunit 5610 Calculate Depreciation
{
  OBJECT-PROPERTIES
  {
    Date=29.05.17;
    Time=14:18:04;
    Modified=Yes;
    Version List=NAVW17.10,NAVRU7.10,NOS-26;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      DeprBook@1000 : Record 5611;
      FADeprBook@1001 : Record 5612;
      GLSetup@1210001 : Record 98;
      CalculateNormalDepr@1002 : Codeunit 5611;
      CalculateCustom1Depr@1003 : Codeunit 5612;
      DeprPeriod@1210000 : Date;
      DeprBonus@1470000 : Boolean;
      "NCV>"@1101495002 : Integer;
      Is30DaysPeriod@1101495001 : Boolean;
      "NCV<"@1101495000 : Integer;

    PROCEDURE Calculate@1(VAR DeprAmount@1000 : Decimal;VAR Custom1Amount@1001 : Decimal;VAR NumberOfDays@1002 : Integer;VAR Custom1NumberOfDays@1003 : Integer;FANo@1004 : Code[20];DeprBookCode@1005 : Code[10];UntilDate@1006 : Date;EntryAmounts@1007 : ARRAY [4] OF Decimal;DateFromProjection@1008 : Date;DaysInPeriod@1009 : Integer);
    BEGIN
      DeprAmount := 0;
      Custom1Amount := 0;
      NumberOfDays := 0;
      Custom1NumberOfDays := 0;
      DeprPeriod := CALCDATE('<-CM>',UntilDate);
      IF NOT DeprBook.GET(DeprBookCode) THEN
        EXIT;

      GLSetup.GET;
      IF GLSetup."Enable Russian Accounting" THEN
        DeprBook.TESTFIELD("Allow Depreciation",TRUE);

      IF NOT FADeprBook.GET(FANo,DeprBookCode) THEN
        EXIT;

      CheckDeprDaysInFiscalYear(DateFromProjection = 0D,UntilDate);

      IF DeprBook."Use Custom 1 Depreciation" AND
         (FADeprBook."Depr. Ending Date (Custom 1)" > 0D)
      THEN
        CalculateCustom1Depr.Calculate(
          DeprAmount,Custom1Amount,NumberOfDays,
          Custom1NumberOfDays,FANo,DeprBookCode,UntilDate,
          EntryAmounts,DateFromProjection,DaysInPeriod)
      ELSE BEGIN
        IF GLSetup."Enable Russian Accounting" THEN
          CalculateNormalDepr.DepreciationBonus(DeprBonus);

        //NC T#4651 > DP
        CalculateNormalDepr.SetForce30DaysPeriod(Is30DaysPeriod);
        //NC T#4651 < DP

        CalculateNormalDepr.Calculate(
          DeprAmount,NumberOfDays,FANo,DeprBookCode,UntilDate,
          EntryAmounts,DateFromProjection,DaysInPeriod,DeprPeriod);
      END;
    END;

    LOCAL PROCEDURE CheckDeprDaysInFiscalYear@2(CheckDeprDays@1001 : Boolean;UntilDate@1000 : Date);
    VAR
      DepreciationCalc@1004 : Codeunit 5616;
      FADateCalc@1002 : Codeunit 5617;
      FiscalYearBegin@1003 : Date;
      NoOfDeprDays@1005 : Integer;
    BEGIN
      IF DeprBook."Allow more than 360/365 Days" OR NOT CheckDeprDays THEN
        EXIT;
      IF  (FADeprBook."Depreciation Method" = FADeprBook."Depreciation Method"::"Declining-Balance 1") OR
         (FADeprBook."Depreciation Method" = FADeprBook."Depreciation Method"::"DB1/SL")
      THEN
        FiscalYearBegin := FADateCalc.GetFiscalYear(DeprBook.Code,UntilDate);
      IF DeprBook."Fiscal Year 365 Days" THEN
        NoOfDeprDays := 365
      ELSE
        NoOfDeprDays := 360;
      IF DepreciationCalc.DeprDays(
           FiscalYearBegin,UntilDate,DeprBook."Fiscal Year 365 Days") > NoOfDeprDays
      THEN
        DeprBook.TESTFIELD("Allow more than 360/365 Days");
    END;

    PROCEDURE DepreciationBonus@1470001(DeprBonus2@1470000 : Boolean);
    BEGIN
      DeprBonus := DeprBonus2;
    END;

    PROCEDURE SetForce30DaysPeriod@1101495000(Is30DaysPeriod2@1101495000 : Boolean);
    BEGIN
      //NC T#4651 > DP
      Is30DaysPeriod := Is30DaysPeriod2;
      //NC T#4651 < DP
    END;

    BEGIN
    {
      NC T#4651 DP Периодический расчет амортизации
    }
    END.
  }
}

