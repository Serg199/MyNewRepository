OBJECT Codeunit 14947 INV-18 Report Helper
{
  OBJECT-PROPERTIES
  {
    Date=09.09.14;
    Time=12:00:00;
    Version List=NAVRU8.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ExcelReportBuilderManager@1210000 : Codeunit 14930;
      StdRepMgt@1210001 : Codeunit 12401;
      LocMgt@1210007 : Codeunit 12400;
      TotalAmount@1210002 : ARRAY [4] OF Decimal;

    PROCEDURE InitReportTemplate@1210001();
    VAR
      FASetup@1210000 : Record 5603;
    BEGIN
      FASetup.GET;
      FASetup.TESTFIELD("INV-18 Template Code");
      ExcelReportBuilderManager.InitTemplate(FASetup."INV-18 Template Code");
      ExcelReportBuilderManager.SetSheet('Sheet1');
    END;

    PROCEDURE FillHeader@1210000(EmployeeNo@1210008 : Code[20];Reason@1210004 : Text;DocumentNo@1210000 : Text;DocumentDate@1210002 : Text;LineDocNo@1210011 : Text;StartingDate@1210003 : Text;EndingDate@1210005 : Text;CreationDate@1210006 : Text;UntilDate@1210007 : Date;Member1@1210009 : Code[20];Member2@1210010 : Code[20]);
    VAR
      CompanyInfo@1210001 : Record 79;
    BEGIN
      CompanyInfo.GET;
      ExcelReportBuilderManager.AddSection('REPORTHEADER');
      ExcelReportBuilderManager.AddDataToSection(
        'CompanyName',StdRepMgt.GetCompanyName);
      ExcelReportBuilderManager.AddDataToSection(
        'Department',StdRepMgt.GetEmpDepartment(EmployeeNo));
      ExcelReportBuilderManager.AddDataToSection(
        'OKPO',CompanyInfo."OKPO Code");

      ExcelReportBuilderManager.AddDataToSection('Reason',Reason);
      ExcelReportBuilderManager.AddDataToSection('InventoryOrder',DocumentNo);
      ExcelReportBuilderManager.AddDataToSection('InventoryDate',DocumentDate);
      ExcelReportBuilderManager.AddDataToSection('StartDate',StartingDate);
      ExcelReportBuilderManager.AddDataToSection('EndDate',EndingDate);
      ExcelReportBuilderManager.AddDataToSection('OrderNum',LineDocNo);
      ExcelReportBuilderManager.AddDataToSection('OrderDate',CreationDate);
      IF UntilDate <> 0D THEN BEGIN
        ExcelReportBuilderManager.AddDataToSection('DayDateEnd',FORMAT(DATE2DMY(UntilDate,1)));
        ExcelReportBuilderManager.AddDataToSection('MonthDateEnd',LocMgt.Month2Text(UntilDate));
        ExcelReportBuilderManager.AddDataToSection('YearDateEnd',FORMAT(DATE2DMY(UntilDate,1)));
      END;
      ExcelReportBuilderManager.AddDataToSection('ResponsibleTitle1',StdRepMgt.GetEmpPosition(Member1));
      ExcelReportBuilderManager.AddDataToSection('ResponsibleName1',StdRepMgt.GetEmpName(Member1));
      ExcelReportBuilderManager.AddDataToSection('ResponsibleTitle2',StdRepMgt.GetEmpPosition(Member2));
      ExcelReportBuilderManager.AddDataToSection('ResponsibleName2',StdRepMgt.GetEmpName(Member2));

      CLEAR(TotalAmount);
    END;

    PROCEDURE FillPageHeader@1210004();
    VAR
      InvActLine@1210001 : Record 14909;
    BEGIN
      ExcelReportBuilderManager.AddSection('PAGEHEADER');
    END;

    PROCEDURE FillLine@1210007(LineNo@1210003 : Text;Description@1210004 : Text;ManufacturingYear@1210000 : Text;InventoryNumber@1210001 : Text;FactoryNo@1210002 : Text;PassportNo@1210005 : Text;QtyPlus@1210006 : Decimal;AmountPlus@1210007 : Decimal;QtyMinus@1210008 : Decimal;AmountMinus@1210009 : Decimal);
    BEGIN
      IF NOT ExcelReportBuilderManager.TryAddSectionWithPlaceForFooter('BODY','PAGEFOOTER') THEN BEGIN
        FillPageFooter;
        ExcelReportBuilderManager.AddPagebreak;
        FillPageHeader;
        ExcelReportBuilderManager.AddSection('BODY');
      END;

      ExcelReportBuilderManager.AddDataToSection('LineNo',LineNo);
      ExcelReportBuilderManager.AddDataToSection('Name',Description);
      ExcelReportBuilderManager.AddDataToSection('YearOfRelease',ManufacturingYear);
      ExcelReportBuilderManager.AddDataToSection('InventoryNum',InventoryNumber);
      ExcelReportBuilderManager.AddDataToSection('SerialNum',FactoryNo);
      ExcelReportBuilderManager.AddDataToSection('PassportNum',PassportNo);
      ExcelReportBuilderManager.AddDataToSection('SurplusQty',FORMAT(QtyPlus));
      ExcelReportBuilderManager.AddDataToSection('SurplusAmount',FORMAT(AmountPlus));
      ExcelReportBuilderManager.AddDataToSection('DeficitQty',FORMAT(QtyMinus));
      ExcelReportBuilderManager.AddDataToSection('DeficitAmount',FORMAT(AmountMinus));

      TotalAmount[1] += QtyPlus;
      TotalAmount[2] += AmountPlus;
      TotalAmount[3] += QtyMinus;
      TotalAmount[4] += AmountMinus;
    END;

    PROCEDURE FillPageFooter@1210012();
    BEGIN
      ExcelReportBuilderManager.AddSection('PAGEFOOTER');

      ExcelReportBuilderManager.AddDataToSection('surplusQtyTotal',FORMAT(TotalAmount[1]));
      ExcelReportBuilderManager.AddDataToSection('surplusAmountTotal',FORMAT(TotalAmount[2]));
      ExcelReportBuilderManager.AddDataToSection('deficitQtyTotal',FORMAT(TotalAmount[3]));
      ExcelReportBuilderManager.AddDataToSection('deficitAmountTotal',FORMAT(TotalAmount[4]));
    END;

    PROCEDURE FillFooter@1210013(RespTitle@1210001 : Text;RespName@1210002 : Text);
    BEGIN
      ExcelReportBuilderManager.AddSection('REPORTFOOTER');

      ExcelReportBuilderManager.AddDataToSection('RespTitle1',RespTitle);
      ExcelReportBuilderManager.AddDataToSection('RespName1',RespName);
      ExcelReportBuilderManager.AddPagebreak;
    END;

    PROCEDURE ExportData@1210002();
    BEGIN
      ExcelReportBuilderManager.ExportData;
    END;

    PROCEDURE ExportDataFile@1210010(FileName@1210000 : Text);
    BEGIN
      ExcelReportBuilderManager.ExportDataToClientFile(FileName);
    END;

    BEGIN
    END.
  }
}

