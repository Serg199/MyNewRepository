OBJECT Table 50205 GFO Header
{
  OBJECT-PROPERTIES
  {
    Date=29.09.16;
    Time=16:37:20;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    DataPerCompany=No;
    OnModify=BEGIN
               "Last Date Modified" := TODAY;
             END;

    OnDelete=BEGIN
               g_recGFOLine.SETRANGE("GFO Code",Code);
               g_recGFOLine.DELETEALL;
               g_recLineAcType.SETRANGE("GFO Code",Code);
               g_recLineAcType.DELETEALL;
               g_recLineCountCat.SETRANGE("GFO Code",Code);
               g_recLineCountCat.DELETEALL;
               g_recLineFIType.SETRANGE("GFO Code",Code);
               g_recLineFIType.DELETEALL;
             END;

    OnRename=BEGIN
               "Last Date Modified" := TODAY;
             END;

    CaptionML=[ENU=GFO Header;
               RUS=ГФО Заголовок];
    LookupPageID=Page50269;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=[ENU=Code;
                                                              RUS=Код];
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Text120       ;CaptionML=[ENU=Name;
                                                              RUS=Название] }
    { 10  ;   ;Line Type           ;Option        ;OnValidate=VAR
                                                                GLEntry@1000 : Record 17;
                                                                GLBudgetEntry@1001 : Record 96;
                                                              BEGIN
                                                                IF "Line Type" <> xRec."Line Type" THEN
                                                                  Totaling := '';
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              RUS=Тип];
                                                   OptionCaptionML=[ENU=Posting,Heading,Total,Begin-Total,End-Total;
                                                                    RUS=Учетный,Заголовок,Сумма,От-Сумма,До-Сумма];
                                                   OptionString=Posting,Heading,Total,Begin-Total,End-Total }
    { 15  ;   ;Indentation         ;Integer       ;CaptionML=[ENU=Indentation;
                                                              RUS=Отступ];
                                                   MinValue=0 }
    { 20  ;   ;Totaling            ;Text250       ;TableRelation="GFO Header";
                                                   OnValidate=BEGIN
                                                                IF NOT ("Line Type" IN ["Line Type"::Total,"Line Type"::"End-Total"]) THEN
                                                                  FIELDERROR("Line Type");
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Totaling;
                                                              RUS=Группировка] }
    { 40  ;   ;Last Date Modified  ;Date          ;CaptionML=[ENU=Last Date Modified;
                                                              RUS=Дата Посл. Изменения];
                                                   Editable=No }
    { 50  ;   ;Blocked             ;Boolean       ;CaptionML=[ENU=Blocked;
                                                              RUS=Блокировка] }
    { 55  ;   ;Category Code       ;Code20        ;TableRelation="GFO Directories".Code WHERE (Type=CONST(Category));
                                                   OnValidate=BEGIN
                                                                IF g_recGFODirectories.GET(g_recGFODirectories.Type::" ","Category Code")
                                                                  THEN "Category Name" := g_recGFODirectories.Name;
                                                              END;

                                                   CaptionML=[ENU=Category Code;
                                                              RUS=Категория Код] }
    { 60  ;   ;Category Name       ;Text150       ;CaptionML=[ENU=Category;
                                                              RUS=Категория Название] }
    { 70  ;   ;Title               ;Text250       ;CaptionML=[ENU=Title;
                                                              RUS=Наименование Строки ГФО] }
    { 80  ;   ;BS Line Code        ;Code20        ;TableRelation="GFO Directories".Code WHERE (Type=CONST(BS Line));
                                                   OnValidate=BEGIN
                                                                IF g_recGFODirectories.GET(g_recGFODirectories.Type::"PL Line","BS Line Code")
                                                                  THEN "BS Line Name" := g_recGFODirectories.Name;
                                                              END;

                                                   CaptionML=[ENU=BS Line Code;
                                                              RUS=BS Строка Код] }
    { 85  ;   ;BS Line Name        ;Text150       ;CaptionML=[ENU=BS Line Name;
                                                              RUS=BS Строка Название] }
    { 90  ;   ;PL Line Code        ;Code20        ;TableRelation="GFO Directories".Code WHERE (Type=CONST(PL Line));
                                                   OnValidate=BEGIN
                                                                IF g_recGFODirectories.GET(g_recGFODirectories.Type::Category,"PL Line Code")
                                                                  THEN "PL Line Name" := g_recGFODirectories.Name;
                                                              END;

                                                   CaptionML=[ENU=PL Line Code;
                                                              RUS=PL Строка Код] }
    { 100 ;   ;PL Line Name        ;Text150       ;CaptionML=[ENU=PL Line Name;
                                                              RUS=PL Строка Название] }
    { 110 ;   ;IFRS Account        ;Code5         ;CaptionML=RUS=IFRS Счет }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      g_recGFODirectories@1000000000 : Record 50206;
      Text000@1000000006 : TextConst 'ENU="This function updates the indentation of all the GFO Code in the GFO. ";RUS="Эта функция обновляет отступы в ГФО. "';
      Text001@1000000005 : TextConst 'ENU="All codes between a Begin-Total and the matching End-Total are indented one level. ";RUS="Все коды между От-Сумма и соответствующим До-Сумма сдвигаются вправо на один уровень. "';
      Text002@1000000004 : TextConst 'ENU=The Totaling for each End-total is also updated.;RUS=Поле "Группировка" для каждого ГФО типа "До-Сумма" также обновляется.';
      Text003@1000000003 : TextConst 'ENU=\\Do you want to indent the chart of GFO?;RUS=\\Следует использовать отступы в ГФО?';
      Text004@1000000002 : TextConst 'ENU=Indenting the Chart of Accounts #1##########;RUS=Обновление отступов             #1##########';
      Text005@1000000001 : TextConst 'ENU=End-Total %1 is missing a matching Begin-Total.;RUS=ГФО типа До-Сумма %1 отсутствует для соответствующего От-Сумма.';
      g_recGFO@1000000008 : Record 50205;
      g_recGFOLine@1000000009 : Record 50209;
      g_recLineAcType@1000000011 : Record 50210;
      g_recLineCountCat@1000000012 : Record 50212;
      g_recLineFIType@1000000013 : Record 50213;
      g_dlgWindow@1000000007 : Dialog;
      g_Code@1000000010 : ARRAY [10] OF Code[20];

    PROCEDURE fn_Indent@1000000000();
    VAR
      l_int@1000000000 : Integer;
    BEGIN
      IF NOT
         CONFIRM(
           Text000 +
           Text001 +
           Text002 +
           Text003,TRUE)
      THEN
        EXIT;

      g_dlgWindow.OPEN(Text004);

      WITH g_recGFO DO
        IF FIND('-') THEN
          REPEAT
            g_dlgWindow.UPDATE(1,Code);

            IF "Line Type" = "Line Type"::"End-Total" THEN BEGIN
              IF l_int < 1 THEN
                ERROR(
                  Text005,
                  Code);
              Totaling := g_Code[l_int] + '..' + Code;
              l_int := l_int - 1;
            END;

            Indentation := l_int;
            MODIFY;

            IF "Line Type" = "Line Type"::"Begin-Total" THEN BEGIN
              l_int := l_int + 1;
              g_Code[l_int] := Code;
            END;
          UNTIL NEXT = 0;

      g_dlgWindow.CLOSE;
    END;

    BEGIN
    {
      NC NCS-2092 Created
    }
    END.
  }
}

